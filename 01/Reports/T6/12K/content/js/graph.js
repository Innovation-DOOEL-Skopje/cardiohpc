/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 50.0, "minX": 0.0, "maxY": 24002.0, "series": [{"data": [[0.0, 50.0], [0.1, 51.0], [0.2, 52.0], [0.3, 67.0], [0.4, 72.0], [0.5, 75.0], [0.6, 77.0], [0.7, 79.0], [0.8, 80.0], [0.9, 80.0], [1.0, 81.0], [1.1, 81.0], [1.2, 81.0], [1.3, 81.0], [1.4, 81.0], [1.5, 81.0], [1.6, 81.0], [1.7, 81.0], [1.8, 82.0], [1.9, 82.0], [2.0, 82.0], [2.1, 82.0], [2.2, 83.0], [2.3, 83.0], [2.4, 88.0], [2.5, 89.0], [2.6, 89.0], [2.7, 91.0], [2.8, 94.0], [2.9, 98.0], [3.0, 99.0], [3.1, 100.0], [3.2, 101.0], [3.3, 102.0], [3.4, 103.0], [3.5, 105.0], [3.6, 111.0], [3.7, 120.0], [3.8, 128.0], [3.9, 149.0], [4.0, 165.0], [4.1, 1910.0], [4.2, 1972.0], [4.3, 2045.0], [4.4, 2090.0], [4.5, 2127.0], [4.6, 2151.0], [4.7, 2185.0], [4.8, 2205.0], [4.9, 2232.0], [5.0, 2255.0], [5.1, 2265.0], [5.2, 2284.0], [5.3, 2299.0], [5.4, 2313.0], [5.5, 2321.0], [5.6, 2332.0], [5.7, 2344.0], [5.8, 2354.0], [5.9, 2376.0], [6.0, 2384.0], [6.1, 2394.0], [6.2, 2398.0], [6.3, 2411.0], [6.4, 2425.0], [6.5, 2438.0], [6.6, 2451.0], [6.7, 2465.0], [6.8, 2489.0], [6.9, 2500.0], [7.0, 2515.0], [7.1, 2521.0], [7.2, 2527.0], [7.3, 2534.0], [7.4, 2541.0], [7.5, 2549.0], [7.6, 2554.0], [7.7, 2565.0], [7.8, 2579.0], [7.9, 2588.0], [8.0, 2597.0], [8.1, 2621.0], [8.2, 2638.0], [8.3, 2658.0], [8.4, 2678.0], [8.5, 2694.0], [8.6, 2702.0], [8.7, 2737.0], [8.8, 2756.0], [8.9, 2767.0], [9.0, 2781.0], [9.1, 2809.0], [9.2, 2816.0], [9.3, 2833.0], [9.4, 2848.0], [9.5, 2881.0], [9.6, 2890.0], [9.7, 2936.0], [9.8, 2967.0], [9.9, 2993.0], [10.0, 3015.0], [10.1, 3062.0], [10.2, 3081.0], [10.3, 3101.0], [10.4, 3116.0], [10.5, 3128.0], [10.6, 3135.0], [10.7, 3158.0], [10.8, 3202.0], [10.9, 3237.0], [11.0, 3258.0], [11.1, 3270.0], [11.2, 3288.0], [11.3, 3306.0], [11.4, 3315.0], [11.5, 3326.0], [11.6, 3341.0], [11.7, 3350.0], [11.8, 3356.0], [11.9, 3361.0], [12.0, 3365.0], [12.1, 3389.0], [12.2, 3401.0], [12.3, 3412.0], [12.4, 3425.0], [12.5, 3438.0], [12.6, 3452.0], [12.7, 3459.0], [12.8, 3475.0], [12.9, 3481.0], [13.0, 3490.0], [13.1, 3497.0], [13.2, 3508.0], [13.3, 3519.0], [13.4, 3531.0], [13.5, 3544.0], [13.6, 3554.0], [13.7, 3575.0], [13.8, 3593.0], [13.9, 3639.0], [14.0, 3684.0], [14.1, 3694.0], [14.2, 3719.0], [14.3, 3746.0], [14.4, 3760.0], [14.5, 3762.0], [14.6, 3765.0], [14.7, 3775.0], [14.8, 3778.0], [14.9, 3786.0], [15.0, 3794.0], [15.1, 3807.0], [15.2, 3814.0], [15.3, 3843.0], [15.4, 3884.0], [15.5, 3893.0], [15.6, 3902.0], [15.7, 3926.0], [15.8, 3935.0], [15.9, 3948.0], [16.0, 3958.0], [16.1, 3971.0], [16.2, 3977.0], [16.3, 3988.0], [16.4, 4009.0], [16.5, 4031.0], [16.6, 4046.0], [16.7, 4060.0], [16.8, 4077.0], [16.9, 4093.0], [17.0, 4108.0], [17.1, 4120.0], [17.2, 4129.0], [17.3, 4137.0], [17.4, 4145.0], [17.5, 4165.0], [17.6, 4188.0], [17.7, 4206.0], [17.8, 4234.0], [17.9, 4252.0], [18.0, 4263.0], [18.1, 4283.0], [18.2, 4292.0], [18.3, 4299.0], [18.4, 4308.0], [18.5, 4318.0], [18.6, 4332.0], [18.7, 4347.0], [18.8, 4350.0], [18.9, 4368.0], [19.0, 4374.0], [19.1, 4397.0], [19.2, 4411.0], [19.3, 4420.0], [19.4, 4428.0], [19.5, 4433.0], [19.6, 4442.0], [19.7, 4455.0], [19.8, 4461.0], [19.9, 4478.0], [20.0, 4486.0], [20.1, 4495.0], [20.2, 4504.0], [20.3, 4512.0], [20.4, 4518.0], [20.5, 4539.0], [20.6, 4565.0], [20.7, 4578.0], [20.8, 4587.0], [20.9, 4594.0], [21.0, 4600.0], [21.1, 4604.0], [21.2, 4611.0], [21.3, 4619.0], [21.4, 4627.0], [21.5, 4635.0], [21.6, 4648.0], [21.7, 4676.0], [21.8, 4685.0], [21.9, 4700.0], [22.0, 4712.0], [22.1, 4723.0], [22.2, 4737.0], [22.3, 4756.0], [22.4, 4774.0], [22.5, 4788.0], [22.6, 4794.0], [22.7, 4805.0], [22.8, 4816.0], [22.9, 4832.0], [23.0, 4849.0], [23.1, 4869.0], [23.2, 4888.0], [23.3, 4894.0], [23.4, 4911.0], [23.5, 4928.0], [23.6, 4948.0], [23.7, 4961.0], [23.8, 4969.0], [23.9, 4972.0], [24.0, 4984.0], [24.1, 5002.0], [24.2, 5018.0], [24.3, 5033.0], [24.4, 5045.0], [24.5, 5061.0], [24.6, 5079.0], [24.7, 5090.0], [24.8, 5095.0], [24.9, 5103.0], [25.0, 5111.0], [25.1, 5112.0], [25.2, 5114.0], [25.3, 5132.0], [25.4, 5137.0], [25.5, 5151.0], [25.6, 5167.0], [25.7, 5177.0], [25.8, 5187.0], [25.9, 5196.0], [26.0, 5220.0], [26.1, 5230.0], [26.2, 5254.0], [26.3, 5267.0], [26.4, 5282.0], [26.5, 5287.0], [26.6, 5297.0], [26.7, 5301.0], [26.8, 5305.0], [26.9, 5313.0], [27.0, 5319.0], [27.1, 5325.0], [27.2, 5334.0], [27.3, 5339.0], [27.4, 5343.0], [27.5, 5357.0], [27.6, 5368.0], [27.7, 5377.0], [27.8, 5387.0], [27.9, 5396.0], [28.0, 5410.0], [28.1, 5417.0], [28.2, 5425.0], [28.3, 5428.0], [28.4, 5431.0], [28.5, 5434.0], [28.6, 5448.0], [28.7, 5468.0], [28.8, 5472.0], [28.9, 5479.0], [29.0, 5490.0], [29.1, 5499.0], [29.2, 5504.0], [29.3, 5513.0], [29.4, 5522.0], [29.5, 5524.0], [29.6, 5528.0], [29.7, 5535.0], [29.8, 5540.0], [29.9, 5548.0], [30.0, 5555.0], [30.1, 5560.0], [30.2, 5570.0], [30.3, 5578.0], [30.4, 5592.0], [30.5, 5599.0], [30.6, 5604.0], [30.7, 5610.0], [30.8, 5616.0], [30.9, 5622.0], [31.0, 5623.0], [31.1, 5629.0], [31.2, 5635.0], [31.3, 5640.0], [31.4, 5647.0], [31.5, 5658.0], [31.6, 5668.0], [31.7, 5673.0], [31.8, 5681.0], [31.9, 5689.0], [32.0, 5694.0], [32.1, 5698.0], [32.2, 5704.0], [32.3, 5722.0], [32.4, 5736.0], [32.5, 5749.0], [32.6, 5757.0], [32.7, 5773.0], [32.8, 5795.0], [32.9, 5800.0], [33.0, 5815.0], [33.1, 5829.0], [33.2, 5846.0], [33.3, 5858.0], [33.4, 5866.0], [33.5, 5883.0], [33.6, 5890.0], [33.7, 5897.0], [33.8, 5908.0], [33.9, 5919.0], [34.0, 5926.0], [34.1, 5930.0], [34.2, 5941.0], [34.3, 5950.0], [34.4, 5957.0], [34.5, 5970.0], [34.6, 5974.0], [34.7, 5981.0], [34.8, 5987.0], [34.9, 5992.0], [35.0, 6000.0], [35.1, 6006.0], [35.2, 6009.0], [35.3, 6016.0], [35.4, 6027.0], [35.5, 6039.0], [35.6, 6044.0], [35.7, 6049.0], [35.8, 6056.0], [35.9, 6082.0], [36.0, 6097.0], [36.1, 6101.0], [36.2, 6106.0], [36.3, 6112.0], [36.4, 6116.0], [36.5, 6121.0], [36.6, 6125.0], [36.7, 6135.0], [36.8, 6152.0], [36.9, 6164.0], [37.0, 6179.0], [37.1, 6191.0], [37.2, 6206.0], [37.3, 6214.0], [37.4, 6232.0], [37.5, 6243.0], [37.6, 6251.0], [37.7, 6261.0], [37.8, 6276.0], [37.9, 6285.0], [38.0, 6300.0], [38.1, 6309.0], [38.2, 6323.0], [38.3, 6334.0], [38.4, 6342.0], [38.5, 6349.0], [38.6, 6354.0], [38.7, 6359.0], [38.8, 6373.0], [38.9, 6382.0], [39.0, 6396.0], [39.1, 6406.0], [39.2, 6415.0], [39.3, 6426.0], [39.4, 6431.0], [39.5, 6452.0], [39.6, 6457.0], [39.7, 6473.0], [39.8, 6479.0], [39.9, 6488.0], [40.0, 6495.0], [40.1, 6505.0], [40.2, 6511.0], [40.3, 6517.0], [40.4, 6530.0], [40.5, 6542.0], [40.6, 6552.0], [40.7, 6564.0], [40.8, 6576.0], [40.9, 6590.0], [41.0, 6602.0], [41.1, 6615.0], [41.2, 6637.0], [41.3, 6655.0], [41.4, 6662.0], [41.5, 6672.0], [41.6, 6685.0], [41.7, 6694.0], [41.8, 6702.0], [41.9, 6715.0], [42.0, 6721.0], [42.1, 6732.0], [42.2, 6744.0], [42.3, 6760.0], [42.4, 6782.0], [42.5, 6806.0], [42.6, 6817.0], [42.7, 6831.0], [42.8, 6849.0], [42.9, 6860.0], [43.0, 6879.0], [43.1, 6901.0], [43.2, 6923.0], [43.3, 6945.0], [43.4, 6953.0], [43.5, 6964.0], [43.6, 6977.0], [43.7, 6991.0], [43.8, 7003.0], [43.9, 7021.0], [44.0, 7041.0], [44.1, 7055.0], [44.2, 7085.0], [44.3, 7104.0], [44.4, 7141.0], [44.5, 7152.0], [44.6, 7162.0], [44.7, 7178.0], [44.8, 7191.0], [44.9, 7197.0], [45.0, 7205.0], [45.1, 7218.0], [45.2, 7244.0], [45.3, 7260.0], [45.4, 7277.0], [45.5, 7289.0], [45.6, 7298.0], [45.7, 7312.0], [45.8, 7328.0], [45.9, 7343.0], [46.0, 7349.0], [46.1, 7364.0], [46.2, 7390.0], [46.3, 7399.0], [46.4, 7415.0], [46.5, 7428.0], [46.6, 7439.0], [46.7, 7445.0], [46.8, 7460.0], [46.9, 7473.0], [47.0, 7487.0], [47.1, 7508.0], [47.2, 7534.0], [47.3, 7552.0], [47.4, 7584.0], [47.5, 7605.0], [47.6, 7619.0], [47.7, 7630.0], [47.8, 7654.0], [47.9, 7665.0], [48.0, 7694.0], [48.1, 7719.0], [48.2, 7753.0], [48.3, 7781.0], [48.4, 7799.0], [48.5, 7814.0], [48.6, 7824.0], [48.7, 7838.0], [48.8, 7850.0], [48.9, 7879.0], [49.0, 7902.0], [49.1, 7931.0], [49.2, 7948.0], [49.3, 7975.0], [49.4, 8001.0], [49.5, 8021.0], [49.6, 8040.0], [49.7, 8079.0], [49.8, 8109.0], [49.9, 8123.0], [50.0, 8153.0], [50.1, 8174.0], [50.2, 8196.0], [50.3, 8220.0], [50.4, 8246.0], [50.5, 8264.0], [50.6, 8284.0], [50.7, 8297.0], [50.8, 8317.0], [50.9, 8343.0], [51.0, 8370.0], [51.1, 8398.0], [51.2, 8415.0], [51.3, 8425.0], [51.4, 8446.0], [51.5, 8479.0], [51.6, 8497.0], [51.7, 8509.0], [51.8, 8522.0], [51.9, 8538.0], [52.0, 8541.0], [52.1, 8559.0], [52.2, 8582.0], [52.3, 8625.0], [52.4, 8643.0], [52.5, 8648.0], [52.6, 8661.0], [52.7, 8672.0], [52.8, 8683.0], [52.9, 8690.0], [53.0, 8701.0], [53.1, 8712.0], [53.2, 8729.0], [53.3, 8746.0], [53.4, 8771.0], [53.5, 8786.0], [53.6, 8811.0], [53.7, 8838.0], [53.8, 8847.0], [53.9, 8859.0], [54.0, 8877.0], [54.1, 8892.0], [54.2, 8914.0], [54.3, 8925.0], [54.4, 8948.0], [54.5, 8960.0], [54.6, 8964.0], [54.7, 8986.0], [54.8, 8999.0], [54.9, 9014.0], [55.0, 9031.0], [55.1, 9037.0], [55.2, 9055.0], [55.3, 9070.0], [55.4, 9086.0], [55.5, 9110.0], [55.6, 9133.0], [55.7, 9180.0], [55.8, 9205.0], [55.9, 9227.0], [56.0, 9267.0], [56.1, 9308.0], [56.2, 9352.0], [56.3, 9390.0], [56.4, 9417.0], [56.5, 9426.0], [56.6, 9445.0], [56.7, 9500.0], [56.8, 9549.0], [56.9, 9572.0], [57.0, 9587.0], [57.1, 9611.0], [57.2, 9635.0], [57.3, 9659.0], [57.4, 9713.0], [57.5, 9726.0], [57.6, 9748.0], [57.7, 9782.0], [57.8, 9808.0], [57.9, 9835.0], [58.0, 9847.0], [58.1, 9872.0], [58.2, 9894.0], [58.3, 9909.0], [58.4, 9943.0], [58.5, 9947.0], [58.6, 9954.0], [58.7, 9975.0], [58.8, 9990.0], [58.9, 10009.0], [59.0, 10022.0], [59.1, 10023.0], [59.2, 10024.0], [59.3, 10033.0], [59.4, 10077.0], [59.5, 10113.0], [59.6, 10141.0], [59.7, 10164.0], [59.8, 10224.0], [59.9, 10246.0], [60.0, 10266.0], [60.1, 10297.0], [60.2, 10312.0], [60.3, 10331.0], [60.4, 10347.0], [60.5, 10380.0], [60.6, 10402.0], [60.7, 10418.0], [60.8, 10465.0], [60.9, 10493.0], [61.0, 10516.0], [61.1, 10542.0], [61.2, 10565.0], [61.3, 10578.0], [61.4, 10602.0], [61.5, 10628.0], [61.6, 10663.0], [61.7, 10687.0], [61.8, 10749.0], [61.9, 10770.0], [62.0, 10793.0], [62.1, 10821.0], [62.2, 10845.0], [62.3, 10871.0], [62.4, 10895.0], [62.5, 10923.0], [62.6, 10948.0], [62.7, 10972.0], [62.8, 10997.0], [62.9, 11010.0], [63.0, 11018.0], [63.1, 11027.0], [63.2, 11033.0], [63.3, 11044.0], [63.4, 11056.0], [63.5, 11069.0], [63.6, 11102.0], [63.7, 11126.0], [63.8, 11144.0], [63.9, 11166.0], [64.0, 11194.0], [64.1, 11213.0], [64.2, 11254.0], [64.3, 11277.0], [64.4, 11279.0], [64.5, 11293.0], [64.6, 11302.0], [64.7, 11317.0], [64.8, 11334.0], [64.9, 11350.0], [65.0, 11365.0], [65.1, 11428.0], [65.2, 11443.0], [65.3, 11478.0], [65.4, 11489.0], [65.5, 11507.0], [65.6, 11543.0], [65.7, 11551.0], [65.8, 11577.0], [65.9, 11603.0], [66.0, 11629.0], [66.1, 11672.0], [66.2, 11695.0], [66.3, 11715.0], [66.4, 11722.0], [66.5, 11733.0], [66.6, 11755.0], [66.7, 11810.0], [66.8, 11858.0], [66.9, 11890.0], [67.0, 11905.0], [67.1, 11924.0], [67.2, 11931.0], [67.3, 11942.0], [67.4, 11957.0], [67.5, 11964.0], [67.6, 11986.0], [67.7, 12012.0], [67.8, 12064.0], [67.9, 12091.0], [68.0, 12136.0], [68.1, 12158.0], [68.2, 12167.0], [68.3, 12185.0], [68.4, 12199.0], [68.5, 12223.0], [68.6, 12240.0], [68.7, 12250.0], [68.8, 12265.0], [68.9, 12281.0], [69.0, 12284.0], [69.1, 12286.0], [69.2, 12302.0], [69.3, 12314.0], [69.4, 12325.0], [69.5, 12354.0], [69.6, 12360.0], [69.7, 12371.0], [69.8, 12377.0], [69.9, 12407.0], [70.0, 12431.0], [70.1, 12450.0], [70.2, 12459.0], [70.3, 12475.0], [70.4, 12488.0], [70.5, 12498.0], [70.6, 12514.0], [70.7, 12523.0], [70.8, 12526.0], [70.9, 12527.0], [71.0, 12541.0], [71.1, 12549.0], [71.2, 12560.0], [71.3, 12568.0], [71.4, 12583.0], [71.5, 12611.0], [71.6, 12626.0], [71.7, 12645.0], [71.8, 12660.0], [71.9, 12683.0], [72.0, 12691.0], [72.1, 12703.0], [72.2, 12721.0], [72.3, 12755.0], [72.4, 12776.0], [72.5, 12806.0], [72.6, 12810.0], [72.7, 12832.0], [72.8, 12843.0], [72.9, 12849.0], [73.0, 12861.0], [73.1, 12869.0], [73.2, 12879.0], [73.3, 12885.0], [73.4, 12889.0], [73.5, 12897.0], [73.6, 12905.0], [73.7, 12918.0], [73.8, 12931.0], [73.9, 12948.0], [74.0, 12954.0], [74.1, 12973.0], [74.2, 12981.0], [74.3, 12995.0], [74.4, 13017.0], [74.5, 13040.0], [74.6, 13058.0], [74.7, 13088.0], [74.8, 13117.0], [74.9, 13136.0], [75.0, 13149.0], [75.1, 13151.0], [75.2, 13156.0], [75.3, 13161.0], [75.4, 13177.0], [75.5, 13185.0], [75.6, 13199.0], [75.7, 13216.0], [75.8, 13241.0], [75.9, 13251.0], [76.0, 13271.0], [76.1, 13287.0], [76.2, 13300.0], [76.3, 13321.0], [76.4, 13338.0], [76.5, 13358.0], [76.6, 13374.0], [76.7, 13414.0], [76.8, 13426.0], [76.9, 13445.0], [77.0, 13476.0], [77.1, 13506.0], [77.2, 13513.0], [77.3, 13526.0], [77.4, 13544.0], [77.5, 13550.0], [77.6, 13566.0], [77.7, 13586.0], [77.8, 13602.0], [77.9, 13614.0], [78.0, 13630.0], [78.1, 13649.0], [78.2, 13659.0], [78.3, 13669.0], [78.4, 13675.0], [78.5, 13684.0], [78.6, 13697.0], [78.7, 13714.0], [78.8, 13729.0], [78.9, 13750.0], [79.0, 13752.0], [79.1, 13760.0], [79.2, 13784.0], [79.3, 13814.0], [79.4, 13834.0], [79.5, 13858.0], [79.6, 13876.0], [79.7, 13898.0], [79.8, 13917.0], [79.9, 13938.0], [80.0, 13947.0], [80.1, 13969.0], [80.2, 13984.0], [80.3, 14011.0], [80.4, 14018.0], [80.5, 14027.0], [80.6, 14035.0], [80.7, 14053.0], [80.8, 14071.0], [80.9, 14134.0], [81.0, 14167.0], [81.1, 14183.0], [81.2, 14196.0], [81.3, 14217.0], [81.4, 14232.0], [81.5, 14269.0], [81.6, 14284.0], [81.7, 14302.0], [81.8, 14329.0], [81.9, 14356.0], [82.0, 14361.0], [82.1, 14372.0], [82.2, 14379.0], [82.3, 14381.0], [82.4, 14393.0], [82.5, 14411.0], [82.6, 14450.0], [82.7, 14485.0], [82.8, 14507.0], [82.9, 14523.0], [83.0, 14539.0], [83.1, 14553.0], [83.2, 14570.0], [83.3, 14581.0], [83.4, 14595.0], [83.5, 14615.0], [83.6, 14644.0], [83.7, 14660.0], [83.8, 14675.0], [83.9, 14685.0], [84.0, 14694.0], [84.1, 14724.0], [84.2, 14739.0], [84.3, 14751.0], [84.4, 14790.0], [84.5, 14822.0], [84.6, 14836.0], [84.7, 14862.0], [84.8, 14884.0], [84.9, 14898.0], [85.0, 14926.0], [85.1, 14942.0], [85.2, 14957.0], [85.3, 14972.0], [85.4, 14996.0], [85.5, 15015.0], [85.6, 15036.0], [85.7, 15045.0], [85.8, 15055.0], [85.9, 15071.0], [86.0, 15077.0], [86.1, 15078.0], [86.2, 15081.0], [86.3, 15092.0], [86.4, 15115.0], [86.5, 15139.0], [86.6, 15165.0], [86.7, 15179.0], [86.8, 15209.0], [86.9, 15223.0], [87.0, 15251.0], [87.1, 15277.0], [87.2, 15318.0], [87.3, 15364.0], [87.4, 15370.0], [87.5, 15407.0], [87.6, 15434.0], [87.7, 15444.0], [87.8, 15483.0], [87.9, 15494.0], [88.0, 15518.0], [88.1, 15549.0], [88.2, 15555.0], [88.3, 15568.0], [88.4, 15583.0], [88.5, 15614.0], [88.6, 15630.0], [88.7, 15680.0], [88.8, 15719.0], [88.9, 15738.0], [89.0, 15762.0], [89.1, 15784.0], [89.2, 15801.0], [89.3, 15817.0], [89.4, 15837.0], [89.5, 15860.0], [89.6, 15862.0], [89.7, 15863.0], [89.8, 15873.0], [89.9, 15879.0], [90.0, 15880.0], [90.1, 15889.0], [90.2, 15914.0], [90.3, 15917.0], [90.4, 15936.0], [90.5, 15957.0], [90.6, 16001.0], [90.7, 16035.0], [90.8, 16081.0], [90.9, 16114.0], [91.0, 16143.0], [91.1, 16194.0], [91.2, 16219.0], [91.3, 16245.0], [91.4, 16276.0], [91.5, 16296.0], [91.6, 16319.0], [91.7, 16368.0], [91.8, 16390.0], [91.9, 16402.0], [92.0, 16431.0], [92.1, 16447.0], [92.2, 16466.0], [92.3, 16492.0], [92.4, 16544.0], [92.5, 16599.0], [92.6, 16614.0], [92.7, 16628.0], [92.8, 16688.0], [92.9, 16719.0], [93.0, 16738.0], [93.1, 16785.0], [93.2, 16823.0], [93.3, 16880.0], [93.4, 16885.0], [93.5, 16887.0], [93.6, 16894.0], [93.7, 16915.0], [93.8, 16922.0], [93.9, 16959.0], [94.0, 16988.0], [94.1, 17044.0], [94.2, 17062.0], [94.3, 17088.0], [94.4, 17114.0], [94.5, 17147.0], [94.6, 17165.0], [94.7, 17222.0], [94.8, 17265.0], [94.9, 17288.0], [95.0, 17340.0], [95.1, 17373.0], [95.2, 17413.0], [95.3, 17456.0], [95.4, 17496.0], [95.5, 17516.0], [95.6, 17542.0], [95.7, 17557.0], [95.8, 17574.0], [95.9, 17592.0], [96.0, 17617.0], [96.1, 17661.0], [96.2, 17683.0], [96.3, 17726.0], [96.4, 17746.0], [96.5, 17753.0], [96.6, 17755.0], [96.7, 17783.0], [96.8, 17858.0], [96.9, 17891.0], [97.0, 17961.0], [97.1, 18005.0], [97.2, 18049.0], [97.3, 18095.0], [97.4, 18170.0], [97.5, 18249.0], [97.6, 18277.0], [97.7, 18345.0], [97.8, 18395.0], [97.9, 18450.0], [98.0, 18521.0], [98.1, 18570.0], [98.2, 18624.0], [98.3, 18705.0], [98.4, 18762.0], [98.5, 18924.0], [98.6, 18936.0], [98.7, 18937.0], [98.8, 19010.0], [98.9, 19127.0], [99.0, 19242.0], [99.1, 19373.0], [99.2, 19501.0], [99.3, 19674.0], [99.4, 19812.0], [99.5, 20290.0], [99.6, 21090.0], [99.7, 21165.0], [99.8, 21770.0], [99.9, 21945.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 266.0, "series": [{"data": [[0.0, 266.0], [100.0, 90.0], [1800.0, 1.0], [1900.0, 13.0], [2000.0, 17.0], [2100.0, 28.0], [2300.0, 79.0], [2200.0, 48.0], [2400.0, 60.0], [2500.0, 97.0], [2600.0, 50.0], [2700.0, 40.0], [2800.0, 54.0], [2900.0, 23.0], [3000.0, 33.0], [3100.0, 43.0], [3200.0, 40.0], [3300.0, 80.0], [3400.0, 83.0], [3500.0, 60.0], [3700.0, 80.0], [3600.0, 28.0], [3800.0, 47.0], [3900.0, 68.0], [4000.0, 52.0], [4300.0, 71.0], [4200.0, 55.0], [4100.0, 63.0], [4400.0, 88.0], [4500.0, 76.0], [4600.0, 78.0], [4800.0, 57.0], [4700.0, 68.0], [4900.0, 65.0], [5000.0, 68.0], [5100.0, 92.0], [5300.0, 110.0], [5200.0, 67.0], [5500.0, 121.0], [5600.0, 141.0], [5400.0, 104.0], [5800.0, 75.0], [5700.0, 66.0], [5900.0, 110.0], [6000.0, 92.0], [6100.0, 96.0], [6300.0, 93.0], [6200.0, 74.0], [6400.0, 86.0], [6500.0, 80.0], [6600.0, 70.0], [6700.0, 61.0], [6800.0, 54.0], [6900.0, 58.0], [7000.0, 47.0], [7100.0, 54.0], [7200.0, 61.0], [7300.0, 61.0], [7400.0, 68.0], [7600.0, 50.0], [7500.0, 33.0], [7700.0, 32.0], [7800.0, 50.0], [7900.0, 37.0], [8100.0, 39.0], [8000.0, 32.0], [8500.0, 52.0], [8700.0, 51.0], [8200.0, 45.0], [8600.0, 61.0], [8300.0, 35.0], [8400.0, 45.0], [9200.0, 29.0], [8800.0, 55.0], [8900.0, 57.0], [9100.0, 25.0], [9000.0, 58.0], [9400.0, 33.0], [9500.0, 32.0], [9600.0, 26.0], [9700.0, 37.0], [9300.0, 20.0], [10100.0, 26.0], [9800.0, 39.0], [9900.0, 55.0], [10200.0, 33.0], [10000.0, 52.0], [10600.0, 32.0], [10300.0, 38.0], [10400.0, 33.0], [10700.0, 25.0], [10500.0, 37.0], [10800.0, 33.0], [10900.0, 37.0], [11000.0, 67.0], [11100.0, 36.0], [11200.0, 49.0], [11300.0, 46.0], [11500.0, 37.0], [11400.0, 33.0], [11700.0, 36.0], [11600.0, 33.0], [11900.0, 60.0], [12200.0, 69.0], [11800.0, 24.0], [12100.0, 40.0], [12000.0, 26.0], [12400.0, 58.0], [12500.0, 83.0], [12600.0, 51.0], [12700.0, 37.0], [12300.0, 56.0], [13200.0, 51.0], [13300.0, 43.0], [12800.0, 93.0], [13000.0, 37.0], [13100.0, 77.0], [12900.0, 68.0], [13600.0, 74.0], [13400.0, 35.0], [13700.0, 54.0], [13500.0, 61.0], [13800.0, 40.0], [14300.0, 68.0], [14200.0, 42.0], [13900.0, 45.0], [14000.0, 55.0], [14100.0, 31.0], [14400.0, 23.0], [14600.0, 53.0], [14700.0, 33.0], [14800.0, 42.0], [14500.0, 61.0], [14900.0, 45.0], [15000.0, 82.0], [15300.0, 29.0], [15200.0, 35.0], [15100.0, 35.0], [15400.0, 40.0], [15500.0, 43.0], [15800.0, 79.0], [15600.0, 28.0], [15700.0, 38.0], [16300.0, 29.0], [16100.0, 24.0], [15900.0, 43.0], [16000.0, 21.0], [16200.0, 37.0], [16600.0, 28.0], [16400.0, 39.0], [16800.0, 44.0], [17400.0, 22.0], [17000.0, 28.0], [17200.0, 22.0], [17600.0, 25.0], [17800.0, 19.0], [18000.0, 20.0], [18200.0, 16.0], [18400.0, 12.0], [18800.0, 4.0], [19200.0, 9.0], [19400.0, 6.0], [19000.0, 3.0], [18600.0, 9.0], [19600.0, 9.0], [19800.0, 4.0], [20200.0, 1.0], [20400.0, 1.0], [20800.0, 2.0], [21000.0, 5.0], [21200.0, 2.0], [21600.0, 3.0], [21800.0, 4.0], [23800.0, 2.0], [24000.0, 1.0], [16700.0, 26.0], [17300.0, 24.0], [16500.0, 17.0], [16900.0, 33.0], [17100.0, 28.0], [17500.0, 47.0], [17900.0, 15.0], [18300.0, 17.0], [17700.0, 39.0], [18100.0, 10.0], [18500.0, 18.0], [19300.0, 7.0], [19100.0, 11.0], [18700.0, 17.0], [18900.0, 25.0], [19700.0, 3.0], [19500.0, 4.0], [20100.0, 1.0], [19900.0, 5.0], [20300.0, 1.0], [21100.0, 8.0], [21700.0, 4.0], [21900.0, 5.0], [23700.0, 2.0], [23900.0, 3.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 356.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8373.0, "series": [{"data": [[0.0, 356.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8373.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 642.8161993769465, "minX": 1.68303204E12, "maxY": 3000.0, "series": [{"data": [[1.68303216E12, 3000.0], [1.68303234E12, 642.8161993769465], [1.68303204E12, 3000.0], [1.68303222E12, 2998.907488986786], [1.6830321E12, 3000.0], [1.68303228E12, 2107.1100303951457]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68303234E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1971.0, "minX": 1.0, "maxY": 24002.0, "series": [{"data": [[2.0, 17685.0], [3.0, 17679.0], [4.0, 17664.0], [5.0, 17633.0], [6.0, 17626.0], [7.0, 17617.0], [8.0, 17575.0], [9.0, 17558.0], [10.0, 17547.0], [11.0, 17542.0], [12.0, 17535.0], [13.0, 17531.0], [14.0, 17514.0], [15.0, 17514.0], [16.0, 14578.0], [17.0, 13204.0], [18.0, 14570.0], [19.0, 14568.0], [20.0, 13796.0], [22.0, 13194.5], [23.0, 17499.0], [24.0, 13791.0], [25.0, 17496.0], [26.0, 13188.0], [27.0, 13786.0], [28.0, 13184.0], [29.0, 13183.0], [30.0, 13183.0], [31.0, 13182.0], [33.0, 13779.0], [32.0, 15099.0], [35.0, 13772.0], [34.0, 13774.0], [37.0, 14539.0], [36.0, 13169.0], [39.0, 13157.0], [38.0, 13765.0], [41.0, 13842.5], [43.0, 13156.0], [42.0, 13156.0], [45.0, 13154.0], [44.0, 13756.0], [47.0, 14141.0], [48.0, 13154.0], [50.0, 13152.0], [53.0, 14741.75], [57.0, 13794.75], [59.0, 13151.0], [61.0, 13751.0], [63.0, 13450.5], [65.0, 13751.0], [64.0, 14523.0], [71.0, 13790.0], [68.0, 13643.5], [75.0, 14079.75], [79.0, 13779.25], [83.0, 13144.0], [82.0, 14521.0], [81.0, 14136.0], [87.0, 13744.0], [86.0, 13143.0], [85.0, 13744.0], [84.0, 13143.0], [91.0, 14822.0], [90.0, 14294.0], [89.0, 14842.0], [88.0, 14394.0], [95.0, 14217.0], [94.0, 14263.0], [93.0, 14819.0], [92.0, 14272.0], [99.0, 14742.0], [98.0, 14084.5], [96.0, 14763.0], [103.0, 13416.0], [102.0, 14740.0], [101.0, 14081.5], [107.0, 13267.0], [106.0, 14079.0], [105.0, 14186.0], [104.0, 14188.0], [111.0, 14572.0], [110.0, 14574.0], [109.0, 14035.0], [108.0, 13267.0], [115.0, 14012.0], [114.0, 14015.0], [113.0, 14018.0], [112.0, 14023.0], [119.0, 14543.0], [118.0, 14545.0], [117.0, 14550.0], [116.0, 14555.0], [123.0, 13962.0], [122.0, 14816.0], [121.0, 14519.0], [120.0, 13996.0], [127.0, 14481.0], [126.0, 14485.0], [125.0, 14501.0], [124.0, 14504.0], [135.0, 13336.0], [134.0, 13372.0], [133.0, 13931.0], [132.0, 14230.0], [131.0, 12613.0], [130.0, 13947.0], [129.0, 14443.0], [128.0, 13922.0], [143.0, 14007.0], [142.0, 14015.0], [141.0, 14017.0], [140.0, 14020.0], [139.0, 14024.0], [138.0, 14023.0], [137.0, 14028.0], [136.0, 14028.0], [151.0, 13983.0], [150.0, 15009.0], [149.0, 15019.5], [147.0, 15123.0], [146.0, 15022.0], [145.0, 15023.0], [144.0, 14007.0], [159.0, 14989.0], [158.0, 14989.0], [157.0, 14991.0], [156.0, 15095.0], [155.0, 13975.0], [154.0, 13977.0], [153.0, 13980.0], [152.0, 15101.0], [167.0, 14980.0], [165.0, 13963.0], [164.0, 14981.0], [163.0, 13968.0], [162.0, 13969.0], [160.0, 15090.0], [175.0, 15039.0], [174.0, 14941.0], [173.0, 14942.0], [172.0, 15054.0], [171.0, 13941.0], [170.0, 14961.0], [169.0, 16033.0], [168.0, 15079.0], [183.0, 14312.0], [181.0, 13753.0], [180.0, 13828.0], [179.0, 16076.0], [178.0, 14954.0], [177.0, 14887.0], [176.0, 15036.0], [191.0, 13488.0], [190.0, 14626.0], [189.0, 14581.0], [188.0, 14708.0], [187.0, 15863.0], [186.0, 13649.0], [185.0, 15819.0], [184.0, 13740.0], [198.0, 14932.0], [196.0, 13288.0], [195.0, 14451.0], [194.0, 15533.0], [193.0, 14463.0], [192.0, 14496.0], [207.0, 14135.0], [206.0, 14034.0], [205.0, 15291.0], [204.0, 15215.0], [203.0, 15232.0], [202.0, 14267.0], [201.0, 14264.0], [200.0, 14266.0], [215.0, 12692.0], [214.0, 14937.0], [213.0, 14939.0], [212.0, 13721.0], [211.0, 13735.0], [210.0, 14815.0], [209.0, 14829.0], [208.0, 12934.0], [223.0, 16928.0], [222.0, 18763.0], [221.0, 14925.0], [220.0, 14926.0], [219.0, 14927.0], [218.0, 13759.5], [216.0, 14779.0], [231.0, 15920.0], [230.0, 18762.0], [229.0, 13760.0], [228.0, 14270.5], [226.0, 14890.0], [225.0, 13768.0], [224.0, 13768.0], [239.0, 14599.0], [238.0, 13684.0], [237.0, 13608.0], [236.0, 14862.0], [235.0, 16872.0], [234.0, 15773.0], [233.0, 13747.0], [232.0, 18721.0], [246.0, 13603.0], [245.0, 15188.5], [243.0, 13616.0], [242.0, 14749.0], [241.0, 14753.0], [240.0, 13630.0], [255.0, 14649.0], [254.0, 14655.0], [253.0, 14655.0], [252.0, 13445.0], [251.0, 14711.0], [250.0, 16815.0], [248.0, 14085.5], [268.0, 16112.5], [270.0, 14586.0], [271.0, 14585.0], [269.0, 14586.0], [266.0, 15630.0], [265.0, 14768.5], [263.0, 14944.0], [257.0, 15680.0], [256.0, 13524.0], [259.0, 18440.0], [258.0, 13480.0], [262.0, 14595.0], [261.0, 14439.0], [260.0, 14598.0], [284.0, 16548.0], [286.0, 13368.0], [287.0, 16465.0], [285.0, 15440.0], [283.0, 16120.0], [280.0, 14382.0], [279.0, 16550.0], [272.0, 15619.0], [275.0, 18414.0], [274.0, 17018.0], [278.0, 16553.0], [277.0, 14545.0], [276.0, 13432.0], [302.0, 13503.0], [303.0, 14054.0], [301.0, 14193.0], [300.0, 14060.0], [299.0, 13159.0], [298.0, 15170.0], [297.0, 14202.0], [296.0, 13295.0], [295.0, 14013.5], [289.0, 16261.0], [288.0, 14804.0], [291.0, 14019.0], [290.0, 14784.0], [293.0, 17548.0], [292.0, 14018.0], [317.0, 14658.0], [319.0, 14740.5], [316.0, 13559.0], [307.0, 13480.0], [306.0, 13487.0], [305.0, 13489.0], [304.0, 16983.0], [315.0, 16548.0], [314.0, 13593.0], [313.0, 13064.0], [312.0, 14739.0], [311.0, 13794.0], [310.0, 14018.0], [309.0, 14040.0], [308.0, 16952.0], [335.0, 13074.666666666666], [333.0, 12980.0], [323.0, 16477.0], [322.0, 13544.0], [321.0, 13548.0], [320.0, 13682.0], [331.0, 12981.0], [330.0, 12856.0], [329.0, 15837.0], [328.0, 16415.0], [327.0, 14614.0], [326.0, 13523.0], [325.0, 13524.0], [324.0, 12979.0], [339.0, 12845.0], [350.0, 15498.0], [351.0, 12003.0], [349.0, 13067.666666666666], [338.0, 12845.0], [337.0, 12291.0], [336.0, 13951.0], [346.0, 13393.5], [344.0, 13947.0], [343.0, 12975.0], [342.0, 12286.0], [341.0, 15780.0], [340.0, 12844.0], [366.0, 12596.0], [367.0, 15436.0], [365.0, 12611.0], [364.0, 12477.0], [363.0, 13603.0], [362.0, 15436.0], [361.0, 11947.5], [359.0, 15442.0], [353.0, 15505.0], [352.0, 15506.0], [355.0, 12653.0], [354.0, 15460.0], [358.0, 15484.5], [356.0, 13616.0], [382.0, 11875.0], [383.0, 11741.0], [381.0, 16948.0], [380.0, 14836.0], [379.0, 11928.0], [378.0, 14960.0], [377.0, 11434.0], [376.0, 13115.0], [375.0, 11500.0], [369.0, 13564.0], [368.0, 11904.0], [371.0, 13550.0], [370.0, 13561.0], [374.0, 15289.0], [373.0, 15310.0], [372.0, 15371.0], [397.0, 14303.0], [399.0, 13913.5], [396.0, 11331.0], [387.0, 11365.0], [386.0, 14356.0], [385.0, 14434.0], [384.0, 11822.0], [395.0, 11334.0], [394.0, 14269.0], [393.0, 11340.0], [392.0, 11474.0], [391.0, 11481.0], [390.0, 13369.0], [388.0, 16449.0], [414.0, 11011.0], [415.0, 10999.0], [413.0, 10337.0], [412.0, 12030.0], [411.0, 13869.0], [410.0, 11588.5], [408.0, 13905.0], [407.0, 12078.0], [401.0, 16387.0], [400.0, 12407.0], [403.0, 14268.0], [402.0, 11301.0], [406.0, 11293.0], [405.0, 16379.0], [404.0, 14228.0], [430.0, 9327.0], [431.0, 11437.0], [429.0, 11454.0], [428.0, 9345.0], [427.0, 14553.0], [426.0, 9062.0], [425.0, 15437.0], [424.0, 10355.0], [423.0, 11753.0], [417.0, 10790.0], [416.0, 10297.0], [419.0, 10206.0], [418.0, 10918.0], [422.0, 13730.0], [421.0, 13729.0], [420.0, 13692.0], [446.0, 12092.0], [447.0, 11126.0], [444.0, 11135.0], [435.0, 11166.0], [434.0, 11367.0], [433.0, 9234.0], [432.0, 9265.0], [443.0, 13040.0], [442.0, 13044.0], [441.0, 9032.0], [440.0, 9034.0], [439.0, 11149.0], [438.0, 11152.0], [437.0, 11158.0], [436.0, 11164.0], [462.0, 12755.0], [463.0, 10836.0], [461.0, 10970.0], [460.0, 11003.0], [459.0, 8921.0], [458.0, 12949.0], [457.0, 11052.0], [456.0, 11062.0], [455.0, 8964.0], [448.0, 9010.0], [451.0, 11009.0], [449.0, 9008.0], [454.0, 12981.0], [453.0, 13017.0], [452.0, 8987.0], [478.0, 12484.0], [479.0, 10565.0], [477.0, 12504.0], [476.0, 10663.0], [475.0, 12619.0], [474.0, 12641.0], [473.0, 10735.0], [472.0, 12644.0], [471.0, 8600.0], [465.0, 12730.0], [464.0, 12732.0], [467.0, 10805.0], [466.0, 10809.0], [470.0, 8641.0], [469.0, 10755.0], [468.0, 12704.0], [494.0, 10575.0], [495.0, 11446.0], [493.0, 10560.0], [492.0, 11480.0], [491.0, 10624.0], [490.0, 10657.0], [489.0, 11544.0], [488.0, 11549.0], [487.0, 10679.0], [481.0, 8421.0], [480.0, 12459.0], [483.0, 10780.0], [482.0, 12406.0], [486.0, 10679.0], [485.0, 10793.0], [484.0, 11673.0], [510.0, 11497.0], [511.0, 10486.0], [509.0, 11369.0], [508.0, 11511.0], [507.0, 11530.0], [506.0, 10524.0], [505.0, 10516.0], [504.0, 11551.0], [503.0, 10556.0], [497.0, 10569.0], [496.0, 10552.0], [499.0, 10560.0], [498.0, 10542.0], [502.0, 10539.0], [501.0, 11432.0], [500.0, 10559.0], [540.0, 9903.0], [542.0, 10918.0], [538.0, 10876.0], [536.0, 9993.0], [532.0, 11043.0], [530.0, 11059.0], [528.0, 10403.0], [526.0, 10431.0], [514.0, 10483.0], [518.0, 11350.0], [516.0, 10478.0], [524.0, 11309.0], [522.0, 11315.0], [520.0, 11317.0], [572.0, 10198.0], [574.0, 9086.0], [570.0, 9341.0], [568.0, 9362.0], [566.0, 13569.0], [564.0, 10245.0], [562.0, 9875.5], [560.0, 10252.0], [558.0, 10567.0], [546.0, 10861.0], [544.0, 10879.0], [550.0, 10758.0], [548.0, 10686.0], [556.0, 10595.0], [554.0, 10531.0], [552.0, 13889.0], [604.0, 7831.0], [606.0, 11596.0], [602.0, 11032.0], [582.0, 9848.0], [580.0, 9844.0], [578.0, 13248.0], [598.0, 12193.0], [594.0, 12199.0], [592.0, 11044.0], [590.0, 12205.0], [588.0, 11052.0], [586.0, 7733.0], [584.0, 11058.0], [636.0, 18791.0], [634.0, 15745.5], [632.0, 12700.0], [630.0, 19940.0], [628.0, 18792.0], [618.0, 12702.0], [616.0, 12725.0], [612.0, 12166.0], [668.0, 17678.0], [670.0, 11939.0], [666.0, 18570.0], [664.0, 18572.0], [660.0, 11948.0], [658.0, 12488.0], [656.0, 18585.0], [654.0, 17705.0], [642.0, 11006.0], [640.0, 12162.0], [646.0, 17899.0], [644.0, 12720.0], [650.0, 13542.0], [648.0, 13543.0], [700.0, 18476.0], [702.0, 17580.0], [698.0, 12408.0], [696.0, 12154.5], [694.0, 11878.0], [692.0, 19095.0], [690.0, 12442.5], [688.0, 10739.0], [686.0, 19672.0], [674.0, 11931.0], [678.0, 19696.0], [676.0, 19703.0], [684.0, 11905.0], [682.0, 12875.5], [680.0, 12454.0], [732.0, 11432.0], [734.0, 16143.0], [730.0, 10493.0], [728.0, 18314.0], [726.0, 16758.0], [724.0, 12119.0], [722.0, 18277.0], [720.0, 13064.0], [718.0, 12247.0], [706.0, 12368.0], [710.0, 19572.0], [708.0, 13199.0], [716.0, 12260.0], [714.0, 12741.5], [712.0, 12337.0], [764.0, 16318.0], [766.0, 11051.0], [762.0, 16319.0], [760.0, 11171.0], [758.0, 11190.0], [756.0, 10411.0], [754.0, 10416.0], [752.0, 15644.0], [750.0, 17697.0], [738.0, 11729.0], [736.0, 16107.0], [742.0, 17863.0], [740.0, 18110.0], [748.0, 17732.0], [746.0, 9995.0], [744.0, 17816.0], [796.0, 14586.0], [798.0, 14576.0], [794.0, 14599.0], [792.0, 10255.0], [790.0, 9441.0], [788.0, 14628.0], [786.0, 14648.0], [784.0, 14661.0], [782.0, 14672.0], [770.0, 16044.0], [768.0, 16062.0], [774.0, 15691.0], [772.0, 16920.0], [780.0, 10329.0], [778.0, 16752.0], [776.0, 9597.0], [828.0, 17783.0], [830.0, 17783.0], [826.0, 23987.0], [824.0, 21937.0], [822.0, 21938.0], [820.0, 21939.0], [818.0, 14909.0], [816.0, 24002.0], [814.0, 17830.0], [802.0, 16381.0], [800.0, 9360.0], [806.0, 15052.0], [804.0, 9070.0], [812.0, 15498.0], [810.0, 8946.0], [808.0, 8957.0], [862.0, 15099.5], [860.0, 18327.333333333332], [836.0, 15378.0], [834.0, 18192.0], [832.0, 14854.0], [892.0, 21073.0], [894.0, 15285.0], [888.0, 16210.5], [870.0, 15369.0], [868.0, 15370.0], [864.0, 18347.5], [886.0, 18093.0], [884.0, 15731.0], [880.0, 18118.0], [878.0, 21107.0], [876.0, 18122.0], [874.0, 15789.0], [872.0, 23912.0], [924.0, 17973.0], [926.0, 17534.0], [922.0, 15604.0], [920.0, 17563.0], [918.0, 23757.0], [916.0, 15217.0], [914.0, 21717.0], [910.0, 14685.0], [898.0, 14728.0], [896.0, 17647.0], [902.0, 21750.0], [900.0, 17644.0], [908.0, 14691.0], [906.0, 21023.0], [904.0, 21036.0], [954.0, 15417.0], [958.0, 14634.666666666666], [952.0, 15908.0], [934.0, 13830.0], [932.0, 16985.333333333332], [928.0, 20889.0], [950.0, 16100.0], [948.0, 16132.0], [946.0, 13415.0], [944.0, 16244.0], [942.0, 12970.0], [940.0, 19337.0], [938.0, 16389.0], [936.0, 16029.0], [988.0, 12012.0], [990.0, 11940.0], [986.0, 14401.0], [984.0, 12522.0], [982.0, 12611.0], [980.0, 12193.0], [978.0, 18005.0], [976.0, 12223.0], [974.0, 11694.0], [962.0, 15434.0], [966.0, 14875.0], [964.0, 19075.0], [972.0, 12667.0], [970.0, 11767.0], [968.0, 18095.0], [1020.0, 10491.0], [1022.0, 11299.0], [1018.0, 19669.0], [1016.0, 10661.0], [1014.0, 14035.0], [1012.0, 19809.0], [1010.0, 17772.0], [1008.0, 19848.0], [1006.0, 10871.0], [994.0, 20425.0], [992.0, 14291.0], [998.0, 17511.0], [996.0, 20290.0], [1004.0, 11856.0], [1002.0, 11051.0], [1000.0, 17432.0], [1036.0, 14056.0], [1084.0, 19145.5], [1080.0, 17270.0], [1072.0, 16460.666666666668], [1056.0, 17594.666666666668], [1044.0, 16400.0], [1040.0, 16100.0], [1032.0, 14069.0], [1028.0, 16126.0], [1024.0, 19278.0], [1144.0, 17101.0], [1148.0, 17968.0], [1140.0, 17726.0], [1136.0, 17135.0], [1132.0, 18728.5], [1128.0, 19217.0], [1124.0, 17511.0], [1120.0, 16883.5], [1112.0, 16726.0], [1100.0, 16296.0], [1088.0, 17674.0], [1108.0, 16232.0], [1104.0, 16253.0], [1208.0, 15277.0], [1212.0, 14729.0], [1200.0, 18339.0], [1160.0, 16448.0], [1156.0, 16099.0], [1152.0, 15607.0], [1196.0, 15616.0], [1192.0, 18424.0], [1188.0, 18548.0], [1184.0, 15318.0], [1180.0, 16659.0], [1172.0, 15518.0], [1168.0, 16693.0], [1272.0, 13526.0], [1276.0, 15875.0], [1264.0, 15976.0], [1228.0, 14516.0], [1224.0, 17204.5], [1220.0, 17876.0], [1216.0, 14651.0], [1260.0, 13282.0], [1256.0, 12901.0], [1252.0, 13862.0], [1248.0, 12849.0], [1244.0, 13834.0], [1240.0, 16677.0], [1236.0, 14951.0], [1232.0, 16455.0], [1336.0, 9280.0], [1340.0, 6869.0], [1332.0, 7144.0], [1328.0, 7220.0], [1324.0, 7294.0], [1320.0, 7329.0], [1316.0, 9872.0], [1312.0, 8034.0], [1308.0, 7600.0], [1280.0, 14782.0], [1292.0, 8123.0], [1284.0, 14689.0], [1304.0, 7514.0], [1300.0, 8111.0], [1296.0, 7629.5], [1396.0, 5866.0], [1404.0, 6721.0], [1376.0, 8489.0], [1380.0, 8356.0], [1384.0, 8333.0], [1392.0, 8479.0], [1356.0, 7283.0], [1352.0, 9073.0], [1348.0, 7328.0], [1344.0, 7423.0], [1372.0, 8639.0], [1368.0, 9189.0], [1364.0, 9010.0], [1360.0, 6672.0], [1388.0, 8529.0], [1456.0, 6831.0], [1468.0, 9788.0], [1440.0, 9445.0], [1444.0, 9436.0], [1464.0, 8330.0], [1408.0, 6711.0], [1412.0, 6701.0], [1416.0, 6699.0], [1420.0, 7785.666666666667], [1436.0, 6440.0], [1432.0, 6531.0], [1428.0, 7578.0], [1424.0, 7604.0], [1452.0, 9389.0], [1448.0, 9423.0], [1528.0, 7862.0], [1504.0, 7458.0], [1508.0, 7605.0], [1512.0, 7559.0], [1532.0, 7205.0], [1524.0, 7413.0], [1520.0, 7474.0], [1476.0, 7618.666666666667], [1480.0, 9236.0], [1484.0, 7879.0], [1496.0, 7480.0], [1492.0, 8220.0], [1488.0, 7853.0], [1516.0, 7319.0], [1592.0, 2772.0], [1568.0, 4298.0], [1572.0, 4263.0], [1576.0, 4129.0], [1596.0, 5970.0], [1588.0, 2816.0], [1584.0, 4002.0], [1536.0, 7041.0], [1540.0, 6901.0], [1548.0, 6554.0], [1564.0, 6050.0], [1560.0, 6666.0], [1556.0, 6851.0], [1552.0, 6963.0], [1580.0, 4081.0], [1648.0, 5429.0], [1656.0, 6135.0], [1636.0, 5523.0], [1640.0, 5499.0], [1660.0, 6064.0], [1652.0, 6168.0], [1600.0, 5890.0], [1604.0, 5817.0], [1608.0, 5341.0], [1612.0, 5338.0], [1628.0, 5524.0], [1624.0, 5525.0], [1620.0, 5318.0], [1616.0, 5323.0], [1644.0, 6208.0], [1720.0, 5798.0], [1696.0, 5132.0], [1700.0, 4919.0], [1704.0, 5998.0], [1724.0, 4891.0], [1716.0, 5834.0], [1712.0, 5948.0], [1664.0, 5797.0], [1668.0, 6972.0], [1672.0, 4941.0], [1692.0, 5220.0], [1688.0, 6529.0], [1684.0, 6549.0], [1680.0, 6702.0], [1708.0, 5534.5], [1784.0, 9122.0], [1760.0, 6723.0], [1764.0, 8918.0], [1768.0, 6719.0], [1788.0, 6525.0], [1780.0, 8774.0], [1776.0, 6674.0], [1728.0, 4868.0], [1732.0, 6178.0], [1736.0, 5599.0], [1740.0, 5979.0], [1756.0, 5479.0], [1752.0, 5757.0], [1748.0, 5817.0], [1744.0, 5466.0], [1772.0, 6688.0], [1848.0, 6982.0], [1824.0, 4622.0], [1828.0, 5866.0], [1832.0, 8133.0], [1852.0, 6975.0], [1844.0, 7288.0], [1840.0, 5169.0], [1792.0, 8707.0], [1796.0, 5074.0], [1800.0, 5021.0], [1804.0, 6315.0], [1820.0, 8637.0], [1816.0, 8832.0], [1812.0, 6283.0], [1836.0, 7999.0], [1912.0, 6131.0], [1888.0, 7753.0], [1892.0, 7718.0], [1896.0, 7647.0], [1916.0, 6017.0], [1908.0, 6491.0], [1904.0, 6530.0], [1856.0, 8032.0], [1860.0, 8558.0], [1864.0, 7151.0], [1868.0, 8544.0], [1884.0, 7892.0], [1880.0, 7924.0], [1876.0, 7090.0], [1872.0, 7123.0], [1900.0, 6559.0], [1976.0, 6762.0], [1952.0, 7108.0], [1956.0, 7068.0], [1960.0, 5184.0], [1980.0, 6586.0], [1972.0, 7796.0], [1968.0, 7827.0], [1920.0, 6042.0], [1924.0, 6002.0], [1928.0, 5967.0], [1948.0, 5518.0], [1944.0, 7280.0], [1940.0, 5668.0], [1936.0, 7374.0], [1964.0, 7835.0], [2040.0, 6301.0], [2016.0, 5559.0], [2020.0, 6574.0], [2024.0, 6554.0], [2044.0, 6213.0], [2036.0, 6335.0], [2032.0, 6374.0], [1984.0, 7509.0], [1988.0, 7362.0], [1996.0, 5596.0], [2012.0, 5580.0], [2008.0, 5574.0], [2004.0, 6760.0], [2000.0, 5621.0], [2028.0, 6481.0], [2144.0, 5409.0], [2160.0, 4868.0], [2112.0, 3787.0], [2128.0, 5611.0], [2168.0, 4723.0], [2152.0, 3306.0], [2048.0, 6161.0], [2056.0, 4714.0], [2064.0, 4362.0], [2072.0, 5056.0], [2104.0, 3356.0], [2096.0, 4751.0], [2088.0, 4797.0], [2136.0, 5481.0], [2280.0, 5720.0], [2296.0, 7965.0], [2240.0, 6602.0], [2248.0, 6542.0], [2256.0, 6097.0], [2264.0, 6255.0], [2272.0, 6048.0], [2176.0, 4680.0], [2184.0, 4574.0], [2192.0, 4493.0], [2200.0, 4349.0], [2232.0, 6398.0], [2224.0, 4565.0], [2216.0, 6033.666666666667], [2208.0, 4866.0], [2416.0, 6028.0], [2408.0, 5754.0], [2424.0, 5827.0], [2368.0, 6118.0], [2376.0, 6107.0], [2384.0, 6298.0], [2392.0, 5940.0], [2400.0, 5841.0], [2328.0, 6101.0], [2320.0, 7713.0], [2312.0, 5558.0], [2304.0, 7943.0], [2360.0, 7439.0], [2352.0, 7658.0], [2344.0, 7312.0], [2336.0, 6701.0], [2528.0, 5312.0], [2544.0, 5300.0], [2496.0, 2561.0], [2504.0, 2530.0], [2512.0, 2348.0], [2520.0, 2102.0], [2456.0, 3796.0], [2448.0, 4589.0], [2440.0, 3981.0], [2432.0, 6354.0], [2488.0, 2502.0], [2480.0, 2583.0], [2472.0, 4133.0], [2464.0, 3040.0], [2664.0, 5649.0], [2672.0, 6148.0], [2680.0, 6010.0], [2624.0, 4899.0], [2632.0, 6031.0], [2648.0, 6005.0], [2656.0, 5795.0], [2568.0, 5622.0], [2576.0, 5928.0], [2584.0, 6406.0], [2616.0, 5103.0], [2608.0, 5319.0], [2600.0, 5002.0], [2592.0, 6359.0], [2800.0, 4441.0], [2808.0, 5191.0], [2752.0, 7010.0], [2760.0, 4567.0], [2768.0, 3892.0], [2776.0, 4969.0], [2792.0, 4774.0], [2784.0, 5596.0], [2712.0, 5479.0], [2704.0, 5531.0], [2696.0, 5549.0], [2688.0, 6157.0], [2744.0, 4812.0], [2736.0, 4979.0], [2728.0, 5216.0], [2720.0, 7850.0], [2928.0, 2179.0], [2880.0, 4095.0], [2888.0, 4504.0], [2896.0, 2276.0], [2904.0, 2543.0], [2920.0, 2353.0], [2912.0, 2438.0], [2840.0, 4584.0], [2832.0, 4965.0], [2824.0, 5035.0], [2816.0, 5145.0], [2872.0, 4978.0], [2848.0, 5098.0], [2952.0, 2230.0], [2960.0, 2472.0], [3000.0, 8688.598429319356], [2944.0, 2320.0], [2968.0, 2383.0], [2992.0, 5434.0], [2984.0, 2012.0], [2976.0, 2210.0], [2145.0, 5395.0], [2161.0, 5088.0], [2113.0, 3786.0], [2129.0, 5610.0], [2169.0, 4717.0], [2153.0, 5426.0], [2049.0, 6157.0], [2057.0, 4377.0], [2065.0, 3569.0], [2073.0, 4311.0], [2105.0, 4093.0], [2097.0, 4734.0], [2089.0, 4054.0], [2081.0, 3730.0], [2137.0, 5471.0], [2289.0, 7132.0], [2297.0, 6500.0], [2241.0, 4260.0], [2249.0, 6159.0], [2257.0, 6095.0], [2265.0, 3896.0], [2281.0, 5370.0], [2273.0, 6029.0], [2201.0, 4347.0], [2185.0, 4200.0], [2177.0, 4678.0], [2233.0, 4411.0], [2225.0, 4553.0], [2217.0, 4599.0], [2209.0, 4127.0], [2417.0, 5546.0], [2425.0, 5326.0], [2369.0, 6118.0], [2377.0, 6106.0], [2385.0, 6506.0], [2393.0, 6355.0], [2409.0, 5267.0], [2401.0, 5821.0], [2329.0, 7541.0], [2321.0, 6235.0], [2313.0, 8419.0], [2305.0, 6459.0], [2361.0, 5377.0], [2353.0, 7656.0], [2345.0, 7265.0], [2337.0, 5963.0], [2457.0, 4416.0], [2545.0, 5301.0], [2513.0, 2345.0], [2497.0, 2552.0], [2505.0, 2521.0], [2521.0, 2082.0], [2449.0, 3958.0], [2441.0, 3979.0], [2433.0, 6305.0], [2489.0, 2485.0], [2481.0, 2579.0], [2473.0, 3508.0], [2465.0, 3714.0], [2665.0, 5647.0], [2681.0, 5926.0], [2625.0, 4227.0], [2633.0, 4169.0], [2641.0, 6315.5], [2649.0, 6000.0], [2657.0, 3905.0], [2561.0, 5558.0], [2569.0, 6469.0], [2577.0, 5929.0], [2585.0, 6406.0], [2617.0, 5091.0], [2609.0, 4783.0], [2601.0, 4664.0], [2593.0, 5828.0], [2809.0, 5191.0], [2753.0, 6997.0], [2761.0, 3972.0], [2769.0, 5757.0], [2777.0, 5674.0], [2801.0, 5171.0], [2793.0, 4763.0], [2785.0, 4834.0], [2713.0, 6069.0], [2705.0, 5531.0], [2697.0, 5544.0], [2689.0, 6155.0], [2745.0, 7210.0], [2737.0, 5561.0], [2729.0, 5787.0], [2721.0, 5383.0], [2937.0, 2397.5], [2881.0, 4681.0], [2889.0, 4457.0], [2897.0, 2262.0], [2905.0, 2541.0], [2929.0, 2167.0], [2921.0, 2335.0], [2913.0, 2431.0], [2841.0, 4521.0], [2833.0, 4959.0], [2825.0, 5021.0], [2817.0, 4514.0], [2873.0, 4127.0], [2865.0, 4574.5], [2857.0, 5088.0], [2849.0, 4504.0], [2945.0, 2309.0], [2953.0, 2209.0], [2961.0, 2465.0], [2969.0, 2381.0], [2985.0, 1972.0], [2977.0, 2184.0], [1037.0, 14052.0], [1085.0, 16333.0], [1077.0, 17511.0], [1069.0, 17753.0], [1061.0, 18115.0], [1053.0, 17235.0], [1049.0, 16501.0], [1045.0, 17562.0], [1041.0, 17288.0], [1033.0, 16121.0], [1029.0, 16126.0], [1025.0, 19196.0], [1141.0, 16916.0], [1137.0, 17728.0], [1101.0, 17661.0], [1097.0, 17001.0], [1089.0, 17474.0], [1133.0, 16948.0], [1129.0, 15802.0], [1125.0, 17015.0], [1121.0, 18127.0], [1117.0, 18772.666666666668], [1113.0, 17547.0], [1109.0, 18466.0], [1105.0, 15940.0], [1209.0, 15907.0], [1213.0, 18605.0], [1205.0, 15933.0], [1201.0, 15900.0], [1197.0, 15088.0], [1193.0, 16496.0], [1189.0, 16401.0], [1185.0, 15795.0], [1181.0, 16857.0], [1157.0, 17531.0], [1153.0, 16751.0], [1165.0, 17207.5], [1161.0, 17802.0], [1177.0, 16930.5], [1173.0, 16041.0], [1169.0, 18811.0], [1273.0, 15885.0], [1277.0, 14812.0], [1269.0, 13502.0], [1265.0, 15964.0], [1261.0, 15997.0], [1257.0, 15043.0], [1253.0, 14142.0], [1249.0, 13643.0], [1245.0, 13234.0], [1221.0, 15470.0], [1217.0, 16892.0], [1229.0, 15039.0], [1225.0, 15447.0], [1241.0, 16628.0], [1237.0, 18329.0], [1233.0, 16730.0], [1337.0, 6907.0], [1341.0, 9220.0], [1333.0, 7045.0], [1329.0, 9467.0], [1325.0, 7190.0], [1321.0, 9577.0], [1317.0, 7835.0], [1313.0, 7402.0], [1309.0, 8089.0], [1285.0, 8133.0], [1281.0, 15817.0], [1293.0, 7532.0], [1289.0, 7883.5], [1305.0, 7608.0], [1301.0, 8111.0], [1297.0, 9894.0], [1401.0, 8291.0], [1377.0, 8482.0], [1381.0, 8351.0], [1385.0, 6536.0], [1405.0, 9977.0], [1397.0, 8343.0], [1393.0, 5956.0], [1349.0, 6734.0], [1357.0, 6787.0], [1373.0, 6721.0], [1345.0, 6920.0], [1369.0, 6516.0], [1365.0, 8952.0], [1361.0, 6666.0], [1389.0, 5992.0], [1465.0, 9169.0], [1469.0, 9119.0], [1441.0, 7098.0], [1445.0, 6166.0], [1449.0, 9407.0], [1461.0, 7998.0], [1457.0, 5914.0], [1421.0, 6694.0], [1417.0, 6698.0], [1409.0, 7624.0], [1437.0, 7349.0], [1433.0, 6530.0], [1429.0, 9909.0], [1453.0, 7041.0], [1529.0, 7254.0], [1505.0, 7450.0], [1509.0, 7416.0], [1513.0, 7556.0], [1533.0, 6988.0], [1525.0, 7961.0], [1521.0, 8021.0], [1477.0, 5695.0], [1473.0, 6614.0], [1481.0, 5998.0], [1501.0, 7556.5], [1497.0, 8212.0], [1493.0, 7483.0], [1489.0, 7490.0], [1517.0, 7501.0], [1593.0, 2760.0], [1569.0, 4296.0], [1577.0, 4119.0], [1597.0, 5958.0], [1589.0, 2813.0], [1585.0, 3975.0], [1537.0, 7038.0], [1549.0, 6716.0], [1565.0, 7000.0], [1561.0, 6664.0], [1557.0, 6847.0], [1553.0, 6874.0], [1581.0, 4056.0], [1657.0, 7344.0], [1661.0, 6058.0], [1637.0, 5476.2], [1641.0, 5263.0], [1649.0, 5420.0], [1613.0, 5327.0], [1609.0, 5341.0], [1605.0, 5726.0], [1601.0, 5866.0], [1629.0, 5523.0], [1625.0, 5525.0], [1621.0, 5314.0], [1617.0, 5321.0], [1645.0, 6195.0], [1721.0, 6248.0], [1697.0, 5076.0], [1701.0, 6457.0], [1705.0, 5100.0], [1725.0, 5783.0], [1717.0, 5811.0], [1713.0, 5920.0], [1665.0, 7003.0], [1669.0, 5747.0], [1673.0, 4930.0], [1677.0, 6725.0], [1693.0, 5211.0], [1689.0, 6513.0], [1685.0, 5325.0], [1681.0, 6688.0], [1709.0, 5079.0], [1785.0, 8740.0], [1777.0, 9191.0], [1761.0, 5412.0], [1769.0, 6702.0], [1765.0, 8918.0], [1789.0, 8722.0], [1781.0, 9146.0], [1729.0, 5764.0], [1733.0, 6177.0], [1737.0, 5574.0], [1741.0, 5971.0], [1757.0, 4075.0], [1753.0, 5681.0], [1749.0, 5815.0], [1745.0, 5917.0], [1849.0, 6979.0], [1825.0, 8104.0], [1829.0, 8428.0], [1833.0, 7670.0], [1853.0, 6974.0], [1845.0, 7658.0], [1841.0, 7359.0], [1793.0, 8670.0], [1797.0, 8557.0], [1801.0, 6328.0], [1805.0, 8510.0], [1821.0, 4699.0], [1817.0, 8771.0], [1813.0, 8477.0], [1809.0, 7402.5], [1837.0, 7544.0], [1913.0, 6931.0], [1889.0, 6888.0], [1893.0, 6852.0], [1897.0, 6719.0], [1917.0, 6874.0], [1909.0, 7886.0], [1905.0, 6527.0], [1857.0, 8029.0], [1861.0, 7158.0], [1865.0, 7150.0], [1869.0, 8004.0], [1885.0, 7865.0], [1881.0, 7923.0], [1877.0, 6889.0], [1873.0, 7986.0], [1901.0, 7422.0], [1977.0, 6760.0], [1953.0, 7092.0], [1957.0, 7047.0], [1961.0, 7840.0], [1981.0, 6559.0], [1973.0, 7788.0], [1969.0, 7821.0], [1921.0, 6027.0], [1925.0, 5991.0], [1929.0, 7552.0], [1933.0, 5601.5], [1949.0, 7158.0], [1945.0, 5636.0], [1941.0, 7309.0], [1937.0, 5681.0], [1965.0, 6817.0], [2041.0, 5083.0], [2017.0, 6698.0], [2021.0, 5428.0], [2025.0, 5396.0], [2045.0, 6180.0], [2037.0, 5154.0], [2033.0, 6368.0], [1985.0, 6467.0], [1989.0, 5655.0], [1993.0, 5620.0], [1997.0, 5623.0], [2013.0, 5580.0], [2009.0, 5600.0], [2005.0, 5613.0], [2001.0, 5588.0], [2029.0, 5330.0], [2162.0, 5047.0], [2114.0, 5699.0], [2130.0, 5590.0], [2170.0, 4337.0], [2154.0, 5193.0], [2146.0, 5382.0], [2050.0, 6122.0], [2058.0, 4376.0], [2066.0, 4357.0], [2074.0, 4304.0], [2106.0, 3348.0], [2098.0, 4692.0], [2090.0, 4792.0], [2082.0, 4119.0], [2138.0, 5433.0], [2282.0, 5715.0], [2290.0, 6505.0], [2242.0, 4253.0], [2250.0, 6118.0], [2258.0, 4044.0], [2266.0, 6193.0], [2274.0, 5898.0], [2178.0, 4672.0], [2186.0, 4565.0], [2194.0, 4850.0], [2202.0, 5054.0], [2234.0, 4402.0], [2226.0, 6519.0], [2210.0, 3607.0], [2418.0, 5539.0], [2370.0, 5629.0], [2386.0, 5585.0], [2394.0, 6342.0], [2426.0, 5735.0], [2410.0, 5752.0], [2402.0, 6249.0], [2330.0, 8120.0], [2322.0, 7698.0], [2314.0, 7819.0], [2306.0, 7918.0], [2362.0, 6840.0], [2354.0, 7052.0], [2346.0, 7843.0], [2338.0, 7414.0], [2546.0, 5625.0], [2554.0, 5297.5], [2498.0, 2551.0], [2506.0, 2512.0], [2514.0, 2262.0], [2522.0, 2066.0], [2538.0, 5412.333333333333], [2530.0, 5309.5], [2458.0, 3723.0], [2450.0, 3935.0], [2434.0, 4598.0], [2490.0, 2384.0], [2482.0, 2572.0], [2474.0, 2022.0], [2466.0, 4256.0], [2682.0, 5267.0], [2626.0, 4210.0], [2634.0, 4168.0], [2642.0, 4158.0], [2650.0, 5998.0], [2674.0, 6121.5], [2666.0, 6234.0], [2658.0, 3893.0], [2570.0, 5936.0], [2578.0, 5601.0], [2586.0, 5546.0], [2618.0, 5053.0], [2610.0, 4676.0], [2602.0, 5495.0], [2594.0, 6356.0], [2802.0, 5137.0], [2754.0, 5116.0], [2762.0, 3964.0], [2770.0, 5728.0], [2778.0, 5665.0], [2810.0, 5188.0], [2794.0, 5500.0], [2786.0, 5555.0], [2714.0, 5452.0], [2706.0, 6121.0], [2698.0, 5540.0], [2746.0, 4725.0], [2738.0, 5560.0], [2730.0, 5186.0], [2722.0, 5345.0], [2938.0, 2397.0], [2930.0, 2462.0], [2882.0, 4680.0], [2890.0, 4412.0], [2898.0, 2250.0], [2906.0, 2532.0], [2922.0, 2321.0], [2914.0, 2417.0], [2842.0, 4515.0], [2834.0, 4948.0], [2826.0, 5002.0], [2818.0, 5071.0], [2874.0, 4716.0], [2866.0, 5043.0], [2858.0, 4492.0], [2850.0, 4503.0], [2954.0, 2205.0], [2946.0, 2306.0], [2962.0, 2458.0], [2970.0, 2378.0], [2994.0, 5431.5], [2986.0, 1972.0], [2978.0, 2113.0], [2163.0, 4595.0], [2115.0, 3783.0], [2131.0, 5568.0], [2171.0, 4709.0], [2155.0, 5392.0], [2147.0, 5598.0], [2051.0, 6101.0], [2059.0, 5114.0], [2067.0, 5093.0], [2075.0, 4288.0], [2107.0, 4065.0], [2099.0, 4594.0], [2091.0, 4041.0], [2083.0, 4113.0], [2139.0, 5662.0], [2299.0, 6497.5], [2243.0, 4247.0], [2251.0, 6112.0], [2259.0, 4034.0], [2267.0, 5836.0], [2291.0, 6506.0], [2275.0, 5898.0], [2203.0, 4318.0], [2187.0, 4190.0], [2179.0, 4656.0], [2227.0, 6451.0], [2219.0, 6576.0], [2211.0, 4613.0], [2427.0, 4796.0], [2371.0, 6542.0], [2387.0, 6421.0], [2395.0, 5415.0], [2419.0, 5930.0], [2403.0, 6247.0], [2331.0, 7456.0], [2323.0, 6234.0], [2315.0, 5540.0], [2307.0, 6451.0], [2363.0, 5373.0], [2355.0, 5508.0], [2347.0, 5756.0], [2339.0, 8008.0], [2555.0, 5623.0], [2499.0, 2542.0], [2507.0, 2510.0], [2515.0, 2188.0], [2523.0, 2065.0], [2531.0, 5311.0], [2459.0, 3719.0], [2451.0, 3926.0], [2443.0, 3977.0], [2435.0, 3983.0], [2491.0, 2356.0], [2483.0, 2564.0], [2475.0, 2638.0], [2467.0, 3625.0], [2675.0, 6112.0], [2683.0, 5226.0], [2627.0, 4669.0], [2635.0, 6618.0], [2651.0, 5985.0], [2667.0, 3778.0], [2659.0, 5739.0], [2563.0, 5622.0], [2587.0, 5538.0], [2619.0, 4194.0], [2611.0, 4637.0], [2603.0, 4917.0], [2595.0, 5469.0], [2803.0, 5112.0], [2795.0, 5483.0], [2811.0, 5171.0], [2755.0, 6945.0], [2763.0, 3944.0], [2779.0, 4915.0], [2787.0, 5542.0], [2715.0, 5443.0], [2707.0, 7990.0], [2699.0, 5537.0], [2691.0, 5855.5], [2747.0, 4700.0], [2739.0, 5555.0], [2731.0, 5183.0], [2723.0, 5337.0], [2939.0, 2376.0], [2883.0, 4064.0], [2891.0, 4261.0], [2899.0, 2235.0], [2907.0, 2524.0], [2931.0, 2456.0], [2923.0, 2319.0], [2915.0, 2404.0], [2843.0, 4512.0], [2835.0, 4907.0], [2827.0, 4434.0], [2819.0, 5061.0], [2875.0, 4120.0], [2859.0, 5084.0], [2851.0, 4501.0], [2947.0, 2299.0], [2955.0, 2190.0], [2995.0, 5429.0], [2963.0, 2452.0], [2971.0, 2353.0], [2987.0, 1971.0], [2979.0, 2112.0], [541.0, 10919.0], [543.0, 9904.0], [539.0, 10834.0], [537.0, 10005.0], [535.0, 10457.5], [533.0, 11030.0], [531.0, 10911.0], [529.0, 11428.0], [527.0, 10406.0], [515.0, 10480.0], [513.0, 11492.0], [519.0, 11328.0], [517.0, 11487.0], [525.0, 11443.0], [523.0, 10418.0], [521.0, 10443.0], [571.0, 9324.0], [573.0, 10115.0], [569.0, 10215.0], [551.0, 9722.0], [549.0, 10654.0], [547.0, 10687.0], [545.0, 9854.0], [567.0, 13569.0], [565.0, 9370.0], [563.0, 9352.0], [559.0, 10565.0], [557.0, 10594.0], [555.0, 10662.0], [553.0, 10542.0], [603.0, 12187.0], [607.0, 11013.0], [601.0, 11033.0], [583.0, 11062.0], [581.0, 13157.0], [579.0, 10027.0], [577.0, 10023.333333333334], [599.0, 11034.0], [597.0, 11039.0], [595.0, 11042.0], [593.0, 11043.0], [591.0, 12202.0], [589.0, 11051.0], [587.0, 11056.0], [585.0, 11057.0], [639.0, 13270.666666666666], [635.0, 12163.0], [613.0, 11579.8], [631.0, 12164.0], [629.0, 12700.0], [627.0, 13135.0], [625.0, 13124.5], [623.0, 16332.5], [621.0, 15034.0], [619.0, 14804.0], [669.0, 12476.0], [671.0, 18567.0], [667.0, 12476.0], [665.0, 19719.0], [663.0, 12492.5], [661.0, 11947.0], [659.0, 12486.0], [657.0, 17694.0], [655.0, 12494.0], [643.0, 12162.0], [641.0, 13545.0], [647.0, 11006.0], [645.0, 19937.0], [653.0, 14836.0], [651.0, 18597.0], [649.0, 11004.0], [697.0, 18502.0], [703.0, 12377.0], [701.0, 18471.0], [699.0, 12400.0], [693.0, 18515.0], [687.0, 12455.0], [675.0, 11928.0], [673.0, 15520.5], [685.0, 19681.0], [683.0, 13298.0], [679.0, 18548.0], [677.0, 13304.0], [733.0, 17063.0], [735.0, 16113.0], [729.0, 11073.0], [711.0, 13167.0], [709.0, 18430.0], [707.0, 17562.0], [705.0, 14707.0], [727.0, 17190.0], [725.0, 12136.0], [723.0, 18217.0], [721.0, 11672.0], [719.0, 19481.0], [717.0, 12258.0], [715.0, 12279.0], [765.0, 11054.0], [767.0, 10226.0], [763.0, 17467.0], [761.0, 9725.0], [759.0, 17576.0], [757.0, 17595.0], [755.0, 11261.0], [753.0, 10462.0], [751.0, 9909.0], [739.0, 10337.0], [737.0, 18132.0], [743.0, 15784.0], [741.0, 18084.0], [749.0, 10512.0], [747.0, 16609.0], [745.0, 10566.0], [797.0, 14578.0], [799.0, 10220.0], [795.0, 9409.0], [793.0, 14602.0], [791.0, 14615.0], [789.0, 9443.0], [787.0, 9467.0], [785.0, 16689.0], [783.0, 14664.0], [771.0, 10799.0], [769.0, 17192.0], [775.0, 14791.0], [773.0, 14863.0], [781.0, 10324.0], [779.0, 10342.0], [777.0, 10418.0], [829.0, 15407.0], [831.0, 17782.0], [827.0, 15837.0], [825.0, 21937.0], [823.0, 21228.0], [821.0, 21230.0], [819.0, 21945.0], [817.0, 18251.0], [815.0, 18252.0], [803.0, 9135.0], [801.0, 15241.0], [807.0, 8965.0], [805.0, 9035.0], [813.0, 15494.0], [811.0, 14871.0], [809.0, 8948.0], [861.0, 15798.0], [859.0, 17077.625], [857.0, 17517.5], [855.0, 20252.285714285714], [837.0, 15801.0], [835.0, 14849.0], [833.0, 14853.0], [893.0, 21073.0], [895.0, 21770.0], [891.0, 15232.5], [889.0, 17665.0], [885.0, 18097.0], [883.0, 18196.5], [881.0, 15734.0], [879.0, 14779.0], [867.0, 15798.0], [871.0, 14822.0], [869.0, 19663.0], [877.0, 23871.0], [875.0, 17729.0], [873.0, 21857.0], [925.0, 15165.0], [927.0, 21636.0], [923.0, 15176.0], [921.0, 15605.0], [919.0, 21689.0], [917.0, 18016.0], [915.0, 21715.0], [913.0, 19709.5], [911.0, 15224.0], [899.0, 15268.0], [897.0, 15270.0], [903.0, 15251.0], [901.0, 23810.0], [909.0, 15660.0], [907.0, 14693.0], [905.0, 17617.0], [955.0, 13434.0], [959.0, 12187.0], [953.0, 15875.0], [935.0, 14191.0], [929.0, 13918.0], [951.0, 12626.0], [949.0, 19118.0], [947.0, 15732.0], [945.0, 15811.0], [943.0, 13897.0], [941.0, 13974.0], [939.0, 19373.0], [937.0, 15991.0], [989.0, 12424.0], [991.0, 17723.0], [987.0, 17801.0], [985.0, 14421.0], [983.0, 17940.0], [981.0, 17975.0], [979.0, 17981.0], [977.0, 11679.0], [975.0, 12652.0], [963.0, 21165.0], [961.0, 12687.0], [967.0, 20864.0], [965.0, 21128.0], [973.0, 11695.0], [971.0, 11715.0], [969.0, 14684.0], [1021.0, 16677.0], [1023.0, 11164.0], [1019.0, 16899.0], [1017.0, 17659.0], [1015.0, 14020.0], [1013.0, 14052.0], [1011.0, 19812.0], [1009.0, 14094.0], [1007.0, 19883.0], [995.0, 14543.0], [993.0, 14682.0], [999.0, 14446.0], [997.0, 14529.0], [1005.0, 19965.0], [1003.0, 11863.0], [1001.0, 17421.0], [1082.0, 18047.5], [1086.0, 17200.0], [1074.0, 17753.0], [1038.0, 14048.0], [1034.0, 14059.0], [1030.0, 14070.0], [1026.0, 10608.0], [1070.0, 17753.0], [1066.0, 17988.666666666668], [1058.0, 18050.5], [1050.0, 18635.0], [1046.0, 17278.0], [1042.0, 18648.0], [1146.0, 16433.0], [1150.0, 17341.5], [1142.0, 15747.0], [1138.0, 15768.0], [1134.0, 17734.0], [1130.0, 17755.0], [1126.0, 17260.0], [1122.0, 16160.0], [1118.0, 17545.0], [1114.0, 17066.0], [1110.0, 18450.0], [1106.0, 17607.0], [1210.0, 16984.0], [1214.0, 18604.0], [1206.0, 15950.0], [1202.0, 18302.0], [1198.0, 16245.0], [1194.0, 15623.0], [1190.0, 16081.0], [1186.0, 16152.0], [1182.0, 17447.0], [1158.0, 16454.0], [1154.0, 17820.0], [1166.0, 16908.0], [1162.0, 16720.0], [1178.0, 17749.0], [1174.0, 17470.0], [1170.0, 16688.0], [1274.0, 15884.0], [1278.0, 15848.0], [1270.0, 14608.0], [1266.0, 13839.0], [1262.0, 13586.0], [1258.0, 16073.0], [1254.0, 13822.0], [1250.0, 14225.0], [1246.0, 17148.0], [1222.0, 16544.0], [1218.0, 15778.0], [1230.0, 15678.0], [1226.0, 14548.0], [1242.0, 14490.0], [1238.0, 15723.0], [1234.0, 16435.0], [1338.0, 6898.0], [1342.0, 6950.0], [1334.0, 7545.0], [1330.0, 7162.0], [1322.0, 7790.0], [1318.0, 7831.0], [1314.0, 7394.0], [1310.0, 8089.0], [1286.0, 9906.0], [1282.0, 15804.0], [1294.0, 9897.0], [1290.0, 7535.0], [1306.0, 8095.0], [1302.0, 7617.0], [1298.0, 8118.0], [1398.0, 5772.0], [1394.0, 5954.0], [1406.0, 7630.0], [1378.0, 8481.0], [1382.0, 6575.0], [1386.0, 8292.0], [1402.0, 5636.0], [1358.0, 9050.0], [1354.0, 6806.0], [1350.0, 7313.0], [1374.0, 6721.0], [1346.0, 6767.0], [1370.0, 9031.0], [1362.0, 6658.0], [1390.0, 5982.0], [1458.0, 5910.0], [1466.0, 6817.0], [1442.0, 9441.0], [1462.0, 6824.0], [1438.0, 7236.0], [1410.0, 6707.0], [1414.0, 8790.5], [1422.0, 7606.0], [1430.0, 7510.0], [1426.0, 8777.0], [1454.0, 9847.0], [1446.0, 9426.0], [1530.0, 7243.0], [1534.0, 7716.0], [1506.0, 8184.0], [1510.0, 7415.0], [1514.0, 8102.0], [1526.0, 7411.0], [1522.0, 7469.0], [1502.0, 7460.0], [1478.0, 8728.0], [1482.0, 5977.0], [1486.0, 7197.0], [1498.0, 7663.0], [1490.0, 7489.0], [1518.0, 7491.0], [1594.0, 2736.0], [1598.0, 6186.0], [1570.0, 4292.0], [1578.0, 3671.0], [1590.0, 2805.0], [1586.0, 3960.0], [1566.0, 6538.0], [1538.0, 6943.0], [1542.0, 6677.0], [1550.0, 6715.0], [1562.0, 6657.0], [1558.0, 6106.0], [1554.0, 6870.0], [1582.0, 4043.0], [1658.0, 7341.0], [1662.0, 5812.0], [1638.0, 5522.0], [1642.0, 5492.0], [1654.0, 5788.0], [1650.0, 6172.0], [1630.0, 5523.0], [1602.0, 5857.0], [1606.0, 5666.0], [1610.0, 5339.0], [1614.0, 5326.0], [1626.0, 5524.0], [1622.0, 5526.0], [1618.0, 5320.0], [1646.0, 6192.0], [1722.0, 5796.0], [1726.0, 5780.0], [1698.0, 5045.0], [1702.0, 5105.0], [1706.0, 5992.0], [1718.0, 5805.0], [1714.0, 5019.0], [1694.0, 6381.0], [1666.0, 7002.0], [1670.0, 4981.0], [1678.0, 5502.0], [1674.0, 4865.0], [1690.0, 5285.0], [1686.0, 5324.0], [1682.0, 5466.0], [1710.0, 5970.0], [1786.0, 6542.0], [1790.0, 8721.0], [1762.0, 6722.0], [1766.0, 6720.0], [1770.0, 6693.0], [1782.0, 6558.0], [1778.0, 6593.0], [1758.0, 6733.0], [1730.0, 6210.0], [1734.0, 5721.0], [1738.0, 5554.0], [1742.0, 5957.0], [1754.0, 5672.0], [1750.0, 5800.0], [1746.0, 5369.0], [1774.0, 7783.5], [1850.0, 6976.0], [1854.0, 7172.0], [1826.0, 8469.0], [1830.0, 8370.0], [1834.0, 7654.0], [1846.0, 7251.0], [1842.0, 7298.0], [1822.0, 8187.0], [1794.0, 5153.0], [1798.0, 8556.0], [1802.0, 8518.0], [1806.0, 8507.0], [1818.0, 6100.0], [1814.0, 4968.0], [1810.0, 8869.0], [1838.0, 7529.0], [1914.0, 6920.0], [1918.0, 6769.0], [1890.0, 7750.0], [1898.0, 6718.0], [1910.0, 7877.0], [1906.0, 6511.0], [1886.0, 6938.0], [1858.0, 6964.0], [1862.0, 6954.0], [1866.0, 7149.0], [1870.0, 7139.0], [1882.0, 7055.0], [1878.0, 7948.0], [1874.0, 7118.0], [1902.0, 7413.0], [1978.0, 6651.0], [1982.0, 6552.0], [1954.0, 5447.0], [1958.0, 7847.0], [1974.0, 7788.0], [1970.0, 7814.0], [1950.0, 7153.0], [1922.0, 6012.0], [1926.0, 5976.0], [1934.0, 5280.0], [1930.0, 5885.0], [1946.0, 7260.0], [1942.0, 7304.0], [1938.0, 5670.0], [1966.0, 5172.0], [2042.0, 5105.0], [2046.0, 5033.0], [2018.0, 6659.0], [2022.0, 6568.0], [2026.0, 5378.0], [2038.0, 5181.0], [2034.0, 5201.0], [2014.0, 6724.0], [1986.0, 6452.0], [1990.0, 5650.0], [1998.0, 5592.0], [2010.0, 5594.0], [2006.0, 5577.0], [2002.0, 5619.0], [2030.0, 5259.0], [2164.0, 4593.0], [2172.0, 4709.0], [2116.0, 5927.0], [2132.0, 5751.0], [2156.0, 5364.0], [2148.0, 5513.0], [2108.0, 4057.0], [2052.0, 6037.0], [2060.0, 3580.0], [2068.0, 4350.0], [2076.0, 4252.0], [2100.0, 3843.0], [2092.0, 4776.0], [2084.0, 4850.0], [2140.0, 5659.0], [2292.0, 5689.0], [2276.0, 5897.0], [2244.0, 6219.0], [2252.0, 6106.0], [2260.0, 4031.0], [2268.0, 6182.0], [2300.0, 6496.0], [2284.0, 6107.5], [2180.0, 4619.0], [2188.0, 4137.0], [2204.0, 4920.0], [2236.0, 6349.0], [2228.0, 6446.0], [2220.0, 6573.0], [2212.0, 4602.0], [2428.0, 4783.0], [2372.0, 6112.0], [2380.0, 6249.333333333333], [2388.0, 5990.0], [2396.0, 6323.0], [2420.0, 5490.0], [2412.0, 5750.0], [2404.0, 5313.0], [2332.0, 5987.0], [2324.0, 6224.0], [2316.0, 6354.0], [2364.0, 4358.0], [2356.0, 7548.0], [2348.0, 7209.0], [2340.0, 7989.0], [2540.0, 5629.0], [2500.0, 2541.0], [2508.0, 2502.0], [2516.0, 2163.0], [2524.0, 5361.0], [2460.0, 4337.0], [2452.0, 3907.0], [2444.0, 3977.0], [2436.0, 3983.0], [2492.0, 2334.0], [2484.0, 2557.0], [2476.0, 2626.0], [2468.0, 4212.0], [2676.0, 5507.0], [2684.0, 3353.0], [2628.0, 4136.0], [2636.0, 6026.0], [2644.0, 6020.0], [2652.0, 5974.0], [2668.0, 5637.0], [2660.0, 5737.0], [2564.0, 6477.0], [2572.0, 5445.5], [2588.0, 5536.0], [2620.0, 4447.0], [2612.0, 5151.0], [2604.0, 4541.0], [2596.0, 6298.0], [2804.0, 5103.0], [2756.0, 6676.0], [2764.0, 6376.0], [2780.0, 4909.0], [2812.0, 4608.0], [2796.0, 5468.0], [2788.0, 5539.0], [2716.0, 6025.0], [2708.0, 7988.0], [2700.0, 5533.0], [2692.0, 5557.0], [2748.0, 4581.0], [2732.0, 5179.0], [2724.0, 5919.0], [2940.0, 2376.0], [2932.0, 2438.0], [2884.0, 3992.0], [2892.0, 2418.0], [2900.0, 2185.0], [2908.0, 2506.0], [2924.0, 2311.0], [2916.0, 2394.0], [2836.0, 4892.0], [2828.0, 4986.0], [2820.0, 5054.0], [2876.0, 4712.0], [2868.0, 4429.5], [2860.0, 4486.0], [2852.0, 4497.0], [2948.0, 2295.0], [2956.0, 2152.0], [2964.0, 2446.0], [2972.0, 2327.0], [2988.0, 5460.0], [2980.0, 2102.0], [2165.0, 4588.0], [2173.0, 4706.0], [2117.0, 3780.0], [2133.0, 5510.0], [2157.0, 5111.0], [2149.0, 5277.0], [2109.0, 3241.0], [2053.0, 5994.0], [2061.0, 4370.0], [2069.0, 4347.0], [2077.0, 4221.0], [2101.0, 3697.0], [2093.0, 4032.0], [2085.0, 4849.0], [2141.0, 5428.0], [2301.0, 6488.0], [2245.0, 6217.0], [2253.0, 6104.0], [2261.0, 4030.0], [2269.0, 6152.0], [2293.0, 5689.0], [2285.0, 7975.0], [2277.0, 5892.0], [2205.0, 4200.0], [2197.0, 4458.666666666667], [2189.0, 4130.0], [2181.0, 4604.0], [2237.0, 4370.0], [2229.0, 4466.0], [2213.0, 4600.0], [2429.0, 5259.0], [2381.0, 6104.0], [2389.0, 5975.0], [2397.0, 6314.0], [2421.0, 5426.0], [2413.0, 6179.0], [2405.0, 5779.0], [2333.0, 8038.0], [2325.0, 5313.0], [2317.0, 7766.0], [2309.0, 6776.5], [2365.0, 6544.0], [2357.0, 6923.0], [2349.0, 7760.0], [2341.0, 5900.0], [2557.0, 5949.0], [2509.0, 2429.0], [2517.0, 2146.0], [2525.0, 5318.0], [2549.0, 5624.0], [2541.0, 5628.0], [2533.0, 5309.0], [2461.0, 4337.0], [2453.0, 3900.0], [2445.0, 3301.0], [2437.0, 3307.0], [2493.0, 2328.0], [2485.0, 2552.0], [2477.0, 2612.0], [2469.0, 3577.0], [2677.0, 6092.0], [2629.0, 4472.0], [2637.0, 6024.0], [2645.0, 6011.0], [2653.0, 6535.0], [2685.0, 5804.0], [2661.0, 5726.0], [2565.0, 5622.0], [2573.0, 5607.0], [2581.0, 5708.666666666667], [2621.0, 4447.0], [2613.0, 4285.0], [2605.0, 5391.0], [2597.0, 5758.0], [2805.0, 5044.0], [2813.0, 5167.0], [2757.0, 4794.0], [2765.0, 4483.0], [2773.0, 5343.5], [2781.0, 5637.0], [2797.0, 5429.0], [2789.0, 5535.0], [2717.0, 6023.0], [2709.0, 7978.0], [2693.0, 5557.0], [2749.0, 4579.0], [2741.0, 5174.5], [2733.0, 5738.0], [2725.0, 7777.0], [2933.0, 2418.0], [2941.0, 2358.0], [2885.0, 3976.0], [2893.0, 2381.0], [2901.0, 2563.0], [2909.0, 2489.0], [2925.0, 2305.0], [2917.0, 2388.0], [2845.0, 4511.0], [2837.0, 4788.0], [2829.0, 4984.0], [2877.0, 4114.0], [2861.0, 4088.0], [2853.0, 5090.0], [2957.0, 2143.0], [2949.0, 2276.0], [2965.0, 2415.0], [2973.0, 2313.0], [2989.0, 5442.0], [2981.0, 2051.0], [1039.0, 14048.0], [1079.0, 19009.5], [1087.0, 18268.0], [1075.0, 17552.0], [1067.0, 19675.0], [1063.0, 17754.0], [1051.0, 16390.0], [1047.0, 17557.0], [1043.0, 16402.0], [1035.0, 14057.0], [1031.0, 14069.0], [1027.0, 14077.0], [1147.0, 16252.0], [1151.0, 17596.0], [1143.0, 16624.0], [1139.0, 16293.0], [1135.0, 18016.0], [1127.0, 17984.0], [1123.0, 17516.0], [1111.0, 17570.0], [1103.0, 16948.5], [1099.0, 16558.5], [1095.0, 17595.333333333332], [1107.0, 19520.0], [1211.0, 14733.0], [1215.0, 18576.0], [1207.0, 15936.0], [1203.0, 15751.0], [1199.0, 17033.0], [1195.0, 16461.0], [1191.0, 17138.0], [1187.0, 17224.0], [1183.0, 16001.0], [1159.0, 18854.0], [1155.0, 16741.0], [1167.0, 15533.0], [1163.0, 16431.0], [1179.0, 16029.0], [1175.0, 16393.0], [1171.0, 16047.0], [1275.0, 14841.0], [1279.0, 13440.0], [1271.0, 14889.0], [1267.0, 14905.0], [1263.0, 14660.0], [1259.0, 15027.0], [1255.0, 15179.0], [1251.0, 16920.0], [1247.0, 14386.0], [1219.0, 17888.0], [1231.0, 15672.0], [1227.0, 15705.0], [1243.0, 15275.0], [1239.0, 13917.0], [1235.0, 16719.0], [1339.0, 6874.0], [1343.0, 6939.0], [1335.0, 7043.0], [1331.0, 9416.0], [1327.0, 8664.0], [1323.0, 9564.0], [1319.0, 7824.0], [1315.0, 9755.0], [1311.0, 8048.0], [1283.0, 16431.0], [1291.0, 7534.0], [1287.0, 8131.0], [1307.0, 8094.0], [1303.0, 7615.0], [1299.0, 8115.0], [1403.0, 5686.0], [1407.0, 6458.0], [1379.0, 8380.0], [1383.0, 8342.0], [1387.0, 8287.0], [1399.0, 8291.0], [1395.0, 5953.0], [1375.0, 8493.0], [1347.0, 6757.0], [1355.0, 6800.0], [1351.0, 9334.0], [1359.0, 6673.0], [1371.0, 8776.0], [1367.0, 6878.5], [1363.0, 9267.0], [1391.0, 8497.0], [1459.0, 6825.0], [1471.0, 9769.0], [1443.0, 9439.0], [1447.0, 9426.0], [1451.0, 8232.5], [1467.0, 6811.0], [1423.0, 9953.0], [1415.0, 9954.0], [1411.0, 7622.0], [1439.0, 9452.0], [1435.0, 8596.0], [1431.0, 6534.0], [1427.0, 9947.0], [1455.0, 9177.0], [1531.0, 7048.0], [1535.0, 7594.0], [1507.0, 7447.0], [1511.0, 7559.0], [1515.0, 7518.0], [1527.0, 7170.0], [1523.0, 7459.0], [1503.0, 7647.0], [1479.0, 6234.0], [1487.0, 7191.0], [1483.0, 8316.0], [1499.0, 8207.0], [1495.0, 8217.5], [1491.0, 8221.0], [1519.0, 7477.0], [1595.0, 2678.0], [1599.0, 5952.0], [1575.0, 4238.0], [1571.0, 4280.0], [1579.0, 4086.0], [1591.0, 2792.0], [1587.0, 2824.0], [1567.0, 4298.0], [1547.0, 6921.8], [1539.0, 7487.0], [1551.0, 7257.0], [1563.0, 6637.0], [1559.0, 6808.0], [1555.0, 6859.0], [1583.0, 4030.0], [1655.0, 6140.0], [1651.0, 5415.0], [1663.0, 5806.0], [1639.0, 5499.0], [1643.0, 5479.0], [1659.0, 5329.0], [1615.0, 5323.0], [1611.0, 5338.0], [1607.0, 5342.0], [1603.0, 5843.0], [1631.0, 5293.0], [1627.0, 5294.0], [1623.0, 5525.0], [1619.0, 5319.0], [1647.0, 5437.0], [1723.0, 5795.0], [1727.0, 5780.0], [1699.0, 4981.0], [1703.0, 6001.0], [1719.0, 6254.0], [1715.0, 5002.0], [1695.0, 5158.0], [1667.0, 5772.0], [1671.0, 6950.0], [1675.0, 5507.0], [1679.0, 6711.0], [1691.0, 6466.0], [1687.0, 6543.0], [1683.0, 6554.0], [1711.0, 5056.0], [1783.0, 6550.0], [1791.0, 9092.0], [1763.0, 5412.0], [1787.0, 6542.0], [1779.0, 6590.0], [1759.0, 5418.0], [1731.0, 5733.0], [1735.0, 5649.0], [1739.0, 5533.0], [1743.0, 5476.0], [1755.0, 4206.0], [1751.0, 5328.0], [1747.0, 5368.0], [1775.0, 5374.0], [1771.0, 5381.0], [1851.0, 8040.0], [1855.0, 8033.0], [1827.0, 8076.0], [1831.0, 8172.0], [1835.0, 7628.0], [1847.0, 8049.0], [1843.0, 7666.0], [1823.0, 5970.0], [1795.0, 6461.0], [1799.0, 8925.0], [1803.0, 8894.0], [1807.0, 6309.0], [1819.0, 4753.0], [1815.0, 8467.0], [1811.0, 6284.0], [1839.0, 7894.0], [1915.0, 6055.0], [1919.0, 6047.0], [1891.0, 6860.0], [1895.0, 7546.0], [1899.0, 7964.0], [1911.0, 6263.0], [1907.0, 6504.0], [1887.0, 6890.0], [1859.0, 8028.0], [1863.0, 7152.0], [1867.0, 8013.0], [1871.0, 6937.0], [1883.0, 6849.0], [1879.0, 7942.0], [1875.0, 7971.0], [1903.0, 7402.0], [1979.0, 6590.0], [1983.0, 7526.0], [1955.0, 7089.0], [1959.0, 7846.0], [1963.0, 7332.0], [1975.0, 7781.0], [1971.0, 7812.0], [1951.0, 7143.0], [1923.0, 6007.0], [1927.0, 5975.0], [1931.0, 5882.0], [1935.0, 5766.0], [1947.0, 7227.0], [1943.0, 7289.0], [1939.0, 7312.0], [1967.0, 5170.0], [2043.0, 6243.0], [2047.0, 5026.0], [2019.0, 5512.0], [2023.0, 5417.0], [2027.0, 5363.0], [2039.0, 6304.0], [2035.0, 5193.0], [2015.0, 6707.0], [1987.0, 6410.0], [1991.0, 5644.0], [1995.0, 5603.5], [1999.0, 5591.0], [2011.0, 6735.0], [2007.0, 5605.0], [2003.0, 5617.0], [2031.0, 5283.0], [2166.0, 4580.0], [2174.0, 4686.0], [2126.0, 5452.857142857143], [2118.0, 5926.0], [2134.0, 5504.0], [2158.0, 5338.0], [2150.0, 5241.0], [2110.0, 5707.0], [2054.0, 5987.0], [2070.0, 5078.0], [2078.0, 4166.0], [2102.0, 3452.0], [2094.0, 4766.0], [2086.0, 4817.0], [2142.0, 3498.0], [2302.0, 7950.0], [2294.0, 7966.0], [2246.0, 6214.0], [2254.0, 6100.0], [2262.0, 6301.0], [2270.0, 6135.0], [2286.0, 8571.0], [2278.0, 5880.0], [2238.0, 6347.0], [2182.0, 4595.0], [2190.0, 4497.0], [2198.0, 4438.0], [2206.0, 4875.0], [2230.0, 6420.0], [2222.0, 5582.5], [2422.0, 4933.0], [2430.0, 5687.0], [2374.0, 6082.5], [2382.0, 6520.0], [2390.0, 5946.0], [2414.0, 5666.0], [2334.0, 7434.0], [2326.0, 7584.0], [2318.0, 7731.0], [2310.0, 8512.0], [2366.0, 5018.0], [2358.0, 5448.0], [2350.0, 7085.0], [2342.0, 5886.0], [2534.0, 5307.0], [2542.0, 5301.0], [2510.0, 2376.0], [2502.0, 2535.5], [2518.0, 2146.0], [2454.0, 3810.0], [2446.0, 3975.0], [2494.0, 2320.0], [2486.0, 2538.0], [2478.0, 2588.0], [2470.0, 3554.0], [2678.0, 6063.0], [2686.0, 5039.0], [2630.0, 6036.0], [2638.0, 6614.0], [2646.0, 6011.0], [2654.0, 4079.0], [2670.0, 5912.0], [2662.0, 5677.0], [2622.0, 4422.0], [2574.0, 5282.0], [2582.0, 5552.0], [2590.0, 6122.5], [2614.0, 4589.0], [2606.0, 4844.0], [2598.0, 5112.0], [2806.0, 5030.0], [2758.0, 6645.0], [2766.0, 3886.0], [2782.0, 4878.0], [2798.0, 5363.0], [2790.0, 5532.0], [2718.0, 7888.0], [2710.0, 5498.0], [2702.0, 6129.0], [2694.0, 6151.0], [2742.0, 4829.0], [2734.0, 5623.0], [2726.0, 5899.0], [2942.0, 2345.0], [2886.0, 3953.0], [2894.0, 2366.0], [2902.0, 2554.0], [2910.0, 2461.0], [2934.0, 2418.0], [2926.0, 2297.0], [2918.0, 2376.0], [2846.0, 4510.0], [2838.0, 4707.0], [2830.0, 4412.0], [2822.0, 4771.5], [2878.0, 4702.0], [2862.0, 4485.0], [2854.0, 4099.0], [2950.0, 2263.0], [2990.0, 5434.0], [2958.0, 2090.0], [2966.0, 2414.0], [2974.0, 2295.0], [2998.0, 5428.0], [2982.0, 2045.0], [2167.0, 4516.0], [2175.0, 4311.0], [2127.0, 5642.0], [2119.0, 5697.0], [2135.0, 3563.0], [2159.0, 4976.0], [2151.0, 5233.0], [2111.0, 5933.0], [2055.0, 5941.0], [2063.0, 4368.0], [2071.0, 4326.0], [2079.0, 4154.0], [2103.0, 4099.0], [2095.0, 4765.0], [2087.0, 4813.0], [2143.0, 5643.0], [2295.0, 8561.0], [2279.0, 5858.0], [2303.0, 8546.0], [2247.0, 4220.0], [2255.0, 6098.0], [2263.0, 5931.0], [2271.0, 6135.0], [2287.0, 6510.0], [2207.0, 4868.0], [2199.0, 4015.0], [2191.0, 4495.0], [2183.0, 4589.0], [2239.0, 6346.0], [2231.0, 4433.0], [2223.0, 4588.0], [2423.0, 4918.0], [2407.0, 6183.5], [2431.0, 5249.0], [2375.0, 6110.0], [2391.0, 6371.0], [2399.0, 6285.0], [2415.0, 6056.0], [2327.0, 6112.0], [2319.0, 8316.0], [2311.0, 7889.0], [2367.0, 4941.0], [2359.0, 7443.0], [2351.0, 7084.0], [2343.0, 7317.0], [2559.0, 5298.0], [2551.0, 5623.5], [2503.0, 2532.0], [2511.0, 2368.0], [2519.0, 2121.0], [2527.0, 5316.0], [2543.0, 5301.0], [2535.0, 5305.0], [2463.0, 4026.5], [2455.0, 4417.0], [2447.0, 3971.0], [2439.0, 3644.0], [2495.0, 2576.0], [2487.0, 2538.0], [2479.0, 2586.0], [2471.0, 3522.0], [2679.0, 6055.0], [2687.0, 5562.0], [2631.0, 6034.0], [2639.0, 4159.0], [2647.0, 6006.0], [2655.0, 6422.0], [2671.0, 3748.0], [2663.0, 6248.0], [2623.0, 4369.0], [2567.0, 5405.333333333333], [2575.0, 5603.0], [2583.0, 5877.0], [2591.0, 6383.0], [2615.0, 4575.0], [2607.0, 4840.0], [2599.0, 4685.0], [2807.0, 4681.0], [2791.0, 4777.0], [2815.0, 4867.0], [2759.0, 4756.0], [2767.0, 3896.0], [2775.0, 4970.0], [2783.0, 5605.0], [2799.0, 4530.0], [2719.0, 5410.0], [2711.0, 5490.0], [2703.0, 5532.0], [2695.0, 5550.0], [2751.0, 5169.0], [2743.0, 4821.0], [2735.0, 4980.0], [2727.0, 5861.0], [2943.0, 2344.0], [2927.0, 2263.0], [2935.0, 2403.0], [2919.0, 2366.0], [2887.0, 3925.0], [2895.0, 2343.0], [2903.0, 2554.0], [2911.0, 2457.0], [2847.0, 5103.0], [2839.0, 4691.0], [2831.0, 4970.0], [2823.0, 5052.0], [2879.0, 4103.0], [2871.0, 4609.0], [2863.0, 4478.0], [2855.0, 5089.0], [2959.0, 2491.0], [2951.0, 2234.0], [2967.0, 2387.0], [2975.0, 2284.0], [2999.0, 5425.0], [2991.0, 5433.0], [2983.0, 2019.0], [1.0, 17733.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2484.7165769274793, 8985.070454805778]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6603.3, "minX": 1.68303204E12, "maxY": 24886.95, "series": [{"data": [[1.68303216E12, 16749.25], [1.68303234E12, 13508.15], [1.68303204E12, 8221.3], [1.68303222E12, 24886.95], [1.6830321E12, 12095.216666666667], [1.68303228E12, 17254.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68303216E12, 13442.733333333334], [1.68303234E12, 10828.4], [1.68303204E12, 6603.3], [1.68303222E12, 19143.666666666668], [1.6830321E12, 9723.633333333333], [1.68303228E12, 13872.833333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68303234E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 5294.197745013015, "minX": 1.68303204E12, "maxY": 14641.64252336448, "series": [{"data": [[1.68303216E12, 10016.766624843185], [1.68303234E12, 14641.64252336448], [1.68303204E12, 8601.106002554285], [1.68303222E12, 9329.451541850214], [1.6830321E12, 5294.197745013015], [1.68303228E12, 5864.652887538]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68303234E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 5294.1717259323395, "minX": 1.68303204E12, "maxY": 14641.619937694684, "series": [{"data": [[1.68303216E12, 10016.748431618564], [1.68303234E12, 14641.619937694684], [1.68303204E12, 8601.054916985957], [1.68303222E12, 9329.436123348018], [1.6830321E12, 5294.1717259323395], [1.68303228E12, 5864.646808510636]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68303234E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.3006230529595021, "minX": 1.68303204E12, "maxY": 4.469987228607924, "series": [{"data": [[1.68303216E12, 0.6242158092848183], [1.68303234E12, 0.3006230529595021], [1.68303204E12, 4.469987228607924], [1.68303222E12, 0.7176211453744514], [1.6830321E12, 0.7866435385949687], [1.68303228E12, 0.4984802431610941]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68303234E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.68303204E12, "maxY": 24002.0, "series": [{"data": [[1.68303216E12, 17326.0], [1.68303234E12, 24002.0], [1.68303204E12, 17360.0], [1.68303222E12, 21670.0], [1.6830321E12, 12875.0], [1.68303228E12, 9977.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68303216E12, 14273.5], [1.68303234E12, 18260.0], [1.68303204E12, 13699.8], [1.68303222E12, 16920.8], [1.6830321E12, 8792.600000000002], [1.68303228E12, 7954.4000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68303216E12, 17147.05], [1.68303234E12, 21937.0], [1.68303204E12, 15903.279999999984], [1.68303222E12, 19183.29], [1.6830321E12, 12237.14], [1.68303228E12, 9769.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68303216E12, 15173.5], [1.68303234E12, 19643.25], [1.68303204E12, 14694.0], [1.68303222E12, 17897.299999999996], [1.6830321E12, 9422.0], [1.68303228E12, 8525.699999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68303216E12, 2617.0], [1.68303234E12, 7733.0], [1.68303204E12, 1869.0], [1.68303222E12, 50.0], [1.6830321E12, 1929.0], [1.68303228E12, 2022.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68303216E12, 10653.0], [1.68303234E12, 14571.0], [1.68303204E12, 8522.0], [1.68303222E12, 11028.0], [1.6830321E12, 5099.0], [1.68303228E12, 5772.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68303234E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 1.0, "maxY": 17746.0, "series": [{"data": [[2.0, 13864.5], [3.0, 4535.5], [4.0, 10457.5], [5.0, 4605.0], [6.0, 6503.0], [7.0, 8291.0], [8.0, 4788.0], [9.0, 4848.5], [10.0, 9051.5], [11.0, 5371.0], [12.0, 4041.0], [13.0, 4820.0], [14.0, 10340.5], [15.0, 5738.0], [16.0, 3014.5], [17.0, 5592.0], [18.0, 11254.0], [19.0, 7277.0], [20.0, 6837.5], [21.0, 5342.0], [22.0, 5398.5], [23.0, 4775.5], [24.0, 16444.5], [25.0, 3537.0], [26.0, 5482.5], [27.0, 8537.0], [28.0, 4548.0], [29.0, 2532.0], [30.0, 8272.0], [31.0, 7726.0], [33.0, 10162.0], [32.0, 12430.5], [34.0, 5696.0], [35.0, 7518.0], [37.0, 10852.0], [36.0, 7116.0], [38.0, 8216.0], [39.0, 5772.0], [40.0, 6441.5], [41.0, 9119.0], [42.0, 12429.0], [43.0, 10567.0], [45.0, 4850.0], [44.0, 5228.0], [46.0, 11954.5], [47.0, 10679.0], [49.0, 8643.5], [48.0, 11133.0], [50.0, 13048.0], [51.0, 4754.5], [52.0, 11403.0], [53.0, 5882.0], [55.0, 88.0], [56.0, 6392.0], [57.0, 5783.0], [58.0, 82.0], [59.0, 5523.0], [61.0, 11603.0], [60.0, 5552.5], [62.0, 6591.5], [63.0, 7637.0], [66.0, 5903.0], [70.0, 7237.0], [69.0, 14626.0], [73.0, 5286.0], [72.0, 13130.5], [75.0, 16693.0], [77.0, 5125.0], [80.0, 6839.0], [87.0, 8868.0], [85.0, 6052.0], [84.0, 14751.0], [88.0, 5927.5], [90.0, 13760.5], [99.0, 8538.0], [102.0, 12371.0], [101.0, 16743.0], [106.0, 12365.0], [105.0, 14360.0], [115.0, 17746.0], [117.0, 13377.0], [122.0, 5524.5], [138.0, 12022.5], [140.0, 12478.5], [168.0, 15077.0], [207.0, 12286.0], [1.0, 6225.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 207.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 1.0, "maxY": 17746.0, "series": [{"data": [[2.0, 13864.5], [3.0, 4535.5], [4.0, 10457.5], [5.0, 4605.0], [6.0, 6503.0], [7.0, 8291.0], [8.0, 4788.0], [9.0, 4848.5], [10.0, 9051.5], [11.0, 5371.0], [12.0, 4041.0], [13.0, 4820.0], [14.0, 10340.5], [15.0, 5738.0], [16.0, 3014.5], [17.0, 5592.0], [18.0, 11254.0], [19.0, 7277.0], [20.0, 6837.5], [21.0, 5342.0], [22.0, 5398.0], [23.0, 4775.5], [24.0, 16444.5], [25.0, 3537.0], [26.0, 5482.5], [27.0, 8537.0], [28.0, 4548.0], [29.0, 2532.0], [30.0, 8272.0], [31.0, 7726.0], [33.0, 10162.0], [32.0, 12430.5], [34.0, 5696.0], [35.0, 7518.0], [37.0, 10852.0], [36.0, 7116.0], [38.0, 8216.0], [39.0, 5772.0], [40.0, 6441.5], [41.0, 9119.0], [42.0, 12429.0], [43.0, 10567.0], [45.0, 4850.0], [44.0, 5228.0], [46.0, 11954.5], [47.0, 10679.0], [49.0, 8643.5], [48.0, 11133.0], [50.0, 13048.0], [51.0, 4754.5], [52.0, 11403.0], [53.0, 5882.0], [55.0, 88.0], [56.0, 6392.0], [57.0, 5783.0], [58.0, 82.0], [59.0, 5523.0], [61.0, 11603.0], [60.0, 5552.5], [62.0, 6591.5], [63.0, 7637.0], [66.0, 5903.0], [70.0, 7236.5], [69.0, 14626.0], [73.0, 5286.0], [72.0, 13130.5], [75.0, 16693.0], [77.0, 5125.0], [80.0, 6839.0], [87.0, 8868.0], [85.0, 6052.0], [84.0, 14751.0], [88.0, 5927.5], [90.0, 13760.5], [99.0, 8538.0], [102.0, 12371.0], [101.0, 16743.0], [106.0, 12365.0], [105.0, 14360.0], [115.0, 17746.0], [117.0, 13377.0], [122.0, 5524.5], [138.0, 12022.5], [140.0, 12478.5], [168.0, 15077.0], [207.0, 12286.0], [1.0, 6225.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 207.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.05, "minX": 1.68303204E12, "maxY": 32.86666666666667, "series": [{"data": [[1.68303216E12, 26.1], [1.68303234E12, 15.95], [1.68303204E12, 13.05], [1.68303222E12, 31.416666666666668], [1.6830321E12, 26.1], [1.68303228E12, 32.86666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68303234E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 13.05, "minX": 1.68303204E12, "maxY": 37.833333333333336, "series": [{"data": [[1.68303216E12, 26.566666666666666], [1.68303234E12, 21.4], [1.68303204E12, 13.05], [1.68303222E12, 37.833333333333336], [1.6830321E12, 19.216666666666665], [1.68303228E12, 27.416666666666668]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68303234E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 13.05, "minX": 1.68303204E12, "maxY": 37.833333333333336, "series": [{"data": [[1.68303216E12, 26.566666666666666], [1.68303234E12, 21.4], [1.68303204E12, 13.05], [1.68303222E12, 37.833333333333336], [1.6830321E12, 19.216666666666665], [1.68303228E12, 27.416666666666668]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68303234E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.05, "minX": 1.68303204E12, "maxY": 37.833333333333336, "series": [{"data": [[1.68303216E12, 26.566666666666666], [1.68303234E12, 21.4], [1.68303204E12, 13.05], [1.68303222E12, 37.833333333333336], [1.6830321E12, 19.216666666666665], [1.68303228E12, 27.416666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68303234E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

