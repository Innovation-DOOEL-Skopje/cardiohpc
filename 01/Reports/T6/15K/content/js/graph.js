/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 68.0, "minX": 0.0, "maxY": 161291.0, "series": [{"data": [[0.0, 68.0], [0.1, 77.0], [0.2, 80.0], [0.3, 83.0], [0.4, 87.0], [0.5, 94.0], [0.6, 97.0], [0.7, 98.0], [0.8, 101.0], [0.9, 104.0], [1.0, 108.0], [1.1, 113.0], [1.2, 127.0], [1.3, 149.0], [1.4, 156.0], [1.5, 171.0], [1.6, 178.0], [1.7, 181.0], [1.8, 184.0], [1.9, 189.0], [2.0, 198.0], [2.1, 202.0], [2.2, 232.0], [2.3, 278.0], [2.4, 284.0], [2.5, 316.0], [2.6, 431.0], [2.7, 480.0], [2.8, 482.0], [2.9, 489.0], [3.0, 496.0], [3.1, 544.0], [3.2, 594.0], [3.3, 742.0], [3.4, 775.0], [3.5, 776.0], [3.6, 803.0], [3.7, 898.0], [3.8, 1126.0], [3.9, 1141.0], [4.0, 1188.0], [4.1, 1266.0], [4.2, 1285.0], [4.3, 1289.0], [4.4, 1329.0], [4.5, 1350.0], [4.6, 1370.0], [4.7, 1390.0], [4.8, 1430.0], [4.9, 1745.0], [5.0, 1942.0], [5.1, 2139.0], [5.2, 2143.0], [5.3, 2162.0], [5.4, 2167.0], [5.5, 2171.0], [5.6, 2234.0], [5.7, 2257.0], [5.8, 2260.0], [5.9, 2273.0], [6.0, 2306.0], [6.1, 2329.0], [6.2, 2357.0], [6.3, 2383.0], [6.4, 2436.0], [6.5, 2476.0], [6.6, 2495.0], [6.7, 2506.0], [6.8, 2515.0], [6.9, 2554.0], [7.0, 2720.0], [7.1, 2765.0], [7.2, 2837.0], [7.3, 2858.0], [7.4, 2882.0], [7.5, 2884.0], [7.6, 2886.0], [7.7, 2890.0], [7.8, 2899.0], [7.9, 2916.0], [8.0, 2930.0], [8.1, 2936.0], [8.2, 2965.0], [8.3, 3085.0], [8.4, 3206.0], [8.5, 3231.0], [8.6, 3259.0], [8.7, 3353.0], [8.8, 3451.0], [8.9, 3538.0], [9.0, 3539.0], [9.1, 3568.0], [9.2, 3586.0], [9.3, 3650.0], [9.4, 3674.0], [9.5, 3674.0], [9.6, 3687.0], [9.7, 3750.0], [9.8, 3797.0], [9.9, 3860.0], [10.0, 3888.0], [10.1, 3912.0], [10.2, 3963.0], [10.3, 3970.0], [10.4, 3982.0], [10.5, 4133.0], [10.6, 4142.0], [10.7, 4143.0], [10.8, 4166.0], [10.9, 4192.0], [11.0, 4193.0], [11.1, 4198.0], [11.2, 4215.0], [11.3, 4226.0], [11.4, 4284.0], [11.5, 4352.0], [11.6, 4402.0], [11.7, 4472.0], [11.8, 4535.0], [11.9, 4540.0], [12.0, 4541.0], [12.1, 4551.0], [12.2, 4578.0], [12.3, 4637.0], [12.4, 4777.0], [12.5, 4872.0], [12.6, 4928.0], [12.7, 5013.0], [12.8, 5188.0], [12.9, 5359.0], [13.0, 5470.0], [13.1, 5501.0], [13.2, 5521.0], [13.3, 5541.0], [13.4, 5675.0], [13.5, 5705.0], [13.6, 5820.0], [13.7, 6000.0], [13.8, 6109.0], [13.9, 6150.0], [14.0, 6243.0], [14.1, 6310.0], [14.2, 6449.0], [14.3, 6511.0], [14.4, 6548.0], [14.5, 6576.0], [14.6, 6640.0], [14.7, 6743.0], [14.8, 6856.0], [14.9, 6898.0], [15.0, 7037.0], [15.1, 7087.0], [15.2, 7359.0], [15.3, 7806.0], [15.4, 7981.0], [15.5, 8144.0], [15.6, 8214.0], [15.7, 8265.0], [15.8, 8293.0], [15.9, 8373.0], [16.0, 8463.0], [16.1, 8617.0], [16.2, 8674.0], [16.3, 8791.0], [16.4, 8935.0], [16.5, 9041.0], [16.6, 9162.0], [16.7, 9183.0], [16.8, 9205.0], [16.9, 9239.0], [17.0, 9302.0], [17.1, 9372.0], [17.2, 9440.0], [17.3, 9459.0], [17.4, 9492.0], [17.5, 9517.0], [17.6, 9538.0], [17.7, 9572.0], [17.8, 9588.0], [17.9, 9599.0], [18.0, 9624.0], [18.1, 9657.0], [18.2, 9694.0], [18.3, 9724.0], [18.4, 9798.0], [18.5, 9843.0], [18.6, 9880.0], [18.7, 9898.0], [18.8, 9926.0], [18.9, 9962.0], [19.0, 9979.0], [19.1, 9995.0], [19.2, 10021.0], [19.3, 10039.0], [19.4, 10076.0], [19.5, 10098.0], [19.6, 10113.0], [19.7, 10148.0], [19.8, 10229.0], [19.9, 10363.0], [20.0, 10390.0], [20.1, 10409.0], [20.2, 10442.0], [20.3, 10538.0], [20.4, 10617.0], [20.5, 10793.0], [20.6, 10878.0], [20.7, 10894.0], [20.8, 10955.0], [20.9, 11006.0], [21.0, 11082.0], [21.1, 11167.0], [21.2, 11230.0], [21.3, 11243.0], [21.4, 11277.0], [21.5, 11293.0], [21.6, 11337.0], [21.7, 11392.0], [21.8, 11405.0], [21.9, 11417.0], [22.0, 11463.0], [22.1, 11565.0], [22.2, 11648.0], [22.3, 11691.0], [22.4, 11788.0], [22.5, 11978.0], [22.6, 12022.0], [22.7, 12086.0], [22.8, 12117.0], [22.9, 12173.0], [23.0, 12277.0], [23.1, 12319.0], [23.2, 12479.0], [23.3, 12483.0], [23.4, 12524.0], [23.5, 12536.0], [23.6, 12668.0], [23.7, 12822.0], [23.8, 12888.0], [23.9, 12890.0], [24.0, 12891.0], [24.1, 12897.0], [24.2, 13003.0], [24.3, 13151.0], [24.4, 13221.0], [24.5, 13361.0], [24.6, 13429.0], [24.7, 13541.0], [24.8, 13632.0], [24.9, 13670.0], [25.0, 13726.0], [25.1, 13853.0], [25.2, 13888.0], [25.3, 13902.0], [25.4, 13953.0], [25.5, 14007.0], [25.6, 14080.0], [25.7, 14117.0], [25.8, 14129.0], [25.9, 14235.0], [26.0, 14311.0], [26.1, 14327.0], [26.2, 14347.0], [26.3, 14378.0], [26.4, 14425.0], [26.5, 14484.0], [26.6, 14564.0], [26.7, 14665.0], [26.8, 14717.0], [26.9, 14734.0], [27.0, 14771.0], [27.1, 14843.0], [27.2, 14879.0], [27.3, 14908.0], [27.4, 14927.0], [27.5, 15014.0], [27.6, 15075.0], [27.7, 15119.0], [27.8, 15156.0], [27.9, 15181.0], [28.0, 15334.0], [28.1, 15387.0], [28.2, 15429.0], [28.3, 15463.0], [28.4, 15510.0], [28.5, 15512.0], [28.6, 15539.0], [28.7, 15645.0], [28.8, 15647.0], [28.9, 15648.0], [29.0, 15671.0], [29.1, 15721.0], [29.2, 15753.0], [29.3, 15782.0], [29.4, 15836.0], [29.5, 15863.0], [29.6, 15892.0], [29.7, 15914.0], [29.8, 15951.0], [29.9, 16005.0], [30.0, 16009.0], [30.1, 16035.0], [30.2, 16047.0], [30.3, 16060.0], [30.4, 16095.0], [30.5, 16109.0], [30.6, 16241.0], [30.7, 16298.0], [30.8, 16390.0], [30.9, 16427.0], [31.0, 16472.0], [31.1, 16507.0], [31.2, 16513.0], [31.3, 16559.0], [31.4, 16562.0], [31.5, 16592.0], [31.6, 16627.0], [31.7, 16657.0], [31.8, 16668.0], [31.9, 16670.0], [32.0, 16678.0], [32.1, 16719.0], [32.2, 16814.0], [32.3, 16848.0], [32.4, 16866.0], [32.5, 16898.0], [32.6, 16900.0], [32.7, 16909.0], [32.8, 16926.0], [32.9, 16951.0], [33.0, 16986.0], [33.1, 17035.0], [33.2, 17097.0], [33.3, 17153.0], [33.4, 17202.0], [33.5, 17286.0], [33.6, 17324.0], [33.7, 17368.0], [33.8, 17424.0], [33.9, 17462.0], [34.0, 17480.0], [34.1, 17528.0], [34.2, 17529.0], [34.3, 17563.0], [34.4, 17594.0], [34.5, 17673.0], [34.6, 17689.0], [34.7, 17690.0], [34.8, 17719.0], [34.9, 17744.0], [35.0, 17772.0], [35.1, 17807.0], [35.2, 17846.0], [35.3, 17923.0], [35.4, 17956.0], [35.5, 17993.0], [35.6, 18037.0], [35.7, 18053.0], [35.8, 18064.0], [35.9, 18111.0], [36.0, 18140.0], [36.1, 18184.0], [36.2, 18204.0], [36.3, 18253.0], [36.4, 18283.0], [36.5, 18326.0], [36.6, 18448.0], [36.7, 18494.0], [36.8, 18531.0], [36.9, 18539.0], [37.0, 18592.0], [37.1, 18699.0], [37.2, 18766.0], [37.3, 18802.0], [37.4, 18831.0], [37.5, 18894.0], [37.6, 18963.0], [37.7, 18981.0], [37.8, 19007.0], [37.9, 19046.0], [38.0, 19081.0], [38.1, 19110.0], [38.2, 19147.0], [38.3, 19156.0], [38.4, 19226.0], [38.5, 19258.0], [38.6, 19310.0], [38.7, 19317.0], [38.8, 19347.0], [38.9, 19404.0], [39.0, 19454.0], [39.1, 19495.0], [39.2, 19526.0], [39.3, 19548.0], [39.4, 19582.0], [39.5, 19611.0], [39.6, 19651.0], [39.7, 19669.0], [39.8, 19691.0], [39.9, 19720.0], [40.0, 19750.0], [40.1, 19783.0], [40.2, 19803.0], [40.3, 19806.0], [40.4, 19810.0], [40.5, 19832.0], [40.6, 19849.0], [40.7, 19851.0], [40.8, 19855.0], [40.9, 19871.0], [41.0, 19887.0], [41.1, 19904.0], [41.2, 19942.0], [41.3, 19988.0], [41.4, 20014.0], [41.5, 20045.0], [41.6, 20065.0], [41.7, 20085.0], [41.8, 20122.0], [41.9, 20149.0], [42.0, 20157.0], [42.1, 20209.0], [42.2, 20261.0], [42.3, 20292.0], [42.4, 20318.0], [42.5, 20365.0], [42.6, 20374.0], [42.7, 20411.0], [42.8, 20431.0], [42.9, 20445.0], [43.0, 20479.0], [43.1, 20493.0], [43.2, 20504.0], [43.3, 20516.0], [43.4, 20533.0], [43.5, 20552.0], [43.6, 20584.0], [43.7, 20599.0], [43.8, 20611.0], [43.9, 20620.0], [44.0, 20646.0], [44.1, 20651.0], [44.2, 20673.0], [44.3, 20706.0], [44.4, 20728.0], [44.5, 20740.0], [44.6, 20754.0], [44.7, 20777.0], [44.8, 20800.0], [44.9, 20822.0], [45.0, 20840.0], [45.1, 20890.0], [45.2, 20948.0], [45.3, 20976.0], [45.4, 21006.0], [45.5, 21038.0], [45.6, 21121.0], [45.7, 21181.0], [45.8, 21214.0], [45.9, 21228.0], [46.0, 21242.0], [46.1, 21243.0], [46.2, 21249.0], [46.3, 21284.0], [46.4, 21299.0], [46.5, 21342.0], [46.6, 21398.0], [46.7, 21413.0], [46.8, 21486.0], [46.9, 21576.0], [47.0, 21642.0], [47.1, 21649.0], [47.2, 21667.0], [47.3, 21680.0], [47.4, 21697.0], [47.5, 21710.0], [47.6, 21770.0], [47.7, 21901.0], [47.8, 21938.0], [47.9, 22043.0], [48.0, 22081.0], [48.1, 22109.0], [48.2, 22146.0], [48.3, 22211.0], [48.4, 22248.0], [48.5, 22330.0], [48.6, 22416.0], [48.7, 22480.0], [48.8, 22588.0], [48.9, 22682.0], [49.0, 22704.0], [49.1, 22706.0], [49.2, 22715.0], [49.3, 22726.0], [49.4, 22764.0], [49.5, 22825.0], [49.6, 22916.0], [49.7, 22950.0], [49.8, 22981.0], [49.9, 23020.0], [50.0, 23060.0], [50.1, 23137.0], [50.2, 23174.0], [50.3, 23222.0], [50.4, 23283.0], [50.5, 23306.0], [50.6, 23360.0], [50.7, 23397.0], [50.8, 23422.0], [50.9, 23440.0], [51.0, 23441.0], [51.1, 23457.0], [51.2, 23518.0], [51.3, 23587.0], [51.4, 23605.0], [51.5, 23607.0], [51.6, 23631.0], [51.7, 23657.0], [51.8, 23721.0], [51.9, 23743.0], [52.0, 23745.0], [52.1, 23768.0], [52.2, 23813.0], [52.3, 23862.0], [52.4, 23892.0], [52.5, 23912.0], [52.6, 23947.0], [52.7, 23971.0], [52.8, 23999.0], [52.9, 24009.0], [53.0, 24011.0], [53.1, 24012.0], [53.2, 24017.0], [53.3, 24039.0], [53.4, 24077.0], [53.5, 24080.0], [53.6, 24087.0], [53.7, 24090.0], [53.8, 24092.0], [53.9, 24095.0], [54.0, 24107.0], [54.1, 24128.0], [54.2, 24170.0], [54.3, 24200.0], [54.4, 24244.0], [54.5, 24283.0], [54.6, 24307.0], [54.7, 24346.0], [54.8, 24396.0], [54.9, 24403.0], [55.0, 24405.0], [55.1, 24406.0], [55.2, 24429.0], [55.3, 24450.0], [55.4, 24474.0], [55.5, 24530.0], [55.6, 24533.0], [55.7, 24539.0], [55.8, 24575.0], [55.9, 24660.0], [56.0, 24699.0], [56.1, 24736.0], [56.2, 24764.0], [56.3, 24783.0], [56.4, 24795.0], [56.5, 24833.0], [56.6, 24870.0], [56.7, 24919.0], [56.8, 24939.0], [56.9, 24981.0], [57.0, 25010.0], [57.1, 25037.0], [57.2, 25061.0], [57.3, 25088.0], [57.4, 25091.0], [57.5, 25092.0], [57.6, 25117.0], [57.7, 25170.0], [57.8, 25198.0], [57.9, 25260.0], [58.0, 25305.0], [58.1, 25327.0], [58.2, 25364.0], [58.3, 25367.0], [58.4, 25399.0], [58.5, 25430.0], [58.6, 25441.0], [58.7, 25455.0], [58.8, 25476.0], [58.9, 25483.0], [59.0, 25485.0], [59.1, 25527.0], [59.2, 25559.0], [59.3, 25601.0], [59.4, 25635.0], [59.5, 25693.0], [59.6, 25698.0], [59.7, 25733.0], [59.8, 25779.0], [59.9, 25823.0], [60.0, 25826.0], [60.1, 25831.0], [60.2, 25871.0], [60.3, 25938.0], [60.4, 25968.0], [60.5, 26011.0], [60.6, 26068.0], [60.7, 26122.0], [60.8, 26154.0], [60.9, 26171.0], [61.0, 26193.0], [61.1, 26203.0], [61.2, 26228.0], [61.3, 26245.0], [61.4, 26268.0], [61.5, 26290.0], [61.6, 26309.0], [61.7, 26343.0], [61.8, 26409.0], [61.9, 26429.0], [62.0, 26441.0], [62.1, 26468.0], [62.2, 26511.0], [62.3, 26513.0], [62.4, 26516.0], [62.5, 26524.0], [62.6, 26548.0], [62.7, 26576.0], [62.8, 26621.0], [62.9, 26653.0], [63.0, 26678.0], [63.1, 26696.0], [63.2, 26750.0], [63.3, 26775.0], [63.4, 26799.0], [63.5, 26821.0], [63.6, 26823.0], [63.7, 26852.0], [63.8, 26904.0], [63.9, 26928.0], [64.0, 26989.0], [64.1, 27024.0], [64.2, 27089.0], [64.3, 27122.0], [64.4, 27178.0], [64.5, 27196.0], [64.6, 27245.0], [64.7, 27279.0], [64.8, 27304.0], [64.9, 27324.0], [65.0, 27355.0], [65.1, 27374.0], [65.2, 27395.0], [65.3, 27413.0], [65.4, 27436.0], [65.5, 27466.0], [65.6, 27503.0], [65.7, 27512.0], [65.8, 27514.0], [65.9, 27580.0], [66.0, 27624.0], [66.1, 27672.0], [66.2, 27717.0], [66.3, 27745.0], [66.4, 27759.0], [66.5, 27762.0], [66.6, 27765.0], [66.7, 27769.0], [66.8, 27859.0], [66.9, 27923.0], [67.0, 27974.0], [67.1, 28067.0], [67.2, 28092.0], [67.3, 28175.0], [67.4, 28210.0], [67.5, 28232.0], [67.6, 28299.0], [67.7, 28372.0], [67.8, 28396.0], [67.9, 28401.0], [68.0, 28402.0], [68.1, 28427.0], [68.2, 28470.0], [68.3, 28566.0], [68.4, 28591.0], [68.5, 28628.0], [68.6, 28681.0], [68.7, 28742.0], [68.8, 28773.0], [68.9, 28801.0], [69.0, 28837.0], [69.1, 28870.0], [69.2, 28872.0], [69.3, 28892.0], [69.4, 28971.0], [69.5, 28994.0], [69.6, 29061.0], [69.7, 29104.0], [69.8, 29157.0], [69.9, 29158.0], [70.0, 29235.0], [70.1, 29261.0], [70.2, 29294.0], [70.3, 29345.0], [70.4, 29376.0], [70.5, 29378.0], [70.6, 29380.0], [70.7, 29416.0], [70.8, 29469.0], [70.9, 29474.0], [71.0, 29476.0], [71.1, 29480.0], [71.2, 29555.0], [71.3, 29631.0], [71.4, 29683.0], [71.5, 29716.0], [71.6, 29732.0], [71.7, 29753.0], [71.8, 29774.0], [71.9, 29805.0], [72.0, 29871.0], [72.1, 29875.0], [72.2, 29878.0], [72.3, 29907.0], [72.4, 29918.0], [72.5, 29951.0], [72.6, 29976.0], [72.7, 30031.0], [72.8, 30102.0], [72.9, 30128.0], [73.0, 30211.0], [73.1, 30235.0], [73.2, 30261.0], [73.3, 30277.0], [73.4, 30279.0], [73.5, 30295.0], [73.6, 30333.0], [73.7, 30386.0], [73.8, 30428.0], [73.9, 30454.0], [74.0, 30499.0], [74.1, 30517.0], [74.2, 30554.0], [74.3, 30602.0], [74.4, 30631.0], [74.5, 30695.0], [74.6, 30736.0], [74.7, 30763.0], [74.8, 30832.0], [74.9, 30889.0], [75.0, 30921.0], [75.1, 30962.0], [75.2, 30972.0], [75.3, 30984.0], [75.4, 31033.0], [75.5, 31081.0], [75.6, 31104.0], [75.7, 31107.0], [75.8, 31165.0], [75.9, 31218.0], [76.0, 31225.0], [76.1, 31283.0], [76.2, 31324.0], [76.3, 31370.0], [76.4, 31388.0], [76.5, 31443.0], [76.6, 31507.0], [76.7, 31533.0], [76.8, 31621.0], [76.9, 31646.0], [77.0, 31693.0], [77.1, 31730.0], [77.2, 31751.0], [77.3, 31807.0], [77.4, 31886.0], [77.5, 31952.0], [77.6, 32048.0], [77.7, 32137.0], [77.8, 32197.0], [77.9, 32239.0], [78.0, 32292.0], [78.1, 32312.0], [78.2, 32350.0], [78.3, 32375.0], [78.4, 32432.0], [78.5, 32486.0], [78.6, 32532.0], [78.7, 32542.0], [78.8, 32576.0], [78.9, 32592.0], [79.0, 32624.0], [79.1, 32658.0], [79.2, 32743.0], [79.3, 32799.0], [79.4, 32861.0], [79.5, 32905.0], [79.6, 32948.0], [79.7, 33017.0], [79.8, 33084.0], [79.9, 33116.0], [80.0, 33155.0], [80.1, 33179.0], [80.2, 33199.0], [80.3, 33230.0], [80.4, 33243.0], [80.5, 33267.0], [80.6, 33281.0], [80.7, 33313.0], [80.8, 33375.0], [80.9, 33505.0], [81.0, 33532.0], [81.1, 33635.0], [81.2, 33714.0], [81.3, 33762.0], [81.4, 33793.0], [81.5, 33823.0], [81.6, 33882.0], [81.7, 33908.0], [81.8, 33941.0], [81.9, 33965.0], [82.0, 34000.0], [82.1, 34017.0], [82.2, 34062.0], [82.3, 34098.0], [82.4, 34239.0], [82.5, 34304.0], [82.6, 34395.0], [82.7, 34527.0], [82.8, 34603.0], [82.9, 34685.0], [83.0, 34776.0], [83.1, 34868.0], [83.2, 34932.0], [83.3, 35087.0], [83.4, 35159.0], [83.5, 35217.0], [83.6, 35337.0], [83.7, 35390.0], [83.8, 35441.0], [83.9, 35503.0], [84.0, 35580.0], [84.1, 35681.0], [84.2, 35716.0], [84.3, 35776.0], [84.4, 35893.0], [84.5, 35990.0], [84.6, 36048.0], [84.7, 36142.0], [84.8, 36171.0], [84.9, 36204.0], [85.0, 36244.0], [85.1, 36282.0], [85.2, 36319.0], [85.3, 36349.0], [85.4, 36391.0], [85.5, 36446.0], [85.6, 36504.0], [85.7, 36532.0], [85.8, 36576.0], [85.9, 36596.0], [86.0, 36640.0], [86.1, 36655.0], [86.2, 36678.0], [86.3, 36696.0], [86.4, 36724.0], [86.5, 36838.0], [86.6, 36934.0], [86.7, 37032.0], [86.8, 37101.0], [86.9, 37249.0], [87.0, 37345.0], [87.1, 37476.0], [87.2, 37666.0], [87.3, 37771.0], [87.4, 37822.0], [87.5, 37834.0], [87.6, 37935.0], [87.7, 38011.0], [87.8, 38109.0], [87.9, 38204.0], [88.0, 38328.0], [88.1, 38419.0], [88.2, 38489.0], [88.3, 38538.0], [88.4, 38614.0], [88.5, 38694.0], [88.6, 38763.0], [88.7, 38824.0], [88.8, 38956.0], [88.9, 39063.0], [89.0, 39135.0], [89.1, 39203.0], [89.2, 39248.0], [89.3, 39358.0], [89.4, 39455.0], [89.5, 39637.0], [89.6, 39716.0], [89.7, 39898.0], [89.8, 39928.0], [89.9, 40024.0], [90.0, 40154.0], [90.1, 40341.0], [90.2, 40444.0], [90.3, 40762.0], [90.4, 40946.0], [90.5, 40995.0], [90.6, 40998.0], [90.7, 41031.0], [90.8, 41303.0], [90.9, 41462.0], [91.0, 41484.0], [91.1, 41768.0], [91.2, 41905.0], [91.3, 41985.0], [91.4, 42087.0], [91.5, 42166.0], [91.6, 42215.0], [91.7, 42269.0], [91.8, 42335.0], [91.9, 42399.0], [92.0, 42478.0], [92.1, 42608.0], [92.2, 42700.0], [92.3, 42784.0], [92.4, 42986.0], [92.5, 43204.0], [92.6, 43297.0], [92.7, 43471.0], [92.8, 43669.0], [92.9, 43946.0], [93.0, 44352.0], [93.1, 44600.0], [93.2, 45137.0], [93.3, 45589.0], [93.4, 46063.0], [93.5, 46366.0], [93.6, 46396.0], [93.7, 46657.0], [93.8, 47219.0], [93.9, 47739.0], [94.0, 48301.0], [94.1, 48551.0], [94.2, 49072.0], [94.3, 49311.0], [94.4, 49569.0], [94.5, 49782.0], [94.6, 50458.0], [94.7, 50891.0], [94.8, 51408.0], [94.9, 52085.0], [95.0, 52692.0], [95.1, 53684.0], [95.2, 54393.0], [95.3, 57065.0], [95.4, 58005.0], [95.5, 59295.0], [95.6, 60612.0], [95.7, 62205.0], [95.8, 63207.0], [95.9, 63749.0], [96.0, 63762.0], [96.1, 63796.0], [96.2, 64054.0], [96.3, 64513.0], [96.4, 64679.0], [96.5, 64696.0], [96.6, 65073.0], [96.7, 65950.0], [96.8, 65998.0], [96.9, 66022.0], [97.0, 66025.0], [97.1, 66117.0], [97.2, 67119.0], [97.3, 67153.0], [97.4, 68542.0], [97.5, 69966.0], [97.6, 70232.0], [97.7, 70988.0], [97.8, 72129.0], [97.9, 73009.0], [98.0, 73944.0], [98.1, 80697.0], [98.2, 83463.0], [98.3, 90048.0], [98.4, 90224.0], [98.5, 91541.0], [98.6, 96745.0], [98.7, 99271.0], [98.8, 103648.0], [98.9, 103673.0], [99.0, 103673.0], [99.1, 142914.0], [99.2, 143001.0], [99.3, 143770.0], [99.4, 145757.0], [99.5, 151151.0], [99.6, 151611.0], [99.7, 158065.0], [99.8, 159727.0], [99.9, 160635.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 139.0, "series": [{"data": [[0.0, 85.0], [151200.0, 2.0], [145700.0, 7.0], [148900.0, 2.0], [69900.0, 4.0], [71500.0, 5.0], [73100.0, 1.0], [87500.0, 1.0], [93900.0, 2.0], [159400.0, 1.0], [100.0, 139.0], [34500.0, 13.0], [33700.0, 34.0], [32900.0, 23.0], [36100.0, 24.0], [35300.0, 20.0], [144300.0, 1.0], [37700.0, 11.0], [38500.0, 19.0], [36900.0, 11.0], [40900.0, 30.0], [40100.0, 8.0], [39300.0, 11.0], [41700.0, 8.0], [42500.0, 7.0], [43300.0, 6.0], [44100.0, 3.0], [45700.0, 1.0], [46500.0, 4.0], [48100.0, 6.0], [50500.0, 4.0], [49700.0, 5.0], [200.0, 43.0], [52100.0, 2.0], [53700.0, 1.0], [59300.0, 2.0], [58500.0, 1.0], [57700.0, 1.0], [60100.0, 2.0], [61700.0, 1.0], [62500.0, 1.0], [63300.0, 1.0], [67400.0, 6.0], [70600.0, 3.0], [300.0, 8.0], [83400.0, 2.0], [85000.0, 1.0], [86600.0, 2.0], [88200.0, 1.0], [99400.0, 1.0], [102600.0, 1.0], [400.0, 53.0], [500.0, 27.0], [151600.0, 2.0], [158000.0, 9.0], [161200.0, 7.0], [700.0, 35.0], [800.0, 16.0], [900.0, 5.0], [1100.0, 26.0], [1200.0, 36.0], [1300.0, 43.0], [1400.0, 7.0], [1500.0, 4.0], [1600.0, 2.0], [1700.0, 13.0], [1800.0, 2.0], [1900.0, 5.0], [2000.0, 4.0], [2100.0, 56.0], [2200.0, 44.0], [2300.0, 35.0], [142900.0, 17.0], [2400.0, 37.0], [2500.0, 30.0], [2600.0, 3.0], [2700.0, 20.0], [2800.0, 73.0], [2900.0, 47.0], [3000.0, 9.0], [3100.0, 5.0], [3300.0, 10.0], [3200.0, 29.0], [3400.0, 13.0], [3500.0, 41.0], [3600.0, 44.0], [3700.0, 25.0], [3800.0, 19.0], [3900.0, 44.0], [4000.0, 5.0], [4100.0, 69.0], [4200.0, 35.0], [4300.0, 14.0], [4600.0, 14.0], [4400.0, 20.0], [4500.0, 51.0], [69700.0, 1.0], [71300.0, 1.0], [4800.0, 11.0], [4700.0, 6.0], [4900.0, 16.0], [5000.0, 16.0], [5100.0, 2.0], [5300.0, 16.0], [5200.0, 4.0], [5500.0, 31.0], [5600.0, 10.0], [5400.0, 11.0], [5800.0, 11.0], [5700.0, 9.0], [6100.0, 23.0], [6000.0, 8.0], [5900.0, 4.0], [100100.0, 1.0], [6200.0, 8.0], [6300.0, 13.0], [6600.0, 17.0], [6500.0, 30.0], [6400.0, 9.0], [104900.0, 1.0], [6800.0, 17.0], [6700.0, 7.0], [6900.0, 7.0], [7000.0, 22.0], [7300.0, 6.0], [7500.0, 2.0], [7600.0, 3.0], [7800.0, 5.0], [7900.0, 7.0], [7700.0, 2.0], [8000.0, 4.0], [8100.0, 12.0], [8200.0, 28.0], [8400.0, 10.0], [8600.0, 16.0], [9200.0, 25.0], [8800.0, 6.0], [9000.0, 10.0], [9400.0, 35.0], [9600.0, 34.0], [150200.0, 1.0], [9800.0, 32.0], [10000.0, 43.0], [10200.0, 7.0], [10400.0, 16.0], [10600.0, 9.0], [10800.0, 22.0], [11200.0, 42.0], [11000.0, 16.0], [11400.0, 27.0], [11600.0, 15.0], [12000.0, 22.0], [12200.0, 16.0], [11800.0, 4.0], [12400.0, 29.0], [12600.0, 12.0], [12800.0, 46.0], [13000.0, 8.0], [13200.0, 10.0], [13400.0, 12.0], [13800.0, 20.0], [13600.0, 24.0], [14200.0, 9.0], [14000.0, 22.0], [14600.0, 7.0], [14800.0, 28.0], [14400.0, 21.0], [15000.0, 15.0], [15200.0, 7.0], [15400.0, 21.0], [15600.0, 48.0], [15800.0, 32.0], [16200.0, 15.0], [16000.0, 58.0], [16400.0, 29.0], [16800.0, 41.0], [17200.0, 19.0], [17600.0, 37.0], [18400.0, 15.0], [18000.0, 39.0], [19200.0, 21.0], [18800.0, 23.0], [20000.0, 45.0], [20400.0, 53.0], [19600.0, 38.0], [21200.0, 71.0], [20800.0, 34.0], [22400.0, 17.0], [22000.0, 24.0], [21600.0, 51.0], [23200.0, 24.0], [22800.0, 11.0], [24400.0, 69.0], [23600.0, 50.0], [24000.0, 126.0], [24800.0, 28.0], [25200.0, 20.0], [26000.0, 26.0], [26400.0, 39.0], [25600.0, 36.0], [27200.0, 30.0], [27600.0, 19.0], [26800.0, 42.0], [28000.0, 22.0], [28400.0, 38.0], [28800.0, 48.0], [29200.0, 27.0], [29600.0, 21.0], [30400.0, 31.0], [30000.0, 13.0], [30800.0, 18.0], [31200.0, 30.0], [31600.0, 30.0], [32000.0, 10.0], [32400.0, 25.0], [32800.0, 19.0], [34400.0, 8.0], [33600.0, 6.0], [36800.0, 12.0], [35200.0, 8.0], [36000.0, 11.0], [144700.0, 1.0], [38400.0, 14.0], [37600.0, 9.0], [151100.0, 1.0], [39200.0, 21.0], [40000.0, 9.0], [40800.0, 3.0], [160700.0, 1.0], [41600.0, 4.0], [42400.0, 13.0], [43200.0, 13.0], [44000.0, 2.0], [45600.0, 8.0], [46400.0, 3.0], [47200.0, 3.0], [48800.0, 1.0], [49600.0, 3.0], [50400.0, 3.0], [51200.0, 2.0], [52000.0, 6.0], [55200.0, 2.0], [53600.0, 9.0], [56800.0, 1.0], [59200.0, 5.0], [62400.0, 1.0], [63200.0, 3.0], [64000.0, 3.0], [64800.0, 2.0], [72000.0, 2.0], [70400.0, 1.0], [73600.0, 1.0], [81600.0, 1.0], [86400.0, 1.0], [99200.0, 1.0], [151300.0, 7.0], [160900.0, 2.0], [67100.0, 21.0], [79900.0, 1.0], [92700.0, 1.0], [99100.0, 1.0], [100700.0, 1.0], [158600.0, 1.0], [33900.0, 34.0], [33100.0, 40.0], [34700.0, 10.0], [36300.0, 29.0], [35500.0, 15.0], [38700.0, 16.0], [37900.0, 16.0], [37100.0, 11.0], [40300.0, 7.0], [39500.0, 4.0], [159500.0, 1.0], [41900.0, 14.0], [42700.0, 12.0], [43500.0, 3.0], [44300.0, 5.0], [45100.0, 2.0], [46700.0, 3.0], [47500.0, 1.0], [49100.0, 3.0], [48300.0, 5.0], [50700.0, 1.0], [52300.0, 5.0], [51500.0, 1.0], [53900.0, 2.0], [55500.0, 1.0], [60300.0, 1.0], [61100.0, 2.0], [59500.0, 1.0], [65100.0, 4.0], [64300.0, 1.0], [69400.0, 1.0], [72600.0, 2.0], [80600.0, 3.0], [82200.0, 1.0], [88600.0, 1.0], [90200.0, 17.0], [93400.0, 1.0], [98200.0, 3.0], [160400.0, 1.0], [145300.0, 1.0], [68500.0, 2.0], [70100.0, 7.0], [143000.0, 2.0], [16500.0, 46.0], [16900.0, 49.0], [17300.0, 22.0], [17700.0, 39.0], [18100.0, 29.0], [18500.0, 35.0], [19300.0, 35.0], [18900.0, 29.0], [20100.0, 38.0], [19700.0, 35.0], [20500.0, 61.0], [21300.0, 24.0], [20900.0, 30.0], [22500.0, 10.0], [22100.0, 20.0], [21700.0, 22.0], [22900.0, 32.0], [23300.0, 24.0], [24100.0, 35.0], [23700.0, 42.0], [24500.0, 41.0], [24900.0, 34.0], [25300.0, 45.0], [25700.0, 25.0], [26500.0, 64.0], [26100.0, 41.0], [27300.0, 51.0], [26900.0, 26.0], [27700.0, 61.0], [28100.0, 11.0], [28500.0, 27.0], [29300.0, 49.0], [28900.0, 21.0], [30100.0, 22.0], [30500.0, 31.0], [29700.0, 48.0], [30900.0, 42.0], [31700.0, 25.0], [31300.0, 27.0], [32500.0, 42.0], [32100.0, 19.0], [33000.0, 16.0], [34600.0, 14.0], [33800.0, 26.0], [36200.0, 28.0], [35400.0, 16.0], [37800.0, 23.0], [38600.0, 14.0], [37000.0, 10.0], [40200.0, 6.0], [39400.0, 8.0], [41800.0, 6.0], [42600.0, 11.0], [41000.0, 12.0], [43400.0, 8.0], [45000.0, 7.0], [44200.0, 3.0], [46600.0, 2.0], [47400.0, 1.0], [48200.0, 2.0], [49000.0, 7.0], [50600.0, 1.0], [51400.0, 3.0], [53800.0, 1.0], [56200.0, 2.0], [57000.0, 1.0], [55400.0, 1.0], [61000.0, 3.0], [59400.0, 1.0], [61800.0, 1.0], [63400.0, 1.0], [65000.0, 7.0], [64200.0, 2.0], [66000.0, 30.0], [70800.0, 1.0], [74000.0, 1.0], [90000.0, 4.0], [96400.0, 2.0], [101200.0, 1.0], [160100.0, 1.0], [65900.0, 14.0], [69100.0, 2.0], [73900.0, 5.0], [80300.0, 1.0], [91500.0, 2.0], [93100.0, 1.0], [34100.0, 6.0], [33300.0, 18.0], [36500.0, 34.0], [35700.0, 23.0], [34900.0, 10.0], [145900.0, 2.0], [38900.0, 5.0], [37300.0, 11.0], [38100.0, 11.0], [39700.0, 6.0], [40500.0, 2.0], [158700.0, 1.0], [41300.0, 5.0], [42900.0, 6.0], [42100.0, 17.0], [43700.0, 5.0], [44500.0, 5.0], [46100.0, 3.0], [45300.0, 2.0], [46900.0, 2.0], [47700.0, 4.0], [48500.0, 7.0], [50100.0, 1.0], [50900.0, 2.0], [49300.0, 8.0], [54100.0, 1.0], [57300.0, 4.0], [55700.0, 1.0], [60500.0, 2.0], [62900.0, 1.0], [63700.0, 32.0], [64500.0, 6.0], [73000.0, 6.0], [79400.0, 1.0], [82600.0, 1.0], [101800.0, 1.0], [103400.0, 1.0], [159600.0, 1.0], [160500.0, 1.0], [72100.0, 1.0], [88100.0, 2.0], [104100.0, 1.0], [8300.0, 14.0], [8500.0, 7.0], [8700.0, 9.0], [8900.0, 8.0], [9100.0, 25.0], [9500.0, 51.0], [9300.0, 13.0], [9700.0, 21.0], [151800.0, 1.0], [10100.0, 27.0], [9900.0, 45.0], [10300.0, 28.0], [10500.0, 17.0], [10700.0, 4.0], [11100.0, 8.0], [10900.0, 21.0], [11500.0, 17.0], [11300.0, 29.0], [11700.0, 11.0], [12100.0, 19.0], [11900.0, 9.0], [12300.0, 8.0], [12500.0, 16.0], [12700.0, 3.0], [12900.0, 8.0], [13300.0, 14.0], [13100.0, 10.0], [13700.0, 12.0], [13500.0, 8.0], [14100.0, 20.0], [13900.0, 25.0], [14300.0, 42.0], [14700.0, 34.0], [14500.0, 13.0], [15100.0, 31.0], [14900.0, 21.0], [15300.0, 18.0], [15700.0, 28.0], [15500.0, 33.0], [16100.0, 17.0], [15900.0, 29.0], [16300.0, 12.0], [16600.0, 63.0], [17000.0, 21.0], [17400.0, 31.0], [17800.0, 20.0], [18200.0, 30.0], [18600.0, 9.0], [19000.0, 28.0], [19400.0, 26.0], [20200.0, 29.0], [19800.0, 99.0], [21400.0, 21.0], [20600.0, 61.0], [21000.0, 18.0], [22200.0, 20.0], [21800.0, 8.0], [23000.0, 21.0], [23400.0, 52.0], [22600.0, 13.0], [23800.0, 29.0], [24200.0, 30.0], [24600.0, 19.0], [25400.0, 70.0], [25000.0, 63.0], [26200.0, 55.0], [25800.0, 45.0], [26600.0, 42.0], [27400.0, 36.0], [27000.0, 22.0], [27800.0, 18.0], [28200.0, 30.0], [28600.0, 19.0], [29000.0, 19.0], [29400.0, 56.0], [30200.0, 58.0], [30600.0, 26.0], [29800.0, 42.0], [31400.0, 21.0], [31000.0, 29.0], [31800.0, 17.0], [32200.0, 28.0], [32600.0, 21.0], [33200.0, 50.0], [34800.0, 13.0], [34000.0, 34.0], [36400.0, 19.0], [35600.0, 11.0], [143100.0, 9.0], [37200.0, 7.0], [38000.0, 10.0], [38800.0, 10.0], [40400.0, 13.0], [39600.0, 12.0], [42800.0, 7.0], [41200.0, 6.0], [42000.0, 10.0], [43600.0, 7.0], [44400.0, 2.0], [46000.0, 2.0], [46800.0, 2.0], [48400.0, 3.0], [47600.0, 3.0], [50000.0, 1.0], [50800.0, 4.0], [49200.0, 1.0], [51600.0, 2.0], [52400.0, 2.0], [57200.0, 2.0], [58000.0, 2.0], [60400.0, 1.0], [64400.0, 1.0], [66400.0, 2.0], [69600.0, 1.0], [72800.0, 2.0], [80800.0, 5.0], [82400.0, 1.0], [96800.0, 2.0], [101600.0, 1.0], [145600.0, 2.0], [152000.0, 1.0], [69500.0, 1.0], [72700.0, 2.0], [71100.0, 2.0], [80700.0, 1.0], [96700.0, 3.0], [98300.0, 1.0], [99900.0, 1.0], [160200.0, 2.0], [33500.0, 22.0], [34300.0, 13.0], [35900.0, 18.0], [36700.0, 15.0], [35100.0, 19.0], [37500.0, 3.0], [38300.0, 11.0], [39900.0, 16.0], [40700.0, 6.0], [39100.0, 13.0], [41500.0, 2.0], [42300.0, 13.0], [43100.0, 4.0], [43900.0, 2.0], [44700.0, 3.0], [45500.0, 4.0], [46300.0, 16.0], [47100.0, 3.0], [47900.0, 1.0], [48700.0, 1.0], [49500.0, 8.0], [50300.0, 3.0], [51100.0, 2.0], [51900.0, 1.0], [54300.0, 2.0], [58300.0, 2.0], [59100.0, 2.0], [57500.0, 2.0], [60700.0, 2.0], [62300.0, 2.0], [63100.0, 1.0], [63900.0, 2.0], [64700.0, 3.0], [67000.0, 1.0], [70200.0, 8.0], [100600.0, 1.0], [143700.0, 1.0], [159700.0, 8.0], [66100.0, 2.0], [70900.0, 2.0], [72500.0, 4.0], [74100.0, 1.0], [93300.0, 1.0], [98100.0, 1.0], [144600.0, 1.0], [160600.0, 2.0], [16700.0, 12.0], [17100.0, 17.0], [17900.0, 26.0], [17500.0, 40.0], [18300.0, 16.0], [19100.0, 39.0], [18700.0, 20.0], [20300.0, 34.0], [19500.0, 36.0], [19900.0, 30.0], [21500.0, 14.0], [21100.0, 23.0], [20700.0, 57.0], [22300.0, 13.0], [21900.0, 18.0], [22700.0, 60.0], [23100.0, 21.0], [23500.0, 16.0], [24300.0, 28.0], [23900.0, 41.0], [24700.0, 43.0], [25100.0, 28.0], [25500.0, 26.0], [25900.0, 20.0], [26300.0, 25.0], [26700.0, 31.0], [27500.0, 43.0], [27100.0, 30.0], [27900.0, 17.0], [28300.0, 27.0], [29500.0, 10.0], [29100.0, 29.0], [28700.0, 28.0], [30300.0, 23.0], [30700.0, 24.0], [29900.0, 41.0], [31100.0, 34.0], [31500.0, 18.0], [32300.0, 28.0], [32700.0, 19.0], [31900.0, 13.0], [33400.0, 5.0], [34200.0, 14.0], [35800.0, 8.0], [35000.0, 8.0], [36600.0, 47.0], [37400.0, 9.0], [38200.0, 11.0], [148700.0, 3.0], [39800.0, 9.0], [39000.0, 15.0], [158300.0, 2.0], [41400.0, 19.0], [42200.0, 24.0], [43000.0, 2.0], [43800.0, 3.0], [44600.0, 1.0], [45400.0, 4.0], [46200.0, 4.0], [48600.0, 3.0], [47800.0, 1.0], [50200.0, 2.0], [51000.0, 3.0], [49400.0, 2.0], [51800.0, 1.0], [52600.0, 3.0], [53400.0, 4.0], [54200.0, 1.0], [59000.0, 1.0], [60600.0, 1.0], [62200.0, 2.0], [63000.0, 4.0], [65400.0, 4.0], [63800.0, 4.0], [64600.0, 21.0], [66800.0, 1.0], [73200.0, 1.0], [94000.0, 1.0], [98800.0, 1.0], [103600.0, 24.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 161200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 10348.0, "series": [{"data": [[0.0, 328.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 195.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 10348.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 24.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 655.18640183346, "minX": 1.6830333E12, "maxY": 3000.0, "series": [{"data": [[1.6830336E12, 655.18640183346], [1.6830333E12, 3000.0], [1.68303348E12, 3000.0], [1.68303336E12, 3000.0], [1.68303354E12, 2303.6704771371788], [1.68303342E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830336E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 78.0, "minX": 1.0, "maxY": 104917.0, "series": [{"data": [[2.0, 42488.0], [3.0, 37865.0], [4.0, 41033.0], [5.0, 41031.0], [6.0, 41031.0], [7.0, 41022.0], [8.0, 41021.0], [9.0, 41012.0], [10.0, 41006.0], [11.0, 41005.0], [12.0, 41001.0], [13.0, 41001.0], [14.0, 37827.0], [15.0, 40999.0], [16.0, 40999.0], [18.0, 40998.0], [20.0, 40998.0], [21.0, 41120.0], [22.0, 40998.0], [23.0, 40997.0], [24.0, 40996.0], [26.0, 40996.0], [28.0, 42271.0], [29.0, 37824.0], [30.0, 36701.0], [33.0, 34906.0], [32.0, 41633.0], [35.0, 37823.0], [34.0, 40996.0], [36.0, 40046.5], [39.0, 40995.0], [41.0, 42270.0], [40.0, 42271.0], [43.0, 37823.0], [44.0, 41420.0], [47.0, 34905.0], [49.0, 38815.0], [48.0, 38506.0], [50.0, 37822.0], [52.0, 40993.0], [54.0, 42269.0], [56.0, 38670.75], [58.0, 41632.0], [61.0, 37915.0], [63.0, 37259.5], [67.0, 36697.0], [66.0, 37821.0], [65.0, 39903.0], [71.0, 42228.0], [70.0, 73967.0], [69.0, 42267.0], [68.0, 42267.0], [74.0, 37713.5], [72.0, 42226.0], [79.0, 39641.333333333336], [76.0, 41134.0], [83.0, 36655.0], [82.0, 42226.0], [81.0, 38711.5], [85.0, 36655.0], [84.0, 34888.0], [91.0, 34884.0], [90.0, 36652.0], [89.0, 38271.5], [88.0, 41670.5], [95.0, 42218.0], [94.0, 39637.0], [93.0, 38763.0], [92.0, 40944.0], [98.0, 37207.5], [96.0, 37771.0], [103.0, 42301.5], [101.0, 37769.0], [100.0, 40488.5], [107.0, 34850.0], [106.0, 42388.0], [105.0, 39516.5], [111.0, 39358.0], [110.0, 36636.0], [109.0, 40931.0], [108.0, 42206.0], [115.0, 34868.0], [114.0, 42205.0], [113.0, 42378.0], [112.0, 73945.0], [119.0, 73944.0], [118.0, 36634.0], [117.0, 37757.0], [116.0, 40929.0], [123.0, 37720.0], [122.0, 39622.0], [121.0, 34838.0], [120.0, 73943.0], [127.0, 36595.0], [126.0, 42166.0], [125.0, 42339.0], [124.0, 38712.0], [134.0, 42114.0], [133.0, 42335.0], [132.0, 42164.0], [131.0, 39316.0], [130.0, 36593.0], [129.0, 38710.0], [128.0, 34799.0], [143.0, 42113.0], [142.0, 42113.0], [141.0, 38349.0], [138.0, 39396.0], [137.0, 42287.0], [150.0, 39233.5], [148.0, 42068.0], [147.0, 38614.0], [146.0, 38614.0], [145.0, 34733.0], [144.0, 34776.0], [159.0, 34665.0], [157.0, 38562.0], [156.0, 42104.0], [154.0, 42104.0], [152.0, 40289.5], [166.0, 39878.5], [164.0, 37503.5], [162.0, 39317.5], [160.0, 38561.0], [175.0, 38747.0], [174.0, 41505.0], [173.0, 42186.0], [172.0, 42014.0], [171.0, 42187.0], [170.0, 40724.5], [169.0, 42188.0], [168.0, 38560.0], [183.0, 33972.0], [182.0, 41712.5], [180.0, 35742.0], [179.0, 57271.0], [177.0, 35746.0], [176.0, 73062.0], [191.0, 36855.0], [190.0, 41476.0], [189.0, 36857.0], [188.0, 36857.0], [187.0, 41478.0], [186.0, 33968.0], [185.0, 41480.5], [198.0, 41294.0], [197.0, 38595.5], [195.0, 41469.0], [194.0, 73035.0], [193.0, 33959.0], [192.0, 35728.0], [206.0, 41380.0], [204.0, 45551.833333333336], [215.0, 33921.0], [214.0, 41287.0], [213.0, 37833.0], [212.0, 41461.0], [211.0, 41462.0], [210.0, 37834.0], [209.0, 73031.0], [208.0, 38505.5], [222.0, 37830.0], [221.0, 37151.0], [219.0, 38440.0], [216.0, 35716.0], [231.0, 33948.0], [229.0, 37931.0], [227.0, 35714.0], [226.0, 38861.333333333336], [239.0, 36204.0], [238.0, 33314.0], [237.0, 33324.0], [236.0, 35713.5], [234.0, 36837.0], [233.0, 33947.0], [232.0, 37829.0], [247.0, 37908.0], [246.0, 104917.0], [245.0, 40921.0], [244.0, 37186.0], [243.0, 33277.0], [242.0, 37190.0], [241.0, 38069.0], [240.0, 33313.0], [254.0, 35004.5], [252.0, 35646.0], [251.0, 32728.0], [250.0, 32790.0], [249.0, 34558.0], [248.0, 35681.0], [269.0, 32270.0], [270.0, 32272.0], [268.0, 37280.0], [259.0, 32568.0], [258.0, 32621.0], [257.0, 37380.0], [256.0, 36447.0], [267.0, 37058.0], [266.0, 35309.0], [265.0, 35315.0], [264.0, 32426.0], [263.0, 34224.0], [262.0, 36341.0], [261.0, 34229.0], [260.0, 37345.0], [286.0, 40671.5], [284.0, 37102.0], [275.0, 37051.0], [274.0, 36177.0], [273.0, 32295.0], [272.0, 32298.0], [283.0, 36613.0], [282.0, 74193.0], [281.0, 32239.0], [280.0, 36161.0], [279.0, 32280.0], [278.0, 32263.0], [277.0, 32292.0], [276.0, 32292.0], [302.0, 39939.0], [303.0, 44581.0], [301.0, 36728.0], [300.0, 32048.0], [299.0, 32082.0], [298.0, 36425.0], [296.0, 35997.0], [295.0, 40362.0], [291.0, 71391.0], [290.0, 104106.0], [289.0, 37100.0], [288.0, 37101.0], [293.0, 40800.0], [318.0, 39946.5], [319.0, 43949.0], [316.0, 58014.5], [307.0, 36436.0], [306.0, 43229.0], [305.0, 36439.0], [304.0, 36948.0], [314.0, 39897.0], [313.0, 39898.0], [312.0, 39899.0], [311.0, 39900.0], [310.0, 34823.0], [309.0, 74001.0], [308.0, 39910.0], [334.0, 36245.0], [335.0, 36509.0], [333.0, 57194.0], [323.0, 35808.0], [322.0, 54750.0], [320.0, 35809.0], [331.0, 44561.5], [329.0, 34809.0], [328.0, 36899.0], [327.0, 43201.0], [326.0, 71194.0], [325.0, 36678.0], [324.0, 43946.0], [350.0, 42989.0], [351.0, 44389.0], [349.0, 44398.0], [348.0, 36487.0], [347.0, 36491.0], [346.0, 36722.0], [345.0, 40537.0], [343.0, 53772.0], [337.0, 36731.0], [336.0, 36732.0], [339.0, 36238.0], [338.0, 39716.0], [341.0, 36236.0], [340.0, 72635.0], [355.0, 31675.0], [367.0, 46287.0], [364.0, 43716.0], [362.0, 39580.0], [360.0, 72585.0], [359.0, 72590.0], [358.0, 73920.0], [357.0, 41991.0], [354.0, 36686.0], [353.0, 42988.0], [352.0, 70981.0], [382.0, 103412.0], [383.0, 42679.0], [381.0, 39401.0], [380.0, 36415.0], [379.0, 73670.0], [378.0, 34356.0], [377.0, 44082.0], [376.0, 36673.0], [375.0, 37913.75], [368.0, 58149.5], [371.0, 44372.0], [370.0, 36562.5], [398.0, 43211.0], [399.0, 35678.0], [397.0, 42472.0], [396.0, 42478.0], [395.0, 73271.0], [394.0, 43245.0], [393.0, 35982.0], [392.0, 35112.0], [391.0, 41229.5], [385.0, 72129.0], [384.0, 35880.0], [387.0, 42519.0], [386.0, 43258.0], [389.0, 35725.0], [388.0, 42518.0], [403.0, 70262.0], [408.0, 43204.0], [412.0, 50093.666666666664], [409.0, 36161.0], [407.0, 70260.0], [406.0, 43793.0], [405.0, 39152.0], [404.0, 72074.0], [402.0, 37659.5], [400.0, 70264.0], [430.0, 38666.0], [431.0, 69966.0], [429.0, 41985.0], [428.0, 72772.0], [427.0, 73106.0], [426.0, 35390.0], [425.0, 42189.0], [424.0, 73009.0], [423.0, 35936.0], [417.0, 53655.0], [416.0, 42462.0], [422.0, 42461.0], [420.0, 38186.0], [446.0, 71557.0], [447.0, 69941.0], [445.0, 35159.0], [444.0, 71558.0], [443.0, 71561.0], [442.0, 38642.0], [441.0, 40186.0], [438.0, 57461.5], [435.0, 42700.0], [434.0, 69955.0], [433.0, 41971.0], [432.0, 72758.0], [436.0, 35167.0], [462.0, 69920.0], [463.0, 43256.0], [461.0, 69724.0], [460.0, 43326.0], [459.0, 42670.0], [458.0, 35404.0], [457.0, 57433.0], [455.0, 41931.0], [449.0, 34542.0], [448.0, 42683.0], [451.0, 43267.0], [450.0, 41942.0], [454.0, 43330.0], [453.0, 35277.0], [478.0, 70988.0], [479.0, 69152.0], [477.0, 38287.0], [476.0, 43009.0], [475.0, 44132.0], [474.0, 42366.0], [473.0, 41630.0], [472.0, 42978.0], [471.0, 34258.0], [465.0, 35155.0], [464.0, 69480.0], [467.0, 41670.0], [466.0, 42419.0], [470.0, 38344.0], [469.0, 69658.0], [468.0, 69118.0], [494.0, 35954.0], [495.0, 37118.0], [493.0, 36699.0], [492.0, 28566.0], [491.0, 36706.0], [490.0, 37387.0], [489.0, 64054.0], [488.0, 66854.0], [487.0, 32758.0], [481.0, 42089.0], [480.0, 41356.0], [483.0, 41313.0], [482.0, 34813.0], [486.0, 37476.0], [485.0, 36097.0], [484.0, 37429.0], [509.0, 31918.0], [510.0, 63025.0], [508.0, 64870.0], [499.0, 37042.0], [498.0, 37042.0], [497.0, 36976.0], [496.0, 36982.0], [507.0, 36601.0], [506.0, 36677.0], [505.0, 35527.0], [504.0, 63386.0], [503.0, 32285.0], [502.0, 63422.0], [501.0, 29330.0], [500.0, 36959.0], [540.0, 26770.0], [542.0, 34268.0], [538.0, 34386.0], [536.0, 63272.0], [534.0, 26885.0], [532.0, 64620.0], [530.0, 35087.0], [528.0, 34714.0], [526.0, 22929.0], [514.0, 45718.5], [512.0, 50033.0], [518.0, 35441.0], [516.0, 36292.0], [524.0, 31109.0], [522.0, 27178.0], [520.0, 64303.0], [572.0, 20916.0], [574.0, 61193.0], [570.0, 29235.0], [568.0, 60612.0], [566.0, 34098.0], [564.0, 29416.0], [562.0, 25963.0], [560.0, 29574.0], [558.0, 34273.0], [546.0, 34086.0], [544.0, 64215.0], [550.0, 26507.0], [548.0, 21923.0], [556.0, 62590.0], [554.0, 61011.0], [552.0, 63841.0], [602.0, 32486.0], [606.0, 60726.0], [600.0, 59192.0], [582.0, 32861.0], [580.0, 24764.0], [578.0, 32892.0], [576.0, 25054.0], [598.0, 32550.0], [596.0, 24941.0], [594.0, 24499.0], [592.0, 19988.0], [590.0, 33917.0], [588.0, 59202.0], [586.0, 25117.0], [584.0, 59295.0], [632.0, 31153.0], [636.0, 31035.0], [638.0, 23330.0], [634.0, 30972.0], [630.0, 31117.0], [624.0, 59399.0], [622.0, 59400.0], [610.0, 61868.0], [614.0, 32261.0], [612.0, 61786.0], [620.0, 44959.0], [618.0, 57798.0], [616.0, 19265.0], [668.0, 55785.0], [670.0, 30250.0], [666.0, 27799.0], [664.0, 30326.0], [662.0, 28568.0], [660.0, 16486.0], [658.0, 16986.0], [656.0, 57213.0], [654.0, 22996.0], [642.0, 32138.0], [640.0, 23326.0], [646.0, 57390.0], [644.0, 59211.0], [652.0, 18099.0], [650.0, 23249.0], [648.0, 26254.0], [700.0, 27652.0], [702.0, 33292.0], [698.0, 30262.0], [696.0, 30267.0], [694.0, 33303.0], [692.0, 26264.0], [690.0, 33309.0], [688.0, 48580.0], [686.0, 33312.0], [674.0, 55428.0], [672.0, 29115.0], [678.0, 15322.0], [676.0, 28945.0], [684.0, 33320.0], [680.0, 30295.0], [732.0, 48548.0], [734.0, 33277.0], [730.0, 53687.0], [728.0, 29851.5], [726.0, 33281.0], [724.0, 34338.0], [722.0, 48551.0], [720.0, 30442.0], [718.0, 53692.0], [706.0, 26245.0], [704.0, 26245.0], [710.0, 48555.0], [708.0, 42164.5], [716.0, 48553.0], [714.0, 28763.0], [712.0, 28763.0], [742.0, 43432.0], [766.0, 30617.0], [764.0, 30232.0], [758.0, 31296.0], [752.0, 29000.0], [750.0, 29866.666666666668], [744.0, 33269.0], [740.0, 35390.0], [738.0, 29261.0], [736.0, 43434.0], [796.0, 29082.0], [798.0, 33094.0], [794.0, 35217.0], [792.0, 30457.0], [790.0, 28601.0], [788.0, 43669.0], [786.0, 53903.0], [784.0, 35349.0], [782.0, 33235.0], [770.0, 43422.0], [768.0, 29252.0], [774.0, 52168.0], [772.0, 35369.0], [780.0, 29227.0], [778.0, 30603.0], [776.0, 30217.0], [828.0, 29049.0], [830.0, 52433.0], [826.0, 46979.0], [824.0, 13299.0], [822.0, 29345.0], [820.0, 14422.0], [818.0, 43050.0], [816.0, 53439.0], [814.0, 30029.0], [802.0, 53499.0], [800.0, 56837.0], [806.0, 30431.0], [804.0, 29068.0], [812.0, 53826.0], [810.0, 35190.0], [808.0, 35193.0], [860.0, 27188.0], [862.0, 51560.0], [858.0, 46506.0], [856.0, 28592.0], [854.0, 28404.0], [852.0, 29845.5], [850.0, 26752.0], [848.0, 46571.0], [846.0, 41869.0], [834.0, 35223.0], [832.0, 29018.0], [838.0, 52462.0], [836.0, 52056.0], [844.0, 41905.0], [842.0, 33604.0], [840.0, 51905.0], [892.0, 25926.0], [894.0, 11265.0], [890.0, 30245.0], [888.0, 30275.0], [886.0, 40841.0], [884.0, 32475.0], [882.0, 32624.0], [880.0, 27974.0], [878.0, 12193.0], [866.0, 26532.0], [864.0, 41292.0], [870.0, 28097.0], [868.0, 27942.0], [876.0, 41337.0], [874.0, 32987.0], [872.0, 30919.0], [924.0, 26234.0], [926.0, 31339.0], [922.0, 26269.0], [920.0, 25300.0], [918.0, 26684.0], [916.0, 25325.0], [914.0, 25327.0], [912.0, 25332.0], [910.0, 39846.0], [898.0, 26820.0], [896.0, 31635.0], [902.0, 24870.0], [900.0, 31526.0], [908.0, 39854.0], [906.0, 25356.0], [904.0, 49783.0], [956.0, 39208.0], [958.0, 49070.0], [954.0, 24239.0], [952.0, 24775.0], [950.0, 44086.0], [948.0, 44134.0], [946.0, 28910.0], [944.0, 24422.0], [942.0, 39104.0], [930.0, 31289.0], [928.0, 39708.0], [934.0, 26012.0], [932.0, 26294.0], [940.0, 31071.0], [938.0, 39465.0], [936.0, 44255.0], [988.0, 38617.0], [990.0, 38552.0], [984.0, 43474.0], [966.0, 23912.0], [964.0, 30552.0], [962.0, 39060.0], [960.0, 10227.0], [982.0, 25414.0], [980.0, 38419.0], [978.0, 43554.0], [976.0, 30402.0], [974.0, 25678.0], [972.0, 43621.0], [970.0, 25527.0], [968.0, 28390.0], [1020.0, 24344.0], [1008.0, 24637.0], [1010.0, 24819.0], [1012.0, 24429.0], [1022.0, 23941.0], [1018.0, 24088.0], [1016.0, 24421.0], [1006.0, 47923.0], [994.0, 48301.0], [992.0, 38446.0], [998.0, 48149.0], [996.0, 38392.0], [1004.0, 9309.0], [1002.0, 37910.0], [1000.0, 24874.0], [1014.0, 24448.0], [1080.0, 37885.0], [1056.0, 1860.0], [1060.0, 305.0], [1064.0, 28267.0], [1084.0, 14871.0], [1076.0, 28237.0], [1072.0, 28277.0], [1024.0, 22842.0], [1028.0, 23698.0], [1032.0, 23813.0], [1036.0, 23805.0], [1052.0, 3726.0], [1048.0, 5750.0], [1044.0, 22048.0], [1040.0, 23768.0], [1068.0, 36490.0], [1144.0, 24353.0], [1120.0, 28767.5], [1124.0, 35893.0], [1128.0, 35884.0], [1148.0, 35612.0], [1140.0, 27070.0], [1136.0, 27411.0], [1088.0, 14860.0], [1092.0, 21470.0], [1096.0, 28191.0], [1100.0, 22043.0], [1116.0, 36137.0], [1112.0, 37405.0], [1108.0, 27850.0], [1104.0, 36319.0], [1132.0, 32325.0], [1208.0, 31925.5], [1184.0, 35371.0], [1188.0, 20822.0], [1192.0, 35354.0], [1212.0, 27251.0], [1204.0, 36581.0], [1200.0, 27285.0], [1156.0, 27745.0], [1152.0, 27409.0], [1160.0, 27745.0], [1164.0, 27405.0], [1180.0, 35261.0], [1168.0, 28359.666666666668], [1196.0, 31945.5], [1272.0, 20142.0], [1248.0, 35998.0], [1252.0, 34542.0], [1256.0, 34379.0], [1276.0, 35506.0], [1268.0, 22548.5], [1264.0, 34496.0], [1216.0, 35211.0], [1220.0, 34933.0], [1224.0, 35086.0], [1228.0, 19944.0], [1244.0, 34814.0], [1240.0, 31565.5], [1232.0, 26556.0], [1260.0, 34300.0], [1336.0, 12102.0], [1312.0, 12324.0], [1316.0, 11310.0], [1320.0, 17677.0], [1340.0, 11896.5], [1332.0, 12112.0], [1328.0, 11146.0], [1280.0, 19114.0], [1284.0, 19103.0], [1288.0, 19691.0], [1292.0, 26166.0], [1308.0, 33984.0], [1304.0, 20056.0], [1300.0, 19664.0], [1296.0, 20081.0], [1324.0, 12294.0], [1400.0, 8494.0], [1376.0, 9579.0], [1380.0, 9509.0], [1384.0, 9302.0], [1404.0, 27509.0], [1396.0, 9172.0], [1392.0, 9183.0], [1344.0, 12098.0], [1348.0, 17442.0], [1352.0, 11336.0], [1356.0, 9735.0], [1372.0, 9602.0], [1368.0, 8938.0], [1364.0, 8978.0], [1360.0, 9706.0], [1388.0, 9195.0], [1456.0, 8947.0], [1464.0, 29864.0], [1440.0, 28761.0], [1444.0, 25847.5], [1468.0, 29820.0], [1460.0, 29959.0], [1436.0, 22416.0], [1408.0, 30238.0], [1412.0, 27351.0], [1416.0, 27345.0], [1420.0, 24543.0], [1432.0, 30174.0], [1428.0, 27458.0], [1448.0, 25683.0], [1520.0, 26197.0], [1504.0, 24415.0], [1508.0, 24340.0], [1524.0, 26193.0], [1472.0, 29776.0], [1476.0, 26841.0], [1480.0, 21519.0], [1484.0, 26677.0], [1500.0, 24682.0], [1496.0, 28864.0], [1492.0, 29635.0], [1488.0, 26526.0], [1516.0, 26207.0], [1512.0, 24255.0], [1592.0, 10035.0], [1568.0, 6680.0], [1572.0, 6676.0], [1576.0, 6668.0], [1596.0, 10301.0], [1588.0, 10037.0], [1584.0, 9505.0], [1536.0, 16530.5], [1540.0, 6532.0], [1544.0, 26130.0], [1548.0, 6525.0], [1564.0, 10114.0], [1560.0, 6449.0], [1556.0, 6508.0], [1580.0, 6640.0], [1656.0, 7058.0], [1632.0, 9813.0], [1636.0, 9519.0], [1640.0, 9510.0], [1660.0, 7041.0], [1652.0, 8844.0], [1648.0, 5481.5], [1600.0, 6176.0], [1604.0, 10185.0], [1608.0, 6410.0], [1612.0, 6337.0], [1628.0, 9590.0], [1624.0, 6190.0], [1620.0, 9694.0], [1616.0, 10018.0], [1644.0, 9077.0], [1720.0, 6151.0], [1696.0, 11033.0], [1700.0, 10987.0], [1724.0, 6074.0], [1716.0, 10617.0], [1712.0, 10737.0], [1664.0, 7037.0], [1668.0, 6994.0], [1672.0, 6898.0], [1676.0, 6856.0], [1692.0, 6625.0], [1688.0, 6747.0], [1684.0, 6784.0], [1680.0, 11208.0], [1708.0, 10810.0], [1784.0, 9987.0], [1760.0, 9916.0], [1764.0, 9915.0], [1768.0, 25615.0], [1780.0, 25231.0], [1776.0, 9700.0], [1740.0, 10427.0], [1736.0, 25669.0], [1732.0, 9965.0], [1728.0, 9970.0], [1756.0, 9986.0], [1752.0, 10394.0], [1748.0, 10191.5], [1744.0, 25628.0], [1772.0, 9724.0], [1852.0, 19939.0], [1848.0, 16429.0], [1828.0, 8787.0], [1832.0, 8584.0], [1836.0, 19079.0], [1824.0, 8722.0], [1844.0, 7783.0], [1840.0, 8346.0], [1792.0, 9546.0], [1796.0, 9938.0], [1800.0, 25148.0], [1804.0, 20533.0], [1820.0, 16577.5], [1812.0, 9295.0], [1808.0, 9372.0], [1912.0, 6000.0], [1908.0, 16542.0], [1916.0, 20523.0], [1888.0, 6631.0], [1892.0, 5892.0], [1896.0, 5830.0], [1900.0, 19572.0], [1904.0, 19564.0], [1856.0, 35107.0], [1864.0, 19924.0], [1868.0, 19910.0], [1884.0, 6098.0], [1880.0, 18284.0], [1876.0, 6129.0], [1872.0, 13020.0], [1976.0, 14923.0], [1972.0, 14965.0], [1980.0, 14910.0], [1952.0, 20274.0], [1956.0, 4824.0], [1960.0, 33015.0], [1964.0, 20147.0], [1968.0, 14222.0], [1920.0, 20518.0], [1924.0, 20510.0], [1928.0, 5060.0], [1932.0, 20484.0], [1948.0, 20307.0], [1944.0, 15168.0], [1940.0, 4952.0], [1936.0, 4335.0], [2040.0, 18825.0], [2044.0, 18810.0], [2016.0, 14235.0], [2020.0, 18981.0], [2024.0, 18980.0], [2028.0, 18978.0], [2036.0, 18847.0], [2032.0, 18933.0], [1984.0, 14900.0], [1988.0, 18843.0], [1992.0, 18837.0], [1996.0, 26232.0], [2012.0, 26457.0], [2008.0, 14660.0], [2004.0, 14726.0], [2000.0, 14807.0], [2144.0, 24785.0], [2160.0, 19000.666666666668], [2168.0, 23400.0], [2112.0, 20632.0], [2128.0, 19695.0], [2136.0, 21832.666666666668], [2048.0, 21787.0], [2056.0, 19007.0], [2064.0, 18759.0], [2072.0, 18789.0], [2104.0, 25518.0], [2096.0, 20484.0], [2088.0, 18136.0], [2080.0, 19793.0], [2176.0, 23397.0], [2192.0, 10006.0], [2224.0, 22670.5], [2200.0, 26287.0], [2232.0, 19838.0], [2216.0, 31611.0], [2208.0, 27024.0], [2552.0, 81.0], [2504.0, 27838.666666666668], [2496.0, 25432.0], [2512.0, 25304.333333333332], [2520.0, 27759.0], [2528.0, 24592.0], [2448.0, 23870.666666666668], [2456.0, 20375.0], [2480.0, 28820.0], [2464.0, 24895.0], [2664.0, 25116.0], [2672.0, 25105.0], [2624.0, 24296.0], [2632.0, 24283.0], [2640.0, 20444.0], [2656.0, 24195.0], [2584.0, 20605.0], [2576.0, 20653.0], [2568.0, 1305.0], [2616.0, 20524.0], [2608.0, 20800.0], [2600.0, 20587.666666666668], [2784.0, 22733.0], [2704.0, 21576.0], [2776.0, 23496.5], [2752.0, 22998.0], [2760.0, 22873.0], [2768.0, 22731.0], [2696.0, 23867.0], [2712.0, 24778.0], [2744.0, 22002.0], [2736.0, 23131.0], [2728.0, 23367.0], [2720.0, 23852.0], [2912.0, 492.0], [2936.0, 15953.0], [2880.0, 596.0], [2920.0, 488.0], [2840.0, 17128.0], [2872.0, 514.5], [2864.0, 20433.0], [2848.0, 16428.25], [2944.0, 4367.0], [3000.0, 24405.299807815485], [2952.0, 10370.0], [2992.0, 18482.666666666668], [2161.0, 23402.0], [2169.0, 22615.0], [2113.0, 23976.0], [2121.0, 11076.0], [2129.0, 25278.0], [2137.0, 24791.0], [2153.0, 22417.0], [2145.0, 23407.0], [2073.0, 21551.0], [2065.0, 21352.0], [2057.0, 19003.0], [2049.0, 19018.0], [2105.0, 25442.0], [2097.0, 20853.0], [2089.0, 18131.0], [2081.0, 21037.0], [2185.0, 24049.0], [2193.0, 9995.0], [2225.0, 21298.714285714286], [2233.0, 19883.0], [2177.0, 24774.0], [2201.0, 26277.0], [2209.0, 21689.0], [2417.0, 24098.0], [2409.0, 19836.5], [2433.0, 23064.0], [2497.0, 23969.166666666668], [2513.0, 29874.0], [2441.0, 25200.2], [2489.0, 24108.0], [2481.0, 24533.0], [2473.0, 24621.42307692308], [2465.0, 26515.0], [2681.0, 24459.0], [2625.0, 24021.0], [2633.0, 25275.0], [2641.0, 20468.0], [2649.0, 22206.0], [2673.0, 23832.0], [2665.0, 24121.0], [2657.0, 25187.0], [2585.0, 20602.0], [2577.0, 20837.0], [2569.0, 1303.0], [2561.0, 5236.0], [2617.0, 46759.0], [2705.0, 24768.0], [2785.0, 22730.0], [2753.0, 22969.0], [2761.0, 17982.0], [2769.0, 21218.0], [2777.0, 21184.0], [2697.0, 24827.0], [2713.0, 21500.0], [2745.0, 18199.0], [2737.0, 23037.0], [2729.0, 23363.0], [2721.0, 23520.0], [2889.0, 587.0], [2881.0, 428.0], [2905.0, 1517.25], [2873.0, 431.0], [2865.0, 443.0], [2857.0, 18013.000000000004], [2849.0, 18413.0], [2961.0, 4344.0], [2985.0, 13627.0], [1081.0, 36640.0], [1057.0, 1887.0], [1061.0, 304.0], [1065.0, 28265.0], [1085.0, 27862.0], [1077.0, 28598.0], [1073.0, 37913.0], [1025.0, 23759.0], [1029.0, 24083.0], [1033.0, 8214.0], [1037.0, 23798.0], [1053.0, 3810.0], [1049.0, 5862.0], [1045.0, 28629.0], [1041.0, 28713.0], [1069.0, 28628.0], [1145.0, 37062.0], [1149.0, 27383.0], [1121.0, 27379.0], [1125.0, 27662.0], [1129.0, 21540.0], [1141.0, 27769.0], [1137.0, 27080.0], [1101.0, 27942.0], [1097.0, 28206.0], [1093.0, 22062.0], [1089.0, 22070.0], [1117.0, 21597.0], [1113.0, 28084.0], [1109.0, 27459.0], [1105.0, 37556.0], [1133.0, 36077.0], [1201.0, 20799.0], [1213.0, 26550.0], [1185.0, 27312.0], [1189.0, 35361.0], [1205.0, 20796.0], [1157.0, 24318.0], [1161.0, 20663.0], [1165.0, 35797.0], [1181.0, 26998.0], [1177.0, 27526.0], [1169.0, 37032.0], [1197.0, 36589.0], [1193.0, 20217.0], [1269.0, 34324.0], [1277.0, 35505.0], [1249.0, 34553.0], [1253.0, 34696.0], [1257.0, 35790.0], [1273.0, 26212.0], [1265.0, 19359.0], [1229.0, 26618.0], [1225.0, 26329.0], [1221.0, 36349.0], [1217.0, 26815.0], [1245.0, 19663.0], [1241.0, 26543.0], [1237.0, 27134.0], [1233.0, 26224.0], [1337.0, 17477.0], [1341.0, 12100.0], [1313.0, 12321.0], [1317.0, 12312.0], [1321.0, 11890.0], [1333.0, 12111.0], [1329.0, 27503.0], [1289.0, 35475.0], [1285.0, 19103.0], [1281.0, 34245.0], [1309.0, 25526.0], [1305.0, 35427.0], [1301.0, 25777.0], [1297.0, 19669.0], [1325.0, 11877.0], [1397.0, 9171.0], [1405.0, 14470.0], [1377.0, 9576.0], [1381.0, 9448.0], [1385.0, 9285.0], [1393.0, 9181.0], [1357.0, 9734.0], [1353.0, 11663.0], [1349.0, 12018.0], [1345.0, 11666.0], [1373.0, 9597.0], [1365.0, 9624.0], [1361.0, 9034.0], [1389.0, 14599.0], [1457.0, 30121.0], [1465.0, 27115.0], [1449.0, 30124.0], [1445.0, 30125.0], [1469.0, 30391.0], [1461.0, 29947.0], [1409.0, 24020.0], [1413.0, 24553.0], [1417.0, 26162.0], [1421.0, 27487.0], [1437.0, 18772.0], [1433.0, 30165.0], [1429.0, 27304.0], [1425.0, 30214.0], [1529.0, 6552.5], [1533.0, 6548.5], [1505.0, 27139.0], [1509.0, 27019.0], [1513.0, 26221.0], [1525.0, 26168.0], [1521.0, 26196.0], [1485.0, 29405.0], [1481.0, 29423.0], [1477.0, 29562.0], [1473.0, 21854.0], [1501.0, 25943.0], [1497.0, 29394.0], [1493.0, 29043.0], [1489.0, 29071.0], [1517.0, 26206.0], [1593.0, 6599.0], [1569.0, 10409.0], [1573.0, 10102.0], [1577.0, 6664.0], [1597.0, 6572.0], [1589.0, 10036.0], [1585.0, 10046.0], [1537.0, 6539.0], [1541.0, 26136.0], [1549.0, 6519.0], [1565.0, 6316.0], [1561.0, 6362.0], [1557.0, 6879.0], [1553.0, 8594.0], [1581.0, 6262.0], [1657.0, 7073.0], [1661.0, 7040.0], [1637.0, 9258.0], [1633.0, 9378.0], [1641.0, 9205.0], [1653.0, 4872.0], [1649.0, 5470.0], [1613.0, 10039.0], [1609.0, 6408.0], [1605.0, 6445.0], [1601.0, 9960.0], [1629.0, 9835.0], [1625.0, 9609.0], [1621.0, 9981.0], [1617.0, 5916.0], [1645.0, 9261.0], [1721.0, 6150.0], [1697.0, 6602.0], [1701.0, 10910.0], [1705.0, 8648.5], [1725.0, 10402.0], [1717.0, 10613.0], [1713.0, 6305.0], [1665.0, 7037.0], [1669.0, 6903.0], [1673.0, 6894.0], [1677.0, 6851.0], [1693.0, 6622.0], [1689.0, 6728.0], [1685.0, 6743.0], [1681.0, 6828.0], [1709.0, 10685.0], [1785.0, 8684.0], [1789.0, 9082.5], [1761.0, 9983.0], [1765.0, 10390.0], [1769.0, 9976.0], [1781.0, 9590.0], [1777.0, 10103.0], [1741.0, 10018.0], [1737.0, 9961.0], [1733.0, 9964.0], [1757.0, 9984.0], [1753.0, 25626.0], [1749.0, 10395.0], [1745.0, 10157.5], [1773.0, 9670.0], [1849.0, 16427.0], [1853.0, 19939.0], [1829.0, 8907.0], [1825.0, 9197.0], [1837.0, 8364.0], [1845.0, 7692.0], [1841.0, 8343.0], [1793.0, 9949.0], [1797.0, 9528.0], [1801.0, 9903.0], [1805.0, 9476.0], [1817.0, 24432.0], [1813.0, 8795.0], [1809.0, 8525.0], [1913.0, 19046.0], [1917.0, 5086.0], [1889.0, 5923.0], [1893.0, 19629.0], [1897.0, 6505.0], [1901.0, 19570.0], [1909.0, 16538.0], [1905.0, 19548.0], [1857.0, 19931.0], [1861.0, 13040.0], [1865.0, 19924.0], [1869.0, 6139.0], [1885.0, 19864.0], [1881.0, 19887.0], [1877.0, 6129.0], [1873.0, 6134.0], [1977.0, 18884.0], [1981.0, 14910.0], [1953.0, 20270.0], [1957.0, 20218.0], [1961.0, 20182.0], [1965.0, 20074.0], [1973.0, 14927.0], [1921.0, 4392.0], [1925.0, 20504.0], [1929.0, 20493.0], [1933.0, 20470.0], [1949.0, 4865.0], [1945.0, 15167.0], [1941.0, 20366.0], [1937.0, 20438.0], [2037.0, 18844.0], [2041.0, 19043.0], [2017.0, 18981.0], [2021.0, 18981.0], [2025.0, 18980.0], [2033.0, 18930.0], [1985.0, 31677.0], [1989.0, 14880.0], [1993.0, 14875.0], [1997.0, 14845.0], [2013.0, 25899.0], [2009.0, 14564.0], [2005.0, 14723.0], [2001.0, 16367.0], [2170.0, 19667.0], [2122.0, 30203.0], [2130.0, 23220.0], [2138.0, 17289.0], [2146.0, 17286.0], [2050.0, 18795.0], [2066.0, 21724.0], [2074.0, 18503.0], [2106.0, 25399.0], [2098.0, 25579.0], [2090.0, 20520.0], [2082.0, 18265.0], [2186.0, 22372.5], [2178.0, 20041.0], [2194.0, 9686.0], [2202.0, 27089.0], [2210.0, 20175.0], [2426.0, 22365.375], [2410.0, 26521.0], [2538.0, 31219.0], [2546.0, 26665.666666666668], [2506.0, 25736.7], [2498.0, 27212.81818181818], [2514.0, 27528.333333333336], [2530.0, 27200.5], [2434.0, 25698.0], [2442.0, 24095.0], [2450.0, 27766.0], [2458.0, 19853.0], [2490.0, 22987.4], [2474.0, 24535.0], [2674.0, 25097.0], [2666.0, 23845.0], [2626.0, 24020.0], [2642.0, 23993.0], [2682.0, 25169.0], [2658.0, 25180.0], [2586.0, 20814.0], [2570.0, 85.0], [2562.0, 4136.0], [2618.0, 20550.0], [2610.0, 21398.5], [2602.0, 20587.0], [2594.0, 20588.0], [2714.0, 21492.0], [2706.0, 23765.0], [2762.0, 21486.0], [2770.0, 22773.0], [2778.0, 21182.0], [2786.0, 21148.0], [2690.0, 7088.0], [2698.0, 24809.0], [2746.0, 23069.0], [2738.0, 23107.0], [2730.0, 19989.0], [2722.0, 20314.0], [2914.0, 490.0], [2922.0, 4401.0], [2882.0, 595.0], [2890.0, 586.0], [2898.0, 1487.5], [2842.0, 14235.0], [2874.0, 431.0], [2866.0, 437.0], [2850.0, 17634.5], [2946.0, 7105.0], [2970.0, 7453.750000000001], [2994.0, 19495.184210526317], [2163.0, 25021.5], [2155.0, 19860.5], [2115.0, 24587.5], [2123.0, 25084.0], [2139.0, 20056.0], [2171.0, 17279.0], [2147.0, 24784.0], [2075.0, 18453.0], [2067.0, 18910.0], [2059.0, 19001.0], [2051.0, 19015.0], [2107.0, 25398.0], [2099.0, 20845.0], [2091.0, 18122.0], [2083.0, 18210.0], [2187.0, 19627.0], [2179.0, 19663.0], [2195.0, 9684.0], [2203.0, 21753.0], [2227.0, 22891.0], [2211.0, 26188.0], [2403.0, 19813.0], [2547.0, 27756.0], [2555.0, 80.0], [2499.0, 28637.0], [2507.0, 25535.0], [2523.0, 27582.6], [2539.0, 29670.5], [2443.0, 23726.666666666668], [2451.0, 25497.333333333336], [2491.0, 23043.333333333332], [2483.0, 22487.333333333332], [2475.0, 24432.5], [2683.0, 25087.0], [2675.0, 24102.0], [2627.0, 25281.0], [2635.0, 23044.5], [2643.0, 20655.0], [2651.0, 20735.0], [2667.0, 24117.0], [2587.0, 19583.0], [2579.0, 23136.0], [2571.0, 83.0], [2563.0, 4133.0], [2619.0, 20522.0], [2611.0, 20585.0], [2603.0, 20801.0], [2787.0, 21125.0], [2755.0, 24446.5], [2763.0, 22836.0], [2771.0, 21199.0], [2779.0, 21406.0], [2795.0, 1285.0], [2699.0, 24785.0], [2707.0, 23479.0], [2715.0, 23649.0], [2747.0, 22986.0], [2739.0, 19821.0], [2731.0, 22118.0], [2915.0, 2448.5], [2931.0, 6433.25], [2939.0, 4787.25], [2923.0, 485.0], [2835.0, 1254.0], [2875.0, 432.0], [2867.0, 433.0], [2859.0, 18585.5], [2851.0, 15163.0], [2955.0, 3797.0], [2947.0, 3818.0], [2963.0, 10466.5], [2971.0, 16913.0], [2995.0, 13382.666666666666], [2987.0, 21979.4], [541.0, 27028.0], [543.0, 34262.0], [539.0, 63243.0], [537.0, 34395.0], [535.0, 35067.0], [533.0, 30366.0], [531.0, 35013.0], [529.0, 34699.0], [527.0, 35375.0], [515.0, 63207.0], [519.0, 31383.0], [517.0, 28548.0], [525.0, 22931.0], [523.0, 31141.0], [521.0, 36033.0], [573.0, 20914.0], [575.0, 59574.0], [571.0, 26216.0], [569.0, 33327.0], [567.0, 29373.0], [565.0, 34112.0], [563.0, 25957.0], [561.0, 26068.0], [559.0, 34304.0], [547.0, 64277.0], [545.0, 62961.0], [551.0, 34035.0], [549.0, 21922.0], [557.0, 33703.0], [555.0, 26462.0], [553.0, 26228.0], [605.0, 24343.0], [607.0, 32513.0], [603.0, 60744.0], [601.0, 24405.0], [599.0, 59207.0], [597.0, 32622.0], [595.0, 24456.0], [593.0, 19987.0], [591.0, 33901.0], [579.0, 62346.0], [577.0, 61183.0], [583.0, 24990.0], [581.0, 25243.0], [589.0, 32802.0], [587.0, 24624.0], [585.0, 25187.0], [637.0, 59242.0], [639.0, 31031.0], [635.0, 26327.0], [633.0, 30482.0], [631.0, 32297.0], [629.0, 60565.5], [627.0, 28797.0], [625.0, 32309.0], [623.0, 57587.0], [611.0, 31755.0], [609.0, 32491.0], [615.0, 33375.0], [613.0, 32293.0], [621.0, 31192.0], [617.0, 19263.0], [669.0, 55574.0], [671.0, 57328.0], [667.0, 58580.0], [665.0, 24490.0], [663.0, 30333.0], [661.0, 29241.0], [659.0, 16490.0], [657.0, 16986.0], [655.0, 30037.0], [643.0, 60396.0], [641.0, 60414.0], [647.0, 30909.0], [645.0, 31002.0], [653.0, 30748.0], [651.0, 18101.0], [649.0, 32074.0], [701.0, 30258.0], [703.0, 27572.0], [699.0, 26254.0], [697.0, 33300.0], [695.0, 30267.0], [693.0, 30268.0], [691.0, 27663.0], [689.0, 26269.0], [687.0, 30275.0], [675.0, 57236.0], [673.0, 28963.0], [679.0, 30296.0], [677.0, 15410.0], [685.0, 27601.0], [683.0, 43185.0], [681.0, 53732.0], [729.0, 28757.0], [735.0, 30627.0], [733.0, 30436.0], [731.0, 33278.0], [719.0, 29268.0], [705.0, 30250.0], [717.0, 30247.0], [715.0, 29269.0], [713.0, 26982.0], [711.0, 30248.0], [709.0, 33285.0], [761.0, 46874.0], [767.0, 30425.0], [765.0, 33267.0], [763.0, 31846.5], [755.0, 43823.333333333336], [747.0, 40010.333333333336], [743.0, 53685.0], [741.0, 53684.0], [739.0, 28756.0], [737.0, 29263.0], [797.0, 48366.0], [799.0, 28573.0], [795.0, 33099.0], [793.0, 30455.0], [791.0, 30457.0], [789.0, 30105.0], [787.0, 43668.0], [785.0, 30499.0], [783.0, 54186.0], [771.0, 28735.0], [769.0, 35380.0], [775.0, 30218.0], [773.0, 28734.0], [781.0, 53995.0], [779.0, 29238.0], [777.0, 53662.0], [829.0, 28852.0], [831.0, 33789.0], [827.0, 28864.0], [825.0, 13382.0], [823.0, 27387.0], [821.0, 29807.0], [819.0, 14311.0], [817.0, 28906.0], [815.0, 33038.0], [803.0, 33085.0], [801.0, 30442.0], [807.0, 35193.0], [805.0, 28560.0], [813.0, 28544.0], [811.0, 48344.0], [809.0, 30428.0], [861.0, 28541.0], [863.0, 26630.0], [859.0, 28580.0], [857.0, 33354.0], [855.0, 33358.0], [853.0, 26735.0], [849.0, 28438.0], [847.0, 31381.0], [835.0, 46927.0], [839.0, 46780.0], [837.0, 52045.0], [845.0, 28577.0], [843.0, 46753.0], [841.0, 28651.0], [893.0, 11182.0], [895.0, 29535.0], [891.0, 32336.0], [889.0, 51219.0], [887.0, 45589.0], [885.0, 27319.0], [883.0, 32570.0], [881.0, 27950.0], [879.0, 12277.0], [867.0, 30984.0], [865.0, 27087.0], [871.0, 51689.0], [869.0, 26926.0], [877.0, 26834.0], [875.0, 41356.0], [873.0, 28266.0], [925.0, 24734.0], [927.0, 31336.0], [923.0, 44564.0], [921.0, 44585.0], [919.0, 25305.0], [917.0, 25320.0], [915.0, 25327.0], [913.0, 26696.0], [911.0, 26318.0], [899.0, 29446.0], [897.0, 26463.0], [903.0, 29380.0], [901.0, 39919.0], [909.0, 26519.0], [907.0, 26718.0], [905.0, 26338.0], [957.0, 24688.0], [959.0, 43884.0], [955.0, 39252.0], [953.0, 24268.0], [951.0, 38955.0], [949.0, 24816.0], [947.0, 49662.0], [945.0, 44181.0], [943.0, 24930.0], [931.0, 49569.0], [929.0, 29184.0], [935.0, 25956.0], [933.0, 31188.0], [941.0, 39439.0], [939.0, 39461.0], [937.0, 24969.0], [989.0, 38519.0], [991.0, 25129.0], [987.0, 24634.5], [985.0, 43471.0], [983.0, 25373.0], [981.0, 25608.0], [979.0, 48676.0], [977.0, 38774.0], [975.0, 25450.0], [963.0, 38926.0], [961.0, 10136.0], [967.0, 25588.0], [965.0, 38956.0], [973.0, 48744.0], [971.0, 30475.0], [969.0, 43643.0], [1021.0, 24140.0], [1023.0, 24268.0], [1009.0, 24631.0], [1011.0, 29580.0], [1013.0, 48387.0], [1019.0, 24063.0], [1017.0, 37635.0], [1007.0, 24833.0], [995.0, 43153.0], [993.0, 48339.0], [999.0, 48146.0], [997.0, 48159.0], [1005.0, 24926.0], [1003.0, 9224.0], [1015.0, 24238.0], [1082.0, 14880.0], [1086.0, 27860.0], [1058.0, 865.0], [1062.0, 38538.0], [1066.0, 27935.0], [1078.0, 28596.0], [1074.0, 28274.0], [1054.0, 2710.0], [1026.0, 24125.0], [1030.0, 28801.0], [1034.0, 23999.0], [1038.0, 37139.0], [1050.0, 4738.0], [1046.0, 6763.0], [1070.0, 19882.0], [1146.0, 37855.0], [1150.0, 27753.0], [1122.0, 27698.0], [1126.0, 38125.0], [1130.0, 27687.0], [1142.0, 37316.0], [1138.0, 37331.0], [1118.0, 27743.0], [1090.0, 28553.0], [1094.0, 36404.0], [1098.0, 36595.0], [1102.0, 27929.0], [1114.0, 21001.0], [1110.0, 27427.0], [1106.0, 36309.0], [1134.0, 27641.0], [1210.0, 26555.0], [1214.0, 35035.0], [1186.0, 20826.0], [1190.0, 26965.0], [1194.0, 26960.0], [1206.0, 26576.0], [1202.0, 36584.0], [1182.0, 26630.0], [1158.0, 21261.0], [1162.0, 27374.0], [1178.0, 20617.0], [1174.0, 21227.0], [1170.0, 21246.0], [1198.0, 26951.0], [1274.0, 19126.0], [1278.0, 35503.0], [1250.0, 35990.0], [1254.0, 25938.0], [1258.0, 35789.0], [1270.0, 35559.0], [1266.0, 35740.0], [1246.0, 26372.0], [1218.0, 36391.0], [1222.0, 35103.0], [1226.0, 36329.0], [1230.0, 20451.0], [1242.0, 34823.0], [1238.0, 36217.0], [1262.0, 27227.0], [1338.0, 27477.0], [1342.0, 11093.0], [1314.0, 11312.0], [1318.0, 11300.0], [1322.0, 12298.0], [1334.0, 11098.0], [1330.0, 11119.0], [1310.0, 11321.0], [1282.0, 20113.0], [1286.0, 25812.0], [1290.0, 19689.0], [1294.0, 22272.5], [1306.0, 25751.0], [1302.0, 19056.0], [1298.0, 20080.0], [1326.0, 11278.0], [1402.0, 18295.5], [1406.0, 27508.0], [1378.0, 9574.0], [1382.0, 9438.0], [1386.0, 9213.0], [1398.0, 24666.0], [1394.0, 24680.0], [1374.0, 9590.0], [1346.0, 12075.0], [1354.0, 9081.0], [1358.0, 9041.0], [1370.0, 9269.5], [1362.0, 9034.0], [1390.0, 9187.0], [1462.0, 29892.0], [1470.0, 29789.0], [1442.0, 27396.0], [1466.0, 27115.0], [1458.0, 23758.0], [1410.0, 30234.0], [1414.0, 27498.0], [1418.0, 27492.0], [1422.0, 26156.0], [1434.0, 27427.0], [1430.0, 30181.0], [1426.0, 27483.0], [1450.0, 24447.0], [1526.0, 26163.0], [1530.0, 6920.0], [1534.0, 6917.0], [1506.0, 27709.0], [1510.0, 26989.0], [1522.0, 26195.0], [1502.0, 25920.0], [1474.0, 26882.0], [1478.0, 21601.0], [1482.0, 26692.0], [1486.0, 29345.0], [1498.0, 26080.0], [1490.0, 29642.0], [1518.0, 26201.0], [1514.0, 26212.0], [1594.0, 10024.0], [1598.0, 6568.0], [1570.0, 10103.0], [1574.0, 6673.0], [1578.0, 6286.0], [1590.0, 6609.0], [1586.0, 6243.0], [1566.0, 6310.0], [1538.0, 6903.0], [1542.0, 6529.0], [1546.0, 6525.5], [1550.0, 6512.0], [1562.0, 6321.0], [1558.0, 6859.0], [1554.0, 10307.0], [1582.0, 6625.0], [1658.0, 7046.0], [1662.0, 7038.0], [1634.0, 9368.0], [1638.0, 9558.0], [1642.0, 9171.0], [1654.0, 4707.0], [1650.0, 8881.0], [1630.0, 9528.0], [1602.0, 6460.0], [1606.0, 9865.0], [1610.0, 9832.0], [1614.0, 6309.0], [1626.0, 9898.0], [1622.0, 9619.0], [1618.0, 9704.0], [1646.0, 8935.0], [1722.0, 9659.0], [1726.0, 5951.0], [1698.0, 6553.0], [1706.0, 6452.0], [1702.0, 6508.0], [1718.0, 10599.0], [1714.0, 6266.0], [1694.0, 6595.0], [1666.0, 7036.0], [1670.0, 6909.0], [1674.0, 6888.0], [1678.0, 11277.0], [1690.0, 6694.0], [1686.0, 6761.0], [1682.0, 6809.0], [1710.0, 6320.0], [1786.0, 9979.0], [1778.0, 10096.0], [1790.0, 9962.0], [1762.0, 5553.0], [1766.0, 10390.0], [1770.0, 9974.0], [1782.0, 9990.0], [1742.0, 10017.0], [1738.0, 10028.0], [1734.0, 10031.0], [1758.0, 10392.0], [1754.0, 5555.0], [1750.0, 9919.0], [1746.0, 9987.0], [1774.0, 9663.0], [1854.0, 6162.0], [1830.0, 19314.0], [1834.0, 15933.0], [1838.0, 7944.0], [1850.0, 17379.0], [1846.0, 17422.0], [1842.0, 8337.0], [1822.0, 16610.5], [1794.0, 9947.0], [1798.0, 9520.0], [1802.0, 9895.0], [1806.0, 9407.0], [1818.0, 9200.0], [1814.0, 7906.0], [1810.0, 8822.0], [1918.0, 5085.0], [1890.0, 5914.0], [1894.0, 5855.0], [1898.0, 5810.0], [1902.0, 5798.0], [1914.0, 5265.0], [1910.0, 6205.0], [1906.0, 5776.0], [1858.0, 6158.0], [1866.0, 6143.0], [1870.0, 6136.0], [1886.0, 19850.0], [1882.0, 6108.0], [1878.0, 6127.0], [1874.0, 19904.0], [1982.0, 14908.0], [1954.0, 20268.0], [1958.0, 4777.0], [1962.0, 20167.0], [1966.0, 19751.0], [1978.0, 14921.0], [1974.0, 14927.0], [1970.0, 16949.0], [1922.0, 20516.0], [1926.0, 5060.0], [1930.0, 20492.0], [1934.0, 20478.0], [1950.0, 4174.0], [1946.0, 20322.0], [1942.0, 20342.0], [1938.0, 20405.0], [2038.0, 18831.0], [2034.0, 18930.0], [2018.0, 18981.0], [2026.0, 18979.0], [2030.0, 18934.0], [2046.0, 20107.5], [1986.0, 14895.0], [1990.0, 14879.0], [1994.0, 18834.0], [1998.0, 14843.0], [2014.0, 13221.0], [2010.0, 14543.0], [2006.0, 26078.0], [2002.0, 14752.0], [2164.0, 20048.0], [2156.0, 23403.0], [2124.0, 17317.0], [2116.0, 25759.0], [2140.0, 24786.0], [2172.0, 24776.0], [2148.0, 25269.0], [2052.0, 25485.0], [2060.0, 18779.0], [2068.0, 21287.0], [2076.0, 18638.0], [2108.0, 25876.0], [2100.0, 25569.0], [2092.0, 18121.0], [2084.0, 18170.0], [2180.0, 23198.0], [2196.0, 8674.0], [2204.0, 21744.0], [2212.0, 19796.0], [2548.0, 29869.0], [2556.0, 80.0], [2500.0, 28815.4], [2508.0, 19825.0], [2516.0, 26118.333333333332], [2524.0, 27760.0], [2540.0, 28343.75], [2532.0, 29871.0], [2452.0, 23303.333333333336], [2460.0, 24093.0], [2492.0, 23541.5], [2476.0, 29609.666666666668], [2684.0, 24086.0], [2628.0, 24285.0], [2636.0, 24280.0], [2644.0, 23990.0], [2652.0, 25249.0], [2676.0, 25179.0], [2668.0, 28239.0], [2660.0, 26102.5], [2588.0, 22225.0], [2580.0, 20832.0], [2572.0, 1191.0], [2564.0, 3982.0], [2620.0, 22146.0], [2612.0, 20797.0], [2604.0, 20801.0], [2700.0, 24866.0], [2788.0, 21116.0], [2756.0, 25965.0], [2764.0, 25876.0], [2772.0, 22772.0], [2780.0, 25795.0], [2692.0, 7088.0], [2708.0, 24744.0], [2716.0, 24280.0], [2748.0, 22972.0], [2740.0, 23086.0], [2732.0, 23079.0], [2724.0, 23546.0], [2940.0, 10421.0], [2884.0, 510.5], [2892.0, 501.5], [2908.0, 5691.0], [2836.0, 16772.85], [2844.0, 17529.0], [2876.0, 597.0], [2868.0, 431.0], [2860.0, 20728.0], [2852.0, 20005.5], [2948.0, 3799.0], [2956.0, 10369.0], [2964.0, 4342.0], [2996.0, 13713.666666666666], [2988.0, 19336.666666666668], [2173.0, 17279.0], [2125.0, 17314.0], [2133.0, 21386.0], [2141.0, 23408.0], [2149.0, 24784.0], [2077.0, 21372.0], [2069.0, 21586.0], [2061.0, 18998.0], [2053.0, 19012.0], [2109.0, 25387.0], [2101.0, 25559.0], [2093.0, 18111.0], [2085.0, 20931.0], [2197.0, 8673.0], [2213.0, 26948.0], [2205.0, 21722.0], [2429.0, 23622.666666666668], [2405.0, 20381.0], [2557.0, 79.0], [2501.0, 25411.0], [2509.0, 19802.0], [2517.0, 25923.5], [2525.0, 21175.0], [2445.0, 23185.5], [2453.0, 23888.333333333332], [2461.0, 27765.0], [2493.0, 25408.714285714283], [2485.0, 24090.0], [2469.0, 26729.5], [2677.0, 25179.0], [2637.0, 24004.0], [2645.0, 28379.0], [2653.0, 20428.0], [2685.0, 28204.0], [2669.0, 24114.0], [2661.0, 23862.0], [2589.0, 20593.0], [2581.0, 20615.0], [2573.0, 1188.0], [2565.0, 3980.0], [2621.0, 19491.0], [2613.0, 20743.0], [2605.0, 22499.5], [2709.0, 24820.0], [2757.0, 25930.0], [2765.0, 22825.0], [2773.0, 22769.0], [2781.0, 25785.0], [2701.0, 21588.0], [2717.0, 20917.0], [2749.0, 22963.0], [2741.0, 23083.0], [2733.0, 23154.0], [2725.0, 23384.0], [2901.0, 544.0], [2885.0, 426.0], [2909.0, 497.0], [2933.0, 7411.0], [2917.0, 4406.0], [2845.0, 18342.0], [2861.0, 20705.0], [2949.0, 20744.0], [2997.0, 4682.25], [2957.0, 3797.0], [2965.0, 20715.0], [2989.0, 17792.833333333332], [2981.0, 14965.42857142857], [1083.0, 28233.0], [1087.0, 28190.0], [1059.0, 862.0], [1063.0, 27938.0], [1067.0, 36689.0], [1079.0, 22106.0], [1075.0, 37910.0], [1055.0, 2709.0], [1027.0, 23716.0], [1031.0, 24007.0], [1035.0, 8210.0], [1039.0, 28731.0], [1051.0, 4822.0], [1047.0, 6847.0], [1043.0, 26593.5], [1071.0, 38173.0], [1139.0, 20692.0], [1151.0, 27747.0], [1123.0, 28052.0], [1127.0, 20948.0], [1147.0, 35817.0], [1103.0, 36320.0], [1099.0, 28160.0], [1091.0, 28217.0], [1115.0, 28081.0], [1111.0, 28106.0], [1107.0, 27898.0], [1135.0, 21300.0], [1203.0, 35337.0], [1215.0, 20673.0], [1187.0, 20229.0], [1211.0, 26916.0], [1183.0, 26621.0], [1155.0, 20664.0], [1159.0, 20665.0], [1163.0, 20663.0], [1179.0, 35656.0], [1175.0, 27936.0], [1171.0, 27012.0], [1199.0, 36588.0], [1191.0, 27301.0], [1275.0, 19722.0], [1279.0, 34256.0], [1251.0, 34742.0], [1255.0, 26269.0], [1271.0, 19736.0], [1231.0, 26933.0], [1227.0, 19947.0], [1223.0, 34893.0], [1219.0, 27086.0], [1247.0, 36033.0], [1243.0, 26766.0], [1263.0, 35741.0], [1259.0, 26485.0], [1331.0, 11710.0], [1343.0, 11689.0], [1315.0, 12319.0], [1319.0, 12305.0], [1323.0, 12296.0], [1335.0, 12103.0], [1295.0, 34214.0], [1291.0, 20093.0], [1287.0, 19099.0], [1283.0, 19105.0], [1311.0, 11319.0], [1307.0, 25620.0], [1303.0, 19650.0], [1299.0, 19071.0], [1327.0, 12262.0], [1399.0, 9165.0], [1395.0, 9174.0], [1407.0, 27357.0], [1379.0, 25061.0], [1383.0, 9432.0], [1387.0, 9196.0], [1403.0, 27512.0], [1359.0, 9038.0], [1355.0, 9075.0], [1351.0, 19746.5], [1347.0, 27450.0], [1375.0, 9589.0], [1371.0, 9602.0], [1367.0, 9621.0], [1363.0, 9652.0], [1391.0, 22449.0], [1459.0, 22260.0], [1471.0, 8609.0], [1467.0, 22109.0], [1463.0, 27135.0], [1439.0, 24451.0], [1411.0, 30233.0], [1415.0, 24010.0], [1419.0, 30218.0], [1423.0, 9041.0], [1435.0, 27399.0], [1431.0, 30176.0], [1427.0, 30211.0], [1455.0, 21922.25], [1451.0, 22409.0], [1523.0, 26194.0], [1531.0, 6549.0], [1507.0, 27116.0], [1511.0, 27568.0], [1515.0, 26208.0], [1527.0, 6555.0], [1487.0, 29257.0], [1483.0, 23201.0], [1479.0, 30026.0], [1475.0, 26852.0], [1503.0, 24432.0], [1499.0, 26020.0], [1495.0, 27655.0], [1491.0, 29638.0], [1519.0, 26201.0], [1595.0, 6597.0], [1599.0, 9978.0], [1571.0, 6307.0], [1575.0, 6304.0], [1579.0, 9534.0], [1591.0, 6610.0], [1587.0, 9496.0], [1567.0, 6311.0], [1539.0, 26138.0], [1547.0, 6525.0], [1543.0, 6897.0], [1551.0, 6511.0], [1563.0, 6320.0], [1559.0, 6472.0], [1555.0, 6510.0], [1583.0, 10050.0], [1651.0, 9181.0], [1663.0, 7037.0], [1639.0, 9222.0], [1655.0, 7787.0], [1615.0, 6292.0], [1611.0, 9830.0], [1607.0, 6052.0], [1603.0, 9885.0], [1631.0, 6099.0], [1627.0, 9593.0], [1623.0, 5820.0], [1619.0, 6277.0], [1643.0, 5685.0], [1723.0, 6104.0], [1727.0, 5584.0], [1699.0, 6576.0], [1703.0, 6479.0], [1707.0, 10880.0], [1719.0, 10527.0], [1715.0, 6231.0], [1695.0, 11034.0], [1667.0, 7006.0], [1671.0, 6883.0], [1675.0, 6880.0], [1679.0, 6847.0], [1691.0, 6650.0], [1687.0, 11111.0], [1683.0, 6782.0], [1711.0, 6308.0], [1779.0, 9660.0], [1787.0, 9500.0], [1763.0, 9982.0], [1767.0, 10390.0], [1771.0, 9794.0], [1783.0, 25220.0], [1739.0, 9959.0], [1735.0, 10439.0], [1731.0, 8511.666666666666], [1759.0, 10392.0], [1755.0, 10393.0], [1751.0, 5531.0], [1775.0, 9725.0], [1851.0, 17378.0], [1855.0, 19932.0], [1827.0, 8957.5], [1831.0, 19311.0], [1835.0, 19081.0], [1839.0, 7874.0], [1847.0, 17421.0], [1843.0, 7869.0], [1823.0, 9199.0], [1795.0, 25170.0], [1799.0, 9923.0], [1803.0, 20533.0], [1807.0, 9465.0], [1815.0, 9201.0], [1811.0, 8887.0], [1915.0, 5089.0], [1919.0, 5083.0], [1891.0, 5899.0], [1895.0, 5832.0], [1899.0, 5807.0], [1903.0, 5797.0], [1911.0, 5327.0], [1907.0, 19544.0], [1887.0, 6076.0], [1859.0, 6157.0], [1863.0, 12236.5], [1867.0, 6140.0], [1883.0, 19875.0], [1879.0, 6126.0], [1875.0, 19901.0], [1979.0, 31693.0], [1983.0, 26277.0], [1955.0, 20263.0], [1959.0, 33021.0], [1963.0, 20157.0], [1967.0, 14223.0], [1975.0, 32865.0], [1951.0, 4860.0], [1923.0, 20515.0], [1927.0, 20497.0], [1931.0, 5051.0], [1935.0, 20468.0], [1947.0, 4192.0], [1943.0, 20341.0], [1939.0, 4958.0], [2039.0, 18828.0], [2043.0, 18820.0], [2047.0, 18799.0], [2023.0, 18980.0], [2027.0, 18978.0], [2031.0, 18933.0], [2035.0, 18863.0], [2015.0, 13221.0], [1987.0, 14891.0], [1991.0, 32819.0], [1995.0, 14867.0], [1999.0, 14842.0], [2011.0, 26459.0], [2007.0, 14701.0], [2003.0, 14727.0], [2150.0, 19673.0], [2174.0, 20045.0], [2126.0, 17314.0], [2142.0, 20055.0], [2166.0, 19669.0], [2110.0, 20276.0], [2054.0, 18789.0], [2062.0, 18998.0], [2070.0, 12149.0], [2078.0, 18582.0], [2102.0, 20440.0], [2094.0, 20499.0], [2086.0, 30653.0], [2182.0, 20235.5], [2238.0, 19307.4], [2190.0, 23229.333333333332], [2198.0, 7664.0], [2206.0, 20207.0], [2230.0, 22548.0], [2214.0, 30302.0], [2406.0, 19860.0], [2550.0, 29485.5], [2502.0, 27242.333333333332], [2510.0, 24531.0], [2518.0, 29873.0], [2526.0, 24086.0], [2558.0, 78.0], [2542.0, 29870.0], [2534.0, 21698.5], [2494.0, 26552.25], [2438.0, 21975.0], [2454.0, 26515.0], [2486.0, 24203.0], [2478.0, 25867.5], [2470.0, 27206.5], [2686.0, 21883.0], [2662.0, 25124.0], [2670.0, 24113.0], [2638.0, 23999.0], [2678.0, 21901.0], [2630.0, 22248.5], [2646.0, 19413.0], [2654.0, 25244.0], [2582.0, 20827.0], [2574.0, 182.0], [2566.0, 2971.0], [2622.0, 18109.0], [2614.0, 20740.0], [2606.0, 21408.5], [2598.0, 20615.0], [2710.0, 24734.0], [2798.0, 1285.3333333333333], [2758.0, 22883.0], [2766.0, 21248.0], [2774.0, 21189.0], [2702.0, 24862.0], [2718.0, 24040.0], [2750.0, 23020.0], [2734.0, 23147.0], [2726.0, 20104.0], [2782.0, 32182.0], [2918.0, 4405.0], [2886.0, 587.0], [2894.0, 566.0], [2910.0, 495.0], [2934.0, 4399.0], [2838.0, 17529.0], [2846.0, 19156.0], [2878.0, 513.5], [2862.0, 20458.0], [2958.0, 7083.5], [2966.0, 16916.0], [2974.0, 13123.333333333332], [2998.0, 5123.64], [2990.0, 18508.166666666664], [2982.0, 16909.0], [2159.0, 24780.0], [2175.0, 25260.0], [2119.0, 24517.0], [2127.0, 17313.0], [2143.0, 17287.0], [2151.0, 17284.0], [2071.0, 12147.0], [2063.0, 21761.0], [2055.0, 19010.0], [2111.0, 23793.0], [2103.0, 24143.0], [2095.0, 20864.0], [2087.0, 20923.0], [2191.0, 23358.0], [2199.0, 7663.0], [2231.0, 25728.0], [2215.0, 24929.0], [2207.0, 20367.0], [2431.0, 19810.0], [2423.0, 25933.5], [2415.0, 27234.666666666668], [2543.0, 26998.0], [2559.0, 78.0], [2511.0, 22167.0], [2551.0, 99.0], [2439.0, 24538.0], [2447.0, 23047.0], [2463.0, 24806.4], [2479.0, 25359.428571428576], [2679.0, 24098.0], [2631.0, 20458.0], [2639.0, 24272.0], [2647.0, 22057.0], [2655.0, 24200.0], [2671.0, 24112.0], [2663.0, 24127.0], [2583.0, 20823.0], [2575.0, 181.0], [2567.0, 2969.0], [2623.0, 25291.0], [2615.0, 20526.0], [2607.0, 24411.0], [2599.0, 20803.0], [2711.0, 24702.0], [2759.0, 25927.0], [2767.0, 25863.0], [2791.0, 1287.0], [2751.0, 18137.0], [2695.0, 7087.285714285715], [2703.0, 24771.0], [2719.0, 23022.0], [2743.0, 23081.0], [2735.0, 23143.0], [2727.0, 23292.0], [2783.0, 22735.0], [2943.0, 6404.0], [2887.0, 421.0], [2927.0, 5104.166666666667], [2879.0, 429.0], [2847.0, 16511.0], [2863.0, 25072.0], [2855.0, 19909.666666666668], [2959.0, 3862.0], [2999.0, 5493.0], [2991.0, 18500.0], [1.0, 42489.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2589.6851766865584, 24630.6011932078]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9082.7, "minX": 1.6830333E12, "maxY": 26485.983333333334, "series": [{"data": [[1.6830336E12, 13856.383333333333], [1.6830333E12, 11329.516666666666], [1.68303348E12, 25495.133333333335], [1.68303336E12, 21170.583333333332], [1.68303354E12, 22211.566666666666], [1.68303342E12, 26485.983333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6830336E12, 11039.233333333334], [1.6830333E12, 9082.7], [1.68303348E12, 18975.0], [1.68303336E12, 16731.733333333334], [1.68303354E12, 16967.866666666665], [1.68303342E12, 18882.233333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830336E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 16314.103992571972, "minX": 1.6830333E12, "maxY": 36140.58899923608, "series": [{"data": [[1.6830336E12, 36140.58899923608], [1.6830333E12, 16314.103992571972], [1.68303348E12, 27600.005777777747], [1.68303336E12, 28554.293346774186], [1.68303354E12, 18053.53031809145], [1.68303342E12, 21386.056120194433]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830336E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 16314.058495821731, "minX": 1.6830333E12, "maxY": 36140.58365164248, "series": [{"data": [[1.6830336E12, 36140.58365164248], [1.6830333E12, 16314.058495821731], [1.68303348E12, 27600.000888888866], [1.68303336E12, 28554.243447580648], [1.68303354E12, 18053.502982107333], [1.68303342E12, 20286.617764030034]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830336E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 4.374187558031577, "minX": 1.6830333E12, "maxY": 7813.45514803357, "series": [{"data": [[1.6830336E12, 71.52024446142093], [1.6830333E12, 4.374187558031577], [1.68303348E12, 7111.436888888887], [1.68303336E12, 1957.7056451612907], [1.68303354E12, 385.4786282306166], [1.68303342E12, 7813.45514803357]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830336E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 68.0, "minX": 1.6830333E12, "maxY": 161291.0, "series": [{"data": [[1.6830336E12, 104917.0], [1.6830333E12, 34685.0], [1.68303348E12, 161291.0], [1.68303336E12, 72661.0], [1.68303354E12, 46759.0], [1.68303342E12, 102638.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6830336E12, 52045.0], [1.6830333E12, 26008.0], [1.68303348E12, 34082.9], [1.68303336E12, 40430.5], [1.68303354E12, 29479.0], [1.68303342E12, 62205.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6830336E12, 73101.6], [1.6830333E12, 31919.860000000015], [1.68303348E12, 159726.49], [1.68303336E12, 51159.000000000015], [1.68303354E12, 32818.87], [1.68303342E12, 90048.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6830336E12, 63631.5], [1.6830333E12, 27951.1], [1.68303348E12, 98593.44999999991], [1.68303336E12, 43840.0], [1.68303354E12, 31041.94999999999], [1.68303342E12, 66022.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6830336E12, 304.0], [1.6830333E12, 87.0], [1.68303348E12, 68.0], [1.68303336E12, 79.0], [1.68303354E12, 78.0], [1.68303342E12, 77.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6830336E12, 35383.0], [1.6830333E12, 17829.0], [1.68303348E12, 24012.5], [1.68303336E12, 30394.5], [1.68303354E12, 19853.0], [1.68303342E12, 15698.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830336E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 202.0, "minX": 1.0, "maxY": 103673.0, "series": [{"data": [[2.0, 7306.5], [3.0, 15221.0], [4.0, 8103.0], [5.0, 25198.0], [6.0, 11889.5], [7.0, 22554.5], [8.0, 18625.0], [9.0, 18878.0], [10.0, 27127.5], [11.0, 16901.0], [12.0, 22731.0], [13.0, 23852.0], [14.0, 21373.5], [15.0, 21304.5], [16.0, 18568.0], [17.0, 24682.0], [18.0, 36215.5], [19.0, 23230.0], [20.0, 27307.5], [21.0, 25288.5], [22.0, 23520.5], [23.0, 30972.0], [26.0, 15163.0], [27.0, 30653.0], [28.0, 2516.0], [29.0, 25452.5], [30.0, 24826.0], [31.0, 66022.0], [32.0, 10551.5], [33.0, 34436.0], [34.0, 26378.0], [35.0, 39915.0], [37.0, 15197.5], [36.0, 4541.0], [38.0, 23154.0], [39.0, 9955.5], [41.0, 22310.5], [40.0, 10100.5], [43.0, 30653.0], [42.0, 32502.0], [44.0, 12099.0], [45.0, 29713.0], [47.0, 11242.5], [46.0, 25075.5], [49.0, 36219.0], [48.0, 6900.0], [50.0, 10283.5], [51.0, 20263.0], [52.0, 32152.0], [53.0, 12385.0], [55.0, 21129.5], [54.0, 28586.0], [56.0, 14410.0], [57.0, 20740.0], [58.0, 25169.5], [61.0, 25327.0], [62.0, 22336.0], [63.0, 35735.0], [67.0, 19661.0], [66.0, 21121.0], [65.0, 24934.0], [64.0, 18930.0], [71.0, 19879.0], [70.0, 21610.0], [68.0, 9983.5], [75.0, 39112.0], [72.0, 2170.0], [73.0, 27342.0], [74.0, 31076.5], [76.0, 26276.5], [77.0, 26429.0], [78.0, 26382.0], [80.0, 17475.5], [82.0, 202.0], [81.0, 16947.5], [85.0, 41956.5], [87.0, 31724.0], [84.0, 24100.0], [88.0, 19525.0], [101.0, 9482.5], [100.0, 27125.0], [104.0, 14717.5], [111.0, 26011.0], [110.0, 3750.0], [114.0, 36923.5], [119.0, 20511.0], [128.0, 19156.0], [136.0, 36220.5], [142.0, 30610.0], [152.0, 16899.0], [164.0, 26431.5], [173.0, 40993.0], [179.0, 31737.0], [186.0, 32957.0], [184.0, 16064.0], [193.0, 29376.0], [208.0, 24406.0], [239.0, 23607.0], [236.0, 5382.5], [245.0, 12482.0], [334.0, 25691.0], [1.0, 25526.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[17.0, 103673.0], [7.0, 103648.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 334.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 66022.0, "series": [{"data": [[2.0, 7306.5], [3.0, 15221.0], [4.0, 8103.0], [5.0, 25197.0], [6.0, 11889.5], [7.0, 22554.5], [8.0, 18625.0], [9.0, 18878.0], [10.0, 27127.5], [11.0, 16901.0], [12.0, 22731.0], [13.0, 23852.0], [14.0, 21373.5], [15.0, 21304.5], [16.0, 18568.0], [17.0, 24682.0], [18.0, 36215.5], [19.0, 23229.5], [20.0, 27307.5], [21.0, 25288.5], [22.0, 23520.0], [23.0, 30972.0], [26.0, 15163.0], [27.0, 30652.0], [28.0, 2516.0], [29.0, 25452.5], [30.0, 24826.0], [31.0, 66022.0], [32.0, 10551.5], [33.0, 34436.0], [34.0, 26378.0], [35.0, 39915.0], [37.0, 15197.5], [36.0, 4541.0], [38.0, 23154.0], [39.0, 9955.5], [41.0, 22310.5], [40.0, 10100.5], [43.0, 30653.0], [42.0, 32502.0], [44.0, 12099.0], [45.0, 29713.0], [47.0, 11242.5], [46.0, 25075.5], [49.0, 36219.0], [48.0, 6900.0], [50.0, 10283.5], [51.0, 20263.0], [52.0, 32152.0], [53.0, 12385.0], [55.0, 21129.5], [54.0, 28586.0], [56.0, 14410.0], [57.0, 20740.0], [58.0, 25169.5], [61.0, 25327.0], [62.0, 22336.0], [63.0, 35735.0], [67.0, 19660.0], [66.0, 21121.0], [65.0, 24934.0], [64.0, 18930.0], [71.0, 19879.0], [70.0, 21610.0], [68.0, 9983.5], [75.0, 39112.0], [72.0, 2170.0], [73.0, 27342.0], [74.0, 31076.5], [76.0, 26276.5], [77.0, 26429.0], [78.0, 26382.0], [80.0, 17475.5], [82.0, 202.0], [81.0, 16947.5], [85.0, 41956.5], [87.0, 31724.0], [84.0, 24100.0], [88.0, 19525.0], [101.0, 9482.5], [100.0, 27125.0], [104.0, 14717.5], [111.0, 26011.0], [110.0, 3750.0], [114.0, 36923.5], [119.0, 20511.0], [128.0, 19156.0], [136.0, 36220.5], [142.0, 30610.0], [152.0, 16899.0], [164.0, 26431.5], [173.0, 40993.0], [179.0, 31737.0], [186.0, 32957.0], [184.0, 16064.0], [193.0, 29376.0], [208.0, 24406.0], [239.0, 23607.0], [236.0, 5382.0], [245.0, 12482.0], [334.0, 25691.0], [1.0, 25526.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[17.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 334.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.183333333333334, "minX": 1.6830333E12, "maxY": 37.8, "series": [{"data": [[1.6830336E12, 5.183333333333334], [1.6830333E12, 35.4], [1.68303348E12, 36.0], [1.68303336E12, 30.6], [1.68303354E12, 37.8], [1.68303342E12, 36.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830336E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.6830333E12, "maxY": 37.5, "series": [{"data": [[1.6830336E12, 21.816666666666666], [1.6830333E12, 17.95], [1.68303348E12, 37.5], [1.68303336E12, 33.06666666666667], [1.68303354E12, 33.53333333333333], [1.68303342E12, 37.31666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68303342E12, 0.4]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830336E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.6830333E12, "maxY": 37.5, "series": [{"data": [[1.6830336E12, 21.816666666666666], [1.6830333E12, 17.95], [1.68303348E12, 37.5], [1.68303336E12, 33.06666666666667], [1.68303354E12, 33.53333333333333], [1.68303342E12, 37.31666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68303342E12, 0.4]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830336E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.6830333E12, "maxY": 37.5, "series": [{"data": [[1.6830336E12, 21.816666666666666], [1.6830333E12, 17.95], [1.68303348E12, 37.5], [1.68303336E12, 33.06666666666667], [1.68303354E12, 33.53333333333333], [1.68303342E12, 37.31666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68303342E12, 0.4]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830336E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

