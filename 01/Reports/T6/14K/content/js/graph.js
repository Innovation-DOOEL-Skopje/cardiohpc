/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1016.0, "minX": 0.0, "maxY": 40616.0, "series": [{"data": [[0.0, 1016.0], [0.1, 1235.0], [0.2, 1777.0], [0.3, 1939.0], [0.4, 2036.0], [0.5, 2116.0], [0.6, 2159.0], [0.7, 2211.0], [0.8, 2215.0], [0.9, 2217.0], [1.0, 2256.0], [1.1, 2417.0], [1.2, 2476.0], [1.3, 2570.0], [1.4, 2573.0], [1.5, 2594.0], [1.6, 2615.0], [1.7, 2624.0], [1.8, 2645.0], [1.9, 2728.0], [2.0, 2744.0], [2.1, 2801.0], [2.2, 2835.0], [2.3, 2859.0], [2.4, 2957.0], [2.5, 3023.0], [2.6, 3041.0], [2.7, 3116.0], [2.8, 3252.0], [2.9, 3260.0], [3.0, 3261.0], [3.1, 3288.0], [3.2, 3376.0], [3.3, 3572.0], [3.4, 3665.0], [3.5, 3683.0], [3.6, 3742.0], [3.7, 3779.0], [3.8, 3792.0], [3.9, 3825.0], [4.0, 3883.0], [4.1, 3905.0], [4.2, 3927.0], [4.3, 3946.0], [4.4, 3976.0], [4.5, 4063.0], [4.6, 4080.0], [4.7, 4122.0], [4.8, 4129.0], [4.9, 4139.0], [5.0, 4153.0], [5.1, 4165.0], [5.2, 4195.0], [5.3, 4214.0], [5.4, 4228.0], [5.5, 4254.0], [5.6, 4401.0], [5.7, 4490.0], [5.8, 4609.0], [5.9, 4645.0], [6.0, 4677.0], [6.1, 4710.0], [6.2, 4726.0], [6.3, 4745.0], [6.4, 4772.0], [6.5, 4821.0], [6.6, 4881.0], [6.7, 4927.0], [6.8, 4950.0], [6.9, 4995.0], [7.0, 5028.0], [7.1, 5041.0], [7.2, 5055.0], [7.3, 5070.0], [7.4, 5078.0], [7.5, 5090.0], [7.6, 5099.0], [7.7, 5105.0], [7.8, 5108.0], [7.9, 5116.0], [8.0, 5131.0], [8.1, 5140.0], [8.2, 5155.0], [8.3, 5166.0], [8.4, 5173.0], [8.5, 5184.0], [8.6, 5194.0], [8.7, 5207.0], [8.8, 5223.0], [8.9, 5236.0], [9.0, 5257.0], [9.1, 5272.0], [9.2, 5286.0], [9.3, 5306.0], [9.4, 5309.0], [9.5, 5324.0], [9.6, 5335.0], [9.7, 5355.0], [9.8, 5372.0], [9.9, 5396.0], [10.0, 5405.0], [10.1, 5415.0], [10.2, 5427.0], [10.3, 5443.0], [10.4, 5451.0], [10.5, 5458.0], [10.6, 5459.0], [10.7, 5465.0], [10.8, 5472.0], [10.9, 5484.0], [11.0, 5494.0], [11.1, 5503.0], [11.2, 5517.0], [11.3, 5526.0], [11.4, 5534.0], [11.5, 5544.0], [11.6, 5551.0], [11.7, 5564.0], [11.8, 5578.0], [11.9, 5586.0], [12.0, 5601.0], [12.1, 5610.0], [12.2, 5624.0], [12.3, 5645.0], [12.4, 5674.0], [12.5, 5684.0], [12.6, 5700.0], [12.7, 5715.0], [12.8, 5730.0], [12.9, 5746.0], [13.0, 5759.0], [13.1, 5769.0], [13.2, 5785.0], [13.3, 5802.0], [13.4, 5810.0], [13.5, 5818.0], [13.6, 5827.0], [13.7, 5841.0], [13.8, 5857.0], [13.9, 5873.0], [14.0, 5882.0], [14.1, 5899.0], [14.2, 5921.0], [14.3, 5938.0], [14.4, 5946.0], [14.5, 5958.0], [14.6, 5985.0], [14.7, 6005.0], [14.8, 6020.0], [14.9, 6049.0], [15.0, 6076.0], [15.1, 6087.0], [15.2, 6100.0], [15.3, 6112.0], [15.4, 6119.0], [15.5, 6132.0], [15.6, 6138.0], [15.7, 6151.0], [15.8, 6165.0], [15.9, 6189.0], [16.0, 6210.0], [16.1, 6212.0], [16.2, 6226.0], [16.3, 6249.0], [16.4, 6257.0], [16.5, 6262.0], [16.6, 6268.0], [16.7, 6279.0], [16.8, 6292.0], [16.9, 6295.0], [17.0, 6307.0], [17.1, 6315.0], [17.2, 6326.0], [17.3, 6337.0], [17.4, 6338.0], [17.5, 6342.0], [17.6, 6357.0], [17.7, 6373.0], [17.8, 6392.0], [17.9, 6410.0], [18.0, 6418.0], [18.1, 6434.0], [18.2, 6459.0], [18.3, 6481.0], [18.4, 6499.0], [18.5, 6514.0], [18.6, 6528.0], [18.7, 6540.0], [18.8, 6550.0], [18.9, 6564.0], [19.0, 6576.0], [19.1, 6585.0], [19.2, 6590.0], [19.3, 6601.0], [19.4, 6611.0], [19.5, 6618.0], [19.6, 6632.0], [19.7, 6649.0], [19.8, 6660.0], [19.9, 6675.0], [20.0, 6682.0], [20.1, 6697.0], [20.2, 6707.0], [20.3, 6718.0], [20.4, 6744.0], [20.5, 6753.0], [20.6, 6761.0], [20.7, 6770.0], [20.8, 6779.0], [20.9, 6788.0], [21.0, 6793.0], [21.1, 6798.0], [21.2, 6812.0], [21.3, 6829.0], [21.4, 6860.0], [21.5, 6869.0], [21.6, 6889.0], [21.7, 6898.0], [21.8, 6914.0], [21.9, 6932.0], [22.0, 6945.0], [22.1, 6965.0], [22.2, 6990.0], [22.3, 7004.0], [22.4, 7017.0], [22.5, 7034.0], [22.6, 7047.0], [22.7, 7064.0], [22.8, 7077.0], [22.9, 7096.0], [23.0, 7103.0], [23.1, 7105.0], [23.2, 7121.0], [23.3, 7128.0], [23.4, 7137.0], [23.5, 7142.0], [23.6, 7152.0], [23.7, 7167.0], [23.8, 7178.0], [23.9, 7198.0], [24.0, 7213.0], [24.1, 7221.0], [24.2, 7233.0], [24.3, 7234.0], [24.4, 7236.0], [24.5, 7239.0], [24.6, 7242.0], [24.7, 7250.0], [24.8, 7260.0], [24.9, 7268.0], [25.0, 7271.0], [25.1, 7280.0], [25.2, 7283.0], [25.3, 7289.0], [25.4, 7297.0], [25.5, 7302.0], [25.6, 7307.0], [25.7, 7318.0], [25.8, 7324.0], [25.9, 7331.0], [26.0, 7342.0], [26.1, 7350.0], [26.2, 7363.0], [26.3, 7379.0], [26.4, 7399.0], [26.5, 7418.0], [26.6, 7429.0], [26.7, 7448.0], [26.8, 7461.0], [26.9, 7479.0], [27.0, 7491.0], [27.1, 7496.0], [27.2, 7501.0], [27.3, 7514.0], [27.4, 7534.0], [27.5, 7542.0], [27.6, 7566.0], [27.7, 7572.0], [27.8, 7588.0], [27.9, 7599.0], [28.0, 7609.0], [28.1, 7618.0], [28.2, 7633.0], [28.3, 7647.0], [28.4, 7660.0], [28.5, 7676.0], [28.6, 7687.0], [28.7, 7697.0], [28.8, 7703.0], [28.9, 7717.0], [29.0, 7723.0], [29.1, 7737.0], [29.2, 7758.0], [29.3, 7769.0], [29.4, 7788.0], [29.5, 7797.0], [29.6, 7804.0], [29.7, 7817.0], [29.8, 7834.0], [29.9, 7847.0], [30.0, 7861.0], [30.1, 7867.0], [30.2, 7882.0], [30.3, 7896.0], [30.4, 7905.0], [30.5, 7915.0], [30.6, 7925.0], [30.7, 7931.0], [30.8, 7947.0], [30.9, 7958.0], [31.0, 7969.0], [31.1, 7991.0], [31.2, 8003.0], [31.3, 8015.0], [31.4, 8026.0], [31.5, 8042.0], [31.6, 8061.0], [31.7, 8080.0], [31.8, 8088.0], [31.9, 8103.0], [32.0, 8107.0], [32.1, 8111.0], [32.2, 8126.0], [32.3, 8138.0], [32.4, 8143.0], [32.5, 8147.0], [32.6, 8152.0], [32.7, 8169.0], [32.8, 8178.0], [32.9, 8188.0], [33.0, 8195.0], [33.1, 8215.0], [33.2, 8234.0], [33.3, 8245.0], [33.4, 8261.0], [33.5, 8278.0], [33.6, 8289.0], [33.7, 8291.0], [33.8, 8299.0], [33.9, 8302.0], [34.0, 8318.0], [34.1, 8331.0], [34.2, 8338.0], [34.3, 8353.0], [34.4, 8364.0], [34.5, 8371.0], [34.6, 8395.0], [34.7, 8405.0], [34.8, 8442.0], [34.9, 8461.0], [35.0, 8482.0], [35.1, 8501.0], [35.2, 8526.0], [35.3, 8545.0], [35.4, 8557.0], [35.5, 8575.0], [35.6, 8616.0], [35.7, 8627.0], [35.8, 8636.0], [35.9, 8653.0], [36.0, 8667.0], [36.1, 8674.0], [36.2, 8699.0], [36.3, 8707.0], [36.4, 8730.0], [36.5, 8740.0], [36.6, 8753.0], [36.7, 8769.0], [36.8, 8783.0], [36.9, 8792.0], [37.0, 8808.0], [37.1, 8814.0], [37.2, 8815.0], [37.3, 8823.0], [37.4, 8837.0], [37.5, 8844.0], [37.6, 8852.0], [37.7, 8867.0], [37.8, 8871.0], [37.9, 8888.0], [38.0, 8915.0], [38.1, 8930.0], [38.2, 8933.0], [38.3, 8947.0], [38.4, 8959.0], [38.5, 8972.0], [38.6, 8979.0], [38.7, 9000.0], [38.8, 9027.0], [38.9, 9063.0], [39.0, 9090.0], [39.1, 9111.0], [39.2, 9125.0], [39.3, 9142.0], [39.4, 9163.0], [39.5, 9176.0], [39.6, 9197.0], [39.7, 9215.0], [39.8, 9237.0], [39.9, 9254.0], [40.0, 9266.0], [40.1, 9277.0], [40.2, 9295.0], [40.3, 9311.0], [40.4, 9322.0], [40.5, 9340.0], [40.6, 9347.0], [40.7, 9349.0], [40.8, 9357.0], [40.9, 9370.0], [41.0, 9377.0], [41.1, 9384.0], [41.2, 9393.0], [41.3, 9401.0], [41.4, 9407.0], [41.5, 9417.0], [41.6, 9424.0], [41.7, 9434.0], [41.8, 9441.0], [41.9, 9457.0], [42.0, 9471.0], [42.1, 9483.0], [42.2, 9488.0], [42.3, 9490.0], [42.4, 9502.0], [42.5, 9521.0], [42.6, 9539.0], [42.7, 9543.0], [42.8, 9550.0], [42.9, 9558.0], [43.0, 9571.0], [43.1, 9584.0], [43.2, 9603.0], [43.3, 9615.0], [43.4, 9631.0], [43.5, 9639.0], [43.6, 9648.0], [43.7, 9666.0], [43.8, 9694.0], [43.9, 9700.0], [44.0, 9720.0], [44.1, 9738.0], [44.2, 9749.0], [44.3, 9761.0], [44.4, 9781.0], [44.5, 9794.0], [44.6, 9799.0], [44.7, 9815.0], [44.8, 9828.0], [44.9, 9851.0], [45.0, 9870.0], [45.1, 9874.0], [45.2, 9897.0], [45.3, 9902.0], [45.4, 9910.0], [45.5, 9920.0], [45.6, 9929.0], [45.7, 9945.0], [45.8, 9964.0], [45.9, 9973.0], [46.0, 9995.0], [46.1, 10019.0], [46.2, 10035.0], [46.3, 10053.0], [46.4, 10064.0], [46.5, 10103.0], [46.6, 10123.0], [46.7, 10137.0], [46.8, 10156.0], [46.9, 10162.0], [47.0, 10169.0], [47.1, 10180.0], [47.2, 10189.0], [47.3, 10204.0], [47.4, 10214.0], [47.5, 10224.0], [47.6, 10226.0], [47.7, 10240.0], [47.8, 10246.0], [47.9, 10259.0], [48.0, 10273.0], [48.1, 10291.0], [48.2, 10316.0], [48.3, 10328.0], [48.4, 10351.0], [48.5, 10366.0], [48.6, 10378.0], [48.7, 10391.0], [48.8, 10396.0], [48.9, 10422.0], [49.0, 10437.0], [49.1, 10468.0], [49.2, 10489.0], [49.3, 10504.0], [49.4, 10515.0], [49.5, 10531.0], [49.6, 10556.0], [49.7, 10580.0], [49.8, 10594.0], [49.9, 10614.0], [50.0, 10637.0], [50.1, 10658.0], [50.2, 10684.0], [50.3, 10693.0], [50.4, 10700.0], [50.5, 10706.0], [50.6, 10710.0], [50.7, 10720.0], [50.8, 10724.0], [50.9, 10740.0], [51.0, 10749.0], [51.1, 10768.0], [51.2, 10776.0], [51.3, 10795.0], [51.4, 10819.0], [51.5, 10838.0], [51.6, 10852.0], [51.7, 10877.0], [51.8, 10912.0], [51.9, 10915.0], [52.0, 10928.0], [52.1, 10949.0], [52.2, 10963.0], [52.3, 10991.0], [52.4, 11002.0], [52.5, 11028.0], [52.6, 11054.0], [52.7, 11073.0], [52.8, 11098.0], [52.9, 11112.0], [53.0, 11130.0], [53.1, 11148.0], [53.2, 11175.0], [53.3, 11193.0], [53.4, 11214.0], [53.5, 11236.0], [53.6, 11263.0], [53.7, 11272.0], [53.8, 11294.0], [53.9, 11312.0], [54.0, 11329.0], [54.1, 11346.0], [54.2, 11359.0], [54.3, 11381.0], [54.4, 11407.0], [54.5, 11409.0], [54.6, 11412.0], [54.7, 11429.0], [54.8, 11453.0], [54.9, 11481.0], [55.0, 11520.0], [55.1, 11535.0], [55.2, 11553.0], [55.3, 11566.0], [55.4, 11573.0], [55.5, 11597.0], [55.6, 11616.0], [55.7, 11623.0], [55.8, 11635.0], [55.9, 11657.0], [56.0, 11687.0], [56.1, 11720.0], [56.2, 11750.0], [56.3, 11767.0], [56.4, 11789.0], [56.5, 11829.0], [56.6, 11844.0], [56.7, 11874.0], [56.8, 11899.0], [56.9, 11911.0], [57.0, 11933.0], [57.1, 11962.0], [57.2, 11996.0], [57.3, 12035.0], [57.4, 12086.0], [57.5, 12089.0], [57.6, 12094.0], [57.7, 12108.0], [57.8, 12114.0], [57.9, 12118.0], [58.0, 12121.0], [58.1, 12136.0], [58.2, 12150.0], [58.3, 12164.0], [58.4, 12179.0], [58.5, 12211.0], [58.6, 12230.0], [58.7, 12249.0], [58.8, 12258.0], [58.9, 12270.0], [59.0, 12282.0], [59.1, 12287.0], [59.2, 12291.0], [59.3, 12303.0], [59.4, 12311.0], [59.5, 12331.0], [59.6, 12343.0], [59.7, 12361.0], [59.8, 12376.0], [59.9, 12406.0], [60.0, 12431.0], [60.1, 12445.0], [60.2, 12456.0], [60.3, 12463.0], [60.4, 12480.0], [60.5, 12502.0], [60.6, 12515.0], [60.7, 12524.0], [60.8, 12526.0], [60.9, 12536.0], [61.0, 12556.0], [61.1, 12571.0], [61.2, 12587.0], [61.3, 12605.0], [61.4, 12625.0], [61.5, 12645.0], [61.6, 12689.0], [61.7, 12705.0], [61.8, 12731.0], [61.9, 12750.0], [62.0, 12774.0], [62.1, 12813.0], [62.2, 12821.0], [62.3, 12828.0], [62.4, 12840.0], [62.5, 12843.0], [62.6, 12862.0], [62.7, 12883.0], [62.8, 12907.0], [62.9, 12921.0], [63.0, 12936.0], [63.1, 12952.0], [63.2, 12976.0], [63.3, 12986.0], [63.4, 13003.0], [63.5, 13021.0], [63.6, 13069.0], [63.7, 13085.0], [63.8, 13100.0], [63.9, 13111.0], [64.0, 13129.0], [64.1, 13131.0], [64.2, 13134.0], [64.3, 13155.0], [64.4, 13178.0], [64.5, 13189.0], [64.6, 13219.0], [64.7, 13234.0], [64.8, 13258.0], [64.9, 13283.0], [65.0, 13296.0], [65.1, 13330.0], [65.2, 13372.0], [65.3, 13402.0], [65.4, 13428.0], [65.5, 13456.0], [65.6, 13492.0], [65.7, 13519.0], [65.8, 13544.0], [65.9, 13594.0], [66.0, 13635.0], [66.1, 13693.0], [66.2, 13725.0], [66.3, 13749.0], [66.4, 13767.0], [66.5, 13774.0], [66.6, 13807.0], [66.7, 13839.0], [66.8, 13866.0], [66.9, 13881.0], [67.0, 13898.0], [67.1, 13931.0], [67.2, 13951.0], [67.3, 13993.0], [67.4, 14029.0], [67.5, 14070.0], [67.6, 14102.0], [67.7, 14111.0], [67.8, 14121.0], [67.9, 14147.0], [68.0, 14189.0], [68.1, 14227.0], [68.2, 14241.0], [68.3, 14251.0], [68.4, 14294.0], [68.5, 14304.0], [68.6, 14349.0], [68.7, 14369.0], [68.8, 14429.0], [68.9, 14454.0], [69.0, 14470.0], [69.1, 14487.0], [69.2, 14505.0], [69.3, 14547.0], [69.4, 14595.0], [69.5, 14612.0], [69.6, 14647.0], [69.7, 14693.0], [69.8, 14702.0], [69.9, 14709.0], [70.0, 14724.0], [70.1, 14732.0], [70.2, 14736.0], [70.3, 14750.0], [70.4, 14790.0], [70.5, 14801.0], [70.6, 14818.0], [70.7, 14842.0], [70.8, 14846.0], [70.9, 14857.0], [71.0, 14882.0], [71.1, 14890.0], [71.2, 14908.0], [71.3, 14916.0], [71.4, 14934.0], [71.5, 14955.0], [71.6, 14994.0], [71.7, 15005.0], [71.8, 15019.0], [71.9, 15040.0], [72.0, 15043.0], [72.1, 15045.0], [72.2, 15053.0], [72.3, 15066.0], [72.4, 15076.0], [72.5, 15083.0], [72.6, 15087.0], [72.7, 15095.0], [72.8, 15110.0], [72.9, 15126.0], [73.0, 15128.0], [73.1, 15139.0], [73.2, 15150.0], [73.3, 15165.0], [73.4, 15173.0], [73.5, 15193.0], [73.6, 15211.0], [73.7, 15233.0], [73.8, 15251.0], [73.9, 15273.0], [74.0, 15335.0], [74.1, 15354.0], [74.2, 15393.0], [74.3, 15420.0], [74.4, 15438.0], [74.5, 15458.0], [74.6, 15474.0], [74.7, 15493.0], [74.8, 15499.0], [74.9, 15522.0], [75.0, 15565.0], [75.1, 15576.0], [75.2, 15605.0], [75.3, 15637.0], [75.4, 15643.0], [75.5, 15660.0], [75.6, 15673.0], [75.7, 15699.0], [75.8, 15741.0], [75.9, 15777.0], [76.0, 15785.0], [76.1, 15809.0], [76.2, 15835.0], [76.3, 15888.0], [76.4, 15934.0], [76.5, 15952.0], [76.6, 15974.0], [76.7, 15992.0], [76.8, 16009.0], [76.9, 16026.0], [77.0, 16042.0], [77.1, 16083.0], [77.2, 16125.0], [77.3, 16142.0], [77.4, 16153.0], [77.5, 16174.0], [77.6, 16196.0], [77.7, 16243.0], [77.8, 16258.0], [77.9, 16309.0], [78.0, 16355.0], [78.1, 16410.0], [78.2, 16444.0], [78.3, 16470.0], [78.4, 16491.0], [78.5, 16509.0], [78.6, 16537.0], [78.7, 16560.0], [78.8, 16600.0], [78.9, 16650.0], [79.0, 16694.0], [79.1, 16738.0], [79.2, 16762.0], [79.3, 16796.0], [79.4, 16817.0], [79.5, 16852.0], [79.6, 16887.0], [79.7, 16933.0], [79.8, 16958.0], [79.9, 16973.0], [80.0, 17011.0], [80.1, 17041.0], [80.2, 17067.0], [80.3, 17098.0], [80.4, 17120.0], [80.5, 17147.0], [80.6, 17173.0], [80.7, 17202.0], [80.8, 17223.0], [80.9, 17239.0], [81.0, 17257.0], [81.1, 17281.0], [81.2, 17298.0], [81.3, 17306.0], [81.4, 17320.0], [81.5, 17329.0], [81.6, 17357.0], [81.7, 17368.0], [81.8, 17377.0], [81.9, 17403.0], [82.0, 17449.0], [82.1, 17527.0], [82.2, 17586.0], [82.3, 17635.0], [82.4, 17678.0], [82.5, 17715.0], [82.6, 17766.0], [82.7, 17810.0], [82.8, 17876.0], [82.9, 17932.0], [83.0, 17970.0], [83.1, 18019.0], [83.2, 18026.0], [83.3, 18050.0], [83.4, 18054.0], [83.5, 18067.0], [83.6, 18088.0], [83.7, 18112.0], [83.8, 18151.0], [83.9, 18191.0], [84.0, 18253.0], [84.1, 18292.0], [84.2, 18359.0], [84.3, 18404.0], [84.4, 18421.0], [84.5, 18466.0], [84.6, 18491.0], [84.7, 18491.0], [84.8, 18548.0], [84.9, 18577.0], [85.0, 18626.0], [85.1, 18675.0], [85.2, 18724.0], [85.3, 18807.0], [85.4, 18848.0], [85.5, 18912.0], [85.6, 18956.0], [85.7, 18999.0], [85.8, 19037.0], [85.9, 19074.0], [86.0, 19114.0], [86.1, 19150.0], [86.2, 19197.0], [86.3, 19253.0], [86.4, 19260.0], [86.5, 19264.0], [86.6, 19284.0], [86.7, 19413.0], [86.8, 19493.0], [86.9, 19537.0], [87.0, 19596.0], [87.1, 19600.0], [87.2, 19656.0], [87.3, 19658.0], [87.4, 19691.0], [87.5, 19732.0], [87.6, 19741.0], [87.7, 19746.0], [87.8, 19786.0], [87.9, 19830.0], [88.0, 19907.0], [88.1, 20019.0], [88.2, 20049.0], [88.3, 20055.0], [88.4, 20060.0], [88.5, 20068.0], [88.6, 20108.0], [88.7, 20175.0], [88.8, 20215.0], [88.9, 20239.0], [89.0, 20250.0], [89.1, 20267.0], [89.2, 20369.0], [89.3, 20495.0], [89.4, 20550.0], [89.5, 20601.0], [89.6, 20681.0], [89.7, 20720.0], [89.8, 20752.0], [89.9, 20821.0], [90.0, 20947.0], [90.1, 20995.0], [90.2, 21040.0], [90.3, 21047.0], [90.4, 21050.0], [90.5, 21057.0], [90.6, 21107.0], [90.7, 21160.0], [90.8, 21320.0], [90.9, 21432.0], [91.0, 21464.0], [91.1, 21473.0], [91.2, 21488.0], [91.3, 21574.0], [91.4, 21637.0], [91.5, 21702.0], [91.6, 21769.0], [91.7, 21814.0], [91.8, 21857.0], [91.9, 22036.0], [92.0, 22285.0], [92.1, 22361.0], [92.2, 22547.0], [92.3, 22645.0], [92.4, 22764.0], [92.5, 22842.0], [92.6, 22903.0], [92.7, 23042.0], [92.8, 23087.0], [92.9, 23140.0], [93.0, 23279.0], [93.1, 23327.0], [93.2, 23414.0], [93.3, 23466.0], [93.4, 23559.0], [93.5, 23560.0], [93.6, 23571.0], [93.7, 23627.0], [93.8, 23822.0], [93.9, 23885.0], [94.0, 23900.0], [94.1, 24472.0], [94.2, 24601.0], [94.3, 24724.0], [94.4, 24951.0], [94.5, 25135.0], [94.6, 25190.0], [94.7, 25329.0], [94.8, 25595.0], [94.9, 25846.0], [95.0, 26293.0], [95.1, 26613.0], [95.2, 27424.0], [95.3, 28025.0], [95.4, 28328.0], [95.5, 28613.0], [95.6, 28671.0], [95.7, 28763.0], [95.8, 28824.0], [95.9, 28997.0], [96.0, 29350.0], [96.1, 29595.0], [96.2, 29647.0], [96.3, 30188.0], [96.4, 30450.0], [96.5, 30759.0], [96.6, 30918.0], [96.7, 30989.0], [96.8, 31337.0], [96.9, 31669.0], [97.0, 31922.0], [97.1, 32116.0], [97.2, 32135.0], [97.3, 32350.0], [97.4, 32450.0], [97.5, 32560.0], [97.6, 32673.0], [97.7, 32819.0], [97.8, 32912.0], [97.9, 33064.0], [98.0, 33132.0], [98.1, 33178.0], [98.2, 33302.0], [98.3, 33343.0], [98.4, 33772.0], [98.5, 34115.0], [98.6, 34289.0], [98.7, 34495.0], [98.8, 35551.0], [98.9, 35792.0], [99.0, 36568.0], [99.1, 37117.0], [99.2, 37740.0], [99.3, 38038.0], [99.4, 38331.0], [99.5, 39308.0], [99.6, 39885.0], [99.7, 40294.0], [99.8, 40482.0], [99.9, 40572.0], [100.0, 40616.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1000.0, "maxY": 153.0, "series": [{"data": [[32900.0, 9.0], [34100.0, 6.0], [34500.0, 3.0], [33300.0, 15.0], [33700.0, 6.0], [35700.0, 6.0], [36500.0, 3.0], [38900.0, 2.0], [37300.0, 4.0], [37700.0, 2.0], [39300.0, 3.0], [39700.0, 2.0], [40100.0, 1.0], [40500.0, 16.0], [1000.0, 4.0], [1200.0, 9.0], [1700.0, 10.0], [1800.0, 1.0], [1900.0, 13.0], [2000.0, 7.0], [2100.0, 25.0], [2200.0, 37.0], [2300.0, 3.0], [2400.0, 15.0], [2500.0, 34.0], [2600.0, 33.0], [2700.0, 23.0], [2800.0, 26.0], [2900.0, 9.0], [3000.0, 26.0], [3100.0, 8.0], [3200.0, 36.0], [3300.0, 11.0], [3400.0, 2.0], [3500.0, 15.0], [3600.0, 15.0], [3700.0, 29.0], [3800.0, 26.0], [3900.0, 34.0], [4000.0, 23.0], [4100.0, 59.0], [4200.0, 33.0], [4300.0, 5.0], [4400.0, 13.0], [4600.0, 30.0], [4500.0, 9.0], [4700.0, 38.0], [4800.0, 19.0], [5100.0, 106.0], [4900.0, 27.0], [5000.0, 71.0], [5300.0, 68.0], [5200.0, 66.0], [5500.0, 93.0], [5600.0, 62.0], [5400.0, 116.0], [5700.0, 71.0], [5800.0, 83.0], [6000.0, 54.0], [6100.0, 76.0], [5900.0, 58.0], [6200.0, 104.0], [6300.0, 94.0], [6400.0, 56.0], [6500.0, 87.0], [6600.0, 87.0], [6700.0, 102.0], [6900.0, 57.0], [6800.0, 61.0], [7000.0, 67.0], [7100.0, 104.0], [7400.0, 81.0], [7200.0, 153.0], [7300.0, 99.0], [7600.0, 83.0], [7500.0, 73.0], [7700.0, 85.0], [7900.0, 88.0], [7800.0, 79.0], [8000.0, 70.0], [8100.0, 120.0], [8300.0, 79.0], [8200.0, 82.0], [8400.0, 49.0], [8500.0, 48.0], [8600.0, 66.0], [8700.0, 77.0], [8900.0, 77.0], [9100.0, 60.0], [8800.0, 101.0], [9200.0, 60.0], [9000.0, 35.0], [9300.0, 111.0], [9700.0, 73.0], [9400.0, 112.0], [9500.0, 80.0], [9600.0, 74.0], [9800.0, 65.0], [9900.0, 78.0], [10000.0, 50.0], [10100.0, 80.0], [10200.0, 87.0], [10300.0, 71.0], [10400.0, 46.0], [10500.0, 57.0], [10600.0, 58.0], [10700.0, 95.0], [11100.0, 51.0], [11200.0, 52.0], [10900.0, 64.0], [11000.0, 43.0], [10800.0, 46.0], [11700.0, 37.0], [11300.0, 54.0], [11400.0, 60.0], [11500.0, 60.0], [11600.0, 55.0], [12000.0, 45.0], [12100.0, 84.0], [11800.0, 39.0], [11900.0, 41.0], [12200.0, 84.0], [12400.0, 62.0], [12600.0, 39.0], [12300.0, 60.0], [12500.0, 83.0], [12700.0, 41.0], [12800.0, 67.0], [12900.0, 66.0], [13000.0, 44.0], [13100.0, 76.0], [13300.0, 27.0], [13200.0, 50.0], [13500.0, 26.0], [13600.0, 23.0], [13700.0, 45.0], [13800.0, 44.0], [13400.0, 37.0], [14100.0, 44.0], [14200.0, 39.0], [13900.0, 34.0], [14000.0, 27.0], [14300.0, 36.0], [14700.0, 71.0], [14800.0, 68.0], [14500.0, 30.0], [14600.0, 37.0], [14400.0, 39.0], [15100.0, 77.0], [15200.0, 44.0], [15300.0, 30.0], [14900.0, 47.0], [15000.0, 119.0], [15600.0, 56.0], [15700.0, 34.0], [15800.0, 31.0], [15400.0, 57.0], [15500.0, 36.0], [15900.0, 41.0], [16000.0, 40.0], [16200.0, 28.0], [16100.0, 49.0], [16300.0, 16.0], [16600.0, 21.0], [17200.0, 60.0], [16400.0, 42.0], [16800.0, 34.0], [17000.0, 32.0], [17400.0, 18.0], [18200.0, 18.0], [17600.0, 25.0], [18000.0, 64.0], [17800.0, 20.0], [18400.0, 46.0], [19200.0, 41.0], [18800.0, 22.0], [19000.0, 29.0], [19400.0, 17.0], [18600.0, 20.0], [19600.0, 38.0], [20000.0, 55.0], [20200.0, 37.0], [19800.0, 17.0], [20400.0, 12.0], [21400.0, 39.0], [20600.0, 19.0], [21200.0, 8.0], [20800.0, 5.0], [21000.0, 50.0], [21800.0, 16.0], [22400.0, 6.0], [21600.0, 11.0], [22200.0, 13.0], [22000.0, 2.0], [23000.0, 21.0], [23400.0, 17.0], [22800.0, 17.0], [23200.0, 12.0], [22600.0, 7.0], [23800.0, 22.0], [23600.0, 11.0], [24400.0, 7.0], [25000.0, 1.0], [24600.0, 8.0], [25200.0, 4.0], [24800.0, 4.0], [25400.0, 3.0], [26400.0, 3.0], [25800.0, 2.0], [25600.0, 7.0], [26200.0, 3.0], [26000.0, 3.0], [26600.0, 4.0], [27400.0, 1.0], [27600.0, 2.0], [27200.0, 3.0], [27000.0, 1.0], [27800.0, 1.0], [28000.0, 2.0], [28400.0, 5.0], [28200.0, 2.0], [28600.0, 17.0], [29600.0, 13.0], [28800.0, 8.0], [29000.0, 4.0], [29200.0, 2.0], [29400.0, 4.0], [29800.0, 2.0], [30000.0, 3.0], [30200.0, 6.0], [30600.0, 2.0], [30400.0, 2.0], [31200.0, 3.0], [30800.0, 6.0], [31600.0, 6.0], [31000.0, 1.0], [32600.0, 4.0], [32400.0, 8.0], [31800.0, 3.0], [32000.0, 7.0], [32200.0, 4.0], [32800.0, 8.0], [33200.0, 7.0], [34400.0, 5.0], [33600.0, 1.0], [34800.0, 1.0], [35200.0, 3.0], [36800.0, 2.0], [36000.0, 1.0], [38000.0, 14.0], [37600.0, 1.0], [39200.0, 1.0], [39600.0, 3.0], [40000.0, 5.0], [40400.0, 8.0], [33100.0, 18.0], [34300.0, 5.0], [33900.0, 6.0], [35500.0, 6.0], [35900.0, 1.0], [36700.0, 1.0], [36300.0, 1.0], [37100.0, 3.0], [37500.0, 3.0], [38300.0, 8.0], [39100.0, 1.0], [39500.0, 1.0], [39900.0, 1.0], [40300.0, 5.0], [17300.0, 62.0], [16500.0, 35.0], [16700.0, 31.0], [16900.0, 37.0], [17100.0, 39.0], [17500.0, 15.0], [17900.0, 16.0], [18100.0, 29.0], [17700.0, 23.0], [18300.0, 19.0], [18900.0, 24.0], [18500.0, 21.0], [19300.0, 7.0], [19100.0, 22.0], [18700.0, 11.0], [19500.0, 22.0], [19700.0, 41.0], [20300.0, 9.0], [19900.0, 7.0], [20100.0, 16.0], [21500.0, 11.0], [21100.0, 12.0], [20700.0, 22.0], [21300.0, 8.0], [20900.0, 18.0], [20500.0, 17.0], [21700.0, 20.0], [22300.0, 8.0], [21900.0, 7.0], [22100.0, 2.0], [22500.0, 6.0], [22700.0, 11.0], [23300.0, 14.0], [22900.0, 5.0], [23500.0, 30.0], [23100.0, 9.0], [24300.0, 2.0], [23900.0, 7.0], [24500.0, 5.0], [23700.0, 2.0], [24900.0, 10.0], [24700.0, 4.0], [25100.0, 19.0], [25300.0, 8.0], [25500.0, 1.0], [26500.0, 5.0], [25700.0, 3.0], [26100.0, 1.0], [25900.0, 3.0], [26900.0, 1.0], [27100.0, 1.0], [27700.0, 2.0], [27900.0, 5.0], [28100.0, 6.0], [28300.0, 1.0], [28500.0, 1.0], [28700.0, 14.0], [28900.0, 7.0], [29500.0, 5.0], [29100.0, 1.0], [29300.0, 3.0], [29900.0, 1.0], [30100.0, 3.0], [30500.0, 3.0], [30700.0, 6.0], [30300.0, 1.0], [29700.0, 1.0], [30900.0, 13.0], [31100.0, 5.0], [31300.0, 5.0], [31700.0, 4.0], [31500.0, 2.0], [32100.0, 16.0], [32500.0, 13.0], [32700.0, 8.0], [31900.0, 2.0], [32300.0, 9.0], [33000.0, 9.0], [33400.0, 2.0], [34200.0, 6.0], [33800.0, 1.0], [34600.0, 2.0], [36600.0, 2.0], [35800.0, 3.0], [36200.0, 1.0], [37000.0, 3.0], [37400.0, 1.0], [37800.0, 1.0], [39000.0, 1.0], [39400.0, 1.0], [39800.0, 2.0], [40200.0, 3.0], [40600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 40600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 10221.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 13.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 10221.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 828.078740157481, "minX": 1.6830327E12, "maxY": 3000.0, "series": [{"data": [[1.68303282E12, 3000.0], [1.683033E12, 828.078740157481], [1.6830327E12, 3000.0], [1.68303288E12, 3000.0], [1.68303276E12, 3000.0], [1.68303294E12, 2448.3861566484497]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.683033E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1879.0, "minX": 2.0, "maxY": 40616.0, "series": [{"data": [[2.0, 21170.5], [3.0, 19701.0], [4.0, 28865.0], [5.0, 33162.0], [6.0, 28711.0], [7.0, 19689.0], [9.0, 23638.5], [10.0, 22304.0], [11.0, 19674.0], [12.0, 18561.0], [14.0, 20425.0], [15.0, 19665.0], [16.0, 28679.0], [17.0, 18554.0], [18.0, 22291.0], [19.0, 19661.0], [20.0, 19660.0], [21.0, 18551.0], [23.0, 25193.0], [25.0, 25192.0], [51.0, 28825.0], [52.0, 19658.0], [53.0, 28825.0], [57.0, 25137.166666666664], [58.0, 25542.899999999998], [61.0, 26225.0], [60.0, 18548.0], [62.0, 23921.272727272724], [67.0, 23605.3], [64.0, 19657.0], [71.0, 22289.5], [75.0, 28771.0], [74.0, 33069.0], [73.0, 18496.0], [72.0, 19605.0], [134.0, 21009.6], [133.0, 19760.5], [132.0, 25975.571428571428], [131.0, 23868.0], [129.0, 22484.529411764706], [130.0, 19682.2], [142.0, 23167.4], [141.0, 19598.0], [137.0, 24165.444444444438], [136.0, 19599.0], [151.0, 22334.0], [150.0, 22036.0], [149.0, 33020.0], [148.0, 28723.0], [147.0, 28724.0], [146.0, 28571.0], [145.0, 18448.0], [144.0, 26165.0], [159.0, 24717.0], [158.0, 28251.0], [157.0, 28416.0], [156.0, 23227.0], [155.0, 23240.0], [154.0, 19271.0], [153.0, 28494.0], [152.0, 23376.0], [167.0, 26529.0], [166.0, 26235.5], [164.0, 23056.0], [163.0, 24873.5], [161.0, 23060.0], [160.0, 26544.0], [175.0, 26579.0], [174.0, 26613.0], [173.0, 21420.0], [172.0, 26493.0], [171.0, 21458.0], [170.0, 21465.0], [169.0, 30961.0], [168.0, 30978.0], [183.0, 26299.0], [182.0, 26453.0], [181.0, 30772.0], [180.0, 21285.0], [179.0, 30800.0], [178.0, 21324.0], [177.0, 19996.0], [176.0, 21343.0], [191.0, 20821.0], [190.0, 26026.0], [189.0, 25911.0], [188.0, 25951.0], [187.0, 30499.0], [186.0, 26053.0], [185.0, 22585.0], [184.0, 26293.0], [199.0, 16683.0], [198.0, 25700.0], [197.0, 19365.0], [196.0, 22302.0], [195.0, 20742.0], [194.0, 25995.0], [193.0, 25846.0], [192.0, 20820.0], [207.0, 29795.0], [206.0, 20305.0], [205.0, 29804.0], [204.0, 25359.0], [203.0, 19526.0], [202.0, 25438.0], [201.0, 25595.0], [200.0, 25457.0], [215.0, 25366.0], [214.0, 21737.0], [213.0, 21745.0], [212.0, 19319.0], [211.0, 19175.0], [210.0, 20228.0], [209.0, 21845.0], [208.0, 25486.0], [223.0, 29631.0], [222.0, 21701.0], [221.0, 19095.0], [220.0, 18798.0], [219.0, 21703.0], [218.0, 21702.0], [217.0, 25338.0], [216.0, 25340.0], [231.0, 21689.0], [230.0, 29620.0], [229.0, 19088.0], [228.0, 25329.0], [227.0, 29627.0], [226.0, 19090.0], [225.0, 20135.0], [224.0, 21698.0], [238.0, 29490.0], [237.0, 30820.0], [236.0, 29551.0], [235.0, 25310.0], [234.0, 25163.0], [233.0, 30936.0], [232.0, 29618.0], [247.0, 18549.0], [246.0, 18591.0], [245.0, 29429.0], [244.0, 25135.0], [243.0, 30759.0], [242.0, 30798.0], [241.0, 25188.0], [240.0, 18888.5], [254.0, 24484.0], [253.0, 18361.0], [252.0, 29212.0], [251.0, 18857.0], [250.0, 18790.0], [249.0, 29340.0], [248.0, 29361.0], [270.0, 29650.0], [271.0, 29650.0], [269.0, 17810.0], [268.0, 28626.0], [267.0, 18267.0], [266.0, 20696.0], [265.0, 15163.0], [264.0, 18320.0], [263.0, 18142.0], [258.0, 28719.0], [257.0, 25988.0], [262.0, 20180.25], [286.0, 17710.0], [287.0, 17798.0], [285.0, 29568.0], [284.0, 17926.0], [283.0, 29606.0], [282.0, 17932.0], [281.0, 28293.0], [280.0, 29622.0], [279.0, 29622.0], [272.0, 20400.0], [275.0, 29647.0], [274.0, 17643.0], [278.0, 29639.0], [277.0, 17790.0], [276.0, 28328.0], [302.0, 20053.0], [303.0, 29287.0], [301.0, 27992.0], [300.0, 33274.0], [299.0, 33277.0], [298.0, 17173.0], [297.0, 28025.0], [296.0, 33307.0], [295.0, 29350.0], [289.0, 20184.0], [288.0, 29438.0], [291.0, 20175.0], [290.0, 17570.0], [294.0, 23754.0], [293.0, 17543.0], [292.0, 29420.0], [317.0, 17120.0], [318.0, 32927.0], [316.0, 16834.0], [307.0, 16852.0], [306.0, 29007.0], [305.0, 29009.0], [304.0, 18201.0], [315.0, 32944.0], [314.0, 17313.0], [313.0, 17318.0], [312.0, 32955.0], [311.0, 28999.0], [310.0, 30979.5], [308.0, 29002.0], [334.0, 28950.0], [335.0, 17266.0], [333.0, 16800.0], [332.0, 17099.0], [331.0, 32911.0], [330.0, 25094.5], [328.0, 23028.0], [326.0, 32912.0], [320.0, 17114.0], [323.0, 16965.5], [321.0, 28969.0], [325.0, 17279.0], [324.0, 16807.0], [350.0, 16958.0], [351.0, 32769.0], [349.0, 17142.0], [348.0, 32777.0], [347.0, 32780.0], [346.0, 17147.0], [345.0, 17148.0], [344.0, 32789.0], [343.0, 16682.0], [337.0, 32883.0], [336.0, 28937.0], [339.0, 17022.0], [338.0, 16730.0], [342.0, 17160.0], [341.0, 28873.0], [340.0, 17019.0], [366.0, 16995.0], [367.0, 16994.0], [365.0, 16823.0], [364.0, 16975.5], [362.0, 17065.0], [361.0, 28772.0], [360.0, 16622.0], [359.0, 16625.0], [353.0, 16952.0], [352.0, 16954.0], [355.0, 17126.0], [354.0, 16651.0], [358.0, 28780.0], [357.0, 32737.0], [356.0, 32743.0], [382.0, 16867.0], [383.0, 32438.0], [381.0, 16873.0], [380.0, 16714.0], [379.0, 32528.0], [378.0, 16907.0], [377.0, 32552.0], [376.0, 16743.0], [375.0, 32556.0], [369.0, 16903.0], [371.0, 16463.0], [370.0, 16808.0], [374.0, 32567.0], [373.0, 17802.0], [372.0, 16461.0], [397.0, 32096.0], [398.0, 38392.0], [396.0, 16502.0], [387.0, 28428.0], [386.0, 32388.0], [385.0, 16768.0], [384.0, 16776.0], [395.0, 32315.0], [394.0, 32350.0], [393.0, 16550.0], [392.0, 16560.0], [391.0, 22576.5], [389.0, 16742.0], [388.0, 28420.0], [413.0, 34457.0], [415.0, 35689.5], [412.0, 40505.0], [403.0, 33350.0], [402.0, 32080.0], [401.0, 21945.666666666668], [411.0, 40505.0], [410.0, 40506.0], [409.0, 33333.0], [408.0, 33339.0], [407.0, 33343.0], [406.0, 16436.0], [405.0, 40616.0], [404.0, 40530.0], [419.0, 38051.0], [429.0, 39263.0], [427.0, 35819.0], [424.0, 40575.0], [423.0, 32135.5], [421.0, 35241.0], [418.0, 33319.0], [417.0, 33178.0], [416.0, 33320.0], [445.0, 36351.5], [441.0, 38039.0], [436.0, 37012.666666666664], [433.0, 35456.0], [463.0, 36304.5], [461.0, 39150.166666666664], [456.0, 36509.333333333336], [453.0, 37174.75], [452.0, 32078.5], [466.0, 40527.0], [479.0, 33300.0], [478.0, 37194.25], [474.0, 32125.0], [473.0, 38948.0], [471.0, 38118.333333333336], [470.0, 38182.5], [469.0, 33302.0], [468.0, 33302.0], [465.0, 37193.25], [464.0, 40572.0], [494.0, 34192.0], [495.0, 34191.0], [493.0, 34201.0], [492.0, 31826.0], [491.0, 33101.0], [490.0, 34237.0], [489.0, 33105.0], [488.0, 40382.0], [487.0, 40294.0], [481.0, 36889.0], [483.0, 31960.0], [482.0, 34275.0], [486.0, 34252.0], [485.0, 40394.0], [484.0, 33132.0], [510.0, 31669.0], [511.0, 33998.0], [509.0, 31798.0], [508.0, 34110.0], [507.0, 32834.0], [506.0, 31803.0], [505.0, 32836.0], [504.0, 34115.0], [503.0, 36696.0], [496.0, 40313.0], [499.0, 39188.0], [497.0, 40222.0], [502.0, 40252.0], [501.0, 40308.0], [500.0, 37775.0], [540.0, 39876.0], [542.0, 32549.0], [538.0, 31526.0], [536.0, 39885.0], [534.0, 37740.0], [532.0, 32587.0], [530.0, 40014.0], [528.0, 40087.0], [526.0, 31644.0], [512.0, 31684.0], [518.0, 33988.0], [516.0, 31682.0], [524.0, 33962.0], [522.0, 37871.0], [520.0, 37586.0], [572.0, 32247.0], [574.0, 34674.0], [570.0, 32379.5], [568.0, 33602.0], [566.0, 32362.0], [564.0, 32379.0], [562.0, 32381.0], [560.0, 39908.0], [558.0, 32429.0], [546.0, 33772.0], [544.0, 33778.0], [550.0, 32631.0], [548.0, 33770.0], [556.0, 34895.0], [554.0, 32477.0], [552.0, 32483.0], [604.0, 35880.0], [606.0, 32016.0], [602.0, 32062.0], [600.0, 34495.0], [598.0, 39626.0], [596.0, 34548.0], [594.0, 34598.0], [592.0, 39692.0], [590.0, 37052.0], [578.0, 32225.0], [576.0, 34162.5], [582.0, 32357.0], [580.0, 31190.0], [588.0, 37346.0], [586.0, 35453.5], [584.0, 36066.0], [636.0, 34380.0], [638.0, 35572.0], [634.0, 33006.0], [632.0, 39052.0], [630.0, 31738.0], [628.0, 34339.0], [626.0, 31922.0], [624.0, 34357.0], [620.0, 33212.0], [614.0, 37103.0], [612.0, 35792.0], [610.0, 35813.0], [608.0, 34414.0], [616.0, 30902.0], [668.0, 27014.0], [670.0, 32909.0], [664.0, 29672.5], [646.0, 38961.0], [644.0, 36664.0], [642.0, 36812.0], [640.0, 36556.0], [660.0, 33139.0], [658.0, 35918.0], [656.0, 35521.0], [654.0, 36529.0], [650.0, 35246.0], [648.0, 35251.0], [700.0, 29588.0], [702.0, 30886.0], [698.0, 30723.0], [696.0, 30918.0], [694.0, 30923.0], [692.0, 24724.0], [690.0, 29189.0], [688.0, 34284.0], [686.0, 25764.0], [674.0, 30360.0], [672.0, 33186.0], [678.0, 31617.0], [676.0, 27911.0], [684.0, 27289.0], [682.0, 34503.0], [680.0, 31369.0], [730.0, 30239.0], [734.0, 26621.0], [728.0, 30278.0], [710.0, 30857.0], [708.0, 28136.0], [704.0, 28142.0], [726.0, 27834.0], [724.0, 30599.0], [722.0, 32819.0], [720.0, 27976.0], [718.0, 30723.0], [716.0, 30450.0], [714.0, 33098.0], [712.0, 28055.0], [764.0, 31340.0], [766.0, 31219.0], [762.0, 25112.0], [760.0, 31181.0], [758.0, 25147.0], [756.0, 34141.0], [754.0, 32108.0], [752.0, 28741.0], [750.0, 32463.0], [738.0, 30188.0], [736.0, 30197.0], [742.0, 30010.0], [740.0, 32711.0], [748.0, 32564.0], [746.0, 28929.0], [744.0, 32624.0], [796.0, 22864.0], [798.0, 22827.0], [794.0, 22914.0], [792.0, 20699.0], [790.0, 23017.0], [788.0, 23033.0], [786.0, 23042.0], [784.0, 23046.0], [782.0, 32673.0], [768.0, 33269.0], [772.0, 33152.0], [770.0, 30989.0], [780.0, 32964.0], [778.0, 30943.0], [776.0, 28998.5], [828.0, 18095.0], [830.0, 17326.0], [826.0, 17361.0], [824.0, 18100.0], [822.0, 17368.0], [820.0, 17371.0], [818.0, 18110.0], [816.0, 18112.0], [814.0, 18956.0], [802.0, 22755.0], [800.0, 22764.0], [806.0, 22716.0], [804.0, 20450.0], [810.0, 16773.0], [808.0, 16796.0], [860.0, 25200.0], [862.0, 21820.0], [858.0, 23858.0], [856.0, 18054.0], [854.0, 21824.0], [852.0, 25684.0], [848.0, 17312.0], [846.0, 17531.0], [838.0, 17362.0], [836.0, 17366.0], [834.0, 21857.0], [840.0, 17362.0], [884.0, 16473.0], [882.0, 26171.0], [880.0, 23826.0], [878.0, 23827.0], [876.0, 18982.0], [870.0, 25674.0], [866.0, 20331.0], [864.0, 20593.5], [926.0, 20778.2], [914.0, 17298.0], [900.0, 23298.0], [902.0, 17298.0], [906.0, 20920.5], [954.0, 19232.0], [956.0, 16940.0], [952.0, 22989.0], [950.0, 22989.0], [948.0, 23515.0], [946.0, 24863.0], [944.0, 25338.0], [942.0, 21490.0], [940.0, 17724.0], [938.0, 17243.0], [936.0, 20042.333333333332], [988.0, 24705.0], [990.0, 22833.0], [986.0, 22842.0], [984.0, 25716.0], [982.0, 25200.0], [980.0, 16036.0], [978.0, 21356.0], [976.0, 16042.0], [974.0, 24742.0], [960.0, 25853.0], [964.0, 21447.0], [962.0, 21464.0], [972.0, 21365.0], [970.0, 16957.0], [968.0, 16958.0], [1018.0, 15800.0], [1020.0, 20384.5], [1016.0, 23564.0], [998.0, 22768.0], [996.0, 21259.0], [994.0, 16796.0], [992.0, 21320.0], [1014.0, 23155.0], [1012.0, 24502.0], [1010.0, 15809.0], [1008.0, 24511.0], [1006.0, 24514.0], [1004.0, 16613.0], [1002.0, 24596.0], [1000.0, 21250.0], [1080.0, 19280.0], [1084.0, 17741.0], [1076.0, 12568.0], [1072.0, 12599.0], [1064.0, 18096.0], [1060.0, 19820.0], [1056.0, 22101.0], [1052.0, 21684.0], [1028.0, 21098.0], [1036.0, 22584.0], [1032.0, 23125.0], [1048.0, 24435.0], [1044.0, 23095.0], [1040.0, 15748.0], [1144.0, 17522.0], [1148.0, 23657.0], [1140.0, 17666.0], [1136.0, 20688.0], [1132.0, 16388.0], [1128.0, 20061.0], [1124.0, 16762.0], [1120.0, 20581.0], [1116.0, 21107.0], [1092.0, 22004.0], [1088.0, 21047.0], [1100.0, 13014.0], [1096.0, 21468.0], [1112.0, 18881.0], [1108.0, 18912.0], [1104.0, 21831.0], [1200.0, 18405.0], [1208.0, 17129.0], [1212.0, 17076.0], [1204.0, 17224.0], [1196.0, 21331.0], [1192.0, 23465.0], [1180.0, 17239.0], [1152.0, 23492.0], [1164.0, 17250.0], [1156.0, 23488.0], [1172.0, 18406.0], [1168.0, 17069.0], [1276.0, 21916.0], [1272.0, 20796.0], [1256.0, 23236.0], [1268.0, 22637.0], [1264.0, 22860.0], [1228.0, 22853.0], [1224.0, 17047.0], [1220.0, 16877.0], [1216.0, 17057.0], [1260.0, 16608.0], [1252.0, 22897.0], [1248.0, 16889.0], [1244.0, 18074.0], [1240.0, 22779.0], [1236.0, 23434.0], [1232.0, 17156.0], [1336.0, 14198.0], [1312.0, 16575.0], [1320.0, 21017.0], [1340.0, 18626.0], [1332.0, 20642.0], [1328.0, 20068.0], [1280.0, 22450.0], [1284.0, 22366.0], [1292.0, 17732.0], [1308.0, 17248.0], [1304.0, 20019.0], [1300.0, 17419.0], [1296.0, 21495.0], [1324.0, 15451.0], [1400.0, 13393.0], [1376.0, 20086.0], [1380.0, 19786.0], [1384.0, 19094.0], [1404.0, 18490.0], [1396.0, 18626.0], [1392.0, 12259.0], [1344.0, 14060.0], [1348.0, 18438.0], [1352.0, 15643.0], [1356.0, 14995.0], [1372.0, 14569.0], [1368.0, 19853.0], [1364.0, 15432.0], [1360.0, 20050.0], [1388.0, 19037.0], [1460.0, 16548.0], [1444.0, 16255.0], [1448.0, 17098.0], [1464.0, 10868.0], [1456.0, 16549.0], [1420.0, 12544.0], [1416.0, 15181.0], [1412.0, 16496.0], [1408.0, 18800.0], [1436.0, 11771.0], [1432.0, 16444.0], [1428.0, 12511.0], [1424.0, 16534.0], [1520.0, 13830.0], [1512.0, 14274.0], [1524.0, 13002.0], [1504.0, 13003.0], [1484.0, 13107.0], [1480.0, 13111.0], [1476.0, 14031.0], [1472.0, 14121.0], [1500.0, 13875.0], [1496.0, 13015.0], [1492.0, 12245.0], [1488.0, 13893.0], [1516.0, 13051.0], [1508.0, 13078.0], [1592.0, 14965.0], [1568.0, 15307.0], [1572.0, 13187.0], [1576.0, 13176.0], [1596.0, 12291.0], [1588.0, 12947.0], [1584.0, 11870.0], [1564.0, 12102.0], [1544.0, 13272.076923076922], [1548.0, 13153.5], [1556.0, 12089.0], [1552.0, 13795.0], [1580.0, 12693.0], [1656.0, 8042.0], [1632.0, 13433.0], [1636.0, 9285.0], [1640.0, 13330.0], [1660.0, 8010.0], [1652.0, 10955.0], [1648.0, 12689.0], [1600.0, 14579.0], [1604.0, 12375.0], [1608.0, 11463.0], [1612.0, 11822.0], [1628.0, 11460.0], [1624.0, 13559.0], [1620.0, 11702.0], [1616.0, 9684.0], [1644.0, 12774.0], [1712.0, 9522.0], [1720.0, 9407.0], [1700.0, 9016.083333333334], [1704.0, 11236.0], [1724.0, 10519.0], [1716.0, 9497.0], [1664.0, 9738.0], [1668.0, 12838.0], [1672.0, 8358.0], [1684.0, 11304.0], [1680.0, 9717.0], [1784.0, 9449.0], [1788.0, 9697.666666666666], [1760.0, 9506.5], [1764.0, 6546.0], [1768.0, 7874.0], [1780.0, 7769.0], [1776.0, 6212.0], [1740.0, 8649.0], [1736.0, 8464.666666666666], [1732.0, 7481.0], [1728.0, 7540.0], [1756.0, 9559.0], [1752.0, 8001.0], [1748.0, 8032.0], [1744.0, 8229.0], [1772.0, 6269.0], [1840.0, 8887.0], [1852.0, 9803.0], [1832.0, 10435.0], [1848.0, 9876.0], [1804.0, 9418.0], [1800.0, 9428.0], [1796.0, 10513.0], [1792.0, 9438.0], [1812.0, 11022.0], [1836.0, 11720.0], [1912.0, 7236.0], [1888.0, 10677.0], [1892.0, 7667.0], [1896.0, 8694.0], [1916.0, 10116.0], [1908.0, 7280.0], [1904.0, 10369.0], [1856.0, 11329.0], [1860.0, 11312.0], [1864.0, 11293.0], [1868.0, 9381.0], [1884.0, 8839.0], [1880.0, 10806.0], [1876.0, 9228.0], [1872.0, 10218.0], [1900.0, 10548.0], [1976.0, 9320.0], [1952.0, 9618.0], [1956.0, 9515.0], [1960.0, 9434.0], [1980.0, 9314.0], [1972.0, 9326.0], [1968.0, 8843.0], [1920.0, 9957.0], [1924.0, 9874.0], [1928.0, 9866.0], [1932.0, 9112.5], [1948.0, 9248.0], [1944.0, 9868.0], [1940.0, 9380.0], [1936.0, 9382.0], [1964.0, 9340.0], [2040.0, 6788.0], [2016.0, 7572.0], [2020.0, 7993.0], [2024.0, 7964.0], [2044.0, 7227.0], [2036.0, 7060.0], [2032.0, 7695.0], [1984.0, 8817.0], [1988.0, 9254.0], [1992.0, 8837.0], [1996.0, 10451.0], [2012.0, 8799.5], [2008.0, 8482.0], [2004.0, 8657.0], [2000.0, 8705.0], [2028.0, 10199.0], [2160.0, 8325.5], [2112.0, 9108.0], [2120.0, 8859.0], [2168.0, 7325.0], [2152.0, 8732.0], [2144.0, 8980.0], [2072.0, 8405.0], [2064.0, 7756.0], [2056.0, 7004.0], [2048.0, 6660.0], [2104.0, 5759.0], [2096.0, 7983.0], [2088.0, 6590.0], [2080.0, 8328.0], [2296.0, 9617.0], [2240.0, 7106.0], [2248.0, 7104.0], [2256.0, 9697.0], [2264.0, 7021.0], [2288.0, 8254.0], [2280.0, 6822.0], [2272.0, 9462.0], [2200.0, 7624.0], [2192.0, 7769.0], [2184.0, 8175.0], [2176.0, 7267.0], [2224.0, 8560.0], [2216.0, 8575.0], [2208.0, 8590.0], [2416.0, 6190.0], [2408.0, 6878.0], [2384.0, 7984.0], [2368.0, 10381.0], [2376.0, 10259.0], [2392.0, 9748.0], [2400.0, 9346.0], [2304.0, 9376.0], [2312.0, 8189.0], [2320.0, 11819.0], [2328.0, 9529.0], [2360.0, 9455.0], [2352.0, 11744.0], [2344.0, 9488.0], [2336.0, 13825.0], [2544.0, 10679.0], [2552.0, 10594.0], [2496.0, 10710.0], [2504.0, 10548.0], [2512.0, 10059.0], [2520.0, 13144.0], [2536.0, 10695.0], [2528.0, 13133.0], [2432.0, 9325.5], [2488.0, 8714.0], [2480.0, 9150.0], [2472.0, 9386.0], [2672.0, 9256.0], [2680.0, 9207.0], [2624.0, 8105.0], [2632.0, 10171.0], [2640.0, 10161.0], [2648.0, 9754.0], [2664.0, 10129.0], [2584.0, 12597.0], [2560.0, 10049.0], [2568.0, 9982.0], [2576.0, 12710.0], [2616.0, 11222.0], [2608.0, 12107.0], [2600.0, 9763.0], [2592.0, 12538.0], [2792.0, 2444.0], [2808.0, 2211.0], [2760.0, 4591.0], [2768.0, 4694.0], [2776.0, 4609.0], [2800.0, 2407.0], [2784.0, 3020.0], [2688.0, 9239.0], [2696.0, 9548.0], [2704.0, 8721.0], [2712.0, 8989.0], [2744.0, 7150.0], [2736.0, 8005.0], [2728.0, 9018.0], [2920.0, 5550.0], [2936.0, 5282.0], [2880.0, 6502.333333333333], [2888.0, 6671.0], [2896.0, 6114.0], [2904.0, 3939.0], [2912.0, 5806.0], [2840.0, 4222.0], [2832.0, 4812.0], [2824.0, 4256.0], [2816.0, 1969.0], [2872.0, 6739.0], [2864.0, 4181.0], [2856.0, 4195.0], [2848.0, 4214.0], [2952.0, 5635.0], [2960.0, 5608.0], [3000.0, 10620.783137525867], [2968.0, 5391.0], [2992.0, 5590.0], [2984.0, 5173.0], [2976.0, 5186.0], [2161.0, 8124.666666666667], [2169.0, 8527.0], [2121.0, 7878.0], [2113.0, 9109.0], [2129.0, 7859.0], [2137.0, 8782.5], [2153.0, 8731.0], [2145.0, 8980.0], [2049.0, 7132.0], [2057.0, 7001.0], [2065.0, 8531.0], [2105.0, 7296.0], [2097.0, 7942.0], [2089.0, 6585.0], [2081.0, 8322.0], [2297.0, 9387.0], [2281.0, 9961.0], [2241.0, 8546.0], [2249.0, 7824.0], [2257.0, 7103.0], [2265.0, 8347.0], [2273.0, 8296.0], [2177.0, 8245.0], [2185.0, 7817.0], [2193.0, 6543.0], [2201.0, 7373.0], [2225.0, 7119.0], [2217.0, 8574.0], [2209.0, 7150.0], [2409.0, 11187.0], [2369.0, 8421.0], [2377.0, 8310.0], [2393.0, 9745.0], [2417.0, 6132.0], [2401.0, 7053.0], [2329.0, 9847.0], [2321.0, 8165.0], [2313.0, 11835.0], [2305.0, 9904.0], [2361.0, 9454.0], [2353.0, 13791.0], [2337.0, 9507.0], [2545.0, 13094.0], [2553.0, 10571.0], [2497.0, 10697.0], [2505.0, 10085.0], [2513.0, 7940.0], [2521.0, 10721.0], [2537.0, 10690.0], [2529.0, 13132.0], [2489.0, 10789.0], [2473.0, 9956.5], [2673.0, 9633.0], [2625.0, 10984.0], [2633.0, 10171.0], [2649.0, 8908.0], [2681.0, 8735.0], [2665.0, 9308.0], [2657.0, 9954.0], [2585.0, 9826.0], [2561.0, 12806.0], [2569.0, 12748.0], [2577.0, 9939.0], [2617.0, 11042.0], [2609.0, 9553.0], [2601.0, 12533.0], [2593.0, 12599.0], [2801.0, 2377.0], [2809.0, 2100.0], [2753.0, 7356.0], [2761.0, 4807.0], [2769.0, 4648.0], [2777.0, 4164.0], [2793.0, 2443.0], [2785.0, 3016.0], [2689.0, 8374.0], [2697.0, 9148.0], [2705.0, 9090.0], [2713.0, 8589.0], [2745.0, 7141.0], [2737.0, 8670.0], [2729.0, 9000.0], [2721.0, 8724.0], [2921.0, 6901.0], [2937.0, 6623.0], [2881.0, 4711.0], [2889.0, 6658.0], [2897.0, 6016.0], [2905.0, 3933.0], [2913.0, 3803.0], [2833.0, 4231.0], [2825.0, 4255.0], [2817.0, 1939.0], [2873.0, 4738.0], [2865.0, 4760.0], [2857.0, 4772.0], [2849.0, 4211.0], [2945.0, 5485.5], [2993.0, 5158.0], [2953.0, 5468.0], [2961.0, 5593.0], [2969.0, 5052.0], [2985.0, 5603.0], [2977.0, 5187.0], [1081.0, 13217.0], [1085.0, 21589.0], [1077.0, 17884.0], [1073.0, 17906.0], [1069.0, 16178.5], [1065.0, 21466.0], [1061.0, 18120.0], [1057.0, 13677.0], [1053.0, 20333.0], [1029.0, 15781.0], [1025.0, 24048.5], [1037.0, 22582.0], [1033.0, 16552.0], [1049.0, 23084.0], [1045.0, 15742.0], [1041.0, 15747.0], [1145.0, 17286.0], [1149.0, 17399.0], [1141.0, 20511.0], [1137.0, 20681.0], [1133.0, 20741.0], [1129.0, 20443.0], [1125.0, 20601.0], [1121.0, 21574.0], [1117.0, 20625.0], [1089.0, 21032.0], [1097.0, 21464.0], [1093.0, 13085.0], [1113.0, 19406.0], [1109.0, 20779.0], [1105.0, 20829.0], [1209.0, 18910.0], [1213.0, 18872.0], [1205.0, 23450.0], [1201.0, 23464.0], [1197.0, 23055.5], [1189.0, 17370.0], [1185.0, 19646.0], [1181.0, 17239.0], [1153.0, 21695.0], [1165.0, 17377.0], [1157.0, 17391.0], [1177.0, 19914.333333333332], [1173.0, 19521.5], [1169.0, 23058.0], [1277.0, 17223.0], [1257.0, 21251.0], [1273.0, 22598.0], [1269.0, 16993.0], [1265.0, 16420.0], [1229.0, 22850.0], [1225.0, 16874.0], [1221.0, 18848.0], [1217.0, 17188.0], [1261.0, 17875.0], [1253.0, 23090.0], [1249.0, 18683.0], [1241.0, 23356.0], [1237.0, 17131.0], [1233.0, 23409.0], [1333.0, 20030.0], [1341.0, 15980.0], [1313.0, 16559.0], [1317.0, 18697.0], [1321.0, 20443.0], [1329.0, 20060.0], [1293.0, 20361.0], [1289.0, 22266.5], [1285.0, 15791.0], [1281.0, 16020.0], [1309.0, 16605.0], [1305.0, 16744.0], [1301.0, 17397.0], [1297.0, 21492.0], [1325.0, 18717.0], [1401.0, 18950.0], [1377.0, 17711.0], [1381.0, 13080.0], [1385.0, 19176.0], [1405.0, 16530.0], [1397.0, 18626.0], [1393.0, 18476.0], [1345.0, 14189.0], [1349.0, 20196.0], [1353.0, 15006.0], [1357.0, 20551.0], [1373.0, 19787.0], [1369.0, 20008.0], [1365.0, 20060.0], [1361.0, 19889.0], [1389.0, 18692.0], [1465.0, 16122.0], [1469.0, 15109.666666666666], [1441.0, 13966.5], [1445.0, 10556.0], [1449.0, 11524.0], [1461.0, 16192.0], [1457.0, 16537.0], [1421.0, 12537.0], [1417.0, 10879.0], [1413.0, 18789.0], [1409.0, 18501.0], [1437.0, 12400.0], [1433.0, 16853.0], [1429.0, 12488.0], [1425.0, 12514.0], [1453.0, 15608.5], [1521.0, 12959.0], [1513.0, 12979.0], [1525.0, 12986.0], [1505.0, 13003.0], [1485.0, 13105.0], [1481.0, 13110.0], [1477.0, 12640.0], [1473.0, 14675.0], [1501.0, 13084.0], [1497.0, 13013.0], [1493.0, 13883.0], [1489.0, 13891.0], [1517.0, 14251.0], [1509.0, 13862.0], [1593.0, 11640.0], [1569.0, 13193.0], [1573.0, 11977.0], [1577.0, 11839.0], [1597.0, 12691.0], [1589.0, 11660.0], [1585.0, 15004.0], [1541.0, 13772.0], [1549.0, 13974.0], [1565.0, 13287.0], [1561.0, 12508.5], [1557.0, 12914.0], [1553.0, 13324.0], [1581.0, 12689.0], [1657.0, 8041.0], [1633.0, 13425.0], [1637.0, 9267.0], [1641.0, 13298.0], [1661.0, 7995.0], [1653.0, 10949.0], [1649.0, 12673.0], [1601.0, 11161.0], [1605.0, 10243.0], [1609.0, 10662.0], [1613.0, 10614.0], [1629.0, 10160.0], [1625.0, 13538.0], [1621.0, 11672.0], [1617.0, 13781.0], [1645.0, 12739.0], [1721.0, 9003.0], [1701.0, 11248.0], [1705.0, 9628.0], [1725.0, 10513.0], [1717.0, 8126.0], [1713.0, 11105.0], [1665.0, 11329.0], [1673.0, 8358.0], [1669.0, 12838.0], [1685.0, 7332.0], [1681.0, 9716.0], [1709.0, 8261.0], [1785.0, 9127.0], [1789.0, 9123.0], [1761.0, 9545.0], [1765.0, 9500.0], [1769.0, 9455.0], [1781.0, 9136.0], [1777.0, 9322.0], [1741.0, 7252.0], [1737.0, 10300.0], [1733.0, 7480.0], [1729.0, 7531.0], [1757.0, 7952.0], [1753.0, 6636.0], [1749.0, 11130.0], [1745.0, 9815.0], [1773.0, 6252.0], [1841.0, 9962.0], [1849.0, 8779.0], [1825.0, 9942.0], [1833.0, 9353.0], [1853.0, 11657.0], [1845.0, 10188.5], [1793.0, 12118.0], [1797.0, 9111.0], [1801.0, 12108.0], [1805.0, 9409.0], [1817.0, 11193.333333333334], [1809.0, 11194.333333333334], [1837.0, 9010.0], [1905.0, 7386.0], [1913.0, 8293.0], [1897.0, 7294.0], [1917.0, 8205.0], [1909.0, 10215.0], [1857.0, 11324.0], [1861.0, 11306.0], [1865.0, 11535.0], [1869.0, 11211.0], [1885.0, 8838.0], [1881.0, 7800.0], [1877.0, 9219.0], [1873.0, 11133.0], [1901.0, 7597.0], [1977.0, 9319.0], [1953.0, 9608.0], [1957.0, 8483.0], [1961.0, 9425.0], [1981.0, 8285.0], [1973.0, 11760.0], [1969.0, 9328.0], [1921.0, 7012.0], [1929.0, 9872.0], [1933.0, 9871.0], [1949.0, 9241.0], [1945.0, 9796.0], [1941.0, 9869.0], [1937.0, 9870.0], [1965.0, 9324.0], [2041.0, 6752.0], [2017.0, 7537.0], [2021.0, 6976.0], [2025.0, 7461.0], [2045.0, 7156.0], [2037.0, 7047.0], [2033.0, 6675.0], [1985.0, 8814.0], [1989.0, 9151.0], [1993.0, 8815.0], [1997.0, 8746.0], [2013.0, 8094.0], [2009.0, 8455.0], [2005.0, 8570.0], [2001.0, 7669.0], [2029.0, 10156.0], [2146.0, 8975.0], [2122.0, 7867.0], [2114.0, 7898.0], [2130.0, 9067.0], [2138.0, 7791.0], [2066.0, 8477.0], [2058.0, 7000.0], [2050.0, 7128.0], [2106.0, 7922.0], [2098.0, 7812.0], [2090.0, 8196.0], [2082.0, 6709.0], [2290.0, 6812.0], [2242.0, 7465.0], [2250.0, 9698.0], [2258.0, 8543.0], [2266.0, 8338.0], [2282.0, 9413.0], [2274.0, 5275.0], [2202.0, 7357.0], [2194.0, 6539.0], [2186.0, 6680.0], [2226.0, 8556.0], [2218.0, 9725.0], [2210.0, 7143.0], [2410.0, 9134.0], [2418.0, 8043.0], [2378.0, 12164.0], [2386.0, 8926.0], [2394.0, 7474.0], [2402.0, 7345.0], [2306.0, 9901.0], [2314.0, 9560.0], [2330.0, 9845.0], [2362.0, 9773.0], [2354.0, 9465.0], [2346.0, 10783.0], [2338.0, 9825.0], [2546.0, 13092.0], [2554.0, 12989.0], [2498.0, 10694.0], [2506.0, 10084.0], [2514.0, 10001.0], [2522.0, 10371.0], [2538.0, 10338.0], [2530.0, 6746.0], [2442.0, 10011.333333333334], [2490.0, 8700.0], [2482.0, 11565.0], [2666.0, 9305.0], [2674.0, 8787.0], [2682.0, 9972.0], [2626.0, 10192.0], [2634.0, 10210.0], [2642.0, 9344.5], [2658.0, 8876.0], [2586.0, 9824.0], [2578.0, 9938.0], [2562.0, 10385.0], [2570.0, 9973.0], [2618.0, 8140.0], [2610.0, 9138.0], [2810.0, 2099.0], [2754.0, 7740.0], [2762.0, 4775.0], [2770.0, 4687.0], [2778.0, 4598.0], [2802.0, 2375.0], [2794.0, 2441.0], [2786.0, 3006.0], [2690.0, 9215.0], [2698.0, 9142.0], [2714.0, 7993.0], [2746.0, 7137.0], [2738.0, 8274.0], [2730.0, 8575.0], [2722.0, 8319.0], [2922.0, 4550.5], [2938.0, 6611.0], [2882.0, 4710.0], [2890.0, 4627.0], [2898.0, 6014.0], [2930.0, 6869.0], [2914.0, 5791.0], [2842.0, 4220.0], [2834.0, 4231.0], [2826.0, 4254.0], [2818.0, 1930.0], [2866.0, 4756.0], [2858.0, 4191.0], [2850.0, 4210.0], [2946.0, 5484.0], [2962.0, 5575.0], [2970.0, 5043.0], [2994.0, 5157.0], [2986.0, 5601.0], [2978.0, 5618.0], [2155.0, 7750.0], [2171.0, 8526.0], [2123.0, 8845.0], [2131.0, 8952.5], [2139.0, 8769.0], [2147.0, 8971.0], [2051.0, 8626.0], [2059.0, 6990.0], [2067.0, 8469.0], [2107.0, 7919.0], [2099.0, 7764.0], [2091.0, 8188.0], [2083.0, 8290.0], [2291.0, 8242.0], [2299.0, 9657.5], [2243.0, 7105.0], [2259.0, 7102.0], [2267.0, 8338.0], [2283.0, 6819.0], [2275.0, 8293.0], [2235.0, 8546.0], [2179.0, 7725.0], [2187.0, 6588.0], [2195.0, 7737.0], [2203.0, 6366.0], [2227.0, 7112.0], [2219.0, 7130.0], [2211.0, 7143.0], [2411.0, 9105.0], [2419.0, 5772.0], [2379.0, 7588.0], [2387.0, 9899.0], [2395.0, 9743.0], [2331.0, 11789.0], [2323.0, 11705.0], [2315.0, 9551.0], [2307.0, 9900.0], [2363.0, 9441.0], [2355.0, 9783.0], [2347.0, 11757.0], [2339.0, 11775.0], [2547.0, 10316.0], [2555.0, 10564.0], [2499.0, 8608.0], [2507.0, 8003.0], [2515.0, 9851.0], [2523.0, 10371.0], [2539.0, 10687.0], [2435.0, 9544.0], [2491.0, 8692.0], [2475.0, 9488.0], [2675.0, 9248.0], [2683.0, 9576.0], [2627.0, 9786.0], [2635.0, 8930.0], [2643.0, 9384.0], [2651.0, 9559.5], [2667.0, 9675.0], [2659.0, 10110.0], [2587.0, 12592.0], [2579.0, 10282.0], [2571.0, 12736.0], [2611.0, 11894.0], [2603.0, 10111.5], [2595.0, 12536.0], [2803.0, 2361.0], [2811.0, 2067.0], [2755.0, 4798.0], [2763.0, 4723.0], [2771.0, 4683.0], [2779.0, 4546.0], [2795.0, 2432.0], [2787.0, 3004.0], [2691.0, 9591.0], [2699.0, 9533.0], [2707.0, 8865.0], [2715.0, 9258.0], [2747.0, 7910.0], [2739.0, 8667.0], [2731.0, 7643.0], [2723.0, 7829.0], [2931.0, 5300.333333333333], [2939.0, 5234.0], [2883.0, 4709.0], [2891.0, 4459.0], [2899.0, 6005.0], [2907.0, 4914.5], [2923.0, 6900.0], [2915.0, 7124.0], [2835.0, 4232.0], [2827.0, 4253.0], [2819.0, 1925.0], [2875.0, 6410.5], [2867.0, 4754.0], [2859.0, 4771.0], [2851.0, 4208.0], [2955.0, 5616.0], [2947.0, 5818.0], [2963.0, 5573.0], [2971.0, 4932.0], [2995.0, 5586.0], [2987.0, 5168.0], [2979.0, 5616.0], [541.0, 37431.0], [543.0, 37671.0], [539.0, 32557.0], [537.0, 32560.0], [535.0, 32569.0], [533.0, 32715.0], [531.0, 32588.0], [529.0, 40019.0], [527.0, 32818.0], [515.0, 35794.0], [513.0, 33994.0], [519.0, 40031.0], [517.0, 40123.0], [525.0, 32820.0], [523.0, 40017.0], [521.0, 33985.0], [573.0, 39564.0], [571.0, 32252.0], [551.0, 36340.0], [549.0, 33769.0], [547.0, 33771.0], [545.0, 31366.0], [567.0, 32501.0], [565.0, 31337.0], [563.0, 31349.0], [561.0, 37551.0], [559.0, 37300.0], [557.0, 36291.0], [555.0, 32470.0], [553.0, 33759.0], [605.0, 35873.0], [607.0, 39308.0], [603.0, 32051.0], [601.0, 31029.0], [599.0, 39394.0], [597.0, 33390.0], [595.0, 39677.0], [593.0, 33446.0], [591.0, 32173.0], [579.0, 39746.0], [577.0, 32370.0], [583.0, 32214.0], [581.0, 37384.0], [589.0, 34606.0], [587.0, 37349.0], [637.0, 35574.0], [639.0, 34117.0], [633.0, 35589.0], [615.0, 39456.0], [613.0, 39257.0], [609.0, 30941.0], [631.0, 31738.0], [629.0, 39380.0], [627.0, 36794.0], [625.0, 30890.0], [623.0, 35076.5], [621.0, 32633.5], [619.0, 35791.0], [617.0, 35078.5], [669.0, 35557.0], [671.0, 35551.0], [667.0, 33949.0], [665.0, 33236.5], [661.0, 32118.0], [659.0, 30756.0], [657.0, 37131.0], [655.0, 38001.0], [643.0, 30543.0], [641.0, 39183.0], [647.0, 36568.0], [645.0, 31610.0], [653.0, 33372.5], [651.0, 33813.0], [649.0, 38912.0], [701.0, 24687.0], [703.0, 24681.0], [699.0, 29595.0], [679.0, 27687.0], [677.0, 30194.0], [675.0, 30201.0], [673.0, 31794.0], [695.0, 29610.0], [693.0, 28187.0], [691.0, 33281.0], [689.0, 26900.0], [687.0, 34289.0], [685.0, 27230.0], [683.0, 27157.0], [681.0, 29614.0], [733.0, 29011.0], [735.0, 30221.0], [731.0, 32880.0], [729.0, 30247.0], [727.0, 30571.0], [725.0, 26686.0], [723.0, 27901.0], [721.0, 30675.0], [719.0, 24415.0], [707.0, 26405.0], [705.0, 28139.0], [711.0, 30840.0], [709.0, 29552.0], [717.0, 27991.0], [715.0, 30743.0], [713.0, 33108.0], [765.0, 31132.0], [767.0, 31217.0], [763.0, 23974.0], [761.0, 31167.0], [759.0, 33443.0], [757.0, 27749.0], [755.0, 32100.0], [753.0, 26035.0], [751.0, 32425.0], [739.0, 27640.0], [737.0, 26590.0], [743.0, 32629.0], [741.0, 28997.0], [749.0, 29832.0], [747.0, 32590.0], [745.0, 29960.0], [797.0, 20562.0], [799.0, 22816.0], [795.0, 22898.0], [793.0, 22983.0], [791.0, 23017.0], [789.0, 23034.0], [787.0, 20742.0], [785.0, 20752.0], [783.0, 23046.0], [771.0, 30981.0], [769.0, 30986.0], [775.0, 23710.0], [773.0, 27424.0], [781.0, 32840.0], [779.0, 33096.0], [777.0, 33143.0], [829.0, 18094.0], [831.0, 17324.0], [827.0, 17376.0], [825.0, 18098.0], [823.0, 17365.0], [821.0, 17338.0], [819.0, 17371.0], [817.0, 17391.0], [815.0, 16716.0], [803.0, 22745.0], [801.0, 22756.0], [807.0, 18999.0], [805.0, 22718.0], [813.0, 17843.5], [811.0, 16770.0], [809.0, 18961.0], [859.0, 17333.0], [861.0, 18052.0], [857.0, 21823.0], [839.0, 26234.0], [837.0, 18083.0], [835.0, 18086.0], [833.0, 17705.0], [855.0, 18054.0], [853.0, 25204.0], [851.0, 19093.666666666668], [847.0, 18078.0], [845.0, 17313.0], [841.0, 17315.0], [883.0, 18020.0], [881.0, 16474.0], [879.0, 18022.0], [877.0, 18023.0], [875.0, 17248.5], [869.0, 19054.333333333332], [925.0, 20559.5], [927.0, 17297.0], [923.0, 17281.0], [921.0, 21787.0], [919.0, 18019.0], [917.0, 17283.0], [915.0, 20560.5], [913.0, 17533.333333333332], [911.0, 18018.0], [899.0, 19944.8], [909.0, 22319.0], [907.0, 17091.25], [959.0, 23163.5], [957.0, 24853.0], [935.0, 20215.833333333332], [931.0, 18697.75], [929.0, 23822.0], [951.0, 16162.0], [949.0, 21479.0], [947.0, 17713.0], [945.0, 16995.0], [943.0, 17716.0], [941.0, 16175.0], [939.0, 25347.0], [937.0, 20042.666666666668], [989.0, 23361.0], [991.0, 16005.0], [987.0, 16012.0], [985.0, 22842.0], [983.0, 25198.0], [981.0, 22861.0], [979.0, 23390.0], [977.0, 23392.0], [975.0, 25213.0], [963.0, 16966.0], [961.0, 21471.0], [967.0, 16958.0], [965.0, 17678.0], [973.0, 22874.0], [971.0, 22882.0], [969.0, 23482.0], [1021.0, 21110.0], [1023.0, 24482.0], [1017.0, 15801.0], [999.0, 24632.0], [997.0, 21257.0], [995.0, 15977.0], [993.0, 16806.0], [1013.0, 23156.0], [1011.0, 15809.0], [1009.0, 23166.0], [1007.0, 22645.0], [1005.0, 24523.0], [1003.0, 15867.0], [1001.0, 23284.0], [1082.0, 19258.0], [1086.0, 13146.0], [1078.0, 17879.0], [1074.0, 22271.0], [1070.0, 12716.0], [1066.0, 20124.0], [1062.0, 19618.0], [1054.0, 18289.0], [1030.0, 24951.0], [1026.0, 23139.0], [1038.0, 23104.0], [1034.0, 22595.0], [1050.0, 22547.0], [1042.0, 23098.0], [1146.0, 17276.0], [1150.0, 17268.0], [1142.0, 19978.0], [1138.0, 20667.0], [1134.0, 20177.0], [1130.0, 20856.0], [1126.0, 20601.0], [1122.0, 20625.0], [1118.0, 21600.0], [1094.0, 20998.0], [1090.0, 13110.0], [1102.0, 21429.0], [1098.0, 21437.0], [1114.0, 21140.0], [1110.0, 18902.0], [1106.0, 17449.0], [1202.0, 17368.0], [1214.0, 18234.0], [1210.0, 23327.0], [1206.0, 17050.0], [1198.0, 18783.2], [1182.0, 20498.0], [1174.0, 18405.0], [1166.0, 17245.0], [1162.0, 17345.666666666668], [1158.0, 23646.0], [1274.0, 17960.0], [1254.0, 16989.0], [1278.0, 22465.0], [1250.0, 23268.0], [1258.0, 16945.0], [1270.0, 22206.0], [1266.0, 22640.0], [1246.0, 19869.5], [1222.0, 17179.0], [1218.0, 23279.0], [1230.0, 23253.0], [1226.0, 17041.0], [1242.0, 16753.0], [1238.0, 17122.0], [1234.0, 18182.0], [1262.0, 16583.0], [1338.0, 17686.5], [1342.0, 20550.0], [1318.0, 19070.0], [1314.0, 17092.0], [1322.0, 20995.0], [1334.0, 20432.0], [1330.0, 18660.0], [1310.0, 19867.0], [1282.0, 16147.0], [1290.0, 20369.0], [1306.0, 21797.0], [1302.0, 21981.0], [1298.0, 17467.0], [1326.0, 20712.0], [1402.0, 18645.0], [1406.0, 12219.0], [1378.0, 12930.0], [1382.0, 13072.0], [1386.0, 17185.0], [1398.0, 18963.0], [1394.0, 18674.0], [1374.0, 19822.0], [1346.0, 15835.0], [1350.0, 13957.0], [1354.0, 20260.0], [1358.0, 20042.0], [1370.0, 13707.0], [1366.0, 19855.0], [1362.0, 15437.0], [1390.0, 12394.0], [1458.0, 16100.0], [1466.0, 14818.0], [1470.0, 14139.0], [1442.0, 17958.0], [1446.0, 16848.0], [1462.0, 14231.0], [1422.0, 17112.0], [1418.0, 16973.0], [1414.0, 18486.0], [1410.0, 12067.0], [1438.0, 15026.0], [1434.0, 15056.0], [1430.0, 17075.0], [1426.0, 12512.0], [1454.0, 14630.0], [1450.0, 16566.0], [1482.0, 13896.0], [1522.0, 12164.0], [1506.0, 13001.0], [1486.0, 13105.0], [1478.0, 13909.0], [1474.0, 12718.0], [1502.0, 13006.0], [1498.0, 14294.0], [1490.0, 13890.0], [1518.0, 13832.0], [1514.0, 13843.0], [1510.0, 13075.0], [1594.0, 12921.0], [1598.0, 12662.0], [1570.0, 11906.0], [1578.0, 11831.0], [1590.0, 12936.0], [1586.0, 11669.0], [1542.0, 13772.0], [1550.0, 12765.0], [1562.0, 12900.0], [1558.0, 12905.0], [1554.0, 12463.0], [1582.0, 13090.0], [1658.0, 8036.0], [1662.0, 7992.0], [1634.0, 9322.0], [1638.0, 11318.0], [1642.0, 9046.0], [1654.0, 10935.0], [1650.0, 9340.0], [1630.0, 10156.0], [1602.0, 10378.0], [1606.0, 10733.0], [1610.0, 9801.0], [1614.0, 11351.0], [1626.0, 9424.0], [1622.0, 11618.0], [1618.0, 13774.0], [1646.0, 9371.0], [1718.0, 9480.0], [1726.0, 10504.0], [1702.0, 7272.0], [1722.0, 12108.0], [1714.0, 8146.0], [1686.0, 11301.0], [1666.0, 8367.0], [1670.0, 8361.0], [1678.0, 9796.0], [1674.0, 9721.0], [1682.0, 8352.0], [1710.0, 11125.0], [1706.0, 11223.0], [1778.0, 6210.0], [1790.0, 9122.0], [1762.0, 11059.0], [1766.0, 9483.0], [1770.0, 10952.0], [1782.0, 10535.0], [1742.0, 8474.0], [1738.0, 10295.0], [1730.0, 10465.0], [1758.0, 11063.0], [1754.0, 6622.0], [1750.0, 9603.0], [1746.0, 11313.0], [1774.0, 7833.0], [1846.0, 9897.0], [1842.0, 9959.0], [1854.0, 11337.0], [1830.0, 9354.0], [1826.0, 10482.0], [1834.0, 10306.0], [1850.0, 11429.0], [1806.0, 9090.0], [1802.0, 11307.5], [1794.0, 7602.0], [1822.0, 11087.0], [1814.0, 9247.0], [1838.0, 8690.0], [1914.0, 10140.0], [1918.0, 10030.0], [1890.0, 9588.0], [1894.0, 8979.0], [1910.0, 6945.0], [1906.0, 8390.0], [1886.0, 8829.0], [1862.0, 11305.0], [1866.0, 8111.0], [1870.0, 9308.0], [1882.0, 8104.0], [1878.0, 10813.0], [1874.0, 7862.0], [1902.0, 10514.0], [1978.0, 8830.0], [1982.0, 9311.0], [1954.0, 9596.0], [1958.0, 9495.0], [1962.0, 8383.0], [1974.0, 9305.0], [1970.0, 9327.0], [1950.0, 12161.0], [1922.0, 6682.0], [1926.0, 9637.5], [1930.0, 9861.0], [1934.0, 9382.0], [1946.0, 9311.0], [1942.0, 8841.0], [1938.0, 9871.0], [1966.0, 8308.0], [2042.0, 6746.0], [2046.0, 7147.0], [2018.0, 10459.0], [2022.0, 7991.0], [2026.0, 7928.0], [2038.0, 7045.0], [2034.0, 7172.0], [2014.0, 7594.0], [1986.0, 9274.0], [1990.0, 9126.0], [1998.0, 8232.0], [2010.0, 7642.0], [2006.0, 8497.0], [2002.0, 11099.0], [2030.0, 7696.0], [2156.0, 8702.0], [2172.0, 8296.0], [2116.0, 7575.5], [2124.0, 8844.0], [2140.0, 8768.0], [2164.0, 8043.666666666667], [2148.0, 8969.0], [2076.0, 8082.4], [2068.0, 6853.0], [2060.0, 8595.0], [2052.0, 7009.0], [2108.0, 9123.0], [2100.0, 6141.0], [2092.0, 6567.0], [2084.0, 6644.0], [2292.0, 9395.0], [2252.0, 7104.0], [2260.0, 7103.0], [2268.0, 9471.0], [2300.0, 9611.0], [2284.0, 9410.0], [2276.0, 9441.0], [2204.0, 5465.0], [2196.0, 7729.0], [2188.0, 6584.0], [2180.0, 8213.0], [2228.0, 8550.0], [2220.0, 7128.0], [2212.0, 5561.0], [2420.0, 10088.0], [2380.0, 10079.0], [2388.0, 7394.0], [2396.0, 9611.0], [2412.0, 11114.0], [2404.0, 6933.5], [2308.0, 9352.0], [2316.0, 9323.0], [2324.0, 9865.0], [2332.0, 9290.0], [2364.0, 9435.0], [2356.0, 9783.0], [2348.0, 9487.0], [2340.0, 9819.0], [2556.0, 12981.0], [2500.0, 10669.0], [2508.0, 8000.0], [2516.0, 13161.0], [2524.0, 10369.0], [2548.0, 13079.0], [2532.0, 10525.5], [2492.0, 8680.0], [2484.0, 11566.0], [2476.0, 9488.0], [2668.0, 8830.0], [2628.0, 10225.0], [2636.0, 10165.0], [2652.0, 10140.0], [2684.0, 8730.0], [2660.0, 8867.0], [2588.0, 9806.0], [2580.0, 12701.0], [2564.0, 11412.0], [2572.0, 10314.0], [2620.0, 9514.5], [2612.0, 9449.0], [2604.0, 9300.0], [2596.0, 12659.0], [2804.0, 2288.0], [2796.0, 2429.0], [2812.0, 2052.0], [2756.0, 4828.0], [2764.0, 4720.0], [2772.0, 4620.0], [2780.0, 4515.0], [2788.0, 2675.0], [2692.0, 8337.0], [2700.0, 9573.0], [2716.0, 9181.0], [2748.0, 7132.0], [2740.0, 8244.0], [2732.0, 8885.0], [2724.0, 8278.0], [2940.0, 5848.0], [2932.0, 5394.0], [2884.0, 4698.0], [2892.0, 4195.0], [2900.0, 5991.0], [2908.0, 5901.0], [2916.0, 3702.0], [2844.0, 4220.0], [2836.0, 4229.0], [2828.0, 4252.0], [2820.0, 1908.0], [2876.0, 4733.0], [2868.0, 6746.0], [2860.0, 6769.0], [2852.0, 4208.0], [2948.0, 5817.0], [2956.0, 5418.0], [2964.0, 5231.0], [2972.0, 4922.0], [2996.0, 5147.0], [2988.0, 5166.0], [2173.0, 8293.0], [2117.0, 8869.0], [2125.0, 7861.0], [2141.0, 7788.0], [2165.0, 8635.0], [2109.0, 7278.0], [2053.0, 8622.0], [2061.0, 6979.0], [2069.0, 8463.0], [2101.0, 7599.0], [2093.0, 8178.0], [2085.0, 8251.0], [2293.0, 9395.0], [2277.0, 9973.0], [2261.0, 8542.0], [2269.0, 5297.0], [2301.0, 11880.0], [2181.0, 8439.0], [2197.0, 5853.0], [2205.0, 5679.0], [2229.0, 8548.0], [2221.0, 8567.0], [2213.0, 8581.0], [2405.0, 6932.0], [2381.0, 8099.0], [2389.0, 7932.0], [2397.0, 9603.0], [2421.0, 8010.0], [2333.0, 9517.0], [2325.0, 9316.0], [2317.0, 9551.0], [2309.0, 9579.0], [2365.0, 11698.0], [2357.0, 9781.0], [2349.0, 9481.0], [2341.0, 9495.0], [2557.0, 10181.0], [2501.0, 10589.0], [2509.0, 10067.0], [2517.0, 10378.0], [2525.0, 10719.0], [2549.0, 10655.0], [2541.0, 10685.0], [2533.0, 10351.0], [2445.0, 10010.666666666666], [2437.0, 10246.0], [2493.0, 8670.0], [2485.0, 9954.0], [2477.0, 8814.0], [2469.0, 9489.0], [2669.0, 10055.0], [2637.0, 10165.0], [2629.0, 9405.0], [2645.0, 9341.0], [2653.0, 9736.0], [2661.0, 9694.0], [2589.0, 10154.0], [2581.0, 10280.0], [2573.0, 10307.0], [2621.0, 10898.0], [2613.0, 9394.0], [2605.0, 12066.0], [2597.0, 12535.0], [2805.0, 2268.0], [2757.0, 4823.0], [2765.0, 4750.0], [2773.0, 4651.0], [2813.0, 2032.0], [2797.0, 2417.0], [2789.0, 2450.0], [2693.0, 9177.0], [2701.0, 9114.0], [2709.0, 8470.0], [2717.0, 8781.0], [2749.0, 7128.0], [2741.0, 7574.0], [2733.0, 8442.0], [2933.0, 6691.0], [2885.0, 4696.0], [2893.0, 4183.0], [2901.0, 5987.0], [2909.0, 7216.0], [2941.0, 5839.0], [2925.0, 6223.5], [2917.0, 5605.0], [2845.0, 4796.0], [2837.0, 4228.0], [2829.0, 4246.0], [2821.0, 1905.0], [2877.0, 4723.0], [2869.0, 6745.0], [2861.0, 4187.0], [2853.0, 4783.0], [2949.0, 5807.0], [2997.0, 5575.0], [2957.0, 5690.0], [2965.0, 5230.0], [2973.0, 4869.0], [2981.0, 5399.5], [1083.0, 21122.0], [1087.0, 13134.0], [1079.0, 19907.0], [1075.0, 21740.0], [1071.0, 20051.0], [1067.0, 13544.0], [1063.0, 20136.0], [1055.0, 22645.0], [1031.0, 24472.0], [1027.0, 23135.0], [1039.0, 15749.0], [1035.0, 21081.0], [1051.0, 22701.0], [1047.0, 15741.0], [1043.0, 16524.0], [1147.0, 21706.0], [1151.0, 23494.0], [1143.0, 19896.0], [1139.0, 20540.0], [1135.0, 20693.0], [1131.0, 20771.0], [1127.0, 20598.0], [1123.0, 21149.0], [1119.0, 20595.0], [1095.0, 17615.0], [1091.0, 19157.0], [1103.0, 21333.0], [1099.0, 21432.0], [1115.0, 21113.0], [1111.0, 20751.0], [1107.0, 20798.0], [1203.0, 19036.0], [1211.0, 17077.0], [1215.0, 23445.0], [1207.0, 18302.0], [1199.0, 19037.0], [1191.0, 20266.0], [1183.0, 17239.0], [1171.0, 18406.0], [1167.0, 18410.0], [1163.0, 18418.0], [1159.0, 18424.0], [1155.0, 18743.5], [1271.0, 22804.0], [1279.0, 20454.0], [1255.0, 16683.0], [1275.0, 20534.0], [1259.0, 16929.0], [1247.0, 18691.0], [1223.0, 17179.0], [1219.0, 17051.0], [1231.0, 18825.0], [1227.0, 21469.0], [1243.0, 16913.0], [1239.0, 22808.0], [1235.0, 17011.0], [1335.0, 14333.0], [1331.0, 20034.0], [1343.0, 20585.0], [1315.0, 14961.0], [1319.0, 21022.0], [1323.0, 20150.0], [1339.0, 20010.0], [1295.0, 22013.0], [1291.0, 22361.0], [1287.0, 19200.0], [1283.0, 22417.0], [1311.0, 19865.0], [1307.0, 19896.0], [1303.0, 20020.0], [1299.0, 20099.0], [1327.0, 15423.0], [1403.0, 18939.0], [1407.0, 18511.0], [1379.0, 13085.0], [1383.0, 14735.0], [1387.0, 19134.0], [1399.0, 18658.0], [1395.0, 12068.0], [1375.0, 20108.0], [1347.0, 19829.0], [1351.0, 14029.0], [1355.0, 20220.0], [1359.0, 19609.0], [1371.0, 14671.0], [1367.0, 20016.0], [1363.0, 15433.0], [1391.0, 16694.0], [1459.0, 16232.0], [1471.0, 14124.0], [1443.0, 10574.0], [1447.0, 16844.0], [1451.0, 16125.0], [1463.0, 16002.0], [1423.0, 16537.0], [1419.0, 11911.0], [1415.0, 17178.0], [1411.0, 18292.0], [1439.0, 17306.0], [1435.0, 16998.0], [1431.0, 12434.0], [1427.0, 17100.0], [1455.0, 11363.0], [1483.0, 13894.0], [1523.0, 12934.0], [1507.0, 12225.0], [1487.0, 13104.0], [1479.0, 14316.0], [1475.0, 14503.0], [1503.0, 12229.0], [1499.0, 13089.0], [1495.0, 12628.0], [1519.0, 13043.0], [1515.0, 12975.0], [1511.0, 13863.0], [1595.0, 11682.0], [1599.0, 11292.0], [1571.0, 13187.0], [1575.0, 13994.0], [1579.0, 11828.0], [1591.0, 11731.0], [1587.0, 12948.0], [1567.0, 11612.0], [1543.0, 13772.25], [1551.0, 12641.0], [1563.0, 12026.0], [1559.0, 12116.0], [1555.0, 13046.0], [1583.0, 11882.0], [1659.0, 5991.0], [1663.0, 7951.0], [1635.0, 13402.0], [1639.0, 13333.0], [1643.0, 9471.0], [1655.0, 6005.0], [1651.0, 12660.0], [1631.0, 11400.0], [1603.0, 12409.0], [1607.0, 10619.0], [1611.0, 10646.0], [1615.0, 11754.0], [1627.0, 9412.0], [1623.0, 9553.0], [1619.0, 13769.0], [1647.0, 9369.0], [1723.0, 7607.0], [1727.0, 7542.0], [1703.0, 8280.0], [1707.0, 11221.0], [1719.0, 11064.0], [1715.0, 8142.0], [1691.0, 11294.0], [1667.0, 11322.0], [1679.0, 11314.0], [1675.0, 7345.0], [1687.0, 12815.0], [1683.0, 8349.0], [1711.0, 9523.0], [1779.0, 6181.0], [1791.0, 9440.0], [1763.0, 11023.0], [1767.0, 6519.0], [1771.0, 7711.0], [1783.0, 7619.0], [1743.0, 9965.0], [1739.0, 7318.0], [1731.0, 8845.0], [1755.0, 7983.0], [1751.0, 11113.0], [1747.0, 9631.0], [1775.0, 9341.0], [1851.0, 11687.0], [1855.0, 9735.0], [1831.0, 11235.5], [1835.0, 9045.0], [1847.0, 11482.0], [1843.0, 11542.0], [1823.0, 12086.0], [1795.0, 10515.0], [1799.0, 12109.0], [1803.0, 12104.0], [1819.0, 10746.5], [1839.0, 11647.0], [1915.0, 6860.0], [1919.0, 7033.0], [1895.0, 7296.0], [1891.0, 10627.0], [1899.0, 7609.0], [1911.0, 7254.0], [1907.0, 7289.0], [1887.0, 7421.0], [1859.0, 9181.0], [1863.0, 11301.0], [1867.0, 11072.0], [1883.0, 10716.0], [1879.0, 9213.0], [1875.0, 8180.0], [1903.0, 7567.0], [1979.0, 9317.0], [1983.0, 9295.0], [1955.0, 8503.0], [1959.0, 9016.0], [1963.0, 8850.0], [1975.0, 8832.0], [1971.0, 8838.0], [1951.0, 8616.0], [1923.0, 9894.0], [1927.0, 8850.0], [1935.0, 8843.0], [1947.0, 8753.0], [1943.0, 9380.0], [1939.0, 12304.0], [1967.0, 9321.0], [2043.0, 7218.0], [2047.0, 7142.0], [2019.0, 7997.0], [2023.0, 7476.0], [2027.0, 7922.0], [2039.0, 6981.0], [2035.0, 7580.0], [2015.0, 8077.0], [1987.0, 8249.0], [1991.0, 8351.0], [1999.0, 8701.0], [2007.0, 8503.0], [2003.0, 8660.0], [2031.0, 7707.0], [2166.0, 8325.0], [2150.0, 8853.5], [2118.0, 8862.0], [2174.0, 8275.0], [2126.0, 7860.0], [2134.0, 8913.333333333334], [2142.0, 8768.0], [2078.0, 7598.0], [2070.0, 6798.0], [2062.0, 8586.0], [2054.0, 7008.0], [2110.0, 7905.0], [2102.0, 7488.0], [2094.0, 6564.0], [2086.0, 6615.0], [2302.0, 8227.0], [2286.0, 8833.0], [2278.0, 9421.0], [2294.0, 9395.0], [2246.0, 8776.2], [2254.0, 7103.5], [2262.0, 7102.0], [2270.0, 6875.0], [2206.0, 5676.0], [2198.0, 6460.0], [2182.0, 7227.0], [2230.0, 8548.0], [2222.0, 8566.0], [2214.0, 7140.0], [2414.0, 10774.5], [2422.0, 6836.0], [2374.0, 8931.0], [2382.0, 9949.0], [2390.0, 7865.0], [2398.0, 9374.0], [2406.0, 9157.0], [2366.0, 13745.0], [2310.0, 9350.0], [2318.0, 9550.0], [2326.0, 9315.0], [2334.0, 9283.0], [2358.0, 11731.0], [2350.0, 9254.0], [2342.0, 9268.0], [2550.0, 10643.0], [2558.0, 10063.0], [2502.0, 10579.0], [2510.0, 10063.0], [2518.0, 13145.0], [2526.0, 10365.0], [2542.0, 10684.0], [2534.0, 10350.0], [2494.0, 8647.0], [2486.0, 11184.0], [2478.0, 10180.666666666666], [2686.0, 9150.5], [2678.0, 9364.666666666666], [2630.0, 9398.0], [2638.0, 10164.0], [2646.0, 9759.0], [2654.0, 10131.0], [2670.0, 9264.0], [2662.0, 8849.0], [2590.0, 12538.0], [2582.0, 10277.0], [2622.0, 8121.0], [2566.0, 10201.0], [2574.0, 9945.0], [2614.0, 9002.0], [2606.0, 9291.0], [2598.0, 12536.0], [2806.0, 2256.0], [2814.0, 2021.0], [2758.0, 4821.0], [2766.0, 4745.0], [2774.0, 4648.0], [2782.0, 3024.5], [2798.0, 2416.0], [2790.0, 2445.0], [2750.0, 7501.0], [2694.0, 8792.0], [2702.0, 8270.0], [2710.0, 8649.0], [2718.0, 9175.0], [2742.0, 6719.0], [2734.0, 7572.0], [2726.0, 8258.0], [2942.0, 5499.0], [2886.0, 6687.0], [2894.0, 4174.0], [2902.0, 7336.0], [2910.0, 3825.0], [2934.0, 5331.0], [2918.0, 5555.0], [2838.0, 4226.0], [2830.0, 4240.0], [2822.0, 1879.0], [2870.0, 4745.0], [2862.0, 4183.0], [2854.0, 4202.0], [2958.0, 5341.0], [2950.0, 5802.0], [2966.0, 5215.0], [2974.0, 4859.0], [2998.0, 5142.0], [2990.0, 5376.5], [2982.0, 5184.0], [2167.0, 7339.0], [2127.0, 9068.0], [2175.0, 8262.0], [2119.0, 9088.0], [2135.0, 8810.0], [2143.0, 8752.0], [2151.0, 7759.0], [2111.0, 9113.0], [2055.0, 7005.0], [2079.0, 6791.0], [2103.0, 7483.0], [2095.0, 6554.0], [2087.0, 8203.0], [2295.0, 8240.0], [2303.0, 9377.0], [2247.0, 7105.0], [2255.0, 8543.0], [2263.0, 9696.0], [2271.0, 9462.0], [2287.0, 9408.0], [2279.0, 9417.0], [2183.0, 8434.0], [2191.0, 7306.666666666667], [2199.0, 6452.0], [2207.0, 7227.0], [2231.0, 7107.0], [2223.0, 5545.0], [2215.0, 7138.0], [2423.0, 9547.0], [2383.0, 9942.0], [2431.0, 10705.666666666666], [2375.0, 8027.0], [2391.0, 7800.0], [2399.0, 9348.0], [2415.0, 6238.0], [2407.0, 7199.0], [2335.0, 9511.0], [2327.0, 9861.0], [2319.0, 9550.0], [2311.0, 9896.0], [2367.0, 8660.0], [2359.0, 9778.0], [2351.0, 9480.0], [2343.0, 9811.0], [2551.0, 10597.0], [2559.0, 10407.0], [2503.0, 8495.0], [2511.0, 10062.0], [2519.0, 10724.0], [2527.0, 13134.0], [2543.0, 10333.0], [2535.0, 10697.0], [2439.0, 8870.0], [2495.0, 10720.0], [2487.0, 8869.0], [2471.0, 8518.857142857143], [2679.0, 9995.0], [2631.0, 9397.0], [2639.0, 10162.0], [2647.0, 9379.0], [2655.0, 10129.0], [2671.0, 9258.0], [2663.0, 8849.0], [2583.0, 9879.0], [2623.0, 8461.0], [2567.0, 12907.0], [2575.0, 12713.0], [2615.0, 11585.0], [2607.0, 9637.0], [2599.0, 12534.0], [2807.0, 2236.0], [2815.0, 2017.0], [2767.0, 4736.0], [2775.0, 3799.0], [2783.0, 3023.0], [2799.0, 2413.0], [2791.0, 2444.0], [2695.0, 8327.0], [2703.0, 9105.0], [2711.0, 9018.0], [2719.0, 8395.0], [2743.0, 6716.0], [2735.0, 7566.0], [2727.0, 8628.0], [2935.0, 6634.0], [2895.0, 4130.0], [2943.0, 5827.0], [2887.0, 6684.0], [2903.0, 5944.0], [2911.0, 5809.0], [2927.0, 6194.0], [2847.0, 4217.0], [2839.0, 4225.0], [2831.0, 4237.0], [2823.0, 4257.0], [2863.0, 4761.0], [2855.0, 6780.0], [2959.0, 5298.0], [2967.0, 5399.0], [2975.0, 5630.0], [2999.0, 5564.0], [2991.0, 5160.0], [2983.0, 5609.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2560.840726988477, 12298.134942348983]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4191.366666666667, "minX": 1.6830327E12, "maxY": 26907.766666666666, "series": [{"data": [[1.68303282E12, 26907.766666666666], [1.683033E12, 17371.733333333334], [1.6830327E12, 5224.016666666666], [1.68303288E12, 20990.7], [1.68303276E12, 20827.3], [1.68303294E12, 17284.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68303282E12, 20729.133333333335], [1.683033E12, 13923.433333333332], [1.6830327E12, 4191.366666666667], [1.68303288E12, 16866.666666666668], [1.68303276E12, 16706.433333333334], [1.68303294E12, 13889.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.683033E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7574.497500000006, "minX": 1.6830327E12, "maxY": 22884.497880072704, "series": [{"data": [[1.68303282E12, 11519.000406834828], [1.683033E12, 22884.497880072704], [1.6830327E12, 10348.257545271628], [1.68303288E12, 7574.497500000006], [1.68303276E12, 13286.620393740532], [1.68303294E12, 7984.353369763197]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.683033E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7574.488499999993, "minX": 1.6830327E12, "maxY": 22884.49121744398, "series": [{"data": [[1.68303282E12, 11518.986167615956], [1.683033E12, 22884.49121744398], [1.6830327E12, 10348.17706237426], [1.68303288E12, 7574.488499999993], [1.68303276E12, 13286.596163553744], [1.68303294E12, 7984.312082574376]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.683033E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.36765596608116324, "minX": 1.6830327E12, "maxY": 341.31651749389755, "series": [{"data": [[1.68303282E12, 341.31651749389755], [1.683033E12, 0.36765596608116324], [1.6830327E12, 5.006036217303816], [1.68303288E12, 0.8054999999999979], [1.68303276E12, 1.0116102978293815], [1.68303294E12, 0.3891924711596835]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.683033E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1016.0, "minX": 1.6830327E12, "maxY": 40616.0, "series": [{"data": [[1.68303282E12, 26563.0], [1.683033E12, 40616.0], [1.6830327E12, 16046.0], [1.68303288E12, 16618.0], [1.68303276E12, 22423.0], [1.68303294E12, 13864.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68303282E12, 19916.399999999998], [1.683033E12, 33770.8], [1.6830327E12, 13875.8], [1.68303288E12, 10998.9], [1.68303276E12, 18418.8], [1.68303294E12, 10690.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68303282E12, 23894.82], [1.683033E12, 40505.0], [1.6830327E12, 15974.04], [1.68303288E12, 13857.77], [1.68303276E12, 21355.440000000002], [1.68303294E12, 12873.88]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68303282E12, 21060.05], [1.683033E12, 37698.59999999999], [1.6830327E12, 14711.9], [1.68303288E12, 12131.599999999999], [1.68303276E12, 19544.199999999997], [1.68303294E12, 11622.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68303282E12, 1016.0], [1.683033E12, 9046.0], [1.6830327E12, 2450.0], [1.68303288E12, 2728.0], [1.68303276E12, 4726.0], [1.68303294E12, 1879.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68303282E12, 11481.0], [1.683033E12, 21017.0], [1.6830327E12, 11216.0], [1.68303288E12, 7175.5], [1.68303276E12, 14112.0], [1.68303294E12, 8262.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.683033E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5306.5, "minX": 1.0, "maxY": 34191.5, "series": [{"data": [[2.0, 5432.0], [3.0, 14115.5], [4.0, 11993.5], [5.0, 12014.0], [6.0, 6220.0], [7.0, 6238.0], [8.0, 6047.5], [9.0, 6324.5], [10.0, 8326.5], [11.0, 13080.0], [12.0, 20296.5], [13.0, 17647.5], [14.0, 7374.0], [15.0, 18270.5], [16.0, 9871.0], [17.0, 17958.0], [18.0, 9200.5], [19.0, 10279.5], [20.0, 13441.5], [21.0, 11874.0], [22.0, 18838.0], [23.0, 7152.0], [24.0, 14004.0], [25.0, 5810.5], [26.0, 8418.5], [27.0, 7216.0], [28.0, 7839.5], [29.0, 10427.5], [30.0, 8395.0], [31.0, 7100.0], [32.0, 5385.5], [33.0, 12732.0], [35.0, 11438.0], [34.0, 5306.5], [36.0, 9213.5], [37.0, 11266.0], [39.0, 10148.0], [38.0, 14375.5], [41.0, 9076.5], [40.0, 8249.0], [43.0, 9962.0], [42.0, 21480.0], [44.0, 10361.0], [45.0, 10955.0], [46.0, 16910.0], [47.0, 8504.0], [49.0, 7763.0], [48.0, 5837.0], [50.0, 8695.0], [51.0, 6700.0], [53.0, 6862.0], [52.0, 9311.0], [55.0, 12538.0], [57.0, 17792.0], [56.0, 14088.5], [59.0, 12919.0], [58.0, 23391.5], [61.0, 8219.0], [60.0, 9654.5], [63.0, 5649.0], [66.0, 15660.0], [64.0, 8261.0], [65.0, 6087.0], [67.0, 8732.0], [69.0, 6118.0], [68.0, 6385.0], [71.0, 13104.0], [74.0, 12584.5], [76.0, 8969.5], [83.0, 10104.0], [85.0, 12115.0], [91.0, 7497.0], [90.0, 5458.5], [89.0, 9370.0], [92.0, 13129.0], [95.0, 12842.0], [94.0, 5412.5], [93.0, 11873.0], [96.0, 17430.5], [100.0, 12821.5], [104.0, 10013.0], [107.0, 8147.0], [112.0, 28371.5], [118.0, 12171.0], [123.0, 18018.0], [125.0, 18405.0], [131.0, 19826.0], [128.0, 15454.5], [142.0, 14914.5], [138.0, 6787.5], [147.0, 14302.0], [148.0, 34191.5], [159.0, 22634.0], [163.0, 9323.0], [1.0, 8660.0], [316.0, 19271.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 316.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 5306.5, "minX": 1.0, "maxY": 34191.5, "series": [{"data": [[2.0, 5432.0], [3.0, 14115.5], [4.0, 11993.5], [5.0, 12014.0], [6.0, 6220.0], [7.0, 6238.0], [8.0, 6047.0], [9.0, 6324.5], [10.0, 8326.5], [11.0, 13080.0], [12.0, 20296.5], [13.0, 17647.5], [14.0, 7374.0], [15.0, 18270.5], [16.0, 9871.0], [17.0, 17958.0], [18.0, 9200.5], [19.0, 10279.5], [20.0, 13441.0], [21.0, 11874.0], [22.0, 18838.0], [23.0, 7152.0], [24.0, 14004.0], [25.0, 5810.5], [26.0, 8418.5], [27.0, 7216.0], [28.0, 7839.5], [29.0, 10427.5], [30.0, 8395.0], [31.0, 7100.0], [32.0, 5385.5], [33.0, 12732.0], [35.0, 11438.0], [34.0, 5306.5], [36.0, 9213.5], [37.0, 11266.0], [39.0, 10148.0], [38.0, 14375.5], [41.0, 9076.5], [40.0, 8249.0], [43.0, 9962.0], [42.0, 21480.0], [44.0, 10361.0], [45.0, 10955.0], [46.0, 16910.0], [47.0, 8504.0], [49.0, 7763.0], [48.0, 5837.0], [50.0, 8695.0], [51.0, 6700.0], [53.0, 6862.0], [52.0, 9310.5], [55.0, 12538.0], [57.0, 17792.0], [56.0, 14088.5], [59.0, 12919.0], [58.0, 23391.5], [61.0, 8219.0], [60.0, 9654.5], [63.0, 5649.0], [66.0, 15660.0], [64.0, 8261.0], [65.0, 6087.0], [67.0, 8732.0], [69.0, 6118.0], [68.0, 6385.0], [71.0, 13104.0], [74.0, 12584.5], [76.0, 8969.5], [83.0, 10104.0], [85.0, 12115.0], [91.0, 7497.0], [90.0, 5458.5], [89.0, 9370.0], [92.0, 13129.0], [95.0, 12842.0], [94.0, 5412.5], [93.0, 11873.0], [96.0, 17430.5], [100.0, 12821.5], [104.0, 10013.0], [107.0, 8147.0], [112.0, 28371.5], [118.0, 12171.0], [123.0, 18018.0], [125.0, 18405.0], [131.0, 19826.0], [128.0, 15454.5], [142.0, 14914.5], [138.0, 6787.5], [147.0, 14302.0], [148.0, 34191.5], [159.0, 22634.0], [163.0, 9323.0], [1.0, 8660.0], [316.0, 19271.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 316.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 17.0, "minX": 1.6830327E12, "maxY": 35.7, "series": [{"data": [[1.68303282E12, 35.7], [1.683033E12, 17.566666666666666], [1.6830327E12, 17.0], [1.68303288E12, 32.86666666666667], [1.68303276E12, 32.86666666666667], [1.68303294E12, 34.56666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.683033E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 8.283333333333333, "minX": 1.6830327E12, "maxY": 40.96666666666667, "series": [{"data": [[1.68303282E12, 40.96666666666667], [1.683033E12, 27.516666666666666], [1.6830327E12, 8.283333333333333], [1.68303288E12, 33.333333333333336], [1.68303276E12, 33.016666666666666], [1.68303294E12, 27.45]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.683033E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.283333333333333, "minX": 1.6830327E12, "maxY": 40.96666666666667, "series": [{"data": [[1.68303282E12, 40.96666666666667], [1.683033E12, 27.516666666666666], [1.6830327E12, 8.283333333333333], [1.68303288E12, 33.333333333333336], [1.68303276E12, 33.016666666666666], [1.68303294E12, 27.45]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.683033E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 8.283333333333333, "minX": 1.6830327E12, "maxY": 40.96666666666667, "series": [{"data": [[1.68303282E12, 40.96666666666667], [1.683033E12, 27.516666666666666], [1.6830327E12, 8.283333333333333], [1.68303288E12, 33.333333333333336], [1.68303276E12, 33.016666666666666], [1.68303294E12, 27.45]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.683033E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

