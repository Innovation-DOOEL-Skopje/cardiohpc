/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1799.0, "minX": 0.0, "maxY": 3489.0, "series": [{"data": [[0.0, 1799.0], [0.1, 1816.0], [0.2, 1826.0], [0.3, 1833.0], [0.4, 1848.0], [0.5, 1853.0], [0.6, 1855.0], [0.7, 1857.0], [0.8, 1864.0], [0.9, 1865.0], [1.0, 1868.0], [1.1, 1870.0], [1.2, 1872.0], [1.3, 1876.0], [1.4, 1877.0], [1.5, 1879.0], [1.6, 1885.0], [1.7, 1885.0], [1.8, 1887.0], [1.9, 1888.0], [2.0, 1889.0], [2.1, 1890.0], [2.2, 1892.0], [2.3, 1893.0], [2.4, 1893.0], [2.5, 1896.0], [2.6, 1900.0], [2.7, 1900.0], [2.8, 1902.0], [2.9, 1902.0], [3.0, 1903.0], [3.1, 1904.0], [3.2, 1904.0], [3.3, 1906.0], [3.4, 1906.0], [3.5, 1908.0], [3.6, 1910.0], [3.7, 1910.0], [3.8, 1910.0], [3.9, 1911.0], [4.0, 1912.0], [4.1, 1912.0], [4.2, 1914.0], [4.3, 1915.0], [4.4, 1915.0], [4.5, 1916.0], [4.6, 1916.0], [4.7, 1917.0], [4.8, 1918.0], [4.9, 1919.0], [5.0, 1920.0], [5.1, 1921.0], [5.2, 1922.0], [5.3, 1922.0], [5.4, 1922.0], [5.5, 1924.0], [5.6, 1924.0], [5.7, 1924.0], [5.8, 1925.0], [5.9, 1926.0], [6.0, 1927.0], [6.1, 1927.0], [6.2, 1928.0], [6.3, 1929.0], [6.4, 1930.0], [6.5, 1931.0], [6.6, 1932.0], [6.7, 1932.0], [6.8, 1933.0], [6.9, 1934.0], [7.0, 1934.0], [7.1, 1934.0], [7.2, 1936.0], [7.3, 1936.0], [7.4, 1937.0], [7.5, 1938.0], [7.6, 1938.0], [7.7, 1938.0], [7.8, 1938.0], [7.9, 1940.0], [8.0, 1940.0], [8.1, 1941.0], [8.2, 1941.0], [8.3, 1941.0], [8.4, 1942.0], [8.5, 1942.0], [8.6, 1943.0], [8.7, 1943.0], [8.8, 1944.0], [8.9, 1944.0], [9.0, 1945.0], [9.1, 1946.0], [9.2, 1946.0], [9.3, 1946.0], [9.4, 1947.0], [9.5, 1947.0], [9.6, 1948.0], [9.7, 1948.0], [9.8, 1948.0], [9.9, 1948.0], [10.0, 1949.0], [10.1, 1949.0], [10.2, 1950.0], [10.3, 1950.0], [10.4, 1951.0], [10.5, 1951.0], [10.6, 1951.0], [10.7, 1952.0], [10.8, 1953.0], [10.9, 1953.0], [11.0, 1954.0], [11.1, 1954.0], [11.2, 1954.0], [11.3, 1955.0], [11.4, 1955.0], [11.5, 1955.0], [11.6, 1955.0], [11.7, 1955.0], [11.8, 1956.0], [11.9, 1956.0], [12.0, 1956.0], [12.1, 1957.0], [12.2, 1957.0], [12.3, 1957.0], [12.4, 1958.0], [12.5, 1958.0], [12.6, 1959.0], [12.7, 1959.0], [12.8, 1960.0], [12.9, 1960.0], [13.0, 1960.0], [13.1, 1960.0], [13.2, 1961.0], [13.3, 1962.0], [13.4, 1962.0], [13.5, 1962.0], [13.6, 1963.0], [13.7, 1963.0], [13.8, 1963.0], [13.9, 1963.0], [14.0, 1964.0], [14.1, 1964.0], [14.2, 1965.0], [14.3, 1965.0], [14.4, 1965.0], [14.5, 1966.0], [14.6, 1966.0], [14.7, 1966.0], [14.8, 1967.0], [14.9, 1967.0], [15.0, 1967.0], [15.1, 1967.0], [15.2, 1968.0], [15.3, 1968.0], [15.4, 1969.0], [15.5, 1969.0], [15.6, 1969.0], [15.7, 1969.0], [15.8, 1970.0], [15.9, 1970.0], [16.0, 1970.0], [16.1, 1970.0], [16.2, 1971.0], [16.3, 1971.0], [16.4, 1971.0], [16.5, 1971.0], [16.6, 1971.0], [16.7, 1972.0], [16.8, 1972.0], [16.9, 1972.0], [17.0, 1972.0], [17.1, 1973.0], [17.2, 1973.0], [17.3, 1973.0], [17.4, 1974.0], [17.5, 1974.0], [17.6, 1975.0], [17.7, 1975.0], [17.8, 1976.0], [17.9, 1976.0], [18.0, 1976.0], [18.1, 1976.0], [18.2, 1976.0], [18.3, 1977.0], [18.4, 1977.0], [18.5, 1977.0], [18.6, 1977.0], [18.7, 1978.0], [18.8, 1978.0], [18.9, 1978.0], [19.0, 1979.0], [19.1, 1979.0], [19.2, 1979.0], [19.3, 1980.0], [19.4, 1980.0], [19.5, 1980.0], [19.6, 1980.0], [19.7, 1980.0], [19.8, 1980.0], [19.9, 1981.0], [20.0, 1981.0], [20.1, 1981.0], [20.2, 1981.0], [20.3, 1982.0], [20.4, 1982.0], [20.5, 1982.0], [20.6, 1983.0], [20.7, 1983.0], [20.8, 1983.0], [20.9, 1983.0], [21.0, 1983.0], [21.1, 1984.0], [21.2, 1984.0], [21.3, 1984.0], [21.4, 1984.0], [21.5, 1984.0], [21.6, 1985.0], [21.7, 1985.0], [21.8, 1985.0], [21.9, 1986.0], [22.0, 1986.0], [22.1, 1986.0], [22.2, 1987.0], [22.3, 1987.0], [22.4, 1987.0], [22.5, 1987.0], [22.6, 1987.0], [22.7, 1988.0], [22.8, 1988.0], [22.9, 1988.0], [23.0, 1988.0], [23.1, 1988.0], [23.2, 1989.0], [23.3, 1989.0], [23.4, 1990.0], [23.5, 1991.0], [23.6, 1991.0], [23.7, 1991.0], [23.8, 1991.0], [23.9, 1991.0], [24.0, 1992.0], [24.1, 1992.0], [24.2, 1992.0], [24.3, 1992.0], [24.4, 1992.0], [24.5, 1993.0], [24.6, 1993.0], [24.7, 1993.0], [24.8, 1994.0], [24.9, 1994.0], [25.0, 1994.0], [25.1, 1994.0], [25.2, 1995.0], [25.3, 1995.0], [25.4, 1995.0], [25.5, 1995.0], [25.6, 1995.0], [25.7, 1996.0], [25.8, 1996.0], [25.9, 1996.0], [26.0, 1996.0], [26.1, 1997.0], [26.2, 1997.0], [26.3, 1997.0], [26.4, 1997.0], [26.5, 1997.0], [26.6, 1998.0], [26.7, 1998.0], [26.8, 1998.0], [26.9, 1998.0], [27.0, 1999.0], [27.1, 1999.0], [27.2, 1999.0], [27.3, 2000.0], [27.4, 2000.0], [27.5, 2000.0], [27.6, 2000.0], [27.7, 2000.0], [27.8, 2000.0], [27.9, 2000.0], [28.0, 2001.0], [28.1, 2001.0], [28.2, 2001.0], [28.3, 2001.0], [28.4, 2001.0], [28.5, 2001.0], [28.6, 2002.0], [28.7, 2002.0], [28.8, 2002.0], [28.9, 2002.0], [29.0, 2002.0], [29.1, 2002.0], [29.2, 2002.0], [29.3, 2003.0], [29.4, 2003.0], [29.5, 2003.0], [29.6, 2003.0], [29.7, 2003.0], [29.8, 2004.0], [29.9, 2004.0], [30.0, 2004.0], [30.1, 2005.0], [30.2, 2005.0], [30.3, 2005.0], [30.4, 2005.0], [30.5, 2005.0], [30.6, 2005.0], [30.7, 2005.0], [30.8, 2005.0], [30.9, 2005.0], [31.0, 2006.0], [31.1, 2006.0], [31.2, 2006.0], [31.3, 2007.0], [31.4, 2007.0], [31.5, 2007.0], [31.6, 2007.0], [31.7, 2007.0], [31.8, 2007.0], [31.9, 2007.0], [32.0, 2007.0], [32.1, 2008.0], [32.2, 2008.0], [32.3, 2008.0], [32.4, 2008.0], [32.5, 2008.0], [32.6, 2008.0], [32.7, 2008.0], [32.8, 2008.0], [32.9, 2009.0], [33.0, 2009.0], [33.1, 2009.0], [33.2, 2009.0], [33.3, 2010.0], [33.4, 2010.0], [33.5, 2010.0], [33.6, 2010.0], [33.7, 2010.0], [33.8, 2011.0], [33.9, 2011.0], [34.0, 2011.0], [34.1, 2011.0], [34.2, 2012.0], [34.3, 2012.0], [34.4, 2012.0], [34.5, 2013.0], [34.6, 2013.0], [34.7, 2013.0], [34.8, 2013.0], [34.9, 2014.0], [35.0, 2014.0], [35.1, 2014.0], [35.2, 2014.0], [35.3, 2014.0], [35.4, 2015.0], [35.5, 2015.0], [35.6, 2015.0], [35.7, 2015.0], [35.8, 2015.0], [35.9, 2016.0], [36.0, 2016.0], [36.1, 2016.0], [36.2, 2016.0], [36.3, 2017.0], [36.4, 2017.0], [36.5, 2017.0], [36.6, 2017.0], [36.7, 2017.0], [36.8, 2017.0], [36.9, 2018.0], [37.0, 2018.0], [37.1, 2018.0], [37.2, 2018.0], [37.3, 2019.0], [37.4, 2019.0], [37.5, 2019.0], [37.6, 2019.0], [37.7, 2019.0], [37.8, 2020.0], [37.9, 2020.0], [38.0, 2020.0], [38.1, 2020.0], [38.2, 2020.0], [38.3, 2021.0], [38.4, 2021.0], [38.5, 2021.0], [38.6, 2021.0], [38.7, 2022.0], [38.8, 2022.0], [38.9, 2022.0], [39.0, 2022.0], [39.1, 2022.0], [39.2, 2023.0], [39.3, 2023.0], [39.4, 2023.0], [39.5, 2023.0], [39.6, 2024.0], [39.7, 2024.0], [39.8, 2024.0], [39.9, 2024.0], [40.0, 2024.0], [40.1, 2024.0], [40.2, 2024.0], [40.3, 2024.0], [40.4, 2024.0], [40.5, 2025.0], [40.6, 2025.0], [40.7, 2025.0], [40.8, 2025.0], [40.9, 2025.0], [41.0, 2026.0], [41.1, 2026.0], [41.2, 2027.0], [41.3, 2027.0], [41.4, 2027.0], [41.5, 2027.0], [41.6, 2027.0], [41.7, 2027.0], [41.8, 2027.0], [41.9, 2028.0], [42.0, 2028.0], [42.1, 2028.0], [42.2, 2029.0], [42.3, 2029.0], [42.4, 2029.0], [42.5, 2029.0], [42.6, 2029.0], [42.7, 2030.0], [42.8, 2030.0], [42.9, 2030.0], [43.0, 2030.0], [43.1, 2031.0], [43.2, 2031.0], [43.3, 2031.0], [43.4, 2031.0], [43.5, 2031.0], [43.6, 2032.0], [43.7, 2032.0], [43.8, 2032.0], [43.9, 2032.0], [44.0, 2032.0], [44.1, 2033.0], [44.2, 2033.0], [44.3, 2033.0], [44.4, 2033.0], [44.5, 2033.0], [44.6, 2033.0], [44.7, 2033.0], [44.8, 2033.0], [44.9, 2034.0], [45.0, 2034.0], [45.1, 2034.0], [45.2, 2034.0], [45.3, 2035.0], [45.4, 2035.0], [45.5, 2035.0], [45.6, 2035.0], [45.7, 2035.0], [45.8, 2035.0], [45.9, 2036.0], [46.0, 2036.0], [46.1, 2036.0], [46.2, 2036.0], [46.3, 2037.0], [46.4, 2037.0], [46.5, 2037.0], [46.6, 2037.0], [46.7, 2037.0], [46.8, 2038.0], [46.9, 2038.0], [47.0, 2038.0], [47.1, 2038.0], [47.2, 2038.0], [47.3, 2039.0], [47.4, 2039.0], [47.5, 2039.0], [47.6, 2039.0], [47.7, 2039.0], [47.8, 2039.0], [47.9, 2040.0], [48.0, 2040.0], [48.1, 2040.0], [48.2, 2040.0], [48.3, 2040.0], [48.4, 2040.0], [48.5, 2040.0], [48.6, 2041.0], [48.7, 2041.0], [48.8, 2041.0], [48.9, 2041.0], [49.0, 2041.0], [49.1, 2041.0], [49.2, 2041.0], [49.3, 2042.0], [49.4, 2042.0], [49.5, 2042.0], [49.6, 2042.0], [49.7, 2042.0], [49.8, 2043.0], [49.9, 2043.0], [50.0, 2043.0], [50.1, 2043.0], [50.2, 2044.0], [50.3, 2044.0], [50.4, 2044.0], [50.5, 2044.0], [50.6, 2044.0], [50.7, 2044.0], [50.8, 2045.0], [50.9, 2045.0], [51.0, 2045.0], [51.1, 2045.0], [51.2, 2045.0], [51.3, 2046.0], [51.4, 2046.0], [51.5, 2046.0], [51.6, 2046.0], [51.7, 2046.0], [51.8, 2047.0], [51.9, 2047.0], [52.0, 2047.0], [52.1, 2047.0], [52.2, 2047.0], [52.3, 2048.0], [52.4, 2048.0], [52.5, 2048.0], [52.6, 2048.0], [52.7, 2048.0], [52.8, 2048.0], [52.9, 2048.0], [53.0, 2049.0], [53.1, 2049.0], [53.2, 2049.0], [53.3, 2049.0], [53.4, 2049.0], [53.5, 2049.0], [53.6, 2049.0], [53.7, 2049.0], [53.8, 2049.0], [53.9, 2050.0], [54.0, 2050.0], [54.1, 2050.0], [54.2, 2050.0], [54.3, 2050.0], [54.4, 2050.0], [54.5, 2051.0], [54.6, 2051.0], [54.7, 2051.0], [54.8, 2051.0], [54.9, 2052.0], [55.0, 2052.0], [55.1, 2052.0], [55.2, 2052.0], [55.3, 2052.0], [55.4, 2052.0], [55.5, 2052.0], [55.6, 2052.0], [55.7, 2053.0], [55.8, 2053.0], [55.9, 2053.0], [56.0, 2053.0], [56.1, 2053.0], [56.2, 2053.0], [56.3, 2053.0], [56.4, 2054.0], [56.5, 2054.0], [56.6, 2054.0], [56.7, 2054.0], [56.8, 2054.0], [56.9, 2054.0], [57.0, 2054.0], [57.1, 2054.0], [57.2, 2054.0], [57.3, 2055.0], [57.4, 2055.0], [57.5, 2055.0], [57.6, 2055.0], [57.7, 2055.0], [57.8, 2056.0], [57.9, 2056.0], [58.0, 2056.0], [58.1, 2056.0], [58.2, 2056.0], [58.3, 2056.0], [58.4, 2056.0], [58.5, 2057.0], [58.6, 2057.0], [58.7, 2057.0], [58.8, 2057.0], [58.9, 2057.0], [59.0, 2057.0], [59.1, 2058.0], [59.2, 2058.0], [59.3, 2059.0], [59.4, 2059.0], [59.5, 2059.0], [59.6, 2060.0], [59.7, 2060.0], [59.8, 2060.0], [59.9, 2060.0], [60.0, 2060.0], [60.1, 2060.0], [60.2, 2060.0], [60.3, 2061.0], [60.4, 2061.0], [60.5, 2061.0], [60.6, 2061.0], [60.7, 2061.0], [60.8, 2062.0], [60.9, 2062.0], [61.0, 2062.0], [61.1, 2062.0], [61.2, 2062.0], [61.3, 2062.0], [61.4, 2062.0], [61.5, 2063.0], [61.6, 2063.0], [61.7, 2063.0], [61.8, 2064.0], [61.9, 2064.0], [62.0, 2064.0], [62.1, 2064.0], [62.2, 2064.0], [62.3, 2065.0], [62.4, 2065.0], [62.5, 2065.0], [62.6, 2065.0], [62.7, 2065.0], [62.8, 2065.0], [62.9, 2066.0], [63.0, 2066.0], [63.1, 2066.0], [63.2, 2066.0], [63.3, 2066.0], [63.4, 2066.0], [63.5, 2067.0], [63.6, 2067.0], [63.7, 2067.0], [63.8, 2067.0], [63.9, 2067.0], [64.0, 2067.0], [64.1, 2068.0], [64.2, 2068.0], [64.3, 2068.0], [64.4, 2068.0], [64.5, 2069.0], [64.6, 2069.0], [64.7, 2069.0], [64.8, 2070.0], [64.9, 2070.0], [65.0, 2070.0], [65.1, 2070.0], [65.2, 2070.0], [65.3, 2070.0], [65.4, 2070.0], [65.5, 2071.0], [65.6, 2071.0], [65.7, 2071.0], [65.8, 2071.0], [65.9, 2071.0], [66.0, 2071.0], [66.1, 2071.0], [66.2, 2072.0], [66.3, 2072.0], [66.4, 2072.0], [66.5, 2072.0], [66.6, 2072.0], [66.7, 2073.0], [66.8, 2073.0], [66.9, 2074.0], [67.0, 2074.0], [67.1, 2074.0], [67.2, 2074.0], [67.3, 2074.0], [67.4, 2075.0], [67.5, 2075.0], [67.6, 2075.0], [67.7, 2075.0], [67.8, 2076.0], [67.9, 2076.0], [68.0, 2076.0], [68.1, 2076.0], [68.2, 2076.0], [68.3, 2077.0], [68.4, 2077.0], [68.5, 2077.0], [68.6, 2077.0], [68.7, 2078.0], [68.8, 2078.0], [68.9, 2078.0], [69.0, 2078.0], [69.1, 2078.0], [69.2, 2078.0], [69.3, 2079.0], [69.4, 2079.0], [69.5, 2079.0], [69.6, 2079.0], [69.7, 2079.0], [69.8, 2080.0], [69.9, 2080.0], [70.0, 2080.0], [70.1, 2080.0], [70.2, 2080.0], [70.3, 2081.0], [70.4, 2081.0], [70.5, 2082.0], [70.6, 2082.0], [70.7, 2082.0], [70.8, 2083.0], [70.9, 2083.0], [71.0, 2084.0], [71.1, 2084.0], [71.2, 2084.0], [71.3, 2084.0], [71.4, 2085.0], [71.5, 2085.0], [71.6, 2085.0], [71.7, 2086.0], [71.8, 2086.0], [71.9, 2086.0], [72.0, 2087.0], [72.1, 2087.0], [72.2, 2087.0], [72.3, 2087.0], [72.4, 2087.0], [72.5, 2088.0], [72.6, 2088.0], [72.7, 2088.0], [72.8, 2088.0], [72.9, 2089.0], [73.0, 2089.0], [73.1, 2089.0], [73.2, 2089.0], [73.3, 2090.0], [73.4, 2090.0], [73.5, 2090.0], [73.6, 2090.0], [73.7, 2091.0], [73.8, 2091.0], [73.9, 2091.0], [74.0, 2091.0], [74.1, 2091.0], [74.2, 2092.0], [74.3, 2092.0], [74.4, 2092.0], [74.5, 2092.0], [74.6, 2092.0], [74.7, 2093.0], [74.8, 2093.0], [74.9, 2093.0], [75.0, 2094.0], [75.1, 2094.0], [75.2, 2095.0], [75.3, 2095.0], [75.4, 2095.0], [75.5, 2096.0], [75.6, 2096.0], [75.7, 2096.0], [75.8, 2096.0], [75.9, 2097.0], [76.0, 2097.0], [76.1, 2097.0], [76.2, 2097.0], [76.3, 2098.0], [76.4, 2098.0], [76.5, 2099.0], [76.6, 2099.0], [76.7, 2099.0], [76.8, 2100.0], [76.9, 2100.0], [77.0, 2100.0], [77.1, 2101.0], [77.2, 2101.0], [77.3, 2101.0], [77.4, 2102.0], [77.5, 2102.0], [77.6, 2102.0], [77.7, 2102.0], [77.8, 2103.0], [77.9, 2103.0], [78.0, 2103.0], [78.1, 2103.0], [78.2, 2104.0], [78.3, 2104.0], [78.4, 2104.0], [78.5, 2105.0], [78.6, 2105.0], [78.7, 2105.0], [78.8, 2106.0], [78.9, 2106.0], [79.0, 2107.0], [79.1, 2108.0], [79.2, 2108.0], [79.3, 2108.0], [79.4, 2109.0], [79.5, 2109.0], [79.6, 2110.0], [79.7, 2110.0], [79.8, 2110.0], [79.9, 2111.0], [80.0, 2111.0], [80.1, 2111.0], [80.2, 2111.0], [80.3, 2112.0], [80.4, 2112.0], [80.5, 2112.0], [80.6, 2112.0], [80.7, 2113.0], [80.8, 2113.0], [80.9, 2114.0], [81.0, 2114.0], [81.1, 2114.0], [81.2, 2114.0], [81.3, 2115.0], [81.4, 2115.0], [81.5, 2116.0], [81.6, 2116.0], [81.7, 2117.0], [81.8, 2117.0], [81.9, 2118.0], [82.0, 2119.0], [82.1, 2119.0], [82.2, 2120.0], [82.3, 2120.0], [82.4, 2121.0], [82.5, 2122.0], [82.6, 2122.0], [82.7, 2123.0], [82.8, 2123.0], [82.9, 2123.0], [83.0, 2124.0], [83.1, 2124.0], [83.2, 2124.0], [83.3, 2125.0], [83.4, 2127.0], [83.5, 2127.0], [83.6, 2129.0], [83.7, 2131.0], [83.8, 2132.0], [83.9, 2133.0], [84.0, 2133.0], [84.1, 2134.0], [84.2, 2135.0], [84.3, 2136.0], [84.4, 2136.0], [84.5, 2136.0], [84.6, 2138.0], [84.7, 2138.0], [84.8, 2138.0], [84.9, 2139.0], [85.0, 2140.0], [85.1, 2140.0], [85.2, 2141.0], [85.3, 2143.0], [85.4, 2144.0], [85.5, 2144.0], [85.6, 2145.0], [85.7, 2146.0], [85.8, 2147.0], [85.9, 2148.0], [86.0, 2148.0], [86.1, 2149.0], [86.2, 2151.0], [86.3, 2151.0], [86.4, 2155.0], [86.5, 2155.0], [86.6, 2156.0], [86.7, 2157.0], [86.8, 2158.0], [86.9, 2160.0], [87.0, 2160.0], [87.1, 2162.0], [87.2, 2163.0], [87.3, 2164.0], [87.4, 2165.0], [87.5, 2166.0], [87.6, 2167.0], [87.7, 2169.0], [87.8, 2170.0], [87.9, 2170.0], [88.0, 2171.0], [88.1, 2173.0], [88.2, 2174.0], [88.3, 2175.0], [88.4, 2176.0], [88.5, 2178.0], [88.6, 2178.0], [88.7, 2179.0], [88.8, 2181.0], [88.9, 2182.0], [89.0, 2182.0], [89.1, 2185.0], [89.2, 2185.0], [89.3, 2187.0], [89.4, 2189.0], [89.5, 2191.0], [89.6, 2192.0], [89.7, 2193.0], [89.8, 2195.0], [89.9, 2197.0], [90.0, 2197.0], [90.1, 2198.0], [90.2, 2204.0], [90.3, 2205.0], [90.4, 2207.0], [90.5, 2210.0], [90.6, 2211.0], [90.7, 2212.0], [90.8, 2213.0], [90.9, 2215.0], [91.0, 2217.0], [91.1, 2219.0], [91.2, 2220.0], [91.3, 2223.0], [91.4, 2224.0], [91.5, 2226.0], [91.6, 2229.0], [91.7, 2232.0], [91.8, 2238.0], [91.9, 2243.0], [92.0, 2243.0], [92.1, 2245.0], [92.2, 2248.0], [92.3, 2249.0], [92.4, 2252.0], [92.5, 2253.0], [92.6, 2257.0], [92.7, 2261.0], [92.8, 2264.0], [92.9, 2270.0], [93.0, 2271.0], [93.1, 2276.0], [93.2, 2278.0], [93.3, 2283.0], [93.4, 2288.0], [93.5, 2290.0], [93.6, 2292.0], [93.7, 2296.0], [93.8, 2306.0], [93.9, 2308.0], [94.0, 2319.0], [94.1, 2323.0], [94.2, 2325.0], [94.3, 2327.0], [94.4, 2336.0], [94.5, 2345.0], [94.6, 2362.0], [94.7, 2365.0], [94.8, 2380.0], [94.9, 2381.0], [95.0, 2390.0], [95.1, 2407.0], [95.2, 2412.0], [95.3, 2419.0], [95.4, 2423.0], [95.5, 2426.0], [95.6, 2427.0], [95.7, 2430.0], [95.8, 2434.0], [95.9, 2435.0], [96.0, 2439.0], [96.1, 2448.0], [96.2, 2450.0], [96.3, 2456.0], [96.4, 2459.0], [96.5, 2459.0], [96.6, 2473.0], [96.7, 2486.0], [96.8, 2493.0], [96.9, 2507.0], [97.0, 2513.0], [97.1, 2518.0], [97.2, 2526.0], [97.3, 2534.0], [97.4, 2535.0], [97.5, 2542.0], [97.6, 2553.0], [97.7, 2562.0], [97.8, 2578.0], [97.9, 2616.0], [98.0, 2623.0], [98.1, 2625.0], [98.2, 2627.0], [98.3, 2634.0], [98.4, 2641.0], [98.5, 2659.0], [98.6, 2681.0], [98.7, 2725.0], [98.8, 2894.0], [98.9, 2906.0], [99.0, 2907.0], [99.1, 2927.0], [99.2, 2928.0], [99.3, 2959.0], [99.4, 2972.0], [99.5, 3007.0], [99.6, 3081.0], [99.7, 3091.0], [99.8, 3127.0], [99.9, 3390.0], [100.0, 3489.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1700.0, "maxY": 1188.0, "series": [{"data": [[2100.0, 322.0], [2200.0, 87.0], [2300.0, 31.0], [2400.0, 43.0], [2500.0, 25.0], [2600.0, 18.0], [2800.0, 2.0], [2700.0, 3.0], [2900.0, 15.0], [3000.0, 8.0], [3100.0, 2.0], [3300.0, 1.0], [3400.0, 2.0], [1700.0, 1.0], [1800.0, 61.0], [1900.0, 591.0], [2000.0, 1188.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 80.53124999999999, "minX": 1.68302844E12, "maxY": 2192.5480769230776, "series": [{"data": [[1.68302844E12, 2192.5480769230776], [1.68302862E12, 848.5528846153845], [1.68302856E12, 1318.534351145038], [1.68302874E12, 80.53124999999999], [1.68302868E12, 400.5437500000001], [1.6830285E12, 1782.5519801980195]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302874E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1799.0, "minX": 1.0, "maxY": 3489.0, "series": [{"data": [[3.0, 2448.0], [4.0, 2431.0], [5.0, 2069.0], [6.0, 2041.0], [7.0, 1910.0], [8.0, 1893.0], [9.0, 2427.0], [10.0, 2308.0], [11.0, 2306.0], [12.0, 2297.0], [13.0, 1928.0], [14.0, 1902.0], [15.0, 1901.0], [16.0, 2014.0], [17.0, 1876.0], [18.0, 2005.0], [19.0, 2002.0], [20.0, 1997.0], [21.0, 1996.0], [22.0, 1995.0], [23.0, 1982.0], [24.0, 2114.0], [25.0, 2112.0], [26.0, 2108.0], [27.0, 1963.0], [28.0, 2089.0], [29.0, 2086.0], [30.0, 2078.0], [31.0, 2030.0], [33.0, 2024.0], [32.0, 2014.0], [35.0, 2012.0], [34.0, 2023.0], [37.0, 2002.0], [36.0, 2010.0], [39.0, 1983.0], [38.0, 2001.0], [41.0, 2087.0], [40.0, 1980.0], [43.0, 2065.0], [42.0, 2076.0], [45.0, 2020.0], [44.0, 2024.0], [47.0, 1996.0], [46.0, 2004.0], [49.0, 1930.0], [48.0, 1987.0], [51.0, 1903.0], [50.0, 1924.0], [53.0, 1893.0], [52.0, 1895.0], [55.0, 1867.0], [54.0, 1873.0], [57.0, 2088.0], [56.0, 1863.0], [59.0, 2064.0], [58.0, 2065.0], [61.0, 2045.0], [60.0, 2056.0], [63.0, 1988.0], [62.0, 1990.0], [67.0, 1982.0], [66.0, 1997.0], [65.0, 2019.0], [64.0, 1956.0], [71.0, 1926.0], [70.0, 1934.0], [69.0, 1957.0], [68.0, 1969.0], [75.0, 2006.0], [74.0, 2041.0], [73.0, 2070.0], [72.0, 1885.0], [79.0, 1972.0], [78.0, 1996.0], [77.0, 1997.0], [76.0, 2005.0], [83.0, 1977.0], [82.0, 1996.0], [81.0, 2018.0], [80.0, 1946.0], [87.0, 1903.0], [86.0, 1972.0], [84.0, 1972.0], [91.0, 2027.0], [90.0, 2030.0], [89.0, 2041.0], [88.0, 1857.0], [95.0, 1947.0], [94.0, 1985.0], [93.0, 1987.0], [92.0, 2012.0], [99.0, 2095.0], [98.0, 2097.0], [97.0, 2111.0], [96.0, 1915.0], [103.0, 2054.0], [102.0, 2058.0], [101.0, 2061.0], [100.0, 2075.0], [107.0, 2050.0], [106.0, 2052.0], [105.0, 2070.0], [104.0, 1980.0], [111.0, 2009.0], [110.0, 2019.0], [109.0, 2037.0], [108.0, 2041.0], [115.0, 2024.0], [114.0, 2044.0], [113.0, 2052.0], [112.0, 2002.0], [119.0, 1974.5], [117.0, 2002.0], [116.0, 2022.0], [123.0, 2048.0], [122.0, 2051.0], [121.0, 2062.0], [120.0, 1957.0], [126.0, 1993.0], [125.0, 2007.0], [124.0, 2020.0], [135.0, 2049.0], [134.0, 2050.0], [133.0, 2058.0], [132.0, 2069.0], [131.0, 2070.0], [130.0, 2076.0], [129.0, 2079.0], [128.0, 1990.5], [143.0, 1915.0], [142.0, 1922.0], [141.0, 1936.5], [139.0, 1938.0], [138.0, 1957.0], [137.0, 1957.0], [136.0, 2039.0], [151.0, 1958.0], [150.0, 1981.0], [149.0, 2007.0], [148.0, 2017.0], [147.0, 2022.0], [146.0, 2035.0], [145.0, 2042.0], [144.0, 1857.0], [159.0, 2064.0], [158.0, 2066.0], [157.0, 2080.0], [156.0, 2537.0], [155.0, 2562.0], [154.0, 2625.0], [153.0, 2634.0], [152.0, 1954.0], [167.0, 2054.5], [165.0, 1987.0], [164.0, 2004.0], [163.0, 2009.0], [162.0, 2011.0], [161.0, 2156.0], [160.0, 2007.0], [175.0, 2052.0], [174.0, 2056.0], [173.0, 2062.0], [172.0, 2069.0], [171.0, 1936.0], [170.0, 1955.0], [169.0, 1964.0], [168.0, 2104.0], [183.0, 2065.0], [182.0, 2079.5], [180.0, 2080.0], [179.0, 2089.0], [178.0, 2090.0], [177.0, 2078.5], [191.0, 2025.0], [190.0, 2027.0], [189.0, 2062.0], [188.0, 2063.0], [187.0, 2096.0], [186.0, 2117.0], [185.0, 2119.0], [184.0, 2061.0], [199.0, 1946.0], [198.0, 1969.0], [197.0, 2035.0], [196.0, 2043.0], [195.0, 2047.0], [194.0, 2048.0], [193.0, 2054.0], [192.0, 2010.0], [207.0, 2004.0], [206.0, 2030.0], [205.0, 2049.0], [204.0, 2057.0], [203.0, 2060.0], [202.0, 2061.0], [201.0, 2092.0], [200.0, 1945.0], [215.0, 2101.0], [214.0, 2051.0], [213.0, 2052.0], [212.0, 2054.0], [211.0, 2055.0], [210.0, 2064.0], [209.0, 2065.0], [208.0, 1940.0], [223.0, 2014.0], [222.0, 2021.0], [221.0, 2032.0], [220.0, 2022.0], [219.0, 2078.0], [218.0, 2078.0], [217.0, 2080.0], [216.0, 2031.0], [231.0, 2156.0], [230.0, 2048.0], [229.0, 2049.0], [228.0, 2062.0], [227.0, 2119.5], [225.0, 2071.0], [224.0, 1988.0], [239.0, 2081.0], [238.0, 2093.0], [237.0, 2099.0], [236.0, 2101.0], [235.0, 2007.0], [234.0, 2136.0], [233.0, 2036.0], [232.0, 2040.0], [247.0, 1970.0], [246.0, 1999.0], [245.0, 2056.5], [243.0, 2073.0], [242.0, 2096.0], [241.0, 2068.0], [255.0, 1943.0], [254.0, 2040.0], [253.0, 2042.0], [252.0, 2065.0], [251.0, 2066.0], [250.0, 2084.0], [249.0, 2103.0], [248.0, 1877.0], [269.0, 2080.0], [270.0, 2079.0], [268.0, 2081.0], [259.0, 1983.0], [258.0, 2038.0], [257.0, 2075.0], [256.0, 1938.0], [267.0, 2091.0], [266.0, 2092.0], [265.0, 2092.0], [264.0, 1966.0], [263.0, 1967.0], [261.0, 1972.0], [260.0, 1978.0], [286.0, 1986.0], [287.0, 1965.0], [285.0, 2003.0], [284.0, 2018.0], [283.0, 2019.0], [282.0, 2033.0], [281.0, 2066.0], [280.0, 1914.0], [279.0, 1927.0], [273.0, 2029.0], [272.0, 2066.0], [275.0, 1985.0], [274.0, 2005.0], [278.0, 1945.0], [277.0, 1960.0], [276.0, 1980.0], [302.0, 2003.0], [303.0, 2000.0], [301.0, 2004.0], [300.0, 2013.0], [299.0, 2019.0], [298.0, 2022.0], [297.0, 2038.0], [296.0, 1956.0], [295.0, 1987.0], [289.0, 2035.0], [288.0, 1963.0], [291.0, 2025.0], [290.0, 2031.0], [294.0, 1995.0], [293.0, 1998.0], [292.0, 2005.0], [318.0, 2087.0], [319.0, 2084.0], [317.0, 2090.0], [316.0, 2092.0], [315.0, 2096.0], [314.0, 2103.0], [313.0, 2106.0], [312.0, 1943.0], [311.0, 1948.0], [305.0, 2071.0], [304.0, 1954.0], [307.0, 2040.0], [306.0, 2049.0], [310.0, 1986.0], [309.0, 1996.0], [308.0, 2023.0], [334.0, 1969.0], [335.0, 1960.0], [333.0, 1994.0], [332.0, 1998.0], [331.0, 2000.0], [330.0, 2015.0], [329.0, 2056.0], [328.0, 1932.0], [327.0, 2043.0], [321.0, 2080.0], [320.0, 2079.0], [323.0, 2071.0], [322.0, 2072.0], [326.0, 2045.0], [325.0, 2070.0], [349.0, 2079.0], [351.0, 2070.5], [348.0, 2081.0], [339.0, 1971.0], [338.0, 1974.0], [337.0, 2026.0], [336.0, 1959.0], [347.0, 2091.0], [346.0, 2092.0], [345.0, 2144.0], [344.0, 1924.0], [343.0, 1927.0], [342.0, 1938.0], [341.0, 1938.0], [340.0, 1966.0], [366.0, 2040.0], [367.0, 2027.0], [365.0, 2047.0], [364.0, 2049.0], [363.0, 2050.0], [362.0, 2053.0], [361.0, 2054.0], [360.0, 1952.0], [359.0, 1987.0], [353.0, 2055.0], [352.0, 2049.0], [355.0, 2052.0], [354.0, 2054.0], [358.0, 1988.0], [357.0, 2008.0], [356.0, 2037.0], [382.0, 2040.0], [383.0, 2022.0], [381.0, 2058.0], [380.0, 2067.0], [379.0, 2069.0], [378.0, 2070.0], [377.0, 2092.0], [376.0, 1969.0], [375.0, 1972.0], [369.0, 2059.0], [368.0, 1929.0], [371.0, 2039.0], [370.0, 2055.0], [374.0, 1984.0], [373.0, 1988.0], [372.0, 2004.0], [398.0, 2100.0], [399.0, 2096.0], [397.0, 2132.0], [396.0, 2157.0], [395.0, 2168.0], [394.0, 2204.0], [393.0, 2226.0], [392.0, 2232.0], [390.0, 2238.0], [385.0, 2254.0], [384.0, 1989.0], [387.0, 2252.0], [386.0, 2248.0], [389.0, 2245.0], [388.0, 2243.0], [414.0, 1977.0], [415.0, 1977.0], [413.0, 2067.0], [412.0, 2087.0], [411.0, 2148.0], [410.0, 2151.0], [409.0, 2161.0], [408.0, 1997.0], [407.0, 2007.0], [401.0, 2047.0], [400.0, 2094.0], [403.0, 2032.0], [402.0, 2037.0], [406.0, 2014.0], [405.0, 2015.0], [404.0, 2030.0], [430.0, 1988.0], [431.0, 1984.0], [429.0, 2016.0], [428.0, 2017.0], [427.0, 2024.0], [426.0, 2035.0], [425.0, 2037.0], [424.0, 1950.0], [422.0, 1988.0], [417.0, 2075.0], [416.0, 2082.0], [419.0, 2071.0], [418.0, 1912.0], [421.0, 2036.0], [420.0, 2064.0], [446.0, 2120.0], [447.0, 2112.0], [445.0, 2107.5], [435.0, 2099.0], [434.0, 2101.0], [433.0, 2103.0], [432.0, 1972.0], [443.0, 2125.0], [442.0, 2111.0], [441.0, 2160.0], [440.0, 2067.0], [439.0, 2072.0], [438.0, 2074.0], [437.0, 2092.0], [436.0, 2096.0], [462.0, 1944.0], [463.0, 1941.0], [461.0, 1947.0], [460.0, 1969.0], [459.0, 1976.0], [458.0, 1991.0], [457.0, 2000.0], [456.0, 1992.0], [455.0, 2053.0], [449.0, 2095.0], [448.0, 2097.0], [451.0, 2097.0], [450.0, 2091.0], [454.0, 2065.0], [453.0, 2083.0], [452.0, 2080.0], [478.0, 2007.5], [479.0, 1998.0], [476.0, 2010.0], [467.0, 2103.0], [466.0, 2117.0], [465.0, 2131.0], [464.0, 1937.0], [475.0, 2022.0], [474.0, 2024.0], [473.0, 2035.0], [472.0, 2009.5], [470.0, 2012.0], [469.0, 2095.0], [468.0, 2098.0], [494.0, 1979.0], [495.0, 1978.0], [493.0, 1998.0], [492.0, 2000.5], [490.0, 2001.0], [489.0, 2003.0], [488.0, 2088.0], [487.0, 2092.0], [481.0, 2119.0], [480.0, 1971.0], [483.0, 2108.0], [482.0, 2115.0], [486.0, 2095.0], [485.0, 2101.0], [484.0, 2105.0], [510.0, 2043.0], [511.0, 2043.0], [509.0, 2044.0], [508.0, 2049.0], [507.0, 2052.0], [506.0, 2068.0], [505.0, 2071.0], [504.0, 1946.0], [503.0, 1950.0], [497.0, 2078.0], [496.0, 1960.0], [499.0, 2054.0], [498.0, 2077.0], [502.0, 1962.0], [501.0, 1988.0], [500.0, 1994.0], [540.0, 2192.0], [542.0, 2182.0], [538.0, 2197.0], [536.0, 2005.0], [534.0, 2014.0], [532.0, 2045.0], [530.0, 2053.0], [528.0, 1967.5], [526.0, 1941.0], [514.0, 2051.0], [512.0, 2023.0], [518.0, 2014.0], [516.0, 2098.0], [524.0, 2005.0], [522.0, 1986.0], [520.0, 2047.0], [572.0, 1939.0], [574.0, 1904.0], [570.0, 1955.0], [568.0, 1981.0], [566.0, 2012.0], [564.0, 2271.0], [562.0, 2282.0], [560.0, 1943.0], [556.0, 1970.0], [546.0, 2174.0], [544.0, 2179.0], [550.0, 2076.0], [548.0, 2091.0], [554.0, 1982.0], [552.0, 1934.0], [604.0, 2042.0], [606.0, 2024.0], [602.0, 2048.0], [600.0, 1824.0], [596.0, 1960.0], [594.0, 1971.0], [592.0, 2063.0], [590.0, 2090.0], [576.0, 1833.0], [582.0, 2004.0], [580.0, 2049.0], [588.0, 2120.0], [586.0, 2138.0], [584.0, 1974.0], [636.0, 2049.0], [638.0, 2032.0], [634.0, 2078.0], [632.0, 2067.0], [630.0, 2104.0], [628.0, 2112.0], [626.0, 2135.0], [624.0, 1977.0], [622.0, 2015.0], [610.0, 2041.0], [608.0, 1830.0], [614.0, 2019.0], [612.0, 2032.0], [620.0, 2029.0], [618.0, 2041.0], [616.0, 1994.0], [668.0, 2074.0], [670.0, 2053.0], [666.0, 2102.0], [664.0, 1969.0], [662.0, 2006.0], [660.0, 2010.0], [658.0, 2060.0], [656.0, 2033.0], [654.0, 2049.0], [642.0, 2224.0], [640.0, 2005.0], [646.0, 2212.0], [644.0, 2220.0], [652.0, 2086.0], [650.0, 2192.0], [648.0, 2198.0], [700.0, 2045.0], [702.0, 2017.0], [698.0, 2071.0], [696.0, 1942.0], [694.0, 1995.0], [692.0, 2014.0], [690.0, 2049.0], [688.0, 1961.0], [686.0, 2034.0], [674.0, 2080.0], [672.0, 1888.0], [678.0, 2062.0], [676.0, 2072.0], [684.0, 2053.0], [682.0, 2053.0], [680.0, 2053.0], [732.0, 2003.0], [734.0, 1980.0], [730.0, 2027.0], [728.0, 2057.0], [726.0, 2105.0], [724.0, 2111.0], [722.0, 2124.0], [720.0, 2034.0], [718.0, 2042.0], [704.0, 1948.0], [710.0, 2030.0], [706.0, 2118.0], [716.0, 2050.0], [714.0, 2054.0], [712.0, 1904.0], [764.0, 2002.0], [766.0, 1943.0], [762.0, 2553.0], [760.0, 2587.0], [758.0, 2380.0], [756.0, 2625.0], [754.0, 2631.0], [752.0, 2424.0], [750.0, 2662.0], [738.0, 2129.0], [736.0, 1961.0], [742.0, 2111.0], [740.0, 2116.0], [748.0, 2455.0], [746.0, 2457.0], [744.0, 2102.0], [796.0, 1998.0], [798.0, 1962.0], [794.0, 2019.0], [792.0, 2090.0], [790.0, 2014.0], [788.0, 2193.0], [786.0, 2212.0], [784.0, 2133.0], [782.0, 2053.0], [770.0, 2170.0], [768.0, 1900.0], [774.0, 2194.5], [772.0, 2248.0], [780.0, 2285.0], [778.0, 2112.0], [776.0, 2223.0], [824.0, 2060.0], [828.0, 2039.0], [816.0, 2044.0], [818.0, 2100.0], [830.0, 2035.0], [826.0, 2041.0], [800.0, 1955.0], [802.0, 2009.0], [804.0, 1972.0], [806.0, 1940.0], [814.0, 2062.0], [812.0, 2065.0], [810.0, 2076.0], [808.0, 1922.0], [860.0, 2016.0], [862.0, 1980.0], [848.0, 1927.0], [850.0, 1925.0], [852.0, 1907.0], [858.0, 2019.0], [856.0, 1864.0], [838.0, 2042.0], [836.0, 2054.0], [834.0, 2065.0], [832.0, 2008.0], [846.0, 1968.0], [844.0, 1983.0], [842.0, 2002.0], [840.0, 2028.5], [854.0, 1886.5], [890.0, 1992.0], [894.0, 1955.0], [880.0, 1850.0], [882.0, 2011.0], [884.0, 2008.0], [888.0, 1892.0], [870.0, 2151.0], [868.0, 2176.0], [866.0, 2187.0], [864.0, 1958.0], [878.0, 1866.0], [876.0, 1906.0], [874.0, 1932.0], [872.0, 2124.0], [886.0, 1992.0], [924.0, 2006.0], [912.0, 1887.0], [914.0, 2071.0], [916.0, 2054.0], [926.0, 2000.0], [922.0, 2019.0], [920.0, 1992.0], [896.0, 1931.0], [898.0, 1927.0], [900.0, 1889.0], [902.0, 1853.0], [910.0, 2005.0], [908.0, 2007.0], [906.0, 2038.0], [904.0, 1810.0], [918.0, 2047.0], [956.0, 2037.0], [958.0, 2035.0], [944.0, 1953.0], [946.0, 2049.0], [948.0, 2024.0], [954.0, 2050.0], [952.0, 1919.0], [934.0, 1984.0], [932.0, 1996.0], [930.0, 2022.0], [928.0, 1981.0], [942.0, 2008.0], [940.0, 2041.0], [938.0, 2048.0], [936.0, 1968.0], [950.0, 1982.0], [988.0, 1963.0], [976.0, 1910.0], [978.0, 2118.0], [980.0, 2091.0], [990.0, 1949.0], [986.0, 1979.0], [984.0, 2079.0], [960.0, 2018.0], [962.0, 2088.0], [964.0, 2077.0], [966.0, 2025.0], [974.0, 1963.0], [972.0, 2025.0], [970.0, 2062.0], [968.0, 1920.0], [982.0, 2087.0], [1020.0, 1977.0], [1008.0, 1921.0], [1010.0, 2084.0], [1022.0, 1966.0], [1018.0, 2008.0], [1016.0, 1997.0], [992.0, 2088.0], [994.0, 2078.0], [996.0, 2039.0], [998.0, 2001.0], [1006.0, 1976.0], [1004.0, 1995.0], [1002.0, 2006.0], [1000.0, 1953.0], [1014.0, 2042.0], [1080.0, 2079.0], [1056.0, 2068.0], [1060.0, 2089.0], [1064.0, 2051.0], [1084.0, 2077.0], [1076.0, 2100.0], [1072.0, 2020.0], [1024.0, 1947.0], [1028.0, 2043.0], [1032.0, 1938.0], [1036.0, 2071.0], [1048.0, 1932.0], [1044.0, 2052.0], [1040.0, 2059.0], [1068.0, 2105.0], [1144.0, 1973.0], [1120.0, 2003.0], [1124.0, 2114.0], [1128.0, 2008.0], [1148.0, 2110.0], [1140.0, 1997.0], [1136.0, 2041.0], [1088.0, 2058.0], [1092.0, 1948.0], [1096.0, 1916.0], [1100.0, 2049.0], [1116.0, 2087.0], [1112.0, 1966.0], [1108.0, 1985.0], [1104.0, 2016.0], [1132.0, 2080.0], [1208.0, 1994.0], [1184.0, 2023.0], [1188.0, 1946.0], [1192.0, 1870.0], [1212.0, 2066.0], [1204.0, 2033.0], [1200.0, 2028.0], [1152.0, 2097.5], [1160.0, 1942.0], [1164.0, 2015.0], [1180.0, 2055.0], [1176.0, 1942.0], [1172.0, 2021.0], [1168.0, 1976.0], [1196.0, 2048.0], [1272.0, 1951.0], [1252.0, 2031.0], [1256.0, 2166.0], [1276.0, 2090.0], [1268.0, 2009.0], [1264.0, 2017.0], [1216.0, 2009.0], [1220.0, 2007.0], [1224.0, 1965.0], [1228.0, 2002.0], [1244.0, 2008.0], [1240.0, 2021.0], [1236.0, 2052.0], [1232.0, 1933.0], [1260.0, 2137.0], [1336.0, 1941.0], [1312.0, 2031.0], [1316.0, 2017.0], [1320.0, 1977.0], [1340.0, 1970.0], [1332.0, 1954.0], [1328.0, 2055.0], [1280.0, 2056.0], [1284.0, 1951.0], [1288.0, 2052.0], [1292.0, 2039.0], [1308.0, 2041.0], [1304.0, 2033.0], [1300.0, 2065.0], [1296.0, 1972.0], [1324.0, 2067.0], [1400.0, 1853.0], [1376.0, 2426.0], [1380.0, 2509.0], [1384.0, 2210.0], [1396.0, 2232.0], [1392.0, 2014.0], [1356.0, 2213.0], [1352.0, 2275.5], [1348.0, 2515.0], [1344.0, 1905.0], [1368.0, 1877.0], [1364.0, 1826.0], [1360.0, 1947.0], [1388.0, 2381.0], [1464.0, 2181.0], [1440.0, 2193.0], [1444.0, 2156.0], [1448.0, 2080.0], [1460.0, 2157.0], [1456.0, 2142.0], [1420.0, 2085.0], [1416.0, 2099.0], [1412.0, 2124.0], [1408.0, 1901.0], [1436.0, 2224.0], [1432.0, 2037.0], [1428.0, 2093.0], [1424.0, 2029.0], [1452.0, 2252.0], [1528.0, 2064.0], [1532.0, 2057.0], [1504.0, 1995.0], [1508.0, 2080.0], [1512.0, 2053.0], [1524.0, 2115.0], [1520.0, 1893.0], [1484.0, 2060.0], [1480.0, 1992.0], [1476.0, 2024.0], [1472.0, 2001.0], [1500.0, 2024.0], [1496.0, 1971.0], [1492.0, 2050.0], [1488.0, 1998.0], [1516.0, 1934.0], [1588.0, 2096.0], [1584.0, 2046.0], [1596.0, 2125.0], [1568.0, 2067.0], [1572.0, 2029.0], [1592.0, 1959.0], [1536.0, 2008.0], [1540.0, 1954.0], [1544.0, 1872.0], [1548.0, 1987.0], [1564.0, 1956.0], [1560.0, 1902.0], [1556.0, 1892.0], [1552.0, 1980.0], [1580.0, 1995.0], [1656.0, 2049.0], [1652.0, 2074.0], [1660.0, 2524.0], [1632.0, 2330.0], [1636.0, 2163.0], [1640.0, 2146.0], [1644.0, 2136.0], [1648.0, 2042.0], [1600.0, 2086.0], [1604.0, 2044.0], [1608.0, 2029.3333333333333], [1612.0, 2031.0], [1628.0, 2439.0], [1624.0, 2046.0], [1620.0, 2071.0], [1616.0, 1922.0], [1720.0, 1983.0], [1724.0, 2163.5], [1696.0, 2007.0], [1700.0, 2040.0], [1704.0, 1962.0], [1708.0, 2054.0], [1716.0, 2046.0], [1712.0, 2075.0], [1676.0, 2047.0], [1672.0, 1865.0], [1668.0, 1922.0], [1664.0, 1991.0], [1692.0, 2034.0], [1688.0, 2086.0], [1684.0, 2019.0], [1680.0, 1938.0], [1784.0, 2001.0], [1780.0, 2037.0], [1788.0, 2005.0], [1760.0, 2013.0], [1764.0, 1997.0], [1768.0, 1994.5], [1772.0, 1970.0], [1776.0, 1948.0], [1728.0, 2140.0], [1732.0, 2120.0], [1736.0, 2062.0], [1740.0, 1951.0], [1756.0, 2071.0], [1752.0, 1992.0], [1748.0, 2040.0], [1744.0, 1904.0], [1848.0, 2025.0], [1852.0, 2156.0], [1824.0, 1972.0], [1828.0, 2090.0], [1832.0, 1977.0], [1836.0, 1986.0], [1840.0, 1942.0], [1804.0, 2127.0], [1800.0, 1842.0], [1796.0, 1967.0], [1792.0, 1989.0], [1820.0, 1983.0], [1816.0, 2037.0], [1812.0, 2079.0], [1808.0, 2056.0], [1916.0, 2435.0], [1888.0, 1948.0], [1892.0, 2641.0], [1896.0, 2414.0], [1900.0, 2306.0], [1912.0, 1877.0], [1908.0, 1962.0], [1904.0, 2019.0], [1856.0, 2082.0], [1860.0, 2073.0], [1864.0, 2053.0], [1868.0, 2052.0], [1884.0, 1991.0], [1880.0, 2000.0], [1876.0, 2033.0], [1872.0, 1995.0], [1980.0, 2016.0], [1952.0, 2068.0], [1956.0, 2014.0], [1960.0, 1950.0], [1964.0, 1971.0], [1976.0, 2037.0], [1972.0, 2047.0], [1968.0, 1942.0], [1932.0, 1987.0], [1928.0, 1971.0], [1924.0, 2401.0], [1920.0, 2264.5], [1948.0, 2507.0], [1944.0, 2542.0], [1940.0, 2621.0], [1936.0, 1894.0], [2040.0, 3016.0], [2036.0, 3081.0], [2044.0, 3127.0], [2016.0, 2356.0], [2020.0, 1976.0], [2024.0, 2447.5], [2028.0, 1949.0], [2032.0, 2900.0], [1984.0, 1959.0], [1988.0, 1962.0], [1992.0, 1851.0], [1996.0, 2008.0], [2012.0, 2492.0], [2008.0, 1799.0], [2004.0, 1961.0], [2000.0, 1969.0], [2168.0, 2016.0], [2160.0, 1830.0], [2112.0, 1977.0], [2120.0, 1955.0], [2128.0, 1984.0], [2136.0, 2003.0], [2152.0, 2007.0], [2144.0, 1995.0], [2064.0, 2249.0], [2056.0, 2323.0], [2104.0, 1936.0], [2096.0, 1906.0], [2088.0, 1916.0], [2080.0, 1886.0], [2296.0, 1917.0], [2280.0, 2178.0], [2240.0, 2102.0], [2248.0, 2033.0], [2256.0, 2047.0], [2264.0, 1938.0], [2288.0, 2033.0], [2272.0, 2049.0], [2176.0, 1994.0], [2184.0, 1947.0], [2192.0, 2074.0], [2200.0, 2188.0], [2232.0, 1944.0], [2224.0, 1920.0], [2216.0, 1868.0], [2208.0, 2045.0], [2320.0, 2313.0], [2328.0, 1919.0], [2392.0, 2184.0], [2400.0, 2098.0], [2312.0, 1983.0], [2304.0, 2025.0], [2360.0, 2047.0], [2352.0, 2060.0], [2344.0, 1959.0], [2336.0, 1994.0], [2368.0, 1870.0], [2376.0, 1816.0], [2384.0, 2209.0], [2153.0, 1964.0], [2169.0, 2051.0], [2161.0, 2169.0], [2113.0, 2053.0], [2121.0, 2138.0], [2137.0, 2052.0], [2145.0, 2084.0], [2073.0, 2197.0], [2065.0, 2323.0], [2057.0, 2319.0], [2049.0, 2223.0], [2105.0, 2116.0], [2097.0, 2062.0], [2089.0, 2047.0], [2289.0, 2110.0], [2297.0, 2077.0], [2241.0, 2003.0], [2249.0, 2106.0], [2257.0, 2082.0], [2265.0, 2138.0], [2281.0, 2002.0], [2273.0, 2045.0], [2177.0, 2327.0], [2185.0, 2198.0], [2201.0, 2079.0], [2233.0, 2025.0], [2225.0, 2013.0], [2217.0, 1991.0], [2209.0, 1963.0], [2305.0, 2074.0], [2321.0, 2056.0], [2329.0, 2111.0], [2313.0, 2959.0], [2361.0, 2100.0], [2353.0, 2113.0], [2345.0, 1944.0], [2337.0, 2112.0], [2369.0, 1930.0], [2377.0, 2338.0], [2385.0, 2189.0], [1081.0, 2186.0], [1057.0, 2102.0], [1061.0, 2087.0], [1065.0, 2116.0], [1085.0, 2074.0], [1077.0, 2097.0], [1073.0, 2125.0], [1025.0, 2054.0], [1029.0, 2008.0], [1033.0, 2077.0], [1037.0, 2069.0], [1053.0, 2134.5], [1049.0, 2145.0], [1045.0, 2024.0], [1041.0, 2074.0], [1069.0, 2104.0], [1141.0, 1993.0], [1137.0, 2057.0], [1149.0, 2109.0], [1121.0, 2171.0], [1125.0, 2061.0], [1145.0, 2133.0], [1089.0, 2025.0], [1093.0, 1933.0], [1097.0, 2060.0], [1101.0, 2049.0], [1117.0, 2085.0], [1113.0, 1959.0], [1109.0, 2122.0], [1105.0, 2002.0], [1133.0, 2072.0], [1129.0, 2099.0], [1209.0, 2084.0], [1185.0, 1968.0], [1189.0, 1940.0], [1193.0, 2052.0], [1213.0, 2063.0], [1205.0, 2033.0], [1201.0, 2054.0], [1153.0, 2040.0], [1157.0, 1973.0], [1161.0, 2052.0], [1165.0, 2007.0], [1181.0, 2044.0], [1177.0, 2087.0], [1173.0, 1994.0], [1169.0, 2032.0], [1197.0, 2046.0], [1269.0, 2004.0], [1277.0, 2082.0], [1249.0, 1998.5], [1253.0, 1997.0], [1257.0, 1977.0], [1273.0, 2326.0], [1229.0, 1976.0], [1225.0, 2042.0], [1221.0, 1984.0], [1217.0, 2038.0], [1245.0, 2005.0], [1241.0, 2024.0], [1237.0, 2044.0], [1233.0, 2074.0], [1261.0, 2131.0], [1337.0, 1989.0], [1313.0, 2113.0], [1317.0, 2013.0], [1321.0, 2078.0], [1341.0, 1966.0], [1333.0, 1952.0], [1329.0, 1964.0], [1281.0, 1980.0], [1285.0, 1948.0], [1289.0, 2045.0], [1293.0, 2019.0], [1309.0, 2041.0], [1305.0, 2052.0], [1301.0, 2063.0], [1297.0, 2076.0], [1325.0, 2063.0], [1401.0, 2018.0], [1377.0, 2616.0], [1381.0, 2493.0], [1385.0, 1971.0], [1405.0, 2000.0], [1397.0, 2229.0], [1393.0, 2325.0], [1345.0, 2630.0], [1349.0, 2048.0], [1353.0, 2501.0], [1357.0, 2207.0], [1373.0, 2434.5], [1369.0, 2450.0], [1365.0, 1911.0], [1361.0, 1927.0], [1389.0, 2043.0], [1465.0, 2160.0], [1441.0, 2191.0], [1445.0, 2144.0], [1449.0, 2264.0], [1469.0, 2097.0], [1461.0, 2144.0], [1457.0, 2184.0], [1409.0, 2137.0], [1413.0, 2123.0], [1417.0, 2290.0], [1421.0, 2072.0], [1437.0, 2219.0], [1433.0, 2283.0], [1429.0, 2092.0], [1425.0, 2124.0], [1453.0, 2252.0], [1529.0, 2063.0], [1505.0, 2084.0], [1509.0, 2078.0], [1513.0, 1980.0], [1533.0, 2042.0], [1525.0, 2115.0], [1521.0, 2149.0], [1473.0, 2034.0], [1477.0, 2016.0], [1485.0, 2056.0], [1501.0, 2018.0], [1497.0, 2044.0], [1493.0, 2048.0], [1489.0, 2089.0], [1517.0, 1934.0], [1593.0, 2129.0], [1597.0, 2121.0], [1569.0, 2066.0], [1573.0, 2027.0], [1577.0, 2070.0], [1585.0, 2114.0], [1549.0, 1982.0], [1545.0, 1997.0], [1541.0, 1943.0], [1537.0, 2020.0], [1565.0, 1946.0], [1561.0, 2003.0], [1557.0, 1982.0], [1553.0, 2103.0], [1581.0, 2090.0], [1657.0, 2046.0], [1661.0, 2514.0], [1633.0, 2426.0], [1637.0, 2178.0], [1641.0, 2163.0], [1645.0, 2136.0], [1653.0, 2074.0], [1649.0, 2081.0], [1601.0, 2066.0], [1605.0, 2038.0], [1609.0, 2062.0], [1613.0, 2029.0], [1629.0, 2430.0], [1625.0, 2038.0], [1621.0, 2987.0], [1617.0, 2290.0], [1721.0, 2166.0], [1697.0, 2088.0], [1701.0, 2039.0], [1705.0, 2486.0], [1709.0, 2024.0], [1725.0, 2210.0], [1717.0, 2027.0], [1713.0, 2073.0], [1673.0, 2166.0], [1669.0, 1919.0], [1665.0, 1944.0], [1693.0, 2028.0], [1689.0, 2072.0], [1685.0, 2017.0], [1681.0, 2075.0], [1785.0, 2011.0], [1789.0, 2002.0], [1761.0, 2022.0], [1765.0, 1996.0], [1769.0, 1979.0], [1773.0, 1970.0], [1781.0, 2036.0], [1777.0, 2055.0], [1729.0, 2182.0], [1733.0, 2114.0], [1737.0, 2006.0], [1741.0, 1948.0], [1757.0, 2071.0], [1753.0, 2080.0], [1749.0, 2033.0], [1745.0, 2066.0], [1853.0, 2155.0], [1825.0, 2097.0], [1829.0, 2087.0], [1833.0, 2032.0], [1837.0, 1978.0], [1849.0, 2185.0], [1845.0, 2035.0], [1841.0, 2057.0], [1805.0, 2110.0], [1801.0, 2210.0], [1797.0, 1966.0], [1793.0, 1983.0], [1821.0, 1970.0], [1817.0, 2039.0], [1813.0, 2056.0], [1809.0, 2119.0], [1917.0, 2120.0], [1889.0, 2669.0], [1893.0, 2441.0], [1897.0, 2419.0], [1913.0, 2147.0], [1909.0, 1951.0], [1905.0, 2039.0], [1857.0, 2092.0], [1865.0, 2060.0], [1869.0, 2037.0], [1885.0, 1984.0], [1881.0, 2008.0], [1877.0, 2031.0], [1873.0, 2038.0], [1977.0, 2054.0], [1953.0, 2041.0], [1957.0, 1997.0], [1961.0, 2001.0], [1965.0, 1965.0], [1973.0, 2043.0], [1969.0, 1932.0], [1933.0, 1983.0], [1929.0, 2033.0], [1925.0, 2083.0], [1921.0, 2412.0], [1949.0, 2108.0], [1945.0, 2535.0], [1941.0, 2562.0], [1937.0, 2743.0], [2041.0, 3390.0], [2045.0, 2169.0], [2017.0, 1980.0], [2021.0, 1968.0], [2025.0, 2927.0], [2029.0, 2907.0], [2037.0, 3489.0], [2033.0, 3099.0], [1985.0, 2106.0], [1989.0, 1912.0], [1993.0, 2053.0], [1997.0, 2005.0], [2013.0, 2485.0], [2009.0, 2542.0], [2005.0, 1941.0], [2001.0, 2000.0], [2170.0, 2041.0], [2114.0, 2035.0], [2122.0, 2114.0], [2130.0, 2095.0], [2138.0, 2043.0], [2162.0, 2155.0], [2154.0, 1941.0], [2146.0, 2078.0], [2074.0, 3078.0], [2066.0, 2226.0], [2058.0, 2393.0], [2050.0, 2290.0], [2106.0, 2095.0], [2098.0, 2057.0], [2090.0, 2026.0], [2082.0, 2025.0], [2298.0, 2076.0], [2242.0, 2000.0], [2250.0, 2068.0], [2258.0, 2045.0], [2266.0, 2123.0], [2290.0, 2102.0], [2282.0, 2165.0], [2274.0, 2039.0], [2178.0, 2296.0], [2186.0, 2167.0], [2194.0, 2089.0], [2202.0, 2174.0], [2234.0, 2014.0], [2226.0, 2005.0], [2218.0, 1989.0], [2210.0, 1958.0], [2306.0, 2055.0], [2322.0, 2055.0], [2330.0, 2105.0], [2314.0, 2932.0], [2362.0, 2089.0], [2354.0, 2114.0], [2346.0, 2094.0], [2338.0, 1974.0], [2370.0, 1912.0], [2378.0, 2336.0], [2394.0, 2160.0], [2386.0, 2242.0], [2171.0, 2040.0], [2115.0, 2018.0], [2123.0, 2105.0], [2131.0, 2090.0], [2139.0, 2026.0], [2163.0, 2148.0], [2155.0, 1937.0], [2147.0, 2058.0], [2075.0, 2023.0], [2067.0, 2215.0], [2059.0, 2305.0], [2051.0, 2278.0], [2107.0, 2070.0], [2099.0, 2052.0], [2091.0, 1999.0], [2083.0, 2001.0], [2291.0, 2094.0], [2251.0, 2067.0], [2259.0, 2030.0], [2267.0, 2113.0], [2299.0, 2075.0], [2283.0, 2160.0], [2275.0, 2033.0], [2179.0, 2291.0], [2187.0, 2177.0], [2195.0, 2205.0], [2203.0, 2141.0], [2235.0, 2109.0], [2227.0, 1998.0], [2219.0, 1962.0], [2211.0, 1946.0], [2307.0, 2054.0], [2323.0, 2048.0], [2331.0, 2089.0], [2315.0, 2927.0], [2363.0, 2078.0], [2355.0, 2112.0], [2347.0, 2093.0], [2339.0, 2060.0], [2371.0, 1910.0], [2379.0, 2257.0], [2395.0, 2132.0], [2387.0, 2220.0], [541.0, 2181.0], [543.0, 2180.0], [539.0, 2195.0], [537.0, 2204.0], [535.0, 2011.0], [533.0, 2017.0], [531.0, 2053.0], [529.0, 2088.0], [525.0, 2002.0], [515.0, 2045.0], [513.0, 2061.0], [519.0, 2059.0], [517.0, 2033.0], [523.0, 2015.0], [521.0, 1986.0], [573.0, 1920.0], [575.0, 1897.0], [571.0, 1953.0], [569.0, 1957.0], [567.0, 1990.0], [565.0, 2026.0], [563.0, 2280.0], [561.0, 2292.0], [559.0, 1955.0], [547.0, 2171.0], [545.0, 2176.0], [551.0, 2033.0], [549.0, 2087.0], [557.0, 1969.0], [555.0, 1978.0], [553.0, 1983.0], [605.0, 2039.0], [607.0, 1989.0], [603.0, 2046.0], [601.0, 2076.0], [599.0, 1889.0], [597.0, 1954.0], [595.0, 1967.0], [593.0, 1991.0], [591.0, 2089.0], [577.0, 2060.0], [581.0, 2040.0], [579.0, 2058.5], [589.0, 2117.0], [587.0, 2122.0], [585.0, 2140.0], [637.0, 2034.0], [639.0, 2020.0], [635.0, 2061.0], [633.0, 2080.0], [631.0, 2091.0], [629.0, 2110.0], [627.0, 2119.0], [625.0, 2138.0], [623.0, 1992.0], [611.0, 2040.0], [609.0, 2042.0], [615.0, 2003.0], [613.0, 2030.0], [621.0, 2019.0], [619.0, 2041.0], [617.0, 2044.0], [669.0, 2066.0], [671.0, 1979.0], [667.0, 2081.0], [665.0, 2127.0], [663.0, 1975.0], [661.0, 2008.0], [659.0, 2055.0], [657.0, 2102.0], [655.0, 2038.0], [641.0, 2223.0], [647.0, 2205.0], [645.0, 2216.0], [653.0, 2067.0], [651.0, 2182.0], [649.0, 2195.0], [701.0, 2031.0], [703.0, 1959.0], [699.0, 2057.0], [697.0, 2073.0], [695.0, 1960.0], [693.0, 2013.0], [691.0, 2019.0], [689.0, 2050.0], [687.0, 1991.0], [675.0, 2078.0], [673.0, 2096.0], [679.0, 2054.0], [677.0, 2065.0], [685.0, 2046.0], [683.0, 2054.0], [681.0, 2055.0], [733.0, 2000.0], [735.0, 1975.0], [731.0, 2017.0], [729.0, 2028.0], [727.0, 2066.0], [725.0, 2111.0], [723.0, 2116.0], [721.0, 2131.0], [719.0, 2041.0], [707.0, 2111.0], [711.0, 1984.0], [709.0, 2109.5], [717.0, 2044.0], [715.0, 2053.0], [713.0, 2056.0], [765.0, 1967.0], [767.0, 1941.0], [763.0, 2029.0], [761.0, 2972.0], [759.0, 3007.0], [755.0, 2626.0], [753.0, 2640.0], [751.0, 2426.0], [739.0, 2122.0], [737.0, 2134.0], [743.0, 2107.0], [741.0, 2114.0], [749.0, 2681.0], [747.0, 2456.0], [745.0, 2459.0], [797.0, 1991.0], [799.0, 1957.0], [795.0, 2000.0], [793.0, 2024.0], [791.0, 2100.0], [789.0, 2192.0], [787.0, 2211.0], [785.0, 2123.0], [783.0, 2150.0], [769.0, 2175.0], [775.0, 2135.0], [771.0, 2345.0], [781.0, 2164.0], [779.0, 2103.0], [777.0, 2121.0], [827.0, 2040.0], [831.0, 2010.0], [817.0, 2117.0], [829.0, 2036.0], [825.0, 2050.0], [815.0, 2062.0], [801.0, 2024.0], [803.0, 1992.0], [805.0, 1960.0], [807.0, 1927.0], [813.0, 2066.0], [811.0, 2074.0], [809.0, 2085.0], [821.0, 2086.0], [819.0, 2093.0], [857.0, 2021.0], [863.0, 1966.0], [849.0, 1929.0], [851.0, 1914.0], [861.0, 2016.0], [837.0, 2047.0], [835.0, 2060.0], [833.0, 2071.0], [847.0, 1963.0], [845.0, 1979.0], [843.0, 2001.0], [841.0, 2005.0], [855.0, 1873.0], [891.0, 1985.0], [889.0, 1999.0], [895.0, 1953.0], [881.0, 2048.0], [883.0, 2010.0], [885.0, 2000.0], [893.0, 1969.5], [869.0, 2170.0], [867.0, 2180.0], [865.0, 2190.0], [879.0, 1855.0], [877.0, 1904.0], [875.0, 1914.0], [873.0, 1938.0], [887.0, 1906.0], [925.0, 2003.0], [927.0, 1994.0], [915.0, 2064.0], [917.0, 2050.0], [923.0, 2012.0], [921.0, 2027.0], [911.0, 1979.0], [897.0, 1947.0], [899.0, 1924.0], [901.0, 1885.0], [903.0, 1848.0], [907.0, 2010.0], [905.0, 2045.0], [919.0, 2015.0], [953.0, 2060.0], [959.0, 2023.0], [945.0, 2118.0], [947.0, 2027.0], [949.0, 2006.0], [955.0, 2045.0], [935.0, 1971.0], [933.0, 1992.0], [931.0, 2017.0], [929.0, 2031.0], [943.0, 1955.0], [941.0, 2027.0], [939.0, 2050.0], [937.0, 2051.0], [951.0, 1931.0], [989.0, 1951.0], [991.0, 1940.0], [977.0, 2123.0], [979.0, 2106.0], [987.0, 1967.0], [985.0, 1995.0], [975.0, 1962.0], [961.0, 2102.0], [965.0, 2075.0], [967.0, 1979.0], [973.0, 2002.0], [971.0, 2025.0], [969.0, 2070.0], [981.0, 2091.0], [1021.0, 1971.0], [1023.0, 1955.0], [1009.0, 2108.0], [1013.0, 2053.0], [1011.0, 2054.0], [1019.0, 2000.0], [1017.0, 2032.0], [1007.0, 1934.0], [993.0, 2084.0], [995.0, 1910.0], [997.0, 2022.0], [999.0, 2002.0], [1005.0, 1980.0], [1003.0, 2005.0], [1001.0, 2036.0], [1015.0, 2020.0], [1082.0, 2083.0], [1086.0, 2072.0], [1062.0, 2061.0], [1066.0, 2112.0], [1078.0, 2093.0], [1074.0, 2123.0], [1054.0, 2085.0], [1026.0, 2050.0], [1030.0, 1981.0], [1034.0, 2076.0], [1050.0, 2139.0], [1046.0, 2008.0], [1042.0, 2072.0], [1070.0, 2099.0], [1146.0, 2122.0], [1150.0, 2101.0], [1122.0, 2120.0], [1126.0, 2056.0], [1130.0, 2089.0], [1142.0, 1991.0], [1138.0, 2021.0], [1118.0, 2057.0], [1090.0, 2022.0], [1094.0, 1934.0], [1098.0, 2054.0], [1102.0, 2040.0], [1114.0, 2097.0], [1110.0, 1973.0], [1106.0, 1993.0], [1134.0, 2065.0], [1210.0, 2078.0], [1214.0, 2052.0], [1186.0, 1955.0], [1190.0, 1913.0], [1194.0, 2050.0], [1206.0, 2024.0], [1202.0, 2038.0], [1182.0, 2044.0], [1158.0, 1965.0], [1154.0, 2035.0], [1162.0, 2022.0], [1166.0, 1987.0], [1178.0, 2065.0], [1174.0, 1958.0], [1170.0, 2030.0], [1198.0, 2041.0], [1274.0, 2324.0], [1278.0, 2080.0], [1250.0, 2043.0], [1254.0, 2179.0], [1258.0, 1976.0], [1270.0, 1987.0], [1266.0, 2015.5], [1246.0, 1996.0], [1218.0, 2018.0], [1222.0, 1976.0], [1226.0, 2005.0], [1230.0, 1954.0], [1242.0, 2011.0], [1238.0, 2040.0], [1234.0, 2071.0], [1262.0, 2104.0], [1338.0, 1975.0], [1342.0, 1932.0], [1314.0, 2067.0], [1318.0, 2005.0], [1322.0, 2076.0], [1334.0, 1948.0], [1330.0, 1963.0], [1310.0, 2036.0], [1282.0, 1957.0], [1290.0, 1911.0], [1294.0, 2003.0], [1306.0, 2049.0], [1302.0, 2051.0], [1298.0, 2070.0], [1326.0, 2057.0], [1402.0, 2007.0], [1394.0, 1999.0], [1406.0, 1977.0], [1378.0, 2407.0], [1382.0, 2244.0], [1386.0, 2155.0], [1398.0, 1911.0], [1358.0, 2141.0], [1354.0, 2011.0], [1350.0, 2033.0], [1346.0, 2625.0], [1370.0, 1863.0], [1366.0, 1902.0], [1362.0, 1916.0], [1390.0, 2039.0], [1466.0, 2092.0], [1458.0, 2173.0], [1470.0, 2068.0], [1442.0, 2162.0], [1446.0, 2083.0], [1450.0, 2264.0], [1462.0, 2143.0], [1422.0, 2048.0], [1418.0, 2136.0], [1414.0, 2110.0], [1438.0, 2219.0], [1434.0, 2243.0], [1430.0, 2059.0], [1426.0, 2103.0], [1454.0, 2249.0], [1522.0, 2147.0], [1534.0, 2040.0], [1506.0, 2084.0], [1510.0, 2067.0], [1514.0, 1971.0], [1526.0, 2106.0], [1486.0, 2030.0], [1482.0, 2070.0], [1478.0, 2013.0], [1474.0, 2031.0], [1502.0, 2017.0], [1498.0, 2038.0], [1494.0, 2032.0], [1490.0, 2072.0], [1518.0, 1918.0], [1538.0, 1986.0], [1598.0, 2096.0], [1570.0, 1870.0], [1594.0, 2129.0], [1566.0, 1900.0], [1542.0, 1917.0], [1546.0, 1993.0], [1562.0, 1988.0], [1558.0, 1978.0], [1554.0, 2102.0], [1582.0, 2060.0], [1578.0, 2112.0], [1574.0, 2024.0], [1662.0, 2010.0], [1634.0, 2381.0], [1638.0, 2174.0], [1646.0, 2072.0], [1658.0, 2527.0], [1654.0, 2065.0], [1650.0, 2077.0], [1602.0, 2046.0], [1610.0, 2056.0], [1614.0, 2009.0], [1630.0, 2429.0], [1626.0, 2894.0], [1622.0, 2057.0], [1618.0, 2276.0], [1726.0, 2207.0], [1698.0, 2085.0], [1702.0, 2037.0], [1706.0, 2473.0], [1710.0, 2020.0], [1722.0, 2166.0], [1718.0, 2014.0], [1714.0, 1948.0], [1678.0, 2032.5], [1674.0, 2136.0], [1670.0, 1918.0], [1666.0, 1924.0], [1694.0, 2023.0], [1690.0, 1946.0], [1686.0, 2015.0], [1682.0, 2049.0], [1790.0, 1996.0], [1762.0, 2010.0], [1766.0, 1995.0], [1770.0, 1972.0], [1774.0, 1955.0], [1786.0, 2010.0], [1782.0, 2027.0], [1778.0, 2048.0], [1730.0, 2178.0], [1734.0, 2087.0], [1738.0, 2003.0], [1742.0, 1922.0], [1758.0, 2068.0], [1754.0, 2079.0], [1750.0, 2027.0], [1746.0, 2048.0], [1854.0, 2149.0], [1826.0, 2094.0], [1830.0, 2083.0], [1834.0, 1999.0], [1850.0, 2185.0], [1846.0, 2031.0], [1842.0, 2051.0], [1806.0, 2089.0], [1802.0, 2173.0], [1798.0, 1956.0], [1794.0, 1983.0], [1822.0, 1986.0], [1818.0, 2031.0], [1814.0, 2061.0], [1810.0, 2105.0], [1918.0, 2117.0], [1910.0, 1938.0], [1906.0, 2022.0], [1914.0, 2140.0], [1890.0, 2659.0], [1894.0, 2421.0], [1898.0, 2386.0], [1902.0, 2053.0], [1858.0, 2085.0], [1862.0, 2068.5], [1866.0, 2060.0], [1870.0, 2024.0], [1886.0, 1979.0], [1882.0, 2000.0], [1878.0, 2027.0], [1874.0, 2034.0], [1978.0, 2025.0], [1982.0, 2001.0], [1954.0, 2048.0], [1958.0, 1986.0], [1962.0, 1988.0], [1966.0, 2185.0], [1974.0, 2041.0], [1970.0, 1923.0], [1934.0, 1980.0], [1926.0, 2365.0], [1922.0, 2112.0], [1950.0, 2090.0], [1946.0, 2533.0], [1942.0, 2577.0], [1938.0, 2725.0], [2046.0, 2163.0], [2018.0, 1980.0], [2026.0, 3131.0], [2030.0, 2907.0], [2042.0, 2967.0], [2038.0, 2863.0], [2034.0, 3091.0], [1986.0, 2048.0], [1990.0, 1890.0], [1994.0, 2018.0], [1998.0, 1984.0], [2014.0, 2465.0], [2010.0, 2534.0], [2006.0, 1921.0], [2002.0, 1992.0], [2164.0, 2146.0], [2172.0, 2034.0], [2116.0, 2015.0], [2124.0, 2103.0], [2132.0, 2085.0], [2140.0, 2023.0], [2156.0, 1929.0], [2148.0, 2056.0], [2076.0, 2016.0], [2068.0, 2273.0], [2060.0, 2362.0], [2052.0, 2273.0], [2108.0, 2057.0], [2100.0, 2038.0], [2092.0, 1984.0], [2084.0, 1999.0], [2292.0, 2092.0], [2284.0, 2151.0], [2300.0, 2064.0], [2244.0, 2077.0], [2252.0, 2062.0], [2260.0, 2024.0], [2268.0, 2107.0], [2276.0, 2015.0], [2180.0, 2271.0], [2188.0, 2100.0], [2196.0, 2070.0], [2204.0, 2140.0], [2236.0, 2012.0], [2228.0, 1983.0], [2220.0, 1960.0], [2212.0, 1940.0], [2324.0, 2047.0], [2332.0, 2075.0], [2380.0, 2258.0], [2388.0, 2158.0], [2316.0, 2923.0], [2308.0, 2029.0], [2364.0, 2075.0], [2356.0, 2088.0], [2372.0, 1906.0], [2173.0, 2028.0], [2117.0, 2007.0], [2125.0, 2064.0], [2133.0, 2029.0], [2141.0, 2013.0], [2157.0, 1905.0], [2149.0, 2028.0], [2077.0, 2008.0], [2069.0, 2212.0], [2061.0, 2269.0], [2053.0, 2270.0], [2109.0, 2054.0], [2101.0, 2025.0], [2093.0, 1981.0], [2085.0, 1997.0], [2293.0, 2090.0], [2245.0, 2072.0], [2253.0, 2061.0], [2261.0, 2007.0], [2269.0, 2103.0], [2301.0, 2061.0], [2285.0, 2135.0], [2277.0, 2012.0], [2181.0, 2018.0], [2189.0, 2114.0], [2197.0, 2068.0], [2205.0, 2139.0], [2237.0, 2010.0], [2229.0, 1980.0], [2221.0, 1956.0], [2213.0, 1924.0], [2325.0, 2024.0], [2333.0, 2067.0], [2317.0, 2363.0], [2309.0, 2021.0], [2365.0, 2068.0], [2349.0, 2087.0], [2341.0, 2341.5], [2373.0, 1900.0], [2381.0, 2243.0], [2397.0, 2103.5], [2389.0, 2217.0], [1083.0, 2079.0], [1087.0, 2061.0], [1059.0, 2100.0], [1063.0, 2054.0], [1067.0, 2108.0], [1079.0, 2090.0], [1075.0, 2111.0], [1055.0, 2076.0], [1027.0, 2045.0], [1031.0, 1949.0], [1035.0, 2072.0], [1039.0, 2067.0], [1051.0, 2139.0], [1047.0, 1999.0], [1043.0, 2064.0], [1071.0, 2088.0], [1139.0, 2000.0], [1147.0, 2114.0], [1123.0, 2116.0], [1127.0, 2045.0], [1119.0, 2027.0], [1091.0, 1957.0], [1095.0, 1930.0], [1099.0, 2053.0], [1103.0, 2035.0], [1115.0, 2095.0], [1111.0, 1970.0], [1107.0, 1992.0], [1135.0, 2044.0], [1131.0, 2087.0], [1211.0, 2071.0], [1215.0, 2037.0], [1187.0, 1953.0], [1191.0, 1908.0], [1195.0, 2049.0], [1207.0, 2008.0], [1203.0, 2036.0], [1183.0, 2033.0], [1155.0, 2033.0], [1159.0, 1963.0], [1163.0, 2020.0], [1167.0, 1982.0], [1179.0, 2061.0], [1175.0, 1954.0], [1171.0, 2027.0], [1199.0, 2036.0], [1275.0, 2288.0], [1279.0, 2068.0], [1251.0, 2035.0], [1255.0, 1981.0], [1259.0, 2148.0], [1271.0, 1984.0], [1267.0, 2009.0], [1231.0, 1950.0], [1227.0, 2005.0], [1219.0, 2010.0], [1247.0, 1963.0], [1243.0, 2007.0], [1239.0, 2030.0], [1235.0, 2062.0], [1263.0, 2017.0], [1339.0, 1971.0], [1343.0, 1923.0], [1315.0, 2048.0], [1319.0, 1981.0], [1323.0, 2070.0], [1335.0, 1943.0], [1331.0, 1960.0], [1311.0, 2033.0], [1283.0, 1955.0], [1287.0, 1925.0], [1291.0, 2042.0], [1295.0, 1998.0], [1307.0, 2044.0], [1303.0, 2043.0], [1299.0, 2066.0], [1327.0, 2056.0], [1403.0, 2000.0], [1407.0, 1976.0], [1379.0, 2578.0], [1383.0, 1984.0], [1387.0, 1885.0], [1399.0, 1865.0], [1395.0, 2277.0], [1375.0, 2527.0], [1347.0, 2563.0], [1355.0, 2234.0], [1359.0, 2084.0], [1371.0, 2439.0], [1367.0, 2459.0], [1363.0, 1916.0], [1391.0, 2015.0], [1467.0, 2147.0], [1471.0, 2005.0], [1443.0, 2147.0], [1447.0, 2083.0], [1451.0, 2257.0], [1463.0, 2123.0], [1459.0, 2170.0], [1439.0, 2212.0], [1411.0, 2133.5], [1415.0, 2109.0], [1419.0, 2093.0], [1423.0, 2031.0], [1435.0, 2228.0], [1431.0, 2057.0], [1427.0, 2001.0], [1455.0, 2248.0], [1531.0, 2062.0], [1535.0, 2038.0], [1507.0, 2082.0], [1511.0, 2066.0], [1515.0, 1959.0], [1527.0, 2104.0], [1523.0, 2132.0], [1503.0, 2003.0], [1475.0, 2027.0], [1483.0, 2065.0], [1479.0, 2011.0], [1487.0, 2028.0], [1499.0, 2029.0], [1495.0, 1980.0], [1491.0, 2069.0], [1519.0, 1910.0], [1591.0, 2091.0], [1587.0, 2112.5], [1599.0, 2093.0], [1571.0, 2039.0], [1575.0, 2127.0], [1579.0, 2102.0], [1595.0, 2126.0], [1551.0, 2047.5], [1547.0, 1988.0], [1543.0, 1910.0], [1539.0, 1984.0], [1567.0, 1891.0], [1563.0, 1961.0], [1559.0, 1956.0], [1555.0, 2101.0], [1583.0, 2055.0], [1659.0, 2526.0], [1663.0, 2001.0], [1635.0, 2191.0], [1639.0, 2151.0], [1643.0, 2138.0], [1647.0, 2055.0], [1655.0, 2535.0], [1651.0, 2076.0], [1631.0, 2408.0], [1603.0, 2046.0], [1611.0, 2053.0], [1615.0, 1987.0], [1627.0, 2450.0], [1623.0, 2048.0], [1619.0, 2078.0], [1727.0, 2198.0], [1715.0, 1935.0], [1699.0, 2052.0], [1703.0, 2020.0], [1707.0, 2464.0], [1711.0, 2076.0], [1719.0, 1991.0], [1679.0, 2007.0], [1675.0, 2101.0], [1671.0, 1910.0], [1695.0, 2012.0], [1691.0, 2038.0], [1687.0, 1996.0], [1683.0, 2050.0], [1787.0, 2008.0], [1791.0, 1990.0], [1763.0, 2001.0], [1771.0, 1970.0], [1775.0, 1950.0], [1783.0, 2017.0], [1779.0, 2040.0], [1759.0, 2064.0], [1731.0, 2173.0], [1735.0, 2073.0], [1739.0, 1988.0], [1743.0, 1917.0], [1755.0, 2075.0], [1751.0, 2002.0], [1747.0, 2044.0], [1851.0, 2178.0], [1843.0, 2047.0], [1855.0, 2109.0], [1827.0, 2091.0], [1831.0, 1982.0], [1835.0, 1988.0], [1839.0, 1976.0], [1847.0, 2027.0], [1807.0, 2060.0], [1803.0, 2148.0], [1799.0, 1924.0], [1795.0, 1967.0], [1823.0, 1985.0], [1819.0, 2020.0], [1811.0, 2092.0], [1907.0, 1966.0], [1911.0, 1880.0], [1891.0, 2645.0], [1895.0, 2423.0], [1899.0, 2373.0], [1903.0, 2044.0], [1887.0, 1954.0], [1859.0, 2078.0], [1863.0, 2058.0], [1867.0, 2057.0], [1871.0, 2019.0], [1883.0, 1998.0], [1879.0, 2020.0], [1875.0, 2032.0], [1983.0, 1991.0], [1975.0, 2039.0], [1971.0, 2051.0], [1979.0, 2023.0], [1955.0, 2039.0], [1959.0, 1979.0], [1963.0, 1981.0], [1967.0, 2170.0], [1935.0, 1967.0], [1931.0, 2006.5], [1927.0, 2320.0], [1923.0, 2108.0], [1951.0, 2062.0], [1947.0, 2513.0], [1943.0, 2543.0], [1939.0, 2714.0], [2043.0, 2944.0], [2047.0, 2158.0], [2019.0, 1978.0], [2023.0, 2928.0], [2027.0, 1963.0], [2031.0, 2906.0], [2039.0, 3441.0], [2035.0, 3091.0], [2015.0, 2390.0], [1987.0, 2024.0], [1991.0, 1880.0], [1995.0, 2013.0], [1999.0, 1983.0], [2011.0, 2489.0], [2007.0, 1911.0], [2003.0, 1964.0], [2166.0, 2144.0], [2126.0, 2063.0], [2134.0, 2021.0], [2142.0, 2011.0], [2174.0, 2022.0], [2158.0, 1896.0], [2150.0, 2027.0], [2078.0, 2002.0], [2070.0, 3092.0], [2062.0, 2193.0], [2054.0, 2263.0], [2110.0, 2053.0], [2102.0, 2021.0], [2094.0, 1976.0], [2086.0, 1987.0], [2294.0, 2036.0], [2302.0, 2051.0], [2246.0, 2070.0], [2254.0, 2060.0], [2262.0, 2001.0], [2270.0, 2099.0], [2286.0, 2074.0], [2278.0, 2006.0], [2182.0, 1993.0], [2190.0, 2111.0], [2198.0, 2068.0], [2206.0, 2034.0], [2238.0, 2008.0], [2230.0, 1976.0], [2222.0, 1949.0], [2310.0, 2009.0], [2334.0, 2041.0], [2326.0, 2007.0], [2318.0, 2347.0], [2366.0, 2038.0], [2358.0, 2085.0], [2350.0, 2070.0], [2342.0, 2020.0], [2374.0, 1892.0], [2382.0, 2220.0], [2390.0, 2213.0], [2167.0, 2065.0], [2151.0, 2013.0], [2175.0, 1996.0], [2119.0, 1992.5], [2127.0, 2009.0], [2135.0, 2011.0], [2143.0, 2003.0], [2159.0, 1879.0], [2079.0, 1903.0], [2071.0, 2200.0], [2063.0, 2253.0], [2055.0, 2261.0], [2111.0, 2035.0], [2103.0, 1970.0], [2095.0, 1936.0], [2087.0, 1965.0], [2295.0, 2032.0], [2303.0, 2037.0], [2247.0, 2060.0], [2263.0, 1992.0], [2271.0, 2060.0], [2287.0, 2056.0], [2279.0, 2005.0], [2239.0, 2007.0], [2183.0, 1993.0], [2191.0, 2110.0], [2199.0, 2095.0], [2207.0, 2121.0], [2231.0, 1975.0], [2223.0, 1929.0], [2215.0, 1915.0], [2311.0, 2005.0], [2335.0, 2143.0], [2327.0, 2000.0], [2319.0, 2325.0], [2367.0, 2016.0], [2359.0, 2067.0], [2351.0, 2066.0], [2343.0, 1973.0], [2375.0, 1890.0], [2383.0, 2218.0], [2391.0, 2187.0], [1.0, 2459.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1200.5445833333338, 2073.6354166666624]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1349.3333333333333, "minX": 1.68302844E12, "maxY": 5496.183333333333, "series": [{"data": [[1.68302844E12, 4364.116666666667], [1.68302862E12, 4363.216666666666], [1.68302856E12, 5496.183333333333], [1.68302874E12, 1678.6166666666666], [1.68302868E12, 5034.533333333334], [1.6830285E12, 4237.216666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302844E12, 3508.266666666667], [1.68302862E12, 3508.266666666667], [1.68302856E12, 4419.066666666667], [1.68302874E12, 1349.3333333333333], [1.68302868E12, 4048.0], [1.6830285E12, 3407.0666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302874E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2035.99375, "minX": 1.68302844E12, "maxY": 2131.389423076922, "series": [{"data": [[1.68302844E12, 2131.389423076922], [1.68302862E12, 2058.6466346153848], [1.68302856E12, 2060.8530534351166], [1.68302874E12, 2035.99375], [1.68302868E12, 2042.725], [1.6830285E12, 2097.8118811881186]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302874E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2035.9562500000002, "minX": 1.68302844E12, "maxY": 2131.2788461538457, "series": [{"data": [[1.68302844E12, 2131.2788461538457], [1.68302862E12, 2058.6298076923076], [1.68302856E12, 2060.8339694656465], [1.68302874E12, 2035.9562500000002], [1.68302868E12, 2042.7041666666673], [1.6830285E12, 2097.782178217821]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302874E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.4374999999999999, "minX": 1.68302844E12, "maxY": 2.6995192307692273, "series": [{"data": [[1.68302844E12, 2.6995192307692273], [1.68302862E12, 0.4591346153846155], [1.68302856E12, 0.5419847328244276], [1.68302874E12, 0.6000000000000001], [1.68302868E12, 0.4374999999999999], [1.6830285E12, 0.6113861386138614]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302874E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1799.0, "minX": 1.68302844E12, "maxY": 3489.0, "series": [{"data": [[1.68302844E12, 3489.0], [1.68302862E12, 3007.0], [1.68302856E12, 2630.0], [1.68302874E12, 2634.0], [1.68302868E12, 2292.0], [1.6830285E12, 2987.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302844E12, 2329.7000000000003], [1.68302862E12, 2177.2], [1.68302856E12, 2180.0], [1.68302874E12, 2106.9], [1.68302868E12, 2119.0], [1.6830285E12, 2410.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302844E12, 3130.3199999999997], [1.68302862E12, 2658.2599999999998], [1.68302856E12, 2574.25], [1.68302874E12, 2628.5099999999998], [1.68302868E12, 2257.23], [1.6830285E12, 2724.45]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302844E12, 2923.6], [1.68302862E12, 2253.5499999999993], [1.68302856E12, 2281.5], [1.68302874E12, 2430.8], [1.68302868E12, 2174.95], [1.6830285E12, 2521.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302844E12, 1799.0], [1.68302862E12, 1810.0], [1.68302856E12, 1826.0], [1.68302874E12, 1857.0], [1.68302868E12, 1824.0], [1.6830285E12, 1842.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302844E12, 2057.0], [1.68302862E12, 2040.5], [1.68302856E12, 2042.0], [1.68302874E12, 2011.0], [1.68302868E12, 2042.5], [1.6830285E12, 2047.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302874E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1894.5, "minX": 1.0, "maxY": 2927.5, "series": [{"data": [[2.0, 2018.0], [40.0, 2145.5], [3.0, 2063.5], [4.0, 2052.5], [5.0, 1999.0], [6.0, 2107.0], [7.0, 2006.0], [8.0, 2034.0], [9.0, 2060.5], [10.0, 2508.0], [11.0, 2108.0], [12.0, 2289.0], [13.0, 2094.0], [14.0, 2012.0], [15.0, 2041.5], [16.0, 2035.0], [1.0, 1894.5], [17.0, 2065.5], [18.0, 2570.0], [19.0, 2067.0], [20.0, 2027.0], [21.0, 2028.0], [22.0, 2001.0], [23.0, 1982.0], [24.0, 2039.0], [26.0, 2063.5], [27.0, 2234.0], [28.0, 2927.5], [30.0, 2138.0], [31.0, 2045.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 40.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1894.5, "minX": 1.0, "maxY": 2927.5, "series": [{"data": [[2.0, 2018.0], [40.0, 2145.5], [3.0, 2063.0], [4.0, 2052.5], [5.0, 1999.0], [6.0, 2107.0], [7.0, 2006.0], [8.0, 2034.0], [9.0, 2060.5], [10.0, 2508.0], [11.0, 2108.0], [12.0, 2289.0], [13.0, 2094.0], [14.0, 2012.0], [15.0, 2041.5], [16.0, 2035.0], [1.0, 1894.5], [17.0, 2065.0], [18.0, 2570.0], [19.0, 2066.0], [20.0, 2027.0], [21.0, 2028.0], [22.0, 2001.0], [23.0, 1982.0], [24.0, 2039.0], [26.0, 2063.5], [27.0, 2234.0], [28.0, 2927.5], [30.0, 2138.0], [31.0, 2045.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 40.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.533333333333333, "minX": 1.68302844E12, "maxY": 8.4, "series": [{"data": [[1.68302844E12, 6.933333333333334], [1.68302862E12, 6.933333333333334], [1.68302856E12, 8.4], [1.68302874E12, 2.533333333333333], [1.68302868E12, 8.133333333333333], [1.6830285E12, 7.066666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302874E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.6666666666666665, "minX": 1.68302844E12, "maxY": 8.733333333333333, "series": [{"data": [[1.68302844E12, 6.933333333333334], [1.68302862E12, 6.933333333333334], [1.68302856E12, 8.733333333333333], [1.68302874E12, 2.6666666666666665], [1.68302868E12, 8.0], [1.6830285E12, 6.733333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302874E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.6666666666666665, "minX": 1.68302844E12, "maxY": 8.733333333333333, "series": [{"data": [[1.68302844E12, 6.933333333333334], [1.68302862E12, 6.933333333333334], [1.68302856E12, 8.733333333333333], [1.68302874E12, 2.6666666666666665], [1.68302868E12, 8.0], [1.6830285E12, 6.733333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302874E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.6666666666666665, "minX": 1.68302844E12, "maxY": 8.733333333333333, "series": [{"data": [[1.68302844E12, 6.933333333333334], [1.68302862E12, 6.933333333333334], [1.68302856E12, 8.733333333333333], [1.68302874E12, 2.6666666666666665], [1.68302868E12, 8.0], [1.6830285E12, 6.733333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302874E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

