/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "maxY": 196915.0, "series": [{"data": [[0.0, 7.0], [0.1, 22.0], [0.2, 26.0], [0.3, 28.0], [0.4, 32.0], [0.5, 34.0], [0.6, 36.0], [0.7, 38.0], [0.8, 39.0], [0.9, 41.0], [1.0, 43.0], [1.1, 45.0], [1.2, 46.0], [1.3, 47.0], [1.4, 49.0], [1.5, 50.0], [1.6, 52.0], [1.7, 53.0], [1.8, 54.0], [1.9, 55.0], [2.0, 56.0], [2.1, 57.0], [2.2, 57.0], [2.3, 58.0], [2.4, 60.0], [2.5, 61.0], [2.6, 62.0], [2.7, 63.0], [2.8, 64.0], [2.9, 64.0], [3.0, 65.0], [3.1, 66.0], [3.2, 67.0], [3.3, 68.0], [3.4, 68.0], [3.5, 69.0], [3.6, 71.0], [3.7, 71.0], [3.8, 72.0], [3.9, 72.0], [4.0, 73.0], [4.1, 74.0], [4.2, 75.0], [4.3, 75.0], [4.4, 76.0], [4.5, 78.0], [4.6, 79.0], [4.7, 80.0], [4.8, 80.0], [4.9, 81.0], [5.0, 81.0], [5.1, 82.0], [5.2, 83.0], [5.3, 84.0], [5.4, 85.0], [5.5, 87.0], [5.6, 88.0], [5.7, 88.0], [5.8, 89.0], [5.9, 89.0], [6.0, 90.0], [6.1, 90.0], [6.2, 90.0], [6.3, 91.0], [6.4, 92.0], [6.5, 93.0], [6.6, 93.0], [6.7, 94.0], [6.8, 94.0], [6.9, 95.0], [7.0, 95.0], [7.1, 95.0], [7.2, 96.0], [7.3, 96.0], [7.4, 97.0], [7.5, 97.0], [7.6, 98.0], [7.7, 98.0], [7.8, 98.0], [7.9, 99.0], [8.0, 99.0], [8.1, 99.0], [8.2, 100.0], [8.3, 100.0], [8.4, 100.0], [8.5, 101.0], [8.6, 101.0], [8.7, 102.0], [8.8, 102.0], [8.9, 103.0], [9.0, 103.0], [9.1, 104.0], [9.2, 104.0], [9.3, 104.0], [9.4, 105.0], [9.5, 105.0], [9.6, 106.0], [9.7, 106.0], [9.8, 106.0], [9.9, 107.0], [10.0, 107.0], [10.1, 108.0], [10.2, 108.0], [10.3, 109.0], [10.4, 109.0], [10.5, 110.0], [10.6, 110.0], [10.7, 110.0], [10.8, 111.0], [10.9, 111.0], [11.0, 112.0], [11.1, 112.0], [11.2, 113.0], [11.3, 113.0], [11.4, 113.0], [11.5, 114.0], [11.6, 114.0], [11.7, 114.0], [11.8, 115.0], [11.9, 115.0], [12.0, 115.0], [12.1, 116.0], [12.2, 116.0], [12.3, 117.0], [12.4, 117.0], [12.5, 117.0], [12.6, 118.0], [12.7, 118.0], [12.8, 118.0], [12.9, 118.0], [13.0, 119.0], [13.1, 119.0], [13.2, 119.0], [13.3, 119.0], [13.4, 120.0], [13.5, 120.0], [13.6, 121.0], [13.7, 121.0], [13.8, 121.0], [13.9, 122.0], [14.0, 122.0], [14.1, 122.0], [14.2, 123.0], [14.3, 123.0], [14.4, 123.0], [14.5, 124.0], [14.6, 124.0], [14.7, 125.0], [14.8, 125.0], [14.9, 125.0], [15.0, 125.0], [15.1, 126.0], [15.2, 126.0], [15.3, 126.0], [15.4, 127.0], [15.5, 127.0], [15.6, 127.0], [15.7, 127.0], [15.8, 128.0], [15.9, 128.0], [16.0, 128.0], [16.1, 128.0], [16.2, 129.0], [16.3, 129.0], [16.4, 129.0], [16.5, 129.0], [16.6, 129.0], [16.7, 129.0], [16.8, 130.0], [16.9, 130.0], [17.0, 130.0], [17.1, 131.0], [17.2, 131.0], [17.3, 131.0], [17.4, 132.0], [17.5, 132.0], [17.6, 133.0], [17.7, 133.0], [17.8, 133.0], [17.9, 134.0], [18.0, 134.0], [18.1, 134.0], [18.2, 134.0], [18.3, 135.0], [18.4, 135.0], [18.5, 135.0], [18.6, 135.0], [18.7, 136.0], [18.8, 136.0], [18.9, 136.0], [19.0, 136.0], [19.1, 137.0], [19.2, 137.0], [19.3, 137.0], [19.4, 137.0], [19.5, 138.0], [19.6, 138.0], [19.7, 138.0], [19.8, 138.0], [19.9, 138.0], [20.0, 139.0], [20.1, 139.0], [20.2, 139.0], [20.3, 139.0], [20.4, 139.0], [20.5, 139.0], [20.6, 140.0], [20.7, 140.0], [20.8, 140.0], [20.9, 140.0], [21.0, 140.0], [21.1, 140.0], [21.2, 141.0], [21.3, 141.0], [21.4, 141.0], [21.5, 141.0], [21.6, 141.0], [21.7, 142.0], [21.8, 142.0], [21.9, 142.0], [22.0, 142.0], [22.1, 143.0], [22.2, 143.0], [22.3, 143.0], [22.4, 143.0], [22.5, 143.0], [22.6, 143.0], [22.7, 144.0], [22.8, 144.0], [22.9, 144.0], [23.0, 144.0], [23.1, 144.0], [23.2, 144.0], [23.3, 144.0], [23.4, 144.0], [23.5, 145.0], [23.6, 145.0], [23.7, 145.0], [23.8, 145.0], [23.9, 145.0], [24.0, 145.0], [24.1, 146.0], [24.2, 146.0], [24.3, 146.0], [24.4, 146.0], [24.5, 146.0], [24.6, 146.0], [24.7, 147.0], [24.8, 147.0], [24.9, 147.0], [25.0, 147.0], [25.1, 147.0], [25.2, 148.0], [25.3, 148.0], [25.4, 148.0], [25.5, 148.0], [25.6, 149.0], [25.7, 149.0], [25.8, 149.0], [25.9, 149.0], [26.0, 149.0], [26.1, 150.0], [26.2, 150.0], [26.3, 150.0], [26.4, 150.0], [26.5, 150.0], [26.6, 150.0], [26.7, 150.0], [26.8, 151.0], [26.9, 151.0], [27.0, 151.0], [27.1, 151.0], [27.2, 151.0], [27.3, 152.0], [27.4, 152.0], [27.5, 152.0], [27.6, 152.0], [27.7, 152.0], [27.8, 153.0], [27.9, 153.0], [28.0, 153.0], [28.1, 153.0], [28.2, 153.0], [28.3, 153.0], [28.4, 153.0], [28.5, 153.0], [28.6, 153.0], [28.7, 154.0], [28.8, 154.0], [28.9, 154.0], [29.0, 154.0], [29.1, 154.0], [29.2, 154.0], [29.3, 154.0], [29.4, 154.0], [29.5, 154.0], [29.6, 154.0], [29.7, 154.0], [29.8, 154.0], [29.9, 154.0], [30.0, 155.0], [30.1, 155.0], [30.2, 155.0], [30.3, 155.0], [30.4, 155.0], [30.5, 155.0], [30.6, 155.0], [30.7, 155.0], [30.8, 155.0], [30.9, 155.0], [31.0, 155.0], [31.1, 155.0], [31.2, 155.0], [31.3, 155.0], [31.4, 155.0], [31.5, 156.0], [31.6, 156.0], [31.7, 156.0], [31.8, 156.0], [31.9, 156.0], [32.0, 156.0], [32.1, 156.0], [32.2, 156.0], [32.3, 156.0], [32.4, 156.0], [32.5, 156.0], [32.6, 157.0], [32.7, 157.0], [32.8, 157.0], [32.9, 157.0], [33.0, 157.0], [33.1, 157.0], [33.2, 157.0], [33.3, 157.0], [33.4, 158.0], [33.5, 158.0], [33.6, 158.0], [33.7, 158.0], [33.8, 158.0], [33.9, 158.0], [34.0, 158.0], [34.1, 158.0], [34.2, 159.0], [34.3, 159.0], [34.4, 159.0], [34.5, 159.0], [34.6, 159.0], [34.7, 159.0], [34.8, 159.0], [34.9, 159.0], [35.0, 159.0], [35.1, 159.0], [35.2, 159.0], [35.3, 160.0], [35.4, 160.0], [35.5, 160.0], [35.6, 160.0], [35.7, 160.0], [35.8, 160.0], [35.9, 160.0], [36.0, 160.0], [36.1, 160.0], [36.2, 160.0], [36.3, 160.0], [36.4, 160.0], [36.5, 160.0], [36.6, 160.0], [36.7, 161.0], [36.8, 161.0], [36.9, 161.0], [37.0, 161.0], [37.1, 161.0], [37.2, 161.0], [37.3, 161.0], [37.4, 161.0], [37.5, 161.0], [37.6, 161.0], [37.7, 161.0], [37.8, 161.0], [37.9, 161.0], [38.0, 161.0], [38.1, 161.0], [38.2, 162.0], [38.3, 162.0], [38.4, 162.0], [38.5, 162.0], [38.6, 162.0], [38.7, 162.0], [38.8, 162.0], [38.9, 162.0], [39.0, 162.0], [39.1, 162.0], [39.2, 162.0], [39.3, 162.0], [39.4, 162.0], [39.5, 162.0], [39.6, 162.0], [39.7, 163.0], [39.8, 163.0], [39.9, 163.0], [40.0, 163.0], [40.1, 163.0], [40.2, 163.0], [40.3, 163.0], [40.4, 163.0], [40.5, 163.0], [40.6, 163.0], [40.7, 163.0], [40.8, 163.0], [40.9, 163.0], [41.0, 163.0], [41.1, 163.0], [41.2, 163.0], [41.3, 163.0], [41.4, 163.0], [41.5, 164.0], [41.6, 164.0], [41.7, 164.0], [41.8, 164.0], [41.9, 164.0], [42.0, 164.0], [42.1, 164.0], [42.2, 164.0], [42.3, 164.0], [42.4, 164.0], [42.5, 164.0], [42.6, 164.0], [42.7, 164.0], [42.8, 165.0], [42.9, 165.0], [43.0, 165.0], [43.1, 165.0], [43.2, 165.0], [43.3, 165.0], [43.4, 165.0], [43.5, 165.0], [43.6, 166.0], [43.7, 166.0], [43.8, 166.0], [43.9, 166.0], [44.0, 166.0], [44.1, 166.0], [44.2, 166.0], [44.3, 166.0], [44.4, 167.0], [44.5, 167.0], [44.6, 167.0], [44.7, 167.0], [44.8, 167.0], [44.9, 167.0], [45.0, 167.0], [45.1, 167.0], [45.2, 167.0], [45.3, 167.0], [45.4, 167.0], [45.5, 167.0], [45.6, 167.0], [45.7, 168.0], [45.8, 168.0], [45.9, 168.0], [46.0, 168.0], [46.1, 168.0], [46.2, 168.0], [46.3, 168.0], [46.4, 168.0], [46.5, 168.0], [46.6, 168.0], [46.7, 168.0], [46.8, 168.0], [46.9, 169.0], [47.0, 169.0], [47.1, 169.0], [47.2, 169.0], [47.3, 169.0], [47.4, 169.0], [47.5, 169.0], [47.6, 169.0], [47.7, 169.0], [47.8, 169.0], [47.9, 169.0], [48.0, 170.0], [48.1, 170.0], [48.2, 170.0], [48.3, 170.0], [48.4, 170.0], [48.5, 170.0], [48.6, 170.0], [48.7, 170.0], [48.8, 170.0], [48.9, 170.0], [49.0, 170.0], [49.1, 170.0], [49.2, 170.0], [49.3, 170.0], [49.4, 170.0], [49.5, 171.0], [49.6, 171.0], [49.7, 171.0], [49.8, 171.0], [49.9, 171.0], [50.0, 171.0], [50.1, 171.0], [50.2, 171.0], [50.3, 171.0], [50.4, 171.0], [50.5, 171.0], [50.6, 171.0], [50.7, 172.0], [50.8, 172.0], [50.9, 172.0], [51.0, 172.0], [51.1, 172.0], [51.2, 172.0], [51.3, 172.0], [51.4, 172.0], [51.5, 172.0], [51.6, 173.0], [51.7, 173.0], [51.8, 173.0], [51.9, 173.0], [52.0, 173.0], [52.1, 173.0], [52.2, 174.0], [52.3, 174.0], [52.4, 174.0], [52.5, 174.0], [52.6, 174.0], [52.7, 174.0], [52.8, 175.0], [52.9, 175.0], [53.0, 175.0], [53.1, 175.0], [53.2, 175.0], [53.3, 175.0], [53.4, 175.0], [53.5, 176.0], [53.6, 176.0], [53.7, 176.0], [53.8, 176.0], [53.9, 176.0], [54.0, 176.0], [54.1, 176.0], [54.2, 177.0], [54.3, 177.0], [54.4, 177.0], [54.5, 177.0], [54.6, 177.0], [54.7, 177.0], [54.8, 177.0], [54.9, 178.0], [55.0, 178.0], [55.1, 178.0], [55.2, 178.0], [55.3, 178.0], [55.4, 178.0], [55.5, 178.0], [55.6, 178.0], [55.7, 179.0], [55.8, 179.0], [55.9, 179.0], [56.0, 179.0], [56.1, 179.0], [56.2, 179.0], [56.3, 179.0], [56.4, 179.0], [56.5, 180.0], [56.6, 180.0], [56.7, 180.0], [56.8, 180.0], [56.9, 180.0], [57.0, 180.0], [57.1, 181.0], [57.2, 181.0], [57.3, 181.0], [57.4, 181.0], [57.5, 181.0], [57.6, 182.0], [57.7, 182.0], [57.8, 182.0], [57.9, 182.0], [58.0, 183.0], [58.1, 183.0], [58.2, 183.0], [58.3, 183.0], [58.4, 184.0], [58.5, 184.0], [58.6, 184.0], [58.7, 185.0], [58.8, 185.0], [58.9, 185.0], [59.0, 185.0], [59.1, 186.0], [59.2, 186.0], [59.3, 186.0], [59.4, 186.0], [59.5, 187.0], [59.6, 187.0], [59.7, 187.0], [59.8, 187.0], [59.9, 188.0], [60.0, 188.0], [60.1, 188.0], [60.2, 188.0], [60.3, 188.0], [60.4, 189.0], [60.5, 189.0], [60.6, 189.0], [60.7, 189.0], [60.8, 190.0], [60.9, 190.0], [61.0, 191.0], [61.1, 191.0], [61.2, 192.0], [61.3, 193.0], [61.4, 193.0], [61.5, 193.0], [61.6, 194.0], [61.7, 194.0], [61.8, 194.0], [61.9, 194.0], [62.0, 195.0], [62.1, 195.0], [62.2, 195.0], [62.3, 195.0], [62.4, 196.0], [62.5, 196.0], [62.6, 197.0], [62.7, 199.0], [62.8, 200.0], [62.9, 201.0], [63.0, 201.0], [63.1, 202.0], [63.2, 203.0], [63.3, 204.0], [63.4, 205.0], [63.5, 206.0], [63.6, 207.0], [63.7, 208.0], [63.8, 209.0], [63.9, 211.0], [64.0, 212.0], [64.1, 213.0], [64.2, 217.0], [64.3, 218.0], [64.4, 219.0], [64.5, 219.0], [64.6, 220.0], [64.7, 221.0], [64.8, 224.0], [64.9, 226.0], [65.0, 227.0], [65.1, 228.0], [65.2, 229.0], [65.3, 230.0], [65.4, 231.0], [65.5, 231.0], [65.6, 232.0], [65.7, 232.0], [65.8, 232.0], [65.9, 233.0], [66.0, 233.0], [66.1, 233.0], [66.2, 235.0], [66.3, 238.0], [66.4, 240.0], [66.5, 240.0], [66.6, 240.0], [66.7, 241.0], [66.8, 242.0], [66.9, 242.0], [67.0, 246.0], [67.1, 249.0], [67.2, 253.0], [67.3, 254.0], [67.4, 256.0], [67.5, 257.0], [67.6, 257.0], [67.7, 258.0], [67.8, 260.0], [67.9, 261.0], [68.0, 263.0], [68.1, 264.0], [68.2, 265.0], [68.3, 265.0], [68.4, 266.0], [68.5, 266.0], [68.6, 266.0], [68.7, 267.0], [68.8, 267.0], [68.9, 268.0], [69.0, 270.0], [69.1, 274.0], [69.2, 275.0], [69.3, 277.0], [69.4, 278.0], [69.5, 279.0], [69.6, 280.0], [69.7, 281.0], [69.8, 282.0], [69.9, 283.0], [70.0, 285.0], [70.1, 286.0], [70.2, 287.0], [70.3, 288.0], [70.4, 289.0], [70.5, 291.0], [70.6, 292.0], [70.7, 293.0], [70.8, 293.0], [70.9, 293.0], [71.0, 294.0], [71.1, 295.0], [71.2, 296.0], [71.3, 297.0], [71.4, 298.0], [71.5, 299.0], [71.6, 300.0], [71.7, 301.0], [71.8, 302.0], [71.9, 302.0], [72.0, 303.0], [72.1, 304.0], [72.2, 305.0], [72.3, 306.0], [72.4, 307.0], [72.5, 308.0], [72.6, 309.0], [72.7, 310.0], [72.8, 311.0], [72.9, 312.0], [73.0, 314.0], [73.1, 319.0], [73.2, 329.0], [73.3, 330.0], [73.4, 332.0], [73.5, 333.0], [73.6, 336.0], [73.7, 341.0], [73.8, 347.0], [73.9, 350.0], [74.0, 361.0], [74.1, 362.0], [74.2, 368.0], [74.3, 375.0], [74.4, 395.0], [74.5, 401.0], [74.6, 403.0], [74.7, 418.0], [74.8, 435.0], [74.9, 457.0], [75.0, 481.0], [75.1, 558.0], [75.2, 605.0], [75.3, 636.0], [75.4, 669.0], [75.5, 729.0], [75.6, 789.0], [75.7, 912.0], [75.8, 960.0], [75.9, 1008.0], [76.0, 1042.0], [76.1, 1070.0], [76.2, 1087.0], [76.3, 1117.0], [76.4, 1162.0], [76.5, 1204.0], [76.6, 1250.0], [76.7, 1302.0], [76.8, 1365.0], [76.9, 1474.0], [77.0, 1514.0], [77.1, 1633.0], [77.2, 1698.0], [77.3, 1746.0], [77.4, 1785.0], [77.5, 1830.0], [77.6, 1855.0], [77.7, 1865.0], [77.8, 1953.0], [77.9, 2026.0], [78.0, 2052.0], [78.1, 2070.0], [78.2, 2088.0], [78.3, 2100.0], [78.4, 2136.0], [78.5, 2158.0], [78.6, 2188.0], [78.7, 2206.0], [78.8, 2223.0], [78.9, 2337.0], [79.0, 2449.0], [79.1, 2485.0], [79.2, 2513.0], [79.3, 2522.0], [79.4, 2593.0], [79.5, 2684.0], [79.6, 2765.0], [79.7, 2823.0], [79.8, 2880.0], [79.9, 3015.0], [80.0, 3083.0], [80.1, 3153.0], [80.2, 3157.0], [80.3, 3215.0], [80.4, 3329.0], [80.5, 3348.0], [80.6, 3388.0], [80.7, 3450.0], [80.8, 3496.0], [80.9, 3644.0], [81.0, 3664.0], [81.1, 3820.0], [81.2, 3918.0], [81.3, 4024.0], [81.4, 4139.0], [81.5, 4233.0], [81.6, 4420.0], [81.7, 4561.0], [81.8, 4592.0], [81.9, 4663.0], [82.0, 5004.0], [82.1, 5187.0], [82.2, 5323.0], [82.3, 5583.0], [82.4, 5670.0], [82.5, 5912.0], [82.6, 6113.0], [82.7, 6284.0], [82.8, 6583.0], [82.9, 6727.0], [83.0, 7037.0], [83.1, 7255.0], [83.2, 7448.0], [83.3, 7612.0], [83.4, 7931.0], [83.5, 8079.0], [83.6, 8087.0], [83.7, 8140.0], [83.8, 8187.0], [83.9, 8238.0], [84.0, 8297.0], [84.1, 8408.0], [84.2, 8816.0], [84.3, 8884.0], [84.4, 9228.0], [84.5, 9242.0], [84.6, 9245.0], [84.7, 9279.0], [84.8, 9293.0], [84.9, 9306.0], [85.0, 9345.0], [85.1, 9358.0], [85.2, 9392.0], [85.3, 9444.0], [85.4, 9551.0], [85.5, 9625.0], [85.6, 9790.0], [85.7, 9815.0], [85.8, 9855.0], [85.9, 9859.0], [86.0, 9920.0], [86.1, 9960.0], [86.2, 10017.0], [86.3, 10033.0], [86.4, 10101.0], [86.5, 10176.0], [86.6, 10429.0], [86.7, 10434.0], [86.8, 10445.0], [86.9, 10476.0], [87.0, 10480.0], [87.1, 10503.0], [87.2, 10507.0], [87.3, 10526.0], [87.4, 10527.0], [87.5, 10541.0], [87.6, 10571.0], [87.7, 10856.0], [87.8, 10872.0], [87.9, 10891.0], [88.0, 10936.0], [88.1, 11029.0], [88.2, 11067.0], [88.3, 11217.0], [88.4, 11376.0], [88.5, 11380.0], [88.6, 11403.0], [88.7, 11429.0], [88.8, 11481.0], [88.9, 11486.0], [89.0, 11656.0], [89.1, 11660.0], [89.2, 11665.0], [89.3, 11716.0], [89.4, 11767.0], [89.5, 11774.0], [89.6, 11790.0], [89.7, 11842.0], [89.8, 12067.0], [89.9, 12078.0], [90.0, 12235.0], [90.1, 12359.0], [90.2, 12361.0], [90.3, 12362.0], [90.4, 12417.0], [90.5, 12528.0], [90.6, 12572.0], [90.7, 12600.0], [90.8, 12602.0], [90.9, 12604.0], [91.0, 12609.0], [91.1, 12624.0], [91.2, 12668.0], [91.3, 12708.0], [91.4, 12772.0], [91.5, 12779.0], [91.6, 12790.0], [91.7, 12800.0], [91.8, 12806.0], [91.9, 12848.0], [92.0, 12849.0], [92.1, 12850.0], [92.2, 12870.0], [92.3, 12945.0], [92.4, 12976.0], [92.5, 12983.0], [92.6, 12991.0], [92.7, 13004.0], [92.8, 13142.0], [92.9, 13170.0], [93.0, 13246.0], [93.1, 13258.0], [93.2, 13394.0], [93.3, 13894.0], [93.4, 13987.0], [93.5, 14319.0], [93.6, 14427.0], [93.7, 14652.0], [93.8, 14661.0], [93.9, 14662.0], [94.0, 14680.0], [94.1, 14973.0], [94.2, 15068.0], [94.3, 15847.0], [94.4, 16526.0], [94.5, 16585.0], [94.6, 16750.0], [94.7, 16840.0], [94.8, 17028.0], [94.9, 17191.0], [95.0, 17316.0], [95.1, 17549.0], [95.2, 18116.0], [95.3, 18246.0], [95.4, 18610.0], [95.5, 19193.0], [95.6, 19848.0], [95.7, 20978.0], [95.8, 21400.0], [95.9, 22051.0], [96.0, 22642.0], [96.1, 23415.0], [96.2, 24537.0], [96.3, 28067.0], [96.4, 28595.0], [96.5, 28970.0], [96.6, 29024.0], [96.7, 29351.0], [96.8, 30920.0], [96.9, 34196.0], [97.0, 34796.0], [97.1, 36212.0], [97.2, 41608.0], [97.3, 42818.0], [97.4, 42863.0], [97.5, 44856.0], [97.6, 46935.0], [97.7, 47843.0], [97.8, 49772.0], [97.9, 56455.0], [98.0, 63528.0], [98.1, 63650.0], [98.2, 64510.0], [98.3, 69697.0], [98.4, 71793.0], [98.5, 72579.0], [98.6, 77538.0], [98.7, 79231.0], [98.8, 86070.0], [98.9, 90603.0], [99.0, 100081.0], [99.1, 100147.0], [99.2, 100160.0], [99.3, 101781.0], [99.4, 118141.0], [99.5, 127934.0], [99.6, 128716.0], [99.7, 130323.0], [99.8, 133039.0], [99.9, 142040.0], [100.0, 196915.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 43980.0, "series": [{"data": [[0.0, 6576.0], [136100.0, 8.0], [190500.0, 14.0], [196900.0, 1.0], [68300.0, 1.0], [66700.0, 2.0], [73100.0, 1.0], [71500.0, 4.0], [74700.0, 17.0], [76300.0, 1.0], [77900.0, 1.0], [89100.0, 2.0], [100300.0, 11.0], [103500.0, 2.0], [109900.0, 2.0], [130700.0, 28.0], [127500.0, 2.0], [100.0, 43980.0], [33700.0, 2.0], [35300.0, 2.0], [36100.0, 1.0], [40100.0, 3.0], [40900.0, 1.0], [163500.0, 7.0], [43300.0, 6.0], [44900.0, 1.0], [46500.0, 11.0], [45700.0, 1.0], [47300.0, 2.0], [48900.0, 9.0], [48100.0, 2.0], [49700.0, 4.0], [200.0, 7088.0], [51300.0, 3.0], [55300.0, 2.0], [56900.0, 5.0], [59300.0, 1.0], [57700.0, 2.0], [60900.0, 2.0], [61700.0, 4.0], [63300.0, 2.0], [64100.0, 2.0], [64900.0, 1.0], [70600.0, 8.0], [72200.0, 4.0], [300.0, 2286.0], [83400.0, 3.0], [85000.0, 1.0], [86600.0, 10.0], [91400.0, 1.0], [93000.0, 2.0], [99400.0, 1.0], [101000.0, 1.0], [400.0, 509.0], [105800.0, 1.0], [104200.0, 3.0], [118600.0, 1.0], [500.0, 102.0], [128200.0, 28.0], [142000.0, 10.0], [600.0, 200.0], [700.0, 140.0], [800.0, 61.0], [900.0, 144.0], [1000.0, 324.0], [1100.0, 178.0], [1200.0, 149.0], [1300.0, 104.0], [1400.0, 132.0], [1500.0, 72.0], [1600.0, 116.0], [1700.0, 178.0], [1800.0, 244.0], [1900.0, 99.0], [2000.0, 362.0], [2100.0, 290.0], [2300.0, 61.0], [2200.0, 173.0], [2400.0, 166.0], [2500.0, 212.0], [158900.0, 1.0], [2600.0, 86.0], [168500.0, 5.0], [2700.0, 95.0], [2800.0, 132.0], [2900.0, 66.0], [3000.0, 104.0], [3100.0, 215.0], [3200.0, 58.0], [3300.0, 220.0], [3400.0, 136.0], [3500.0, 44.0], [3700.0, 50.0], [3600.0, 135.0], [3800.0, 86.0], [3900.0, 77.0], [4000.0, 39.0], [4100.0, 121.0], [4200.0, 37.0], [4300.0, 29.0], [4600.0, 92.0], [4500.0, 161.0], [4400.0, 39.0], [4800.0, 23.0], [4700.0, 15.0], [74500.0, 8.0], [5000.0, 51.0], [5100.0, 52.0], [4900.0, 15.0], [80900.0, 3.0], [79300.0, 1.0], [5200.0, 53.0], [5300.0, 23.0], [5400.0, 24.0], [5600.0, 83.0], [5500.0, 47.0], [87300.0, 4.0], [5800.0, 33.0], [93700.0, 2.0], [90500.0, 20.0], [5700.0, 13.0], [92100.0, 1.0], [6100.0, 74.0], [5900.0, 78.0], [6000.0, 17.0], [6200.0, 43.0], [6300.0, 12.0], [100100.0, 170.0], [101700.0, 11.0], [98500.0, 1.0], [6400.0, 28.0], [6500.0, 18.0], [6600.0, 76.0], [6800.0, 44.0], [6900.0, 25.0], [6700.0, 8.0], [7100.0, 38.0], [7000.0, 34.0], [7200.0, 17.0], [7300.0, 22.0], [7400.0, 65.0], [7500.0, 69.0], [7600.0, 6.0], [7800.0, 19.0], [7900.0, 65.0], [7700.0, 44.0], [8000.0, 144.0], [8100.0, 140.0], [127300.0, 2.0], [128900.0, 2.0], [8600.0, 15.0], [8200.0, 151.0], [8400.0, 23.0], [137400.0, 1.0], [134200.0, 40.0], [8800.0, 113.0], [9000.0, 27.0], [9200.0, 412.0], [9400.0, 75.0], [9600.0, 23.0], [150200.0, 3.0], [10000.0, 201.0], [9800.0, 225.0], [10200.0, 17.0], [10600.0, 4.0], [10400.0, 405.0], [11200.0, 17.0], [10800.0, 287.0], [11000.0, 134.0], [11600.0, 257.0], [11400.0, 281.0], [11800.0, 76.0], [12000.0, 113.0], [12200.0, 91.0], [12600.0, 476.0], [12400.0, 84.0], [12800.0, 438.0], [13000.0, 85.0], [13200.0, 180.0], [13600.0, 33.0], [13800.0, 19.0], [14200.0, 26.0], [14000.0, 30.0], [14800.0, 67.0], [14600.0, 260.0], [14400.0, 73.0], [15000.0, 78.0], [15400.0, 2.0], [15600.0, 10.0], [15800.0, 40.0], [16000.0, 3.0], [16800.0, 30.0], [16400.0, 40.0], [17200.0, 58.0], [18400.0, 9.0], [17600.0, 15.0], [18000.0, 11.0], [19200.0, 8.0], [18800.0, 33.0], [19600.0, 3.0], [20000.0, 5.0], [20400.0, 18.0], [21200.0, 3.0], [20800.0, 3.0], [21600.0, 18.0], [22000.0, 9.0], [22400.0, 3.0], [23200.0, 33.0], [22800.0, 7.0], [24400.0, 1.0], [24000.0, 44.0], [24800.0, 4.0], [26400.0, 7.0], [25600.0, 1.0], [26000.0, 1.0], [27600.0, 9.0], [28000.0, 10.0], [28400.0, 4.0], [29600.0, 16.0], [28800.0, 8.0], [31200.0, 7.0], [32800.0, 2.0], [36000.0, 25.0], [40800.0, 1.0], [41600.0, 3.0], [43200.0, 3.0], [44000.0, 2.0], [44800.0, 1.0], [45600.0, 32.0], [47200.0, 4.0], [48000.0, 24.0], [48800.0, 4.0], [50400.0, 2.0], [54400.0, 12.0], [56800.0, 6.0], [60000.0, 2.0], [60800.0, 2.0], [62400.0, 2.0], [64000.0, 6.0], [67200.0, 6.0], [65600.0, 2.0], [72000.0, 3.0], [76800.0, 9.0], [78400.0, 2.0], [88000.0, 1.0], [118400.0, 12.0], [128000.0, 6.0], [129600.0, 6.0], [164100.0, 13.0], [67100.0, 3.0], [71900.0, 2.0], [70300.0, 1.0], [73500.0, 1.0], [79900.0, 4.0], [78300.0, 7.0], [84700.0, 2.0], [99100.0, 2.0], [100700.0, 1.0], [103900.0, 2.0], [118300.0, 9.0], [127900.0, 31.0], [129500.0, 1.0], [133000.0, 11.0], [34700.0, 33.0], [33900.0, 18.0], [33100.0, 3.0], [36300.0, 3.0], [37100.0, 2.0], [37900.0, 2.0], [40300.0, 1.0], [41900.0, 8.0], [169100.0, 1.0], [44300.0, 27.0], [46700.0, 1.0], [45100.0, 4.0], [47500.0, 1.0], [49100.0, 1.0], [49900.0, 8.0], [56300.0, 2.0], [58700.0, 2.0], [61900.0, 1.0], [63500.0, 84.0], [64300.0, 2.0], [65100.0, 1.0], [66200.0, 2.0], [72600.0, 3.0], [77400.0, 1.0], [74200.0, 2.0], [80600.0, 6.0], [83800.0, 21.0], [87000.0, 1.0], [93400.0, 2.0], [99800.0, 2.0], [103000.0, 10.0], [109400.0, 6.0], [117400.0, 1.0], [128600.0, 9.0], [130200.0, 42.0], [68500.0, 2.0], [70100.0, 3.0], [71700.0, 45.0], [74900.0, 2.0], [78100.0, 25.0], [82900.0, 1.0], [94100.0, 1.0], [95700.0, 2.0], [98900.0, 2.0], [118100.0, 31.0], [127700.0, 11.0], [129300.0, 2.0], [168600.0, 3.0], [16500.0, 120.0], [17300.0, 32.0], [16900.0, 30.0], [18100.0, 36.0], [17700.0, 39.0], [19300.0, 1.0], [18900.0, 3.0], [18500.0, 9.0], [19700.0, 26.0], [20500.0, 7.0], [21300.0, 14.0], [20900.0, 77.0], [22100.0, 12.0], [21700.0, 5.0], [22500.0, 11.0], [22900.0, 3.0], [23300.0, 14.0], [24500.0, 22.0], [24100.0, 11.0], [23700.0, 2.0], [25300.0, 1.0], [27300.0, 6.0], [28100.0, 37.0], [28500.0, 20.0], [29300.0, 18.0], [28900.0, 26.0], [29700.0, 5.0], [30500.0, 7.0], [31300.0, 2.0], [30900.0, 2.0], [32100.0, 9.0], [32500.0, 2.0], [33000.0, 2.0], [34600.0, 3.0], [33800.0, 7.0], [36200.0, 4.0], [38600.0, 3.0], [37800.0, 5.0], [40200.0, 1.0], [41800.0, 10.0], [42600.0, 1.0], [44200.0, 4.0], [43400.0, 1.0], [46600.0, 4.0], [47400.0, 3.0], [195100.0, 1.0], [49800.0, 22.0], [52200.0, 2.0], [51400.0, 1.0], [53000.0, 7.0], [63400.0, 3.0], [62600.0, 1.0], [61800.0, 2.0], [64200.0, 4.0], [72400.0, 4.0], [70800.0, 6.0], [77200.0, 1.0], [78800.0, 1.0], [82000.0, 2.0], [86800.0, 20.0], [90000.0, 1.0], [91600.0, 1.0], [96400.0, 1.0], [102800.0, 1.0], [107600.0, 2.0], [128400.0, 1.0], [144100.0, 1.0], [156900.0, 9.0], [67500.0, 3.0], [65900.0, 2.0], [81900.0, 2.0], [85100.0, 2.0], [93100.0, 1.0], [94700.0, 2.0], [97900.0, 7.0], [102700.0, 2.0], [112300.0, 1.0], [128300.0, 3.0], [129900.0, 1.0], [34100.0, 22.0], [33300.0, 2.0], [133100.0, 2.0], [35700.0, 11.0], [36500.0, 20.0], [142700.0, 1.0], [38100.0, 3.0], [37300.0, 1.0], [45300.0, 2.0], [46100.0, 6.0], [46900.0, 26.0], [47700.0, 7.0], [48500.0, 6.0], [57300.0, 2.0], [59700.0, 2.0], [61300.0, 1.0], [62100.0, 1.0], [63700.0, 10.0], [65300.0, 3.0], [64500.0, 9.0], [66600.0, 3.0], [68200.0, 2.0], [69800.0, 3.0], [73000.0, 1.0], [76200.0, 1.0], [81000.0, 1.0], [89000.0, 1.0], [92200.0, 2.0], [90600.0, 5.0], [101800.0, 5.0], [100200.0, 21.0], [127400.0, 14.0], [130600.0, 20.0], [146800.0, 5.0], [65700.0, 2.0], [67300.0, 3.0], [68900.0, 1.0], [73700.0, 4.0], [70500.0, 6.0], [76900.0, 1.0], [75300.0, 1.0], [80100.0, 2.0], [81700.0, 2.0], [84900.0, 2.0], [86500.0, 8.0], [100900.0, 5.0], [99300.0, 1.0], [124900.0, 1.0], [128100.0, 2.0], [8700.0, 12.0], [8500.0, 28.0], [8300.0, 76.0], [132600.0, 1.0], [8900.0, 4.0], [9100.0, 6.0], [9300.0, 279.0], [9500.0, 120.0], [9700.0, 151.0], [9900.0, 126.0], [10100.0, 120.0], [10500.0, 408.0], [10700.0, 10.0], [10300.0, 31.0], [11100.0, 49.0], [10900.0, 70.0], [11500.0, 31.0], [11300.0, 202.0], [11700.0, 282.0], [11900.0, 50.0], [12100.0, 44.0], [12700.0, 332.0], [12500.0, 192.0], [12300.0, 217.0], [12900.0, 338.0], [13100.0, 117.0], [13300.0, 51.0], [13500.0, 26.0], [13700.0, 9.0], [14100.0, 9.0], [14300.0, 37.0], [13900.0, 84.0], [14500.0, 39.0], [14700.0, 1.0], [14900.0, 15.0], [15300.0, 3.0], [15700.0, 26.0], [15500.0, 2.0], [16100.0, 4.0], [16300.0, 21.0], [17400.0, 52.0], [16600.0, 25.0], [17000.0, 60.0], [18200.0, 66.0], [18600.0, 21.0], [19000.0, 8.0], [19400.0, 2.0], [19800.0, 35.0], [20200.0, 3.0], [20600.0, 2.0], [21400.0, 47.0], [21000.0, 5.0], [22200.0, 34.0], [21800.0, 2.0], [22600.0, 15.0], [23400.0, 19.0], [23000.0, 3.0], [23800.0, 4.0], [25000.0, 2.0], [24600.0, 2.0], [25800.0, 2.0], [26200.0, 1.0], [27400.0, 1.0], [28200.0, 19.0], [28600.0, 60.0], [29400.0, 18.0], [29000.0, 99.0], [29800.0, 12.0], [31400.0, 1.0], [31800.0, 4.0], [32600.0, 2.0], [33200.0, 3.0], [34800.0, 5.0], [35600.0, 10.0], [38000.0, 1.0], [39600.0, 2.0], [155900.0, 1.0], [42800.0, 128.0], [41200.0, 1.0], [42000.0, 30.0], [44400.0, 1.0], [46000.0, 11.0], [47600.0, 2.0], [49200.0, 2.0], [50800.0, 1.0], [53200.0, 2.0], [56400.0, 4.0], [58800.0, 1.0], [60400.0, 1.0], [61200.0, 2.0], [63600.0, 42.0], [64400.0, 2.0], [69600.0, 18.0], [66400.0, 2.0], [72800.0, 1.0], [76000.0, 1.0], [80800.0, 3.0], [79200.0, 5.0], [82400.0, 2.0], [92000.0, 1.0], [90400.0, 1.0], [95200.0, 1.0], [100000.0, 44.0], [117600.0, 5.0], [161600.0, 1.0], [168000.0, 6.0], [66300.0, 2.0], [71100.0, 1.0], [72700.0, 2.0], [77500.0, 11.0], [75900.0, 3.0], [79100.0, 8.0], [80700.0, 3.0], [82300.0, 4.0], [91900.0, 2.0], [96700.0, 2.0], [99900.0, 4.0], [128700.0, 30.0], [130300.0, 33.0], [163400.0, 2.0], [34300.0, 19.0], [35900.0, 17.0], [141900.0, 11.0], [37500.0, 1.0], [39100.0, 2.0], [40700.0, 4.0], [41500.0, 4.0], [43100.0, 2.0], [47100.0, 2.0], [48700.0, 6.0], [50300.0, 10.0], [54300.0, 3.0], [55900.0, 2.0], [60700.0, 2.0], [59900.0, 1.0], [63100.0, 1.0], [61500.0, 2.0], [64700.0, 8.0], [63900.0, 21.0], [68600.0, 1.0], [67000.0, 6.0], [73400.0, 1.0], [71800.0, 17.0], [79800.0, 1.0], [86200.0, 2.0], [87800.0, 3.0], [94200.0, 2.0], [97400.0, 1.0], [95800.0, 1.0], [100600.0, 1.0], [103800.0, 1.0], [105400.0, 2.0], [118200.0, 4.0], [126200.0, 2.0], [127800.0, 3.0], [133200.0, 2.0], [155600.0, 1.0], [66100.0, 2.0], [69300.0, 2.0], [67700.0, 1.0], [70900.0, 2.0], [72500.0, 43.0], [77300.0, 2.0], [78900.0, 2.0], [83700.0, 4.0], [82100.0, 7.0], [86900.0, 1.0], [98100.0, 11.0], [117300.0, 2.0], [128500.0, 5.0], [147800.0, 2.0], [16700.0, 78.0], [17100.0, 73.0], [17500.0, 28.0], [18300.0, 40.0], [19100.0, 15.0], [18700.0, 13.0], [20300.0, 11.0], [21100.0, 2.0], [21500.0, 6.0], [20700.0, 3.0], [22300.0, 6.0], [21900.0, 2.0], [23500.0, 1.0], [22700.0, 2.0], [23100.0, 5.0], [23900.0, 3.0], [25500.0, 6.0], [27100.0, 2.0], [27500.0, 10.0], [26700.0, 1.0], [28300.0, 1.0], [28700.0, 4.0], [29100.0, 26.0], [29500.0, 14.0], [30300.0, 2.0], [29900.0, 2.0], [31500.0, 4.0], [32700.0, 2.0], [34200.0, 13.0], [35800.0, 6.0], [36600.0, 10.0], [37400.0, 2.0], [39000.0, 2.0], [42200.0, 3.0], [43000.0, 2.0], [41400.0, 2.0], [43800.0, 11.0], [45400.0, 1.0], [47800.0, 55.0], [48600.0, 5.0], [49400.0, 2.0], [55000.0, 1.0], [59800.0, 3.0], [62200.0, 3.0], [63000.0, 1.0], [63800.0, 3.0], [64600.0, 6.0], [66800.0, 2.0], [73200.0, 1.0], [70000.0, 1.0], [71600.0, 2.0], [76400.0, 2.0], [78000.0, 23.0], [86000.0, 1.0], [87600.0, 1.0], [97200.0, 1.0], [103600.0, 1.0], [111600.0, 1.0], [130800.0, 4.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 196900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 120.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 60439.0, "series": [{"data": [[0.0, 60439.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1534.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 18423.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 120.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.000000000000002, "minX": 1.68288354E12, "maxY": 3000.0, "series": [{"data": [[1.68288354E12, 3000.0], [1.68288384E12, 2599.703677000722], [1.6828839E12, 8.000000000000002], [1.68288372E12, 3000.0], [1.68288378E12, 3000.0], [1.6828836E12, 3000.0], [1.68288366E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828839E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 41.0, "minX": 2.0, "maxY": 100101.5, "series": [{"data": [[2.0, 31275.0], [3.0, 31275.0], [4.0, 31275.0], [5.0, 31274.0], [6.0, 31271.0], [7.0, 31269.0], [8.0, 23187.0], [9.0, 23187.0], [10.0, 23187.0], [12.0, 23185.0], [13.0, 23277.0], [14.0, 23230.5], [16.0, 24157.0], [17.0, 24156.0], [18.0, 24148.0], [19.0, 24142.0], [21.0, 24100.5], [22.0, 24101.0], [24.0, 24099.0], [25.0, 24099.0], [26.0, 24098.0], [28.0, 24096.0], [30.0, 24096.0], [32.0, 24095.0], [35.0, 24094.0], [34.0, 24094.0], [37.0, 24091.0], [36.0, 24094.0], [39.0, 24090.0], [38.0, 24091.0], [41.0, 24086.0], [40.0, 24089.0], [43.0, 24085.0], [42.0, 24085.0], [45.0, 24084.0], [44.0, 24084.0], [47.0, 24083.0], [46.0, 24083.0], [49.0, 24078.0], [48.0, 24078.0], [51.0, 24060.0], [50.0, 24061.0], [53.0, 24057.0], [52.0, 24058.0], [55.0, 24054.0], [54.0, 24056.0], [57.0, 24044.0], [56.0, 24053.0], [59.0, 24038.0], [61.0, 24033.0], [62.0, 24030.0], [67.0, 23780.0], [66.0, 24021.0], [65.0, 24022.0], [64.0, 24029.5], [70.0, 16802.0], [69.0, 16803.0], [68.0, 23778.0], [75.0, 16801.333333333332], [74.0, 16802.0], [72.0, 23243.0], [79.0, 16799.0], [78.0, 23241.0], [77.0, 16800.0], [76.0, 16708.0], [83.0, 16798.0], [82.0, 16799.666666666668], [86.0, 16797.0], [85.0, 16798.5], [91.0, 16750.0], [89.0, 16796.0], [88.0, 16751.0], [95.0, 16795.0], [94.0, 16703.0], [93.0, 16748.5], [99.0, 16792.0], [97.0, 16795.0], [96.0, 16701.0], [103.0, 16697.0], [102.0, 16790.0], [100.0, 16791.0], [107.0, 16788.0], [106.0, 16788.5], [104.0, 16788.0], [111.0, 16781.0], [110.0, 16781.0], [109.0, 16787.0], [108.0, 16787.0], [114.0, 16777.0], [113.0, 16778.5], [119.0, 16772.0], [118.0, 16772.0], [117.0, 16772.0], [116.0, 16775.0], [123.0, 16762.333333333332], [120.0, 16765.0], [127.0, 16747.0], [124.0, 16758.0], [134.0, 16733.0], [133.0, 16734.666666666668], [130.0, 16741.0], [128.0, 16746.5], [143.0, 15849.0], [142.0, 19250.0], [140.0, 15848.0], [139.0, 16330.0], [138.0, 16332.0], [137.0, 16733.333333333332], [151.0, 19067.0], [149.0, 15845.0], [148.0, 22287.0], [147.0, 15846.5], [146.0, 22287.0], [159.0, 22285.0], [158.0, 22285.0], [155.0, 15844.0], [154.0, 15844.0], [153.0, 15845.0], [152.0, 22287.0], [167.0, 20672.0], [164.0, 22648.0], [162.0, 15844.0], [161.0, 19155.0], [174.0, 22279.0], [173.0, 15838.0], [172.0, 22280.0], [171.0, 15841.0], [170.0, 15841.0], [169.0, 19244.5], [183.0, 22272.666666666668], [180.0, 15834.0], [179.0, 15836.0], [178.0, 22520.333333333332], [176.0, 22278.0], [191.0, 15828.0], [190.0, 15830.0], [189.0, 22452.0], [187.0, 19050.5], [185.0, 15831.5], [199.0, 15823.0], [198.0, 22629.0], [197.0, 22266.0], [196.0, 15826.0], [195.0, 22449.5], [194.0, 15827.0], [192.0, 15827.0], [207.0, 15814.0], [206.0, 22618.0], [204.0, 15818.0], [202.0, 15817.0], [201.0, 22626.5], [215.0, 15803.0], [214.0, 15805.0], [213.0, 22245.0], [212.0, 15811.0], [211.0, 22616.0], [210.0, 19032.5], [208.0, 22253.0], [223.0, 17936.333333333332], [220.0, 22233.0], [219.0, 22234.0], [218.0, 19018.5], [216.0, 15801.0], [231.0, 22208.0], [230.0, 15766.0], [229.0, 22574.0], [228.0, 15769.0], [227.0, 19177.0], [225.0, 22582.0], [224.0, 15783.0], [236.0, 15756.0], [235.0, 17909.666666666668], [232.0, 15766.0], [247.0, 15738.0], [246.0, 15739.0], [245.0, 15741.0], [244.0, 22186.0], [243.0, 15747.0], [241.0, 22188.0], [240.0, 19066.0], [255.0, 22540.0], [254.0, 18955.0], [253.0, 22175.0], [251.0, 22176.0], [250.0, 22543.0], [249.0, 19139.5], [270.0, 21454.0], [268.0, 21453.0], [267.0, 22348.5], [265.0, 22166.0], [264.0, 18946.5], [262.0, 22533.0], [261.0, 19135.5], [259.0, 15734.0], [258.0, 20149.0], [286.0, 21448.0], [287.0, 14643.0], [285.0, 21448.0], [284.0, 21449.0], [283.0, 21450.0], [282.0, 21450.0], [281.0, 21450.0], [280.0, 21450.0], [279.0, 18048.5], [272.0, 21453.666666666668], [274.0, 21451.0], [273.0, 21088.0], [278.0, 21451.0], [276.0, 21452.5], [302.0, 19050.0], [303.0, 21438.0], [301.0, 21442.0], [291.0, 21446.0], [289.0, 21446.0], [288.0, 21448.0], [299.0, 21441.0], [298.0, 21440.0], [296.0, 21442.0], [295.0, 21442.0], [294.0, 21443.0], [293.0, 21444.0], [292.0, 21444.0], [318.0, 21400.0], [319.0, 17997.5], [317.0, 21036.0], [307.0, 21434.0], [306.0, 14630.0], [305.0, 18032.5], [315.0, 21405.0], [314.0, 21407.0], [313.0, 14602.0], [312.0, 21407.0], [311.0, 21423.0], [310.0, 18027.5], [308.0, 21432.0], [328.0, 21396.0], [335.0, 20882.0], [331.0, 21732.0], [330.0, 21394.0], [329.0, 21396.0], [327.0, 21396.0], [325.0, 21397.0], [324.0, 19785.5], [323.0, 14594.0], [348.0, 20484.0], [350.0, 13677.0], [351.0, 13677.0], [349.0, 13678.0], [346.0, 13685.0], [344.0, 13687.0], [343.0, 13707.0], [337.0, 20528.0], [336.0, 17127.25], [339.0, 13722.0], [338.0, 20528.0], [342.0, 20516.0], [341.0, 20516.0], [340.0, 13722.0], [366.0, 17151.5], [367.0, 13572.0], [364.0, 13578.0], [355.0, 13589.0], [354.0, 13588.0], [353.0, 20569.5], [363.0, 13580.0], [362.0, 13584.0], [361.0, 13584.0], [360.0, 16988.5], [359.0, 13586.0], [356.0, 13588.0], [382.0, 12692.0], [381.0, 13717.0], [374.0, 13546.666666666666], [371.0, 20706.0], [370.0, 13550.0], [369.0, 13570.0], [368.0, 13571.0], [387.0, 12691.0], [398.0, 16267.0], [399.0, 19844.0], [396.0, 18056.75], [393.0, 12690.0], [391.0, 16269.0], [389.0, 12690.0], [388.0, 12690.0], [386.0, 19849.0], [385.0, 19847.666666666668], [413.0, 12674.0], [415.0, 16251.0], [412.0, 12674.0], [403.0, 19842.0], [402.0, 12856.0], [411.0, 19831.0], [410.0, 19833.0], [409.0, 16255.5], [407.0, 12682.5], [406.0, 13191.0], [404.0, 13194.0], [431.0, 19825.0], [429.0, 15054.666666666666], [426.0, 12669.0], [424.0, 15055.666666666666], [421.0, 19828.0], [420.0, 19828.0], [418.0, 15058.333333333334], [434.0, 14356.0], [446.0, 12915.5], [444.0, 12661.0], [443.0, 19821.0], [440.0, 12665.0], [439.0, 19823.0], [438.0, 16244.0], [437.0, 12667.0], [436.0, 12666.0], [433.0, 19824.0], [432.0, 12667.0], [451.0, 19812.0], [461.0, 13149.0], [462.0, 16218.5], [460.0, 16219.0], [459.0, 13149.0], [456.0, 12640.0], [455.0, 16480.0], [453.0, 17073.5], [450.0, 12656.0], [449.0, 13166.0], [448.0, 16060.5], [479.0, 19774.0], [478.0, 12960.333333333334], [475.0, 15240.0], [474.0, 19072.0], [472.0, 12633.0], [471.0, 16466.0], [470.0, 13142.0], [467.0, 17405.666666666668], [464.0, 16468.5], [494.0, 16155.5], [492.0, 13087.0], [491.0, 13101.0], [490.0, 17294.0], [487.0, 17017.5], [485.0, 16082.0], [484.0, 13135.0], [481.0, 13154.0], [480.0, 13159.0], [511.0, 14188.8], [506.0, 19708.0], [505.0, 13108.0], [504.0, 16702.75], [500.0, 12820.5], [498.0, 13080.0], [497.0, 12571.0], [496.0, 16407.0], [537.0, 11139.0], [541.0, 11135.0], [542.0, 11133.0], [529.0, 11144.0], [528.0, 11145.0], [531.0, 12285.0], [530.0, 11143.0], [540.0, 11135.0], [539.0, 12281.0], [538.0, 11138.0], [536.0, 11711.0], [519.0, 12289.0], [517.0, 11148.0], [516.0, 12075.0], [515.0, 11567.0], [514.0, 18725.0], [513.0, 11841.0], [526.0, 11145.0], [525.0, 11134.0], [522.0, 12289.0], [521.0, 12290.0], [520.0, 11147.0], [533.0, 11141.0], [532.0, 12284.0], [574.0, 11102.0], [575.0, 11101.0], [572.0, 11232.0], [571.0, 11484.0], [568.0, 12247.0], [551.0, 11129.0], [549.0, 11129.0], [548.0, 14823.5], [546.0, 12275.0], [545.0, 11132.0], [544.0, 11115.0], [559.0, 11112.0], [558.0, 11095.0], [556.0, 11115.0], [555.0, 11117.0], [554.0, 11125.0], [553.0, 11125.0], [552.0, 11129.0], [567.0, 11107.0], [563.0, 11681.5], [562.0, 11111.0], [560.0, 11112.0], [605.0, 11220.0], [607.0, 11219.5], [593.0, 11158.0], [592.0, 11094.0], [604.0, 10059.5], [603.0, 10079.0], [601.0, 10111.0], [600.0, 10114.0], [590.0, 11094.0], [577.0, 11082.5], [580.0, 11097.0], [578.0, 11097.0], [582.0, 11096.5], [581.0, 11097.0], [587.0, 11094.5], [585.0, 11477.333333333334], [599.0, 11260.0], [598.0, 10497.333333333334], [595.0, 11261.0], [594.0, 12215.0], [637.0, 10194.0], [627.0, 10214.0], [639.0, 10189.0], [624.0, 10218.0], [626.0, 10212.0], [625.0, 10215.0], [635.0, 10202.5], [633.0, 10207.0], [632.0, 10207.5], [614.0, 10029.0], [613.0, 11211.0], [612.0, 11212.0], [611.0, 10071.0], [610.0, 11215.0], [609.0, 10072.0], [608.0, 10073.0], [623.0, 10217.0], [622.0, 10943.0], [621.0, 10354.5], [620.0, 10945.0], [618.0, 11208.0], [617.0, 11209.0], [616.0, 10066.0], [630.0, 10208.0], [629.0, 10211.0], [628.0, 9067.0], [658.0, 9293.5], [668.0, 9290.5], [669.0, 9290.0], [657.0, 9294.0], [666.0, 9290.0], [665.0, 9290.0], [664.0, 9290.0], [647.0, 9298.0], [646.0, 9297.0], [643.0, 9298.0], [641.0, 10186.0], [640.0, 10188.0], [655.0, 9294.0], [653.0, 9295.333333333334], [650.0, 9297.5], [648.0, 9295.0], [663.0, 9293.0], [662.0, 9292.0], [660.0, 9293.0], [699.0, 9256.0], [701.0, 9255.5], [698.0, 9272.0], [697.0, 9277.0], [696.0, 9276.0], [678.0, 9284.0], [677.0, 9284.5], [675.0, 9285.0], [674.0, 9287.0], [673.0, 9290.0], [672.0, 9289.666666666666], [687.0, 9279.0], [686.0, 9282.0], [684.0, 9282.0], [683.0, 9283.0], [681.0, 9284.0], [680.0, 9284.0], [695.0, 9277.0], [693.0, 9278.0], [692.0, 9278.0], [690.0, 9279.333333333334], [722.0, 9208.0], [733.0, 5247.0], [732.0, 8697.5], [729.0, 14148.0], [711.0, 9240.0], [710.0, 9246.0], [709.0, 9246.0], [708.0, 9246.0], [705.0, 9251.0], [704.0, 9251.5], [719.0, 9237.5], [718.0, 9237.0], [716.0, 9238.0], [715.0, 9238.0], [713.0, 9237.0], [712.0, 9240.0], [727.0, 9203.333333333334], [724.0, 9206.0], [723.0, 9206.0], [721.0, 9209.0], [720.0, 9209.0], [766.0, 12506.0], [767.0, 13251.0], [753.0, 13264.0], [755.0, 7021.0], [754.0, 13263.0], [765.0, 13253.0], [763.0, 13252.0], [762.0, 13257.0], [760.0, 12481.0], [751.0, 13266.0], [737.0, 6524.0], [736.0, 9082.0], [742.0, 12144.0], [740.0, 10220.0], [750.0, 9640.5], [748.0, 9585.0], [747.0, 6013.0], [745.0, 6013.5], [744.0, 8693.5], [759.0, 13258.0], [758.0, 12132.0], [757.0, 7018.0], [756.0, 13262.0], [793.0, 12834.0], [786.0, 13212.0], [797.0, 12285.5], [798.0, 12286.0], [785.0, 13218.0], [784.0, 13218.0], [795.0, 12287.0], [792.0, 13192.0], [774.0, 13236.0], [773.0, 13241.0], [772.0, 13242.0], [771.0, 12854.0], [769.0, 13243.0], [768.0, 13243.0], [783.0, 13223.0], [782.0, 13226.0], [781.0, 13226.0], [778.0, 13227.0], [777.0, 13233.0], [776.0, 13234.0], [790.0, 13199.5], [788.0, 13209.0], [787.0, 13210.0], [824.0, 12276.0], [829.0, 12266.0], [830.0, 12262.0], [817.0, 12280.0], [828.0, 12266.0], [827.0, 12266.0], [825.0, 12274.0], [815.0, 12281.0], [801.0, 12284.0], [800.0, 12285.0], [804.0, 12284.0], [802.0, 12285.0], [807.0, 12284.0], [806.0, 12284.0], [814.0, 12281.0], [813.0, 12282.0], [811.0, 12282.0], [810.0, 12283.0], [808.0, 12282.0], [823.0, 12276.0], [822.0, 12276.0], [821.0, 12276.5], [819.0, 12278.0], [860.0, 12189.0], [852.0, 12231.0], [863.0, 12188.666666666666], [848.0, 12234.0], [851.0, 12231.0], [850.0, 12233.0], [858.0, 12192.0], [857.0, 12199.0], [856.0, 12201.0], [839.0, 12254.0], [838.0, 12254.333333333334], [835.0, 12257.0], [834.0, 12259.0], [833.0, 12259.0], [832.0, 12260.0], [847.0, 12242.0], [846.0, 12243.0], [844.0, 12245.5], [842.0, 12247.0], [841.0, 12250.0], [840.0, 12251.0], [855.0, 12202.0], [854.0, 12219.0], [853.0, 12225.0], [890.0, 3109.0], [883.0, 9455.0], [893.0, 3088.0], [894.0, 3088.0], [882.0, 2044.5], [880.0, 2048.0], [891.0, 3108.0], [889.0, 3109.0], [870.0, 2141.0], [868.0, 2142.0], [867.0, 2209.5], [865.0, 2211.0], [864.0, 2211.0], [879.0, 2049.0], [877.0, 2051.0], [876.0, 2052.0], [875.0, 2052.5], [873.0, 2133.0], [872.0, 2137.5], [887.0, 2096.0], [886.0, 2099.5], [884.0, 9455.0], [925.0, 2226.0], [926.0, 2225.0], [924.0, 2228.0], [921.0, 2227.0], [920.0, 2230.0], [901.0, 2233.0], [900.0, 2233.0], [899.0, 2234.0], [897.0, 2233.6666666666665], [911.0, 2231.0], [910.0, 2231.0], [908.0, 2232.0], [906.0, 2232.6666666666665], [904.0, 2233.5], [919.0, 2228.6666666666665], [916.0, 2230.5], [914.0, 2230.0], [913.0, 2230.5], [957.0, 2212.5], [959.0, 2212.0], [954.0, 2213.0], [953.0, 2213.0], [950.0, 2214.0], [948.0, 2217.0], [946.0, 2217.0], [944.0, 2218.0], [943.0, 2218.0], [928.0, 2226.0], [930.0, 2225.0], [929.0, 2226.0], [933.0, 2223.0], [931.0, 2224.0], [935.0, 2221.0], [934.0, 2223.0], [942.0, 2220.0], [940.0, 2221.3333333333335], [939.0, 2220.0], [936.0, 2222.0], [985.0, 2179.5], [990.0, 2171.0], [991.0, 2170.0], [977.0, 2187.0], [976.0, 2190.0], [989.0, 2179.0], [988.0, 2178.0], [987.0, 2179.0], [975.0, 2191.0], [960.0, 2212.5], [962.0, 8452.0], [961.0, 2212.0], [964.0, 8441.0], [963.0, 2204.0], [967.0, 2196.0], [966.0, 2196.0], [972.0, 2192.0], [971.0, 2192.0], [970.0, 2193.0], [969.0, 2195.0], [968.0, 2195.0], [983.0, 2180.0], [982.0, 2181.0], [980.0, 2182.0], [978.0, 2184.0], [1012.0, 2105.0], [1015.0, 8331.0], [1014.0, 8334.0], [1013.0, 2106.0], [1011.0, 2109.0], [1010.0, 2113.0], [1009.0, 2113.5], [999.0, 2164.0], [995.0, 2166.0], [994.0, 2169.0], [993.0, 2168.5], [1007.0, 2127.0], [1006.0, 2139.0], [1005.0, 2139.0], [1003.0, 2158.0], [1002.0, 2159.0], [1001.0, 2160.0], [1000.0, 2162.0], [1150.0, 186.0], [1148.0, 186.14285714285714], [1146.0, 187.0], [1142.0, 187.0], [1140.0, 187.0], [1206.0, 335.0], [1212.0, 334.0], [1214.0, 334.0], [1186.0, 179.0], [1188.0, 179.0], [1204.0, 335.0], [1160.0, 184.125], [1158.0, 185.0], [1152.0, 186.0], [1154.0, 231.5], [1162.0, 184.0], [1166.0, 184.0], [1178.0, 184.0], [1174.0, 184.0], [1172.0, 184.0], [1168.0, 184.33333333333334], [1198.0, 177.5], [1194.0, 178.0], [1192.0, 179.0], [1252.0, 303.0], [1272.0, 304.0], [1268.0, 305.0], [1230.0, 331.25], [1224.0, 332.0], [1218.0, 334.0], [1320.0, 279.5], [1316.0, 280.0], [1322.0, 297.66666666666663], [1282.0, 303.25], [1308.0, 280.0], [1306.0, 280.0], [1296.0, 337.0], [1404.0, 264.5], [1406.0, 265.0], [1386.0, 303.0], [1388.0, 433.0], [1402.0, 264.0], [1400.0, 264.0], [1398.0, 264.0], [1396.0, 264.5], [1394.0, 265.0], [1414.0, 282.0], [1420.0, 273.8571428571429], [1466.0, 256.0], [1462.0, 295.0], [1440.0, 285.54545454545456], [1438.0, 299.5], [1408.0, 263.16666666666663], [1410.0, 263.5], [1416.0, 291.25], [1418.0, 264.0], [1422.0, 299.3333333333333], [1432.0, 342.0], [1430.0, 300.0], [1428.0, 364.5], [1426.0, 300.0], [1424.0, 300.0], [1528.0, 288.5], [1532.0, 289.0], [1506.0, 252.6], [1512.0, 251.5], [1514.0, 252.0], [1526.0, 289.0], [1520.0, 257.7142857142857], [1472.0, 285.4], [1476.0, 292.5], [1480.0, 293.5], [1478.0, 293.0], [1482.0, 294.0], [1496.0, 292.0], [1494.0, 292.0], [1516.0, 253.0], [1548.0, 304.25], [1592.0, 192.0], [1590.0, 225.0], [1588.0, 195.66666666666666], [1538.0, 289.0], [1536.0, 289.0], [1546.0, 288.0], [1544.0, 288.0], [1566.0, 228.66666666666666], [1560.0, 229.0], [1558.0, 229.0], [1554.0, 229.0], [1652.0, 210.0], [1662.0, 210.0], [1660.0, 209.5], [1654.0, 211.0], [1610.0, 185.0], [1608.0, 185.0], [1602.0, 186.0], [1630.0, 183.5], [1628.0, 185.0], [1622.0, 227.16666666666669], [1646.0, 209.5], [1642.0, 211.0], [1718.0, 181.0], [1726.0, 181.5], [1702.0, 205.53846153846152], [1700.0, 204.0], [1708.0, 205.0], [1714.0, 204.0], [1664.0, 209.0], [1674.0, 208.0], [1666.0, 209.0], [1676.0, 208.0], [1692.0, 206.0], [1690.0, 206.5], [1686.0, 207.33333333333334], [1684.0, 207.0], [1680.0, 208.0], [1786.0, 164.0], [1790.0, 163.0], [1736.0, 177.5], [1734.0, 178.0], [1730.0, 180.5], [1728.0, 181.0], [1758.0, 173.46666666666667], [1854.0, 65.33333333333333], [1832.0, 1464.909090909091], [1834.0, 126.0], [1836.0, 126.0], [1848.0, 66.0], [1844.0, 97.5], [1842.0, 101.0], [1804.0, 163.0], [1802.0, 163.75], [1800.0, 164.25], [1798.0, 164.5], [1794.0, 163.83333333333331], [1792.0, 163.0], [1816.0, 147.0], [1912.0, 2034.0], [1888.0, 2057.0], [1892.0, 2055.0], [1894.0, 2053.0], [1898.0, 2051.5], [1896.0, 2051.0], [1900.0, 2046.0], [1918.0, 2026.0], [1914.0, 2027.0], [1910.0, 2043.3333333333333], [1906.0, 2044.0], [1856.0, 55.0], [1862.0, 43.0], [1864.0, 42.0], [1868.0, 6425.0], [1866.0, 41.0], [1870.0, 6415.0], [1886.0, 2057.0], [1884.0, 2057.0], [1882.0, 2058.0], [1878.0, 2060.0], [1876.0, 4139.0], [1874.0, 100101.5], [1872.0, 5315.0], [1902.0, 2046.5], [1978.0, 2175.0], [1956.0, 2198.0], [1952.0, 2200.0], [1954.0, 2199.5], [1960.0, 2191.5], [1958.0, 2197.0], [1962.0, 2190.5], [1966.0, 2188.0], [1964.0, 2188.0], [1980.0, 2169.0], [1976.0, 2179.0], [1974.0, 2179.5], [1972.0, 2179.0], [1968.0, 2186.0], [1950.0, 2201.0], [1920.0, 2019.0], [1928.0, 2006.0], [1930.0, 1996.0], [1932.0, 1663.0], [1934.0, 2777.0], [1948.0, 1076.0], [1946.0, 1451.0], [1942.0, 2204.0], [1936.0, 1078.0], [1984.0, 2160.0], [2004.0, 2103.0], [1986.0, 2149.0], [1988.0, 2141.0], [1992.0, 2139.5], [1990.0, 2141.0], [2002.0, 2123.0], [1998.0, 2128.0], [2076.0, 164.125], [2168.0, 118.72727272727273], [2164.0, 119.0], [2120.0, 142.0], [2132.0, 133.5], [2108.0, 144.0], [2100.0, 144.0], [2096.0, 145.0], [2088.0, 150.0], [2084.0, 163.42857142857144], [2280.0, 823.0], [2276.0, 461.25], [2272.0, 743.5], [2180.0, 189.5], [2232.0, 181.375], [2420.0, 176.0], [2412.0, 184.5], [2376.0, 189.625], [2380.0, 189.0], [2392.0, 188.0], [2388.0, 190.0], [2424.0, 175.0], [2416.0, 181.0], [2320.0, 767.9999999999999], [2312.0, 316.75], [2316.0, 176.0], [2352.0, 199.0], [2348.0, 200.0], [2340.0, 1100.0], [2336.0, 478.2857142857143], [2556.0, 1516.0], [2496.0, 157.0], [2500.0, 156.42857142857142], [2512.0, 145.0], [2520.0, 143.0], [2552.0, 79.33333333333333], [2540.0, 85.0], [2536.0, 86.0], [2532.0, 142.0], [2448.0, 161.33333333333334], [2444.0, 163.0], [2436.0, 173.0], [2432.0, 174.66666666666666], [2492.0, 156.375], [2660.0, 2263.0], [2624.0, 2605.3333333333335], [2628.0, 3030.0], [2636.0, 3219.0], [2640.0, 3021.0], [2648.0, 3016.0], [2652.0, 3202.5], [2672.0, 3181.0], [2668.0, 3192.0], [2564.0, 1512.5], [2568.0, 1506.0], [2572.0, 1501.0], [2576.0, 1493.0], [2584.0, 1443.0], [2588.0, 1441.0], [2620.0, 1051.0], [2616.0, 1055.0], [2604.0, 1420.5], [2600.0, 1426.0], [2596.0, 1428.5], [2592.0, 1432.0], [2808.0, 166.8], [2764.0, 170.0], [2772.0, 170.0], [2776.0, 169.0], [2812.0, 167.1], [2800.0, 168.0], [2796.0, 168.5], [2792.0, 168.0], [2724.0, 173.0], [2880.0, 2104.0], [2940.0, 182.0], [2892.0, 5012.5], [2888.0, 3553.75], [2896.0, 2090.0], [2904.0, 1274.0], [2908.0, 239.5], [2928.0, 184.25], [2924.0, 184.0], [2920.0, 553.7777777777778], [2912.0, 928.3333333333334], [2828.0, 125.0], [2820.0, 125.5], [2876.0, 2110.0], [2868.0, 103.0], [2944.0, 182.0], [3000.0, 4665.388201132971], [2948.0, 338.8333333333333], [2952.0, 182.0], [2956.0, 1651.6666666666665], [2960.0, 631.5555555555555], [2992.0, 3372.6250000000005], [2988.0, 4538.0], [2984.0, 439.92452830188654], [2113.0, 142.0], [2165.0, 119.0], [2125.0, 141.5], [2121.0, 142.5], [2129.0, 134.5], [2133.0, 133.0], [2161.0, 120.0], [2149.0, 120.0], [2077.0, 164.11111111111111], [2109.0, 143.5], [2105.0, 144.0], [2101.0, 144.0], [2093.0, 146.0], [2089.0, 149.0], [2081.0, 164.0], [2285.0, 1306.3333333333333], [2281.0, 1024.0], [2277.0, 554.6666666666666], [2181.0, 190.0], [2233.0, 181.0], [2273.0, 713.7368421052631], [2409.0, 184.0], [2381.0, 189.5], [2417.0, 176.0], [2413.0, 183.0], [2329.0, 1140.0], [2325.0, 174.0], [2321.0, 335.7142857142857], [2317.0, 175.0], [2309.0, 176.0], [2357.0, 198.33333333333334], [2353.0, 198.0], [2345.0, 200.5], [2341.0, 1099.0], [2337.0, 120.0], [2497.0, 157.0], [2557.0, 1516.0], [2505.0, 146.0], [2509.0, 144.0], [2517.0, 143.0], [2521.0, 143.5], [2525.0, 142.0], [2549.0, 81.0], [2545.0, 82.5], [2541.0, 83.0], [2537.0, 86.0], [2533.0, 141.0], [2529.0, 142.5], [2453.0, 160.33333333333334], [2445.0, 163.375], [2433.0, 173.0], [2493.0, 157.0], [2657.0, 3102.0], [2625.0, 3032.0], [2633.0, 2290.0], [2637.0, 3024.0], [2645.0, 2650.0], [2649.0, 2646.0], [2653.0, 3202.0], [2673.0, 3172.0], [2665.0, 3097.0], [2621.0, 1050.0], [2565.0, 1509.0], [2577.0, 1490.0], [2581.0, 1444.0], [2585.0, 1443.0], [2589.0, 1439.0], [2617.0, 1054.0], [2613.0, 1059.0], [2609.0, 1064.0], [2605.0, 1246.0], [2601.0, 1423.0], [2597.0, 1427.0], [2593.0, 1430.0], [2801.0, 167.0], [2813.0, 166.0], [2769.0, 170.0], [2773.0, 170.33333333333334], [2777.0, 169.16666666666669], [2781.0, 169.0], [2797.0, 168.0], [2793.0, 168.33333333333334], [2785.0, 170.0], [2717.0, 174.0], [2729.0, 172.0], [2725.0, 173.0], [2937.0, 183.0], [2881.0, 2102.0], [2933.0, 183.0], [2885.0, 2823.625], [2889.0, 2093.0], [2893.0, 2089.0], [2897.0, 4037.5], [2901.0, 2921.857142857143], [2905.0, 332.33333333333337], [2909.0, 824.0999999999999], [2941.0, 650.5], [2925.0, 185.0], [2921.0, 194.66666666666666], [2917.0, 876.6], [2841.0, 125.0], [2833.0, 123.66666666666667], [2829.0, 125.0], [2825.0, 127.0], [2821.0, 126.0], [2877.0, 2106.0], [2869.0, 103.0], [2865.0, 104.0], [2945.0, 183.0], [2953.0, 812.2857142857143], [2993.0, 1573.25], [2949.0, 3094.3333333333335], [2957.0, 1503.5882352941173], [2961.0, 141.0], [1151.0, 186.0], [1141.0, 187.0], [1137.0, 187.0], [1203.0, 336.0], [1185.0, 180.0], [1187.0, 179.0], [1191.0, 178.5], [1189.0, 179.0], [1201.0, 337.0], [1183.0, 180.0], [1153.0, 187.4642857142858], [1155.0, 185.33333333333334], [1159.0, 184.6], [1157.0, 185.0], [1165.0, 184.0], [1167.0, 185.0], [1181.0, 183.0], [1179.0, 207.25], [1177.0, 184.4], [1175.0, 184.0], [1193.0, 178.0], [1271.0, 355.5217391304348], [1277.0, 304.3333333333333], [1279.0, 310.4], [1273.0, 304.0], [1269.0, 305.2], [1227.0, 331.0], [1225.0, 332.0], [1223.0, 727.0], [1221.0, 333.0], [1217.0, 334.0], [1259.0, 304.83333333333337], [1253.0, 306.0], [1293.0, 301.3333333333333], [1319.0, 279.25], [1315.0, 280.0], [1295.0, 301.5], [1291.0, 302.0], [1289.0, 302.0], [1287.0, 302.0], [1285.0, 303.5], [1309.0, 280.0], [1305.0, 280.3333333333333], [1303.0, 1461.0], [1403.0, 264.5], [1385.0, 303.0], [1381.0, 265.0], [1387.0, 367.5], [1389.0, 432.0], [1405.0, 264.3333333333333], [1401.0, 264.0], [1399.0, 264.25], [1397.0, 265.0], [1371.0, 285.5], [1365.0, 266.0], [1417.0, 282.0], [1459.0, 294.0], [1469.0, 306.0], [1409.0, 263.0], [1411.0, 277.25], [1413.0, 281.5], [1419.0, 301.0], [1421.0, 300.0], [1423.0, 299.5], [1437.0, 299.0], [1435.0, 429.0], [1431.0, 300.0], [1429.0, 330.0], [1427.0, 300.5], [1425.0, 300.0], [1527.0, 263.3333333333333], [1505.0, 253.2], [1509.0, 252.5], [1511.0, 252.0], [1513.0, 252.0], [1531.0, 289.5], [1525.0, 281.0], [1523.0, 290.0], [1501.0, 336.0], [1473.0, 294.0], [1477.0, 293.2], [1487.0, 422.0], [1499.0, 292.3333333333333], [1519.0, 252.0], [1543.0, 309.33333333333337], [1589.0, 195.71428571428572], [1591.0, 326.0], [1585.0, 196.0], [1569.0, 356.0], [1567.0, 357.0], [1539.0, 289.0], [1549.0, 193.0], [1563.0, 229.0], [1561.0, 229.0], [1553.0, 191.75], [1615.0, 185.0], [1659.0, 209.75], [1663.0, 209.5], [1655.0, 210.0], [1613.0, 185.0], [1611.0, 185.0], [1609.0, 185.0], [1607.0, 185.0], [1627.0, 202.7142857142857], [1623.0, 313.0], [1617.0, 185.14285714285714], [1723.0, 180.0], [1721.0, 180.0], [1699.0, 206.0], [1697.0, 204.0], [1705.0, 205.0], [1725.0, 180.33333333333334], [1717.0, 205.2], [1713.0, 204.0], [1695.0, 205.0], [1665.0, 209.0], [1675.0, 208.0], [1693.0, 206.6], [1689.0, 207.0], [1683.0, 207.0], [1711.0, 204.57142857142856], [1709.0, 205.0], [1787.0, 163.0], [1789.0, 164.0], [1785.0, 165.0], [1733.0, 178.0], [1757.0, 174.33333333333334], [1755.0, 173.0], [1753.0, 173.66666666666666], [1855.0, 57.0], [1849.0, 66.33333333333333], [1827.0, 146.0], [1829.0, 145.66666666666666], [1835.0, 126.0], [1837.0, 126.0], [1851.0, 66.0], [1845.0, 67.0], [1841.0, 101.0], [1807.0, 163.0], [1803.0, 164.0], [1799.0, 163.66666666666666], [1795.0, 164.0], [1793.0, 163.7142857142857], [1817.0, 147.625], [1919.0, 2026.0], [1893.0, 2055.0], [1913.0, 2027.0], [1889.0, 2056.0], [1891.0, 2055.5], [1899.0, 2049.0], [1907.0, 2044.0], [1887.0, 2056.0], [1857.0, 45.0], [1859.0, 44.0], [1863.0, 43.5], [1871.0, 5318.0], [1883.0, 2058.0], [1881.0, 2059.0], [1875.0, 4142.0], [1903.0, 2045.0], [1979.0, 2169.0], [1983.0, 2165.0], [1955.0, 2200.0], [1957.0, 2197.0], [1963.0, 2190.0], [1971.0, 2183.0], [1969.0, 2186.0], [1921.0, 2017.0], [1925.0, 2007.0], [1923.0, 2015.5], [1929.0, 2000.0], [1931.0, 1674.0], [1933.0, 2779.0], [1935.0, 1080.0], [1949.0, 1076.0], [1943.0, 2203.0], [1941.0, 1078.0], [1939.0, 1077.5], [1937.0, 1078.0], [1985.0, 2160.0], [1993.0, 2137.0], [2005.0, 2101.0], [1987.0, 2150.0], [2003.0, 2120.0], [2001.0, 2124.0], [1999.0, 2126.0], [1997.0, 2129.0], [2162.0, 120.0], [2158.0, 120.0], [2126.0, 140.0], [2130.0, 134.0], [2166.0, 119.0], [2154.0, 120.0], [2150.0, 120.0], [2110.0, 143.25], [2074.0, 164.2], [2078.0, 164.18181818181816], [2102.0, 143.5], [2098.0, 144.0], [2086.0, 150.5], [2082.0, 163.78571428571428], [2278.0, 366.8333333333333], [2242.0, 1308.0], [2282.0, 178.5], [2178.0, 1318.0], [2234.0, 180.5], [2274.0, 179.33333333333334], [2422.0, 176.0], [2418.0, 177.0], [2430.0, 175.0], [2378.0, 189.0], [2382.0, 188.0], [2394.0, 188.0], [2398.0, 188.0], [2426.0, 175.0], [2410.0, 185.0], [2406.0, 187.75], [2402.0, 187.64285714285714], [2326.0, 174.0], [2322.0, 695.3076923076922], [2310.0, 1303.0], [2354.0, 353.8], [2346.0, 200.0], [2342.0, 202.0], [2542.0, 84.0], [2546.0, 82.0], [2554.0, 150.0], [2502.0, 155.60000000000002], [2510.0, 145.0], [2518.0, 144.0], [2538.0, 86.0], [2534.0, 135.0], [2434.0, 173.0], [2494.0, 156.33333333333334], [2666.0, 2260.0], [2662.0, 2728.0], [2674.0, 2890.0], [2626.0, 3226.0], [2630.0, 3224.0], [2634.0, 3027.0], [2638.0, 3023.0], [2642.0, 3215.0], [2646.0, 2279.0], [2650.0, 3209.0], [2654.0, 2269.0], [2670.0, 3093.5], [2658.0, 3198.0], [2562.0, 1514.0], [2566.0, 1507.0], [2570.0, 1505.0], [2578.0, 1487.0], [2582.0, 1444.0], [2586.0, 1442.0], [2590.0, 1435.0], [2618.0, 1053.0], [2614.0, 1059.0], [2610.0, 1062.0], [2606.0, 1238.0], [2602.0, 1421.0], [2594.0, 1430.0], [2798.0, 168.28571428571428], [2778.0, 169.0], [2790.0, 169.0], [2786.0, 169.0], [2718.0, 173.5], [2730.0, 172.0], [2726.0, 172.0], [2918.0, 518.0], [2882.0, 3161.090909090909], [2890.0, 4041.0], [2894.0, 2089.0], [2902.0, 2085.0], [2906.0, 240.0], [2910.0, 866.7272727272726], [2938.0, 183.0], [2922.0, 186.0], [2914.0, 911.5], [2830.0, 125.0], [2826.0, 125.25], [2818.0, 127.0], [2878.0, 2106.0], [2874.0, 101.0], [2862.0, 104.0], [2858.0, 106.0], [2854.0, 105.0], [2850.0, 123.0], [2954.0, 1251.2], [2994.0, 224.33333333333334], [2990.0, 129.5], [2986.0, 129.0526315789474], [2962.0, 1610.6666666666667], [2163.0, 119.0], [2123.0, 142.0], [2119.0, 142.0], [2127.0, 136.0], [2135.0, 133.0], [2159.0, 120.0], [2155.0, 120.0], [2075.0, 164.0], [2079.0, 164.0], [2107.0, 144.0], [2083.0, 164.0], [2279.0, 601.5], [2271.0, 180.0], [2239.0, 180.0], [2275.0, 630.3999999999999], [2415.0, 183.0], [2395.0, 188.0], [2399.0, 188.66666666666666], [2419.0, 176.0], [2407.0, 185.0], [2323.0, 1302.0], [2315.0, 739.5], [2307.0, 176.0], [2343.0, 201.0], [2339.0, 1126.0], [2499.0, 157.0], [2559.0, 1515.0], [2507.0, 145.0], [2515.0, 144.5], [2519.0, 143.0], [2523.0, 143.0], [2547.0, 81.0], [2543.0, 83.0], [2539.0, 86.0], [2535.0, 133.0], [2531.0, 143.33333333333334], [2451.0, 160.0], [2435.0, 173.0], [2495.0, 156.33333333333334], [2491.0, 156.0], [2627.0, 2292.0], [2671.0, 3182.0], [2631.0, 3029.0], [2635.0, 3026.0], [2639.0, 3021.0], [2643.0, 3019.0], [2655.0, 3201.0], [2663.0, 3195.0], [2659.0, 3002.0], [2571.0, 1502.0], [2575.0, 1495.0], [2579.0, 1485.0], [2591.0, 1434.0], [2619.0, 1052.0], [2611.0, 1059.0], [2767.0, 170.0], [2815.0, 166.0], [2771.0, 170.0], [2775.0, 169.33333333333331], [2779.0, 168.0], [2807.0, 168.0], [2791.0, 168.0], [2739.0, 171.0], [2919.0, 328.83333333333337], [2939.0, 1073.6666666666665], [2943.0, 812.5714285714286], [2883.0, 2093.0], [2891.0, 2926.4285714285716], [2895.0, 2089.0], [2899.0, 3256.6], [2903.0, 3546.0], [2935.0, 183.0], [2923.0, 184.0], [2915.0, 994.8888888888889], [2847.0, 122.5], [2843.0, 123.0], [2839.0, 123.0], [2831.0, 125.0], [2823.0, 127.0], [2879.0, 2105.0], [2875.0, 2125.0], [2871.0, 103.5], [2859.0, 104.66666666666667], [2851.0, 122.1818181818182], [2955.0, 4592.0], [2995.0, 218.16666666666666], [2991.0, 2406.5333333333333]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2944.314173580415, 4662.485505986381]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 117.6, "minX": 1.68288354E12, "maxY": 235023.56666666668, "series": [{"data": [[1.68288354E12, 16219.55], [1.68288384E12, 130605.83333333333], [1.6828839E12, 147.36666666666667], [1.68288372E12, 235023.56666666668], [1.68288378E12, 184831.01666666666], [1.6828836E12, 168494.85], [1.68288366E12, 222824.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68288354E12, 12104.4], [1.68288384E12, 93206.4], [1.6828839E12, 117.6], [1.68288372E12, 164312.4], [1.68288378E12, 130158.0], [1.6828836E12, 119338.8], [1.68288366E12, 156088.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828839E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1833.2901045421734, "minX": 1.68288354E12, "maxY": 27242.71428571429, "series": [{"data": [[1.68288354E12, 3435.073560027755], [1.68288384E12, 1833.2901045421734], [1.6828839E12, 27242.71428571429], [1.68288372E12, 4071.4568203871336], [1.68288378E12, 4667.1071820352], [1.6828836E12, 5565.273072060671], [1.68288366E12, 6351.195399217102]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828839E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1833.2828947368505, "minX": 1.68288354E12, "maxY": 27242.71428571429, "series": [{"data": [[1.68288354E12, 3435.0263705759858], [1.68288384E12, 1833.2828947368505], [1.6828839E12, 27242.71428571429], [1.68288372E12, 4004.6899034778608], [1.68288378E12, 4657.844034329248], [1.6828836E12, 5502.80495856162], [1.68288366E12, 6032.931738967208]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828839E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68288354E12, "maxY": 2410.6886777998952, "series": [{"data": [[1.68288354E12, 553.4441360166558], [1.68288384E12, 52.868691420331444], [1.6828839E12, 0.0], [1.68288372E12, 2410.6886777998952], [1.68288378E12, 1368.789120474932], [1.6828836E12, 727.301517067005], [1.68288366E12, 1076.8642822671488]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828839E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.68288354E12, "maxY": 196915.0, "series": [{"data": [[1.68288354E12, 14983.0], [1.68288384E12, 132640.0], [1.6828839E12, 31275.0], [1.68288372E12, 169155.0], [1.68288378E12, 196915.0], [1.6828836E12, 73135.0], [1.68288366E12, 128053.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68288354E12, 8898.8], [1.68288384E12, 4572.0], [1.6828839E12, 31275.0], [1.68288372E12, 2766.0], [1.68288378E12, 12624.0], [1.6828836E12, 12896.800000000003], [1.68288366E12, 13007.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68288354E12, 14864.0], [1.68288384E12, 22234.15], [1.6828839E12, 31275.0], [1.68288372E12, 130273.76000000001], [1.68288378E12, 99875.79999999894], [1.6828836E12, 56323.520000000004], [1.68288366E12, 100091.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68288354E12, 12930.8], [1.68288384E12, 12285.0], [1.6828839E12, 31275.0], [1.68288372E12, 7831.1999999999825], [1.68288378E12, 20381.0], [1.6828836E12, 28142.0], [1.68288366E12, 18359.099999999933]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68288354E12, 80.0], [1.68288384E12, 20.0], [1.6828839E12, 23184.0], [1.68288372E12, 14.0], [1.68288378E12, 7.0], [1.6828836E12, 14.0], [1.68288366E12, 9.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68288354E12, 3152.0], [1.68288384E12, 188.0], [1.6828839E12, 27273.0], [1.68288372E12, 165.0], [1.68288378E12, 172.0], [1.6828836E12, 172.0], [1.68288366E12, 173.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828839E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 21.0, "minX": 1.0, "maxY": 150251.0, "series": [{"data": [[2.0, 22578.5], [3.0, 61592.0], [4.0, 33747.5], [5.0, 11567.5], [6.0, 11535.0], [7.0, 29752.0], [8.0, 8683.0], [9.0, 1120.0], [10.0, 8447.0], [11.0, 1332.0], [13.0, 3841.5], [14.0, 13710.5], [15.0, 5078.0], [17.0, 6190.0], [22.0, 134.0], [23.0, 10207.0], [24.0, 6733.5], [25.0, 48913.0], [27.0, 1021.0], [28.0, 21.0], [30.0, 68.0], [31.0, 2141.0], [35.0, 2631.0], [42.0, 3069.5], [43.0, 13685.0], [48.0, 38.0], [49.0, 8339.0], [50.0, 189.5], [52.0, 154.5], [54.0, 1513.5], [56.0, 5456.0], [60.0, 152.0], [64.0, 8439.0], [65.0, 4032.5], [69.0, 1644.0], [71.0, 14582.0], [79.0, 120.0], [78.0, 11129.0], [86.0, 9282.0], [89.0, 2096.0], [90.0, 2048.0], [95.0, 4142.0], [96.0, 140.0], [102.0, 2492.0], [110.0, 4572.0], [113.0, 134.0], [117.0, 11058.0], [116.0, 114.0], [121.0, 8899.0], [125.0, 135.0], [127.0, 6902.0], [129.0, 2470.0], [133.0, 178.0], [131.0, 5853.0], [128.0, 22166.0], [134.0, 2087.0], [140.0, 2101.5], [136.0, 128.0], [137.0, 13145.0], [153.0, 1779.0], [160.0, 3348.0], [162.0, 3156.0], [163.0, 187.0], [168.0, 1206.0], [180.0, 139.0], [205.0, 128.0], [207.0, 162.0], [203.0, 121.0], [206.0, 153.0], [213.0, 161.0], [210.0, 10892.0], [208.0, 154.0], [215.0, 163.0], [216.0, 5912.0], [221.0, 165.0], [229.0, 161.0], [227.0, 155.0], [225.0, 170.0], [233.0, 158.0], [239.0, 119.0], [241.0, 148.0], [243.0, 163.0], [246.0, 168.0], [244.0, 160.0], [250.0, 160.5], [252.0, 128.0], [248.0, 162.0], [251.0, 163.0], [269.0, 136.0], [268.0, 6636.5], [267.0, 154.0], [266.0, 188.0], [256.0, 172.0], [264.0, 167.0], [271.0, 170.0], [263.0, 163.0], [259.0, 100.0], [270.0, 169.0], [273.0, 4549.0], [272.0, 163.0], [276.0, 163.0], [283.0, 148.0], [281.0, 155.0], [285.0, 165.0], [293.0, 12604.0], [294.0, 157.0], [292.0, 161.0], [303.0, 177.0], [301.0, 177.0], [312.0, 155.0], [316.0, 163.0], [314.0, 127.0], [304.0, 186.0], [329.0, 156.0], [333.0, 144.0], [332.0, 11382.0], [349.0, 266.0], [342.0, 142.0], [340.0, 164.0], [351.0, 183.0], [365.0, 11662.0], [366.0, 165.0], [374.0, 9316.0], [379.0, 11377.0], [371.0, 175.0], [386.0, 9860.0], [409.0, 177.0], [418.0, 159.0], [428.0, 176.0], [447.0, 9389.0], [463.0, 140.0], [460.0, 169.0], [465.0, 182.0], [476.0, 10436.0], [466.0, 163.0], [481.0, 156.0], [510.0, 143.0], [506.0, 160.0], [505.0, 145.0], [499.0, 167.0], [511.0, 307.0], [538.0, 174.0], [541.0, 156.0], [522.0, 8231.0], [525.0, 665.0], [533.0, 8078.0], [528.0, 165.0], [532.0, 163.0], [519.0, 152.5], [515.0, 146.0], [526.0, 210.0], [539.0, 170.0], [540.0, 230.0], [537.0, 136.0], [536.0, 161.0], [535.0, 269.0], [534.0, 162.0], [559.0, 167.0], [572.0, 14658.5], [570.0, 150.0], [578.0, 171.0], [577.0, 172.0], [629.0, 159.0], [636.0, 293.0], [619.0, 348.0], [668.0, 253.0], [698.0, 11771.5], [696.0, 10319.0], [686.0, 176.0], [691.0, 163.0], [715.0, 9581.0], [707.0, 12359.0], [708.0, 164.0], [748.0, 162.0], [743.0, 209.0], [749.0, 265.0], [744.0, 12798.0], [736.0, 157.0], [751.0, 256.0], [762.0, 195.0], [799.0, 279.0], [785.0, 302.0], [769.0, 164.0], [801.0, 162.0], [806.0, 141.0], [812.0, 170.0], [856.0, 10858.0], [843.0, 218.0], [854.0, 202.0], [886.0, 173.5], [1009.0, 10004.0], [999.0, 152.0], [998.0, 175.0], [1037.0, 144.0], [1073.0, 170.0], [1062.0, 168.0], [1.0, 89057.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[519.0, 28667.0], [526.0, 43806.0], [10.0, 28690.0], [168.0, 118139.0], [708.0, 104252.0], [806.0, 150251.0], [56.0, 49793.5], [233.0, 99927.0], [1009.0, 46935.0], [263.0, 24886.0], [276.0, 118223.0], [283.0, 14346.0], [5.0, 55632.0], [96.0, 18088.0], [447.0, 22051.0], [465.0, 71563.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1073.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 89057.0, "series": [{"data": [[2.0, 22578.5], [3.0, 61592.0], [4.0, 33747.5], [5.0, 11567.5], [6.0, 11535.0], [7.0, 29752.0], [8.0, 8683.0], [9.0, 1120.0], [10.0, 8447.0], [11.0, 1332.0], [13.0, 3841.5], [14.0, 13710.5], [15.0, 5078.0], [17.0, 6190.0], [22.0, 134.0], [23.0, 10207.0], [24.0, 6733.5], [25.0, 48913.0], [27.0, 1021.0], [28.0, 21.0], [30.0, 68.0], [31.0, 2141.0], [35.0, 2631.0], [42.0, 3069.5], [43.0, 13685.0], [48.0, 38.0], [49.0, 8339.0], [50.0, 189.5], [52.0, 154.5], [54.0, 1513.0], [56.0, 5456.0], [60.0, 152.0], [64.0, 8439.0], [65.0, 4032.5], [69.0, 1644.0], [71.0, 14582.0], [79.0, 120.0], [78.0, 11129.0], [86.0, 9282.0], [89.0, 2096.0], [90.0, 2048.0], [95.0, 4142.0], [96.0, 140.0], [102.0, 2492.0], [110.0, 4572.0], [113.0, 134.0], [117.0, 11058.0], [116.0, 114.0], [121.0, 8899.0], [125.0, 135.0], [127.0, 6902.0], [129.0, 2470.0], [133.0, 178.0], [131.0, 5853.0], [128.0, 22166.0], [134.0, 2087.0], [140.0, 2101.5], [136.0, 128.0], [137.0, 13145.0], [153.0, 1779.0], [160.0, 3348.0], [162.0, 3156.0], [163.0, 187.0], [168.0, 1206.0], [180.0, 139.0], [205.0, 128.0], [207.0, 162.0], [203.0, 121.0], [206.0, 153.0], [213.0, 161.0], [210.0, 10892.0], [208.0, 154.0], [215.0, 163.0], [216.0, 5912.0], [221.0, 165.0], [229.0, 161.0], [227.0, 155.0], [225.0, 170.0], [233.0, 158.0], [239.0, 119.0], [241.0, 148.0], [243.0, 163.0], [246.0, 168.0], [244.0, 160.0], [250.0, 160.5], [252.0, 128.0], [248.0, 162.0], [251.0, 163.0], [269.0, 136.0], [268.0, 6636.5], [267.0, 154.0], [266.0, 188.0], [256.0, 172.0], [264.0, 167.0], [271.0, 170.0], [263.0, 163.0], [259.0, 100.0], [270.0, 169.0], [273.0, 4549.0], [272.0, 163.0], [276.0, 163.0], [283.0, 148.0], [281.0, 155.0], [285.0, 165.0], [293.0, 12604.0], [294.0, 157.0], [292.0, 161.0], [303.0, 177.0], [301.0, 177.0], [312.0, 155.0], [316.0, 163.0], [314.0, 127.0], [304.0, 186.0], [329.0, 156.0], [333.0, 144.0], [332.0, 11382.0], [349.0, 266.0], [342.0, 142.0], [340.0, 164.0], [351.0, 183.0], [365.0, 11662.0], [366.0, 165.0], [374.0, 9316.0], [379.0, 11377.0], [371.0, 175.0], [386.0, 9860.0], [409.0, 177.0], [418.0, 159.0], [428.0, 176.0], [447.0, 9389.0], [463.0, 140.0], [460.0, 169.0], [465.0, 182.0], [476.0, 10436.0], [466.0, 163.0], [481.0, 156.0], [510.0, 143.0], [506.0, 160.0], [505.0, 145.0], [499.0, 167.0], [511.0, 307.0], [538.0, 174.0], [541.0, 156.0], [522.0, 8231.0], [525.0, 665.0], [533.0, 8078.0], [528.0, 165.0], [532.0, 163.0], [519.0, 152.0], [515.0, 146.0], [526.0, 210.0], [539.0, 170.0], [540.0, 230.0], [537.0, 136.0], [536.0, 161.0], [535.0, 269.0], [534.0, 162.0], [559.0, 167.0], [572.0, 14658.5], [570.0, 150.0], [578.0, 171.0], [577.0, 172.0], [629.0, 159.0], [636.0, 293.0], [619.0, 348.0], [668.0, 253.0], [698.0, 11771.5], [696.0, 10319.0], [686.0, 176.0], [691.0, 163.0], [715.0, 9581.0], [707.0, 12359.0], [708.0, 164.0], [748.0, 162.0], [743.0, 209.0], [749.0, 265.0], [744.0, 12798.0], [736.0, 157.0], [751.0, 256.0], [762.0, 195.0], [799.0, 279.0], [785.0, 302.0], [769.0, 164.0], [801.0, 162.0], [806.0, 141.0], [812.0, 170.0], [856.0, 10858.0], [843.0, 218.0], [854.0, 202.0], [886.0, 173.5], [1009.0, 10004.0], [999.0, 152.0], [998.0, 175.0], [1037.0, 144.0], [1073.0, 170.0], [1062.0, 168.0], [1.0, 89057.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[519.0, 0.0], [526.0, 0.0], [10.0, 0.0], [168.0, 0.0], [708.0, 0.0], [806.0, 0.0], [56.0, 0.0], [233.0, 0.0], [1009.0, 0.0], [263.0, 0.0], [276.0, 0.0], [283.0, 0.0], [5.0, 0.0], [96.0, 0.0], [447.0, 0.0], [465.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1073.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 62.3, "minX": 1.68288354E12, "maxY": 320.4, "series": [{"data": [[1.68288354E12, 62.3], [1.68288384E12, 184.93333333333334], [1.68288372E12, 320.4], [1.68288378E12, 249.2], [1.6828836E12, 240.3], [1.68288366E12, 284.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288384E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68288354E12, "maxY": 326.01666666666665, "series": [{"data": [[1.68288354E12, 24.016666666666666], [1.68288384E12, 184.93333333333334], [1.6828839E12, 0.23333333333333334], [1.68288372E12, 326.01666666666665], [1.68288378E12, 258.25], [1.6828836E12, 236.78333333333333], [1.68288366E12, 309.7]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68288372E12, 0.3333333333333333], [1.68288378E12, 0.03333333333333333], [1.6828836E12, 0.5166666666666667], [1.68288366E12, 1.1166666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828839E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68288354E12, "maxY": 326.01666666666665, "series": [{"data": [[1.68288354E12, 24.016666666666666], [1.68288384E12, 184.93333333333334], [1.6828839E12, 0.23333333333333334], [1.68288372E12, 326.01666666666665], [1.68288378E12, 258.25], [1.6828836E12, 236.78333333333333], [1.68288366E12, 309.7]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68288372E12, 0.3333333333333333], [1.68288378E12, 0.03333333333333333], [1.6828836E12, 0.5166666666666667], [1.68288366E12, 1.1166666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828839E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68288354E12, "maxY": 326.01666666666665, "series": [{"data": [[1.68288354E12, 24.016666666666666], [1.68288384E12, 184.93333333333334], [1.6828839E12, 0.23333333333333334], [1.68288372E12, 326.01666666666665], [1.68288378E12, 258.25], [1.6828836E12, 236.78333333333333], [1.68288366E12, 309.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68288372E12, 0.3333333333333333], [1.68288378E12, 0.03333333333333333], [1.6828836E12, 0.5166666666666667], [1.68288366E12, 1.1166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828839E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

