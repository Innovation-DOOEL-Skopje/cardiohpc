/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 215513.0, "series": [{"data": [[0.0, 12.0], [0.1, 22.0], [0.2, 29.0], [0.3, 33.0], [0.4, 37.0], [0.5, 41.0], [0.6, 43.0], [0.7, 46.0], [0.8, 48.0], [0.9, 51.0], [1.0, 52.0], [1.1, 54.0], [1.2, 56.0], [1.3, 58.0], [1.4, 60.0], [1.5, 61.0], [1.6, 63.0], [1.7, 64.0], [1.8, 65.0], [1.9, 66.0], [2.0, 68.0], [2.1, 69.0], [2.2, 70.0], [2.3, 71.0], [2.4, 73.0], [2.5, 73.0], [2.6, 74.0], [2.7, 75.0], [2.8, 77.0], [2.9, 77.0], [3.0, 78.0], [3.1, 78.0], [3.2, 79.0], [3.3, 79.0], [3.4, 80.0], [3.5, 80.0], [3.6, 80.0], [3.7, 81.0], [3.8, 82.0], [3.9, 83.0], [4.0, 83.0], [4.1, 84.0], [4.2, 84.0], [4.3, 85.0], [4.4, 85.0], [4.5, 86.0], [4.6, 86.0], [4.7, 87.0], [4.8, 88.0], [4.9, 88.0], [5.0, 89.0], [5.1, 89.0], [5.2, 89.0], [5.3, 90.0], [5.4, 90.0], [5.5, 90.0], [5.6, 91.0], [5.7, 92.0], [5.8, 92.0], [5.9, 93.0], [6.0, 93.0], [6.1, 93.0], [6.2, 94.0], [6.3, 94.0], [6.4, 94.0], [6.5, 95.0], [6.6, 95.0], [6.7, 95.0], [6.8, 96.0], [6.9, 96.0], [7.0, 97.0], [7.1, 98.0], [7.2, 99.0], [7.3, 99.0], [7.4, 100.0], [7.5, 100.0], [7.6, 100.0], [7.7, 101.0], [7.8, 101.0], [7.9, 102.0], [8.0, 102.0], [8.1, 103.0], [8.2, 104.0], [8.3, 104.0], [8.4, 104.0], [8.5, 104.0], [8.6, 105.0], [8.7, 105.0], [8.8, 106.0], [8.9, 106.0], [9.0, 106.0], [9.1, 107.0], [9.2, 107.0], [9.3, 108.0], [9.4, 109.0], [9.5, 109.0], [9.6, 110.0], [9.7, 110.0], [9.8, 111.0], [9.9, 111.0], [10.0, 112.0], [10.1, 112.0], [10.2, 113.0], [10.3, 113.0], [10.4, 114.0], [10.5, 114.0], [10.6, 115.0], [10.7, 115.0], [10.8, 116.0], [10.9, 117.0], [11.0, 117.0], [11.1, 117.0], [11.2, 117.0], [11.3, 118.0], [11.4, 118.0], [11.5, 119.0], [11.6, 119.0], [11.7, 119.0], [11.8, 119.0], [11.9, 120.0], [12.0, 121.0], [12.1, 121.0], [12.2, 122.0], [12.3, 123.0], [12.4, 123.0], [12.5, 123.0], [12.6, 124.0], [12.7, 124.0], [12.8, 124.0], [12.9, 125.0], [13.0, 125.0], [13.1, 125.0], [13.2, 125.0], [13.3, 126.0], [13.4, 126.0], [13.5, 126.0], [13.6, 126.0], [13.7, 127.0], [13.8, 127.0], [13.9, 127.0], [14.0, 128.0], [14.1, 128.0], [14.2, 129.0], [14.3, 129.0], [14.4, 129.0], [14.5, 129.0], [14.6, 130.0], [14.7, 130.0], [14.8, 130.0], [14.9, 131.0], [15.0, 131.0], [15.1, 131.0], [15.2, 132.0], [15.3, 132.0], [15.4, 132.0], [15.5, 133.0], [15.6, 133.0], [15.7, 133.0], [15.8, 134.0], [15.9, 134.0], [16.0, 134.0], [16.1, 135.0], [16.2, 135.0], [16.3, 135.0], [16.4, 136.0], [16.5, 136.0], [16.6, 136.0], [16.7, 137.0], [16.8, 137.0], [16.9, 137.0], [17.0, 138.0], [17.1, 138.0], [17.2, 139.0], [17.3, 140.0], [17.4, 140.0], [17.5, 141.0], [17.6, 141.0], [17.7, 141.0], [17.8, 142.0], [17.9, 142.0], [18.0, 143.0], [18.1, 143.0], [18.2, 143.0], [18.3, 143.0], [18.4, 144.0], [18.5, 144.0], [18.6, 144.0], [18.7, 145.0], [18.8, 145.0], [18.9, 146.0], [19.0, 146.0], [19.1, 147.0], [19.2, 148.0], [19.3, 149.0], [19.4, 149.0], [19.5, 149.0], [19.6, 150.0], [19.7, 150.0], [19.8, 151.0], [19.9, 151.0], [20.0, 152.0], [20.1, 152.0], [20.2, 153.0], [20.3, 153.0], [20.4, 153.0], [20.5, 154.0], [20.6, 154.0], [20.7, 154.0], [20.8, 155.0], [20.9, 155.0], [21.0, 156.0], [21.1, 156.0], [21.2, 157.0], [21.3, 157.0], [21.4, 157.0], [21.5, 158.0], [21.6, 158.0], [21.7, 159.0], [21.8, 159.0], [21.9, 159.0], [22.0, 160.0], [22.1, 160.0], [22.2, 160.0], [22.3, 160.0], [22.4, 161.0], [22.5, 161.0], [22.6, 161.0], [22.7, 162.0], [22.8, 162.0], [22.9, 162.0], [23.0, 163.0], [23.1, 163.0], [23.2, 164.0], [23.3, 164.0], [23.4, 164.0], [23.5, 164.0], [23.6, 165.0], [23.7, 165.0], [23.8, 165.0], [23.9, 166.0], [24.0, 166.0], [24.1, 166.0], [24.2, 167.0], [24.3, 167.0], [24.4, 167.0], [24.5, 168.0], [24.6, 168.0], [24.7, 168.0], [24.8, 169.0], [24.9, 169.0], [25.0, 169.0], [25.1, 170.0], [25.2, 170.0], [25.3, 170.0], [25.4, 170.0], [25.5, 171.0], [25.6, 171.0], [25.7, 171.0], [25.8, 171.0], [25.9, 171.0], [26.0, 172.0], [26.1, 172.0], [26.2, 172.0], [26.3, 172.0], [26.4, 172.0], [26.5, 173.0], [26.6, 173.0], [26.7, 173.0], [26.8, 174.0], [26.9, 174.0], [27.0, 174.0], [27.1, 175.0], [27.2, 175.0], [27.3, 175.0], [27.4, 176.0], [27.5, 176.0], [27.6, 176.0], [27.7, 176.0], [27.8, 176.0], [27.9, 177.0], [28.0, 177.0], [28.1, 177.0], [28.2, 177.0], [28.3, 178.0], [28.4, 178.0], [28.5, 178.0], [28.6, 179.0], [28.7, 179.0], [28.8, 179.0], [28.9, 180.0], [29.0, 180.0], [29.1, 180.0], [29.2, 180.0], [29.3, 180.0], [29.4, 181.0], [29.5, 181.0], [29.6, 181.0], [29.7, 181.0], [29.8, 181.0], [29.9, 182.0], [30.0, 182.0], [30.1, 182.0], [30.2, 182.0], [30.3, 183.0], [30.4, 183.0], [30.5, 183.0], [30.6, 183.0], [30.7, 183.0], [30.8, 183.0], [30.9, 183.0], [31.0, 184.0], [31.1, 184.0], [31.2, 184.0], [31.3, 184.0], [31.4, 184.0], [31.5, 184.0], [31.6, 184.0], [31.7, 184.0], [31.8, 184.0], [31.9, 184.0], [32.0, 185.0], [32.1, 185.0], [32.2, 185.0], [32.3, 185.0], [32.4, 185.0], [32.5, 185.0], [32.6, 185.0], [32.7, 185.0], [32.8, 186.0], [32.9, 186.0], [33.0, 186.0], [33.1, 186.0], [33.2, 186.0], [33.3, 186.0], [33.4, 186.0], [33.5, 186.0], [33.6, 187.0], [33.7, 187.0], [33.8, 187.0], [33.9, 187.0], [34.0, 187.0], [34.1, 187.0], [34.2, 187.0], [34.3, 187.0], [34.4, 187.0], [34.5, 188.0], [34.6, 188.0], [34.7, 188.0], [34.8, 188.0], [34.9, 188.0], [35.0, 188.0], [35.1, 188.0], [35.2, 189.0], [35.3, 189.0], [35.4, 189.0], [35.5, 189.0], [35.6, 189.0], [35.7, 189.0], [35.8, 189.0], [35.9, 189.0], [36.0, 190.0], [36.1, 190.0], [36.2, 190.0], [36.3, 190.0], [36.4, 190.0], [36.5, 190.0], [36.6, 190.0], [36.7, 190.0], [36.8, 190.0], [36.9, 190.0], [37.0, 190.0], [37.1, 191.0], [37.2, 191.0], [37.3, 191.0], [37.4, 191.0], [37.5, 191.0], [37.6, 191.0], [37.7, 191.0], [37.8, 191.0], [37.9, 191.0], [38.0, 191.0], [38.1, 192.0], [38.2, 192.0], [38.3, 192.0], [38.4, 192.0], [38.5, 192.0], [38.6, 192.0], [38.7, 193.0], [38.8, 193.0], [38.9, 193.0], [39.0, 193.0], [39.1, 193.0], [39.2, 193.0], [39.3, 193.0], [39.4, 193.0], [39.5, 194.0], [39.6, 194.0], [39.7, 194.0], [39.8, 194.0], [39.9, 194.0], [40.0, 194.0], [40.1, 194.0], [40.2, 194.0], [40.3, 194.0], [40.4, 195.0], [40.5, 195.0], [40.6, 195.0], [40.7, 195.0], [40.8, 195.0], [40.9, 195.0], [41.0, 195.0], [41.1, 195.0], [41.2, 195.0], [41.3, 196.0], [41.4, 196.0], [41.5, 196.0], [41.6, 196.0], [41.7, 196.0], [41.8, 196.0], [41.9, 196.0], [42.0, 196.0], [42.1, 196.0], [42.2, 196.0], [42.3, 196.0], [42.4, 196.0], [42.5, 197.0], [42.6, 197.0], [42.7, 197.0], [42.8, 197.0], [42.9, 197.0], [43.0, 197.0], [43.1, 197.0], [43.2, 197.0], [43.3, 197.0], [43.4, 197.0], [43.5, 197.0], [43.6, 198.0], [43.7, 198.0], [43.8, 198.0], [43.9, 198.0], [44.0, 198.0], [44.1, 198.0], [44.2, 198.0], [44.3, 198.0], [44.4, 198.0], [44.5, 199.0], [44.6, 199.0], [44.7, 199.0], [44.8, 199.0], [44.9, 199.0], [45.0, 199.0], [45.1, 199.0], [45.2, 200.0], [45.3, 200.0], [45.4, 200.0], [45.5, 200.0], [45.6, 200.0], [45.7, 200.0], [45.8, 200.0], [45.9, 201.0], [46.0, 201.0], [46.1, 201.0], [46.2, 201.0], [46.3, 201.0], [46.4, 201.0], [46.5, 201.0], [46.6, 201.0], [46.7, 201.0], [46.8, 202.0], [46.9, 202.0], [47.0, 202.0], [47.1, 202.0], [47.2, 202.0], [47.3, 202.0], [47.4, 202.0], [47.5, 202.0], [47.6, 202.0], [47.7, 202.0], [47.8, 202.0], [47.9, 202.0], [48.0, 202.0], [48.1, 203.0], [48.2, 203.0], [48.3, 203.0], [48.4, 203.0], [48.5, 203.0], [48.6, 203.0], [48.7, 203.0], [48.8, 203.0], [48.9, 203.0], [49.0, 203.0], [49.1, 203.0], [49.2, 204.0], [49.3, 204.0], [49.4, 204.0], [49.5, 204.0], [49.6, 204.0], [49.7, 204.0], [49.8, 204.0], [49.9, 204.0], [50.0, 204.0], [50.1, 205.0], [50.2, 205.0], [50.3, 205.0], [50.4, 205.0], [50.5, 205.0], [50.6, 205.0], [50.7, 205.0], [50.8, 205.0], [50.9, 206.0], [51.0, 206.0], [51.1, 206.0], [51.2, 206.0], [51.3, 206.0], [51.4, 206.0], [51.5, 206.0], [51.6, 206.0], [51.7, 207.0], [51.8, 207.0], [51.9, 207.0], [52.0, 207.0], [52.1, 207.0], [52.2, 207.0], [52.3, 207.0], [52.4, 207.0], [52.5, 208.0], [52.6, 208.0], [52.7, 208.0], [52.8, 208.0], [52.9, 208.0], [53.0, 208.0], [53.1, 208.0], [53.2, 208.0], [53.3, 209.0], [53.4, 209.0], [53.5, 209.0], [53.6, 209.0], [53.7, 209.0], [53.8, 209.0], [53.9, 210.0], [54.0, 210.0], [54.1, 210.0], [54.2, 210.0], [54.3, 210.0], [54.4, 211.0], [54.5, 211.0], [54.6, 211.0], [54.7, 211.0], [54.8, 211.0], [54.9, 212.0], [55.0, 212.0], [55.1, 212.0], [55.2, 212.0], [55.3, 212.0], [55.4, 213.0], [55.5, 213.0], [55.6, 213.0], [55.7, 213.0], [55.8, 213.0], [55.9, 214.0], [56.0, 214.0], [56.1, 214.0], [56.2, 214.0], [56.3, 214.0], [56.4, 214.0], [56.5, 214.0], [56.6, 214.0], [56.7, 215.0], [56.8, 215.0], [56.9, 215.0], [57.0, 215.0], [57.1, 215.0], [57.2, 215.0], [57.3, 215.0], [57.4, 215.0], [57.5, 216.0], [57.6, 216.0], [57.7, 216.0], [57.8, 216.0], [57.9, 216.0], [58.0, 216.0], [58.1, 217.0], [58.2, 217.0], [58.3, 217.0], [58.4, 217.0], [58.5, 217.0], [58.6, 218.0], [58.7, 218.0], [58.8, 218.0], [58.9, 218.0], [59.0, 219.0], [59.1, 219.0], [59.2, 219.0], [59.3, 219.0], [59.4, 220.0], [59.5, 220.0], [59.6, 220.0], [59.7, 220.0], [59.8, 221.0], [59.9, 221.0], [60.0, 221.0], [60.1, 221.0], [60.2, 222.0], [60.3, 222.0], [60.4, 222.0], [60.5, 222.0], [60.6, 222.0], [60.7, 222.0], [60.8, 223.0], [60.9, 223.0], [61.0, 223.0], [61.1, 223.0], [61.2, 224.0], [61.3, 224.0], [61.4, 224.0], [61.5, 225.0], [61.6, 225.0], [61.7, 226.0], [61.8, 226.0], [61.9, 226.0], [62.0, 227.0], [62.1, 227.0], [62.2, 228.0], [62.3, 228.0], [62.4, 228.0], [62.5, 229.0], [62.6, 229.0], [62.7, 230.0], [62.8, 231.0], [62.9, 232.0], [63.0, 232.0], [63.1, 233.0], [63.2, 233.0], [63.3, 234.0], [63.4, 235.0], [63.5, 236.0], [63.6, 237.0], [63.7, 238.0], [63.8, 239.0], [63.9, 240.0], [64.0, 243.0], [64.1, 246.0], [64.2, 246.0], [64.3, 247.0], [64.4, 247.0], [64.5, 248.0], [64.6, 248.0], [64.7, 249.0], [64.8, 250.0], [64.9, 251.0], [65.0, 252.0], [65.1, 252.0], [65.2, 253.0], [65.3, 255.0], [65.4, 258.0], [65.5, 263.0], [65.6, 267.0], [65.7, 269.0], [65.8, 271.0], [65.9, 272.0], [66.0, 273.0], [66.1, 273.0], [66.2, 274.0], [66.3, 274.0], [66.4, 275.0], [66.5, 276.0], [66.6, 276.0], [66.7, 278.0], [66.8, 279.0], [66.9, 280.0], [67.0, 280.0], [67.1, 281.0], [67.2, 282.0], [67.3, 283.0], [67.4, 284.0], [67.5, 285.0], [67.6, 286.0], [67.7, 286.0], [67.8, 287.0], [67.9, 289.0], [68.0, 289.0], [68.1, 290.0], [68.2, 291.0], [68.3, 293.0], [68.4, 295.0], [68.5, 301.0], [68.6, 303.0], [68.7, 305.0], [68.8, 306.0], [68.9, 308.0], [69.0, 310.0], [69.1, 311.0], [69.2, 313.0], [69.3, 314.0], [69.4, 315.0], [69.5, 316.0], [69.6, 316.0], [69.7, 317.0], [69.8, 318.0], [69.9, 318.0], [70.0, 320.0], [70.1, 321.0], [70.2, 322.0], [70.3, 323.0], [70.4, 324.0], [70.5, 325.0], [70.6, 325.0], [70.7, 326.0], [70.8, 326.0], [70.9, 327.0], [71.0, 327.0], [71.1, 328.0], [71.2, 330.0], [71.3, 330.0], [71.4, 331.0], [71.5, 331.0], [71.6, 332.0], [71.7, 332.0], [71.8, 333.0], [71.9, 334.0], [72.0, 334.0], [72.1, 335.0], [72.2, 336.0], [72.3, 338.0], [72.4, 339.0], [72.5, 341.0], [72.6, 341.0], [72.7, 343.0], [72.8, 344.0], [72.9, 344.0], [73.0, 345.0], [73.1, 346.0], [73.2, 346.0], [73.3, 346.0], [73.4, 347.0], [73.5, 347.0], [73.6, 348.0], [73.7, 353.0], [73.8, 355.0], [73.9, 359.0], [74.0, 360.0], [74.1, 361.0], [74.2, 362.0], [74.3, 364.0], [74.4, 365.0], [74.5, 367.0], [74.6, 367.0], [74.7, 368.0], [74.8, 370.0], [74.9, 370.0], [75.0, 371.0], [75.1, 371.0], [75.2, 372.0], [75.3, 373.0], [75.4, 373.0], [75.5, 375.0], [75.6, 375.0], [75.7, 376.0], [75.8, 376.0], [75.9, 379.0], [76.0, 380.0], [76.1, 382.0], [76.2, 386.0], [76.3, 390.0], [76.4, 393.0], [76.5, 395.0], [76.6, 396.0], [76.7, 402.0], [76.8, 406.0], [76.9, 409.0], [77.0, 424.0], [77.1, 441.0], [77.2, 456.0], [77.3, 457.0], [77.4, 458.0], [77.5, 460.0], [77.6, 461.0], [77.7, 463.0], [77.8, 476.0], [77.9, 478.0], [78.0, 479.0], [78.1, 487.0], [78.2, 493.0], [78.3, 516.0], [78.4, 534.0], [78.5, 536.0], [78.6, 538.0], [78.7, 552.0], [78.8, 599.0], [78.9, 603.0], [79.0, 655.0], [79.1, 898.0], [79.2, 1046.0], [79.3, 1064.0], [79.4, 1096.0], [79.5, 1119.0], [79.6, 1201.0], [79.7, 1261.0], [79.8, 1406.0], [79.9, 1451.0], [80.0, 1526.0], [80.1, 1729.0], [80.2, 1856.0], [80.3, 1992.0], [80.4, 2086.0], [80.5, 2148.0], [80.6, 2271.0], [80.7, 2391.0], [80.8, 2463.0], [80.9, 2557.0], [81.0, 2685.0], [81.1, 3055.0], [81.2, 3118.0], [81.3, 3235.0], [81.4, 3259.0], [81.5, 3284.0], [81.6, 3319.0], [81.7, 3421.0], [81.8, 3602.0], [81.9, 3718.0], [82.0, 3897.0], [82.1, 3965.0], [82.2, 4266.0], [82.3, 4494.0], [82.4, 4717.0], [82.5, 4961.0], [82.6, 5051.0], [82.7, 5069.0], [82.8, 5274.0], [82.9, 5496.0], [83.0, 5856.0], [83.1, 5988.0], [83.2, 6179.0], [83.3, 6210.0], [83.4, 6254.0], [83.5, 6670.0], [83.6, 6740.0], [83.7, 7066.0], [83.8, 7634.0], [83.9, 7728.0], [84.0, 7730.0], [84.1, 7732.0], [84.2, 7734.0], [84.3, 8034.0], [84.4, 8181.0], [84.5, 8415.0], [84.6, 8465.0], [84.7, 8550.0], [84.8, 8641.0], [84.9, 8651.0], [85.0, 8686.0], [85.1, 8712.0], [85.2, 8785.0], [85.3, 8790.0], [85.4, 8792.0], [85.5, 8793.0], [85.6, 8970.0], [85.7, 9072.0], [85.8, 9133.0], [85.9, 9410.0], [86.0, 9793.0], [86.1, 9956.0], [86.2, 10089.0], [86.3, 10121.0], [86.4, 10153.0], [86.5, 10155.0], [86.6, 10386.0], [86.7, 10483.0], [86.8, 10538.0], [86.9, 10547.0], [87.0, 10549.0], [87.1, 10619.0], [87.2, 10701.0], [87.3, 10745.0], [87.4, 10809.0], [87.5, 10812.0], [87.6, 10906.0], [87.7, 10939.0], [87.8, 10980.0], [87.9, 10985.0], [88.0, 11143.0], [88.1, 11445.0], [88.2, 11601.0], [88.3, 11635.0], [88.4, 11658.0], [88.5, 11700.0], [88.6, 11733.0], [88.7, 11782.0], [88.8, 11785.0], [88.9, 11806.0], [89.0, 11931.0], [89.1, 12216.0], [89.2, 12318.0], [89.3, 12380.0], [89.4, 12383.0], [89.5, 12650.0], [89.6, 12706.0], [89.7, 12731.0], [89.8, 12775.0], [89.9, 12785.0], [90.0, 12849.0], [90.1, 12978.0], [90.2, 12981.0], [90.3, 13082.0], [90.4, 13600.0], [90.5, 13762.0], [90.6, 13767.0], [90.7, 13780.0], [90.8, 13857.0], [90.9, 13891.0], [91.0, 13961.0], [91.1, 14027.0], [91.2, 14072.0], [91.3, 14104.0], [91.4, 14156.0], [91.5, 14175.0], [91.6, 14176.0], [91.7, 14217.0], [91.8, 14226.0], [91.9, 14269.0], [92.0, 14474.0], [92.1, 14541.0], [92.2, 14555.0], [92.3, 14556.0], [92.4, 14915.0], [92.5, 14948.0], [92.6, 14959.0], [92.7, 15123.0], [92.8, 15191.0], [92.9, 15224.0], [93.0, 15267.0], [93.1, 15271.0], [93.2, 15395.0], [93.3, 15811.0], [93.4, 15961.0], [93.5, 16372.0], [93.6, 16461.0], [93.7, 16532.0], [93.8, 16535.0], [93.9, 17407.0], [94.0, 18136.0], [94.1, 18491.0], [94.2, 18959.0], [94.3, 19274.0], [94.4, 19857.0], [94.5, 20408.0], [94.6, 21057.0], [94.7, 21695.0], [94.8, 21998.0], [94.9, 22326.0], [95.0, 23287.0], [95.1, 24385.0], [95.2, 25165.0], [95.3, 25770.0], [95.4, 27101.0], [95.5, 28027.0], [95.6, 29838.0], [95.7, 31039.0], [95.8, 31485.0], [95.9, 32183.0], [96.0, 33424.0], [96.1, 34632.0], [96.2, 35372.0], [96.3, 36267.0], [96.4, 37255.0], [96.5, 38799.0], [96.6, 42073.0], [96.7, 43057.0], [96.8, 45302.0], [96.9, 46740.0], [97.0, 51233.0], [97.1, 53528.0], [97.2, 59671.0], [97.3, 60945.0], [97.4, 64310.0], [97.5, 65543.0], [97.6, 69204.0], [97.7, 75237.0], [97.8, 77901.0], [97.9, 81407.0], [98.0, 87223.0], [98.1, 97935.0], [98.2, 100030.0], [98.3, 100061.0], [98.4, 100084.0], [98.5, 100119.0], [98.6, 100167.0], [98.7, 100225.0], [98.8, 100330.0], [98.9, 100399.0], [99.0, 102401.0], [99.1, 119809.0], [99.2, 123187.0], [99.3, 128031.0], [99.4, 128384.0], [99.5, 129686.0], [99.6, 130349.0], [99.7, 131414.0], [99.8, 135909.0], [99.9, 143307.0], [100.0, 215513.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 38034.0, "series": [{"data": [[0.0, 7448.0], [73100.0, 1.0], [76300.0, 1.0], [79500.0, 2.0], [92300.0, 2.0], [95500.0, 3.0], [98700.0, 1.0], [127500.0, 1.0], [100.0, 38034.0], [34500.0, 4.0], [32900.0, 6.0], [39300.0, 4.0], [42500.0, 5.0], [44100.0, 10.0], [45700.0, 1.0], [48900.0, 1.0], [192300.0, 1.0], [200.0, 23505.0], [58500.0, 4.0], [61700.0, 2.0], [69000.0, 2.0], [65800.0, 9.0], [72200.0, 1.0], [300.0, 8261.0], [81800.0, 2.0], [88200.0, 3.0], [101000.0, 1.0], [400.0, 1610.0], [500.0, 545.0], [129800.0, 5.0], [132400.0, 2.0], [145200.0, 5.0], [600.0, 218.0], [700.0, 32.0], [800.0, 50.0], [900.0, 10.0], [1000.0, 329.0], [1100.0, 156.0], [1200.0, 136.0], [1300.0, 69.0], [1400.0, 181.0], [1500.0, 99.0], [1600.0, 25.0], [1700.0, 59.0], [1800.0, 78.0], [1900.0, 76.0], [2000.0, 95.0], [2100.0, 142.0], [2300.0, 115.0], [2200.0, 75.0], [142900.0, 1.0], [2400.0, 110.0], [2500.0, 120.0], [2600.0, 48.0], [2800.0, 12.0], [2700.0, 13.0], [2900.0, 55.0], [3000.0, 89.0], [3100.0, 68.0], [3200.0, 300.0], [3300.0, 120.0], [3400.0, 57.0], [3500.0, 75.0], [3700.0, 40.0], [3600.0, 103.0], [3800.0, 72.0], [3900.0, 112.0], [4000.0, 5.0], [4200.0, 122.0], [68100.0, 4.0], [4600.0, 27.0], [4400.0, 32.0], [71300.0, 1.0], [4800.0, 21.0], [74500.0, 2.0], [77700.0, 3.0], [5000.0, 251.0], [5200.0, 25.0], [5600.0, 5.0], [5400.0, 37.0], [87300.0, 5.0], [5800.0, 75.0], [93700.0, 2.0], [6000.0, 13.0], [6200.0, 170.0], [100100.0, 153.0], [6400.0, 12.0], [6600.0, 105.0], [6800.0, 29.0], [106500.0, 2.0], [7000.0, 20.0], [7400.0, 11.0], [7200.0, 7.0], [7600.0, 89.0], [122500.0, 1.0], [7800.0, 8.0], [8000.0, 50.0], [128900.0, 9.0], [8400.0, 210.0], [9200.0, 41.0], [8800.0, 6.0], [9600.0, 12.0], [10000.0, 83.0], [10400.0, 130.0], [10800.0, 194.0], [11200.0, 1.0], [11600.0, 313.0], [12000.0, 51.0], [12400.0, 3.0], [12800.0, 110.0], [13200.0, 7.0], [13600.0, 27.0], [14000.0, 197.0], [14400.0, 110.0], [14800.0, 7.0], [15200.0, 310.0], [15600.0, 15.0], [16000.0, 17.0], [16800.0, 4.0], [18400.0, 9.0], [17600.0, 18.0], [19200.0, 32.0], [20000.0, 25.0], [20800.0, 4.0], [21600.0, 40.0], [22400.0, 4.0], [23200.0, 20.0], [24000.0, 4.0], [24800.0, 10.0], [25600.0, 5.0], [26400.0, 5.0], [27200.0, 18.0], [28000.0, 24.0], [30400.0, 5.0], [31200.0, 8.0], [32000.0, 7.0], [33600.0, 2.0], [131900.0, 4.0], [35200.0, 30.0], [40000.0, 3.0], [44800.0, 1.0], [46400.0, 5.0], [48000.0, 1.0], [51200.0, 58.0], [52800.0, 2.0], [57600.0, 13.0], [60800.0, 1.0], [62400.0, 1.0], [64000.0, 32.0], [67200.0, 9.0], [70400.0, 2.0], [83200.0, 6.0], [86400.0, 5.0], [92800.0, 5.0], [96000.0, 1.0], [99200.0, 2.0], [102400.0, 16.0], [128000.0, 38.0], [132100.0, 4.0], [144900.0, 1.0], [164100.0, 1.0], [67100.0, 5.0], [73500.0, 4.0], [70300.0, 4.0], [76700.0, 3.0], [79900.0, 6.0], [83100.0, 4.0], [99100.0, 1.0], [127900.0, 15.0], [34700.0, 5.0], [33100.0, 19.0], [36300.0, 3.0], [37900.0, 4.0], [39500.0, 3.0], [42700.0, 2.0], [44300.0, 35.0], [47500.0, 2.0], [50700.0, 2.0], [53900.0, 1.0], [57100.0, 2.0], [58700.0, 1.0], [65100.0, 1.0], [63500.0, 8.0], [69400.0, 1.0], [66200.0, 4.0], [79000.0, 1.0], [82200.0, 2.0], [91800.0, 2.0], [101400.0, 12.0], [131600.0, 1.0], [150800.0, 2.0], [71700.0, 1.0], [78100.0, 12.0], [84500.0, 1.0], [90900.0, 1.0], [97300.0, 1.0], [100500.0, 2.0], [110100.0, 12.0], [119700.0, 4.0], [122900.0, 5.0], [129300.0, 3.0], [139800.0, 2.0], [16900.0, 1.0], [17700.0, 8.0], [19300.0, 15.0], [20100.0, 14.0], [20900.0, 24.0], [21700.0, 16.0], [22500.0, 1.0], [23300.0, 6.0], [24100.0, 1.0], [25700.0, 9.0], [26500.0, 3.0], [27300.0, 24.0], [28100.0, 7.0], [28900.0, 60.0], [30500.0, 2.0], [29700.0, 3.0], [31300.0, 12.0], [32100.0, 14.0], [33800.0, 2.0], [35400.0, 11.0], [38600.0, 6.0], [41800.0, 1.0], [45000.0, 9.0], [43400.0, 5.0], [46600.0, 1.0], [51400.0, 2.0], [54600.0, 2.0], [61000.0, 1.0], [59400.0, 2.0], [64200.0, 20.0], [67600.0, 5.0], [77200.0, 17.0], [83600.0, 1.0], [93200.0, 2.0], [96400.0, 2.0], [118800.0, 2.0], [128400.0, 1.0], [143200.0, 26.0], [67500.0, 2.0], [80300.0, 3.0], [83500.0, 1.0], [89900.0, 1.0], [96300.0, 1.0], [99500.0, 1.0], [112300.0, 2.0], [128300.0, 55.0], [132200.0, 1.0], [36500.0, 10.0], [39700.0, 2.0], [42900.0, 28.0], [41300.0, 10.0], [46100.0, 2.0], [47700.0, 1.0], [49300.0, 2.0], [50900.0, 1.0], [52500.0, 2.0], [54100.0, 6.0], [55700.0, 4.0], [58900.0, 2.0], [65300.0, 5.0], [66600.0, 2.0], [73000.0, 1.0], [69800.0, 2.0], [76200.0, 2.0], [95400.0, 1.0], [98600.0, 2.0], [101800.0, 1.0], [108200.0, 14.0], [130600.0, 12.0], [127400.0, 3.0], [146800.0, 2.0], [131700.0, 4.0], [138100.0, 1.0], [150900.0, 1.0], [68900.0, 5.0], [72100.0, 3.0], [78500.0, 4.0], [91300.0, 1.0], [94500.0, 2.0], [97700.0, 1.0], [107300.0, 2.0], [129700.0, 40.0], [8500.0, 13.0], [8900.0, 104.0], [9300.0, 9.0], [9700.0, 11.0], [10100.0, 371.0], [10500.0, 358.0], [10900.0, 378.0], [11300.0, 26.0], [11700.0, 385.0], [12100.0, 23.0], [12500.0, 50.0], [12900.0, 207.0], [13300.0, 5.0], [13700.0, 292.0], [14100.0, 418.0], [14500.0, 315.0], [14900.0, 249.0], [15300.0, 58.0], [15700.0, 9.0], [16100.0, 6.0], [17000.0, 4.0], [17800.0, 16.0], [19400.0, 1.0], [18600.0, 22.0], [20200.0, 23.0], [21000.0, 30.0], [21800.0, 63.0], [22600.0, 19.0], [23400.0, 9.0], [24200.0, 6.0], [25000.0, 7.0], [25800.0, 2.0], [26600.0, 26.0], [27400.0, 10.0], [28200.0, 1.0], [29000.0, 1.0], [29800.0, 19.0], [31400.0, 44.0], [32200.0, 2.0], [133500.0, 1.0], [34000.0, 2.0], [35600.0, 1.0], [38800.0, 5.0], [37200.0, 19.0], [42000.0, 18.0], [43600.0, 9.0], [46800.0, 2.0], [45200.0, 1.0], [48400.0, 6.0], [50000.0, 4.0], [59600.0, 45.0], [61200.0, 3.0], [68000.0, 2.0], [80800.0, 1.0], [84000.0, 1.0], [87200.0, 2.0], [90400.0, 4.0], [100000.0, 364.0], [128800.0, 8.0], [148800.0, 36.0], [133700.0, 14.0], [67900.0, 2.0], [71100.0, 2.0], [74300.0, 2.0], [80700.0, 3.0], [87100.0, 1.0], [90300.0, 1.0], [93500.0, 2.0], [122300.0, 1.0], [131400.0, 43.0], [144200.0, 1.0], [33500.0, 9.0], [36700.0, 25.0], [39900.0, 2.0], [41500.0, 9.0], [44700.0, 2.0], [46300.0, 1.0], [51100.0, 4.0], [52700.0, 2.0], [54300.0, 5.0], [59100.0, 2.0], [60700.0, 1.0], [65500.0, 45.0], [63900.0, 7.0], [76600.0, 34.0], [79800.0, 2.0], [89400.0, 3.0], [102200.0, 1.0], [105400.0, 1.0], [127800.0, 1.0], [131000.0, 57.0], [133200.0, 1.0], [139600.0, 5.0], [72500.0, 3.0], [75700.0, 2.0], [78900.0, 3.0], [85300.0, 3.0], [82100.0, 2.0], [88500.0, 2.0], [98100.0, 1.0], [101300.0, 27.0], [107700.0, 5.0], [120500.0, 20.0], [130100.0, 1.0], [17100.0, 13.0], [17900.0, 13.0], [18700.0, 26.0], [19500.0, 8.0], [20300.0, 8.0], [21100.0, 14.0], [21900.0, 22.0], [22700.0, 14.0], [24300.0, 48.0], [25100.0, 86.0], [25900.0, 1.0], [27500.0, 3.0], [26700.0, 1.0], [28300.0, 2.0], [29100.0, 2.0], [29900.0, 34.0], [30700.0, 25.0], [31500.0, 10.0], [32300.0, 2.0], [34200.0, 4.0], [139100.0, 1.0], [35800.0, 4.0], [37400.0, 47.0], [151900.0, 1.0], [40600.0, 3.0], [43800.0, 1.0], [45400.0, 1.0], [47000.0, 1.0], [53400.0, 31.0], [55000.0, 2.0], [56600.0, 7.0], [59800.0, 2.0], [64600.0, 11.0], [71600.0, 12.0], [74800.0, 1.0], [81200.0, 2.0], [78000.0, 6.0], [84400.0, 11.0], [87600.0, 2.0], [97200.0, 2.0], [100400.0, 31.0], [129200.0, 2.0], [132000.0, 4.0], [164000.0, 1.0], [136100.0, 2.0], [148900.0, 5.0], [71500.0, 2.0], [81100.0, 1.0], [77900.0, 14.0], [84300.0, 1.0], [90700.0, 1.0], [100300.0, 122.0], [129100.0, 1.0], [133800.0, 7.0], [33700.0, 11.0], [131500.0, 2.0], [35300.0, 87.0], [38500.0, 4.0], [40100.0, 1.0], [41700.0, 2.0], [44900.0, 2.0], [46500.0, 48.0], [48100.0, 4.0], [54500.0, 2.0], [56100.0, 2.0], [57700.0, 1.0], [60900.0, 12.0], [62500.0, 1.0], [64100.0, 5.0], [67400.0, 3.0], [70600.0, 2.0], [73800.0, 2.0], [77000.0, 1.0], [80200.0, 30.0], [86600.0, 14.0], [89800.0, 2.0], [93000.0, 2.0], [99400.0, 2.0], [115400.0, 1.0], [139700.0, 2.0], [4300.0, 6.0], [66500.0, 3.0], [4100.0, 25.0], [4500.0, 17.0], [4700.0, 117.0], [5100.0, 9.0], [4900.0, 34.0], [79300.0, 3.0], [5300.0, 63.0], [82500.0, 3.0], [5500.0, 14.0], [5700.0, 26.0], [6100.0, 122.0], [5900.0, 92.0], [95300.0, 2.0], [6300.0, 21.0], [101700.0, 3.0], [98500.0, 1.0], [6500.0, 44.0], [6700.0, 56.0], [6900.0, 3.0], [7100.0, 42.0], [7300.0, 4.0], [7500.0, 6.0], [7700.0, 398.0], [7900.0, 17.0], [127300.0, 1.0], [8100.0, 83.0], [8600.0, 328.0], [8200.0, 33.0], [9000.0, 67.0], [143800.0, 1.0], [9400.0, 62.0], [9800.0, 45.0], [10200.0, 8.0], [10600.0, 101.0], [11000.0, 41.0], [11400.0, 38.0], [12200.0, 36.0], [11800.0, 73.0], [12600.0, 42.0], [13000.0, 95.0], [13800.0, 197.0], [13400.0, 8.0], [14200.0, 250.0], [14600.0, 2.0], [15000.0, 14.0], [15800.0, 91.0], [15400.0, 52.0], [17200.0, 6.0], [16400.0, 177.0], [18000.0, 3.0], [18800.0, 35.0], [20400.0, 5.0], [19600.0, 12.0], [21200.0, 4.0], [22000.0, 2.0], [22800.0, 19.0], [24400.0, 5.0], [25200.0, 35.0], [26000.0, 9.0], [26800.0, 12.0], [27600.0, 8.0], [28400.0, 3.0], [29200.0, 7.0], [30000.0, 2.0], [30800.0, 1.0], [32400.0, 5.0], [32800.0, 7.0], [34400.0, 3.0], [135100.0, 1.0], [147900.0, 1.0], [40800.0, 1.0], [39200.0, 1.0], [44000.0, 1.0], [45600.0, 2.0], [50400.0, 2.0], [61600.0, 1.0], [63200.0, 2.0], [64800.0, 2.0], [65600.0, 3.0], [75200.0, 26.0], [94400.0, 3.0], [97600.0, 2.0], [116800.0, 2.0], [123200.0, 1.0], [129600.0, 46.0], [131200.0, 3.0], [78300.0, 2.0], [81500.0, 1.0], [97500.0, 1.0], [119900.0, 19.0], [123100.0, 15.0], [129500.0, 7.0], [133000.0, 1.0], [139400.0, 8.0], [137100.0, 6.0], [35500.0, 15.0], [38700.0, 32.0], [37100.0, 3.0], [43500.0, 2.0], [45100.0, 4.0], [46700.0, 6.0], [49900.0, 2.0], [51500.0, 1.0], [57900.0, 4.0], [61100.0, 2.0], [59500.0, 2.0], [64300.0, 12.0], [74200.0, 3.0], [87000.0, 1.0], [122200.0, 7.0], [128600.0, 2.0], [145300.0, 26.0], [158100.0, 3.0], [66900.0, 1.0], [73300.0, 2.0], [70100.0, 1.0], [76500.0, 1.0], [92500.0, 2.0], [105300.0, 1.0], [127700.0, 12.0], [130900.0, 1.0], [16500.0, 168.0], [17300.0, 8.0], [18100.0, 83.0], [18900.0, 28.0], [19700.0, 6.0], [20500.0, 4.0], [21300.0, 13.0], [22100.0, 26.0], [24500.0, 10.0], [23700.0, 1.0], [25300.0, 4.0], [26100.0, 9.0], [26900.0, 16.0], [27700.0, 5.0], [30100.0, 5.0], [30900.0, 1.0], [32500.0, 8.0], [34600.0, 34.0], [33000.0, 2.0], [36200.0, 57.0], [39400.0, 3.0], [42600.0, 2.0], [45800.0, 1.0], [47400.0, 2.0], [52200.0, 2.0], [53800.0, 3.0], [57000.0, 2.0], [58600.0, 4.0], [60200.0, 2.0], [61800.0, 1.0], [65000.0, 24.0], [69200.0, 3.0], [66000.0, 14.0], [88400.0, 3.0], [101200.0, 1.0], [130000.0, 27.0], [133600.0, 1.0], [131300.0, 6.0], [65900.0, 2.0], [69100.0, 1.0], [72300.0, 1.0], [81900.0, 1.0], [85100.0, 2.0], [91500.0, 4.0], [94700.0, 2.0], [97900.0, 15.0], [135400.0, 1.0], [141800.0, 1.0], [133100.0, 3.0], [34100.0, 6.0], [139500.0, 39.0], [145900.0, 1.0], [40500.0, 15.0], [42100.0, 16.0], [43700.0, 4.0], [45300.0, 15.0], [48500.0, 12.0], [50100.0, 11.0], [54900.0, 2.0], [58100.0, 2.0], [59700.0, 48.0], [64500.0, 2.0], [68200.0, 2.0], [74600.0, 10.0], [77800.0, 10.0], [81000.0, 3.0], [87400.0, 2.0], [97000.0, 2.0], [100200.0, 147.0], [67300.0, 2.0], [70500.0, 2.0], [73700.0, 1.0], [80100.0, 2.0], [86500.0, 8.0], [99300.0, 2.0], [128100.0, 20.0], [8700.0, 517.0], [8300.0, 42.0], [9100.0, 111.0], [9500.0, 36.0], [9900.0, 82.0], [10700.0, 155.0], [10300.0, 21.0], [11100.0, 96.0], [11500.0, 59.0], [11900.0, 84.0], [12300.0, 313.0], [12700.0, 415.0], [13100.0, 6.0], [13500.0, 17.0], [13900.0, 150.0], [14300.0, 3.0], [14700.0, 41.0], [15100.0, 189.0], [15500.0, 3.0], [16300.0, 60.0], [15900.0, 47.0], [16600.0, 11.0], [17400.0, 7.0], [18200.0, 6.0], [19000.0, 49.0], [19800.0, 78.0], [20600.0, 3.0], [21400.0, 4.0], [22200.0, 41.0], [23000.0, 7.0], [23800.0, 10.0], [24600.0, 16.0], [25400.0, 4.0], [26200.0, 1.0], [27000.0, 3.0], [28600.0, 4.0], [27800.0, 5.0], [29400.0, 3.0], [30200.0, 4.0], [31000.0, 25.0], [31800.0, 4.0], [33200.0, 19.0], [36400.0, 7.0], [143100.0, 3.0], [41200.0, 5.0], [49200.0, 6.0], [50800.0, 1.0], [52400.0, 3.0], [54000.0, 1.0], [63600.0, 3.0], [65200.0, 4.0], [69600.0, 2.0], [66400.0, 2.0], [72800.0, 1.0], [76000.0, 4.0], [85600.0, 9.0], [82400.0, 2.0], [101600.0, 16.0], [98400.0, 2.0], [127200.0, 18.0], [143300.0, 5.0], [69500.0, 2.0], [66300.0, 3.0], [72700.0, 5.0], [82300.0, 3.0], [85500.0, 8.0], [91900.0, 1.0], [98300.0, 3.0], [114300.0, 6.0], [130300.0, 41.0], [34300.0, 16.0], [35900.0, 1.0], [37500.0, 4.0], [39100.0, 2.0], [40700.0, 4.0], [43900.0, 1.0], [45500.0, 2.0], [47100.0, 1.0], [53500.0, 32.0], [215500.0, 3.0], [55100.0, 2.0], [59900.0, 4.0], [64700.0, 5.0], [75000.0, 2.0], [81400.0, 1.0], [84600.0, 2.0], [103800.0, 3.0], [113400.0, 2.0], [119800.0, 70.0], [129400.0, 20.0], [140500.0, 1.0], [146900.0, 2.0], [67700.0, 1.0], [77300.0, 6.0], [74100.0, 4.0], [80500.0, 1.0], [93300.0, 2.0], [96500.0, 3.0], [128500.0, 1.0], [131800.0, 6.0], [144600.0, 1.0], [202200.0, 1.0], [16700.0, 7.0], [17500.0, 14.0], [18300.0, 29.0], [19100.0, 14.0], [19900.0, 3.0], [20700.0, 39.0], [21500.0, 18.0], [22300.0, 46.0], [23100.0, 9.0], [23900.0, 15.0], [24700.0, 5.0], [25500.0, 8.0], [26300.0, 2.0], [27100.0, 7.0], [27900.0, 2.0], [28700.0, 1.0], [30300.0, 1.0], [31100.0, 20.0], [31900.0, 63.0], [32700.0, 1.0], [33400.0, 59.0], [135900.0, 1.0], [36600.0, 5.0], [35000.0, 10.0], [148700.0, 2.0], [39800.0, 1.0], [43000.0, 54.0], [41400.0, 2.0], [44600.0, 2.0], [46200.0, 20.0], [47800.0, 1.0], [51000.0, 2.0], [49400.0, 2.0], [52600.0, 2.0], [60600.0, 1.0], [62200.0, 4.0], [65400.0, 3.0], [73200.0, 2.0], [70000.0, 1.0], [82800.0, 2.0], [86000.0, 2.0], [89200.0, 2.0], [127600.0, 39.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 215500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 398.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 78858.0, "series": [{"data": [[0.0, 78858.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1728.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 19778.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 398.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 209.5600961538462, "minX": 1.68288438E12, "maxY": 3000.0, "series": [{"data": [[1.6828845E12, 3000.0], [1.68288438E12, 3000.0], [1.68288468E12, 984.7157987643426], [1.68288474E12, 209.5600961538462], [1.68288456E12, 3000.0], [1.68288462E12, 2958.0521442495174], [1.68288444E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288474E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 90.4, "minX": 1.0, "maxY": 131081.0, "series": [{"data": [[5.0, 131080.0], [8.0, 131079.0], [9.0, 131078.0], [11.0, 131075.5], [14.0, 131074.0], [17.0, 100014.0], [19.0, 100014.0], [20.0, 100013.66666666667], [23.0, 100013.0], [26.0, 100013.0], [29.0, 100147.33333333333], [30.0, 100129.0], [43.0, 100085.0], [42.0, 100084.8], [47.0, 100084.0], [46.0, 100084.0], [50.0, 100084.0], [53.0, 100083.8], [55.0, 100083.0], [54.0, 100082.0], [56.0, 100082.0], [58.0, 100082.5], [60.0, 100080.5], [63.0, 100081.0], [67.0, 100079.0], [66.0, 100080.0], [65.0, 100080.0], [64.0, 100080.0], [71.0, 100076.0], [70.0, 100078.0], [69.0, 100079.0], [68.0, 100079.0], [75.0, 100072.0], [73.0, 100073.0], [72.0, 100074.0], [79.0, 100069.0], [78.0, 100070.0], [77.0, 100072.0], [76.0, 100072.0], [83.0, 100063.0], [82.0, 100063.0], [81.0, 100065.0], [80.0, 100068.0], [87.0, 100062.0], [85.0, 100063.0], [91.0, 100049.0], [90.0, 100049.0], [89.0, 100059.0], [92.0, 100047.0], [99.0, 100037.25], [98.0, 100037.0], [102.0, 100037.0], [101.0, 100036.0], [104.0, 100032.0], [111.0, 100027.0], [110.0, 100027.0], [109.0, 100031.2], [115.0, 100017.0], [119.0, 100016.0], [116.0, 100017.0], [122.0, 100015.0], [120.0, 100016.0], [127.0, 100250.0], [126.0, 100014.0], [124.0, 100014.5], [135.0, 100163.0], [134.0, 100203.0], [133.0, 100223.0], [132.0, 100225.5], [130.0, 100228.0], [128.0, 100230.0], [137.0, 100092.0], [136.0, 100095.0], [151.0, 100084.0], [148.0, 100086.0], [147.0, 100086.0], [145.0, 100086.0], [144.0, 100086.5], [158.0, 100077.0], [157.0, 100079.0], [156.0, 100079.0], [154.0, 100083.66666666667], [153.0, 100084.0], [152.0, 100085.0], [167.0, 100073.0], [165.0, 100073.0], [164.0, 100075.0], [160.0, 100075.5], [171.0, 100071.0], [169.0, 100072.0], [182.0, 100041.0], [180.0, 100053.0], [179.0, 100055.0], [177.0, 100059.0], [176.0, 100061.0], [191.0, 100033.0], [190.0, 100034.0], [189.0, 100039.0], [187.0, 100039.5], [185.0, 100040.33333333333], [199.0, 100028.0], [197.0, 100030.0], [195.0, 100032.0], [194.0, 100032.0], [207.0, 100026.4], [201.0, 100028.0], [200.0, 100028.0], [213.0, 100015.5], [212.0, 100015.5], [209.0, 100016.0], [208.0, 100026.0], [223.0, 100090.0], [222.0, 100207.0], [221.0, 100210.0], [220.0, 98748.0], [219.0, 98396.0], [218.0, 99403.0], [217.0, 100014.0], [216.0, 100014.0], [229.0, 100087.6], [224.0, 100089.0], [239.0, 100086.5], [238.0, 100086.6], [237.0, 100086.0], [247.0, 100084.0], [246.0, 100084.5], [244.0, 100085.0], [242.0, 100086.0], [241.0, 100086.0], [240.0, 100086.5], [255.0, 100082.5], [251.0, 100083.0], [250.0, 100084.0], [249.0, 100084.0], [270.0, 100066.0], [269.0, 100066.0], [267.0, 100078.0], [266.0, 100079.0], [265.0, 100079.0], [263.0, 100080.0], [262.0, 100080.0], [261.0, 100081.0], [259.0, 100081.0], [258.0, 100082.0], [285.0, 100043.0], [286.0, 100042.0], [284.0, 100045.0], [280.0, 100046.0], [279.0, 100056.0], [278.0, 100057.0], [276.0, 100061.0], [275.0, 100064.75], [273.0, 100065.0], [298.0, 100034.0], [297.0, 100035.0], [296.0, 100037.0], [294.0, 100038.0], [291.0, 100039.0], [289.0, 100039.0], [288.0, 100041.0], [318.0, 100030.0], [319.0, 100029.0], [317.0, 100031.0], [315.0, 100032.0], [314.0, 100032.0], [310.0, 100033.0], [309.0, 100033.0], [308.0, 100033.0], [307.0, 100033.0], [305.0, 100034.0], [322.0, 100026.0], [335.0, 100022.0], [333.0, 100022.0], [331.0, 100023.4], [326.0, 100024.0], [325.0, 100025.0], [324.0, 100026.0], [321.0, 100026.0], [320.0, 100028.0], [350.0, 96536.0], [351.0, 95529.0], [349.0, 96539.0], [348.0, 97545.0], [347.0, 95368.0], [346.0, 96375.0], [345.0, 98557.0], [344.0, 100249.0], [343.0, 97384.0], [336.0, 100020.0], [339.0, 100019.0], [337.0, 100019.0], [342.0, 97740.0], [341.0, 100014.0], [340.0, 100017.0], [366.0, 89483.0], [367.0, 88475.0], [365.0, 89485.0], [364.0, 90492.0], [363.0, 90494.0], [362.0, 91501.0], [361.0, 91503.0], [360.0, 92510.0], [359.0, 92512.0], [353.0, 95541.0], [352.0, 96549.0], [355.0, 94532.0], [354.0, 95540.0], [358.0, 93520.0], [357.0, 93523.0], [356.0, 94529.0], [382.0, 81407.0], [383.0, 80399.0], [381.0, 78561.0], [380.0, 79569.0], [379.0, 79571.0], [378.0, 80577.0], [377.0, 80225.0], [376.0, 81019.0], [375.0, 81589.0], [369.0, 84618.0], [368.0, 88473.0], [371.0, 86456.0], [370.0, 84616.0], [374.0, 82597.0], [373.0, 82599.0], [372.0, 83606.0], [398.0, 72310.0], [399.0, 71302.0], [397.0, 70131.0], [396.0, 71139.0], [395.0, 71141.0], [394.0, 72148.0], [393.0, 72504.0], [392.0, 73158.0], [391.0, 73514.0], [385.0, 79390.0], [384.0, 80397.0], [387.0, 78380.0], [386.0, 79388.0], [390.0, 74168.0], [389.0, 76351.0], [388.0, 78378.0], [414.0, 64234.0], [415.0, 64248.0], [413.0, 64236.0], [412.0, 65243.0], [411.0, 65246.0], [410.0, 66255.0], [409.0, 67277.0], [408.0, 67263.0], [407.0, 65084.0], [401.0, 68111.0], [400.0, 69120.0], [403.0, 67103.0], [402.0, 68110.0], [406.0, 65877.0], [405.0, 68273.0], [404.0, 97233.0], [430.0, 57178.0], [431.0, 56171.0], [429.0, 57180.0], [428.0, 58188.0], [427.0, 58190.0], [426.0, 59197.0], [425.0, 59199.0], [424.0, 60207.0], [423.0, 60209.0], [417.0, 63237.0], [416.0, 64246.0], [419.0, 62228.0], [418.0, 63235.0], [422.0, 61219.0], [421.0, 61219.0], [420.0, 62226.0], [445.0, 64312.0], [446.0, 64311.0], [444.0, 64220.0], [435.0, 64227.0], [434.0, 64252.0], [432.0, 56169.0], [443.0, 64222.0], [442.0, 64315.0], [441.0, 64224.0], [440.0, 64317.0], [439.0, 64220.0], [438.0, 64319.5], [436.0, 64228.0], [462.0, 64170.0], [463.0, 64165.0], [461.0, 64172.0], [460.0, 64172.0], [458.0, 55105.0], [457.0, 55107.0], [456.0, 64296.0], [455.0, 64296.0], [449.0, 64213.0], [448.0, 64263.0], [451.0, 64208.0], [450.0, 64209.0], [454.0, 64297.0], [453.0, 64221.0], [452.0, 64300.0], [478.0, 52465.0], [479.0, 52466.0], [477.0, 53472.0], [476.0, 53474.0], [475.0, 54091.0], [474.0, 54104.0], [473.0, 67198.0], [472.0, 67199.0], [471.0, 67199.0], [464.0, 67207.0], [467.0, 67205.5], [465.0, 67207.0], [470.0, 67200.0], [469.0, 67204.0], [468.0, 67205.0], [494.0, 44615.0], [495.0, 44612.0], [493.0, 45621.0], [492.0, 45623.0], [491.0, 46407.0], [490.0, 46409.0], [489.0, 47416.0], [488.0, 47418.0], [487.0, 48425.0], [481.0, 51453.0], [480.0, 51456.0], [483.0, 50444.0], [482.0, 50446.0], [486.0, 48427.0], [485.0, 49435.0], [484.0, 49437.0], [510.0, 36539.0], [511.0, 36537.0], [509.0, 37546.0], [508.0, 37548.0], [507.0, 38555.0], [506.0, 38557.0], [505.0, 39564.0], [504.0, 39567.0], [503.0, 40574.0], [497.0, 43602.0], [496.0, 43604.0], [499.0, 42593.0], [498.0, 42595.0], [502.0, 40576.0], [501.0, 41583.0], [500.0, 41588.0], [538.0, 37256.5], [530.0, 37260.5], [528.0, 37260.0], [540.0, 37255.0], [536.0, 37257.0], [518.0, 32501.0], [516.0, 33509.0], [514.0, 34520.0], [512.0, 35529.0], [526.0, 28463.0], [524.0, 29471.0], [522.0, 30481.0], [520.0, 31491.0], [534.0, 37258.0], [572.0, 36296.0], [562.0, 36294.0], [564.0, 27428.0], [574.0, 36296.0], [570.0, 36298.0], [568.0, 35948.0], [546.0, 36440.0], [556.0, 36299.0], [554.0, 36307.0], [566.0, 35861.0], [602.0, 36268.0], [606.0, 36266.0], [592.0, 36282.0], [594.0, 36280.0], [596.0, 36277.0], [600.0, 36273.0], [580.0, 36294.0], [578.0, 36296.0], [576.0, 36297.0], [590.0, 36283.0], [588.0, 36289.0], [586.0, 36291.0], [584.0, 36292.666666666664], [598.0, 36272.0], [610.0, 36262.0], [634.0, 35399.0], [638.0, 35397.0], [608.0, 36264.0], [612.0, 36255.0], [614.0, 36247.5], [620.0, 26450.0], [618.0, 36233.0], [616.0, 36247.0], [630.0, 35401.0], [628.0, 35400.0], [624.0, 35404.0], [664.0, 35384.0], [670.0, 35381.0], [656.0, 35387.0], [666.0, 35382.0], [644.0, 35393.0], [646.0, 35392.5], [652.0, 39341.0], [650.0, 35390.0], [648.0, 35390.0], [662.0, 35384.0], [698.0, 35366.0], [702.0, 35355.0], [690.0, 35371.0], [700.0, 35366.0], [676.0, 35378.0], [686.0, 35373.0], [684.0, 35372.0], [682.0, 35375.0], [680.0, 35376.0], [728.0, 35289.0], [730.0, 35287.0], [710.0, 35348.0], [708.0, 35351.0], [718.0, 35302.0], [716.0, 35340.0], [712.0, 35345.0], [726.0, 35289.5], [724.0, 35295.5], [722.0, 35297.0], [764.0, 33211.0], [752.0, 35243.5], [754.0, 25418.0], [756.0, 34193.0], [766.0, 33208.0], [762.0, 24408.0], [760.0, 34188.0], [750.0, 35245.0], [736.0, 35273.0], [740.0, 35261.0], [738.0, 35270.0], [742.0, 35261.0], [748.0, 35246.0], [744.0, 35255.0], [758.0, 34190.0], [796.0, 33165.0], [798.0, 23385.0], [784.0, 33183.0], [788.0, 33178.333333333336], [794.0, 33166.0], [792.0, 33172.0], [774.0, 33204.0], [772.0, 33206.0], [770.0, 33207.0], [768.0, 33208.0], [782.0, 33183.0], [780.0, 33191.0], [778.0, 33196.0], [776.0, 33201.0], [828.0, 15801.0], [816.0, 21358.0], [818.0, 20844.0], [820.0, 19835.0], [830.0, 24567.0], [826.0, 16809.0], [824.0, 17818.0], [800.0, 32183.0], [804.0, 32181.0], [814.0, 22383.0], [812.0, 32175.0], [810.0, 32177.0], [808.0, 32179.0], [822.0, 18827.0], [858.0, 33987.0], [856.0, 41298.0], [862.0, 26665.0], [848.0, 41304.0], [850.0, 41303.0], [860.0, 41291.0], [846.0, 41305.0], [832.0, 24564.0], [834.0, 24519.0], [836.0, 24518.0], [838.0, 24516.0], [844.0, 41307.0], [842.0, 24384.0], [840.0, 24404.0], [852.0, 26678.0], [890.0, 14108.5], [882.0, 20966.0], [880.0, 14111.0], [892.0, 14107.0], [888.0, 14108.0], [870.0, 18182.0], [868.0, 18206.0], [866.0, 26657.0], [864.0, 18212.0], [876.0, 14487.0], [874.0, 14511.0], [872.0, 26612.0], [884.0, 14737.5], [958.0, 17495.68], [944.0, 14104.0], [956.0, 20841.0], [954.0, 21586.5], [934.0, 14104.0], [950.0, 15473.199999999999], [948.0, 14605.2], [988.0, 14032.0], [990.0, 14024.0], [976.0, 14056.0], [980.0, 14047.0], [978.0, 20747.5], [984.0, 15861.0], [966.0, 30425.0], [964.0, 14071.5], [962.0, 27455.0], [974.0, 14057.0], [972.0, 14069.0], [970.0, 14070.0], [968.0, 14070.0], [982.0, 14043.0], [1018.0, 15222.0], [1020.0, 14594.0], [1012.0, 13996.0], [1022.0, 14592.5], [1008.0, 13997.0], [1016.0, 13967.0], [998.0, 15265.0], [996.0, 14710.5], [994.0, 15278.0], [992.0, 14024.0], [1006.0, 13998.0], [1004.0, 14004.5], [1002.0, 15263.0], [1000.0, 15261.0], [1014.0, 27697.0], [1072.0, 13941.0], [1056.0, 13949.5], [1080.0, 13939.0], [1076.0, 13940.0], [1024.0, 19990.5], [1028.0, 13962.0], [1032.0, 13961.0], [1036.0, 13959.0], [1052.0, 13951.5], [1048.0, 13954.0], [1040.0, 13957.0], [1068.0, 14641.5], [1060.0, 21267.5], [1144.0, 13894.0], [1148.0, 13890.0], [1120.0, 13913.0], [1124.0, 13911.5], [1128.0, 15164.5], [1140.0, 26300.0], [1136.0, 13898.0], [1100.0, 13927.0], [1096.0, 13930.0], [1092.0, 13931.0], [1116.0, 13919.0], [1112.0, 13921.0], [1108.0, 13923.0], [1104.0, 20782.0], [1132.0, 13907.0], [1208.0, 13599.0], [1188.0, 15068.0], [1212.0, 13598.0], [1184.0, 16801.0], [1200.0, 13786.0], [1160.0, 22830.0], [1156.0, 13883.0], [1152.0, 26293.0], [1180.0, 13821.0], [1176.0, 13871.0], [1172.0, 13873.0], [1168.0, 13875.0], [1196.0, 20501.5], [1268.0, 23283.0], [1248.0, 23294.0], [1256.0, 22455.0], [1260.0, 25095.0], [1228.0, 12544.0], [1224.0, 18039.0], [1220.0, 25634.0], [1216.0, 13594.0], [1244.0, 22132.0], [1240.0, 22134.0], [1236.0, 16072.0], [1232.0, 10527.0], [1340.0, 11212.0], [1312.0, 12343.0], [1316.0, 12340.5], [1320.0, 28777.5], [1324.0, 41377.0], [1336.0, 19295.0], [1328.0, 12336.0], [1292.0, 14193.0], [1284.0, 12363.0], [1280.0, 22110.0], [1308.0, 14188.0], [1304.0, 16731.0], [1296.0, 23260.0], [1352.0, 12310.0], [1380.0, 15980.0], [1384.0, 12284.0], [1392.0, 15965.0], [1348.0, 15793.5], [1356.0, 19270.666666666668], [1372.0, 19259.0], [1364.0, 14964.75], [1360.0, 12304.0], [1464.0, 10418.0], [1468.0, 17379.0], [1440.0, 15888.0], [1444.0, 15879.0], [1448.0, 19156.0], [1452.0, 15864.0], [1456.0, 7731.0], [1408.0, 15961.0], [1412.0, 15960.0], [1416.0, 15958.5], [1432.0, 15934.0], [1424.0, 15939.5], [1524.0, 6391.0], [1532.0, 13088.0], [1512.0, 13857.0], [1504.0, 13876.0], [1508.0, 13871.0], [1516.0, 13852.0], [1520.0, 17127.0], [1472.0, 17371.0], [1476.0, 17363.0], [1480.0, 10395.0], [1484.0, 17347.0], [1500.0, 13898.0], [1496.0, 13905.0], [1492.0, 13909.0], [1488.0, 14064.0], [1588.0, 148.5], [1592.0, 148.0], [1580.0, 148.5], [1548.0, 4603.0], [1540.0, 13083.0], [1536.0, 13084.0], [1632.0, 143.0], [1660.0, 236.0], [1636.0, 143.89999999999998], [1648.0, 3353.0], [1628.0, 144.5], [1624.0, 145.0], [1616.0, 146.0], [1704.0, 220.5], [1696.0, 222.0], [1708.0, 219.5], [1700.0, 220.5], [1664.0, 230.0], [1688.0, 225.0], [1684.0, 226.0], [1852.0, 206.53846153846152], [1848.0, 208.5], [1860.0, 205.0], [1856.0, 206.91666666666666], [1972.0, 205.0], [1968.0, 206.0], [1988.0, 204.11111111111111], [2044.0, 200.5], [2016.0, 201.83333333333334], [2024.0, 201.0], [1984.0, 204.5], [1992.0, 204.0], [1996.0, 204.0], [2012.0, 203.125], [2008.0, 202.83333333333331], [2004.0, 202.83333333333334], [2000.0, 203.0], [2128.0, 253.0], [2160.0, 246.0], [2152.0, 250.45454545454547], [2080.0, 1193.0], [2176.0, 245.0], [2224.0, 189.0], [2256.0, 186.0], [2216.0, 190.0], [2208.0, 192.0], [2376.0, 10551.0], [2416.0, 10546.0], [2384.0, 10550.0], [2392.0, 10550.5], [2360.0, 10553.0], [2352.0, 10562.0], [2336.0, 162.0], [2544.0, 10414.0], [2504.0, 10531.0], [2512.0, 10490.25], [2520.0, 10486.0], [2536.0, 10424.0], [2528.0, 10475.0], [2448.0, 10542.0], [2472.0, 10539.0], [2464.0, 10540.0], [2560.0, 10264.0], [2600.0, 274.0], [2784.0, 246.75], [2752.0, 247.66666666666666], [2760.0, 268.1428571428571], [2768.0, 248.0], [2776.0, 246.0], [2696.0, 294.57142857142856], [2744.0, 250.0], [2736.0, 250.0], [2728.0, 250.0], [2720.0, 251.5], [2936.0, 170.0], [2888.0, 229.0], [2896.0, 228.66666666666666], [2904.0, 228.0], [2920.0, 224.88888888888889], [2824.0, 243.0], [2864.0, 333.3333333333333], [2848.0, 241.66666666666666], [2944.0, 148.0], [3000.0, 4860.192717730014], [2960.0, 130.33333333333334], [2968.0, 5365.5], [2984.0, 8214.400000000001], [2161.0, 246.0], [2169.0, 245.25], [2153.0, 248.0], [2145.0, 252.0], [2105.0, 255.0], [2057.0, 196.0], [2177.0, 245.0], [2201.0, 193.0], [2225.0, 189.0], [2209.0, 192.0], [2369.0, 10553.0], [2417.0, 10544.666666666666], [2385.0, 10552.0], [2409.0, 10547.5], [2345.0, 161.08333333333331], [2337.0, 162.22222222222223], [2537.0, 10424.0], [2497.0, 10533.0], [2521.0, 10485.0], [2545.0, 10414.5], [2489.0, 10533.0], [2481.0, 10536.0], [2473.0, 10538.333333333334], [2465.0, 10538.666666666666], [2585.0, 278.5], [2561.0, 289.0], [2625.0, 285.94117647058823], [2601.0, 411.0], [2705.0, 252.0], [2785.0, 362.6666666666667], [2753.0, 248.0], [2769.0, 387.0], [2777.0, 246.0], [2689.0, 255.0], [2737.0, 249.66666666666666], [2729.0, 250.0], [2721.0, 251.0], [2937.0, 161.5], [2889.0, 228.5], [2897.0, 229.0], [2905.0, 227.5], [2929.0, 175.61538461538458], [2841.0, 242.5], [2873.0, 285.6666666666667], [2865.0, 380.0], [2857.0, 269.0], [2849.0, 242.0], [2993.0, 7162.777777777777], [2945.0, 147.0], [2953.0, 2550.9999999999995], [2969.0, 116.5], [2985.0, 7178.0], [2977.0, 7950.75], [1073.0, 13941.0], [1085.0, 19978.0], [1053.0, 13950.0], [1025.0, 27346.0], [1029.0, 13961.0], [1033.0, 40666.0], [1037.0, 13958.0], [1049.0, 13952.0], [1069.0, 13943.0], [1145.0, 30247.0], [1121.0, 13912.0], [1125.0, 13910.0], [1129.0, 13909.0], [1149.0, 27272.0], [1141.0, 27607.0], [1137.0, 13897.0], [1089.0, 13933.0], [1093.0, 13931.0], [1097.0, 15324.0], [1101.0, 13926.0], [1117.0, 13919.0], [1113.0, 15176.0], [1109.0, 13922.0], [1105.0, 13924.0], [1133.0, 13906.0], [1201.0, 13773.0], [1209.0, 14854.0], [1185.0, 13818.0], [1197.0, 13806.0], [1213.0, 13596.0], [1205.0, 13600.0], [1181.0, 13820.0], [1153.0, 13888.0], [1157.0, 13882.0], [1161.0, 13880.0], [1177.0, 13824.0], [1173.0, 13872.0], [1169.0, 13875.0], [1265.0, 19338.0], [1249.0, 23294.0], [1253.0, 18608.0], [1261.0, 25095.0], [1229.0, 11537.0], [1225.0, 13546.0], [1221.0, 25630.0], [1217.0, 13593.0], [1237.0, 19685.5], [1233.0, 9520.0], [1341.0, 41506.0], [1317.0, 16024.0], [1313.0, 12343.0], [1321.0, 41529.0], [1325.0, 16022.0], [1333.0, 14175.5], [1329.0, 19299.0], [1293.0, 16036.0], [1289.0, 12359.0], [1285.0, 12360.0], [1305.0, 12346.0], [1301.0, 14190.5], [1405.0, 15961.5], [1381.0, 14137.5], [1377.0, 17619.5], [1385.0, 19245.0], [1389.0, 15967.0], [1397.0, 15961.0], [1393.0, 15965.0], [1353.0, 19272.0], [1357.0, 12302.0], [1369.0, 12297.0], [1365.0, 19264.0], [1361.0, 12303.0], [1465.0, 14103.0], [1469.0, 10415.0], [1441.0, 15887.0], [1445.0, 15879.0], [1449.0, 15879.0], [1453.0, 8508.0], [1461.0, 14103.5], [1409.0, 15959.0], [1417.0, 15959.0], [1437.0, 15896.5], [1429.0, 19214.5], [1425.0, 19218.0], [1533.0, 13087.0], [1509.0, 13866.0], [1513.0, 13855.0], [1517.0, 13851.0], [1525.0, 6389.0], [1521.0, 13848.0], [1473.0, 14089.0], [1477.0, 14084.0], [1481.0, 10392.0], [1485.0, 14066.0], [1497.0, 13904.0], [1493.0, 13907.0], [1549.0, 4601.0], [1545.0, 13068.0], [1541.0, 13078.0], [1633.0, 144.0], [1645.0, 142.5], [1641.0, 142.8], [1649.0, 242.0], [1629.0, 144.47058823529412], [1625.0, 145.0], [1705.0, 219.5], [1709.0, 218.0], [1669.0, 228.0], [1673.0, 228.0], [1681.0, 227.0], [1853.0, 207.0], [1849.0, 207.78313253012038], [1877.0, 151.86666666666667], [1861.0, 206.0], [1969.0, 204.5], [1937.0, 1452.0], [2033.0, 201.0], [2017.0, 202.0], [2021.0, 202.0], [2025.0, 201.88888888888889], [2041.0, 200.0], [1985.0, 204.0], [1989.0, 204.0], [1993.0, 204.0], [1997.0, 203.0], [2009.0, 203.0], [2170.0, 245.0], [2162.0, 246.0], [2074.0, 113.33333333333333], [2178.0, 246.0], [2194.0, 194.0], [2210.0, 191.0], [2250.0, 187.0], [2258.0, 186.25], [2378.0, 10551.5], [2410.0, 10546.5], [2362.0, 10555.0], [2346.0, 161.2], [2338.0, 162.0], [2530.0, 10474.5], [2546.0, 10402.0], [2554.0, 10323.0], [2506.0, 10529.5], [2458.0, 10542.0], [2490.0, 10534.0], [2482.0, 10535.0], [2466.0, 10540.0], [2714.0, 251.0], [2770.0, 247.0], [2754.0, 248.0], [2778.0, 247.0], [2746.0, 248.83333333333334], [2738.0, 249.0], [2730.0, 269.4285714285714], [2722.0, 250.0], [2938.0, 162.0], [2890.0, 229.0], [2898.0, 228.57142857142856], [2906.0, 228.0], [2930.0, 172.0], [2834.0, 243.0], [2842.0, 242.0], [2866.0, 286.6666666666667], [2858.0, 240.0], [2850.0, 242.0], [2986.0, 7175.0], [2970.0, 115.0], [2171.0, 245.5], [2163.0, 246.0], [2147.0, 251.33333333333334], [2075.0, 102.0], [2059.0, 197.0], [2251.0, 187.0], [2203.0, 192.0], [2395.0, 10549.0], [2363.0, 10551.0], [2531.0, 10471.0], [2555.0, 10279.0], [2547.0, 10342.0], [2499.0, 10532.0], [2515.0, 10488.333333333334], [2459.0, 10541.0], [2491.0, 10534.0], [2483.0, 10535.25], [2475.0, 10538.4], [2571.0, 288.0], [2595.0, 276.5], [2755.0, 248.2], [2803.0, 244.0], [2771.0, 316.5], [2699.0, 394.0], [2747.0, 249.0], [2739.0, 248.66666666666666], [2779.0, 247.0], [2931.0, 172.0], [2939.0, 161.74999999999997], [2891.0, 228.5], [2899.0, 228.875], [2907.0, 227.94444444444443], [2915.0, 225.91666666666666], [2835.0, 242.0], [2867.0, 380.0], [2851.0, 241.0], [2947.0, 146.0], [2971.0, 115.0], [2979.0, 90.4], [517.0, 33507.0], [541.0, 37254.0], [543.0, 37254.0], [519.0, 32498.0], [515.0, 34517.0], [513.0, 35528.0], [527.0, 28460.0], [525.0, 29469.0], [523.0, 30479.0], [521.0, 31489.0], [535.0, 37258.0], [531.0, 37259.0], [573.0, 36297.0], [575.0, 36297.0], [561.0, 36294.0], [563.0, 27430.0], [565.0, 35869.0], [571.0, 36298.0], [569.0, 36750.0], [559.0, 36299.0], [545.0, 36795.5], [547.0, 36438.0], [551.0, 36301.0], [549.0, 36842.5], [557.0, 36403.0], [555.0, 36299.0], [553.0, 36842.0], [567.0, 35855.0], [603.0, 36267.0], [601.0, 36269.0], [607.0, 36265.0], [593.0, 36281.0], [595.0, 36279.0], [605.0, 36266.5], [581.0, 36293.0], [579.0, 36295.0], [577.0, 36296.0], [591.0, 36283.0], [589.0, 36288.0], [587.0, 36292.0], [585.0, 36291.0], [597.0, 36277.0], [637.0, 35399.0], [627.0, 35401.5], [635.0, 35398.0], [621.0, 35406.0], [609.0, 36260.0], [611.0, 36256.0], [615.0, 36246.0], [619.0, 26453.0], [617.0, 36236.0], [631.0, 35401.0], [625.0, 35403.0], [667.0, 35382.0], [669.0, 35380.5], [665.0, 35383.0], [655.0, 35388.0], [641.0, 38030.666666666664], [643.0, 35393.5], [647.0, 35391.0], [653.0, 35388.0], [651.0, 35389.0], [661.0, 35385.5], [659.0, 35386.0], [657.0, 35386.0], [701.0, 35357.0], [703.0, 35355.0], [689.0, 35372.0], [691.0, 35370.0], [699.0, 35366.0], [697.0, 35367.5], [679.0, 35377.666666666664], [675.0, 35379.0], [673.0, 35379.333333333336], [683.0, 35374.0], [681.0, 35375.0], [695.0, 35368.5], [693.0, 35368.5], [711.0, 35347.0], [731.0, 35286.0], [735.0, 35284.75], [729.0, 35289.0], [709.0, 35349.0], [707.0, 35354.0], [705.0, 35355.0], [719.0, 35300.0], [717.0, 35302.0], [715.0, 35344.0], [713.0, 35344.0], [721.0, 35301.0], [765.0, 33210.0], [767.0, 33208.0], [753.0, 25421.0], [755.0, 34193.0], [757.0, 34191.0], [763.0, 33210.0], [761.0, 24410.0], [737.0, 35270.0], [743.0, 35256.0], [749.0, 35245.0], [747.0, 35248.0], [745.0, 39203.0], [759.0, 34189.0], [793.0, 33170.0], [797.0, 23387.0], [785.0, 33182.0], [795.0, 33167.0], [775.0, 33203.0], [773.0, 33204.0], [771.0, 33205.0], [769.0, 33207.0], [783.0, 33183.0], [781.0, 33184.0], [779.0, 33194.0], [777.0, 33200.0], [791.0, 33172.5], [789.0, 33176.0], [829.0, 24573.0], [831.0, 23754.0], [817.0, 20846.0], [819.0, 19837.0], [821.0, 18830.0], [827.0, 15802.0], [825.0, 16811.0], [815.0, 21391.0], [801.0, 32182.0], [803.0, 32182.5], [807.0, 32179.0], [805.0, 32181.0], [813.0, 22385.0], [811.0, 32176.0], [809.0, 32177.0], [823.0, 17820.0], [835.0, 24518.0], [863.0, 26982.0], [849.0, 41303.0], [859.0, 41295.0], [833.0, 24529.0], [837.0, 24517.0], [839.0, 24416.0], [845.0, 41306.0], [843.0, 41320.0], [841.0, 24392.0], [855.0, 33988.0], [853.0, 26677.0], [851.0, 41301.0], [869.0, 18196.0], [893.0, 15362.0], [895.0, 15362.0], [871.0, 22589.0], [867.0, 18207.0], [865.0, 18209.0], [879.0, 14739.5], [877.0, 14485.0], [875.0, 14504.0], [873.0, 26605.0], [887.0, 14109.0], [885.0, 26516.0], [919.0, 27488.0], [959.0, 14074.0], [945.0, 14104.0], [957.0, 14101.0], [953.0, 18673.0], [949.0, 14102.0], [947.0, 14103.0], [985.0, 14032.0], [991.0, 15419.0], [989.0, 14031.0], [987.0, 14729.5], [965.0, 14071.0], [961.0, 20114.0], [975.0, 15312.0], [973.0, 14069.0], [971.0, 18087.333333333332], [981.0, 15441.0], [997.0, 14011.0], [1011.0, 18876.666666666668], [1009.0, 40703.0], [1017.0, 13967.0], [993.0, 14023.0], [1005.0, 13999.0], [1003.0, 14006.0], [1001.0, 15263.0], [1015.0, 15224.0], [1013.0, 40703.0], [1078.0, 13939.0], [1082.0, 15193.0], [1086.0, 13935.0], [1058.0, 13949.0], [1054.0, 13950.0], [1026.0, 13963.0], [1030.0, 15216.0], [1038.0, 13958.0], [1050.0, 13952.0], [1046.0, 13954.333333333334], [1042.0, 13956.0], [1070.0, 17580.0], [1066.0, 13947.333333333334], [1138.0, 13898.0], [1150.0, 13889.0], [1126.0, 15166.0], [1130.0, 13909.0], [1142.0, 13894.0], [1098.0, 27641.0], [1090.0, 26017.0], [1118.0, 27631.0], [1106.0, 13924.0], [1134.0, 13900.0], [1166.0, 13879.0], [1206.0, 13599.0], [1214.0, 13595.0], [1186.0, 13817.0], [1158.0, 27265.0], [1154.0, 13887.0], [1174.0, 27584.0], [1170.0, 13874.0], [1194.0, 14229.666666666666], [1190.0, 27166.0], [1274.0, 21251.0], [1270.0, 21140.0], [1250.0, 23293.0], [1254.0, 22128.0], [1258.0, 33333.0], [1262.0, 23287.0], [1278.0, 16838.5], [1266.0, 23284.0], [1230.0, 11535.0], [1226.0, 13545.0], [1218.0, 25676.0], [1246.0, 20903.5], [1238.0, 22462.0], [1234.0, 9518.0], [1330.0, 10093.0], [1338.0, 17656.0], [1342.0, 19279.0], [1314.0, 12342.0], [1318.0, 12341.0], [1294.0, 12350.0], [1290.0, 12358.5], [1310.0, 15825.5], [1302.0, 12348.0], [1298.0, 15829.5], [1402.0, 19239.0], [1406.0, 15961.0], [1378.0, 41485.0], [1382.0, 15979.0], [1398.0, 15962.0], [1346.0, 19274.0], [1350.0, 30388.0], [1374.0, 15980.0], [1362.0, 12303.0], [1470.0, 14100.0], [1442.0, 19159.0], [1446.0, 15880.0], [1450.0, 15877.5], [1454.0, 8507.0], [1466.0, 14103.0], [1462.0, 14102.0], [1458.0, 14106.0], [1418.0, 15959.0], [1422.0, 17050.0], [1438.0, 15896.0], [1434.0, 15932.0], [1430.0, 15936.0], [1426.0, 15938.0], [1530.0, 14425.666666666666], [1506.0, 13875.0], [1510.0, 13863.0], [1514.0, 13853.0], [1518.0, 13850.0], [1522.0, 15473.0], [1474.0, 10403.0], [1482.0, 10385.0], [1502.0, 13878.0], [1498.0, 17181.0], [1494.0, 13906.0], [1490.0, 15548.0], [1594.0, 146.0], [1598.0, 146.0], [1582.0, 148.0], [1546.0, 5295.0], [1542.0, 13077.0], [1538.0, 13083.0], [1662.0, 235.0], [1658.0, 236.0], [1646.0, 125.0], [1654.0, 236.66666666666666], [1614.0, 146.0], [1606.0, 146.5], [1626.0, 144.57142857142858], [1694.0, 222.0], [1670.0, 228.0], [1678.0, 227.0], [1690.0, 223.0], [1854.0, 207.0], [1850.0, 208.0], [1878.0, 2346.0], [1862.0, 205.0], [1858.0, 206.66666666666669], [1974.0, 206.0], [1970.0, 205.25], [1966.0, 206.0], [2034.0, 201.0], [1990.0, 204.0], [2018.0, 201.0], [2022.0, 201.4], [2026.0, 201.0], [2038.0, 200.0], [1986.0, 204.0], [1994.0, 204.0], [1998.0, 202.83333333333334], [2014.0, 203.0], [2006.0, 202.79999999999998], [2002.0, 203.0], [2030.0, 201.0], [2172.0, 245.0], [2164.0, 246.0], [2132.0, 252.0], [2156.0, 248.33333333333334], [2148.0, 251.5], [2076.0, 102.0], [2068.0, 196.0], [2196.0, 193.0], [2268.0, 176.0], [2252.0, 187.0], [2420.0, 10543.0], [2396.0, 10548.666666666668], [2412.0, 10547.0], [2364.0, 10553.0], [2348.0, 162.0], [2340.0, 161.4], [2548.0, 10338.0], [2500.0, 10532.0], [2508.0, 10491.0], [2524.0, 10483.5], [2540.0, 10422.0], [2532.0, 10464.0], [2460.0, 10541.0], [2492.0, 10533.6], [2476.0, 10538.0], [2572.0, 288.0], [2588.0, 278.3333333333333], [2580.0, 307.14285714285717], [2604.0, 271.0], [2756.0, 294.6666666666667], [2804.0, 244.0], [2764.0, 294.3333333333333], [2708.0, 252.0], [2748.0, 249.33333333333334], [2740.0, 389.0], [2780.0, 246.5], [2828.0, 243.0], [2884.0, 229.66666666666666], [2940.0, 161.0], [2900.0, 228.04545454545453], [2876.0, 308.75], [2836.0, 312.5], [2868.0, 310.0], [2860.0, 275.75], [2852.0, 240.75], [2956.0, 10609.0], [2964.0, 2374.2857142857147], [2972.0, 116.0], [2980.0, 31368.0], [2165.0, 246.5], [2117.0, 254.0], [2173.0, 245.0], [2061.0, 196.0], [2053.0, 196.0], [2189.0, 194.0], [2277.0, 171.0], [2229.0, 189.25], [2181.0, 244.1], [2213.0, 191.0], [2245.0, 187.0], [2269.0, 176.0], [2253.0, 186.0], [2421.0, 10545.0], [2373.0, 10552.0], [2381.0, 10552.0], [2389.0, 10551.0], [2413.0, 10547.0], [2357.0, 10560.6], [2349.0, 160.4], [2341.0, 161.0], [2557.0, 10275.5], [2501.0, 10532.0], [2509.0, 10492.0], [2517.0, 10487.5], [2525.0, 10483.0], [2541.0, 10419.0], [2533.0, 10463.0], [2493.0, 10533.0], [2477.0, 10537.176470588238], [2685.0, 255.0], [2621.0, 262.0], [2717.0, 250.5], [2765.0, 249.0], [2701.0, 252.5], [2749.0, 249.0], [2741.0, 249.0], [2733.0, 250.33333333333334], [2725.0, 251.0], [2917.0, 225.77777777777777], [2925.0, 223.66666666666666], [2941.0, 161.0], [2933.0, 170.66666666666669], [2821.0, 243.0], [2837.0, 242.0], [2869.0, 239.0], [2861.0, 287.6666666666667], [2853.0, 241.0], [2965.0, 4619.285714285714], [2989.0, 205.2], [2981.0, 10543.0], [1075.0, 20796.0], [1087.0, 13934.0], [1083.0, 20608.5], [1079.0, 13939.0], [1027.0, 13963.0], [1035.0, 14587.0], [1039.0, 15212.0], [1047.0, 27665.0], [1043.0, 13956.0], [1071.0, 15198.0], [1063.0, 14365.333333333334], [1147.0, 13891.0], [1151.0, 15283.0], [1123.0, 15168.0], [1131.0, 13908.0], [1143.0, 13894.0], [1139.0, 13896.0], [1119.0, 13914.0], [1091.0, 13932.0], [1095.0, 13931.0], [1099.0, 15184.0], [1103.0, 28473.0], [1115.0, 14548.0], [1107.0, 13923.0], [1135.0, 15294.0], [1211.0, 13597.0], [1215.0, 13594.0], [1191.0, 15067.0], [1187.0, 13815.0], [1199.0, 13796.0], [1207.0, 13599.0], [1203.0, 13602.0], [1155.0, 13885.0], [1159.0, 17518.0], [1167.0, 13876.0], [1163.0, 27232.0], [1179.0, 13823.0], [1171.0, 13874.0], [1271.0, 17827.5], [1267.0, 12374.0], [1255.0, 23291.0], [1279.0, 23273.0], [1251.0, 22129.0], [1259.0, 21144.0], [1263.0, 19339.0], [1231.0, 10529.0], [1227.0, 12546.0], [1219.0, 14982.0], [1247.0, 22460.0], [1243.0, 23898.666666666668], [1239.0, 21155.0], [1331.0, 19296.0], [1323.0, 17662.5], [1327.0, 14697.5], [1335.0, 12333.0], [1295.0, 22096.0], [1287.0, 17814.0], [1283.0, 25730.0], [1311.0, 16029.0], [1307.0, 12346.0], [1299.0, 19312.0], [1395.0, 13000.5], [1403.0, 15961.333333333334], [1407.0, 17599.5], [1383.0, 19238.0], [1387.0, 19244.0], [1391.0, 19243.0], [1375.0, 12296.0], [1347.0, 12313.0], [1351.0, 12310.0], [1371.0, 20515.75], [1367.0, 19260.0], [1467.0, 14100.0], [1471.0, 10410.0], [1443.0, 15879.0], [1451.0, 19153.0], [1455.0, 7733.0], [1463.0, 10419.0], [1459.0, 14105.0], [1439.0, 15888.0], [1411.0, 15959.5], [1415.0, 15957.0], [1419.0, 17597.5], [1435.0, 19174.0], [1431.0, 15935.0], [1427.0, 19215.0], [1535.0, 13086.0], [1531.0, 16367.0], [1507.0, 17153.0], [1511.0, 17137.0], [1515.0, 13855.0], [1519.0, 13849.0], [1527.0, 13090.5], [1523.0, 13843.0], [1503.0, 13878.0], [1475.0, 14087.0], [1479.0, 10398.0], [1483.0, 14068.0], [1487.0, 14065.5], [1499.0, 13898.0], [1495.0, 13905.0], [1491.0, 13909.0], [1587.0, 148.0], [1547.0, 5287.0], [1543.0, 16354.0], [1655.0, 237.0], [1663.0, 235.0], [1635.0, 144.0], [1647.0, 3355.0], [1651.0, 242.0], [1603.0, 146.0], [1631.0, 143.6], [1627.0, 144.46153846153845], [1619.0, 146.0], [1703.0, 219.66666666666666], [1711.0, 218.62499999999997], [1667.0, 229.0], [1675.0, 228.0], [1679.0, 227.0], [1687.0, 225.0], [1683.0, 226.0], [1855.0, 207.0], [1851.0, 206.66666666666666], [1859.0, 206.0], [1879.0, 2345.0], [1983.0, 204.0], [1975.0, 205.0], [1971.0, 205.0], [2035.0, 200.5], [2039.0, 200.0], [2019.0, 202.0], [2043.0, 200.0], [2015.0, 202.5], [1991.0, 204.0], [1995.0, 203.66666666666666], [1999.0, 203.33333333333334], [2011.0, 202.75], [2007.0, 203.0], [2003.0, 202.66666666666666], [2031.0, 201.0], [2158.0, 247.33333333333334], [2166.0, 245.42857142857142], [2174.0, 245.0], [2078.0, 102.0], [2062.0, 196.0], [2054.0, 196.0], [2222.0, 190.0], [2254.0, 186.0], [2422.0, 10545.0], [2414.0, 11862.333333333334], [2374.0, 10552.0], [2382.0, 10551.0], [2390.0, 10550.0], [2334.0, 162.0], [2366.0, 10552.0], [2358.0, 10559.0], [2342.0, 161.0], [2542.0, 10416.0], [2550.0, 10325.5], [2502.0, 10532.0], [2526.0, 10481.0], [2534.0, 10459.0], [2486.0, 10536.0], [2478.0, 10536.0], [2470.0, 10540.0], [2574.0, 288.0], [2622.0, 262.0], [2598.0, 276.0], [2814.0, 244.0], [2718.0, 252.0], [2766.0, 388.0], [2750.0, 248.25], [2742.0, 249.0], [2734.0, 249.66666666666666], [2726.0, 251.0], [2886.0, 230.0], [2942.0, 152.25], [2902.0, 227.5], [2918.0, 224.75], [2822.0, 243.0], [2846.0, 241.0], [2958.0, 5370.166666666666], [2966.0, 129.0], [2974.0, 6400.999999999999], [2982.0, 7175.75], [2151.0, 251.0], [2175.0, 245.0], [2079.0, 1196.0], [2071.0, 195.0], [2199.0, 193.5], [2207.0, 192.0], [2215.0, 190.0], [2247.0, 187.0], [2399.0, 10548.0], [2407.0, 10548.0], [2335.0, 162.125], [2359.0, 10559.0], [2351.0, 180.5], [2551.0, 10323.0], [2559.0, 10266.0], [2519.0, 10487.0], [2527.0, 10481.0], [2535.0, 10453.0], [2463.0, 10540.333333333334], [2495.0, 10532.333333333334], [2471.0, 10540.0], [2583.0, 325.3333333333333], [2623.0, 262.0], [2687.0, 254.5], [2567.0, 288.0], [2599.0, 277.0], [2799.0, 244.0], [2815.0, 244.0], [2767.0, 387.0], [2775.0, 247.0], [2719.0, 251.0], [2711.0, 252.0], [2695.0, 255.0], [2751.0, 248.0], [2743.0, 248.5], [2735.0, 249.0], [2727.0, 249.85714285714286], [2935.0, 170.0], [2903.0, 227.5], [2919.0, 225.0], [2863.0, 268.0], [2855.0, 241.16666666666666], [2959.0, 130.0], [2975.0, 7966.25], [1.0, 131081.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2955.567753716682, 5421.546714038998]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3494.4, "minX": 1.68288438E12, "maxY": 294398.63333333336, "series": [{"data": [[1.6828845E12, 204809.23333333334], [1.68288438E12, 232633.81666666668], [1.68288468E12, 12129.4], [1.68288474E12, 5013.066666666667], [1.68288456E12, 276709.85], [1.68288462E12, 294398.63333333336], [1.68288444E12, 186882.9]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6828845E12, 140120.4], [1.68288438E12, 163833.6], [1.68288468E12, 9517.2], [1.68288474E12, 3494.4], [1.68288456E12, 193561.2], [1.68288462E12, 206715.6], [1.68288444E12, 125815.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288474E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2890.523584905677, "minX": 1.68288438E12, "maxY": 97764.87980769228, "series": [{"data": [[1.6828845E12, 8701.679136433904], [1.68288438E12, 2890.523584905677], [1.68288468E12, 25106.187113857017], [1.68288474E12, 97764.87980769228], [1.68288456E12, 3382.6075159290713], [1.68288462E12, 3035.3322368421136], [1.68288444E12, 8006.672763157925]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288474E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2890.4844134536606, "minX": 1.68288438E12, "maxY": 97764.86298076934, "series": [{"data": [[1.6828845E12, 8007.763827762587], [1.68288438E12, 2890.4844134536606], [1.68288468E12, 25106.179170344232], [1.68288474E12, 97764.86298076934], [1.68288456E12, 3244.519570022994], [1.68288462E12, 2975.5820743989675], [1.68288444E12, 7704.649407894706]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288474E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 168.61577112387064, "minX": 1.68288438E12, "maxY": 5080.620019031795, "series": [{"data": [[1.6828845E12, 5080.620019031795], [1.68288438E12, 168.61577112387064], [1.68288468E12, 605.3583406884369], [1.68288474E12, 1119.8004807692307], [1.68288456E12, 1051.3822981231915], [1.68288462E12, 907.6173245614092], [1.68288444E12, 620.1314473684204]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288474E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.68288438E12, "maxY": 215513.0, "series": [{"data": [[1.6828845E12, 164101.0], [1.68288438E12, 57772.0], [1.68288468E12, 67207.0], [1.68288474E12, 131081.0], [1.68288456E12, 215513.0], [1.68288462E12, 192393.0], [1.68288444E12, 101425.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6828845E12, 11174.0], [1.68288438E12, 12027.5], [1.68288468E12, 40575.2], [1.68288474E12, 100087.0], [1.68288456E12, 4137.0], [1.68288462E12, 4251.0], [1.68288444E12, 14556.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6828845E12, 139525.0], [1.68288438E12, 43054.0], [1.68288468E12, 64319.66], [1.68288474E12, 131080.0], [1.68288456E12, 102404.0], [1.68288462E12, 80267.0], [1.68288444E12, 100321.20999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6828845E12, 54395.9], [1.68288438E12, 14176.0], [1.68288468E12, 55105.6], [1.68288474E12, 100225.15], [1.68288456E12, 13886.0], [1.68288462E12, 16454.0], [1.68288444E12, 24310.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6828845E12, 12.0], [1.68288438E12, 22.0], [1.68288468E12, 4601.0], [1.68288474E12, 64234.0], [1.68288456E12, 13.0], [1.68288462E12, 12.0], [1.68288444E12, 21.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6828845E12, 199.0], [1.68288438E12, 223.0], [1.68288468E12, 19260.0], [1.68288474E12, 100040.0], [1.68288456E12, 199.0], [1.68288462E12, 202.0], [1.68288444E12, 204.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288474E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 85.0, "minX": 1.0, "maxY": 158125.0, "series": [{"data": [[2.0, 56170.0], [3.0, 65925.0], [4.0, 50844.5], [5.0, 19126.5], [6.0, 29130.0], [7.0, 5785.0], [8.0, 29920.5], [9.0, 67386.0], [11.0, 43410.0], [12.0, 10942.0], [13.0, 8215.0], [14.0, 131079.0], [16.0, 32175.5], [21.0, 26694.0], [22.0, 13072.5], [24.0, 13095.0], [27.0, 2452.0], [30.0, 12967.5], [31.0, 64224.0], [33.0, 31150.5], [36.0, 23386.0], [37.0, 37248.0], [40.0, 145.0], [47.0, 7158.0], [48.0, 6207.0], [52.0, 10960.0], [56.0, 36277.0], [61.0, 14156.0], [62.0, 22312.5], [65.0, 1060.0], [70.0, 215.5], [69.0, 13905.0], [75.0, 90.0], [77.0, 144.0], [82.0, 1201.0], [86.0, 151.0], [96.0, 10623.0], [103.0, 159.0], [106.0, 10910.0], [115.0, 9411.0], [120.0, 108.0], [122.0, 32701.0], [123.0, 100045.0], [125.0, 160.0], [124.0, 187.0], [130.0, 31920.0], [134.0, 35372.0], [136.0, 14270.5], [156.0, 126.0], [167.0, 137.0], [161.0, 15356.0], [172.0, 174.0], [194.0, 1118.0], [202.0, 34664.5], [206.0, 216.0], [201.0, 203.0], [203.0, 100063.0], [221.0, 85.0], [218.0, 206.0], [220.0, 15980.0], [226.0, 158.5], [230.0, 10537.0], [237.0, 13947.0], [246.0, 167.0], [241.0, 161.0], [253.0, 179.0], [264.0, 11600.0], [271.0, 190.0], [285.0, 213.0], [283.0, 153.0], [274.0, 214.0], [277.0, 190.0], [292.0, 173.0], [297.0, 145.0], [288.0, 273.0], [313.0, 151.0], [307.0, 214.0], [319.0, 196.0], [335.0, 181.0], [320.0, 197.0], [326.0, 175.0], [328.0, 3318.0], [331.0, 201.0], [330.0, 188.0], [334.0, 219.0], [329.0, 190.0], [332.0, 178.0], [333.0, 202.0], [338.0, 190.0], [347.0, 195.0], [337.0, 191.0], [342.0, 178.0], [340.0, 190.0], [341.0, 208.0], [339.0, 178.0], [345.0, 5069.0], [336.0, 189.0], [343.0, 199.0], [344.0, 194.0], [349.0, 184.0], [360.0, 212.0], [354.0, 169.0], [352.0, 159.0], [373.0, 160.0], [397.0, 6211.0], [384.0, 203.0], [398.0, 156.0], [414.0, 223.0], [402.0, 13766.0], [403.0, 166.0], [427.0, 203.0], [428.0, 315.0], [420.0, 167.0], [446.0, 186.0], [438.0, 12775.0], [437.0, 284.0], [495.0, 159.0], [489.0, 213.0], [508.0, 209.0], [498.0, 162.0], [505.0, 140.0], [512.0, 180.5], [521.0, 200.0], [596.0, 14175.0], [579.0, 7729.0], [603.0, 8730.0], [605.0, 187.0], [600.0, 241.0], [633.0, 204.0], [635.0, 119.0], [639.0, 8766.0], [634.0, 191.0], [627.0, 171.0], [613.0, 344.0], [665.0, 199.0], [670.0, 194.0], [643.0, 14491.0], [642.0, 12383.0], [640.0, 193.0], [662.0, 165.0], [671.0, 165.0], [658.0, 193.0], [661.0, 219.0], [663.0, 183.0], [646.0, 301.5], [655.0, 10110.0], [652.0, 171.0], [667.0, 285.0], [666.0, 184.0], [669.0, 187.0], [668.0, 149.0], [672.0, 239.0], [673.0, 213.0], [683.0, 203.0], [677.0, 199.0], [675.0, 15165.0], [674.0, 177.0], [708.0, 188.0], [711.0, 214.0], [717.0, 353.0], [728.0, 190.0], [760.0, 208.0], [755.0, 244.0], [757.0, 371.0], [815.0, 193.0], [800.0, 10553.0], [846.0, 371.0], [862.0, 10916.0], [870.0, 208.0], [893.0, 198.0], [865.0, 218.0], [907.0, 215.0], [900.0, 16456.0], [952.0, 345.0], [983.0, 196.0], [984.0, 187.0], [994.0, 279.0], [1009.0, 188.0], [1002.0, 197.0], [992.0, 189.0], [1004.0, 184.0], [995.0, 268.0], [1068.0, 233.5], [1304.0, 455.0], [1335.0, 188.0], [1695.0, 334.0], [1746.0, 456.0], [1.0, 60211.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 18720.5], [33.0, 30750.0], [9.0, 23427.0], [642.0, 8416.0], [665.0, 15162.0], [667.0, 80712.0], [717.0, 33500.0], [3.0, 11457.0], [61.0, 33423.0], [253.0, 74657.0], [992.0, 85538.0], [297.0, 9314.0], [74.0, 119809.0], [332.0, 119966.0], [342.0, 17986.0], [340.0, 72125.0], [341.0, 158125.0], [352.0, 97935.0], [6.0, 44999.0], [446.0, 76678.0], [505.0, 4717.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1746.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 131079.0, "series": [{"data": [[2.0, 56170.0], [3.0, 65925.0], [4.0, 50844.5], [5.0, 19126.5], [6.0, 29130.0], [7.0, 5785.0], [8.0, 29920.5], [9.0, 67386.0], [11.0, 43410.0], [12.0, 10942.0], [13.0, 8215.0], [14.0, 131079.0], [16.0, 32175.5], [21.0, 26694.0], [22.0, 13072.5], [24.0, 13095.0], [27.0, 2452.0], [30.0, 12967.5], [31.0, 64224.0], [33.0, 31150.5], [36.0, 23386.0], [37.0, 37248.0], [40.0, 145.0], [47.0, 7158.0], [48.0, 6207.0], [52.0, 10960.0], [56.0, 36277.0], [61.0, 14156.0], [62.0, 22312.5], [65.0, 1060.0], [70.0, 215.5], [69.0, 13905.0], [75.0, 90.0], [77.0, 144.0], [82.0, 1192.5], [86.0, 151.0], [96.0, 10623.0], [103.0, 159.0], [106.0, 10910.0], [115.0, 9411.0], [120.0, 108.0], [122.0, 32701.0], [123.0, 100045.0], [125.0, 160.0], [124.0, 187.0], [130.0, 31920.0], [134.0, 35372.0], [136.0, 14270.5], [156.0, 126.0], [167.0, 137.0], [161.0, 15356.0], [172.0, 174.0], [194.0, 1118.0], [202.0, 34664.5], [206.0, 216.0], [201.0, 203.0], [203.0, 100063.0], [221.0, 85.0], [218.0, 206.0], [220.0, 15980.0], [226.0, 158.5], [230.0, 10537.0], [237.0, 13947.0], [246.0, 167.0], [241.0, 161.0], [253.0, 179.0], [264.0, 11600.0], [271.0, 190.0], [285.0, 213.0], [283.0, 153.0], [274.0, 214.0], [277.0, 190.0], [292.0, 173.0], [297.0, 145.0], [288.0, 272.0], [313.0, 151.0], [307.0, 214.0], [319.0, 196.0], [335.0, 181.0], [320.0, 197.0], [326.0, 175.0], [328.0, 3318.0], [331.0, 201.0], [330.0, 188.0], [334.0, 219.0], [329.0, 190.0], [332.0, 178.0], [333.0, 202.0], [338.0, 190.0], [347.0, 195.0], [337.0, 191.0], [342.0, 178.0], [340.0, 190.0], [341.0, 208.0], [339.0, 178.0], [345.0, 5069.0], [336.0, 189.0], [343.0, 199.0], [344.0, 194.0], [349.0, 184.0], [360.0, 212.0], [354.0, 169.0], [352.0, 159.0], [373.0, 160.0], [397.0, 6211.0], [384.0, 203.0], [398.0, 156.0], [414.0, 223.0], [402.0, 13766.0], [403.0, 166.0], [427.0, 203.0], [428.0, 315.0], [420.0, 167.0], [446.0, 186.0], [438.0, 12775.0], [437.0, 284.0], [495.0, 159.0], [489.0, 213.0], [508.0, 209.0], [498.0, 162.0], [505.0, 140.0], [512.0, 180.5], [521.0, 200.0], [596.0, 14175.0], [579.0, 7729.0], [603.0, 8730.0], [605.0, 187.0], [600.0, 241.0], [633.0, 204.0], [635.0, 119.0], [639.0, 8766.0], [634.0, 191.0], [627.0, 171.0], [613.0, 344.0], [665.0, 199.0], [670.0, 194.0], [643.0, 14491.0], [642.0, 12383.0], [640.0, 193.0], [662.0, 165.0], [671.0, 165.0], [658.0, 193.0], [661.0, 219.0], [663.0, 183.0], [646.0, 301.5], [655.0, 10110.0], [652.0, 171.0], [667.0, 285.0], [666.0, 184.0], [669.0, 187.0], [668.0, 149.0], [672.0, 239.0], [673.0, 213.0], [683.0, 203.0], [677.0, 199.0], [675.0, 15165.0], [674.0, 177.0], [708.0, 188.0], [711.0, 214.0], [717.0, 353.0], [728.0, 190.0], [760.0, 208.0], [755.0, 244.0], [757.0, 371.0], [815.0, 193.0], [800.0, 10553.0], [846.0, 371.0], [862.0, 10916.0], [870.0, 208.0], [893.0, 198.0], [865.0, 218.0], [907.0, 215.0], [900.0, 16456.0], [952.0, 345.0], [983.0, 196.0], [984.0, 187.0], [994.0, 279.0], [1009.0, 188.0], [1002.0, 197.0], [992.0, 189.0], [1004.0, 184.0], [995.0, 268.0], [1068.0, 233.5], [1304.0, 455.0], [1335.0, 188.0], [1695.0, 334.0], [1746.0, 456.0], [1.0, 60211.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 0.0], [33.0, 0.0], [9.0, 0.0], [642.0, 0.0], [665.0, 0.0], [667.0, 0.0], [717.0, 0.0], [3.0, 0.0], [61.0, 0.0], [253.0, 0.0], [992.0, 0.0], [297.0, 0.0], [74.0, 0.0], [332.0, 0.0], [342.0, 0.0], [340.0, 0.0], [341.0, 0.0], [352.0, 0.0], [6.0, 0.0], [446.0, 0.0], [505.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1746.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 250.5, "minX": 1.68288438E12, "maxY": 415.73333333333335, "series": [{"data": [[1.6828845E12, 250.5], [1.68288438E12, 361.8333333333333], [1.68288456E12, 389.6666666666667], [1.68288462E12, 415.73333333333335], [1.68288444E12, 261.6333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288462E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.68288438E12, "maxY": 410.15, "series": [{"data": [[1.6828845E12, 278.01666666666665], [1.68288438E12, 325.06666666666666], [1.68288468E12, 18.883333333333333], [1.68288474E12, 6.933333333333334], [1.68288456E12, 384.05], [1.68288462E12, 410.15], [1.68288444E12, 249.63333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6828845E12, 2.216666666666667], [1.68288456E12, 0.4666666666666667], [1.68288462E12, 0.25], [1.68288444E12, 3.7]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288474E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.68288438E12, "maxY": 410.15, "series": [{"data": [[1.6828845E12, 278.01666666666665], [1.68288438E12, 325.06666666666666], [1.68288468E12, 18.883333333333333], [1.68288474E12, 6.933333333333334], [1.68288456E12, 384.05], [1.68288462E12, 410.15], [1.68288444E12, 249.63333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6828845E12, 2.216666666666667], [1.68288456E12, 0.4666666666666667], [1.68288462E12, 0.25], [1.68288444E12, 3.7]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288474E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.68288438E12, "maxY": 410.15, "series": [{"data": [[1.6828845E12, 278.01666666666665], [1.68288438E12, 325.06666666666666], [1.68288468E12, 18.883333333333333], [1.68288474E12, 6.933333333333334], [1.68288456E12, 384.05], [1.68288462E12, 410.15], [1.68288444E12, 249.63333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6828845E12, 2.216666666666667], [1.68288456E12, 0.4666666666666667], [1.68288462E12, 0.25], [1.68288444E12, 3.7]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288474E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

