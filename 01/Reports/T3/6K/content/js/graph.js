/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 201743.0, "series": [{"data": [[0.0, 10.0], [0.1, 21.0], [0.2, 24.0], [0.3, 28.0], [0.4, 31.0], [0.5, 34.0], [0.6, 38.0], [0.7, 40.0], [0.8, 41.0], [0.9, 42.0], [1.0, 44.0], [1.1, 45.0], [1.2, 46.0], [1.3, 47.0], [1.4, 48.0], [1.5, 49.0], [1.6, 49.0], [1.7, 50.0], [1.8, 51.0], [1.9, 52.0], [2.0, 53.0], [2.1, 53.0], [2.2, 54.0], [2.3, 54.0], [2.4, 55.0], [2.5, 56.0], [2.6, 57.0], [2.7, 58.0], [2.8, 59.0], [2.9, 59.0], [3.0, 60.0], [3.1, 60.0], [3.2, 60.0], [3.3, 61.0], [3.4, 62.0], [3.5, 62.0], [3.6, 63.0], [3.7, 65.0], [3.8, 66.0], [3.9, 66.0], [4.0, 67.0], [4.1, 68.0], [4.2, 69.0], [4.3, 70.0], [4.4, 71.0], [4.5, 71.0], [4.6, 72.0], [4.7, 72.0], [4.8, 73.0], [4.9, 73.0], [5.0, 74.0], [5.1, 74.0], [5.2, 75.0], [5.3, 75.0], [5.4, 76.0], [5.5, 76.0], [5.6, 76.0], [5.7, 76.0], [5.8, 77.0], [5.9, 77.0], [6.0, 77.0], [6.1, 78.0], [6.2, 78.0], [6.3, 78.0], [6.4, 79.0], [6.5, 79.0], [6.6, 79.0], [6.7, 80.0], [6.8, 80.0], [6.9, 80.0], [7.0, 80.0], [7.1, 80.0], [7.2, 81.0], [7.3, 81.0], [7.4, 82.0], [7.5, 82.0], [7.6, 83.0], [7.7, 83.0], [7.8, 84.0], [7.9, 84.0], [8.0, 84.0], [8.1, 85.0], [8.2, 85.0], [8.3, 85.0], [8.4, 86.0], [8.5, 86.0], [8.6, 86.0], [8.7, 86.0], [8.8, 87.0], [8.9, 87.0], [9.0, 87.0], [9.1, 87.0], [9.2, 88.0], [9.3, 88.0], [9.4, 88.0], [9.5, 89.0], [9.6, 89.0], [9.7, 90.0], [9.8, 90.0], [9.9, 90.0], [10.0, 91.0], [10.1, 91.0], [10.2, 91.0], [10.3, 92.0], [10.4, 92.0], [10.5, 92.0], [10.6, 92.0], [10.7, 93.0], [10.8, 93.0], [10.9, 93.0], [11.0, 93.0], [11.1, 94.0], [11.2, 94.0], [11.3, 94.0], [11.4, 95.0], [11.5, 95.0], [11.6, 95.0], [11.7, 96.0], [11.8, 96.0], [11.9, 96.0], [12.0, 96.0], [12.1, 97.0], [12.2, 97.0], [12.3, 97.0], [12.4, 98.0], [12.5, 98.0], [12.6, 98.0], [12.7, 99.0], [12.8, 99.0], [12.9, 99.0], [13.0, 100.0], [13.1, 100.0], [13.2, 100.0], [13.3, 100.0], [13.4, 100.0], [13.5, 101.0], [13.6, 101.0], [13.7, 101.0], [13.8, 101.0], [13.9, 101.0], [14.0, 102.0], [14.1, 102.0], [14.2, 102.0], [14.3, 102.0], [14.4, 102.0], [14.5, 103.0], [14.6, 103.0], [14.7, 103.0], [14.8, 103.0], [14.9, 104.0], [15.0, 104.0], [15.1, 104.0], [15.2, 105.0], [15.3, 105.0], [15.4, 105.0], [15.5, 105.0], [15.6, 105.0], [15.7, 106.0], [15.8, 106.0], [15.9, 106.0], [16.0, 106.0], [16.1, 106.0], [16.2, 107.0], [16.3, 107.0], [16.4, 107.0], [16.5, 107.0], [16.6, 107.0], [16.7, 107.0], [16.8, 107.0], [16.9, 108.0], [17.0, 108.0], [17.1, 108.0], [17.2, 108.0], [17.3, 108.0], [17.4, 108.0], [17.5, 108.0], [17.6, 109.0], [17.7, 109.0], [17.8, 109.0], [17.9, 109.0], [18.0, 109.0], [18.1, 109.0], [18.2, 109.0], [18.3, 110.0], [18.4, 110.0], [18.5, 110.0], [18.6, 110.0], [18.7, 110.0], [18.8, 110.0], [18.9, 110.0], [19.0, 110.0], [19.1, 110.0], [19.2, 110.0], [19.3, 111.0], [19.4, 111.0], [19.5, 111.0], [19.6, 111.0], [19.7, 111.0], [19.8, 111.0], [19.9, 111.0], [20.0, 111.0], [20.1, 111.0], [20.2, 112.0], [20.3, 112.0], [20.4, 112.0], [20.5, 112.0], [20.6, 112.0], [20.7, 112.0], [20.8, 112.0], [20.9, 113.0], [21.0, 113.0], [21.1, 113.0], [21.2, 113.0], [21.3, 113.0], [21.4, 113.0], [21.5, 114.0], [21.6, 114.0], [21.7, 114.0], [21.8, 114.0], [21.9, 114.0], [22.0, 114.0], [22.1, 115.0], [22.2, 115.0], [22.3, 115.0], [22.4, 115.0], [22.5, 115.0], [22.6, 115.0], [22.7, 115.0], [22.8, 116.0], [22.9, 116.0], [23.0, 116.0], [23.1, 116.0], [23.2, 116.0], [23.3, 116.0], [23.4, 116.0], [23.5, 116.0], [23.6, 116.0], [23.7, 117.0], [23.8, 117.0], [23.9, 117.0], [24.0, 117.0], [24.1, 117.0], [24.2, 117.0], [24.3, 117.0], [24.4, 117.0], [24.5, 117.0], [24.6, 118.0], [24.7, 118.0], [24.8, 118.0], [24.9, 118.0], [25.0, 118.0], [25.1, 118.0], [25.2, 118.0], [25.3, 118.0], [25.4, 119.0], [25.5, 119.0], [25.6, 119.0], [25.7, 119.0], [25.8, 119.0], [25.9, 119.0], [26.0, 119.0], [26.1, 119.0], [26.2, 120.0], [26.3, 120.0], [26.4, 120.0], [26.5, 120.0], [26.6, 120.0], [26.7, 120.0], [26.8, 120.0], [26.9, 120.0], [27.0, 121.0], [27.1, 121.0], [27.2, 121.0], [27.3, 121.0], [27.4, 121.0], [27.5, 121.0], [27.6, 121.0], [27.7, 121.0], [27.8, 122.0], [27.9, 122.0], [28.0, 122.0], [28.1, 122.0], [28.2, 122.0], [28.3, 122.0], [28.4, 122.0], [28.5, 122.0], [28.6, 122.0], [28.7, 122.0], [28.8, 123.0], [28.9, 123.0], [29.0, 123.0], [29.1, 123.0], [29.2, 123.0], [29.3, 123.0], [29.4, 123.0], [29.5, 123.0], [29.6, 124.0], [29.7, 124.0], [29.8, 124.0], [29.9, 124.0], [30.0, 124.0], [30.1, 124.0], [30.2, 124.0], [30.3, 124.0], [30.4, 125.0], [30.5, 125.0], [30.6, 125.0], [30.7, 125.0], [30.8, 125.0], [30.9, 125.0], [31.0, 125.0], [31.1, 125.0], [31.2, 125.0], [31.3, 125.0], [31.4, 125.0], [31.5, 125.0], [31.6, 126.0], [31.7, 126.0], [31.8, 126.0], [31.9, 126.0], [32.0, 126.0], [32.1, 126.0], [32.2, 126.0], [32.3, 126.0], [32.4, 126.0], [32.5, 126.0], [32.6, 126.0], [32.7, 126.0], [32.8, 126.0], [32.9, 127.0], [33.0, 127.0], [33.1, 127.0], [33.2, 127.0], [33.3, 127.0], [33.4, 127.0], [33.5, 127.0], [33.6, 127.0], [33.7, 127.0], [33.8, 127.0], [33.9, 127.0], [34.0, 127.0], [34.1, 127.0], [34.2, 127.0], [34.3, 128.0], [34.4, 128.0], [34.5, 128.0], [34.6, 128.0], [34.7, 128.0], [34.8, 128.0], [34.9, 128.0], [35.0, 128.0], [35.1, 128.0], [35.2, 128.0], [35.3, 128.0], [35.4, 129.0], [35.5, 129.0], [35.6, 129.0], [35.7, 129.0], [35.8, 129.0], [35.9, 129.0], [36.0, 129.0], [36.1, 129.0], [36.2, 130.0], [36.3, 130.0], [36.4, 130.0], [36.5, 130.0], [36.6, 130.0], [36.7, 130.0], [36.8, 130.0], [36.9, 130.0], [37.0, 130.0], [37.1, 130.0], [37.2, 130.0], [37.3, 130.0], [37.4, 131.0], [37.5, 131.0], [37.6, 131.0], [37.7, 131.0], [37.8, 131.0], [37.9, 131.0], [38.0, 131.0], [38.1, 131.0], [38.2, 131.0], [38.3, 131.0], [38.4, 131.0], [38.5, 131.0], [38.6, 131.0], [38.7, 131.0], [38.8, 131.0], [38.9, 132.0], [39.0, 132.0], [39.1, 132.0], [39.2, 132.0], [39.3, 132.0], [39.4, 132.0], [39.5, 132.0], [39.6, 132.0], [39.7, 132.0], [39.8, 132.0], [39.9, 132.0], [40.0, 133.0], [40.1, 133.0], [40.2, 133.0], [40.3, 133.0], [40.4, 133.0], [40.5, 133.0], [40.6, 133.0], [40.7, 133.0], [40.8, 133.0], [40.9, 134.0], [41.0, 134.0], [41.1, 134.0], [41.2, 134.0], [41.3, 134.0], [41.4, 134.0], [41.5, 134.0], [41.6, 134.0], [41.7, 135.0], [41.8, 135.0], [41.9, 135.0], [42.0, 135.0], [42.1, 135.0], [42.2, 135.0], [42.3, 135.0], [42.4, 135.0], [42.5, 136.0], [42.6, 136.0], [42.7, 136.0], [42.8, 136.0], [42.9, 136.0], [43.0, 136.0], [43.1, 136.0], [43.2, 136.0], [43.3, 136.0], [43.4, 136.0], [43.5, 137.0], [43.6, 137.0], [43.7, 137.0], [43.8, 137.0], [43.9, 137.0], [44.0, 137.0], [44.1, 137.0], [44.2, 137.0], [44.3, 137.0], [44.4, 138.0], [44.5, 138.0], [44.6, 138.0], [44.7, 138.0], [44.8, 138.0], [44.9, 138.0], [45.0, 138.0], [45.1, 138.0], [45.2, 139.0], [45.3, 139.0], [45.4, 139.0], [45.5, 139.0], [45.6, 139.0], [45.7, 139.0], [45.8, 139.0], [45.9, 140.0], [46.0, 140.0], [46.1, 140.0], [46.2, 140.0], [46.3, 140.0], [46.4, 140.0], [46.5, 140.0], [46.6, 140.0], [46.7, 140.0], [46.8, 141.0], [46.9, 141.0], [47.0, 141.0], [47.1, 141.0], [47.2, 141.0], [47.3, 141.0], [47.4, 142.0], [47.5, 142.0], [47.6, 142.0], [47.7, 142.0], [47.8, 143.0], [47.9, 143.0], [48.0, 143.0], [48.1, 143.0], [48.2, 143.0], [48.3, 143.0], [48.4, 144.0], [48.5, 144.0], [48.6, 144.0], [48.7, 144.0], [48.8, 144.0], [48.9, 145.0], [49.0, 145.0], [49.1, 145.0], [49.2, 145.0], [49.3, 146.0], [49.4, 146.0], [49.5, 146.0], [49.6, 146.0], [49.7, 146.0], [49.8, 147.0], [49.9, 147.0], [50.0, 147.0], [50.1, 148.0], [50.2, 148.0], [50.3, 148.0], [50.4, 149.0], [50.5, 149.0], [50.6, 149.0], [50.7, 150.0], [50.8, 150.0], [50.9, 151.0], [51.0, 151.0], [51.1, 151.0], [51.2, 152.0], [51.3, 152.0], [51.4, 152.0], [51.5, 153.0], [51.6, 153.0], [51.7, 153.0], [51.8, 153.0], [51.9, 153.0], [52.0, 153.0], [52.1, 154.0], [52.2, 154.0], [52.3, 154.0], [52.4, 154.0], [52.5, 154.0], [52.6, 154.0], [52.7, 155.0], [52.8, 155.0], [52.9, 155.0], [53.0, 156.0], [53.1, 156.0], [53.2, 157.0], [53.3, 157.0], [53.4, 158.0], [53.5, 158.0], [53.6, 159.0], [53.7, 159.0], [53.8, 159.0], [53.9, 160.0], [54.0, 160.0], [54.1, 160.0], [54.2, 161.0], [54.3, 162.0], [54.4, 162.0], [54.5, 163.0], [54.6, 163.0], [54.7, 164.0], [54.8, 165.0], [54.9, 166.0], [55.0, 168.0], [55.1, 168.0], [55.2, 168.0], [55.3, 169.0], [55.4, 169.0], [55.5, 170.0], [55.6, 172.0], [55.7, 173.0], [55.8, 174.0], [55.9, 175.0], [56.0, 176.0], [56.1, 177.0], [56.2, 178.0], [56.3, 179.0], [56.4, 180.0], [56.5, 181.0], [56.6, 181.0], [56.7, 183.0], [56.8, 187.0], [56.9, 190.0], [57.0, 192.0], [57.1, 193.0], [57.2, 194.0], [57.3, 194.0], [57.4, 195.0], [57.5, 196.0], [57.6, 196.0], [57.7, 197.0], [57.8, 197.0], [57.9, 199.0], [58.0, 199.0], [58.1, 200.0], [58.2, 203.0], [58.3, 204.0], [58.4, 205.0], [58.5, 205.0], [58.6, 206.0], [58.7, 209.0], [58.8, 210.0], [58.9, 211.0], [59.0, 213.0], [59.1, 214.0], [59.2, 215.0], [59.3, 216.0], [59.4, 219.0], [59.5, 220.0], [59.6, 222.0], [59.7, 223.0], [59.8, 223.0], [59.9, 224.0], [60.0, 225.0], [60.1, 226.0], [60.2, 226.0], [60.3, 227.0], [60.4, 230.0], [60.5, 231.0], [60.6, 232.0], [60.7, 233.0], [60.8, 233.0], [60.9, 234.0], [61.0, 235.0], [61.1, 236.0], [61.2, 240.0], [61.3, 242.0], [61.4, 243.0], [61.5, 244.0], [61.6, 246.0], [61.7, 247.0], [61.8, 249.0], [61.9, 253.0], [62.0, 307.0], [62.1, 322.0], [62.2, 333.0], [62.3, 357.0], [62.4, 446.0], [62.5, 504.0], [62.6, 515.0], [62.7, 531.0], [62.8, 562.0], [62.9, 603.0], [63.0, 661.0], [63.1, 701.0], [63.2, 798.0], [63.3, 859.0], [63.4, 895.0], [63.5, 961.0], [63.6, 1001.0], [63.7, 1036.0], [63.8, 1080.0], [63.9, 1123.0], [64.0, 1183.0], [64.1, 1220.0], [64.2, 1373.0], [64.3, 1408.0], [64.4, 1439.0], [64.5, 1481.0], [64.6, 1507.0], [64.7, 1564.0], [64.8, 1577.0], [64.9, 1594.0], [65.0, 1620.0], [65.1, 1653.0], [65.2, 1712.0], [65.3, 1759.0], [65.4, 1885.0], [65.5, 1970.0], [65.6, 2017.0], [65.7, 2047.0], [65.8, 2076.0], [65.9, 2117.0], [66.0, 2155.0], [66.1, 2173.0], [66.2, 2202.0], [66.3, 2223.0], [66.4, 2264.0], [66.5, 2277.0], [66.6, 2278.0], [66.7, 2284.0], [66.8, 2303.0], [66.9, 2321.0], [67.0, 2335.0], [67.1, 2344.0], [67.2, 2350.0], [67.3, 2355.0], [67.4, 2402.0], [67.5, 2477.0], [67.6, 2539.0], [67.7, 2592.0], [67.8, 2632.0], [67.9, 2659.0], [68.0, 2690.0], [68.1, 2771.0], [68.2, 2804.0], [68.3, 2824.0], [68.4, 2872.0], [68.5, 2897.0], [68.6, 2899.0], [68.7, 2929.0], [68.8, 2965.0], [68.9, 3024.0], [69.0, 3070.0], [69.1, 3161.0], [69.2, 3256.0], [69.3, 3387.0], [69.4, 3394.0], [69.5, 3468.0], [69.6, 3544.0], [69.7, 3630.0], [69.8, 3672.0], [69.9, 3810.0], [70.0, 3872.0], [70.1, 3945.0], [70.2, 4016.0], [70.3, 4163.0], [70.4, 4196.0], [70.5, 4329.0], [70.6, 4385.0], [70.7, 4413.0], [70.8, 4442.0], [70.9, 4478.0], [71.0, 4535.0], [71.1, 4622.0], [71.2, 4686.0], [71.3, 4688.0], [71.4, 4807.0], [71.5, 4886.0], [71.6, 4985.0], [71.7, 4987.0], [71.8, 5001.0], [71.9, 5009.0], [72.0, 5010.0], [72.1, 5025.0], [72.2, 5122.0], [72.3, 5194.0], [72.4, 5195.0], [72.5, 5262.0], [72.6, 5291.0], [72.7, 5463.0], [72.8, 5494.0], [72.9, 5514.0], [73.0, 5538.0], [73.1, 5562.0], [73.2, 5570.0], [73.3, 5586.0], [73.4, 5741.0], [73.5, 5785.0], [73.6, 5918.0], [73.7, 5974.0], [73.8, 6010.0], [73.9, 6169.0], [74.0, 6207.0], [74.1, 6290.0], [74.2, 6363.0], [74.3, 6419.0], [74.4, 6425.0], [74.5, 6432.0], [74.6, 6588.0], [74.7, 6591.0], [74.8, 6619.0], [74.9, 6694.0], [75.0, 6736.0], [75.1, 6823.0], [75.2, 6908.0], [75.3, 7008.0], [75.4, 7012.0], [75.5, 7186.0], [75.6, 7260.0], [75.7, 7287.0], [75.8, 7304.0], [75.9, 7404.0], [76.0, 7407.0], [76.1, 7412.0], [76.2, 7447.0], [76.3, 7509.0], [76.4, 7556.0], [76.5, 7596.0], [76.6, 7639.0], [76.7, 7660.0], [76.8, 7690.0], [76.9, 7715.0], [77.0, 7723.0], [77.1, 7748.0], [77.2, 7781.0], [77.3, 7798.0], [77.4, 7837.0], [77.5, 7866.0], [77.6, 7903.0], [77.7, 7949.0], [77.8, 7965.0], [77.9, 8058.0], [78.0, 8092.0], [78.1, 8102.0], [78.2, 8106.0], [78.3, 8150.0], [78.4, 8193.0], [78.5, 8211.0], [78.6, 8215.0], [78.7, 8236.0], [78.8, 8265.0], [78.9, 8408.0], [79.0, 8411.0], [79.1, 8448.0], [79.2, 8503.0], [79.3, 8522.0], [79.4, 8540.0], [79.5, 8567.0], [79.6, 8657.0], [79.7, 8680.0], [79.8, 8688.0], [79.9, 8695.0], [80.0, 8699.0], [80.1, 8704.0], [80.2, 8709.0], [80.3, 8715.0], [80.4, 8735.0], [80.5, 8767.0], [80.6, 8824.0], [80.7, 8827.0], [80.8, 8835.0], [80.9, 8860.0], [81.0, 8876.0], [81.1, 8922.0], [81.2, 8940.0], [81.3, 8952.0], [81.4, 8959.0], [81.5, 8966.0], [81.6, 9006.0], [81.7, 9011.0], [81.8, 9045.0], [81.9, 9089.0], [82.0, 9130.0], [82.1, 9405.0], [82.2, 9550.0], [82.3, 9655.0], [82.4, 9698.0], [82.5, 9723.0], [82.6, 9733.0], [82.7, 9737.0], [82.8, 9805.0], [82.9, 9880.0], [83.0, 9966.0], [83.1, 10015.0], [83.2, 10028.0], [83.3, 10072.0], [83.4, 10146.0], [83.5, 10170.0], [83.6, 10263.0], [83.7, 10265.0], [83.8, 10365.0], [83.9, 10506.0], [84.0, 10594.0], [84.1, 10607.0], [84.2, 10655.0], [84.3, 10657.0], [84.4, 10742.0], [84.5, 10751.0], [84.6, 10759.0], [84.7, 10806.0], [84.8, 10848.0], [84.9, 10858.0], [85.0, 10859.0], [85.1, 10868.0], [85.2, 10880.0], [85.3, 10962.0], [85.4, 11049.0], [85.5, 11097.0], [85.6, 11194.0], [85.7, 11252.0], [85.8, 11318.0], [85.9, 11333.0], [86.0, 11411.0], [86.1, 11437.0], [86.2, 11493.0], [86.3, 11516.0], [86.4, 11517.0], [86.5, 11617.0], [86.6, 11739.0], [86.7, 11807.0], [86.8, 11925.0], [86.9, 11976.0], [87.0, 12279.0], [87.1, 12470.0], [87.2, 12786.0], [87.3, 13012.0], [87.4, 13107.0], [87.5, 13157.0], [87.6, 13438.0], [87.7, 13680.0], [87.8, 13690.0], [87.9, 13712.0], [88.0, 13729.0], [88.1, 13754.0], [88.2, 13784.0], [88.3, 13785.0], [88.4, 14048.0], [88.5, 14227.0], [88.6, 14257.0], [88.7, 14299.0], [88.8, 14327.0], [88.9, 14778.0], [89.0, 14835.0], [89.1, 14910.0], [89.2, 14913.0], [89.3, 14924.0], [89.4, 14966.0], [89.5, 14989.0], [89.6, 15375.0], [89.7, 15762.0], [89.8, 16211.0], [89.9, 16299.0], [90.0, 16318.0], [90.1, 16319.0], [90.2, 16420.0], [90.3, 16423.0], [90.4, 16443.0], [90.5, 16445.0], [90.6, 16798.0], [90.7, 16848.0], [90.8, 16856.0], [90.9, 16870.0], [91.0, 16897.0], [91.1, 16899.0], [91.2, 17181.0], [91.3, 17241.0], [91.4, 17296.0], [91.5, 17299.0], [91.6, 17325.0], [91.7, 17330.0], [91.8, 17349.0], [91.9, 17422.0], [92.0, 18263.0], [92.1, 18618.0], [92.2, 18630.0], [92.3, 18651.0], [92.4, 18715.0], [92.5, 19189.0], [92.6, 19407.0], [92.7, 20474.0], [92.8, 21176.0], [92.9, 21916.0], [93.0, 21965.0], [93.1, 22947.0], [93.2, 24621.0], [93.3, 25334.0], [93.4, 26227.0], [93.5, 26473.0], [93.6, 27514.0], [93.7, 27982.0], [93.8, 28067.0], [93.9, 28104.0], [94.0, 29109.0], [94.1, 29858.0], [94.2, 31803.0], [94.3, 32251.0], [94.4, 32500.0], [94.5, 33200.0], [94.6, 34285.0], [94.7, 36584.0], [94.8, 37780.0], [94.9, 38727.0], [95.0, 39337.0], [95.1, 39833.0], [95.2, 41339.0], [95.3, 43904.0], [95.4, 46695.0], [95.5, 46722.0], [95.6, 48888.0], [95.7, 49626.0], [95.8, 50561.0], [95.9, 52004.0], [96.0, 53220.0], [96.1, 58603.0], [96.2, 63413.0], [96.3, 63437.0], [96.4, 63558.0], [96.5, 63787.0], [96.6, 63805.0], [96.7, 64354.0], [96.8, 65747.0], [96.9, 66390.0], [97.0, 66775.0], [97.1, 69374.0], [97.2, 73740.0], [97.3, 75569.0], [97.4, 75576.0], [97.5, 76910.0], [97.6, 79529.0], [97.7, 82311.0], [97.8, 93344.0], [97.9, 100016.0], [98.0, 100020.0], [98.1, 100025.0], [98.2, 100031.0], [98.3, 100049.0], [98.4, 100086.0], [98.5, 100102.0], [98.6, 100116.0], [98.7, 100131.0], [98.8, 100134.0], [98.9, 100141.0], [99.0, 100151.0], [99.1, 100164.0], [99.2, 101047.0], [99.3, 101073.0], [99.4, 127497.0], [99.5, 130245.0], [99.6, 130594.0], [99.7, 130983.0], [99.8, 132510.0], [99.9, 133258.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 27156.0, "series": [{"data": [[0.0, 7800.0], [132000.0, 2.0], [160800.0, 2.0], [68300.0, 1.0], [66700.0, 9.0], [71500.0, 2.0], [73100.0, 6.0], [69900.0, 1.0], [77900.0, 22.0], [79500.0, 8.0], [81100.0, 2.0], [85900.0, 2.0], [87500.0, 2.0], [92300.0, 2.0], [100300.0, 2.0], [130700.0, 8.0], [127500.0, 8.0], [100.0, 27156.0], [131500.0, 1.0], [32900.0, 7.0], [33700.0, 2.0], [34500.0, 6.0], [37700.0, 62.0], [39300.0, 33.0], [163500.0, 1.0], [40900.0, 2.0], [40100.0, 3.0], [43300.0, 2.0], [45700.0, 22.0], [48100.0, 11.0], [48900.0, 5.0], [47300.0, 2.0], [49700.0, 11.0], [50500.0, 46.0], [200.0, 2382.0], [51300.0, 1.0], [52100.0, 5.0], [54500.0, 13.0], [56100.0, 2.0], [58500.0, 1.0], [60900.0, 3.0], [63300.0, 26.0], [62500.0, 2.0], [64900.0, 1.0], [65800.0, 8.0], [67400.0, 1.0], [70600.0, 1.0], [72200.0, 1.0], [300.0, 248.0], [77000.0, 1.0], [80200.0, 3.0], [86600.0, 2.0], [88200.0, 2.0], [91400.0, 1.0], [101000.0, 135.0], [99400.0, 2.0], [400.0, 68.0], [500.0, 246.0], [132400.0, 34.0], [135600.0, 1.0], [600.0, 120.0], [700.0, 67.0], [800.0, 117.0], [900.0, 115.0], [1000.0, 152.0], [1100.0, 109.0], [1200.0, 71.0], [1300.0, 59.0], [1400.0, 211.0], [1500.0, 194.0], [1600.0, 149.0], [1700.0, 100.0], [1800.0, 70.0], [1900.0, 71.0], [2000.0, 182.0], [2100.0, 196.0], [2300.0, 356.0], [2200.0, 342.0], [2400.0, 128.0], [2500.0, 100.0], [2600.0, 182.0], [2700.0, 93.0], [2800.0, 259.0], [2900.0, 148.0], [3000.0, 134.0], [3100.0, 48.0], [3200.0, 55.0], [3300.0, 98.0], [3400.0, 85.0], [3500.0, 53.0], [3600.0, 124.0], [3700.0, 27.0], [3800.0, 89.0], [3900.0, 87.0], [4000.0, 42.0], [4200.0, 41.0], [4100.0, 90.0], [68100.0, 1.0], [4300.0, 90.0], [66500.0, 42.0], [4600.0, 154.0], [4500.0, 70.0], [4400.0, 204.0], [69700.0, 1.0], [4800.0, 74.0], [4700.0, 37.0], [74500.0, 1.0], [77700.0, 1.0], [4900.0, 170.0], [5000.0, 235.0], [5100.0, 132.0], [5300.0, 26.0], [5200.0, 125.0], [84100.0, 1.0], [5400.0, 98.0], [5500.0, 325.0], [5600.0, 2.0], [5800.0, 49.0], [5700.0, 91.0], [95300.0, 3.0], [5900.0, 98.0], [6000.0, 52.0], [6100.0, 74.0], [96900.0, 1.0], [100100.0, 395.0], [6300.0, 72.0], [6200.0, 104.0], [6500.0, 135.0], [6600.0, 90.0], [6400.0, 168.0], [6700.0, 96.0], [6900.0, 78.0], [6800.0, 48.0], [7100.0, 25.0], [7000.0, 110.0], [7200.0, 151.0], [7300.0, 61.0], [7400.0, 251.0], [7500.0, 139.0], [7600.0, 209.0], [7700.0, 279.0], [7800.0, 174.0], [7900.0, 156.0], [8100.0, 256.0], [8000.0, 100.0], [130500.0, 36.0], [127300.0, 2.0], [8600.0, 278.0], [8200.0, 246.0], [8400.0, 195.0], [9000.0, 194.0], [9200.0, 17.0], [8800.0, 290.0], [143800.0, 1.0], [9600.0, 93.0], [9400.0, 33.0], [10000.0, 147.0], [9800.0, 92.0], [10200.0, 145.0], [159800.0, 1.0], [10600.0, 195.0], [10400.0, 45.0], [11000.0, 79.0], [10800.0, 384.0], [11200.0, 92.0], [11600.0, 87.0], [11400.0, 144.0], [11800.0, 65.0], [12000.0, 26.0], [12200.0, 36.0], [12600.0, 6.0], [12400.0, 15.0], [13000.0, 69.0], [12800.0, 23.0], [13200.0, 4.0], [13600.0, 119.0], [13400.0, 42.0], [13800.0, 9.0], [14000.0, 36.0], [14200.0, 160.0], [14600.0, 10.0], [14800.0, 69.0], [14400.0, 4.0], [15200.0, 6.0], [15000.0, 26.0], [15400.0, 8.0], [15600.0, 10.0], [15800.0, 2.0], [16000.0, 25.0], [16200.0, 78.0], [16800.0, 302.0], [17200.0, 156.0], [16400.0, 220.0], [17600.0, 12.0], [18000.0, 13.0], [18400.0, 3.0], [19200.0, 49.0], [18800.0, 1.0], [19600.0, 4.0], [20400.0, 40.0], [20000.0, 2.0], [21200.0, 6.0], [20800.0, 2.0], [21600.0, 16.0], [22400.0, 1.0], [22000.0, 5.0], [22800.0, 5.0], [23200.0, 3.0], [25200.0, 32.0], [24800.0, 3.0], [26400.0, 2.0], [25600.0, 1.0], [27600.0, 9.0], [27200.0, 4.0], [26800.0, 1.0], [28000.0, 103.0], [29600.0, 4.0], [29200.0, 37.0], [30000.0, 11.0], [30400.0, 2.0], [30800.0, 2.0], [31600.0, 2.0], [31200.0, 2.0], [32400.0, 2.0], [32800.0, 3.0], [33600.0, 2.0], [36800.0, 5.0], [35200.0, 2.0], [37600.0, 1.0], [40800.0, 2.0], [39200.0, 7.0], [41600.0, 7.0], [48800.0, 36.0], [49600.0, 53.0], [50400.0, 2.0], [51200.0, 2.0], [52000.0, 33.0], [52800.0, 1.0], [53600.0, 2.0], [54400.0, 2.0], [57600.0, 2.0], [58400.0, 1.0], [64800.0, 1.0], [64000.0, 3.0], [67200.0, 7.0], [65600.0, 3.0], [68800.0, 1.0], [73600.0, 9.0], [72000.0, 1.0], [76800.0, 32.0], [75200.0, 1.0], [78400.0, 12.0], [80000.0, 4.0], [84800.0, 2.0], [86400.0, 1.0], [97600.0, 2.0], [99200.0, 3.0], [100800.0, 1.0], [144900.0, 1.0], [68700.0, 2.0], [73500.0, 1.0], [71900.0, 2.0], [75100.0, 1.0], [83100.0, 1.0], [97500.0, 2.0], [94300.0, 2.0], [95900.0, 1.0], [99100.0, 1.0], [111900.0, 1.0], [133000.0, 2.0], [161800.0, 1.0], [33100.0, 31.0], [34700.0, 3.0], [35500.0, 6.0], [36300.0, 2.0], [38700.0, 51.0], [40300.0, 2.0], [41100.0, 1.0], [42700.0, 2.0], [44300.0, 2.0], [46700.0, 53.0], [49100.0, 2.0], [47500.0, 2.0], [50700.0, 11.0], [52300.0, 2.0], [53100.0, 10.0], [55500.0, 2.0], [61100.0, 1.0], [59500.0, 2.0], [62700.0, 4.0], [65100.0, 4.0], [63500.0, 86.0], [64300.0, 11.0], [69400.0, 2.0], [66200.0, 34.0], [67800.0, 1.0], [72600.0, 2.0], [74200.0, 2.0], [80600.0, 1.0], [79000.0, 2.0], [82200.0, 29.0], [93400.0, 1.0], [98200.0, 1.0], [104600.0, 1.0], [130200.0, 60.0], [132500.0, 10.0], [66900.0, 14.0], [68500.0, 2.0], [71700.0, 3.0], [76500.0, 1.0], [78100.0, 2.0], [81300.0, 1.0], [87700.0, 1.0], [89300.0, 2.0], [94100.0, 1.0], [97300.0, 1.0], [102100.0, 1.0], [130900.0, 52.0], [127700.0, 5.0], [139800.0, 1.0], [17300.0, 218.0], [16900.0, 13.0], [16500.0, 2.0], [18100.0, 3.0], [17700.0, 4.0], [18500.0, 30.0], [18900.0, 1.0], [19300.0, 1.0], [20100.0, 5.0], [19700.0, 1.0], [20500.0, 3.0], [20900.0, 2.0], [21300.0, 1.0], [22100.0, 4.0], [22500.0, 21.0], [21700.0, 13.0], [22900.0, 15.0], [23300.0, 2.0], [24100.0, 5.0], [23700.0, 6.0], [24900.0, 1.0], [25300.0, 6.0], [26100.0, 4.0], [26900.0, 2.0], [27300.0, 3.0], [27700.0, 3.0], [28500.0, 1.0], [28100.0, 6.0], [28900.0, 1.0], [29300.0, 1.0], [29700.0, 1.0], [30900.0, 2.0], [31300.0, 12.0], [31700.0, 4.0], [32500.0, 3.0], [32100.0, 13.0], [33800.0, 2.0], [34600.0, 8.0], [33000.0, 6.0], [35400.0, 2.0], [36200.0, 2.0], [37800.0, 7.0], [41800.0, 3.0], [41000.0, 1.0], [46600.0, 33.0], [52200.0, 1.0], [51400.0, 2.0], [54600.0, 1.0], [55400.0, 2.0], [58600.0, 2.0], [60200.0, 2.0], [63400.0, 69.0], [61800.0, 1.0], [65000.0, 3.0], [64200.0, 1.0], [66000.0, 1.0], [72400.0, 3.0], [74000.0, 4.0], [78800.0, 1.0], [82000.0, 1.0], [85200.0, 1.0], [88400.0, 1.0], [96400.0, 4.0], [133600.0, 1.0], [156900.0, 1.0], [163300.0, 13.0], [201700.0, 1.0], [69100.0, 3.0], [65900.0, 3.0], [67500.0, 1.0], [72300.0, 1.0], [75500.0, 118.0], [81900.0, 2.0], [83500.0, 2.0], [85100.0, 2.0], [96300.0, 2.0], [101100.0, 2.0], [145000.0, 1.0], [161000.0, 1.0], [133100.0, 6.0], [36500.0, 2.0], [37300.0, 2.0], [38900.0, 4.0], [39700.0, 9.0], [40500.0, 11.0], [42900.0, 2.0], [41300.0, 4.0], [44500.0, 2.0], [45300.0, 2.0], [51700.0, 1.0], [53300.0, 1.0], [56500.0, 2.0], [58900.0, 2.0], [59700.0, 3.0], [61300.0, 1.0], [60500.0, 2.0], [62900.0, 1.0], [63700.0, 64.0], [65300.0, 1.0], [64500.0, 4.0], [66600.0, 16.0], [73000.0, 2.0], [69800.0, 1.0], [74600.0, 2.0], [76200.0, 2.0], [81000.0, 2.0], [84200.0, 1.0], [90600.0, 2.0], [100200.0, 3.0], [130600.0, 4.0], [127400.0, 24.0], [162800.0, 1.0], [147700.0, 1.0], [163700.0, 3.0], [65700.0, 35.0], [68900.0, 4.0], [73700.0, 8.0], [76900.0, 14.0], [78500.0, 2.0], [83300.0, 2.0], [88100.0, 1.0], [91300.0, 2.0], [96100.0, 1.0], [129700.0, 1.0], [8700.0, 331.0], [8500.0, 217.0], [8300.0, 8.0], [9100.0, 75.0], [8900.0, 329.0], [9300.0, 7.0], [9700.0, 225.0], [9500.0, 69.0], [10100.0, 108.0], [9900.0, 94.0], [10500.0, 81.0], [10700.0, 180.0], [10300.0, 40.0], [11100.0, 70.0], [10900.0, 52.0], [11700.0, 48.0], [11300.0, 118.0], [11500.0, 140.0], [11900.0, 83.0], [12100.0, 20.0], [12700.0, 58.0], [12500.0, 9.0], [12300.0, 25.0], [13300.0, 2.0], [13100.0, 84.0], [12900.0, 5.0], [13500.0, 21.0], [13700.0, 304.0], [14300.0, 93.0], [13900.0, 6.0], [14100.0, 2.0], [14700.0, 26.0], [14500.0, 2.0], [14900.0, 288.0], [15300.0, 24.0], [15100.0, 14.0], [15700.0, 11.0], [15500.0, 13.0], [16300.0, 174.0], [15900.0, 11.0], [16100.0, 3.0], [16600.0, 4.0], [17400.0, 7.0], [17000.0, 3.0], [18200.0, 17.0], [17800.0, 3.0], [18600.0, 164.0], [19400.0, 20.0], [19000.0, 3.0], [20200.0, 2.0], [19800.0, 1.0], [20600.0, 12.0], [21000.0, 8.0], [21800.0, 1.0], [22200.0, 1.0], [22600.0, 3.0], [23000.0, 3.0], [23800.0, 2.0], [24600.0, 11.0], [25000.0, 1.0], [26600.0, 9.0], [26200.0, 108.0], [27000.0, 10.0], [27400.0, 2.0], [27800.0, 1.0], [28200.0, 6.0], [28600.0, 6.0], [29000.0, 4.0], [29400.0, 6.0], [29800.0, 5.0], [30200.0, 4.0], [30600.0, 2.0], [31000.0, 2.0], [31400.0, 1.0], [31800.0, 4.0], [32600.0, 4.0], [32200.0, 66.0], [34800.0, 2.0], [33200.0, 32.0], [38800.0, 4.0], [37200.0, 8.0], [39600.0, 5.0], [40400.0, 16.0], [46800.0, 2.0], [46000.0, 2.0], [48400.0, 2.0], [50800.0, 1.0], [53200.0, 22.0], [52400.0, 2.0], [56400.0, 2.0], [61200.0, 2.0], [62000.0, 1.0], [65200.0, 1.0], [63600.0, 1.0], [68000.0, 1.0], [76000.0, 1.0], [80800.0, 3.0], [79200.0, 1.0], [85600.0, 3.0], [87200.0, 1.0], [95200.0, 2.0], [100000.0, 362.0], [114400.0, 1.0], [132800.0, 1.0], [196800.0, 1.0], [66300.0, 2.0], [67900.0, 2.0], [72700.0, 4.0], [71100.0, 1.0], [75900.0, 1.0], [77500.0, 2.0], [82300.0, 6.0], [87100.0, 1.0], [90300.0, 2.0], [95100.0, 1.0], [134600.0, 3.0], [153800.0, 1.0], [38300.0, 2.0], [39100.0, 1.0], [40700.0, 2.0], [41500.0, 1.0], [164300.0, 1.0], [42300.0, 29.0], [43900.0, 16.0], [43100.0, 1.0], [46300.0, 2.0], [51900.0, 36.0], [53500.0, 1.0], [62300.0, 3.0], [61500.0, 2.0], [64700.0, 1.0], [65500.0, 12.0], [63900.0, 20.0], [67000.0, 3.0], [73400.0, 1.0], [70200.0, 1.0], [76600.0, 2.0], [75000.0, 1.0], [81400.0, 2.0], [78200.0, 1.0], [79800.0, 1.0], [84600.0, 3.0], [83000.0, 1.0], [89400.0, 2.0], [92600.0, 2.0], [97400.0, 2.0], [100600.0, 3.0], [110200.0, 1.0], [131000.0, 3.0], [133200.0, 62.0], [158800.0, 2.0], [69300.0, 1.0], [72500.0, 2.0], [70900.0, 1.0], [82100.0, 1.0], [93300.0, 3.0], [130100.0, 13.0], [163800.0, 1.0], [16700.0, 23.0], [17100.0, 87.0], [18300.0, 13.0], [17900.0, 7.0], [17500.0, 1.0], [18700.0, 69.0], [19100.0, 22.0], [19500.0, 5.0], [19900.0, 10.0], [21100.0, 15.0], [21500.0, 7.0], [21900.0, 71.0], [23100.0, 20.0], [22700.0, 5.0], [23900.0, 11.0], [25100.0, 15.0], [25900.0, 2.0], [27500.0, 17.0], [27100.0, 26.0], [27900.0, 49.0], [28300.0, 13.0], [28700.0, 24.0], [29100.0, 8.0], [29500.0, 3.0], [29900.0, 8.0], [30300.0, 1.0], [32300.0, 36.0], [32700.0, 5.0], [34200.0, 46.0], [33400.0, 3.0], [35800.0, 2.0], [39800.0, 57.0], [42200.0, 1.0], [47000.0, 2.0], [50200.0, 2.0], [51000.0, 1.0], [49400.0, 2.0], [51800.0, 2.0], [52600.0, 2.0], [55000.0, 1.0], [53400.0, 2.0], [58200.0, 2.0], [57400.0, 2.0], [59800.0, 2.0], [63800.0, 47.0], [64600.0, 2.0], [65400.0, 5.0], [66800.0, 7.0], [68400.0, 1.0], [70000.0, 2.0], [73200.0, 2.0], [78000.0, 6.0], [79600.0, 2.0], [81200.0, 2.0], [87600.0, 5.0], [97200.0, 1.0], [102000.0, 1.0], [100400.0, 1.0], [129200.0, 1.0], [130800.0, 4.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 201700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 115.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 37655.0, "series": [{"data": [[0.0, 37655.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1268.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 21220.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 115.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 239.45263157894712, "minX": 1.68288264E12, "maxY": 3000.0, "series": [{"data": [[1.68288288E12, 2989.050960287704], [1.68288294E12, 1483.743914807301], [1.68288276E12, 3000.0], [1.68288282E12, 3000.0], [1.68288264E12, 3000.0], [1.6828827E12, 3000.0], [1.682883E12, 239.45263157894712]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.682883E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 29.0, "minX": 6.0, "maxY": 139895.0, "series": [{"data": [[6.0, 100032.0], [7.0, 100031.33333333333], [9.0, 100031.0], [11.0, 100031.0], [13.0, 100030.0], [14.0, 100029.0], [15.0, 100028.0], [17.0, 100026.0], [19.0, 100026.0], [20.0, 100025.0], [21.0, 100025.0], [22.0, 100024.0], [23.0, 100024.0], [27.0, 100023.0], [30.0, 100020.0], [31.0, 100019.0], [33.0, 100018.0], [37.0, 100018.0], [36.0, 100018.0], [40.0, 100017.0], [43.0, 100016.0], [42.0, 100017.0], [45.0, 100157.0], [44.0, 100016.0], [47.0, 100152.0], [49.0, 100151.5], [51.0, 100146.0], [50.0, 100151.5], [53.0, 100145.0], [57.0, 100141.0], [56.0, 100144.0], [59.0, 100114.0], [58.0, 100141.0], [61.0, 100057.0], [60.0, 100100.0], [62.0, 100042.0], [67.0, 100032.0], [65.0, 100033.0], [69.0, 100027.0], [68.0, 100030.0], [73.0, 100024.0], [72.0, 100026.0], [86.0, 100022.0], [91.0, 100020.25], [90.0, 100020.0], [89.0, 100021.66666666667], [88.0, 100021.5], [95.0, 100012.0], [94.0, 100019.25], [93.0, 100020.0], [99.0, 100008.5], [97.0, 100010.0], [103.0, 100163.0], [100.0, 100164.0], [107.0, 100152.0], [106.0, 100161.4], [110.0, 100151.0], [114.0, 100151.0], [119.0, 100041.0], [118.0, 100059.0], [117.0, 100149.85714285714], [123.0, 100039.33333333333], [120.0, 100040.0], [127.0, 100030.0], [125.0, 100032.0], [124.0, 100033.0], [135.0, 100030.0], [134.0, 100030.0], [143.0, 100028.0], [142.0, 100028.5], [140.0, 100029.0], [139.0, 100029.0], [138.0, 100029.0], [136.0, 100029.0], [151.0, 100024.0], [149.0, 100025.0], [145.0, 100028.33333333333], [144.0, 100028.0], [159.0, 100022.5], [157.0, 100023.0], [156.0, 100023.0], [154.0, 100024.0], [153.0, 100024.5], [167.0, 100157.0], [166.0, 100164.0], [165.0, 100010.0], [164.0, 100021.33333333333], [163.0, 100021.0], [161.0, 100022.0], [175.0, 100145.5], [174.0, 100145.0], [168.0, 100150.0], [182.0, 100144.0], [181.0, 100144.0], [178.0, 100145.5], [177.0, 100145.0], [176.0, 100145.0], [189.0, 100140.0], [187.0, 100141.0], [185.0, 100141.0], [184.0, 100142.0], [199.0, 100138.0], [198.0, 100138.75], [194.0, 100139.0], [193.0, 100140.0], [207.0, 100135.0], [203.0, 100136.0], [202.0, 100136.0], [201.0, 100137.0], [200.0, 100137.0], [212.0, 100133.0], [210.0, 100134.0], [223.0, 100126.0], [222.0, 100125.0], [221.0, 100126.0], [220.0, 100132.0], [218.0, 100132.0], [217.0, 100133.0], [231.0, 100117.0], [230.0, 100118.0], [228.0, 100118.0], [227.0, 100122.0], [226.0, 100124.0], [239.0, 100117.0], [237.0, 100117.0], [236.0, 100117.0], [244.0, 100115.0], [243.0, 100115.75], [241.0, 100116.0], [255.0, 100083.0], [254.0, 100086.0], [252.0, 100089.0], [251.0, 100091.0], [249.0, 100102.0], [270.0, 100136.0], [267.0, 100136.0], [263.0, 100137.0], [261.0, 100137.0], [256.0, 97451.0], [286.0, 100125.0], [287.0, 100124.0], [285.0, 100125.0], [284.0, 100126.0], [282.0, 100128.0], [281.0, 100130.0], [280.0, 100133.0], [279.0, 100133.5], [273.0, 100135.0], [272.0, 100135.0], [277.0, 100134.0], [302.0, 100045.0], [301.0, 100046.0], [299.0, 100047.0], [298.0, 100048.0], [297.0, 100058.0], [296.0, 100059.0], [295.0, 100064.0], [294.0, 100118.0], [290.0, 100121.0], [289.0, 100121.0], [288.0, 100124.0], [318.0, 100034.0], [316.0, 100036.0], [315.0, 100037.5], [313.0, 100040.0], [309.0, 100041.0], [307.0, 100043.0], [306.0, 100043.0], [304.0, 100044.0], [332.0, 100023.0], [331.0, 100024.0], [329.0, 100025.0], [328.0, 100030.0], [327.0, 100030.0], [324.0, 100031.0], [322.0, 100032.0], [320.0, 100033.0], [351.0, 100020.33333333333], [350.0, 100020.0], [349.0, 100020.66666666667], [346.0, 100022.0], [344.0, 100021.0], [343.0, 100022.0], [341.0, 100022.25], [340.0, 100022.0], [355.0, 100017.0], [366.0, 100193.5], [364.0, 100008.5], [363.0, 100009.33333333333], [362.0, 100009.0], [358.0, 100012.0], [357.0, 100013.0], [356.0, 100014.0], [354.0, 100018.0], [353.0, 100019.0], [352.0, 100020.0], [376.0, 100075.0], [383.0, 100067.25], [379.0, 100073.0], [378.0, 100073.0], [377.0, 100074.0], [372.0, 100112.0], [368.0, 100187.5], [371.0, 100180.0], [370.0, 100183.0], [369.0, 100185.0], [398.0, 95966.0], [399.0, 97380.0], [397.0, 96974.0], [396.0, 96447.0], [395.0, 97455.0], [394.0, 96444.0], [393.0, 100025.5], [391.0, 100028.0], [384.0, 100042.0], [386.0, 100031.0], [385.0, 100040.0], [390.0, 100028.5], [388.0, 100029.0], [414.0, 89306.0], [415.0, 89305.0], [413.0, 90314.0], [412.0, 90316.0], [411.0, 91324.0], [410.0, 91326.0], [409.0, 92332.0], [408.0, 92336.0], [407.0, 93342.0], [401.0, 96371.0], [400.0, 96372.0], [403.0, 95361.0], [402.0, 95362.0], [406.0, 93344.0], [405.0, 94352.0], [404.0, 94354.0], [430.0, 79815.0], [431.0, 81229.0], [429.0, 80822.0], [428.0, 80295.0], [427.0, 81303.0], [426.0, 81094.0], [425.0, 81299.0], [424.0, 84259.0], [423.0, 85266.0], [417.0, 88295.0], [416.0, 88297.0], [419.0, 87776.0], [418.0, 87287.0], [422.0, 82311.0], [421.0, 83318.0], [420.0, 83320.0], [446.0, 71738.0], [447.0, 71736.0], [445.0, 72746.0], [444.0, 72748.0], [443.0, 72213.0], [442.0, 73758.0], [441.0, 73224.0], [440.0, 73225.0], [439.0, 74233.0], [433.0, 80218.0], [432.0, 80220.0], [435.0, 79209.0], [434.0, 77796.0], [438.0, 74235.0], [437.0, 75242.0], [436.0, 78202.0], [462.0, 65566.0], [463.0, 65566.0], [461.0, 66575.0], [460.0, 66086.0], [459.0, 67584.0], [458.0, 67097.0], [457.0, 65946.0], [456.0, 65948.0], [455.0, 66956.0], [449.0, 72632.0], [448.0, 69187.0], [451.0, 69189.0], [450.0, 68977.0], [454.0, 66958.0], [453.0, 70613.0], [452.0, 68709.0], [478.0, 57490.0], [479.0, 57488.0], [477.0, 58498.0], [476.0, 58501.0], [475.0, 59507.0], [474.0, 59509.0], [473.0, 60517.0], [472.0, 60519.0], [471.0, 61527.0], [465.0, 64555.0], [464.0, 64558.0], [467.0, 63546.0], [466.0, 63548.0], [470.0, 61529.0], [469.0, 62536.0], [468.0, 62539.0], [494.0, 49415.0], [495.0, 49413.0], [493.0, 50423.0], [492.0, 50424.0], [491.0, 51433.0], [490.0, 51434.0], [489.0, 52442.0], [488.0, 52444.0], [487.0, 53451.0], [481.0, 56480.0], [480.0, 56483.0], [483.0, 55471.0], [482.0, 55472.0], [486.0, 53453.0], [485.0, 54462.0], [484.0, 54463.0], [510.0, 41339.0], [511.0, 41337.0], [509.0, 42346.0], [508.0, 42348.0], [507.0, 43356.0], [506.0, 43357.0], [505.0, 44365.0], [504.0, 44367.0], [503.0, 45375.0], [497.0, 48403.0], [496.0, 48405.0], [499.0, 47394.0], [498.0, 47396.0], [502.0, 45377.0], [501.0, 46384.0], [500.0, 46386.0], [540.0, 26196.0], [543.0, 25184.0], [529.0, 32251.0], [528.0, 32253.0], [531.0, 31242.0], [530.0, 31244.0], [533.0, 30232.0], [532.0, 30234.0], [542.0, 25186.0], [541.0, 26194.0], [539.0, 27204.0], [538.0, 27205.0], [537.0, 28213.0], [536.0, 28215.0], [527.0, 33260.0], [513.0, 40327.0], [512.0, 40329.0], [515.0, 39318.0], [514.0, 39320.0], [517.0, 38308.0], [516.0, 38310.0], [519.0, 37299.0], [518.0, 37301.0], [526.0, 33263.0], [525.0, 34270.0], [524.0, 34272.0], [523.0, 35280.0], [522.0, 35282.0], [521.0, 36289.0], [520.0, 36291.0], [535.0, 29223.0], [534.0, 29225.0], [568.0, 12061.0], [573.0, 11166.0], [575.0, 11744.5], [561.0, 16098.0], [560.0, 16099.0], [563.0, 15088.0], [562.0, 15090.0], [572.0, 11745.0], [571.0, 11167.0], [569.0, 12059.0], [559.0, 17107.0], [545.0, 24174.0], [544.0, 24176.0], [547.0, 23165.0], [546.0, 23167.0], [549.0, 22155.0], [548.0, 22157.0], [551.0, 21146.0], [550.0, 21147.0], [558.0, 17109.0], [557.0, 18117.0], [556.0, 18119.0], [555.0, 19127.0], [554.0, 19129.0], [553.0, 20136.0], [552.0, 20138.0], [567.0, 13068.0], [566.0, 13071.0], [565.0, 14078.0], [564.0, 14080.0], [606.0, 12308.0], [595.0, 12314.0], [607.0, 12307.0], [592.0, 12316.0], [594.0, 9254.0], [593.0, 12315.0], [604.0, 11730.0], [602.0, 9248.0], [600.0, 10782.0], [583.0, 11163.0], [582.0, 12319.0], [581.0, 10529.0], [578.0, 11743.0], [576.0, 12322.0], [591.0, 12316.0], [590.0, 11162.0], [589.0, 10786.5], [587.0, 12318.0], [586.0, 12318.0], [585.0, 9257.0], [584.0, 12319.0], [598.0, 12313.0], [597.0, 12313.0], [596.0, 12314.0], [635.0, 9178.0], [626.0, 9587.0], [638.0, 9176.0], [639.0, 9176.0], [625.0, 12276.0], [624.0, 10940.0], [637.0, 9177.0], [634.0, 9179.333333333334], [615.0, 12281.0], [614.0, 12284.0], [612.0, 12295.0], [611.0, 12299.0], [610.0, 12299.0], [609.0, 12300.0], [622.0, 12278.0], [621.0, 12279.0], [620.0, 12279.0], [619.0, 12279.0], [616.0, 12280.0], [631.0, 12254.0], [629.0, 12256.0], [627.0, 9586.0], [668.0, 8908.0], [671.0, 8867.0], [657.0, 9006.0], [659.0, 9003.0], [658.0, 9005.0], [661.0, 8993.0], [660.0, 8999.0], [670.0, 8889.0], [669.0, 8902.0], [667.0, 8913.0], [666.0, 8931.0], [665.0, 8942.0], [664.0, 8950.0], [655.0, 9009.0], [641.0, 9174.0], [640.0, 9175.0], [643.0, 9166.0], [642.0, 9170.0], [645.0, 9164.0], [644.0, 9164.0], [647.0, 9155.0], [646.0, 9158.0], [654.0, 9012.0], [653.0, 9013.0], [652.0, 9012.0], [650.0, 9014.0], [649.0, 9015.0], [648.0, 9016.0], [663.0, 8954.0], [662.0, 8965.0], [679.0, 8799.0], [701.0, 11628.0], [703.0, 8956.0], [700.0, 8957.5], [698.0, 11690.0], [696.0, 8958.0], [678.0, 8803.0], [677.0, 8816.0], [676.0, 8821.0], [675.0, 8837.0], [674.0, 8848.0], [673.0, 8852.0], [672.0, 8856.0], [687.0, 10648.0], [686.0, 10649.0], [685.0, 8759.0], [684.0, 8759.0], [683.0, 8760.0], [682.0, 8769.0], [681.0, 8780.0], [680.0, 8789.0], [695.0, 8958.5], [693.0, 10740.0], [690.0, 10295.0], [688.0, 8960.0], [722.0, 11624.0], [735.0, 10284.0], [733.0, 10285.0], [731.0, 9840.666666666666], [730.0, 11622.0], [719.0, 10288.0], [706.0, 8566.0], [704.0, 10292.0], [708.0, 8955.0], [707.0, 8956.0], [711.0, 11626.0], [710.0, 10290.0], [717.0, 8564.0], [716.0, 8953.0], [714.0, 10290.0], [712.0, 8954.0], [727.0, 8950.5], [725.0, 11623.0], [724.0, 10287.0], [721.0, 8757.5], [760.0, 8939.0], [764.0, 8937.0], [765.0, 8937.0], [754.0, 8941.0], [753.0, 8747.5], [763.0, 8549.0], [762.0, 8938.0], [761.0, 8938.0], [751.0, 8942.0], [736.0, 11619.0], [739.0, 11620.0], [738.0, 10283.5], [743.0, 11617.0], [741.0, 8946.0], [750.0, 11614.0], [749.0, 8942.0], [747.0, 8749.5], [745.0, 8945.0], [744.0, 10280.0], [759.0, 8939.0], [758.0, 8940.0], [757.0, 8940.0], [756.0, 8942.0], [798.0, 8727.5], [799.0, 8922.0], [785.0, 8735.0], [797.0, 8922.0], [796.0, 8923.0], [794.0, 8728.5], [793.0, 8923.0], [783.0, 8931.0], [772.0, 8935.5], [768.0, 10717.333333333334], [774.0, 8935.0], [773.0, 9826.0], [782.0, 8930.0], [781.0, 8931.0], [780.0, 8934.0], [779.0, 8934.0], [778.0, 9824.666666666666], [777.0, 8935.0], [789.0, 8924.0], [788.0, 8924.0], [787.0, 8539.0], [786.0, 8928.0], [830.0, 8859.0], [831.0, 8858.0], [818.0, 8876.0], [829.0, 8859.0], [827.0, 8859.0], [825.0, 8471.0], [824.0, 8860.0], [814.0, 8681.5], [800.0, 8920.0], [802.0, 8917.0], [801.0, 8919.0], [805.0, 8699.5], [803.0, 8896.0], [812.0, 8762.5], [811.0, 8893.0], [822.0, 8861.0], [821.0, 8874.0], [820.0, 8874.0], [819.0, 8875.0], [862.0, 8838.0], [863.0, 8837.0], [849.0, 10365.0], [848.0, 8849.0], [861.0, 9597.0], [859.0, 8452.0], [858.0, 8841.5], [856.0, 10182.0], [846.0, 9610.0], [835.0, 8855.0], [834.0, 8726.333333333334], [839.0, 8656.5], [836.0, 8851.0], [843.0, 8461.0], [842.0, 8753.75], [855.0, 8846.0], [853.0, 8457.0], [851.0, 8459.0], [850.0, 8653.5], [889.0, 8801.0], [884.0, 8744.4], [892.0, 8602.5], [895.0, 8796.333333333334], [881.0, 8823.0], [890.0, 8797.0], [888.0, 8801.0], [871.0, 8439.0], [870.0, 11501.0], [869.0, 8441.0], [868.0, 8835.0], [867.0, 8835.0], [865.0, 8446.0], [864.0, 10352.0], [878.0, 8823.0], [876.0, 8823.0], [874.0, 8823.0], [873.0, 8632.0], [887.0, 11482.0], [886.0, 8811.0], [885.0, 10326.0], [923.0, 8780.0], [916.0, 8783.0], [926.0, 10873.0], [913.0, 8783.0], [912.0, 8784.0], [921.0, 10604.333333333334], [903.0, 8792.0], [902.0, 9355.5], [901.0, 11464.0], [900.0, 8792.0], [898.0, 11464.0], [897.0, 8794.0], [896.0, 8796.0], [907.0, 8395.0], [905.0, 10120.0], [919.0, 8782.0], [918.0, 8783.0], [917.0, 10119.5], [915.0, 8783.0], [914.0, 9288.333333333334], [953.0, 8766.0], [955.0, 11438.0], [952.0, 11438.0], [935.0, 10150.6], [933.0, 8778.0], [932.0, 8779.0], [929.0, 11451.0], [950.0, 8766.5], [948.0, 8767.0], [947.0, 11439.0], [946.0, 10551.666666666666], [943.0, 11447.0], [942.0, 8777.0], [941.0, 10558.333333333334], [940.0, 11450.0], [939.0, 8778.0], [936.0, 8778.0], [989.0, 11400.5], [979.0, 11404.5], [991.0, 10058.0], [976.0, 11405.0], [988.0, 10822.0], [985.0, 11400.5], [973.0, 11406.0], [961.0, 10036.166666666666], [963.0, 11435.0], [962.0, 10100.0], [965.0, 8740.0], [964.0, 8763.0], [971.0, 10071.0], [969.0, 8738.0], [968.0, 11411.0], [983.0, 10065.5], [982.0, 8730.0], [980.0, 11404.0], [978.0, 8733.0], [977.0, 8733.5], [1022.0, 11344.0], [1023.0, 10188.0], [1010.0, 11371.0], [1009.0, 11382.0], [1021.0, 10208.0], [1020.0, 10210.0], [1019.0, 11368.0], [1018.0, 9837.5], [1016.0, 9587.666666666666], [998.0, 8714.0], [997.0, 11389.0], [996.0, 11389.0], [995.0, 10053.0], [993.0, 11394.0], [992.0, 8722.0], [1007.0, 10715.0], [1004.0, 11444.0], [1001.0, 11384.0], [1000.0, 10050.0], [1013.0, 11369.0], [1012.0, 11371.0], [1084.0, 7405.0], [1060.0, 11271.0], [1056.0, 11280.0], [1058.0, 11279.0], [1066.0, 9345.0], [1064.0, 10876.666666666666], [1068.0, 10077.0], [1070.0, 9072.0], [1086.0, 9130.0], [1082.0, 9130.0], [1080.0, 9131.0], [1078.0, 8330.0], [1076.0, 9132.0], [1074.0, 7051.0], [1072.0, 8061.0], [1052.0, 11291.0], [1030.0, 10450.666666666666], [1024.0, 11343.0], [1038.0, 9989.0], [1032.0, 11340.0], [1048.0, 11295.0], [1044.0, 11310.0], [1040.0, 11319.0], [1098.0, 9127.5], [1144.0, 9269.0], [1124.0, 7504.0], [1126.0, 9108.0], [1128.0, 7503.0], [1130.0, 8305.5], [1148.0, 8293.5], [1140.0, 9106.0], [1136.0, 7504.0], [1102.0, 7399.0], [1096.0, 7523.0], [1094.0, 9128.0], [1092.0, 9128.0], [1090.0, 8327.5], [1118.0, 9113.0], [1116.0, 7511.0], [1114.0, 7512.0], [1112.0, 7516.5], [1108.0, 9121.0], [1106.0, 7459.0], [1104.0, 9124.0], [1208.0, 8256.5], [1190.0, 9079.0], [1214.0, 9055.5], [1188.0, 7477.0], [1192.0, 8278.0], [1196.0, 8272.5], [1194.0, 9077.0], [1212.0, 8254.5], [1210.0, 9057.0], [1206.0, 10143.0], [1202.0, 7457.0], [1200.0, 9061.0], [1162.0, 7485.0], [1160.0, 7485.0], [1158.0, 9088.5], [1154.0, 9333.5], [1152.0, 8021.333333333333], [1182.0, 9081.0], [1180.0, 8280.5], [1178.0, 9083.0], [1176.0, 7481.0], [1172.0, 9085.0], [1266.0, 7671.8], [1250.0, 7244.0], [1256.0, 12805.0], [1248.0, 9044.0], [1264.0, 12802.0], [1216.0, 7452.0], [1222.0, 9051.5], [1228.0, 9048.0], [1230.0, 9048.0], [1244.0, 7440.5], [1242.0, 12813.0], [1240.0, 9045.0], [1238.0, 10930.5], [1236.0, 9046.5], [1234.0, 8244.5], [1232.0, 9047.0], [1340.0, 7424.0], [1338.0, 9027.0], [1294.0, 7426.0], [1376.0, 7421.0], [1384.0, 9023.0], [1396.0, 12795.0], [1392.0, 12793.0], [1348.0, 12795.0], [1364.0, 9025.0], [1362.0, 9025.0], [1388.0, 9512.0], [1378.0, 9024.0], [1442.0, 9165.666666666666], [1450.0, 6355.5], [1448.0, 5777.5], [1468.0, 10996.0], [1454.0, 6522.666666666667], [1530.0, 8297.25], [1534.0, 7405.0], [1504.0, 7409.0], [1508.0, 7949.485714285716], [1512.0, 8182.760563380279], [1532.0, 8205.5], [1526.0, 7939.666666666667], [1524.0, 8207.0], [1522.0, 9009.0], [1478.0, 7351.0], [1486.0, 7411.5], [1500.0, 7410.0], [1498.0, 9014.0], [1496.0, 7386.8], [1502.0, 9257.5], [1590.0, 11770.5], [1596.0, 4717.0], [1570.0, 9119.0], [1572.0, 8521.0], [1576.0, 6424.0], [1580.0, 11788.5], [1578.0, 6418.0], [1598.0, 3707.0], [1594.0, 11758.0], [1588.0, 11770.0], [1586.0, 11785.0], [1584.0, 11789.5], [1538.0, 8205.75], [1542.0, 7403.0], [1544.0, 9006.0], [1546.0, 7402.0], [1548.0, 6012.0], [1562.0, 6436.5], [1560.0, 10715.666666666666], [1556.0, 10171.0], [1554.0, 6440.0], [1654.0, 139.0], [1636.0, 141.0], [1640.0, 141.0], [1656.0, 139.16666666666666], [1652.0, 140.0], [1600.0, 146.0], [1630.0, 142.0], [1628.0, 143.0], [1646.0, 140.0], [1644.0, 140.0], [1678.0, 129.0], [1714.0, 92.0], [1722.0, 91.0], [1712.0, 92.0], [1676.0, 130.0], [1672.0, 130.0], [1670.0, 130.0], [1664.0, 131.0], [1710.0, 92.2], [1706.0, 92.0], [1694.0, 95.0], [1738.0, 89.0], [1736.0, 89.0], [1734.0, 89.0], [1730.0, 90.0], [1728.0, 90.0], [1806.0, 145.66666666666666], [1828.0, 142.0], [1852.0, 112.58333333333333], [1850.0, 113.0], [1804.0, 147.0], [1800.0, 146.0], [1822.0, 143.0], [1820.0, 143.0], [1818.0, 143.0], [1816.0, 143.0], [1814.0, 144.27777777777783], [1830.0, 136.0], [1824.0, 143.0], [1892.0, 7793.0], [1894.0, 10421.5], [1916.0, 10285.0], [1898.0, 7793.0], [1900.0, 7791.0], [1902.0, 7791.0], [1918.0, 10024.0], [1912.0, 7789.0], [1910.0, 9103.5], [1908.0, 8908.5], [1906.0, 10027.0], [1904.0, 7790.0], [1858.0, 112.16666666666667], [1864.0, 102.0], [1868.0, 101.5], [1870.0, 1663.0], [1886.0, 7794.5], [1882.0, 7796.0], [1878.0, 8914.0], [1876.0, 10033.0], [1934.0, 7781.0], [1954.0, 10387.0], [1958.0, 7750.0], [1960.0, 7749.0], [1964.0, 9369.0], [1966.0, 10375.0], [1982.0, 7738.0], [1976.0, 10171.25], [1972.0, 7740.0], [1968.0, 7747.0], [1932.0, 7780.0], [1928.0, 7782.0], [1926.0, 8902.0], [1924.0, 10020.0], [1922.0, 7785.0], [1920.0, 7786.0], [1950.0, 10007.0], [1948.0, 10009.0], [1942.0, 10015.0], [1940.0, 10016.5], [2036.0, 8571.333333333334], [2040.0, 8986.5], [2016.0, 7699.0], [2022.0, 9934.0], [2024.0, 7695.0], [2030.0, 7697.0], [2026.0, 7698.0], [2044.0, 7661.0], [2038.0, 9909.0], [2034.0, 10323.0], [2032.0, 7697.0], [1998.0, 7728.0], [1992.0, 9051.0], [1990.0, 8855.0], [1986.0, 7737.0], [2014.0, 7701.0], [2012.0, 8464.0], [2004.0, 8837.5], [2002.0, 8840.5], [2164.0, 7635.5], [2160.0, 10265.0], [2116.0, 7644.5], [2124.0, 8388.333333333334], [2132.0, 7636.5], [2152.0, 7899.2], [2148.0, 7636.0], [2144.0, 7638.0], [2256.0, 9996.5], [2260.0, 9992.0], [2252.0, 72.0], [2244.0, 73.0], [2228.0, 105.88888888888887], [2368.0, 673.0], [2404.0, 179.0], [2384.0, 182.0], [2388.0, 181.0], [2392.0, 180.0], [2400.0, 179.0], [2552.0, 6484.5], [2548.0, 6335.0], [2556.0, 9688.0], [2504.0, 8606.666666666666], [2508.0, 6516.5], [2520.0, 6365.0], [2544.0, 9550.5], [2540.0, 6651.0], [2536.0, 6654.0], [2436.0, 132.0], [2448.0, 7060.0], [2460.0, 6787.0], [2492.0, 6539.0], [2488.0, 6593.333333333333], [2472.0, 13486.0], [2468.0, 6425.0], [2464.0, 6787.0], [2576.0, 6627.0], [2584.0, 6616.0], [2608.0, 6611.0], [2588.0, 6316.0], [2580.0, 6324.0], [2564.0, 7452.5], [2628.0, 12718.0], [2604.0, 11586.0], [2596.0, 6614.0], [2592.0, 12722.0], [2808.0, 6797.8], [2776.0, 6592.0], [2780.0, 8511.0], [2812.0, 7366.8], [2804.0, 6290.0], [2800.0, 9410.624999999998], [2792.0, 6440.5], [2716.0, 6297.0], [2736.0, 6594.0], [2728.0, 6595.0], [2720.0, 6496.0], [2924.0, 139.0], [2928.0, 311.75], [2880.0, 427.0], [2884.0, 170.0], [2892.0, 148.0], [2920.0, 138.66666666666666], [2916.0, 139.0], [2820.0, 6588.0], [2828.0, 6437.0], [2832.0, 6387.333333333333], [2836.0, 6511.0], [2844.0, 27504.0], [2876.0, 183.0], [2872.0, 1129.5], [2864.0, 184.0], [2860.0, 184.0], [2852.0, 184.5], [2952.0, 680.4], [2960.0, 472.0], [3000.0, 6561.420832823662], [2944.0, 330.64285714285717], [2976.0, 450.5], [2972.0, 104.0], [2169.0, 9386.666666666666], [2165.0, 7635.5], [2117.0, 7643.0], [2125.0, 8088.0], [2129.0, 7640.0], [2141.0, 7640.0], [2161.0, 7637.0], [2157.0, 8381.666666666666], [2145.0, 7639.0], [2109.0, 7645.5], [2261.0, 7362.0], [2257.0, 9995.0], [2253.0, 9996.0], [2249.0, 73.0], [2241.0, 73.0], [2229.0, 105.0], [2389.0, 181.1020408163265], [2393.0, 180.0], [2401.0, 179.0], [2497.0, 6680.0], [2557.0, 12738.0], [2501.0, 10511.0], [2505.0, 27597.0], [2509.0, 6666.0], [2525.0, 9879.666666666666], [2541.0, 6651.0], [2533.0, 10502.0], [2529.0, 10502.0], [2449.0, 7059.0], [2485.0, 17159.0], [2481.0, 6696.0], [2477.0, 17163.0], [2473.0, 17173.0], [2465.0, 6487.0], [2585.0, 6616.0], [2581.0, 12730.0], [2577.0, 6626.0], [2573.0, 7725.6], [2561.0, 8575.0], [2625.0, 10925.142857142857], [2813.0, 6438.5], [2753.0, 6592.0], [2761.0, 6592.0], [2765.0, 6592.0], [2777.0, 6591.0], [2781.0, 7787.333333333333], [2809.0, 6589.0], [2805.0, 7960.0], [2801.0, 6349.4], [2797.0, 6590.0], [2793.0, 8202.166666666666], [2789.0, 6590.0], [2785.0, 6590.0], [2713.0, 6298.0], [2737.0, 6594.0], [2725.0, 6546.0], [2917.0, 139.0], [2925.0, 138.66666666666666], [2929.0, 138.0], [2933.0, 600.3333333333334], [2881.0, 507.0], [2893.0, 148.0], [2817.0, 6388.0], [2821.0, 8815.5], [2825.0, 8531.0], [2829.0, 6437.166666666666], [2833.0, 6586.5], [2837.0, 27514.0], [2877.0, 814.0], [2865.0, 184.0], [2957.0, 124.0], [2949.0, 125.0], [2953.0, 1515.0], [2969.0, 453.5], [2965.0, 570.5], [2961.0, 3403.0], [1075.0, 7528.0], [1085.0, 9130.0], [1087.0, 7526.0], [1057.0, 11279.0], [1061.0, 11264.0], [1069.0, 9074.0], [1071.0, 8063.0], [1083.0, 7527.0], [1081.0, 9131.0], [1079.0, 9132.0], [1073.0, 7054.0], [1039.0, 11322.0], [1037.0, 11325.0], [1035.0, 11333.0], [1033.0, 8662.0], [1031.0, 11340.0], [1029.0, 11342.0], [1027.0, 8280.0], [1025.0, 11342.0], [1055.0, 11284.0], [1053.0, 11290.0], [1049.0, 8623.0], [1047.0, 10419.333333333334], [1043.0, 11319.333333333334], [1139.0, 9106.0], [1149.0, 9095.0], [1121.0, 7508.5], [1123.0, 7445.0], [1125.0, 9108.0], [1129.0, 7504.0], [1135.0, 7443.0], [1147.0, 9096.0], [1143.0, 9828.333333333334], [1137.0, 9107.0], [1103.0, 7521.0], [1101.0, 8264.5], [1099.0, 7524.0], [1095.0, 9127.0], [1091.0, 7525.0], [1089.0, 7404.0], [1119.0, 7386.0], [1115.0, 9114.0], [1113.0, 9115.0], [1111.0, 9119.0], [1109.0, 9122.0], [1107.0, 7520.0], [1201.0, 7457.0], [1209.0, 9058.0], [1185.0, 9080.0], [1189.0, 7476.0], [1191.0, 9080.0], [1193.0, 9078.0], [1199.0, 10947.0], [1197.0, 7458.0], [1205.0, 7456.0], [1203.0, 9548.0], [1165.0, 9087.333333333334], [1161.0, 7485.0], [1157.0, 9089.0], [1183.0, 9080.0], [1181.0, 9082.0], [1177.0, 7480.0], [1175.0, 9084.0], [1173.0, 7481.0], [1171.0, 9330.5], [1169.0, 8686.5], [1225.0, 9050.0], [1267.0, 7428.0], [1251.0, 9043.0], [1265.0, 9034.0], [1247.0, 7244.5], [1219.0, 9052.0], [1217.0, 9054.0], [1221.0, 8250.0], [1223.0, 7447.0], [1227.0, 8247.5], [1231.0, 9047.0], [1245.0, 7440.0], [1263.0, 9034.0], [1261.0, 12803.0], [1257.0, 10920.5], [1255.0, 9037.0], [1253.0, 9041.0], [1337.0, 7303.0], [1317.0, 9028.0], [1399.0, 10907.0], [1377.0, 12794.0], [1395.0, 7297.0], [1367.0, 9024.0], [1345.0, 9110.5], [1361.0, 12796.0], [1389.0, 12793.0], [1387.0, 7420.0], [1383.0, 12793.0], [1471.0, 5417.0], [1469.0, 10099.0], [1447.0, 8739.666666666666], [1467.0, 7292.0], [1463.0, 7414.0], [1461.0, 5646.0], [1455.0, 7353.5], [1453.0, 12787.0], [1451.0, 7415.0], [1531.0, 7404.0], [1505.0, 8004.166666666666], [1507.0, 8272.599999999999], [1509.0, 8477.0], [1519.0, 7406.0], [1513.0, 8743.6], [1529.0, 9008.0], [1525.0, 8092.0], [1523.0, 7406.0], [1521.0, 8330.249999999998], [1503.0, 9012.0], [1473.0, 7412.0], [1481.0, 7412.0], [1485.0, 7412.0], [1487.0, 7363.4], [1501.0, 8827.666666666668], [1499.0, 8108.0], [1593.0, 11758.0], [1599.0, 29.0], [1569.0, 6433.0], [1571.0, 11805.0], [1575.0, 9112.5], [1573.0, 11800.0], [1577.0, 6422.0], [1597.0, 3708.0], [1595.0, 4719.0], [1591.0, 11759.0], [1587.0, 11781.0], [1585.0, 11791.0], [1567.0, 9120.5], [1541.0, 7938.333333333333], [1543.0, 8204.75], [1545.0, 7403.0], [1547.0, 9004.0], [1549.0, 6010.0], [1565.0, 9121.0], [1563.0, 11808.0], [1559.0, 6437.0], [1553.0, 9126.0], [1653.0, 139.25], [1657.0, 139.0], [1661.0, 132.0], [1633.0, 141.0], [1637.0, 141.0], [1641.0, 141.0], [1631.0, 142.0], [1601.0, 145.0], [1629.0, 142.33333333333331], [1625.0, 143.0], [1645.0, 140.5], [1643.0, 141.0], [1677.0, 791.0], [1723.0, 91.0], [1727.0, 90.0], [1679.0, 128.0], [1673.0, 130.0], [1669.0, 130.0], [1695.0, 95.0], [1691.0, 96.0], [1681.0, 98.0], [1739.0, 88.0], [1735.0, 89.2], [1731.0, 90.0], [1817.0, 143.2], [1821.0, 142.75], [1815.0, 144.06060606060612], [1811.0, 145.33333333333334], [1809.0, 145.0], [1835.0, 135.0], [1829.0, 141.0], [1827.0, 142.0], [1825.0, 142.0], [1889.0, 8911.0], [1919.0, 7788.0], [1891.0, 8911.5], [1895.0, 10028.0], [1897.0, 7792.0], [1899.0, 7793.0], [1901.0, 7792.0], [1917.0, 10023.0], [1913.0, 7788.0], [1911.0, 7789.0], [1907.0, 7791.0], [1887.0, 7794.0], [1863.0, 103.0], [1867.0, 102.0], [1865.0, 102.0], [1869.0, 1664.0], [1871.0, 7798.0], [1885.0, 10032.0], [1883.0, 10031.0], [1881.0, 8672.0], [1875.0, 8356.25], [1979.0, 10105.333333333334], [1957.0, 8872.0], [1983.0, 7738.0], [1953.0, 8880.5], [1955.0, 7754.0], [1959.0, 7749.0], [1961.0, 10377.0], [1967.0, 7748.0], [1981.0, 9974.0], [1971.0, 8860.5], [1969.0, 7747.0], [1933.0, 10017.0], [1931.0, 7781.0], [1929.0, 10018.0], [1927.0, 7783.0], [1923.0, 10021.0], [1921.0, 7785.0], [1951.0, 7772.0], [1949.0, 9393.0], [1945.0, 7773.0], [1943.0, 10012.0], [1941.0, 7778.0], [1939.0, 7780.0], [1937.0, 10016.333333333334], [2043.0, 7662.0], [2047.0, 9282.0], [2021.0, 7698.0], [2023.0, 8443.333333333334], [2025.0, 7697.0], [2037.0, 7673.0], [1999.0, 8473.666666666666], [1997.0, 9964.0], [1995.0, 9965.0], [1993.0, 10363.0], [1991.0, 7737.0], [1987.0, 7737.5], [2015.0, 7699.0], [2013.0, 9948.0], [2009.0, 8376.0], [2007.0, 7721.0], [2001.0, 10349.0], [2166.0, 8382.333333333334], [2118.0, 8762.5], [2122.0, 7866.5], [2126.0, 7640.333333333333], [2130.0, 8385.333333333334], [2134.0, 7640.0], [2162.0, 7635.5], [2158.0, 7884.888888888889], [2154.0, 8532.0], [2150.0, 7637.6], [2054.0, 9895.0], [2050.0, 7659.0], [2106.0, 7645.0], [2094.0, 7650.0], [2262.0, 9987.0], [2258.0, 9995.0], [2246.0, 73.0], [2242.0, 73.0], [2230.0, 75.0], [2390.0, 181.0], [2402.0, 179.0], [2398.0, 180.0], [2542.0, 6351.0], [2498.0, 6672.0], [2506.0, 8611.0], [2514.0, 10506.5], [2518.0, 7213.0], [2526.0, 6662.0], [2558.0, 6631.0], [2554.0, 6483.0], [2550.0, 6534.0], [2546.0, 6635.0], [2538.0, 6352.0], [2534.0, 139895.0], [2530.0, 6362.0], [2442.0, 131.0], [2450.0, 7058.0], [2454.0, 6788.0], [2494.0, 6685.0], [2490.0, 6693.0], [2482.0, 27625.0], [2478.0, 6398.0], [2474.0, 6701.0], [2466.0, 9263.9], [2662.0, 12709.0], [2590.0, 7894.0], [2586.0, 8551.666666666666], [2578.0, 6326.0], [2626.0, 10426.375000000002], [2598.0, 12723.0], [2754.0, 6592.0], [2810.0, 6589.0], [2806.0, 6439.5], [2814.0, 7136.0], [2770.0, 6592.0], [2774.0, 6291.0], [2778.0, 6441.0], [2782.0, 6441.5], [2802.0, 7213.846153846154], [2798.0, 6364.75], [2794.0, 6590.0], [2790.0, 6390.0], [2786.0, 7138.0], [2714.0, 6597.0], [2718.0, 7967.75], [2738.0, 18979.0], [2734.0, 6595.0], [2722.0, 6596.0], [2922.0, 139.0], [2918.0, 371.0], [2882.0, 422.5], [2890.0, 148.0], [2886.0, 149.0], [2894.0, 148.33333333333334], [2930.0, 138.0], [2914.0, 140.33333333333334], [2818.0, 6588.0], [2822.0, 6588.0], [2830.0, 6287.0], [2842.0, 7224.0], [2846.0, 6575.0], [2874.0, 602.1666666666666], [2866.0, 184.0], [2862.0, 184.0], [2858.0, 184.0], [2966.0, 106.0], [2950.0, 126.0], [2954.0, 1514.0], [2958.0, 1514.5], [2163.0, 8755.0], [2119.0, 7644.0], [2127.0, 7641.0], [2143.0, 7639.0], [2159.0, 7637.0], [2155.0, 7859.9], [2147.0, 7639.0], [2051.0, 7656.0], [2111.0, 7645.0], [2255.0, 9996.0], [2259.0, 9994.0], [2251.0, 72.0], [2243.0, 73.0], [2227.0, 106.0], [2403.0, 179.0], [2383.0, 183.0], [2387.0, 181.0], [2391.0, 180.25], [2399.0, 179.0], [2395.0, 180.0], [2547.0, 6636.0], [2559.0, 6631.0], [2503.0, 6671.0], [2511.0, 6516.0], [2515.0, 16980.0], [2519.0, 6664.0], [2535.0, 12766.0], [2531.0, 6512.0], [2495.0, 27611.0], [2447.0, 8827.0], [2443.0, 130.21875000000003], [2451.0, 7057.0], [2483.0, 6696.0], [2479.0, 6697.0], [2475.0, 6699.0], [2467.0, 6783.0], [2579.0, 6324.0], [2663.0, 11574.75], [2575.0, 8548.0], [2571.0, 6629.0], [2567.0, 11917.2], [2603.0, 9229.857142857143], [2803.0, 7297.0], [2811.0, 11671.25], [2771.0, 27520.0], [2775.0, 6516.0], [2779.0, 6291.0], [2795.0, 7412.5], [2791.0, 7512.5], [2787.0, 9282.8], [2751.0, 6592.0], [2719.0, 6296.0], [2739.0, 6594.0], [2927.0, 138.0], [2883.0, 170.33333333333334], [2891.0, 148.0], [2931.0, 138.0], [2923.0, 139.0], [2915.0, 139.0], [2879.0, 664.7272727272727], [2819.0, 27517.0], [2823.0, 10616.0], [2831.0, 6587.0], [2843.0, 6276.0], [2847.0, 27504.0], [2871.0, 1018.0], [2867.0, 184.33333333333334], [2855.0, 184.0], [2851.0, 185.0], [2951.0, 472.5], [2979.0, 566.6666666666666], [2971.0, 800.5], [2963.0, 881.1250000000002]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2926.243386770212, 7308.134737296302]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3990.0, "minX": 1.68288264E12, "maxY": 165947.65, "series": [{"data": [[1.68288288E12, 153470.45], [1.68288294E12, 22089.3], [1.68288276E12, 165947.65], [1.68288282E12, 112776.18333333333], [1.68288264E12, 101563.4], [1.6828827E12, 154914.9], [1.682883E12, 5723.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68288288E12, 109771.2], [1.68288294E12, 16564.8], [1.68288276E12, 116970.0], [1.68288282E12, 79237.2], [1.68288264E12, 71803.2], [1.6828827E12, 106864.8], [1.682883E12, 3990.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.682883E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3299.9960976356188, "minX": 1.68288264E12, "maxY": 96332.00631578943, "series": [{"data": [[1.68288288E12, 3299.9960976356188], [1.68288294E12, 7857.021298174447], [1.68288276E12, 6210.612926391372], [1.68288282E12, 4068.542554319023], [1.68288264E12, 6047.117103415994], [1.6828827E12, 12422.778868630156], [1.682883E12, 96332.00631578943]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.682883E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3291.220062743891, "minX": 1.68288264E12, "maxY": 96331.98947368417, "series": [{"data": [[1.68288288E12, 3291.220062743891], [1.68288294E12, 7857.0045638945285], [1.68288276E12, 6210.606678635568], [1.68288282E12, 4060.2798092209996], [1.68288264E12, 6047.088207767902], [1.6828827E12, 12182.295387252594], [1.682883E12, 96331.98947368417]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.682883E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.023157894736842082, "minX": 1.68288264E12, "maxY": 3964.1885816876243, "series": [{"data": [[1.68288288E12, 397.3636085392916], [1.68288294E12, 0.09989858012170408], [1.68288276E12, 3964.1885816876243], [1.68288282E12, 903.3171171171144], [1.68288264E12, 46.7497660271409], [1.6828827E12, 3595.974520804125], [1.682883E12, 0.023157894736842082]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.682883E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.68288264E12, "maxY": 201743.0, "series": [{"data": [[1.68288288E12, 139895.0], [1.68288294E12, 58501.0], [1.68288276E12, 164315.0], [1.68288282E12, 201743.0], [1.68288264E12, 51882.0], [1.6828827E12, 102119.0], [1.682883E12, 100194.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68288288E12, 10157.0], [1.68288294E12, 11626.0], [1.68288276E12, 7862.0], [1.68288282E12, 8060.0], [1.68288264E12, 17348.0], [1.6828827E12, 38733.7], [1.682883E12, 100144.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68288288E12, 27626.62], [1.68288294E12, 49413.54], [1.68288276E12, 132447.0], [1.68288282E12, 92808.31999999897], [1.68288264E12, 47048.020000000004], [1.6828827E12, 101028.0], [1.682883E12, 100185.48]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68288288E12, 13001.55], [1.68288294E12, 12805.0], [1.68288276E12, 39353.7], [1.68288282E12, 14275.299999999977], [1.68288264E12, 28068.0], [1.6828827E12, 75572.0], [1.682883E12, 100151.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68288288E12, 10.0], [1.68288294E12, 29.0], [1.68288276E12, 10.0], [1.68288282E12, 10.0], [1.68288264E12, 27.0], [1.6828827E12, 19.0], [1.682883E12, 59507.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68288288E12, 146.0], [1.68288294E12, 7794.0], [1.68288276E12, 136.0], [1.68288282E12, 134.0], [1.68288264E12, 136.0], [1.6828827E12, 2303.0], [1.682883E12, 100031.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.682883E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60.0, "minX": 1.0, "maxY": 114460.0, "series": [{"data": [[2.0, 51938.0], [3.0, 26298.0], [4.0, 32656.0], [5.0, 20998.0], [6.0, 3160.0], [7.0, 21291.0], [8.0, 15026.0], [9.0, 1135.0], [10.0, 2485.5], [11.0, 1060.0], [12.0, 2475.5], [13.0, 9782.0], [14.0, 1062.5], [24.0, 6956.0], [26.0, 18073.0], [27.0, 72.0], [29.0, 60.0], [30.0, 3070.0], [38.0, 134.0], [39.0, 11277.0], [43.0, 6826.0], [45.0, 3258.0], [44.0, 63355.5], [46.0, 1037.0], [48.0, 100018.0], [50.0, 132.0], [52.0, 8648.5], [57.0, 8913.5], [59.0, 5271.5], [66.0, 11613.0], [70.0, 10604.0], [71.0, 16736.0], [75.0, 32192.0], [72.0, 134.5], [78.0, 12256.0], [80.0, 114.0], [85.0, 16444.0], [87.0, 2303.0], [90.0, 116.0], [89.0, 8158.0], [96.0, 143.0], [101.0, 238.0], [108.0, 4139.0], [116.0, 8543.5], [119.0, 8062.0], [118.0, 2327.0], [121.0, 3220.0], [125.0, 16446.0], [129.0, 130.0], [139.0, 154.0], [138.0, 100043.0], [148.0, 131.0], [145.0, 4686.0], [151.0, 2899.0], [152.0, 145.0], [162.0, 8253.0], [160.0, 2690.0], [174.0, 137.5], [170.0, 136.0], [175.0, 159.0], [168.0, 125.0], [173.0, 80.0], [179.0, 14912.0], [180.0, 123.5], [191.0, 2278.0], [188.0, 3631.0], [185.0, 1721.0], [190.0, 124.0], [186.0, 165.0], [197.0, 138.0], [193.0, 110.0], [199.0, 1847.5], [192.0, 115.0], [198.0, 128.5], [194.0, 2329.5], [196.0, 135.0], [203.0, 145.0], [200.0, 127.0], [207.0, 145.0], [204.0, 123.0], [201.0, 158.0], [205.0, 129.0], [202.0, 139.0], [215.0, 85.0], [212.0, 7162.0], [209.0, 5184.0], [211.0, 85151.0], [218.0, 140.0], [223.0, 24847.0], [221.0, 115.0], [219.0, 120.0], [217.0, 140.0], [225.0, 122.0], [233.0, 5010.0], [238.0, 113.0], [249.0, 6428.0], [261.0, 1090.0], [270.0, 132.0], [269.0, 139.0], [275.0, 132.0], [281.0, 128.0], [283.0, 110.0], [285.0, 144.0], [274.0, 179.0], [290.0, 130.0], [301.0, 7738.0], [333.0, 136.0], [326.0, 9546.0], [330.0, 118.0], [322.0, 2056.5], [327.0, 126.0], [332.0, 152.5], [325.0, 117.0], [365.0, 15592.5], [353.0, 124.0], [373.0, 8673.5], [380.0, 8748.5], [370.0, 111.0], [381.0, 117.0], [388.0, 121.0], [396.0, 126.0], [399.0, 131.0], [390.0, 4490.0], [404.0, 127.0], [405.0, 9733.0], [402.0, 128.0], [400.0, 6288.0], [401.0, 138.0], [406.0, 134.0], [410.0, 116.0], [420.0, 105.5], [426.0, 173.0], [430.0, 130.0], [431.0, 116.0], [416.0, 8505.5], [421.0, 8937.0], [444.0, 168.0], [438.0, 131.0], [446.0, 127.0], [462.0, 7010.0], [475.0, 9007.0], [496.0, 8199.0], [530.0, 225.0], [539.0, 10858.0], [512.0, 11449.0], [529.0, 146.0], [523.0, 237.0], [543.0, 7905.0], [557.0, 4985.0], [572.0, 152.0], [561.0, 127.0], [559.0, 140.0], [587.0, 13784.0], [580.0, 119.0], [601.0, 198.0], [602.0, 134.0], [594.0, 123.0], [603.0, 139.0], [597.0, 160.0], [632.0, 112.0], [623.0, 17209.0], [639.0, 134.0], [661.0, 17349.0], [647.0, 196.0], [649.0, 7861.0], [640.0, 209.0], [697.0, 5538.0], [740.0, 111.0], [770.0, 111.0], [787.0, 317.0], [867.0, 97.0], [1.0, 98210.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[325.0, 114460.0], [365.0, 75984.0], [188.0, 27984.0], [12.0, 38939.5], [212.0, 24621.0], [108.0, 33199.0], [59.0, 10349.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 867.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100043.0, "series": [{"data": [[2.0, 51938.0], [3.0, 26298.0], [4.0, 32656.0], [5.0, 20998.0], [6.0, 3160.0], [7.0, 21291.0], [8.0, 15026.0], [9.0, 1135.0], [10.0, 2485.5], [11.0, 1060.0], [12.0, 2475.5], [13.0, 9782.0], [14.0, 1062.5], [24.0, 6956.0], [26.0, 18073.0], [27.0, 72.0], [29.0, 60.0], [30.0, 3070.0], [38.0, 134.0], [39.0, 11277.0], [43.0, 6826.0], [45.0, 3258.0], [44.0, 63355.5], [46.0, 1037.0], [48.0, 100018.0], [50.0, 132.0], [52.0, 8648.5], [57.0, 8913.5], [59.0, 5271.5], [66.0, 11613.0], [70.0, 10604.0], [71.0, 16736.0], [75.0, 32192.0], [72.0, 134.5], [78.0, 12256.0], [80.0, 114.0], [85.0, 16444.0], [87.0, 2303.0], [90.0, 116.0], [89.0, 8158.0], [96.0, 143.0], [101.0, 238.0], [108.0, 4139.0], [116.0, 8543.5], [119.0, 8062.0], [118.0, 2327.0], [121.0, 3220.0], [125.0, 16446.0], [129.0, 130.0], [139.0, 154.0], [138.0, 100043.0], [148.0, 131.0], [145.0, 4686.0], [151.0, 2899.0], [152.0, 144.0], [162.0, 8253.0], [160.0, 2690.0], [174.0, 137.5], [170.0, 136.0], [175.0, 159.0], [168.0, 125.0], [173.0, 80.0], [179.0, 14912.0], [180.0, 123.0], [191.0, 2278.0], [188.0, 3631.0], [185.0, 1721.0], [190.0, 124.0], [186.0, 165.0], [197.0, 138.0], [193.0, 110.0], [199.0, 1847.5], [192.0, 115.0], [198.0, 128.5], [194.0, 2329.5], [196.0, 135.0], [203.0, 145.0], [200.0, 127.0], [207.0, 145.0], [204.0, 123.0], [201.0, 158.0], [205.0, 129.0], [202.0, 139.0], [215.0, 85.0], [212.0, 7162.0], [209.0, 5184.0], [211.0, 85151.0], [218.0, 140.0], [223.0, 24847.0], [221.0, 115.0], [219.0, 120.0], [217.0, 140.0], [225.0, 122.0], [233.0, 5010.0], [238.0, 113.0], [249.0, 6428.0], [261.0, 1090.0], [270.0, 132.0], [269.0, 139.0], [275.0, 131.0], [281.0, 128.0], [283.0, 110.0], [285.0, 144.0], [274.0, 179.0], [290.0, 130.0], [301.0, 7738.0], [333.0, 136.0], [326.0, 9546.0], [330.0, 118.0], [322.0, 2056.5], [327.0, 126.0], [332.0, 152.5], [325.0, 117.0], [365.0, 15592.5], [353.0, 124.0], [373.0, 8673.5], [380.0, 8748.5], [370.0, 111.0], [381.0, 117.0], [388.0, 121.0], [396.0, 126.0], [399.0, 131.0], [390.0, 4490.0], [404.0, 127.0], [405.0, 9733.0], [402.0, 128.0], [400.0, 6288.0], [401.0, 138.0], [406.0, 134.0], [410.0, 116.0], [420.0, 105.5], [426.0, 173.0], [430.0, 130.0], [431.0, 116.0], [416.0, 8505.5], [421.0, 8937.0], [444.0, 168.0], [438.0, 131.0], [446.0, 127.0], [462.0, 7010.0], [475.0, 9007.0], [496.0, 8199.0], [530.0, 225.0], [539.0, 10858.0], [512.0, 11449.0], [529.0, 146.0], [523.0, 237.0], [543.0, 7905.0], [557.0, 4985.0], [572.0, 152.0], [561.0, 127.0], [559.0, 140.0], [587.0, 13784.0], [580.0, 119.0], [601.0, 198.0], [602.0, 134.0], [594.0, 123.0], [603.0, 139.0], [597.0, 160.0], [632.0, 112.0], [623.0, 17209.0], [639.0, 134.0], [661.0, 17349.0], [647.0, 196.0], [649.0, 7861.0], [640.0, 209.0], [697.0, 5538.0], [740.0, 111.0], [770.0, 111.0], [787.0, 317.0], [867.0, 97.0], [1.0, 98210.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[325.0, 0.0], [365.0, 0.0], [188.0, 0.0], [12.0, 0.0], [212.0, 0.0], [108.0, 0.0], [59.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 867.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 24.3, "minX": 1.68288264E12, "maxY": 220.0, "series": [{"data": [[1.68288288E12, 220.0], [1.68288294E12, 24.3], [1.68288276E12, 220.0], [1.68288282E12, 163.33333333333334], [1.68288264E12, 183.33333333333334], [1.6828827E12, 193.33333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288294E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68288264E12, "maxY": 232.08333333333334, "series": [{"data": [[1.68288288E12, 217.8], [1.68288294E12, 32.86666666666667], [1.68288276E12, 232.08333333333334], [1.68288282E12, 157.21666666666667], [1.68288264E12, 142.46666666666667], [1.6828827E12, 212.03333333333333], [1.682883E12, 7.916666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68288288E12, 0.016666666666666666], [1.68288282E12, 0.03333333333333333], [1.6828827E12, 1.8666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.682883E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68288264E12, "maxY": 232.08333333333334, "series": [{"data": [[1.68288288E12, 217.8], [1.68288294E12, 32.86666666666667], [1.68288276E12, 232.08333333333334], [1.68288282E12, 157.21666666666667], [1.68288264E12, 142.46666666666667], [1.6828827E12, 212.03333333333333], [1.682883E12, 7.916666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68288288E12, 0.016666666666666666], [1.68288282E12, 0.03333333333333333], [1.6828827E12, 1.8666666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.682883E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68288264E12, "maxY": 232.08333333333334, "series": [{"data": [[1.68288288E12, 217.8], [1.68288294E12, 32.86666666666667], [1.68288276E12, 232.08333333333334], [1.68288282E12, 157.21666666666667], [1.68288264E12, 142.46666666666667], [1.6828827E12, 212.03333333333333], [1.682883E12, 7.916666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68288288E12, 0.016666666666666666], [1.68288282E12, 0.03333333333333333], [1.6828827E12, 1.8666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.682883E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

