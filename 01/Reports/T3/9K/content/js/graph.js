/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "maxY": 254777.0, "series": [{"data": [[0.0, 8.0], [0.1, 17.0], [0.2, 21.0], [0.3, 23.0], [0.4, 25.0], [0.5, 26.0], [0.6, 28.0], [0.7, 29.0], [0.8, 30.0], [0.9, 31.0], [1.0, 33.0], [1.1, 34.0], [1.2, 34.0], [1.3, 36.0], [1.4, 37.0], [1.5, 37.0], [1.6, 38.0], [1.7, 39.0], [1.8, 40.0], [1.9, 41.0], [2.0, 42.0], [2.1, 43.0], [2.2, 43.0], [2.3, 44.0], [2.4, 45.0], [2.5, 46.0], [2.6, 47.0], [2.7, 47.0], [2.8, 48.0], [2.9, 49.0], [3.0, 49.0], [3.1, 50.0], [3.2, 51.0], [3.3, 51.0], [3.4, 52.0], [3.5, 53.0], [3.6, 53.0], [3.7, 54.0], [3.8, 55.0], [3.9, 56.0], [4.0, 56.0], [4.1, 57.0], [4.2, 58.0], [4.3, 58.0], [4.4, 59.0], [4.5, 59.0], [4.6, 60.0], [4.7, 60.0], [4.8, 61.0], [4.9, 62.0], [5.0, 62.0], [5.1, 63.0], [5.2, 64.0], [5.3, 65.0], [5.4, 66.0], [5.5, 66.0], [5.6, 67.0], [5.7, 67.0], [5.8, 68.0], [5.9, 68.0], [6.0, 69.0], [6.1, 70.0], [6.2, 70.0], [6.3, 71.0], [6.4, 71.0], [6.5, 72.0], [6.6, 73.0], [6.7, 73.0], [6.8, 74.0], [6.9, 74.0], [7.0, 75.0], [7.1, 75.0], [7.2, 77.0], [7.3, 77.0], [7.4, 78.0], [7.5, 79.0], [7.6, 79.0], [7.7, 79.0], [7.8, 80.0], [7.9, 81.0], [8.0, 82.0], [8.1, 82.0], [8.2, 83.0], [8.3, 83.0], [8.4, 84.0], [8.5, 84.0], [8.6, 85.0], [8.7, 86.0], [8.8, 86.0], [8.9, 87.0], [9.0, 87.0], [9.1, 88.0], [9.2, 88.0], [9.3, 89.0], [9.4, 90.0], [9.5, 91.0], [9.6, 91.0], [9.7, 92.0], [9.8, 92.0], [9.9, 93.0], [10.0, 93.0], [10.1, 93.0], [10.2, 94.0], [10.3, 94.0], [10.4, 95.0], [10.5, 96.0], [10.6, 96.0], [10.7, 97.0], [10.8, 97.0], [10.9, 97.0], [11.0, 98.0], [11.1, 98.0], [11.2, 99.0], [11.3, 99.0], [11.4, 100.0], [11.5, 100.0], [11.6, 101.0], [11.7, 102.0], [11.8, 102.0], [11.9, 103.0], [12.0, 103.0], [12.1, 104.0], [12.2, 105.0], [12.3, 105.0], [12.4, 106.0], [12.5, 106.0], [12.6, 107.0], [12.7, 107.0], [12.8, 108.0], [12.9, 108.0], [13.0, 108.0], [13.1, 109.0], [13.2, 109.0], [13.3, 109.0], [13.4, 110.0], [13.5, 110.0], [13.6, 110.0], [13.7, 111.0], [13.8, 111.0], [13.9, 112.0], [14.0, 112.0], [14.1, 112.0], [14.2, 112.0], [14.3, 113.0], [14.4, 113.0], [14.5, 113.0], [14.6, 114.0], [14.7, 114.0], [14.8, 114.0], [14.9, 115.0], [15.0, 115.0], [15.1, 115.0], [15.2, 116.0], [15.3, 116.0], [15.4, 117.0], [15.5, 117.0], [15.6, 117.0], [15.7, 118.0], [15.8, 118.0], [15.9, 118.0], [16.0, 118.0], [16.1, 119.0], [16.2, 119.0], [16.3, 119.0], [16.4, 119.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 121.0], [17.1, 121.0], [17.2, 121.0], [17.3, 122.0], [17.4, 122.0], [17.5, 122.0], [17.6, 122.0], [17.7, 122.0], [17.8, 123.0], [17.9, 123.0], [18.0, 123.0], [18.1, 123.0], [18.2, 124.0], [18.3, 124.0], [18.4, 124.0], [18.5, 125.0], [18.6, 125.0], [18.7, 125.0], [18.8, 125.0], [18.9, 126.0], [19.0, 126.0], [19.1, 126.0], [19.2, 126.0], [19.3, 127.0], [19.4, 127.0], [19.5, 127.0], [19.6, 127.0], [19.7, 128.0], [19.8, 128.0], [19.9, 128.0], [20.0, 129.0], [20.1, 129.0], [20.2, 129.0], [20.3, 129.0], [20.4, 130.0], [20.5, 130.0], [20.6, 130.0], [20.7, 130.0], [20.8, 130.0], [20.9, 131.0], [21.0, 131.0], [21.1, 131.0], [21.2, 132.0], [21.3, 132.0], [21.4, 132.0], [21.5, 132.0], [21.6, 133.0], [21.7, 133.0], [21.8, 133.0], [21.9, 134.0], [22.0, 134.0], [22.1, 134.0], [22.2, 134.0], [22.3, 135.0], [22.4, 135.0], [22.5, 135.0], [22.6, 135.0], [22.7, 135.0], [22.8, 136.0], [22.9, 136.0], [23.0, 136.0], [23.1, 136.0], [23.2, 137.0], [23.3, 137.0], [23.4, 138.0], [23.5, 138.0], [23.6, 139.0], [23.7, 139.0], [23.8, 139.0], [23.9, 140.0], [24.0, 140.0], [24.1, 140.0], [24.2, 140.0], [24.3, 141.0], [24.4, 141.0], [24.5, 141.0], [24.6, 141.0], [24.7, 141.0], [24.8, 142.0], [24.9, 142.0], [25.0, 142.0], [25.1, 142.0], [25.2, 143.0], [25.3, 143.0], [25.4, 143.0], [25.5, 143.0], [25.6, 144.0], [25.7, 144.0], [25.8, 144.0], [25.9, 145.0], [26.0, 145.0], [26.1, 146.0], [26.2, 146.0], [26.3, 146.0], [26.4, 147.0], [26.5, 147.0], [26.6, 147.0], [26.7, 147.0], [26.8, 148.0], [26.9, 148.0], [27.0, 148.0], [27.1, 148.0], [27.2, 149.0], [27.3, 149.0], [27.4, 149.0], [27.5, 150.0], [27.6, 150.0], [27.7, 151.0], [27.8, 151.0], [27.9, 151.0], [28.0, 152.0], [28.1, 152.0], [28.2, 152.0], [28.3, 152.0], [28.4, 152.0], [28.5, 153.0], [28.6, 153.0], [28.7, 153.0], [28.8, 153.0], [28.9, 153.0], [29.0, 153.0], [29.1, 154.0], [29.2, 154.0], [29.3, 154.0], [29.4, 154.0], [29.5, 154.0], [29.6, 155.0], [29.7, 155.0], [29.8, 155.0], [29.9, 156.0], [30.0, 156.0], [30.1, 156.0], [30.2, 156.0], [30.3, 157.0], [30.4, 157.0], [30.5, 157.0], [30.6, 157.0], [30.7, 158.0], [30.8, 158.0], [30.9, 158.0], [31.0, 159.0], [31.1, 159.0], [31.2, 159.0], [31.3, 159.0], [31.4, 160.0], [31.5, 160.0], [31.6, 160.0], [31.7, 160.0], [31.8, 161.0], [31.9, 161.0], [32.0, 161.0], [32.1, 161.0], [32.2, 161.0], [32.3, 161.0], [32.4, 162.0], [32.5, 162.0], [32.6, 162.0], [32.7, 162.0], [32.8, 162.0], [32.9, 162.0], [33.0, 163.0], [33.1, 163.0], [33.2, 163.0], [33.3, 163.0], [33.4, 163.0], [33.5, 163.0], [33.6, 163.0], [33.7, 164.0], [33.8, 164.0], [33.9, 164.0], [34.0, 164.0], [34.1, 164.0], [34.2, 164.0], [34.3, 164.0], [34.4, 165.0], [34.5, 165.0], [34.6, 165.0], [34.7, 165.0], [34.8, 165.0], [34.9, 165.0], [35.0, 165.0], [35.1, 166.0], [35.2, 166.0], [35.3, 166.0], [35.4, 166.0], [35.5, 166.0], [35.6, 166.0], [35.7, 166.0], [35.8, 166.0], [35.9, 166.0], [36.0, 166.0], [36.1, 167.0], [36.2, 167.0], [36.3, 167.0], [36.4, 167.0], [36.5, 167.0], [36.6, 167.0], [36.7, 167.0], [36.8, 168.0], [36.9, 168.0], [37.0, 168.0], [37.1, 168.0], [37.2, 168.0], [37.3, 168.0], [37.4, 168.0], [37.5, 169.0], [37.6, 169.0], [37.7, 169.0], [37.8, 169.0], [37.9, 169.0], [38.0, 169.0], [38.1, 169.0], [38.2, 169.0], [38.3, 170.0], [38.4, 170.0], [38.5, 170.0], [38.6, 170.0], [38.7, 170.0], [38.8, 170.0], [38.9, 171.0], [39.0, 171.0], [39.1, 171.0], [39.2, 171.0], [39.3, 171.0], [39.4, 171.0], [39.5, 171.0], [39.6, 172.0], [39.7, 172.0], [39.8, 172.0], [39.9, 172.0], [40.0, 172.0], [40.1, 172.0], [40.2, 172.0], [40.3, 172.0], [40.4, 172.0], [40.5, 173.0], [40.6, 173.0], [40.7, 173.0], [40.8, 173.0], [40.9, 173.0], [41.0, 173.0], [41.1, 173.0], [41.2, 173.0], [41.3, 173.0], [41.4, 174.0], [41.5, 174.0], [41.6, 174.0], [41.7, 174.0], [41.8, 174.0], [41.9, 174.0], [42.0, 174.0], [42.1, 174.0], [42.2, 174.0], [42.3, 175.0], [42.4, 175.0], [42.5, 175.0], [42.6, 175.0], [42.7, 175.0], [42.8, 175.0], [42.9, 175.0], [43.0, 175.0], [43.1, 175.0], [43.2, 175.0], [43.3, 175.0], [43.4, 176.0], [43.5, 176.0], [43.6, 176.0], [43.7, 176.0], [43.8, 176.0], [43.9, 176.0], [44.0, 176.0], [44.1, 176.0], [44.2, 176.0], [44.3, 176.0], [44.4, 177.0], [44.5, 177.0], [44.6, 177.0], [44.7, 177.0], [44.8, 177.0], [44.9, 177.0], [45.0, 177.0], [45.1, 177.0], [45.2, 177.0], [45.3, 177.0], [45.4, 178.0], [45.5, 178.0], [45.6, 178.0], [45.7, 178.0], [45.8, 178.0], [45.9, 178.0], [46.0, 178.0], [46.1, 178.0], [46.2, 178.0], [46.3, 178.0], [46.4, 178.0], [46.5, 178.0], [46.6, 179.0], [46.7, 179.0], [46.8, 179.0], [46.9, 179.0], [47.0, 179.0], [47.1, 179.0], [47.2, 179.0], [47.3, 179.0], [47.4, 179.0], [47.5, 179.0], [47.6, 179.0], [47.7, 179.0], [47.8, 179.0], [47.9, 180.0], [48.0, 180.0], [48.1, 180.0], [48.2, 180.0], [48.3, 180.0], [48.4, 180.0], [48.5, 180.0], [48.6, 180.0], [48.7, 180.0], [48.8, 180.0], [48.9, 181.0], [49.0, 181.0], [49.1, 181.0], [49.2, 181.0], [49.3, 181.0], [49.4, 181.0], [49.5, 181.0], [49.6, 182.0], [49.7, 182.0], [49.8, 182.0], [49.9, 182.0], [50.0, 182.0], [50.1, 182.0], [50.2, 182.0], [50.3, 182.0], [50.4, 182.0], [50.5, 183.0], [50.6, 183.0], [50.7, 183.0], [50.8, 183.0], [50.9, 183.0], [51.0, 184.0], [51.1, 184.0], [51.2, 184.0], [51.3, 184.0], [51.4, 184.0], [51.5, 185.0], [51.6, 185.0], [51.7, 185.0], [51.8, 185.0], [51.9, 185.0], [52.0, 185.0], [52.1, 185.0], [52.2, 185.0], [52.3, 185.0], [52.4, 186.0], [52.5, 186.0], [52.6, 186.0], [52.7, 186.0], [52.8, 186.0], [52.9, 186.0], [53.0, 186.0], [53.1, 186.0], [53.2, 186.0], [53.3, 187.0], [53.4, 187.0], [53.5, 187.0], [53.6, 187.0], [53.7, 187.0], [53.8, 187.0], [53.9, 187.0], [54.0, 187.0], [54.1, 187.0], [54.2, 187.0], [54.3, 188.0], [54.4, 188.0], [54.5, 188.0], [54.6, 188.0], [54.7, 188.0], [54.8, 188.0], [54.9, 188.0], [55.0, 188.0], [55.1, 188.0], [55.2, 188.0], [55.3, 189.0], [55.4, 189.0], [55.5, 189.0], [55.6, 189.0], [55.7, 189.0], [55.8, 189.0], [55.9, 189.0], [56.0, 189.0], [56.1, 189.0], [56.2, 190.0], [56.3, 190.0], [56.4, 190.0], [56.5, 190.0], [56.6, 190.0], [56.7, 190.0], [56.8, 191.0], [56.9, 191.0], [57.0, 191.0], [57.1, 191.0], [57.2, 191.0], [57.3, 191.0], [57.4, 191.0], [57.5, 192.0], [57.6, 192.0], [57.7, 192.0], [57.8, 192.0], [57.9, 192.0], [58.0, 193.0], [58.1, 193.0], [58.2, 193.0], [58.3, 193.0], [58.4, 194.0], [58.5, 194.0], [58.6, 194.0], [58.7, 194.0], [58.8, 194.0], [58.9, 195.0], [59.0, 195.0], [59.1, 195.0], [59.2, 195.0], [59.3, 196.0], [59.4, 196.0], [59.5, 196.0], [59.6, 196.0], [59.7, 197.0], [59.8, 197.0], [59.9, 197.0], [60.0, 197.0], [60.1, 198.0], [60.2, 198.0], [60.3, 198.0], [60.4, 198.0], [60.5, 198.0], [60.6, 199.0], [60.7, 199.0], [60.8, 199.0], [60.9, 199.0], [61.0, 199.0], [61.1, 200.0], [61.2, 200.0], [61.3, 200.0], [61.4, 200.0], [61.5, 200.0], [61.6, 201.0], [61.7, 201.0], [61.8, 201.0], [61.9, 201.0], [62.0, 202.0], [62.1, 202.0], [62.2, 202.0], [62.3, 202.0], [62.4, 203.0], [62.5, 203.0], [62.6, 203.0], [62.7, 203.0], [62.8, 203.0], [62.9, 204.0], [63.0, 204.0], [63.1, 204.0], [63.2, 204.0], [63.3, 204.0], [63.4, 205.0], [63.5, 205.0], [63.6, 205.0], [63.7, 206.0], [63.8, 206.0], [63.9, 206.0], [64.0, 207.0], [64.1, 207.0], [64.2, 207.0], [64.3, 207.0], [64.4, 207.0], [64.5, 208.0], [64.6, 208.0], [64.7, 209.0], [64.8, 209.0], [64.9, 209.0], [65.0, 210.0], [65.1, 210.0], [65.2, 211.0], [65.3, 211.0], [65.4, 212.0], [65.5, 212.0], [65.6, 212.0], [65.7, 213.0], [65.8, 214.0], [65.9, 214.0], [66.0, 215.0], [66.1, 215.0], [66.2, 216.0], [66.3, 218.0], [66.4, 220.0], [66.5, 222.0], [66.6, 222.0], [66.7, 224.0], [66.8, 225.0], [66.9, 227.0], [67.0, 227.0], [67.1, 231.0], [67.2, 232.0], [67.3, 233.0], [67.4, 234.0], [67.5, 236.0], [67.6, 237.0], [67.7, 239.0], [67.8, 239.0], [67.9, 240.0], [68.0, 241.0], [68.1, 242.0], [68.2, 243.0], [68.3, 244.0], [68.4, 245.0], [68.5, 245.0], [68.6, 246.0], [68.7, 247.0], [68.8, 248.0], [68.9, 248.0], [69.0, 249.0], [69.1, 249.0], [69.2, 250.0], [69.3, 250.0], [69.4, 251.0], [69.5, 251.0], [69.6, 252.0], [69.7, 253.0], [69.8, 253.0], [69.9, 254.0], [70.0, 255.0], [70.1, 255.0], [70.2, 257.0], [70.3, 259.0], [70.4, 261.0], [70.5, 262.0], [70.6, 263.0], [70.7, 265.0], [70.8, 266.0], [70.9, 266.0], [71.0, 267.0], [71.1, 267.0], [71.2, 268.0], [71.3, 268.0], [71.4, 268.0], [71.5, 269.0], [71.6, 270.0], [71.7, 270.0], [71.8, 271.0], [71.9, 271.0], [72.0, 272.0], [72.1, 273.0], [72.2, 274.0], [72.3, 275.0], [72.4, 276.0], [72.5, 277.0], [72.6, 279.0], [72.7, 281.0], [72.8, 282.0], [72.9, 282.0], [73.0, 283.0], [73.1, 285.0], [73.2, 288.0], [73.3, 291.0], [73.4, 292.0], [73.5, 293.0], [73.6, 294.0], [73.7, 294.0], [73.8, 295.0], [73.9, 296.0], [74.0, 297.0], [74.1, 299.0], [74.2, 300.0], [74.3, 301.0], [74.4, 302.0], [74.5, 302.0], [74.6, 304.0], [74.7, 305.0], [74.8, 306.0], [74.9, 307.0], [75.0, 307.0], [75.1, 307.0], [75.2, 308.0], [75.3, 309.0], [75.4, 310.0], [75.5, 311.0], [75.6, 312.0], [75.7, 313.0], [75.8, 314.0], [75.9, 316.0], [76.0, 319.0], [76.1, 321.0], [76.2, 322.0], [76.3, 323.0], [76.4, 324.0], [76.5, 325.0], [76.6, 326.0], [76.7, 327.0], [76.8, 327.0], [76.9, 328.0], [77.0, 329.0], [77.1, 329.0], [77.2, 330.0], [77.3, 331.0], [77.4, 333.0], [77.5, 336.0], [77.6, 339.0], [77.7, 342.0], [77.8, 342.0], [77.9, 343.0], [78.0, 343.0], [78.1, 344.0], [78.2, 345.0], [78.3, 348.0], [78.4, 351.0], [78.5, 353.0], [78.6, 353.0], [78.7, 354.0], [78.8, 357.0], [78.9, 360.0], [79.0, 362.0], [79.1, 363.0], [79.2, 368.0], [79.3, 370.0], [79.4, 377.0], [79.5, 393.0], [79.6, 396.0], [79.7, 408.0], [79.8, 433.0], [79.9, 450.0], [80.0, 491.0], [80.1, 514.0], [80.2, 607.0], [80.3, 662.0], [80.4, 714.0], [80.5, 824.0], [80.6, 913.0], [80.7, 990.0], [80.8, 1076.0], [80.9, 1137.0], [81.0, 1198.0], [81.1, 1256.0], [81.2, 1307.0], [81.3, 1385.0], [81.4, 1431.0], [81.5, 1499.0], [81.6, 1674.0], [81.7, 1778.0], [81.8, 1871.0], [81.9, 1915.0], [82.0, 2032.0], [82.1, 2123.0], [82.2, 2149.0], [82.3, 2187.0], [82.4, 2310.0], [82.5, 2358.0], [82.6, 2418.0], [82.7, 2655.0], [82.8, 2891.0], [82.9, 3070.0], [83.0, 3180.0], [83.1, 3335.0], [83.2, 3625.0], [83.3, 3805.0], [83.4, 3958.0], [83.5, 4156.0], [83.6, 4409.0], [83.7, 4952.0], [83.8, 5226.0], [83.9, 5648.0], [84.0, 5957.0], [84.1, 6215.0], [84.2, 6442.0], [84.3, 6703.0], [84.4, 7067.0], [84.5, 7143.0], [84.6, 7151.0], [84.7, 7190.0], [84.8, 7252.0], [84.9, 7513.0], [85.0, 7601.0], [85.1, 7684.0], [85.2, 7761.0], [85.3, 8192.0], [85.4, 8303.0], [85.5, 8365.0], [85.6, 8721.0], [85.7, 9110.0], [85.8, 9453.0], [85.9, 9540.0], [86.0, 9653.0], [86.1, 9739.0], [86.2, 9769.0], [86.3, 10150.0], [86.4, 10622.0], [86.5, 10700.0], [86.6, 11033.0], [86.7, 11037.0], [86.8, 11240.0], [86.9, 11312.0], [87.0, 11368.0], [87.1, 11398.0], [87.2, 11710.0], [87.3, 12013.0], [87.4, 12059.0], [87.5, 12092.0], [87.6, 12095.0], [87.7, 12167.0], [87.8, 12208.0], [87.9, 12221.0], [88.0, 12377.0], [88.1, 12743.0], [88.2, 13209.0], [88.3, 13336.0], [88.4, 13435.0], [88.5, 13451.0], [88.6, 13841.0], [88.7, 13861.0], [88.8, 13866.0], [88.9, 13917.0], [89.0, 14203.0], [89.1, 14228.0], [89.2, 14388.0], [89.3, 14448.0], [89.4, 14452.0], [89.5, 14469.0], [89.6, 14741.0], [89.7, 15186.0], [89.8, 15428.0], [89.9, 15882.0], [90.0, 15885.0], [90.1, 16214.0], [90.2, 16487.0], [90.3, 16992.0], [90.4, 17257.0], [90.5, 17418.0], [90.6, 17454.0], [90.7, 17507.0], [90.8, 17519.0], [90.9, 17523.0], [91.0, 17526.0], [91.1, 17832.0], [91.2, 18100.0], [91.3, 18299.0], [91.4, 18377.0], [91.5, 18386.0], [91.6, 18416.0], [91.7, 18424.0], [91.8, 18466.0], [91.9, 18615.0], [92.0, 18708.0], [92.1, 18833.0], [92.2, 19042.0], [92.3, 19369.0], [92.4, 19740.0], [92.5, 19880.0], [92.6, 19892.0], [92.7, 19898.0], [92.8, 20113.0], [92.9, 20145.0], [93.0, 20173.0], [93.1, 20498.0], [93.2, 20648.0], [93.3, 21163.0], [93.4, 21195.0], [93.5, 21223.0], [93.6, 21535.0], [93.7, 22678.0], [93.8, 25140.0], [93.9, 25193.0], [94.0, 25226.0], [94.1, 25239.0], [94.2, 25270.0], [94.3, 25827.0], [94.4, 27284.0], [94.5, 27507.0], [94.6, 28210.0], [94.7, 30930.0], [94.8, 32279.0], [94.9, 33308.0], [95.0, 33680.0], [95.1, 34139.0], [95.2, 34940.0], [95.3, 35074.0], [95.4, 35575.0], [95.5, 37507.0], [95.6, 38634.0], [95.7, 40394.0], [95.8, 40629.0], [95.9, 42484.0], [96.0, 44163.0], [96.1, 44979.0], [96.2, 47634.0], [96.3, 52820.0], [96.4, 54678.0], [96.5, 56478.0], [96.6, 63302.0], [96.7, 64258.0], [96.8, 66575.0], [96.9, 67765.0], [97.0, 68899.0], [97.1, 74040.0], [97.2, 75110.0], [97.3, 79401.0], [97.4, 83720.0], [97.5, 86062.0], [97.6, 90220.0], [97.7, 98454.0], [97.8, 100080.0], [97.9, 100101.0], [98.0, 100114.0], [98.1, 100125.0], [98.2, 100133.0], [98.3, 100140.0], [98.4, 100145.0], [98.5, 100149.0], [98.6, 100192.0], [98.7, 100243.0], [98.8, 100455.0], [98.9, 101095.0], [99.0, 108610.0], [99.1, 128158.0], [99.2, 129033.0], [99.3, 134303.0], [99.4, 134940.0], [99.5, 135430.0], [99.6, 135743.0], [99.7, 153879.0], [99.8, 254411.0], [99.9, 254534.0], [100.0, 254777.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 44918.0, "series": [{"data": [[0.0, 10247.0], [135200.0, 31.0], [139300.0, 1.0], [148900.0, 4.0], [187300.0, 1.0], [254500.0, 81.0], [68300.0, 3.0], [66700.0, 18.0], [73100.0, 4.0], [76300.0, 1.0], [85900.0, 3.0], [82700.0, 1.0], [87500.0, 2.0], [95500.0, 2.0], [100300.0, 6.0], [101900.0, 2.0], [108300.0, 9.0], [125900.0, 23.0], [129100.0, 1.0], [153000.0, 2.0], [100.0, 44918.0], [32900.0, 2.0], [134700.0, 42.0], [34500.0, 3.0], [35300.0, 21.0], [37700.0, 1.0], [38500.0, 2.0], [39300.0, 7.0], [42500.0, 4.0], [44100.0, 44.0], [44900.0, 19.0], [43300.0, 10.0], [46500.0, 4.0], [45700.0, 1.0], [48100.0, 3.0], [48900.0, 3.0], [47300.0, 4.0], [50500.0, 5.0], [49700.0, 1.0], [200.0, 11799.0], [51300.0, 2.0], [56100.0, 2.0], [57700.0, 4.0], [63300.0, 39.0], [62500.0, 2.0], [64100.0, 2.0], [67400.0, 6.0], [300.0, 4975.0], [73800.0, 3.0], [78600.0, 1.0], [83400.0, 14.0], [89800.0, 2.0], [94600.0, 1.0], [97800.0, 1.0], [101000.0, 82.0], [400.0, 368.0], [105800.0, 3.0], [107400.0, 2.0], [120200.0, 1.0], [128200.0, 21.0], [500.0, 107.0], [135600.0, 1.0], [600.0, 160.0], [700.0, 111.0], [800.0, 80.0], [900.0, 122.0], [1000.0, 106.0], [1100.0, 156.0], [1200.0, 177.0], [1300.0, 104.0], [1400.0, 169.0], [1500.0, 61.0], [1600.0, 58.0], [1700.0, 64.0], [1800.0, 129.0], [1900.0, 119.0], [2000.0, 86.0], [2100.0, 210.0], [2300.0, 163.0], [2200.0, 84.0], [2400.0, 35.0], [2500.0, 57.0], [2600.0, 32.0], [2800.0, 81.0], [2700.0, 19.0], [2900.0, 23.0], [3000.0, 58.0], [3100.0, 93.0], [3200.0, 59.0], [3300.0, 20.0], [3400.0, 32.0], [3500.0, 45.0], [3700.0, 37.0], [3600.0, 59.0], [3800.0, 55.0], [3900.0, 60.0], [4000.0, 21.0], [4200.0, 19.0], [4300.0, 8.0], [68100.0, 3.0], [4100.0, 106.0], [66500.0, 2.0], [4600.0, 15.0], [4400.0, 9.0], [4500.0, 20.0], [69700.0, 13.0], [4700.0, 10.0], [4800.0, 38.0], [5100.0, 54.0], [5000.0, 30.0], [79300.0, 1.0], [4900.0, 1.0], [5200.0, 11.0], [5300.0, 27.0], [82500.0, 2.0], [84100.0, 2.0], [5500.0, 19.0], [5400.0, 7.0], [5600.0, 68.0], [5800.0, 16.0], [5700.0, 16.0], [6100.0, 25.0], [5900.0, 29.0], [6000.0, 57.0], [6200.0, 25.0], [6300.0, 62.0], [100100.0, 661.0], [6500.0, 38.0], [6600.0, 43.0], [6400.0, 10.0], [6700.0, 43.0], [6800.0, 20.0], [6900.0, 16.0], [7100.0, 293.0], [7000.0, 23.0], [7400.0, 65.0], [7200.0, 64.0], [7300.0, 10.0], [7600.0, 129.0], [7500.0, 98.0], [7700.0, 75.0], [7800.0, 24.0], [7900.0, 8.0], [8000.0, 20.0], [8100.0, 22.0], [127300.0, 1.0], [8600.0, 37.0], [8200.0, 84.0], [8400.0, 14.0], [9200.0, 35.0], [9000.0, 18.0], [8800.0, 22.0], [9600.0, 97.0], [9400.0, 69.0], [153400.0, 6.0], [10200.0, 33.0], [10000.0, 3.0], [9800.0, 24.0], [10400.0, 19.0], [10600.0, 101.0], [166200.0, 1.0], [10800.0, 3.0], [11000.0, 157.0], [11200.0, 122.0], [11600.0, 26.0], [11400.0, 43.0], [11800.0, 16.0], [12000.0, 286.0], [12200.0, 129.0], [12600.0, 19.0], [12400.0, 30.0], [12800.0, 31.0], [13200.0, 79.0], [13000.0, 7.0], [13800.0, 284.0], [13600.0, 25.0], [13400.0, 161.0], [14200.0, 197.0], [14000.0, 16.0], [14800.0, 45.0], [14400.0, 304.0], [14600.0, 1.0], [15200.0, 35.0], [15000.0, 5.0], [15600.0, 5.0], [15400.0, 39.0], [15800.0, 145.0], [16200.0, 54.0], [16000.0, 18.0], [16400.0, 33.0], [17200.0, 74.0], [16800.0, 7.0], [18400.0, 289.0], [17600.0, 6.0], [18000.0, 50.0], [18800.0, 84.0], [19200.0, 6.0], [19600.0, 2.0], [20000.0, 53.0], [20400.0, 23.0], [20800.0, 11.0], [21200.0, 129.0], [22000.0, 2.0], [22400.0, 5.0], [21600.0, 29.0], [23200.0, 5.0], [22800.0, 4.0], [24000.0, 19.0], [23600.0, 1.0], [24400.0, 2.0], [25200.0, 286.0], [24800.0, 2.0], [26000.0, 20.0], [26800.0, 27.0], [27600.0, 3.0], [27200.0, 16.0], [28000.0, 33.0], [28400.0, 2.0], [28800.0, 6.0], [29200.0, 3.0], [30400.0, 2.0], [31200.0, 2.0], [32000.0, 11.0], [34400.0, 36.0], [33600.0, 38.0], [135100.0, 7.0], [138300.0, 1.0], [36800.0, 5.0], [35200.0, 2.0], [37600.0, 9.0], [38400.0, 2.0], [147900.0, 4.0], [39200.0, 1.0], [40800.0, 8.0], [42400.0, 28.0], [41600.0, 2.0], [43200.0, 7.0], [45600.0, 8.0], [46400.0, 1.0], [47200.0, 4.0], [50400.0, 5.0], [49600.0, 1.0], [52800.0, 44.0], [55200.0, 2.0], [54400.0, 4.0], [58400.0, 3.0], [60800.0, 2.0], [61600.0, 4.0], [62400.0, 2.0], [63200.0, 23.0], [64000.0, 2.0], [65600.0, 1.0], [68800.0, 5.0], [75200.0, 4.0], [78400.0, 1.0], [84800.0, 1.0], [86400.0, 1.0], [91200.0, 2.0], [92800.0, 2.0], [97600.0, 3.0], [96000.0, 1.0], [105600.0, 11.0], [112000.0, 2.0], [128000.0, 11.0], [131200.0, 1.0], [147200.0, 1.0], [153600.0, 7.0], [135300.0, 16.0], [151300.0, 1.0], [67100.0, 2.0], [68700.0, 7.0], [73500.0, 6.0], [75100.0, 113.0], [79900.0, 1.0], [89500.0, 2.0], [92700.0, 2.0], [99100.0, 2.0], [100700.0, 1.0], [127900.0, 3.0], [34700.0, 1.0], [33900.0, 8.0], [36300.0, 6.0], [35500.0, 25.0], [146700.0, 1.0], [38700.0, 1.0], [153100.0, 12.0], [37900.0, 1.0], [39500.0, 4.0], [40300.0, 11.0], [41100.0, 2.0], [44300.0, 2.0], [45100.0, 13.0], [47500.0, 1.0], [48300.0, 3.0], [50700.0, 1.0], [52300.0, 3.0], [53100.0, 9.0], [54700.0, 3.0], [55500.0, 2.0], [60300.0, 2.0], [59500.0, 2.0], [64300.0, 5.0], [63500.0, 2.0], [67800.0, 17.0], [66200.0, 9.0], [72600.0, 1.0], [75800.0, 31.0], [74200.0, 2.0], [80600.0, 1.0], [91800.0, 4.0], [90200.0, 57.0], [96600.0, 3.0], [95000.0, 1.0], [99800.0, 1.0], [134800.0, 13.0], [147600.0, 4.0], [135700.0, 24.0], [68500.0, 16.0], [73300.0, 1.0], [79700.0, 1.0], [82900.0, 1.0], [89300.0, 2.0], [92500.0, 2.0], [103700.0, 3.0], [108500.0, 8.0], [127700.0, 9.0], [129300.0, 12.0], [152600.0, 2.0], [168600.0, 2.0], [17300.0, 20.0], [16900.0, 41.0], [16500.0, 17.0], [17700.0, 14.0], [18100.0, 44.0], [18900.0, 15.0], [19300.0, 96.0], [18500.0, 49.0], [19700.0, 18.0], [20100.0, 243.0], [20500.0, 46.0], [21300.0, 3.0], [22500.0, 12.0], [22100.0, 6.0], [23300.0, 4.0], [22900.0, 1.0], [24100.0, 2.0], [24500.0, 1.0], [25300.0, 5.0], [26100.0, 4.0], [26500.0, 2.0], [26900.0, 15.0], [27300.0, 51.0], [28100.0, 7.0], [28500.0, 1.0], [29300.0, 3.0], [29700.0, 1.0], [30900.0, 43.0], [32500.0, 1.0], [34600.0, 6.0], [134300.0, 17.0], [33000.0, 1.0], [36200.0, 5.0], [143900.0, 1.0], [35400.0, 44.0], [38600.0, 28.0], [153500.0, 3.0], [39400.0, 3.0], [40200.0, 4.0], [163100.0, 12.0], [41000.0, 1.0], [169500.0, 37.0], [43400.0, 3.0], [44200.0, 24.0], [45000.0, 16.0], [46600.0, 2.0], [45800.0, 1.0], [48200.0, 2.0], [49800.0, 3.0], [50600.0, 2.0], [51400.0, 4.0], [52200.0, 1.0], [54600.0, 96.0], [55400.0, 2.0], [59400.0, 3.0], [61800.0, 4.0], [65000.0, 3.0], [64200.0, 64.0], [66000.0, 2.0], [74000.0, 2.0], [80400.0, 2.0], [83600.0, 23.0], [91600.0, 2.0], [94800.0, 2.0], [101200.0, 25.0], [99600.0, 2.0], [104400.0, 1.0], [114000.0, 1.0], [112400.0, 7.0], [117200.0, 1.0], [128400.0, 16.0], [133600.0, 9.0], [144100.0, 1.0], [153700.0, 1.0], [69100.0, 2.0], [67500.0, 3.0], [72300.0, 1.0], [73900.0, 24.0], [81900.0, 2.0], [129900.0, 4.0], [128300.0, 1.0], [132200.0, 1.0], [135400.0, 66.0], [148200.0, 2.0], [33300.0, 30.0], [133100.0, 13.0], [34100.0, 37.0], [34900.0, 42.0], [36500.0, 18.0], [145900.0, 5.0], [37300.0, 6.0], [38900.0, 29.0], [40500.0, 1.0], [39700.0, 9.0], [42100.0, 3.0], [171500.0, 9.0], [41300.0, 13.0], [44500.0, 3.0], [46100.0, 6.0], [45300.0, 5.0], [48500.0, 4.0], [49300.0, 2.0], [55700.0, 1.0], [57300.0, 2.0], [56500.0, 1.0], [60500.0, 7.0], [65300.0, 5.0], [63700.0, 2.0], [254700.0, 30.0], [64500.0, 2.0], [66600.0, 2.0], [73000.0, 1.0], [69800.0, 1.0], [79400.0, 1.0], [85800.0, 45.0], [93800.0, 3.0], [90600.0, 1.0], [95400.0, 1.0], [97000.0, 1.0], [100200.0, 151.0], [98600.0, 4.0], [127400.0, 1.0], [129000.0, 32.0], [130600.0, 1.0], [143600.0, 2.0], [134900.0, 39.0], [141300.0, 12.0], [67300.0, 14.0], [65700.0, 2.0], [72100.0, 2.0], [80100.0, 1.0], [81700.0, 2.0], [83300.0, 2.0], [88100.0, 2.0], [94500.0, 3.0], [128100.0, 50.0], [8500.0, 10.0], [8300.0, 115.0], [8700.0, 42.0], [9100.0, 39.0], [8900.0, 7.0], [9500.0, 75.0], [9300.0, 4.0], [9700.0, 188.0], [9900.0, 15.0], [10100.0, 18.0], [10700.0, 21.0], [10300.0, 4.0], [10500.0, 5.0], [10900.0, 4.0], [11100.0, 36.0], [11700.0, 43.0], [11300.0, 202.0], [11500.0, 9.0], [11900.0, 30.0], [12100.0, 163.0], [12700.0, 21.0], [12300.0, 85.0], [12500.0, 13.0], [13300.0, 68.0], [13100.0, 12.0], [12900.0, 7.0], [13500.0, 14.0], [13700.0, 23.0], [14300.0, 43.0], [13900.0, 5.0], [14100.0, 17.0], [14700.0, 12.0], [14500.0, 45.0], [15300.0, 49.0], [14900.0, 24.0], [15100.0, 10.0], [15500.0, 25.0], [16100.0, 27.0], [15900.0, 10.0], [16300.0, 16.0], [16600.0, 6.0], [17400.0, 122.0], [17000.0, 26.0], [17800.0, 93.0], [18200.0, 47.0], [18600.0, 93.0], [19000.0, 29.0], [19400.0, 43.0], [19800.0, 282.0], [20200.0, 5.0], [21000.0, 4.0], [20600.0, 70.0], [21400.0, 3.0], [22200.0, 8.0], [23000.0, 7.0], [23400.0, 6.0], [22600.0, 19.0], [24200.0, 4.0], [23800.0, 5.0], [25000.0, 5.0], [25400.0, 34.0], [24600.0, 4.0], [25800.0, 3.0], [26200.0, 3.0], [27400.0, 20.0], [28200.0, 12.0], [28600.0, 4.0], [29400.0, 15.0], [30600.0, 1.0], [30200.0, 3.0], [31000.0, 1.0], [31400.0, 3.0], [31800.0, 11.0], [32200.0, 56.0], [33200.0, 38.0], [34800.0, 1.0], [133500.0, 3.0], [34000.0, 34.0], [36400.0, 4.0], [35600.0, 2.0], [37200.0, 3.0], [38800.0, 6.0], [149500.0, 1.0], [40400.0, 86.0], [39600.0, 4.0], [41200.0, 13.0], [42000.0, 2.0], [43600.0, 18.0], [44400.0, 6.0], [45200.0, 2.0], [47600.0, 2.0], [48400.0, 2.0], [50000.0, 1.0], [50800.0, 6.0], [53200.0, 9.0], [51600.0, 2.0], [52400.0, 3.0], [210300.0, 2.0], [54000.0, 2.0], [56400.0, 2.0], [59600.0, 1.0], [62800.0, 2.0], [65200.0, 1.0], [68000.0, 2.0], [66400.0, 24.0], [72800.0, 1.0], [74400.0, 2.0], [77600.0, 1.0], [79200.0, 1.0], [80800.0, 3.0], [82400.0, 5.0], [92000.0, 2.0], [96800.0, 2.0], [100000.0, 151.0], [98400.0, 8.0], [108000.0, 1.0], [127200.0, 6.0], [128800.0, 6.0], [148800.0, 1.0], [254400.0, 72.0], [133700.0, 3.0], [66300.0, 9.0], [69500.0, 25.0], [72700.0, 2.0], [75900.0, 1.0], [80700.0, 3.0], [82300.0, 3.0], [98300.0, 1.0], [104700.0, 1.0], [130300.0, 3.0], [153800.0, 1.0], [33500.0, 27.0], [34300.0, 24.0], [135500.0, 18.0], [145100.0, 2.0], [35900.0, 3.0], [37500.0, 59.0], [38300.0, 2.0], [40700.0, 8.0], [39100.0, 2.0], [41500.0, 3.0], [42300.0, 2.0], [43900.0, 1.0], [43100.0, 1.0], [44700.0, 2.0], [46300.0, 10.0], [47100.0, 2.0], [45500.0, 1.0], [49500.0, 7.0], [50300.0, 2.0], [52700.0, 1.0], [53500.0, 4.0], [55100.0, 1.0], [58300.0, 1.0], [57500.0, 1.0], [61500.0, 3.0], [64700.0, 6.0], [65500.0, 2.0], [67000.0, 1.0], [68600.0, 3.0], [71800.0, 1.0], [75000.0, 16.0], [78200.0, 1.0], [79800.0, 1.0], [81400.0, 2.0], [87800.0, 3.0], [89400.0, 1.0], [86200.0, 2.0], [94200.0, 1.0], [95800.0, 2.0], [107000.0, 11.0], [108600.0, 8.0], [133200.0, 4.0], [149200.0, 7.0], [137300.0, 2.0], [150100.0, 2.0], [239700.0, 23.0], [69300.0, 2.0], [66100.0, 1.0], [67700.0, 53.0], [74100.0, 1.0], [83700.0, 30.0], [85300.0, 2.0], [88500.0, 1.0], [98100.0, 2.0], [99700.0, 2.0], [104500.0, 5.0], [114100.0, 5.0], [16700.0, 26.0], [17100.0, 44.0], [18300.0, 196.0], [17500.0, 346.0], [17900.0, 6.0], [18700.0, 72.0], [19500.0, 4.0], [19900.0, 18.0], [20300.0, 6.0], [20700.0, 15.0], [21100.0, 150.0], [21500.0, 20.0], [22300.0, 11.0], [21900.0, 1.0], [23100.0, 2.0], [22700.0, 2.0], [23900.0, 3.0], [25100.0, 123.0], [25500.0, 8.0], [24700.0, 3.0], [26300.0, 5.0], [25900.0, 9.0], [27500.0, 42.0], [28300.0, 4.0], [27900.0, 11.0], [28700.0, 15.0], [32700.0, 3.0], [32300.0, 20.0], [34200.0, 9.0], [33400.0, 15.0], [35800.0, 21.0], [36600.0, 2.0], [35000.0, 60.0], [37400.0, 6.0], [148700.0, 1.0], [38200.0, 1.0], [40600.0, 9.0], [41400.0, 4.0], [42200.0, 2.0], [44600.0, 31.0], [45400.0, 6.0], [46200.0, 2.0], [48600.0, 2.0], [49400.0, 2.0], [52600.0, 2.0], [55000.0, 2.0], [53400.0, 8.0], [54200.0, 1.0], [55800.0, 2.0], [56600.0, 1.0], [58200.0, 3.0], [57400.0, 2.0], [59800.0, 4.0], [60600.0, 3.0], [61400.0, 1.0], [64600.0, 2.0], [63800.0, 1.0], [66800.0, 22.0], [68400.0, 2.0], [74800.0, 1.0], [84400.0, 2.0], [86000.0, 44.0], [82800.0, 1.0], [89200.0, 27.0], [90800.0, 2.0], [97200.0, 2.0], [95600.0, 1.0], [100400.0, 19.0], [98800.0, 1.0], [108400.0, 5.0], [129200.0, 12.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 254700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 323.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 72307.0, "series": [{"data": [[0.0, 72307.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1296.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16378.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 323.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 204.3061728395063, "minX": 1.68288396E12, "maxY": 3000.0, "series": [{"data": [[1.68288402E12, 3000.0], [1.68288432E12, 204.3061728395063], [1.6828842E12, 2978.2011419673017], [1.68288426E12, 1308.414118954975], [1.68288408E12, 3000.0], [1.68288414E12, 3000.0], [1.68288396E12, 2999.8509190737773]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288432E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 47.0, "minX": 10.0, "maxY": 100215.25, "series": [{"data": [[10.0, 100148.0], [11.0, 100147.0], [13.0, 100146.0], [14.0, 100144.5], [16.0, 100145.75], [18.0, 100145.83333333334], [19.0, 100145.5], [20.0, 100146.0], [22.0, 100145.66666666667], [26.0, 100145.0], [27.0, 100145.0], [29.0, 100145.0], [30.0, 100145.0], [31.0, 100145.0], [33.0, 100144.0], [32.0, 100144.0], [34.0, 100144.0], [37.0, 100144.0], [36.0, 100143.0], [39.0, 100142.0], [38.0, 100142.0], [41.0, 100143.5], [43.0, 100142.0], [44.0, 100142.0], [47.0, 100140.0], [46.0, 100141.0], [48.0, 100140.0], [51.0, 100139.0], [50.0, 100139.0], [55.0, 100135.0], [54.0, 100135.0], [63.0, 100135.0], [65.0, 100134.0], [64.0, 100135.0], [71.0, 100134.0], [70.0, 100134.0], [69.0, 100134.0], [68.0, 100134.0], [75.0, 100133.0], [72.0, 100134.0], [79.0, 100127.0], [78.0, 100133.0], [77.0, 100133.0], [83.0, 100126.0], [82.0, 100126.0], [90.0, 100125.66666666667], [89.0, 100126.0], [94.0, 100125.0], [99.0, 100112.0], [98.0, 100113.0], [97.0, 100124.0], [96.0, 100125.0], [103.0, 100109.0], [101.0, 100111.0], [100.0, 100111.0], [107.0, 100108.0], [106.0, 100108.0], [105.0, 100109.0], [104.0, 100109.0], [111.0, 100106.0], [110.0, 100106.0], [109.0, 100107.0], [115.0, 100104.5], [113.0, 100106.0], [112.0, 100106.0], [119.0, 100103.0], [117.0, 100103.5], [123.0, 100102.0], [127.0, 100150.0], [126.0, 100113.75], [125.0, 100102.0], [124.0, 100102.0], [134.0, 100101.66666666667], [132.0, 100102.0], [131.0, 100101.0], [128.0, 100102.0], [143.0, 100123.0], [141.0, 100115.33333333333], [138.0, 100101.0], [137.0, 100100.5], [136.0, 100101.0], [150.0, 100095.0], [149.0, 100097.0], [148.0, 100097.0], [147.0, 100144.0], [146.0, 100098.0], [144.0, 100100.0], [159.0, 100134.0], [158.0, 100136.0], [157.0, 100136.0], [156.0, 100139.0], [155.0, 100139.0], [154.0, 100093.0], [153.0, 100094.0], [152.0, 100119.0], [166.0, 100130.0], [165.0, 100131.0], [164.0, 100134.0], [163.0, 100132.0], [162.0, 100132.0], [161.0, 100134.0], [160.0, 100135.0], [174.0, 100119.0], [173.0, 100119.0], [172.0, 100074.0], [171.0, 100126.0], [170.0, 100127.33333333333], [169.0, 100129.0], [183.0, 100101.0], [181.0, 100102.0], [180.0, 100108.4], [179.0, 100108.0], [191.0, 99639.0], [190.0, 99640.0], [189.0, 100068.5], [187.0, 100069.0], [185.0, 100090.0], [184.0, 100091.0], [199.0, 94591.0], [198.0, 94592.0], [197.0, 95599.0], [196.0, 95602.0], [195.0, 96609.0], [194.0, 97621.0], [193.0, 98628.0], [192.0, 98631.0], [207.0, 100202.5], [205.0, 100203.0], [204.0, 100214.0], [203.0, 100215.25], [210.0, 100200.66666666667], [221.0, 100192.0], [220.0, 100194.0], [218.0, 100197.0], [217.0, 100197.0], [216.0, 100196.6], [230.0, 100184.0], [229.0, 100186.0], [227.0, 100187.0], [226.0, 100188.0], [225.0, 100189.75], [237.0, 100179.5], [236.0, 100180.0], [234.0, 100180.0], [233.0, 100183.33333333333], [246.0, 100176.0], [245.0, 100178.0], [244.0, 100179.0], [243.0, 100177.0], [241.0, 100178.0], [240.0, 100178.0], [254.0, 100171.25], [271.0, 100156.0], [270.0, 100159.66666666667], [267.0, 100160.0], [265.0, 100160.5], [263.0, 100170.0], [262.0, 100169.33333333333], [261.0, 100169.0], [259.0, 100169.0], [258.0, 100170.5], [287.0, 100141.5], [286.0, 100141.0], [285.0, 100142.0], [277.0, 100149.25], [276.0, 100150.0], [275.0, 100149.0], [291.0, 100141.0], [301.0, 100137.0], [300.0, 100138.0], [299.0, 100139.0], [298.0, 100139.0], [297.0, 100139.5], [295.0, 100141.0], [293.0, 100141.0], [292.0, 100140.0], [290.0, 100141.0], [289.0, 100141.5], [288.0, 100141.0], [319.0, 100123.0], [318.0, 100122.0], [317.0, 100128.4], [313.0, 100129.5], [312.0, 100129.4], [308.0, 100129.5], [307.0, 100130.0], [306.0, 100130.0], [334.0, 95030.0], [335.0, 97880.0], [333.0, 96038.0], [332.0, 98892.0], [331.0, 99899.0], [330.0, 97049.0], [329.0, 100077.0], [328.0, 100078.0], [327.0, 100117.33333333333], [323.0, 100119.0], [322.0, 100120.0], [320.0, 100121.0], [324.0, 100119.0], [350.0, 89804.0], [351.0, 89803.0], [349.0, 90813.0], [348.0, 90815.0], [347.0, 91823.0], [346.0, 91824.0], [345.0, 92831.0], [344.0, 92834.0], [343.0, 93843.0], [337.0, 96869.0], [336.0, 96873.0], [339.0, 95861.0], [338.0, 95862.0], [342.0, 93843.0], [341.0, 94852.0], [340.0, 94853.0], [366.0, 81728.0], [367.0, 81726.0], [365.0, 82736.0], [364.0, 79887.0], [363.0, 80898.0], [362.0, 80896.0], [361.0, 81905.0], [360.0, 81907.0], [359.0, 82913.0], [353.0, 82428.0], [352.0, 82430.0], [355.0, 81465.0], [354.0, 81420.0], [358.0, 79401.0], [357.0, 80409.0], [356.0, 80459.0], [382.0, 67333.0], [383.0, 67329.0], [381.0, 71807.0], [380.0, 68343.0], [379.0, 69352.0], [378.0, 72819.0], [377.0, 73827.0], [376.0, 73830.0], [375.0, 74837.0], [369.0, 80717.0], [368.0, 80718.0], [371.0, 73389.0], [370.0, 79709.0], [374.0, 77691.0], [373.0, 78698.0], [372.0, 72382.0], [398.0, 65567.0], [399.0, 65566.0], [397.0, 66575.0], [396.0, 66578.0], [395.0, 67587.0], [394.0, 64738.0], [393.0, 65746.0], [392.0, 65751.0], [391.0, 66756.0], [385.0, 66320.0], [384.0, 72640.0], [387.0, 68780.0], [386.0, 65311.0], [390.0, 66758.0], [389.0, 67767.0], [388.0, 67767.0], [414.0, 57490.0], [415.0, 57487.0], [413.0, 58496.0], [412.0, 58498.0], [411.0, 59506.0], [410.0, 59508.0], [409.0, 60515.0], [408.0, 60517.0], [407.0, 61525.0], [401.0, 64556.0], [400.0, 64558.0], [403.0, 63544.0], [402.0, 63548.0], [406.0, 61526.0], [405.0, 62535.0], [404.0, 62537.0], [430.0, 49412.0], [431.0, 49410.0], [429.0, 50419.0], [428.0, 50421.0], [427.0, 51429.0], [426.0, 51431.0], [425.0, 52439.0], [424.0, 52441.0], [423.0, 53453.0], [417.0, 56478.0], [416.0, 56480.0], [419.0, 55468.0], [418.0, 55470.0], [421.0, 54458.0], [420.0, 54460.0], [446.0, 41336.0], [447.0, 41334.0], [445.0, 42346.0], [444.0, 42346.0], [443.0, 43353.0], [442.0, 43355.0], [441.0, 44363.0], [440.0, 44364.0], [439.0, 45372.0], [433.0, 48400.0], [432.0, 48402.0], [435.0, 47391.0], [434.0, 47392.0], [438.0, 45375.0], [437.0, 46381.0], [436.0, 46383.0], [462.0, 33259.0], [463.0, 33257.0], [461.0, 34268.0], [460.0, 34269.0], [459.0, 35276.0], [458.0, 35278.0], [457.0, 36286.0], [456.0, 36288.0], [455.0, 37295.0], [449.0, 40327.0], [448.0, 40327.0], [451.0, 39315.0], [450.0, 39317.0], [454.0, 37298.0], [453.0, 38306.0], [452.0, 38307.0], [478.0, 25182.0], [479.0, 25180.0], [477.0, 26190.0], [476.0, 26192.0], [475.0, 27200.0], [474.0, 27201.0], [473.0, 28210.0], [472.0, 28211.0], [471.0, 29219.0], [465.0, 32247.0], [464.0, 32250.0], [467.0, 31239.0], [466.0, 31240.0], [470.0, 29221.0], [469.0, 30228.0], [468.0, 30230.0], [483.0, 35598.0], [494.0, 35072.0], [495.0, 35071.0], [493.0, 35073.5], [482.0, 35928.0], [481.0, 35932.0], [480.0, 35933.0], [491.0, 35073.0], [489.0, 35074.5], [487.0, 23821.0], [486.0, 23823.0], [485.0, 35575.0], [484.0, 35582.0], [510.0, 35054.0], [511.0, 35053.0], [509.0, 35057.0], [508.0, 35059.0], [507.0, 35063.0], [506.0, 35064.0], [505.0, 35064.0], [504.0, 35064.0], [503.0, 35064.0], [497.0, 35071.0], [496.0, 35072.0], [499.0, 35070.0], [498.0, 35070.0], [502.0, 35066.0], [501.0, 35069.5], [540.0, 35010.666666666664], [542.0, 35003.0], [532.0, 35015.0], [530.0, 35016.0], [512.0, 35050.0], [526.0, 35016.0], [524.0, 35017.5], [522.0, 35018.0], [520.0, 35020.0], [534.0, 35014.0], [568.0, 34972.0], [572.0, 34949.0], [560.0, 34984.0], [570.0, 34972.0], [558.0, 34985.0], [544.0, 35001.0], [546.0, 35001.0], [548.0, 34995.0], [556.0, 34985.0], [554.0, 34993.0], [552.0, 34993.0], [564.0, 34972.0], [562.0, 34984.0], [582.0, 34937.0], [602.0, 35535.0], [606.0, 34461.75], [592.0, 22821.0], [580.0, 34940.0], [578.0, 34949.0], [576.0, 34949.0], [590.0, 34574.5], [588.0, 34576.0], [586.0, 34930.0], [598.0, 34137.0], [596.0, 34137.0], [594.0, 34138.0], [632.0, 34104.0], [638.0, 34102.0], [624.0, 34805.5], [636.0, 34103.0], [614.0, 34110.0], [612.0, 34576.0], [608.0, 34811.5], [622.0, 34807.0], [620.0, 34808.0], [628.0, 34105.0], [640.0, 34102.0], [668.0, 34088.0], [664.0, 34788.5], [654.0, 34797.5], [642.0, 34101.5], [646.0, 34099.0], [652.0, 34797.5], [650.0, 34098.5], [648.0, 34099.0], [662.0, 34095.5], [660.0, 35495.0], [658.0, 34795.5], [698.0, 35458.0], [700.0, 35460.5], [702.0, 34760.0], [688.0, 35476.0], [690.0, 35475.0], [696.0, 34062.5], [678.0, 34084.0], [676.0, 34084.0], [686.0, 35477.0], [682.0, 35479.0], [694.0, 34073.0], [692.0, 34077.0], [730.0, 35376.0], [734.0, 35370.0], [722.0, 35408.0], [732.0, 35373.0], [710.0, 35444.5], [706.0, 35458.0], [704.0, 35457.5], [718.0, 35442.0], [716.0, 35443.0], [714.0, 34977.666666666664], [726.0, 35387.0], [760.0, 17755.0], [762.0, 16746.0], [756.0, 20478.0], [752.0, 22171.0], [736.0, 35366.0], [738.0, 35361.0], [740.0, 33961.0], [750.0, 35344.0], [744.0, 33950.0], [758.0, 18764.0], [754.0, 21489.0], [794.0, 9463.5], [798.0, 9456.0], [784.0, 9472.0], [786.0, 9470.0], [788.0, 9469.0], [796.0, 9459.0], [792.0, 9463.0], [774.0, 9481.0], [772.0, 9484.0], [770.0, 9485.75], [768.0, 9486.0], [782.0, 9477.0], [780.0, 9478.0], [790.0, 9465.0], [828.0, 9170.0], [816.0, 9270.0], [818.0, 9261.0], [820.0, 9254.0], [830.0, 9153.0], [826.0, 9187.0], [824.0, 9221.0], [800.0, 9447.0], [802.0, 9444.0], [804.0, 9441.0], [806.0, 9440.0], [814.0, 15604.0], [812.0, 9318.0], [810.0, 9415.0], [808.0, 9439.0], [822.0, 9249.0], [860.0, 9776.0], [862.0, 9776.5], [846.0, 9780.0], [832.0, 9131.0], [834.0, 9110.0], [836.0, 9097.0], [838.0, 9080.0], [842.0, 9781.0], [854.0, 9777.5], [852.0, 9298.0], [850.0, 9780.0], [848.0, 9780.0], [890.0, 9769.0], [894.0, 16590.0], [880.0, 9770.0], [882.0, 9769.0], [892.0, 9765.0], [868.0, 9773.0], [864.0, 13189.5], [876.0, 9770.5], [872.0, 14062.333333333332], [886.0, 9769.0], [898.0, 9765.0], [920.0, 13170.5], [924.0, 9757.5], [922.0, 9758.0], [910.0, 9761.0], [900.0, 9765.0], [902.0, 9763.0], [908.0, 16586.0], [906.0, 9763.0], [904.0, 9764.0], [918.0, 9759.0], [912.0, 9761.0], [958.0, 9740.0], [946.0, 9747.666666666666], [956.0, 9743.0], [930.0, 9753.0], [942.0, 18294.5], [938.0, 9751.0], [936.0, 9753.0], [950.0, 9746.0], [948.0, 9745.0], [988.0, 9726.0], [990.0, 9724.0], [978.0, 9732.0], [976.0, 9733.4], [986.0, 9728.666666666666], [966.0, 8773.0], [962.0, 9737.0], [960.0, 9741.0], [974.0, 9734.0], [982.0, 9729.0], [1016.0, 9652.0], [1020.0, 9651.0], [998.0, 9698.0], [994.0, 9700.0], [992.0, 9722.5], [1006.0, 9676.0], [1004.0, 9676.0], [1014.0, 9651.5], [1012.0, 16479.0], [1076.0, 9602.0], [1084.0, 9585.0], [1056.0, 9617.0], [1060.0, 9612.0], [1080.0, 9585.0], [1036.0, 9631.0], [1032.0, 9639.5], [1028.0, 9645.0], [1024.0, 22521.0], [1052.0, 9623.0], [1048.0, 9625.5], [1044.0, 9626.5], [1040.0, 16454.0], [1068.0, 9602.0], [1096.0, 16395.0], [1144.0, 9515.666666666666], [1140.0, 14066.666666666666], [1136.0, 9517.0], [1092.0, 9581.0], [1132.0, 9534.0], [1116.0, 9535.0], [1112.0, 12959.5], [1108.0, 9549.0], [1200.0, 8189.333333333333], [1212.0, 8181.0], [1188.0, 9411.0], [1184.0, 16255.0], [1204.0, 15012.5], [1180.0, 16278.0], [1152.0, 9508.0], [1156.0, 9503.0], [1160.0, 9486.0], [1164.0, 12411.0], [1176.0, 9453.0], [1168.0, 16279.0], [1196.0, 8191.0], [1192.0, 14491.0], [1224.0, 6347.0], [1276.0, 11382.5], [1272.0, 11384.0], [1228.0, 11679.0], [1220.0, 13174.0], [1216.0, 8177.0], [1236.0, 10675.0], [1232.0, 12185.0], [1260.0, 15947.0], [1252.0, 11390.0], [1336.0, 11344.0], [1340.0, 11344.0], [1328.0, 11363.0], [1280.0, 11381.0], [1288.0, 11379.5], [1292.0, 11379.0], [1296.0, 11377.0], [1324.0, 11367.0], [1320.0, 11367.0], [1404.0, 11239.5], [1388.0, 11267.0], [1384.0, 11277.0], [1376.0, 11285.333333333334], [1400.0, 11246.0], [1396.0, 11249.0], [1392.0, 11256.0], [1356.0, 11303.0], [1344.0, 11333.0], [1372.0, 11287.0], [1368.0, 11291.666666666666], [1364.0, 11292.0], [1360.0, 11297.0], [1456.0, 14193.5], [1460.0, 10219.0], [1444.0, 20296.0], [1448.0, 22839.0], [1452.0, 17221.0], [1408.0, 20359.0], [1416.0, 11228.0], [1420.0, 14249.0], [1432.0, 11205.0], [1428.0, 11209.0], [1424.0, 11212.0], [1484.0, 19332.0], [1524.0, 8640.0], [1528.0, 7419.0], [1504.0, 10185.0], [1508.0, 16229.0], [1516.0, 13188.0], [1480.0, 10212.0], [1476.0, 13254.333333333334], [1472.0, 14776.0], [1500.0, 12213.0], [1496.0, 16249.0], [1492.0, 10200.5], [1488.0, 16260.0], [1592.0, 14516.0], [1572.0, 11457.0], [1576.0, 14526.0], [1580.0, 14524.0], [1596.0, 12401.0], [1588.0, 11926.0], [1584.0, 12985.0], [1536.0, 14025.0], [1540.0, 12532.5], [1544.0, 15557.0], [1548.0, 5753.0], [1564.0, 11937.0], [1560.0, 11460.0], [1556.0, 13474.0], [1612.0, 14498.0], [1652.0, 14458.0], [1656.0, 15728.5], [1636.0, 14472.5], [1608.0, 13475.666666666666], [1604.0, 13438.0], [1600.0, 12397.0], [1624.0, 14479.0], [1620.0, 12380.0], [1616.0, 13441.0], [1716.0, 14172.5], [1724.0, 14169.0], [1696.0, 14271.0], [1704.0, 16988.0], [1664.0, 14280.0], [1676.0, 14190.0], [1688.0, 16992.0], [1684.0, 12914.0], [1740.0, 11352.0], [1752.0, 14395.0], [1764.0, 11322.0], [1744.0, 11829.0], [1756.0, 11325.0], [1736.0, 12384.0], [1760.0, 11324.0], [1768.0, 11321.5], [1772.0, 11320.0], [1780.0, 11311.0], [1852.0, 11203.0], [1848.0, 12166.0], [1828.0, 11225.0], [1824.0, 11261.0], [1832.0, 11220.0], [1836.0, 11855.333333333334], [1844.0, 11214.0], [1840.0, 11216.0], [1796.0, 11300.0], [1804.0, 12251.0], [1820.0, 11742.0], [1812.0, 11265.0], [1808.0, 13137.666666666666], [1908.0, 13166.0], [1912.0, 12687.0], [1916.0, 12107.0], [1896.0, 14226.0], [1856.0, 11191.0], [1860.0, 12135.5], [1864.0, 13181.0], [1876.0, 13180.0], [1900.0, 11155.0], [1960.0, 226.0], [1924.0, 12106.0], [1920.0, 13164.5], [2020.0, 221.66666666666666], [2028.0, 221.0], [2024.0, 222.66666666666666], [2016.0, 223.00000000000003], [2012.0, 222.5], [2152.0, 162.0], [2128.0, 167.0], [2144.0, 162.33333333333334], [2104.0, 183.0], [2088.0, 204.4], [2080.0, 204.0], [2264.0, 9763.0], [2296.0, 8349.0], [2288.0, 8354.5], [2280.0, 9057.5], [2192.0, 116.0], [2208.0, 2328.0], [2368.0, 12951.5], [2424.0, 6028.333333333333], [2376.0, 9662.0], [2392.0, 7201.666666666667], [2408.0, 7636.0], [2312.0, 8325.0], [2344.0, 8288.0], [2496.0, 5697.333333333334], [2520.0, 394.0], [2536.0, 6166.333333333333], [2528.0, 3201.0], [2560.0, 377.0], [2792.0, 2164.3846153846157], [2808.0, 9817.0], [2752.0, 331.6666666666667], [2760.0, 327.0], [2768.0, 329.4], [2776.0, 4645.571428571428], [2712.0, 330.5555555555555], [2744.0, 330.46153846153845], [2736.0, 329.0], [2728.0, 331.3333333333333], [2920.0, 199.0], [2936.0, 192.66666666666666], [2888.0, 255.0], [2896.0, 262.0], [2912.0, 197.5], [2840.0, 5648.0], [2832.0, 5649.0], [2872.0, 268.41666666666663], [3000.0, 5870.754553707867], [2952.0, 188.0], [2960.0, 173.0], [2992.0, 171.13043478260875], [2984.0, 172.0], [2113.0, 168.0], [2161.0, 161.33333333333334], [2121.0, 168.0], [2129.0, 167.0], [2137.0, 166.0], [2105.0, 183.0], [2089.0, 204.0], [2289.0, 9753.0], [2281.0, 16300.0], [2241.0, 9070.5], [2257.0, 9765.0], [2297.0, 8347.0], [2273.0, 9061.0], [2193.0, 79.0], [2185.0, 124.0], [2233.0, 9773.5], [2225.0, 185.7142857142857], [2209.0, 189.0], [2377.0, 7119.0], [2401.0, 7662.0], [2305.0, 10477.5], [2361.0, 8914.4], [2345.0, 8286.0], [2337.0, 8306.0], [2497.0, 7519.0], [2521.0, 2793.1666666666665], [2553.0, 4779.5], [2545.0, 2765.666666666667], [2801.0, 325.0], [2753.0, 1390.5], [2761.0, 329.0], [2777.0, 9822.0], [2809.0, 8786.333333333334], [2785.0, 2085.2], [2713.0, 329.5], [2745.0, 328.75], [2737.0, 1279.3], [2729.0, 330.6666666666667], [2721.0, 330.28571428571433], [2929.0, 198.0], [2905.0, 262.0], [2913.0, 199.0], [2841.0, 5648.0], [2857.0, 271.0], [2945.0, 194.5], [2953.0, 188.25], [2985.0, 172.0], [2969.0, 173.0], [1037.0, 9630.0], [1057.0, 9618.0], [1077.0, 8637.0], [1073.0, 9601.0], [1025.0, 9647.0], [1053.0, 8660.0], [1049.0, 9624.0], [1045.0, 8664.0], [1041.0, 9628.0], [1065.0, 11884.333333333334], [1141.0, 9517.0], [1149.0, 11789.0], [1125.0, 15970.0], [1145.0, 9516.0], [1101.0, 9568.0], [1097.0, 9568.0], [1113.0, 9544.0], [1109.0, 9549.0], [1105.0, 14117.666666666666], [1133.0, 9051.0], [1209.0, 8180.5], [1213.0, 8181.5], [1185.0, 22301.0], [1189.0, 14752.0], [1205.0, 8185.0], [1157.0, 22363.0], [1161.0, 9481.0], [1181.0, 14451.125], [1197.0, 8191.0], [1193.0, 8196.0], [1265.0, 11385.5], [1253.0, 11390.0], [1249.0, 11397.0], [1269.0, 15945.0], [1225.0, 6344.0], [1221.0, 24840.0], [1217.0, 14977.0], [1233.0, 5360.0], [1261.0, 11386.0], [1329.0, 11363.0], [1341.0, 11339.0], [1313.0, 11372.0], [1333.0, 14263.0], [1285.0, 11380.5], [1289.0, 11380.0], [1309.0, 11374.0], [1305.0, 14416.333333333334], [1301.0, 11376.0], [1325.0, 11364.0], [1317.0, 15932.5], [1401.0, 11245.0], [1393.0, 11253.0], [1389.0, 11265.0], [1385.0, 11272.0], [1381.0, 11278.0], [1377.0, 11279.0], [1373.0, 11286.0], [1349.0, 11327.5], [1369.0, 11291.0], [1361.0, 11295.0], [1465.0, 14778.5], [1441.0, 18759.0], [1445.0, 15735.0], [1449.0, 17222.0], [1453.0, 17002.0], [1469.0, 13242.0], [1457.0, 9654.0], [1409.0, 11237.0], [1413.0, 11231.5], [1437.0, 11186.666666666666], [1433.0, 11190.0], [1429.0, 11208.0], [1425.0, 11213.0], [1525.0, 7849.0], [1533.0, 7974.0], [1505.0, 16233.0], [1509.0, 16229.0], [1513.0, 13193.5], [1517.0, 16214.0], [1521.0, 16199.0], [1485.0, 10210.0], [1481.0, 16263.0], [1477.0, 10213.0], [1473.0, 10215.0], [1501.0, 19310.0], [1493.0, 10198.0], [1489.0, 16259.0], [1585.0, 14519.0], [1569.0, 12414.0], [1573.0, 14527.0], [1577.0, 12406.0], [1581.0, 11454.0], [1537.0, 14024.0], [1541.0, 7971.0], [1545.0, 15556.5], [1549.0, 5752.0], [1565.0, 11459.0], [1553.0, 11983.5], [1605.0, 14499.0], [1633.0, 14476.0], [1637.0, 14473.0], [1649.0, 14469.0], [1601.0, 11432.0], [1629.0, 14477.0], [1621.0, 14492.0], [1617.0, 14493.0], [1713.0, 12769.5], [1721.0, 11362.0], [1701.0, 14183.0], [1717.0, 16979.0], [1665.0, 15727.0], [1669.0, 16999.0], [1673.0, 16997.0], [1677.0, 14189.0], [1693.0, 16990.0], [1689.0, 16991.0], [1685.0, 14449.0], [1681.0, 14187.5], [1741.0, 16965.0], [1737.0, 16974.0], [1749.0, 11326.0], [1753.0, 11326.0], [1777.0, 11315.0], [1733.0, 16975.5], [1761.0, 11324.0], [1769.0, 11321.0], [1773.0, 11316.0], [1789.0, 11306.5], [1785.0, 12712.5], [1781.0, 11311.0], [1853.0, 11203.0], [1825.0, 11252.0], [1829.0, 11224.0], [1833.0, 11219.0], [1793.0, 11300.0], [1797.0, 11299.0], [1801.0, 11296.0], [1805.0, 11295.0], [1821.0, 11263.0], [1817.0, 11264.0], [1813.0, 11266.0], [1861.0, 12130.0], [1913.0, 14222.0], [1909.0, 13164.0], [1857.0, 14253.0], [1869.0, 14454.0], [1885.0, 11476.666666666666], [1877.0, 16781.0], [1873.0, 12120.5], [1973.0, 228.0], [1965.0, 225.0], [2029.0, 222.0], [2017.0, 223.0], [2013.0, 223.0], [2130.0, 167.0], [2138.0, 165.0], [2162.0, 161.0], [2106.0, 183.0], [2082.0, 204.85714285714286], [2282.0, 9755.0], [2298.0, 8347.0], [2250.0, 8954.666666666666], [2266.0, 9763.0], [2274.0, 9760.0], [2202.0, 47.0], [2194.0, 78.0], [2234.0, 7230.0], [2226.0, 1219.0], [2386.0, 8275.25], [2394.0, 7236.666666666667], [2402.0, 6258.0], [2314.0, 9724.0], [2354.0, 8983.5], [2346.0, 7142.0], [2338.0, 7160.0], [2498.0, 4986.25], [2522.0, 5192.0], [2554.0, 7504.0], [2546.0, 4061.8], [2538.0, 3556.0], [2810.0, 6691.0], [2802.0, 325.45454545454544], [2754.0, 4441.5], [2762.0, 330.0], [2770.0, 330.1111111111111], [2778.0, 327.0], [2786.0, 2106.5], [2714.0, 329.4], [2746.0, 1453.3999999999996], [2738.0, 331.3333333333333], [2730.0, 330.0], [2722.0, 329.0], [2898.0, 267.0], [2938.0, 195.125], [2906.0, 264.625], [2930.0, 196.8181818181818], [2922.0, 197.875], [2842.0, 5648.0], [2858.0, 269.41666666666663], [2946.0, 195.66666666666666], [2954.0, 188.0], [2986.0, 172.0], [2123.0, 167.0], [2131.0, 164.66666666666666], [2107.0, 182.0], [2091.0, 203.875], [2083.0, 206.33333333333334], [2283.0, 7213.0], [2243.0, 9822.5], [2267.0, 9762.0], [2291.0, 8352.0], [2275.0, 8359.0], [2203.0, 4229.0], [2195.0, 79.0], [2179.0, 126.57142857142858], [2235.0, 8373.0], [2227.0, 1216.0], [2219.0, 186.0], [2211.0, 188.5], [2323.0, 8366.8], [2403.0, 6249.0], [2387.0, 8207.0], [2411.0, 7082.333333333333], [2371.0, 8817.0], [2379.0, 9646.0], [2315.0, 9717.0], [2331.0, 11214.0], [2363.0, 9681.0], [2355.0, 8983.5], [2339.0, 12275.0], [2499.0, 5376.6], [2555.0, 5999.0], [2523.0, 9888.0], [2795.0, 324.0], [2763.0, 330.0], [2771.0, 333.0], [2779.0, 330.20000000000005], [2787.0, 330.0], [2715.0, 329.8], [2747.0, 837.9285714285713], [2739.0, 329.0], [2731.0, 1859.3333333333335], [2723.0, 330.0], [2931.0, 198.0], [2891.0, 266.5], [2923.0, 197.4], [2915.0, 197.5], [2835.0, 5649.0], [2859.0, 271.5], [2955.0, 187.0], [2963.0, 173.0], [2987.0, 172.0], [541.0, 35004.0], [543.0, 35003.0], [529.0, 35016.0], [531.0, 35015.0], [537.0, 35011.5], [517.0, 35020.5], [515.0, 35047.0], [513.0, 35049.0], [527.0, 35016.0], [525.0, 35017.0], [521.0, 35019.0], [535.0, 35013.0], [533.0, 35015.0], [571.0, 34964.0], [573.0, 34950.0], [569.0, 34972.0], [545.0, 35001.0], [547.0, 35000.0], [551.0, 34994.0], [549.0, 34994.0], [555.0, 34987.0], [553.0, 34992.0], [565.0, 34973.0], [563.0, 34977.0], [581.0, 34939.0], [595.0, 35537.0], [601.0, 34136.0], [583.0, 34931.0], [577.0, 34949.0], [591.0, 22823.0], [587.0, 34929.0], [585.0, 34929.0], [599.0, 34137.0], [593.0, 34139.0], [625.0, 35505.0], [627.0, 34806.0], [637.0, 34103.0], [635.0, 35502.333333333336], [615.0, 34110.0], [609.0, 34111.0], [617.0, 35508.0], [631.0, 34104.0], [629.0, 34105.0], [669.0, 34087.0], [671.0, 35484.5], [667.0, 35486.0], [665.0, 35488.0], [645.0, 34100.0], [643.0, 35499.0], [647.0, 34099.0], [657.0, 34795.5], [679.0, 34084.0], [691.0, 35475.0], [689.0, 34077.0], [697.0, 34062.0], [677.0, 35483.0], [673.0, 35484.0], [687.0, 34776.5], [683.0, 34079.0], [681.0, 34782.5], [693.0, 34073.0], [733.0, 35370.0], [735.0, 35369.0], [721.0, 35408.0], [725.0, 34693.0], [723.0, 33994.0], [731.0, 35376.0], [729.0, 35385.5], [705.0, 34060.0], [719.0, 35411.0], [717.0, 35443.0], [715.0, 35443.0], [713.0, 34045.0], [727.0, 33987.0], [743.0, 33954.0], [763.0, 16745.0], [753.0, 22169.0], [761.0, 17752.0], [751.0, 35337.0], [737.0, 35365.0], [739.0, 35360.0], [741.0, 35355.0], [749.0, 35345.0], [747.0, 35344.0], [745.0, 33948.0], [759.0, 18763.0], [757.0, 20476.0], [755.0, 21486.0], [797.0, 9459.0], [799.0, 9453.0], [785.0, 9471.0], [787.0, 9470.0], [789.0, 9466.0], [795.0, 9464.0], [775.0, 9480.0], [771.0, 9485.0], [783.0, 9476.0], [781.0, 9477.0], [779.0, 9479.0], [777.0, 9480.5], [791.0, 9464.0], [829.0, 9163.0], [831.0, 9137.0], [817.0, 9262.0], [819.0, 9261.0], [821.0, 9249.0], [827.0, 9179.0], [825.0, 9204.0], [815.0, 15601.0], [801.0, 9446.0], [803.0, 9443.0], [805.0, 9441.0], [807.0, 9440.0], [813.0, 9297.0], [811.0, 9410.0], [809.0, 9417.0], [823.0, 9232.0], [859.0, 9778.0], [857.0, 9778.0], [851.0, 9780.0], [833.0, 9120.0], [835.0, 9107.0], [837.0, 9088.0], [839.0, 9073.0], [845.0, 9781.0], [841.0, 9781.5], [855.0, 9777.0], [891.0, 16591.0], [895.0, 9765.0], [885.0, 12043.333333333334], [893.0, 9767.0], [889.0, 9767.5], [869.0, 9773.0], [867.0, 9774.0], [865.0, 9776.0], [879.0, 16207.0], [877.0, 9772.0], [875.0, 9770.0], [873.0, 9771.0], [887.0, 9768.0], [925.0, 9753.0], [927.0, 9753.0], [921.0, 16582.0], [897.0, 9766.0], [899.0, 9765.0], [901.0, 9764.5], [909.0, 16585.0], [907.0, 9762.0], [917.0, 9758.5], [915.0, 12034.666666666666], [953.0, 9102.333333333334], [959.0, 9739.0], [957.0, 9744.0], [955.0, 9744.5], [943.0, 9748.0], [929.0, 9271.0], [931.0, 9751.0], [935.0, 9752.0], [933.0, 16576.0], [941.0, 9748.0], [939.0, 9750.0], [937.0, 9751.0], [949.0, 9744.0], [947.0, 9745.0], [967.0, 9736.333333333334], [979.0, 9730.0], [989.0, 9725.0], [987.0, 9727.0], [963.0, 9738.0], [961.0, 9739.0], [975.0, 9733.0], [969.0, 9733.5], [983.0, 9729.0], [981.0, 9729.0], [999.0, 9699.0], [1021.0, 9651.333333333334], [1023.0, 9650.0], [1017.0, 9653.0], [997.0, 13989.333333333332], [993.0, 9699.0], [1007.0, 9656.0], [1005.0, 8712.0], [1003.0, 9677.0], [1001.0, 9676.5], [1015.0, 9651.0], [1011.0, 9655.25], [1082.0, 12516.0], [1086.0, 9102.5], [1058.0, 16442.0], [1066.0, 9607.0], [1062.0, 9610.0], [1078.0, 16424.0], [1074.0, 9601.0], [1038.0, 9629.0], [1034.0, 9638.5], [1030.0, 9639.0], [1050.0, 9625.0], [1046.0, 9627.0], [1042.0, 9628.0], [1070.0, 16428.0], [1098.0, 9568.0], [1146.0, 9514.0], [1150.0, 9514.0], [1102.0, 11843.0], [1094.0, 12983.0], [1134.0, 9533.0], [1130.0, 16358.0], [1118.0, 9051.5], [1114.0, 9543.0], [1110.0, 9548.0], [1106.0, 9567.0], [1206.0, 8183.0], [1214.0, 21050.0], [1202.0, 8188.5], [1158.0, 9487.0], [1162.0, 22352.0], [1166.0, 9480.0], [1194.0, 8192.0], [1190.0, 14751.0], [1230.0, 12185.0], [1278.0, 11382.5], [1270.0, 11385.0], [1266.0, 17437.0], [1226.0, 13168.0], [1222.0, 19221.0], [1218.0, 12690.0], [1234.0, 12184.0], [1258.0, 11387.0], [1250.0, 11396.0], [1282.0, 11381.0], [1318.0, 20491.0], [1342.0, 11338.0], [1310.0, 15934.0], [1286.0, 20502.0], [1294.0, 11377.0], [1306.0, 11374.0], [1302.0, 11376.0], [1298.0, 15937.5], [1322.0, 20488.0], [1314.0, 11372.0], [1394.0, 11253.0], [1390.0, 11265.0], [1386.0, 11272.0], [1398.0, 11249.5], [1358.0, 11304.0], [1354.0, 11326.666666666666], [1346.0, 11332.0], [1370.0, 11290.0], [1362.0, 11296.0], [1462.0, 10218.0], [1446.0, 11174.0], [1466.0, 10217.0], [1470.0, 10215.0], [1450.0, 11171.0], [1454.0, 11169.0], [1458.0, 9653.0], [1410.0, 11234.0], [1418.0, 15785.0], [1422.0, 15780.5], [1438.0, 11186.0], [1434.0, 11189.0], [1530.0, 14026.0], [1510.0, 10168.0], [1506.0, 10180.0], [1514.0, 16214.0], [1518.0, 16213.0], [1526.0, 7846.0], [1522.0, 16187.0], [1486.0, 19331.0], [1478.0, 16264.0], [1502.0, 16239.0], [1498.0, 10196.0], [1494.0, 10198.0], [1490.0, 10202.0], [1598.0, 15786.5], [1570.0, 11458.0], [1574.0, 12411.0], [1578.0, 12412.0], [1582.0, 12407.0], [1586.0, 12405.0], [1538.0, 14024.0], [1550.0, 5534.0], [1566.0, 11458.0], [1562.0, 13472.0], [1558.0, 11461.0], [1554.0, 11983.0], [1658.0, 15728.5], [1662.0, 17000.0], [1634.0, 12362.0], [1638.0, 14472.0], [1642.0, 13448.666666666666], [1646.0, 14469.666666666666], [1654.0, 14458.5], [1650.0, 14468.0], [1614.0, 14075.2], [1602.0, 12387.0], [1630.0, 14477.0], [1626.0, 14478.0], [1622.0, 17034.0], [1722.0, 11362.0], [1698.0, 14446.0], [1702.0, 16990.0], [1706.0, 14181.0], [1718.0, 11366.0], [1714.0, 16980.5], [1694.0, 11377.0], [1670.0, 13397.5], [1678.0, 11382.0], [1690.0, 16991.0], [1686.0, 16992.0], [1682.0, 16993.0], [1742.0, 11351.0], [1786.0, 11309.0], [1750.0, 11326.0], [1746.0, 11350.5], [1758.0, 16938.0], [1738.0, 11352.0], [1730.0, 11361.0], [1762.0, 16937.0], [1766.0, 11322.0], [1770.0, 12277.0], [1850.0, 14489.5], [1826.0, 11239.0], [1830.0, 11221.0], [1854.0, 16809.0], [1846.0, 11691.0], [1822.0, 14332.0], [1794.0, 12323.333333333334], [1802.0, 11295.0], [1818.0, 11264.0], [1814.0, 12800.0], [1810.0, 14336.0], [1866.0, 12125.0], [1890.0, 11407.25], [1898.0, 14225.0], [1914.0, 12108.0], [1886.0, 11158.0], [1858.0, 14252.0], [1862.0, 14243.0], [1870.0, 16783.0], [1878.0, 14236.0], [1874.0, 12125.0], [1902.0, 11632.0], [1962.0, 225.0], [1922.0, 12106.0], [2026.0, 221.5], [2018.0, 222.25], [2014.0, 224.0], [2010.0, 223.0], [2124.0, 166.33333333333331], [2132.0, 166.0], [2156.0, 162.25], [2108.0, 182.0], [2100.0, 204.0], [2092.0, 204.14285714285714], [2084.0, 204.5], [2284.0, 9755.0], [2300.0, 7187.0], [2244.0, 8370.0], [2252.0, 8367.5], [2260.0, 11517.25], [2276.0, 7215.0], [2204.0, 4226.0], [2196.0, 71.0], [2188.0, 124.0], [2228.0, 208.0], [2220.0, 186.5], [2372.0, 11168.0], [2412.0, 7547.0], [2380.0, 8246.0], [2396.0, 7663.5], [2404.0, 6248.0], [2364.0, 8409.5], [2356.0, 9681.0], [2340.0, 7159.0], [2500.0, 3204.5], [2516.0, 3204.0], [2524.0, 393.0], [2548.0, 390.0], [2532.0, 2172.5], [2804.0, 326.0], [2756.0, 329.25], [2764.0, 328.0], [2772.0, 329.0], [2780.0, 6409.5], [2788.0, 2469.769230769231], [2716.0, 329.6], [2748.0, 331.6666666666667], [2740.0, 8637.5], [2732.0, 330.0], [2724.0, 330.0], [2924.0, 195.0], [2892.0, 265.75], [2900.0, 258.25], [2940.0, 195.22222222222223], [2916.0, 196.6], [2844.0, 8490.0], [2836.0, 7994.0], [2876.0, 262.0], [2860.0, 269.75], [2948.0, 195.0], [2956.0, 173.0], [2980.0, 172.0], [2157.0, 160.5], [2165.0, 160.0], [2149.0, 162.0], [2109.0, 181.0], [2101.0, 202.4], [2093.0, 204.0], [2085.0, 203.99999999999997], [2277.0, 9758.0], [2261.0, 8366.0], [2293.0, 12758.0], [2285.0, 9756.0], [2205.0, 3218.0], [2197.0, 51.0], [2189.0, 124.0], [2237.0, 9071.5], [2229.0, 207.0], [2421.0, 7145.444444444444], [2405.0, 6247.0], [2381.0, 16169.0], [2397.0, 6265.0], [2309.0, 9401.5], [2317.0, 9197.5], [2333.0, 12980.5], [2349.0, 8836.333333333334], [2341.0, 16231.0], [2557.0, 5127.5], [2501.0, 4785.5], [2525.0, 4271.972972972973], [2541.0, 9171.0], [2533.0, 4395.2], [2805.0, 2005.3333333333333], [2757.0, 327.3333333333333], [2765.0, 330.2], [2773.0, 330.5], [2797.0, 326.5], [2789.0, 325.6666666666667], [2717.0, 330.0], [2749.0, 331.5], [2741.0, 1934.7142857142853], [2733.0, 332.3333333333333], [2725.0, 331.0], [2917.0, 199.0], [2933.0, 194.66666666666666], [2909.0, 248.2], [2837.0, 6701.666666666667], [2989.0, 171.0], [2949.0, 194.83333333333334], [2957.0, 173.0], [2973.0, 172.0], [1075.0, 16038.5], [1059.0, 16437.0], [1079.0, 9589.0], [1083.0, 9586.0], [1035.0, 9639.0], [1027.0, 13056.5], [1055.0, 9617.5], [1051.0, 9623.0], [1071.0, 16426.0], [1067.0, 9608.0], [1123.0, 9533.2], [1127.0, 9532.0], [1151.0, 9508.0], [1139.0, 9516.0], [1095.0, 8607.0], [1115.0, 9540.0], [1107.0, 9568.0], [1135.0, 16357.0], [1131.0, 11807.666666666666], [1207.0, 8182.0], [1215.0, 8176.0], [1187.0, 16254.0], [1211.0, 15005.0], [1183.0, 19299.5], [1155.0, 9505.666666666666], [1159.0, 9487.0], [1167.0, 9455.0], [1179.0, 9451.0], [1171.0, 9454.5], [1195.0, 8192.0], [1191.0, 14494.0], [1231.0, 15209.0], [1267.0, 11386.0], [1271.0, 11384.0], [1279.0, 11382.0], [1251.0, 13214.0], [1227.0, 11681.0], [1223.0, 13172.0], [1219.0, 12688.0], [1235.0, 10678.0], [1263.0, 11386.0], [1255.0, 15949.0], [1335.0, 11345.5], [1343.0, 11339.0], [1315.0, 11372.0], [1339.0, 11344.333333333334], [1311.0, 11372.0], [1283.0, 11381.0], [1291.0, 11378.0], [1307.0, 11374.0], [1299.0, 11376.0], [1323.0, 11366.5], [1319.0, 11368.0], [1407.0, 11239.333333333334], [1387.0, 11267.0], [1383.0, 15167.0], [1379.0, 14782.0], [1391.0, 11256.0], [1403.0, 11240.0], [1395.0, 11251.0], [1347.0, 11328.0], [1351.0, 11326.5], [1359.0, 11302.0], [1355.0, 11326.0], [1371.0, 11287.0], [1367.0, 11291.0], [1363.0, 11296.0], [1463.0, 13244.5], [1443.0, 17225.0], [1447.0, 11173.0], [1467.0, 10216.0], [1459.0, 10221.0], [1439.0, 20296.0], [1411.0, 11232.0], [1415.0, 11229.0], [1423.0, 11215.0], [1431.0, 11205.0], [1427.0, 11209.0], [1527.0, 7420.0], [1531.0, 12535.0], [1507.0, 16230.0], [1511.0, 10168.0], [1519.0, 10150.0], [1523.0, 8642.0], [1487.0, 16261.0], [1483.0, 10211.0], [1503.0, 10185.0], [1495.0, 10197.0], [1595.0, 12082.666666666666], [1571.0, 11458.0], [1575.0, 11456.0], [1599.0, 12397.0], [1579.0, 11450.0], [1591.0, 12084.333333333334], [1567.0, 12414.0], [1547.0, 10995.0], [1551.0, 5533.0], [1559.0, 12415.0], [1651.0, 17003.0], [1659.0, 17000.0], [1639.0, 11402.0], [1643.0, 14471.0], [1631.0, 14477.0], [1627.0, 14477.0], [1623.0, 14479.0], [1619.0, 14493.0], [1727.0, 11362.25], [1719.0, 11363.0], [1703.0, 13246.666666666666], [1711.0, 16980.0], [1667.0, 15727.0], [1671.0, 11384.0], [1679.0, 14452.0], [1691.0, 16991.5], [1731.0, 11679.666666666666], [1751.0, 269.0], [1747.0, 11327.0], [1755.0, 11644.666666666666], [1739.0, 11352.0], [1759.0, 11802.0], [1791.0, 11300.0], [1763.0, 11323.0], [1771.0, 12276.0], [1787.0, 11307.0], [1779.0, 11310.0], [1847.0, 11211.0], [1855.0, 16805.0], [1827.0, 11228.0], [1831.0, 11220.0], [1839.0, 11217.0], [1851.0, 12160.0], [1843.0, 12238.666666666666], [1799.0, 11297.0], [1803.0, 11295.5], [1815.0, 11265.0], [1811.0, 12221.0], [1911.0, 14223.0], [1895.0, 10943.2], [1899.0, 12111.0], [1907.0, 13660.333333333334], [1867.0, 14238.0], [1871.0, 14238.5], [1967.0, 226.0], [1923.0, 12105.666666666666], [2031.0, 221.0], [2023.0, 222.0], [2015.0, 222.17857142857144], [2011.0, 222.5], [2158.0, 161.0], [2102.0, 203.0], [2086.0, 204.0], [2294.0, 9750.0], [2262.0, 9764.0], [2302.0, 8883.0], [2286.0, 16297.0], [2206.0, 3216.0], [2222.0, 186.0], [2318.0, 8317.0], [2406.0, 7645.0], [2374.0, 8264.0], [2382.0, 8212.0], [2398.0, 6264.0], [2310.0, 9725.0], [2334.0, 9708.5], [2366.0, 9680.0], [2358.0, 8284.0], [2342.0, 8287.0], [2550.0, 5691.666666666667], [2502.0, 9175.0], [2518.0, 5193.0], [2526.0, 393.0], [2558.0, 9547.0], [2542.0, 7513.0], [2806.0, 5940.0], [2758.0, 330.0], [2766.0, 327.0], [2774.0, 328.8333333333333], [2718.0, 330.0], [2750.0, 331.6], [2742.0, 330.08333333333326], [2734.0, 330.25], [2942.0, 197.0], [2934.0, 193.33333333333331], [2846.0, 7271.466666666665], [2838.0, 7012.375], [2830.0, 5649.0], [2862.0, 266.6666666666667], [2990.0, 171.0], [2151.0, 161.0], [2119.0, 169.0], [2159.0, 162.0], [2127.0, 166.0], [2135.0, 166.0], [2111.0, 181.5], [2103.0, 183.0], [2095.0, 203.0], [2087.0, 204.5], [2279.0, 13635.0], [2303.0, 9729.0], [2247.0, 9301.333333333334], [2255.0, 8451.666666666666], [2271.0, 8140.0], [2295.0, 8347.0], [2207.0, 2331.0], [2191.0, 123.42857142857143], [2183.0, 124.0], [2239.0, 8498.5], [2231.0, 9826.5], [2407.0, 7644.0], [2375.0, 8264.0], [2391.0, 7668.0], [2399.0, 7662.0], [2367.0, 9680.0], [2327.0, 10090.75], [2335.0, 8306.0], [2351.0, 8283.0], [2343.0, 9687.0], [2559.0, 378.0], [2527.0, 5524.533333333334], [2551.0, 390.0], [2791.0, 4058.0], [2807.0, 326.0], [2775.0, 5946.0], [2783.0, 329.0], [2799.0, 327.3333333333333], [2719.0, 330.0], [2751.0, 330.4], [2743.0, 330.0], [2735.0, 2067.142857142857], [2943.0, 195.38461538461542], [2919.0, 197.0], [2895.0, 253.5], [2911.0, 197.15384615384616], [2935.0, 197.0], [2871.0, 269.625], [2863.0, 270.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2950.014340450028, 6421.672605864724]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3402.0, "minX": 1.68288396E12, "maxY": 245707.95, "series": [{"data": [[1.68288402E12, 204528.41666666666], [1.68288432E12, 4883.816666666667], [1.6828842E12, 185319.21666666667], [1.68288426E12, 19569.666666666668], [1.68288408E12, 245707.95], [1.68288414E12, 222644.65], [1.68288396E12, 202511.53333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68288402E12, 142296.0], [1.68288432E12, 3402.0], [1.6828842E12, 128982.0], [1.68288426E12, 15111.6], [1.68288408E12, 171645.6], [1.68288414E12, 154467.6], [1.68288396E12, 139935.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288432E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2457.145082358553, "minX": 1.68288396E12, "maxY": 96124.76296296297, "series": [{"data": [[1.68288402E12, 8623.379042690813], [1.68288432E12, 96124.76296296297], [1.6828842E12, 6812.8475214118935], [1.68288426E12, 14894.083935519733], [1.68288408E12, 6419.022572922239], [1.68288414E12, 4874.526734926081], [1.68288396E12, 2457.145082358553]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288432E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2226.7408689424597, "minX": 1.68288396E12, "maxY": 96124.75308641979, "series": [{"data": [[1.68288402E12, 8543.24508996823], [1.68288432E12, 96124.75308641979], [1.6828842E12, 5920.363612769256], [1.68288426E12, 14894.07281823235], [1.68288408E12, 6221.219328675418], [1.68288414E12, 4498.563302454083], [1.68288396E12, 2226.7408689424597]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288432E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.18024691358024672, "minX": 1.68288396E12, "maxY": 3579.879562222115, "series": [{"data": [[1.68288402E12, 568.0964953545812], [1.68288432E12, 0.18024691358024672], [1.6828842E12, 2578.696016091359], [1.68288426E12, 0.5953307392996117], [1.68288408E12, 3579.879562222115], [1.68288414E12, 1509.6398504794415], [1.68288396E12, 349.3090236333255]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288432E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.68288396E12, "maxY": 254777.0, "series": [{"data": [[1.68288402E12, 107094.0], [1.68288432E12, 100216.0], [1.6828842E12, 254777.0], [1.68288426E12, 61526.0], [1.68288408E12, 169583.0], [1.68288414E12, 210394.0], [1.68288396E12, 51356.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68288402E12, 24066.0], [1.68288432E12, 100178.4], [1.6828842E12, 12049.0], [1.68288426E12, 35016.0], [1.68288408E12, 17186.0], [1.68288414E12, 4157.0], [1.68288396E12, 8345.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68288402E12, 100246.0], [1.68288432E12, 100214.94], [1.6828842E12, 239741.0], [1.68288426E12, 53453.0], [1.68288408E12, 135330.97], [1.68288414E12, 100143.0], [1.68288396E12, 37300.40000000009]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68288402E12, 62816.39999999999], [1.68288432E12, 100194.0], [1.6828842E12, 18763.0], [1.68288426E12, 35482.0], [1.68288408E12, 31421.0], [1.68288414E12, 18087.0], [1.68288396E12, 14452.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68288402E12, 8.0], [1.68288432E12, 62535.0], [1.6828842E12, 11.0], [1.68288426E12, 46.0], [1.68288408E12, 10.0], [1.68288414E12, 14.0], [1.68288396E12, 11.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68288402E12, 155.0], [1.68288432E12, 100130.0], [1.6828842E12, 195.0], [1.68288426E12, 11326.0], [1.68288408E12, 186.0], [1.68288414E12, 183.0], [1.68288396E12, 177.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288432E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 42.0, "minX": 1.0, "maxY": 254770.0, "series": [{"data": [[2.0, 58497.0], [3.0, 20646.5], [4.0, 23272.0], [5.0, 25453.0], [6.0, 11860.0], [7.0, 37341.0], [8.0, 21027.0], [9.0, 13174.0], [10.0, 1260.0], [13.0, 7688.0], [15.0, 2062.0], [16.0, 12159.5], [17.0, 254756.0], [19.0, 4594.0], [20.0, 7569.0], [21.0, 36506.0], [22.0, 6701.5], [24.0, 1407.0], [25.0, 7549.0], [26.0, 22311.0], [33.0, 66407.0], [39.0, 3284.0], [38.0, 19043.0], [43.0, 169556.0], [47.0, 544.0], [46.0, 81.0], [48.0, 212.0], [60.0, 1117.5], [66.0, 10217.5], [71.0, 7684.0], [69.0, 75.0], [73.0, 254770.0], [79.0, 202.0], [76.0, 9450.0], [80.0, 12822.0], [91.0, 153.0], [97.0, 6898.5], [103.0, 10644.0], [102.0, 217.5], [106.0, 108.0], [105.0, 39615.0], [111.0, 153.0], [119.0, 13221.0], [116.0, 122.0], [120.0, 158.0], [126.0, 35344.5], [132.0, 100160.0], [142.0, 35000.5], [154.0, 163.0], [158.0, 9665.0], [160.0, 171.0], [162.0, 4172.5], [178.0, 79.0], [182.0, 144.0], [189.0, 76646.0], [188.0, 188.0], [193.0, 118.0], [199.0, 18379.0], [210.0, 382.5], [209.0, 135.0], [213.0, 12304.0], [221.0, 145.0], [218.0, 18087.0], [222.0, 11355.0], [226.0, 198.0], [243.0, 159.0], [250.0, 195.5], [256.0, 135.0], [270.0, 113.0], [260.0, 175.0], [286.0, 176.0], [285.0, 185.0], [282.0, 147.0], [280.0, 185.0], [281.0, 12376.0], [291.0, 19352.0], [295.0, 100.0], [303.0, 153.0], [300.0, 192.0], [299.0, 177.0], [290.0, 178.0], [294.0, 178.0], [301.0, 185.5], [302.0, 175.0], [296.0, 189.0], [298.0, 123.0], [304.0, 167.0], [311.0, 62.0], [316.0, 186.0], [319.0, 179.0], [307.0, 191.0], [305.0, 144.0], [306.0, 175.0], [314.0, 184.0], [310.0, 187.0], [315.0, 180.0], [330.0, 267.0], [333.0, 200.0], [334.0, 314.0], [339.0, 201.0], [344.0, 253.0], [353.0, 8589.0], [362.0, 166.5], [352.0, 14452.0], [355.0, 188.0], [380.0, 19890.0], [370.0, 12148.0], [392.0, 20173.0], [405.0, 310.0], [408.0, 140.0], [414.0, 154.0], [412.0, 166.0], [418.0, 172.0], [434.0, 30932.0], [435.0, 109.0], [455.0, 25239.0], [468.0, 206.0], [490.0, 13858.0], [485.0, 343.0], [480.0, 180.5], [501.0, 190.0], [496.0, 232.0], [518.0, 155.0], [536.0, 21221.0], [569.0, 130.0], [555.0, 175.0], [546.0, 202.0], [548.0, 174.0], [554.0, 173.0], [562.0, 169.0], [573.0, 173.0], [575.0, 282.0], [567.0, 181.0], [566.0, 311.0], [583.0, 244.0], [605.0, 171.0], [597.0, 81.0], [604.0, 179.0], [580.0, 147.0], [579.0, 273.0], [587.0, 166.0], [584.0, 332.0], [595.0, 153.0], [603.0, 322.0], [607.0, 239.0], [619.0, 42.0], [615.0, 72.0], [610.0, 179.0], [654.0, 182.0], [643.0, 91.0], [661.0, 167.0], [655.0, 236.0], [642.0, 189.0], [687.0, 205.0], [701.0, 128.0], [738.0, 169.5], [761.0, 100084.0], [763.0, 187.0], [781.0, 163.0], [834.0, 119.0], [835.0, 212.0], [855.0, 293.0], [891.0, 191.0], [864.0, 17435.0], [886.0, 307.0], [873.0, 3148.0], [907.0, 202.0], [897.0, 167.0], [902.0, 146.0], [904.0, 176.0], [903.0, 323.0], [898.0, 188.0], [924.0, 186.0], [957.0, 161.0], [972.0, 17490.0], [965.0, 272.0], [1069.0, 250.0], [1143.0, 177.0], [1198.0, 260.0], [1225.0, 125.0], [1.0, 96609.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[536.0, 20648.0], [282.0, 83676.0], [605.0, 94245.0], [73.0, 254467.0], [333.0, 104593.0], [339.0, 125915.0], [362.0, 44161.5], [412.0, 85876.0], [835.0, 135741.0], [907.0, 33220.0], [7.0, 104760.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1225.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 254770.0, "series": [{"data": [[2.0, 58497.0], [3.0, 20646.5], [4.0, 23272.0], [5.0, 25453.0], [6.0, 11860.0], [7.0, 37341.0], [8.0, 21027.0], [9.0, 13174.0], [10.0, 1260.0], [13.0, 7688.0], [15.0, 2062.0], [16.0, 12159.5], [17.0, 254756.0], [19.0, 4594.0], [20.0, 7569.0], [21.0, 36506.0], [22.0, 6701.5], [24.0, 1407.0], [25.0, 7549.0], [26.0, 22311.0], [33.0, 66407.0], [39.0, 3284.0], [38.0, 19043.0], [43.0, 169556.0], [47.0, 544.0], [46.0, 81.0], [48.0, 212.0], [60.0, 1117.5], [66.0, 10217.5], [71.0, 7684.0], [69.0, 75.0], [73.0, 254770.0], [79.0, 202.0], [76.0, 9450.0], [80.0, 12821.5], [91.0, 153.0], [97.0, 6898.5], [103.0, 10644.0], [102.0, 217.5], [106.0, 108.0], [105.0, 39615.0], [111.0, 153.0], [119.0, 13221.0], [116.0, 122.0], [120.0, 158.0], [126.0, 35344.5], [132.0, 100160.0], [142.0, 35000.5], [154.0, 163.0], [158.0, 9664.5], [160.0, 171.0], [162.0, 4172.5], [178.0, 79.0], [182.0, 144.0], [189.0, 76646.0], [188.0, 188.0], [193.0, 118.0], [199.0, 18379.0], [210.0, 382.5], [209.0, 135.0], [213.0, 12304.0], [221.0, 145.0], [218.0, 18087.0], [222.0, 11355.0], [226.0, 198.0], [243.0, 159.0], [250.0, 195.5], [256.0, 135.0], [270.0, 113.0], [260.0, 175.0], [286.0, 176.0], [285.0, 185.0], [282.0, 147.0], [280.0, 185.0], [281.0, 12376.0], [291.0, 19352.0], [295.0, 100.0], [303.0, 153.0], [300.0, 192.0], [299.0, 177.0], [290.0, 178.0], [294.0, 178.0], [301.0, 185.0], [302.0, 175.0], [296.0, 189.0], [298.0, 123.0], [304.0, 167.0], [311.0, 62.0], [316.0, 186.0], [319.0, 179.0], [307.0, 191.0], [305.0, 144.0], [306.0, 175.0], [314.0, 184.0], [310.0, 187.0], [315.0, 180.0], [330.0, 267.0], [333.0, 200.0], [334.0, 314.0], [339.0, 201.0], [344.0, 253.0], [353.0, 8589.0], [362.0, 166.5], [352.0, 14452.0], [355.0, 188.0], [380.0, 19890.0], [370.0, 12148.0], [392.0, 20173.0], [405.0, 310.0], [408.0, 140.0], [414.0, 154.0], [412.0, 166.0], [418.0, 172.0], [434.0, 30932.0], [435.0, 109.0], [455.0, 25239.0], [468.0, 206.0], [490.0, 13858.0], [485.0, 343.0], [480.0, 180.5], [501.0, 190.0], [496.0, 232.0], [518.0, 155.0], [536.0, 21221.0], [569.0, 130.0], [555.0, 175.0], [546.0, 202.0], [548.0, 174.0], [554.0, 173.0], [562.0, 169.0], [573.0, 173.0], [575.0, 282.0], [567.0, 181.0], [566.0, 311.0], [583.0, 244.0], [605.0, 171.0], [597.0, 80.0], [604.0, 179.0], [580.0, 147.0], [579.0, 273.0], [587.0, 166.0], [584.0, 332.0], [595.0, 153.0], [603.0, 322.0], [607.0, 239.0], [619.0, 42.0], [615.0, 72.0], [610.0, 179.0], [654.0, 182.0], [643.0, 91.0], [661.0, 167.0], [655.0, 236.0], [642.0, 189.0], [687.0, 205.0], [701.0, 128.0], [738.0, 169.5], [761.0, 100084.0], [763.0, 187.0], [781.0, 163.0], [834.0, 119.0], [835.0, 212.0], [855.0, 293.0], [891.0, 191.0], [864.0, 17435.0], [886.0, 307.0], [873.0, 3148.0], [907.0, 197.0], [897.0, 167.0], [902.0, 145.5], [904.0, 176.0], [903.0, 323.0], [898.0, 188.0], [924.0, 186.0], [957.0, 161.0], [972.0, 17490.0], [965.0, 272.0], [1069.0, 250.0], [1143.0, 177.0], [1198.0, 260.0], [1225.0, 125.0], [1.0, 96609.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[536.0, 0.0], [282.0, 0.0], [605.0, 0.0], [73.0, 0.0], [333.0, 0.0], [339.0, 0.0], [362.0, 0.0], [412.0, 0.0], [835.0, 0.0], [907.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1225.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.066666666666666, "minX": 1.68288396E12, "maxY": 325.0, "series": [{"data": [[1.68288402E12, 285.0], [1.6828842E12, 255.0], [1.68288426E12, 15.066666666666666], [1.68288408E12, 315.0], [1.68288414E12, 310.0], [1.68288396E12, 325.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288426E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.68288396E12, "maxY": 340.56666666666666, "series": [{"data": [[1.68288402E12, 282.3333333333333], [1.68288432E12, 6.75], [1.6828842E12, 255.91666666666666], [1.68288426E12, 29.983333333333334], [1.68288408E12, 340.56666666666666], [1.68288414E12, 306.48333333333335], [1.68288396E12, 277.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68288402E12, 1.1], [1.6828842E12, 0.95], [1.68288408E12, 0.55], [1.68288414E12, 1.1666666666666667], [1.68288396E12, 1.6166666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288432E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.68288396E12, "maxY": 340.56666666666666, "series": [{"data": [[1.68288402E12, 282.3333333333333], [1.68288432E12, 6.75], [1.6828842E12, 255.91666666666666], [1.68288426E12, 29.983333333333334], [1.68288408E12, 340.56666666666666], [1.68288414E12, 306.48333333333335], [1.68288396E12, 277.65]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68288402E12, 1.1], [1.6828842E12, 0.95], [1.68288408E12, 0.55], [1.68288414E12, 1.1666666666666667], [1.68288396E12, 1.6166666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288432E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.68288396E12, "maxY": 340.56666666666666, "series": [{"data": [[1.68288402E12, 282.3333333333333], [1.68288432E12, 6.75], [1.6828842E12, 255.91666666666666], [1.68288426E12, 29.983333333333334], [1.68288408E12, 340.56666666666666], [1.68288414E12, 306.48333333333335], [1.68288396E12, 277.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68288402E12, 1.1], [1.6828842E12, 0.95], [1.68288408E12, 0.55], [1.68288414E12, 1.1666666666666667], [1.68288396E12, 1.6166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288432E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

