/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 16.0, "minX": 0.0, "maxY": 186331.0, "series": [{"data": [[0.0, 16.0], [0.1, 22.0], [0.2, 25.0], [0.3, 27.0], [0.4, 29.0], [0.5, 30.0], [0.6, 32.0], [0.7, 34.0], [0.8, 35.0], [0.9, 37.0], [1.0, 38.0], [1.1, 39.0], [1.2, 40.0], [1.3, 41.0], [1.4, 41.0], [1.5, 42.0], [1.6, 43.0], [1.7, 43.0], [1.8, 44.0], [1.9, 44.0], [2.0, 44.0], [2.1, 45.0], [2.2, 45.0], [2.3, 45.0], [2.4, 46.0], [2.5, 46.0], [2.6, 47.0], [2.7, 48.0], [2.8, 49.0], [2.9, 50.0], [3.0, 50.0], [3.1, 51.0], [3.2, 52.0], [3.3, 53.0], [3.4, 53.0], [3.5, 53.0], [3.6, 54.0], [3.7, 54.0], [3.8, 54.0], [3.9, 54.0], [4.0, 55.0], [4.1, 55.0], [4.2, 55.0], [4.3, 56.0], [4.4, 56.0], [4.5, 56.0], [4.6, 57.0], [4.7, 57.0], [4.8, 57.0], [4.9, 57.0], [5.0, 58.0], [5.1, 58.0], [5.2, 58.0], [5.3, 59.0], [5.4, 59.0], [5.5, 59.0], [5.6, 60.0], [5.7, 60.0], [5.8, 60.0], [5.9, 61.0], [6.0, 61.0], [6.1, 62.0], [6.2, 62.0], [6.3, 62.0], [6.4, 63.0], [6.5, 63.0], [6.6, 63.0], [6.7, 64.0], [6.8, 64.0], [6.9, 64.0], [7.0, 65.0], [7.1, 65.0], [7.2, 65.0], [7.3, 65.0], [7.4, 66.0], [7.5, 66.0], [7.6, 66.0], [7.7, 66.0], [7.8, 67.0], [7.9, 67.0], [8.0, 68.0], [8.1, 68.0], [8.2, 68.0], [8.3, 69.0], [8.4, 69.0], [8.5, 70.0], [8.6, 70.0], [8.7, 70.0], [8.8, 70.0], [8.9, 70.0], [9.0, 71.0], [9.1, 71.0], [9.2, 71.0], [9.3, 71.0], [9.4, 71.0], [9.5, 72.0], [9.6, 72.0], [9.7, 72.0], [9.8, 72.0], [9.9, 72.0], [10.0, 73.0], [10.1, 73.0], [10.2, 73.0], [10.3, 73.0], [10.4, 73.0], [10.5, 74.0], [10.6, 74.0], [10.7, 74.0], [10.8, 74.0], [10.9, 74.0], [11.0, 74.0], [11.1, 75.0], [11.2, 75.0], [11.3, 75.0], [11.4, 75.0], [11.5, 75.0], [11.6, 75.0], [11.7, 76.0], [11.8, 76.0], [11.9, 76.0], [12.0, 76.0], [12.1, 76.0], [12.2, 77.0], [12.3, 77.0], [12.4, 77.0], [12.5, 77.0], [12.6, 77.0], [12.7, 78.0], [12.8, 78.0], [12.9, 78.0], [13.0, 78.0], [13.1, 78.0], [13.2, 78.0], [13.3, 78.0], [13.4, 78.0], [13.5, 79.0], [13.6, 79.0], [13.7, 79.0], [13.8, 79.0], [13.9, 79.0], [14.0, 79.0], [14.1, 79.0], [14.2, 80.0], [14.3, 80.0], [14.4, 80.0], [14.5, 80.0], [14.6, 80.0], [14.7, 80.0], [14.8, 81.0], [14.9, 81.0], [15.0, 81.0], [15.1, 81.0], [15.2, 81.0], [15.3, 82.0], [15.4, 82.0], [15.5, 82.0], [15.6, 82.0], [15.7, 82.0], [15.8, 82.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 84.0], [16.6, 84.0], [16.7, 84.0], [16.8, 84.0], [16.9, 84.0], [17.0, 84.0], [17.1, 84.0], [17.2, 84.0], [17.3, 85.0], [17.4, 85.0], [17.5, 85.0], [17.6, 85.0], [17.7, 85.0], [17.8, 85.0], [17.9, 85.0], [18.0, 85.0], [18.1, 86.0], [18.2, 86.0], [18.3, 86.0], [18.4, 86.0], [18.5, 86.0], [18.6, 86.0], [18.7, 86.0], [18.8, 86.0], [18.9, 86.0], [19.0, 86.0], [19.1, 87.0], [19.2, 87.0], [19.3, 87.0], [19.4, 87.0], [19.5, 87.0], [19.6, 87.0], [19.7, 87.0], [19.8, 87.0], [19.9, 87.0], [20.0, 87.0], [20.1, 88.0], [20.2, 88.0], [20.3, 88.0], [20.4, 88.0], [20.5, 88.0], [20.6, 88.0], [20.7, 88.0], [20.8, 88.0], [20.9, 88.0], [21.0, 88.0], [21.1, 89.0], [21.2, 89.0], [21.3, 89.0], [21.4, 89.0], [21.5, 89.0], [21.6, 89.0], [21.7, 89.0], [21.8, 89.0], [21.9, 89.0], [22.0, 90.0], [22.1, 90.0], [22.2, 90.0], [22.3, 90.0], [22.4, 90.0], [22.5, 90.0], [22.6, 90.0], [22.7, 90.0], [22.8, 90.0], [22.9, 90.0], [23.0, 90.0], [23.1, 90.0], [23.2, 91.0], [23.3, 91.0], [23.4, 91.0], [23.5, 91.0], [23.6, 91.0], [23.7, 91.0], [23.8, 91.0], [23.9, 91.0], [24.0, 91.0], [24.1, 91.0], [24.2, 91.0], [24.3, 92.0], [24.4, 92.0], [24.5, 92.0], [24.6, 92.0], [24.7, 92.0], [24.8, 92.0], [24.9, 92.0], [25.0, 92.0], [25.1, 93.0], [25.2, 93.0], [25.3, 93.0], [25.4, 93.0], [25.5, 93.0], [25.6, 93.0], [25.7, 93.0], [25.8, 93.0], [25.9, 93.0], [26.0, 94.0], [26.1, 94.0], [26.2, 94.0], [26.3, 94.0], [26.4, 94.0], [26.5, 94.0], [26.6, 94.0], [26.7, 94.0], [26.8, 94.0], [26.9, 94.0], [27.0, 95.0], [27.1, 95.0], [27.2, 95.0], [27.3, 95.0], [27.4, 95.0], [27.5, 95.0], [27.6, 95.0], [27.7, 95.0], [27.8, 95.0], [27.9, 95.0], [28.0, 95.0], [28.1, 95.0], [28.2, 96.0], [28.3, 96.0], [28.4, 96.0], [28.5, 96.0], [28.6, 96.0], [28.7, 96.0], [28.8, 96.0], [28.9, 96.0], [29.0, 96.0], [29.1, 96.0], [29.2, 96.0], [29.3, 97.0], [29.4, 97.0], [29.5, 97.0], [29.6, 97.0], [29.7, 97.0], [29.8, 97.0], [29.9, 97.0], [30.0, 98.0], [30.1, 98.0], [30.2, 98.0], [30.3, 98.0], [30.4, 98.0], [30.5, 98.0], [30.6, 98.0], [30.7, 98.0], [30.8, 99.0], [30.9, 99.0], [31.0, 99.0], [31.1, 99.0], [31.2, 99.0], [31.3, 99.0], [31.4, 99.0], [31.5, 99.0], [31.6, 99.0], [31.7, 100.0], [31.8, 100.0], [31.9, 100.0], [32.0, 100.0], [32.1, 100.0], [32.2, 100.0], [32.3, 100.0], [32.4, 100.0], [32.5, 100.0], [32.6, 101.0], [32.7, 101.0], [32.8, 101.0], [32.9, 101.0], [33.0, 101.0], [33.1, 101.0], [33.2, 101.0], [33.3, 102.0], [33.4, 102.0], [33.5, 102.0], [33.6, 102.0], [33.7, 102.0], [33.8, 103.0], [33.9, 103.0], [34.0, 103.0], [34.1, 103.0], [34.2, 103.0], [34.3, 103.0], [34.4, 103.0], [34.5, 104.0], [34.6, 104.0], [34.7, 104.0], [34.8, 104.0], [34.9, 105.0], [35.0, 105.0], [35.1, 105.0], [35.2, 105.0], [35.3, 105.0], [35.4, 106.0], [35.5, 106.0], [35.6, 106.0], [35.7, 107.0], [35.8, 107.0], [35.9, 107.0], [36.0, 107.0], [36.1, 107.0], [36.2, 108.0], [36.3, 108.0], [36.4, 108.0], [36.5, 109.0], [36.6, 109.0], [36.7, 109.0], [36.8, 110.0], [36.9, 110.0], [37.0, 110.0], [37.1, 110.0], [37.2, 110.0], [37.3, 111.0], [37.4, 111.0], [37.5, 112.0], [37.6, 112.0], [37.7, 112.0], [37.8, 112.0], [37.9, 113.0], [38.0, 113.0], [38.1, 113.0], [38.2, 114.0], [38.3, 115.0], [38.4, 115.0], [38.5, 115.0], [38.6, 116.0], [38.7, 116.0], [38.8, 116.0], [38.9, 117.0], [39.0, 117.0], [39.1, 118.0], [39.2, 118.0], [39.3, 119.0], [39.4, 120.0], [39.5, 121.0], [39.6, 122.0], [39.7, 123.0], [39.8, 124.0], [39.9, 126.0], [40.0, 127.0], [40.1, 128.0], [40.2, 129.0], [40.3, 129.0], [40.4, 131.0], [40.5, 132.0], [40.6, 132.0], [40.7, 137.0], [40.8, 141.0], [40.9, 142.0], [41.0, 143.0], [41.1, 145.0], [41.2, 148.0], [41.3, 151.0], [41.4, 154.0], [41.5, 157.0], [41.6, 159.0], [41.7, 161.0], [41.8, 163.0], [41.9, 164.0], [42.0, 165.0], [42.1, 165.0], [42.2, 166.0], [42.3, 167.0], [42.4, 169.0], [42.5, 171.0], [42.6, 172.0], [42.7, 174.0], [42.8, 177.0], [42.9, 188.0], [43.0, 189.0], [43.1, 190.0], [43.2, 190.0], [43.3, 213.0], [43.4, 226.0], [43.5, 227.0], [43.6, 228.0], [43.7, 243.0], [43.8, 248.0], [43.9, 249.0], [44.0, 260.0], [44.1, 278.0], [44.2, 279.0], [44.3, 288.0], [44.4, 289.0], [44.5, 298.0], [44.6, 322.0], [44.7, 381.0], [44.8, 417.0], [44.9, 457.0], [45.0, 471.0], [45.1, 557.0], [45.2, 577.0], [45.3, 598.0], [45.4, 658.0], [45.5, 666.0], [45.6, 726.0], [45.7, 741.0], [45.8, 808.0], [45.9, 837.0], [46.0, 848.0], [46.1, 858.0], [46.2, 958.0], [46.3, 1046.0], [46.4, 1124.0], [46.5, 1193.0], [46.6, 1194.0], [46.7, 1231.0], [46.8, 1411.0], [46.9, 1569.0], [47.0, 1676.0], [47.1, 1800.0], [47.2, 1896.0], [47.3, 2056.0], [47.4, 2118.0], [47.5, 2180.0], [47.6, 2198.0], [47.7, 2209.0], [47.8, 2251.0], [47.9, 2301.0], [48.0, 2327.0], [48.1, 2338.0], [48.2, 2350.0], [48.3, 2365.0], [48.4, 2437.0], [48.5, 2467.0], [48.6, 2629.0], [48.7, 2774.0], [48.8, 2837.0], [48.9, 2951.0], [49.0, 3028.0], [49.1, 3153.0], [49.2, 3206.0], [49.3, 3229.0], [49.4, 3253.0], [49.5, 3268.0], [49.6, 3283.0], [49.7, 3304.0], [49.8, 3322.0], [49.9, 3339.0], [50.0, 3351.0], [50.1, 3364.0], [50.2, 3444.0], [50.3, 3499.0], [50.4, 3568.0], [50.5, 3606.0], [50.6, 3624.0], [50.7, 3893.0], [50.8, 3910.0], [50.9, 3950.0], [51.0, 4007.0], [51.1, 4020.0], [51.2, 4044.0], [51.3, 4058.0], [51.4, 4070.0], [51.5, 4076.0], [51.6, 4077.0], [51.7, 4096.0], [51.8, 4150.0], [51.9, 4175.0], [52.0, 4190.0], [52.1, 4211.0], [52.2, 4245.0], [52.3, 4306.0], [52.4, 4328.0], [52.5, 4485.0], [52.6, 4517.0], [52.7, 4617.0], [52.8, 4628.0], [52.9, 4638.0], [53.0, 4675.0], [53.1, 4702.0], [53.2, 4717.0], [53.3, 4727.0], [53.4, 4749.0], [53.5, 4770.0], [53.6, 4813.0], [53.7, 4818.0], [53.8, 4832.0], [53.9, 4861.0], [54.0, 4880.0], [54.1, 4898.0], [54.2, 4915.0], [54.3, 4975.0], [54.4, 5057.0], [54.5, 5061.0], [54.6, 5110.0], [54.7, 5156.0], [54.8, 5195.0], [54.9, 5269.0], [55.0, 5315.0], [55.1, 5323.0], [55.2, 5337.0], [55.3, 5389.0], [55.4, 5449.0], [55.5, 5476.0], [55.6, 5495.0], [55.7, 5503.0], [55.8, 5548.0], [55.9, 5578.0], [56.0, 5593.0], [56.1, 5607.0], [56.2, 5616.0], [56.3, 5623.0], [56.4, 5640.0], [56.5, 5659.0], [56.6, 5665.0], [56.7, 5668.0], [56.8, 5686.0], [56.9, 5701.0], [57.0, 5727.0], [57.1, 5754.0], [57.2, 5792.0], [57.3, 5837.0], [57.4, 5883.0], [57.5, 5915.0], [57.6, 5953.0], [57.7, 5983.0], [57.8, 6009.0], [57.9, 6092.0], [58.0, 6181.0], [58.1, 6249.0], [58.2, 6279.0], [58.3, 6347.0], [58.4, 6392.0], [58.5, 6437.0], [58.6, 6448.0], [58.7, 6498.0], [58.8, 6521.0], [58.9, 6559.0], [59.0, 6577.0], [59.1, 6578.0], [59.2, 6588.0], [59.3, 6602.0], [59.4, 6633.0], [59.5, 6643.0], [59.6, 6698.0], [59.7, 6740.0], [59.8, 6781.0], [59.9, 6825.0], [60.0, 6847.0], [60.1, 6891.0], [60.2, 6936.0], [60.3, 6992.0], [60.4, 7032.0], [60.5, 7073.0], [60.6, 7096.0], [60.7, 7115.0], [60.8, 7134.0], [60.9, 7154.0], [61.0, 7179.0], [61.1, 7207.0], [61.2, 7225.0], [61.3, 7238.0], [61.4, 7265.0], [61.5, 7278.0], [61.6, 7300.0], [61.7, 7322.0], [61.8, 7354.0], [61.9, 7364.0], [62.0, 7381.0], [62.1, 7394.0], [62.2, 7408.0], [62.3, 7420.0], [62.4, 7425.0], [62.5, 7448.0], [62.6, 7497.0], [62.7, 7507.0], [62.8, 7508.0], [62.9, 7510.0], [63.0, 7533.0], [63.1, 7555.0], [63.2, 7590.0], [63.3, 7610.0], [63.4, 7627.0], [63.5, 7641.0], [63.6, 7681.0], [63.7, 7738.0], [63.8, 7740.0], [63.9, 7741.0], [64.0, 7742.0], [64.1, 7749.0], [64.2, 7805.0], [64.3, 7847.0], [64.4, 7871.0], [64.5, 7879.0], [64.6, 7919.0], [64.7, 7930.0], [64.8, 8010.0], [64.9, 8045.0], [65.0, 8059.0], [65.1, 8059.0], [65.2, 8062.0], [65.3, 8074.0], [65.4, 8074.0], [65.5, 8081.0], [65.6, 8088.0], [65.7, 8089.0], [65.8, 8104.0], [65.9, 8170.0], [66.0, 8199.0], [66.1, 8201.0], [66.2, 8206.0], [66.3, 8226.0], [66.4, 8227.0], [66.5, 8231.0], [66.6, 8280.0], [66.7, 8292.0], [66.8, 8317.0], [66.9, 8338.0], [67.0, 8359.0], [67.1, 8397.0], [67.2, 8432.0], [67.3, 8463.0], [67.4, 8471.0], [67.5, 8480.0], [67.6, 8488.0], [67.7, 8503.0], [67.8, 8527.0], [67.9, 8577.0], [68.0, 8617.0], [68.1, 8651.0], [68.2, 8676.0], [68.3, 8699.0], [68.4, 8725.0], [68.5, 8727.0], [68.6, 8729.0], [68.7, 8754.0], [68.8, 8817.0], [68.9, 8835.0], [69.0, 8869.0], [69.1, 8885.0], [69.2, 8907.0], [69.3, 8957.0], [69.4, 8984.0], [69.5, 8999.0], [69.6, 9031.0], [69.7, 9050.0], [69.8, 9093.0], [69.9, 9110.0], [70.0, 9125.0], [70.1, 9151.0], [70.2, 9156.0], [70.3, 9179.0], [70.4, 9193.0], [70.5, 9222.0], [70.6, 9223.0], [70.7, 9224.0], [70.8, 9226.0], [70.9, 9238.0], [71.0, 9273.0], [71.1, 9301.0], [71.2, 9303.0], [71.3, 9325.0], [71.4, 9339.0], [71.5, 9340.0], [71.6, 9345.0], [71.7, 9362.0], [71.8, 9395.0], [71.9, 9409.0], [72.0, 9450.0], [72.1, 9491.0], [72.2, 9520.0], [72.3, 9521.0], [72.4, 9525.0], [72.5, 9591.0], [72.6, 9613.0], [72.7, 9633.0], [72.8, 9652.0], [72.9, 9699.0], [73.0, 9741.0], [73.1, 9741.0], [73.2, 9754.0], [73.3, 9795.0], [73.4, 9813.0], [73.5, 9818.0], [73.6, 9869.0], [73.7, 9881.0], [73.8, 9884.0], [73.9, 9912.0], [74.0, 9914.0], [74.1, 9922.0], [74.2, 9954.0], [74.3, 9976.0], [74.4, 10007.0], [74.5, 10018.0], [74.6, 10018.0], [74.7, 10023.0], [74.8, 10053.0], [74.9, 10060.0], [75.0, 10079.0], [75.1, 10093.0], [75.2, 10101.0], [75.3, 10102.0], [75.4, 10124.0], [75.5, 10131.0], [75.6, 10185.0], [75.7, 10229.0], [75.8, 10249.0], [75.9, 10265.0], [76.0, 10278.0], [76.1, 10295.0], [76.2, 10335.0], [76.3, 10420.0], [76.4, 10439.0], [76.5, 10443.0], [76.6, 10454.0], [76.7, 10509.0], [76.8, 10607.0], [76.9, 10688.0], [77.0, 10771.0], [77.1, 10804.0], [77.2, 10808.0], [77.3, 10827.0], [77.4, 10857.0], [77.5, 10869.0], [77.6, 10880.0], [77.7, 10894.0], [77.8, 10915.0], [77.9, 10935.0], [78.0, 10937.0], [78.1, 10948.0], [78.2, 10977.0], [78.3, 11004.0], [78.4, 11039.0], [78.5, 11062.0], [78.6, 11074.0], [78.7, 11080.0], [78.8, 11109.0], [78.9, 11133.0], [79.0, 11148.0], [79.1, 11150.0], [79.2, 11169.0], [79.3, 11208.0], [79.4, 11240.0], [79.5, 11266.0], [79.6, 11272.0], [79.7, 11277.0], [79.8, 11282.0], [79.9, 11296.0], [80.0, 11327.0], [80.1, 11356.0], [80.2, 11358.0], [80.3, 11359.0], [80.4, 11361.0], [80.5, 11371.0], [80.6, 11379.0], [80.7, 11412.0], [80.8, 11428.0], [80.9, 11439.0], [81.0, 11452.0], [81.1, 11486.0], [81.2, 11504.0], [81.3, 11534.0], [81.4, 11572.0], [81.5, 11573.0], [81.6, 11579.0], [81.7, 11620.0], [81.8, 11639.0], [81.9, 11681.0], [82.0, 11700.0], [82.1, 11726.0], [82.2, 11737.0], [82.3, 11743.0], [82.4, 11766.0], [82.5, 11848.0], [82.6, 11866.0], [82.7, 11873.0], [82.8, 11910.0], [82.9, 11975.0], [83.0, 11986.0], [83.1, 11987.0], [83.2, 11988.0], [83.3, 12003.0], [83.4, 12092.0], [83.5, 12134.0], [83.6, 12184.0], [83.7, 12215.0], [83.8, 12232.0], [83.9, 12242.0], [84.0, 12280.0], [84.1, 12374.0], [84.2, 12394.0], [84.3, 12403.0], [84.4, 12429.0], [84.5, 12454.0], [84.6, 12475.0], [84.7, 12501.0], [84.8, 12523.0], [84.9, 12556.0], [85.0, 12572.0], [85.1, 12594.0], [85.2, 12606.0], [85.3, 12618.0], [85.4, 12626.0], [85.5, 12655.0], [85.6, 12686.0], [85.7, 12726.0], [85.8, 12782.0], [85.9, 12807.0], [86.0, 12851.0], [86.1, 12886.0], [86.2, 12889.0], [86.3, 12891.0], [86.4, 12900.0], [86.5, 12928.0], [86.6, 13014.0], [86.7, 13050.0], [86.8, 13052.0], [86.9, 13062.0], [87.0, 13070.0], [87.1, 13097.0], [87.2, 13183.0], [87.3, 13209.0], [87.4, 13368.0], [87.5, 13420.0], [87.6, 13482.0], [87.7, 13575.0], [87.8, 13601.0], [87.9, 13638.0], [88.0, 13695.0], [88.1, 13710.0], [88.2, 13781.0], [88.3, 13816.0], [88.4, 13895.0], [88.5, 13927.0], [88.6, 14029.0], [88.7, 14072.0], [88.8, 14093.0], [88.9, 14180.0], [89.0, 14532.0], [89.1, 14580.0], [89.2, 14626.0], [89.3, 14694.0], [89.4, 14765.0], [89.5, 14775.0], [89.6, 14843.0], [89.7, 14883.0], [89.8, 14911.0], [89.9, 14917.0], [90.0, 14925.0], [90.1, 14992.0], [90.2, 15032.0], [90.3, 15071.0], [90.4, 15101.0], [90.5, 15209.0], [90.6, 15379.0], [90.7, 15406.0], [90.8, 15531.0], [90.9, 15572.0], [91.0, 15749.0], [91.1, 15772.0], [91.2, 15915.0], [91.3, 15952.0], [91.4, 15979.0], [91.5, 16013.0], [91.6, 16047.0], [91.7, 16065.0], [91.8, 16142.0], [91.9, 16220.0], [92.0, 16425.0], [92.1, 16709.0], [92.2, 16819.0], [92.3, 16912.0], [92.4, 17372.0], [92.5, 17521.0], [92.6, 17690.0], [92.7, 17882.0], [92.8, 17999.0], [92.9, 18008.0], [93.0, 18048.0], [93.1, 18170.0], [93.2, 18452.0], [93.3, 18473.0], [93.4, 18772.0], [93.5, 18818.0], [93.6, 18943.0], [93.7, 18986.0], [93.8, 19952.0], [93.9, 20823.0], [94.0, 21573.0], [94.1, 21736.0], [94.2, 22692.0], [94.3, 22710.0], [94.4, 23867.0], [94.5, 24448.0], [94.6, 25868.0], [94.7, 26464.0], [94.8, 27523.0], [94.9, 28332.0], [95.0, 29588.0], [95.1, 31169.0], [95.2, 31620.0], [95.3, 31625.0], [95.4, 32170.0], [95.5, 33298.0], [95.6, 34738.0], [95.7, 37267.0], [95.8, 38460.0], [95.9, 39165.0], [96.0, 39887.0], [96.1, 40923.0], [96.2, 40971.0], [96.3, 40972.0], [96.4, 41172.0], [96.5, 44334.0], [96.6, 46990.0], [96.7, 49607.0], [96.8, 49618.0], [96.9, 53026.0], [97.0, 55704.0], [97.1, 58563.0], [97.2, 61995.0], [97.3, 65702.0], [97.4, 70750.0], [97.5, 74788.0], [97.6, 75119.0], [97.7, 75997.0], [97.8, 76014.0], [97.9, 77772.0], [98.0, 78309.0], [98.1, 80417.0], [98.2, 85373.0], [98.3, 95469.0], [98.4, 100018.0], [98.5, 100026.0], [98.6, 100051.0], [98.7, 100065.0], [98.8, 100069.0], [98.9, 100080.0], [99.0, 100088.0], [99.1, 100098.0], [99.2, 100126.0], [99.3, 100143.0], [99.4, 130042.0], [99.5, 133020.0], [99.6, 134213.0], [99.7, 134461.0], [99.8, 141774.0], [99.9, 147734.0], [100.0, 186331.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 12711.0, "series": [{"data": [[0.0, 12711.0], [132000.0, 2.0], [167200.0, 2.0], [139300.0, 17.0], [66700.0, 1.0], [71500.0, 3.0], [69900.0, 2.0], [76300.0, 3.0], [74700.0, 1.0], [81100.0, 1.0], [93900.0, 2.0], [146600.0, 7.0], [100.0, 4689.0], [32900.0, 3.0], [34500.0, 2.0], [33700.0, 5.0], [36100.0, 2.0], [37700.0, 2.0], [36900.0, 1.0], [40100.0, 3.0], [39300.0, 9.0], [40900.0, 99.0], [160300.0, 1.0], [42500.0, 2.0], [44100.0, 5.0], [43300.0, 2.0], [46500.0, 7.0], [47300.0, 6.0], [49700.0, 2.0], [200.0, 500.0], [52900.0, 9.0], [54500.0, 1.0], [56100.0, 2.0], [55300.0, 2.0], [58500.0, 15.0], [57700.0, 2.0], [60100.0, 2.0], [64900.0, 1.0], [64100.0, 3.0], [69000.0, 1.0], [67400.0, 2.0], [300.0, 84.0], [81800.0, 3.0], [91400.0, 2.0], [94600.0, 1.0], [96200.0, 2.0], [99400.0, 1.0], [400.0, 114.0], [500.0, 117.0], [600.0, 105.0], [154800.0, 1.0], [700.0, 86.0], [800.0, 150.0], [900.0, 20.0], [1000.0, 66.0], [1100.0, 125.0], [1200.0, 23.0], [1300.0, 12.0], [1400.0, 41.0], [1500.0, 26.0], [1600.0, 36.0], [1700.0, 29.0], [1800.0, 43.0], [1900.0, 15.0], [2000.0, 52.0], [2100.0, 95.0], [2200.0, 115.0], [2300.0, 190.0], [2400.0, 80.0], [2500.0, 6.0], [2600.0, 26.0], [2800.0, 38.0], [2700.0, 49.0], [2900.0, 33.0], [3000.0, 51.0], [3100.0, 47.0], [3200.0, 192.0], [3300.0, 212.0], [3400.0, 43.0], [3500.0, 62.0], [3600.0, 70.0], [3700.0, 14.0], [3800.0, 27.0], [3900.0, 90.0], [4000.0, 300.0], [4100.0, 146.0], [4200.0, 87.0], [4300.0, 66.0], [66500.0, 2.0], [4500.0, 26.0], [4400.0, 54.0], [4600.0, 153.0], [69700.0, 2.0], [72900.0, 1.0], [4800.0, 220.0], [4700.0, 218.0], [77700.0, 7.0], [4900.0, 77.0], [5100.0, 96.0], [5000.0, 104.0], [80900.0, 2.0], [79300.0, 1.0], [5200.0, 55.0], [5300.0, 152.0], [84100.0, 1.0], [5400.0, 147.0], [5500.0, 150.0], [5600.0, 334.0], [5700.0, 129.0], [5800.0, 99.0], [5900.0, 119.0], [6000.0, 86.0], [6100.0, 28.0], [95300.0, 2.0], [6200.0, 68.0], [6300.0, 86.0], [100100.0, 78.0], [6500.0, 214.0], [6400.0, 118.0], [6600.0, 147.0], [6900.0, 84.0], [6700.0, 85.0], [6800.0, 116.0], [7000.0, 122.0], [7100.0, 184.0], [7300.0, 219.0], [7400.0, 207.0], [7200.0, 209.0], [7600.0, 168.0], [7500.0, 230.0], [7800.0, 165.0], [7700.0, 217.0], [7900.0, 69.0], [8100.0, 95.0], [8000.0, 407.0], [8400.0, 225.0], [8200.0, 279.0], [8600.0, 149.0], [134200.0, 10.0], [9000.0, 131.0], [9200.0, 258.0], [8800.0, 158.0], [9400.0, 117.0], [9600.0, 153.0], [10000.0, 322.0], [10200.0, 188.0], [9800.0, 220.0], [10400.0, 185.0], [10600.0, 45.0], [10800.0, 283.0], [11000.0, 177.0], [11200.0, 265.0], [11600.0, 121.0], [11400.0, 196.0], [11800.0, 142.0], [12000.0, 43.0], [12200.0, 190.0], [12600.0, 206.0], [12400.0, 180.0], [12800.0, 215.0], [13000.0, 216.0], [13200.0, 40.0], [13600.0, 109.0], [13800.0, 48.0], [13400.0, 95.0], [14000.0, 105.0], [14200.0, 5.0], [14400.0, 15.0], [14600.0, 67.0], [14800.0, 75.0], [15000.0, 111.0], [15200.0, 48.0], [15600.0, 19.0], [15400.0, 27.0], [15800.0, 30.0], [16000.0, 109.0], [16200.0, 48.0], [17200.0, 9.0], [16800.0, 41.0], [16400.0, 17.0], [18000.0, 99.0], [17600.0, 35.0], [18400.0, 50.0], [19200.0, 2.0], [18800.0, 64.0], [20000.0, 2.0], [19600.0, 4.0], [20800.0, 16.0], [21600.0, 10.0], [23200.0, 4.0], [23600.0, 1.0], [24400.0, 17.0], [25200.0, 6.0], [24800.0, 1.0], [26000.0, 24.0], [26400.0, 1.0], [27600.0, 5.0], [28400.0, 4.0], [28000.0, 2.0], [30000.0, 6.0], [30400.0, 1.0], [31600.0, 83.0], [31200.0, 13.0], [30800.0, 2.0], [32000.0, 2.0], [32800.0, 8.0], [34400.0, 2.0], [35200.0, 1.0], [36800.0, 7.0], [37600.0, 7.0], [38400.0, 15.0], [40800.0, 8.0], [39200.0, 9.0], [40000.0, 3.0], [46400.0, 3.0], [45600.0, 6.0], [186300.0, 1.0], [48000.0, 3.0], [47200.0, 2.0], [50400.0, 2.0], [49600.0, 56.0], [51200.0, 2.0], [55200.0, 2.0], [56800.0, 2.0], [57600.0, 1.0], [60800.0, 2.0], [62400.0, 1.0], [64000.0, 1.0], [72000.0, 1.0], [80000.0, 2.0], [94400.0, 2.0], [99200.0, 1.0], [129600.0, 24.0], [134400.0, 33.0], [140800.0, 1.0], [132100.0, 1.0], [141700.0, 11.0], [167300.0, 2.0], [67100.0, 1.0], [68700.0, 2.0], [71900.0, 1.0], [75100.0, 26.0], [76700.0, 10.0], [79900.0, 1.0], [78300.0, 9.0], [86300.0, 1.0], [95900.0, 2.0], [133000.0, 28.0], [168200.0, 3.0], [33100.0, 5.0], [34700.0, 1.0], [35500.0, 2.0], [37100.0, 3.0], [153100.0, 2.0], [40300.0, 3.0], [41100.0, 7.0], [42700.0, 1.0], [169100.0, 1.0], [44300.0, 14.0], [47500.0, 3.0], [53100.0, 4.0], [55500.0, 5.0], [57100.0, 6.0], [56300.0, 2.0], [57900.0, 2.0], [58700.0, 3.0], [61100.0, 2.0], [61900.0, 3.0], [65100.0, 4.0], [63500.0, 4.0], [72600.0, 2.0], [75800.0, 1.0], [74200.0, 1.0], [79000.0, 1.0], [83800.0, 1.0], [93400.0, 2.0], [98200.0, 2.0], [134800.0, 1.0], [147600.0, 8.0], [68500.0, 2.0], [66900.0, 1.0], [71700.0, 1.0], [74900.0, 6.0], [78100.0, 18.0], [79700.0, 4.0], [81300.0, 2.0], [82900.0, 2.0], [95700.0, 2.0], [97300.0, 2.0], [17300.0, 24.0], [16900.0, 8.0], [16500.0, 13.0], [18100.0, 20.0], [17700.0, 24.0], [18900.0, 46.0], [18500.0, 5.0], [21300.0, 2.0], [20900.0, 11.0], [21700.0, 40.0], [22500.0, 11.0], [23300.0, 4.0], [22900.0, 4.0], [23700.0, 6.0], [24100.0, 1.0], [24900.0, 2.0], [26100.0, 2.0], [25700.0, 7.0], [27300.0, 1.0], [28500.0, 1.0], [27700.0, 7.0], [28100.0, 3.0], [28900.0, 2.0], [30500.0, 3.0], [30100.0, 2.0], [30900.0, 5.0], [31700.0, 3.0], [32100.0, 6.0], [32500.0, 1.0], [33800.0, 13.0], [34600.0, 2.0], [134300.0, 1.0], [33000.0, 2.0], [37800.0, 4.0], [37000.0, 3.0], [40200.0, 3.0], [39400.0, 2.0], [41000.0, 30.0], [44200.0, 4.0], [46600.0, 2.0], [47400.0, 3.0], [48200.0, 2.0], [53000.0, 18.0], [52200.0, 2.0], [53800.0, 1.0], [57000.0, 7.0], [58600.0, 10.0], [59400.0, 1.0], [61800.0, 2.0], [63400.0, 2.0], [64200.0, 2.0], [65000.0, 1.0], [66000.0, 1.0], [74000.0, 1.0], [77200.0, 1.0], [80400.0, 6.0], [78800.0, 12.0], [86800.0, 4.0], [88400.0, 2.0], [91600.0, 2.0], [96400.0, 2.0], [109200.0, 1.0], [130000.0, 9.0], [143200.0, 2.0], [137700.0, 1.0], [65900.0, 4.0], [67500.0, 2.0], [70700.0, 1.0], [73900.0, 2.0], [78700.0, 9.0], [80300.0, 2.0], [91500.0, 2.0], [132200.0, 1.0], [33300.0, 7.0], [38100.0, 6.0], [41300.0, 3.0], [42100.0, 4.0], [168300.0, 13.0], [46100.0, 2.0], [46900.0, 2.0], [47700.0, 2.0], [52500.0, 1.0], [53300.0, 2.0], [55700.0, 5.0], [57300.0, 1.0], [58900.0, 3.0], [58100.0, 2.0], [62100.0, 3.0], [68200.0, 2.0], [73000.0, 1.0], [76200.0, 4.0], [79400.0, 2.0], [95400.0, 2.0], [140400.0, 3.0], [169200.0, 3.0], [147700.0, 10.0], [65700.0, 4.0], [70500.0, 2.0], [73700.0, 3.0], [76900.0, 2.0], [80100.0, 1.0], [84900.0, 2.0], [83300.0, 1.0], [128100.0, 6.0], [8500.0, 111.0], [8300.0, 158.0], [135800.0, 1.0], [8700.0, 189.0], [8900.0, 132.0], [9100.0, 242.0], [9300.0, 301.0], [9500.0, 165.0], [9700.0, 162.0], [10100.0, 193.0], [9900.0, 203.0], [10700.0, 49.0], [10300.0, 52.0], [10500.0, 36.0], [10900.0, 226.0], [11100.0, 214.0], [11700.0, 186.0], [11300.0, 303.0], [11500.0, 205.0], [11900.0, 204.0], [12100.0, 84.0], [12300.0, 65.0], [12700.0, 90.0], [12500.0, 171.0], [12900.0, 73.0], [13100.0, 65.0], [13300.0, 25.0], [13700.0, 117.0], [13500.0, 27.0], [14100.0, 40.0], [13900.0, 53.0], [14500.0, 72.0], [14700.0, 96.0], [14900.0, 157.0], [15100.0, 29.0], [15300.0, 43.0], [15500.0, 67.0], [15700.0, 55.0], [16100.0, 39.0], [15900.0, 111.0], [16300.0, 15.0], [17000.0, 6.0], [16600.0, 7.0], [17400.0, 15.0], [18200.0, 24.0], [17800.0, 13.0], [19400.0, 12.0], [19000.0, 5.0], [19800.0, 7.0], [20600.0, 20.0], [21000.0, 5.0], [21800.0, 8.0], [23400.0, 3.0], [22600.0, 46.0], [23000.0, 2.0], [23800.0, 5.0], [24200.0, 7.0], [25000.0, 4.0], [25800.0, 17.0], [26600.0, 2.0], [27000.0, 3.0], [27400.0, 28.0], [27800.0, 1.0], [28600.0, 4.0], [28200.0, 12.0], [29000.0, 2.0], [30600.0, 8.0], [31000.0, 9.0], [32200.0, 2.0], [32600.0, 6.0], [31800.0, 3.0], [34800.0, 2.0], [33200.0, 10.0], [133500.0, 9.0], [34000.0, 2.0], [36400.0, 1.0], [35600.0, 4.0], [37200.0, 2.0], [38800.0, 1.0], [41200.0, 4.0], [44400.0, 3.0], [45200.0, 2.0], [49200.0, 2.0], [53200.0, 2.0], [55600.0, 7.0], [62800.0, 2.0], [62000.0, 1.0], [63600.0, 1.0], [64400.0, 2.0], [68000.0, 2.0], [76000.0, 31.0], [80800.0, 1.0], [93600.0, 2.0], [90400.0, 2.0], [95200.0, 2.0], [100000.0, 310.0], [69500.0, 2.0], [72700.0, 1.0], [75900.0, 32.0], [77500.0, 2.0], [82300.0, 2.0], [131400.0, 3.0], [134600.0, 3.0], [160200.0, 1.0], [34300.0, 1.0], [138700.0, 1.0], [35100.0, 1.0], [35900.0, 2.0], [36700.0, 2.0], [141900.0, 12.0], [38300.0, 2.0], [40700.0, 2.0], [39900.0, 3.0], [39100.0, 48.0], [43100.0, 3.0], [45500.0, 1.0], [48700.0, 2.0], [54300.0, 2.0], [56700.0, 2.0], [59100.0, 2.0], [59900.0, 2.0], [63100.0, 2.0], [68600.0, 1.0], [67000.0, 2.0], [71800.0, 1.0], [75000.0, 30.0], [78200.0, 11.0], [79800.0, 2.0], [89400.0, 2.0], [94200.0, 1.0], [97400.0, 1.0], [99000.0, 1.0], [133200.0, 1.0], [137300.0, 5.0], [169300.0, 7.0], [67700.0, 2.0], [72500.0, 1.0], [74100.0, 2.0], [75700.0, 1.0], [80500.0, 12.0], [85300.0, 4.0], [90100.0, 2.0], [91700.0, 1.0], [94900.0, 2.0], [109300.0, 2.0], [130100.0, 10.0], [131800.0, 16.0], [17100.0, 5.0], [16700.0, 44.0], [18300.0, 3.0], [17500.0, 30.0], [17900.0, 45.0], [18700.0, 43.0], [19100.0, 2.0], [19500.0, 5.0], [20300.0, 2.0], [19900.0, 2.0], [20700.0, 14.0], [21500.0, 7.0], [22300.0, 2.0], [21900.0, 2.0], [23500.0, 2.0], [23100.0, 3.0], [22700.0, 9.0], [24300.0, 12.0], [23900.0, 2.0], [25100.0, 5.0], [25900.0, 12.0], [26700.0, 1.0], [27500.0, 8.0], [27900.0, 3.0], [28300.0, 27.0], [29500.0, 2.0], [29100.0, 2.0], [29900.0, 3.0], [31100.0, 8.0], [31500.0, 6.0], [32300.0, 1.0], [32700.0, 2.0], [31900.0, 1.0], [34200.0, 3.0], [36600.0, 5.0], [35000.0, 2.0], [38200.0, 6.0], [39800.0, 10.0], [41400.0, 5.0], [44600.0, 1.0], [45400.0, 3.0], [47000.0, 4.0], [46200.0, 2.0], [50200.0, 2.0], [51800.0, 2.0], [52600.0, 2.0], [55000.0, 1.0], [54200.0, 2.0], [56600.0, 1.0], [57400.0, 1.0], [65400.0, 7.0], [73200.0, 17.0], [70000.0, 1.0], [74800.0, 1.0], [76400.0, 8.0], [78000.0, 1.0], [82800.0, 1.0], [92400.0, 2.0], [97200.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 186300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 21352.0, "series": [{"data": [[0.0, 18098.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 745.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 21352.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 184.24109589041103, "minX": 1.68288162E12, "maxY": 3000.0, "series": [{"data": [[1.68288192E12, 2637.465095465392], [1.68288162E12, 3000.0], [1.6828818E12, 3000.0], [1.68288198E12, 575.293556085919], [1.68288168E12, 3000.0], [1.68288186E12, 3000.0], [1.68288204E12, 184.24109589041103], [1.68288174E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288204E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 63.16666666666667, "minX": 1.0, "maxY": 100143.5, "series": [{"data": [[2.0, 100134.0], [3.0, 100133.0], [4.0, 100132.0], [5.0, 100108.0], [7.0, 100099.0], [9.0, 100097.66666666667], [10.0, 100097.0], [11.0, 100097.0], [14.0, 100095.66666666667], [15.0, 100093.0], [16.0, 100092.0], [18.0, 100092.0], [19.0, 100091.5], [22.0, 100091.0], [23.0, 100090.0], [24.0, 100090.0], [25.0, 100090.0], [26.0, 100089.0], [28.0, 100088.0], [30.0, 100088.0], [32.0, 100088.0], [37.0, 100085.8], [39.0, 100083.0], [45.0, 100081.0], [46.0, 100081.0], [49.0, 100080.33333333333], [50.0, 100080.0], [53.0, 100080.0], [55.0, 100079.0], [54.0, 100079.0], [56.0, 100079.0], [59.0, 100078.0], [58.0, 100079.0], [61.0, 100077.0], [63.0, 100077.0], [62.0, 100077.0], [67.0, 100072.0], [66.0, 100072.0], [65.0, 100073.0], [64.0, 100074.0], [71.0, 100070.0], [70.0, 100070.0], [69.0, 100072.0], [68.0, 100071.0], [74.0, 100068.0], [77.0, 100067.0], [76.0, 100067.0], [83.0, 100026.0], [82.0, 100063.0], [81.0, 100063.0], [86.0, 100022.0], [85.0, 100024.0], [84.0, 100025.0], [90.0, 100020.0], [89.0, 100020.66666666667], [94.0, 100015.0], [93.0, 100018.0], [98.0, 100014.0], [97.0, 100015.0], [96.0, 100015.0], [103.0, 100013.0], [104.0, 100010.0], [108.0, 100068.0], [115.0, 100067.0], [112.0, 100067.8], [118.0, 100067.0], [116.0, 100067.5], [123.0, 100066.0], [121.0, 100066.5], [120.0, 100067.0], [126.0, 100065.0], [125.0, 100066.0], [124.0, 100066.0], [134.0, 100064.0], [133.0, 100064.0], [132.0, 100065.0], [128.0, 100065.0], [143.0, 100061.0], [141.0, 100062.0], [140.0, 100062.0], [139.0, 100063.0], [137.0, 100063.0], [136.0, 100064.5], [151.0, 100057.0], [150.0, 100059.0], [149.0, 100059.0], [146.0, 100059.0], [145.0, 100060.0], [144.0, 100060.0], [158.0, 100054.0], [157.0, 100055.0], [156.0, 100056.0], [155.0, 100056.5], [154.0, 100056.0], [166.0, 100049.0], [165.0, 100050.0], [164.0, 100051.0], [163.0, 100051.0], [161.0, 100052.0], [175.0, 100038.0], [174.0, 100039.0], [173.0, 100039.0], [172.0, 100040.0], [170.0, 100040.5], [168.0, 100043.0], [183.0, 100034.0], [182.0, 100034.0], [181.0, 100035.0], [179.0, 100035.0], [176.0, 100037.0], [191.0, 100025.0], [189.0, 100026.0], [188.0, 100027.0], [187.0, 100029.0], [185.0, 100031.5], [199.0, 100021.0], [197.0, 100022.0], [195.0, 100023.0], [192.0, 100024.0], [207.0, 98275.0], [206.0, 99282.0], [205.0, 99018.0], [204.0, 100018.5], [202.0, 100019.0], [200.0, 100020.0], [214.0, 100030.0], [213.0, 100053.0], [211.0, 97263.0], [210.0, 97265.0], [209.0, 100118.0], [208.0, 98273.0], [223.0, 100023.0], [222.0, 100025.0], [220.0, 100027.0], [219.0, 100027.0], [216.0, 100028.0], [239.0, 100018.66666666667], [238.0, 100018.5], [237.0, 100019.0], [241.0, 100018.0], [253.0, 100102.0], [251.0, 100102.0], [250.0, 100102.66666666667], [268.0, 100011.0], [266.0, 100014.0], [265.0, 100015.0], [264.0, 100030.0], [263.0, 100085.0], [262.0, 100100.5], [260.0, 100101.33333333333], [259.0, 100101.0], [257.0, 100101.0], [286.0, 100141.0], [287.0, 100140.0], [285.0, 100140.0], [284.0, 100141.0], [283.0, 100141.0], [282.0, 100142.5], [280.0, 100143.4], [279.0, 100143.0], [274.0, 100143.5], [278.0, 100143.0], [276.0, 100143.0], [300.0, 100088.0], [299.0, 100092.0], [298.0, 100093.0], [297.0, 100114.0], [296.0, 100126.0], [293.0, 100134.0], [292.0, 100133.0], [290.0, 100137.33333333333], [318.0, 93451.0], [319.0, 93448.0], [317.0, 94458.0], [316.0, 94460.0], [315.0, 95467.0], [314.0, 95469.0], [313.0, 96477.0], [312.0, 96479.0], [311.0, 97487.0], [305.0, 100082.0], [304.0, 100086.0], [307.0, 96254.0], [306.0, 96256.0], [310.0, 94237.0], [309.0, 95244.0], [308.0, 95246.0], [334.0, 85373.0], [335.0, 85371.0], [333.0, 86381.0], [332.0, 82865.0], [331.0, 83873.0], [330.0, 84141.0], [329.0, 88401.0], [328.0, 88402.0], [327.0, 89410.0], [321.0, 92439.0], [320.0, 92441.0], [323.0, 91429.0], [322.0, 91431.0], [326.0, 89412.0], [325.0, 90421.0], [324.0, 90422.0], [350.0, 77297.0], [351.0, 73777.0], [349.0, 78306.0], [348.0, 74788.0], [347.0, 75796.0], [346.0, 79315.0], [345.0, 80323.0], [344.0, 80325.0], [343.0, 81333.0], [337.0, 81111.0], [336.0, 80846.0], [339.0, 83352.0], [338.0, 80103.0], [342.0, 81335.0], [341.0, 82343.0], [340.0, 82345.0], [366.0, 65702.0], [367.0, 65700.0], [365.0, 66709.0], [364.0, 66977.0], [363.0, 67718.0], [362.0, 67721.0], [361.0, 68728.0], [360.0, 68730.0], [359.0, 69738.0], [353.0, 72767.0], [352.0, 73035.0], [355.0, 72024.0], [354.0, 71759.0], [358.0, 70007.0], [357.0, 74266.0], [356.0, 70750.0], [382.0, 61144.0], [383.0, 61142.0], [381.0, 62152.0], [380.0, 62153.0], [379.0, 63161.0], [378.0, 63162.0], [377.0, 64171.0], [376.0, 64172.0], [375.0, 65180.0], [369.0, 68210.0], [368.0, 68210.0], [371.0, 67004.0], [370.0, 67006.0], [374.0, 65182.0], [373.0, 65719.0], [372.0, 65721.0], [398.0, 53284.0], [399.0, 53281.0], [397.0, 54291.0], [396.0, 54292.0], [395.0, 55301.0], [394.0, 55303.0], [393.0, 56310.0], [392.0, 56312.0], [391.0, 57320.0], [385.0, 60132.0], [384.0, 60134.0], [387.0, 59122.0], [386.0, 59124.0], [390.0, 57105.0], [389.0, 58112.0], [388.0, 58114.0], [414.0, 45206.0], [415.0, 45203.0], [413.0, 46214.0], [412.0, 46216.0], [411.0, 47224.0], [410.0, 47226.0], [409.0, 48233.0], [408.0, 48236.0], [407.0, 49243.0], [401.0, 52272.0], [400.0, 52274.0], [403.0, 51262.0], [402.0, 51265.0], [406.0, 49246.0], [405.0, 50253.0], [404.0, 50255.0], [430.0, 37118.0], [431.0, 37116.0], [429.0, 38127.0], [428.0, 38128.0], [427.0, 39134.0], [426.0, 39137.0], [425.0, 40145.0], [424.0, 40147.0], [423.0, 41154.0], [417.0, 44195.0], [416.0, 44196.0], [419.0, 43174.0], [418.0, 43176.0], [422.0, 41157.0], [421.0, 42163.0], [420.0, 42166.0], [446.0, 29040.0], [447.0, 29038.0], [445.0, 30048.0], [444.0, 30049.0], [443.0, 31058.0], [442.0, 31059.0], [441.0, 32066.0], [440.0, 32069.0], [439.0, 33077.0], [433.0, 36106.0], [432.0, 36107.0], [435.0, 35096.0], [434.0, 35098.0], [438.0, 33079.0], [437.0, 34087.0], [436.0, 34089.0], [462.0, 20963.0], [463.0, 20961.0], [461.0, 21971.0], [460.0, 21973.0], [459.0, 22980.0], [458.0, 22983.0], [457.0, 23990.0], [456.0, 23992.0], [455.0, 25000.0], [449.0, 28029.0], [448.0, 28030.0], [451.0, 27020.0], [450.0, 27021.0], [454.0, 25002.0], [453.0, 26009.0], [452.0, 26010.0], [478.0, 12887.0], [479.0, 12886.0], [477.0, 13894.0], [476.0, 13897.0], [475.0, 14904.0], [474.0, 14907.0], [473.0, 15913.0], [472.0, 15915.0], [471.0, 16923.0], [465.0, 19952.0], [464.0, 19954.0], [467.0, 18942.0], [466.0, 18944.0], [470.0, 16925.0], [469.0, 17932.0], [468.0, 17934.0], [494.0, 10887.0], [495.0, 10886.0], [493.0, 10894.0], [492.0, 10893.0], [491.0, 10894.0], [490.0, 10894.0], [489.0, 10896.0], [488.0, 10897.0], [487.0, 11090.0], [480.0, 11877.0], [483.0, 10996.5], [481.0, 11876.0], [486.0, 10899.0], [484.0, 10900.0], [510.0, 11059.0], [511.0, 11057.0], [509.0, 11060.0], [508.0, 11063.0], [506.0, 11064.0], [505.0, 11065.0], [504.0, 11065.0], [503.0, 10878.0], [496.0, 10885.0], [499.0, 10883.0], [497.0, 10885.0], [502.0, 10882.0], [501.0, 10883.0], [536.0, 7280.0], [542.0, 7274.0], [528.0, 7290.0], [530.0, 10949.0], [538.0, 7278.0], [512.0, 11056.0], [514.0, 11048.0], [516.0, 11045.0], [526.0, 10952.0], [524.0, 7293.0], [522.0, 11006.0], [520.0, 11007.0], [534.0, 7283.0], [532.0, 7287.0], [568.0, 8981.5], [572.0, 7636.0], [574.0, 7636.0], [560.0, 8110.0], [570.0, 7637.0], [544.0, 8241.0], [546.0, 8228.0], [548.0, 10720.0], [550.0, 8205.0], [558.0, 8129.0], [556.0, 8144.0], [554.0, 8172.0], [552.0, 8184.0], [566.0, 7638.5], [564.0, 7639.5], [562.0, 10326.0], [604.0, 10308.0], [606.0, 10308.0], [592.0, 7628.0], [596.0, 7627.5], [594.0, 7628.0], [602.0, 10477.0], [600.0, 7625.0], [582.0, 7633.0], [580.0, 10319.0], [576.0, 8977.0], [590.0, 8972.5], [588.0, 7632.0], [584.0, 10318.0], [632.0, 7611.0], [624.0, 7613.0], [626.0, 7613.0], [636.0, 7609.0], [608.0, 7621.0], [610.0, 7619.0], [622.0, 7616.0], [620.0, 7617.0], [618.0, 10302.0], [616.0, 7617.0], [630.0, 8954.5], [628.0, 7612.0], [666.0, 10277.0], [660.0, 10281.0], [670.0, 10273.5], [668.0, 8932.0], [646.0, 10289.0], [644.0, 8947.5], [642.0, 7606.0], [654.0, 8495.666666666666], [650.0, 7603.0], [662.0, 10278.0], [698.0, 10233.0], [702.0, 7544.0], [688.0, 10250.0], [690.0, 10246.0], [692.0, 7560.0], [696.0, 10233.0], [678.0, 9372.666666666666], [674.0, 10354.0], [686.0, 10338.0], [684.0, 7571.0], [682.0, 10261.0], [680.0, 10264.0], [732.0, 7501.0], [734.0, 10269.0], [720.0, 10207.0], [724.0, 8859.0], [722.0, 10202.0], [730.0, 7507.0], [728.0, 8850.5], [708.0, 10225.0], [706.0, 10226.0], [704.0, 7543.0], [718.0, 7523.0], [716.0, 7523.0], [714.0, 7524.0], [712.0, 8420.666666666666], [726.0, 10194.0], [742.0, 8835.5], [762.0, 10211.0], [756.0, 10148.0], [764.0, 8783.5], [752.0, 10333.0], [740.0, 8841.5], [738.0, 7499.0], [736.0, 10352.0], [750.0, 7480.0], [748.0, 8823.5], [746.0, 7481.0], [758.0, 7458.0], [754.0, 7479.0], [796.0, 7026.0], [798.0, 7024.0], [784.0, 9853.0], [786.0, 8897.0], [794.0, 8681.5], [792.0, 7593.0], [774.0, 10123.5], [782.0, 9185.0], [778.0, 10094.0], [776.0, 10124.2], [828.0, 8925.0], [830.0, 9102.0], [816.0, 8229.0], [818.0, 9108.0], [826.0, 8749.0], [824.0, 9107.0], [806.0, 7019.0], [802.0, 8761.0], [800.0, 9284.0], [814.0, 8145.5], [812.0, 9111.0], [810.0, 7016.0], [808.0, 7017.0], [834.0, 8219.5], [850.0, 9091.0], [862.0, 8468.5], [860.0, 8410.5], [832.0, 7005.0], [838.0, 8503.5], [844.0, 8739.0], [842.0, 7693.0], [840.0, 7693.0], [854.0, 8733.0], [852.0, 9255.5], [870.0, 9250.0], [890.0, 9238.0], [880.0, 8981.0], [892.0, 12609.0], [864.0, 12626.0], [878.0, 12615.0], [876.0, 6987.0], [874.0, 9082.0], [884.0, 7670.0], [898.0, 12605.0], [926.0, 7701.0], [920.0, 8095.0], [918.0, 9782.0], [916.0, 8538.0], [914.0, 10153.5], [896.0, 12606.0], [900.0, 12603.0], [910.0, 7659.0], [908.0, 10154.5], [906.0, 10831.0], [904.0, 9229.0], [954.0, 6940.0], [952.0, 10110.5], [958.0, 8272.333333333334], [928.0, 10907.5], [930.0, 7651.0], [934.0, 9053.0], [940.0, 9210.0], [936.0, 6953.0], [950.0, 8399.0], [946.0, 7640.0], [986.0, 8664.0], [984.0, 9186.0], [990.0, 6920.0], [976.0, 8670.0], [978.0, 6930.0], [988.0, 7639.5], [960.0, 9200.0], [962.0, 6936.0], [966.0, 9197.0], [974.0, 9192.0], [972.0, 8671.0], [970.0, 12566.0], [968.0, 9029.0], [982.0, 9023.0], [980.0, 7621.0], [1016.0, 12535.0], [1018.0, 8817.0], [1012.0, 9083.5], [1020.0, 9161.0], [1022.0, 8638.0], [1010.0, 8644.0], [998.0, 9175.0], [996.0, 6915.0], [994.0, 7657.0], [992.0, 8918.0], [1006.0, 9169.0], [1004.0, 8649.0], [1002.0, 8651.0], [1000.0, 8485.0], [1014.0, 8999.0], [1036.0, 6888.0], [1060.0, 8287.5], [1084.0, 8582.0], [1056.0, 9133.0], [1028.0, 12527.0], [1052.0, 11331.333333333334], [1048.0, 8617.0], [1040.0, 9868.666666666666], [1068.0, 8603.0], [1096.0, 7962.5], [1124.0, 8746.5], [1144.0, 8486.333333333334], [1100.0, 9058.0], [1092.0, 8575.0], [1088.0, 8936.0], [1116.0, 8851.0], [1112.0, 8859.0], [1128.0, 9005.0], [1188.0, 8340.0], [1192.0, 10545.5], [1184.0, 8340.0], [1164.0, 8926.0], [1156.0, 8458.0], [1176.0, 8869.0], [1172.0, 10496.0], [1352.0, 11090.666666666666], [1380.0, 8577.0], [1404.0, 8493.0], [1396.0, 6575.0], [1348.0, 8321.666666666666], [1356.0, 8051.125], [1372.0, 7666.25], [1368.0, 7737.666666666667], [1360.0, 7406.75], [1388.0, 8071.6], [1384.0, 6576.666666666667], [1464.0, 10108.0], [1468.0, 6732.0], [1440.0, 10226.5], [1444.0, 6824.0], [1448.0, 6745.0], [1460.0, 6572.0], [1456.0, 6577.0], [1420.0, 6389.0], [1416.0, 7440.0], [1408.0, 7265.5], [1436.0, 6364.0], [1432.0, 9197.25], [1428.0, 8298.5], [1424.0, 8479.0], [1520.0, 119.0], [1508.0, 4869.0], [1504.0, 10026.666666666666], [1524.0, 2591.0], [1480.0, 6521.5], [1476.0, 6712.0], [1472.0, 8417.5], [1500.0, 8350.0], [1496.0, 6505.0], [1492.0, 6512.0], [1488.0, 6516.0], [1516.0, 119.0], [1596.0, 6862.0], [1572.0, 6827.666666666667], [1576.0, 7243.0], [1580.0, 7241.0], [1588.0, 7216.0], [1584.0, 5975.0], [1540.0, 7267.0], [1536.0, 6007.5], [1544.0, 6634.5], [1564.0, 6412.333333333333], [1560.0, 7256.5], [1556.0, 5997.0], [1552.0, 5999.0], [1656.0, 6838.0], [1652.0, 6840.0], [1636.0, 6846.0], [1640.0, 6844.0], [1644.0, 6842.5], [1660.0, 7767.5], [1648.0, 6841.0], [1612.0, 6856.0], [1608.0, 6857.0], [1604.0, 8719.0], [1624.0, 6593.0], [1620.0, 6723.5], [1616.0, 6725.5], [1720.0, 6711.666666666667], [1700.0, 6556.0], [1724.0, 8651.0], [1696.0, 6690.5], [1704.0, 6683.5], [1708.0, 6548.0], [1716.0, 8660.0], [1712.0, 6547.0], [1664.0, 6836.0], [1668.0, 6575.0], [1672.0, 6703.5], [1676.0, 6571.0], [1688.0, 7290.5], [1684.0, 6827.0], [1680.0, 6827.0], [1784.0, 6719.0], [1764.0, 8600.0], [1772.0, 6735.0], [1788.0, 8579.0], [1776.0, 7535.0], [1728.0, 6526.0], [1736.0, 6779.0], [1740.0, 8618.0], [1752.0, 6486.0], [1748.0, 6492.5], [1848.0, 6621.0], [1844.0, 7424.0], [1828.0, 8496.0], [1832.0, 6635.5], [1836.0, 8495.0], [1852.0, 6361.0], [1840.0, 6625.5], [1800.0, 7630.5], [1804.0, 6697.0], [1820.0, 6388.0], [1812.0, 6408.0], [1808.0, 6566.5], [1868.0, 6952.285714285715], [1888.0, 130.0], [1860.0, 6347.0], [1884.0, 3234.0], [1880.0, 2906.3333333333335], [1876.0, 132.0], [1872.0, 8464.0], [1960.0, 2183.333333333333], [1956.0, 116.0], [1952.0, 116.0], [1928.0, 119.5], [1932.0, 118.0], [1948.0, 117.0], [2016.0, 83.5], [2040.0, 80.75], [2024.0, 83.0], [2028.0, 82.0], [2036.0, 81.0], [2008.0, 86.0], [2152.0, 63.16666666666667], [2144.0, 65.83333333333333], [2048.0, 88.0], [2128.0, 69.0], [2280.0, 7877.0], [2248.0, 6541.5], [2240.0, 7404.0], [2256.0, 5680.0], [2264.0, 6823.0], [2200.0, 5324.0], [2232.0, 7405.0], [2216.0, 5573.0], [2208.0, 5579.0], [2424.0, 7250.0], [2368.0, 7805.0], [2376.0, 7797.0], [2392.0, 7787.5], [2312.0, 7368.0], [2328.0, 7850.0], [2360.0, 7812.0], [2336.0, 7845.0], [2536.0, 8777.0], [2496.0, 7133.0], [2552.0, 7434.5], [2544.0, 6992.333333333333], [2528.0, 6247.0], [2432.0, 7734.0], [2440.0, 7696.0], [2448.0, 7688.0], [2480.0, 7389.0], [2472.0, 9832.0], [2672.0, 4899.0], [2624.0, 5596.0], [2680.0, 5575.5], [2632.0, 5590.0], [2648.0, 6265.0], [2656.0, 4904.0], [2560.0, 8771.0], [2568.0, 6335.5], [2576.0, 8732.0], [2600.0, 6741.0], [2592.0, 6752.0], [2808.0, 4726.0], [2752.0, 5537.666666666667], [2688.0, 5573.5], [2704.0, 5565.0], [2712.0, 7185.0], [2736.0, 6026.0], [2920.0, 6496.0], [2880.0, 89.29411764705881], [2888.0, 6020.0], [2896.0, 6010.0], [2912.0, 4920.0], [2824.0, 5177.333333333333], [2832.0, 6081.0], [2840.0, 4721.25], [2856.0, 6998.0], [2848.0, 4719.25], [2944.0, 7677.5], [3000.0, 7557.277962913168], [2952.0, 7287.0], [2968.0, 4883.0], [2984.0, 4461.5], [2976.0, 5195.0], [2153.0, 122.0], [2129.0, 68.0], [2065.0, 88.0], [2273.0, 7881.0], [2249.0, 7400.0], [2289.0, 7629.5], [2281.0, 5673.0], [2201.0, 5324.0], [2233.0, 7405.0], [2217.0, 5568.0], [2209.0, 5579.0], [2417.0, 7756.0], [2369.0, 7803.0], [2377.0, 7797.0], [2385.0, 7669.500000000001], [2401.0, 7297.0], [2305.0, 7622.0], [2313.0, 7856.0], [2321.0, 7609.5], [2329.0, 7358.0], [2337.0, 7354.0], [2537.0, 6104.0], [2505.0, 9796.0], [2529.0, 6369.5], [2441.0, 7695.0], [2449.0, 7189.0], [2457.0, 8762.5], [2473.0, 5441.0], [2465.0, 7657.0], [2657.0, 4903.0], [2665.0, 5807.0], [2649.0, 6264.0], [2673.0, 6257.0], [2561.0, 8771.0], [2569.0, 8759.0], [2577.0, 8725.0], [2585.0, 6757.666666666667], [2617.0, 5371.0], [2609.0, 5373.0], [2601.0, 6741.0], [2761.0, 6301.666666666667], [2753.0, 7071.0], [2769.0, 5906.0], [2777.0, 7032.0], [2713.0, 5800.0], [2745.0, 5939.0], [2737.0, 4876.0], [2729.0, 7180.0], [2929.0, 6761.666666666667], [2937.0, 6489.0], [2897.0, 6001.0], [2905.0, 4952.0], [2921.0, 4917.0], [2841.0, 5400.5], [2857.0, 4697.0], [2849.0, 4718.0], [2993.0, 4862.0], [2953.0, 8062.0], [2961.0, 6008.0], [2969.0, 8039.0], [2985.0, 4865.0], [2977.0, 4068.0], [1081.0, 9110.0], [1085.0, 8582.0], [1061.0, 6869.0], [1057.0, 8441.0], [1065.0, 8343.5], [1077.0, 7905.5], [1073.0, 8957.0], [1037.0, 8627.0], [1033.0, 8985.0], [1029.0, 8988.0], [1025.0, 9587.333333333334], [1053.0, 8972.0], [1049.0, 12512.0], [1045.0, 7749.5], [1041.0, 8453.0], [1069.0, 7555.0], [1137.0, 8655.5], [1129.0, 8483.0], [1149.0, 8827.0], [1125.0, 9006.0], [1089.0, 8934.0], [1113.0, 9022.0], [1109.0, 9056.0], [1105.0, 8796.0], [1133.0, 8478.5], [1153.0, 8203.5], [1181.0, 10549.5], [1189.0, 8861.0], [1157.0, 8814.0], [1177.0, 8525.0], [1173.0, 8726.0], [1169.0, 8726.5], [1401.0, 7026.8], [1405.0, 6397.0], [1393.0, 8026.666666666667], [1385.0, 12210.0], [1373.0, 7273.444444444444], [1349.0, 7767.0], [1353.0, 8948.0], [1365.0, 8666.076923076926], [1361.0, 6579.0], [1461.0, 6736.0], [1469.0, 10105.0], [1441.0, 6357.0], [1445.0, 10120.0], [1457.0, 10113.0], [1437.0, 8459.0], [1413.0, 7790.666666666667], [1409.0, 8490.0], [1417.0, 8130.0], [1421.0, 6389.0], [1433.0, 6376.0], [1453.0, 6660.0], [1449.0, 6745.0], [1525.0, 2588.0], [1533.0, 6009.0], [1505.0, 5751.0], [1529.0, 6853.0], [1521.0, 108.0], [1485.0, 8110.0], [1473.0, 6730.0], [1501.0, 10035.0], [1497.0, 10039.0], [1493.0, 6510.0], [1489.0, 6514.0], [1509.0, 3863.0], [1589.0, 7215.0], [1593.0, 6710.0], [1569.0, 5989.5], [1573.0, 7245.0], [1577.0, 5979.0], [1581.0, 5978.0], [1585.0, 7217.0], [1537.0, 6006.0], [1541.0, 6005.0], [1549.0, 6001.0], [1565.0, 5991.0], [1561.0, 5992.0], [1557.0, 7257.0], [1553.0, 5998.0], [1653.0, 6840.0], [1637.0, 6585.0], [1641.0, 6584.0], [1645.0, 6582.0], [1649.0, 8702.0], [1613.0, 8716.0], [1601.0, 6730.0], [1629.0, 8710.0], [1625.0, 6851.0], [1725.0, 6529.0], [1697.0, 6819.0], [1705.0, 6553.0], [1709.0, 6549.0], [1721.0, 8659.0], [1713.0, 6541.0], [1665.0, 6706.0], [1673.0, 6832.0], [1677.0, 8691.0], [1693.0, 6649.333333333333], [1689.0, 6823.0], [1785.0, 6461.0], [1761.0, 8602.0], [1765.0, 6737.0], [1773.0, 6606.0], [1777.0, 6472.0], [1757.0, 7671.5], [1737.0, 6521.0], [1741.0, 6757.0], [1753.0, 6485.0], [1749.0, 6751.0], [1745.0, 7555.0], [1841.0, 6365.0], [1849.0, 8482.0], [1825.0, 7573.5], [1829.0, 6378.0], [1837.0, 6634.0], [1845.0, 8484.0], [1793.0, 6578.5], [1797.0, 6441.666666666667], [1801.0, 7629.5], [1805.0, 8558.0], [1821.0, 6646.0], [1817.0, 6535.5], [1809.0, 6436.0], [1869.0, 6346.0], [1865.0, 6347.0], [1873.0, 6343.0], [1965.0, 95.5], [1957.0, 116.0], [1953.0, 116.0], [1929.0, 118.0], [1949.0, 117.0], [1941.0, 129.5], [2017.0, 83.75], [2025.0, 83.5], [2037.0, 81.25], [2013.0, 84.0], [2009.0, 2224.0], [2029.0, 82.0], [2146.0, 65.0], [2138.0, 67.0], [2242.0, 6544.5], [2258.0, 6538.5], [2274.0, 7393.333333333333], [2202.0, 5582.0], [2218.0, 5562.0], [2210.0, 5578.0], [2266.0, 7396.0], [2426.0, 8830.5], [2370.0, 7311.0], [2394.0, 7786.0], [2322.0, 5648.0], [2362.0, 8659.5], [2354.0, 7820.0], [2538.0, 8782.0], [2554.0, 8775.0], [2498.0, 7134.0], [2506.0, 9796.0], [2530.0, 5388.0], [2434.0, 7244.5], [2442.0, 7205.0], [2458.0, 7667.0], [2474.0, 7645.0], [2570.0, 8758.0], [2682.0, 5574.5], [2626.0, 5594.0], [2634.0, 4912.0], [2642.0, 6126.333333333333], [2562.0, 7673.0], [2578.0, 8724.0], [2610.0, 4921.0], [2602.0, 6736.0], [2594.0, 6751.0], [2698.0, 6719.0], [2770.0, 7052.0], [2778.0, 7031.5], [2690.0, 6253.0], [2730.0, 6099.666666666667], [2722.0, 4883.0], [2938.0, 8067.0], [2882.0, 4405.5], [2898.0, 4961.0], [2906.0, 7302.0], [2930.0, 7295.0], [2922.0, 4916.0], [2826.0, 4723.0], [2834.0, 4722.5], [2842.0, 6079.0], [2858.0, 4692.0], [2850.0, 4713.0], [2946.0, 8065.0], [2962.0, 8044.0], [2986.0, 7245.0], [2954.0, 7284.0], [2978.0, 4873.0], [2139.0, 67.0], [2067.0, 87.0], [2275.0, 7880.0], [2283.0, 7875.0], [2291.0, 7384.5], [2243.0, 7892.0], [2251.0, 8735.5], [2267.0, 7883.0], [2235.0, 5689.0], [2227.0, 6721.8], [2219.0, 7898.0], [2211.0, 7437.0], [2315.0, 7855.0], [2387.0, 7789.0], [2427.0, 7248.0], [2411.0, 7539.75], [2307.0, 7624.5], [2323.0, 7854.0], [2363.0, 7810.0], [2355.0, 7575.5], [2347.0, 7597.0], [2531.0, 5388.0], [2547.0, 8774.0], [2507.0, 8458.0], [2555.0, 6584.0], [2435.0, 7733.0], [2459.0, 7667.0], [2491.0, 7136.0], [2475.0, 9827.0], [2467.0, 8749.5], [2675.0, 4897.0], [2667.0, 5579.5], [2579.0, 8723.0], [2587.0, 6758.0], [2611.0, 4915.0], [2795.0, 4728.0], [2755.0, 7070.0], [2763.0, 7068.5], [2779.0, 7032.0], [2691.0, 4890.5], [2699.0, 4890.0], [2707.0, 7187.0], [2715.0, 4882.5], [2739.0, 5552.5], [2731.0, 4880.0], [2891.0, 4486.333333333333], [2915.0, 8077.0], [2827.0, 5062.375], [2835.0, 4721.166666666667], [2843.0, 4715.0], [2851.0, 4711.0], [2947.0, 7288.0], [2955.0, 4903.0], [2963.0, 4885.0], [2971.0, 4073.0], [2979.0, 8028.0], [541.0, 7275.0], [543.0, 8242.0], [529.0, 7289.0], [531.0, 7288.0], [539.0, 7276.0], [527.0, 7292.0], [513.0, 11050.0], [515.0, 11048.0], [519.0, 11009.0], [517.0, 11009.0], [525.0, 7292.0], [523.0, 11005.0], [521.0, 11007.0], [535.0, 7282.0], [533.0, 7284.0], [545.0, 8237.0], [571.0, 10322.0], [569.0, 7638.0], [559.0, 8121.0], [547.0, 10721.0], [549.0, 8217.0], [551.0, 8188.0], [557.0, 8135.0], [555.0, 8156.0], [553.0, 8181.0], [561.0, 8107.0], [583.0, 7633.0], [601.0, 7624.0], [605.0, 10308.0], [603.0, 10308.0], [581.0, 8975.0], [579.0, 7634.0], [577.0, 7635.0], [591.0, 7629.0], [587.0, 7632.0], [585.0, 10317.0], [599.0, 7626.5], [597.0, 7626.0], [635.0, 7610.0], [637.0, 7608.0], [639.0, 7607.5], [625.0, 7614.0], [633.0, 7609.0], [623.0, 7614.0], [609.0, 7621.0], [611.0, 10305.0], [615.0, 7618.5], [613.0, 10304.5], [619.0, 8959.5], [631.0, 7610.0], [627.0, 7613.0], [665.0, 8934.5], [671.0, 10273.0], [659.0, 8940.5], [657.0, 8941.5], [647.0, 10457.0], [645.0, 7604.0], [641.0, 8949.5], [655.0, 7600.0], [651.0, 7602.0], [663.0, 10446.0], [661.0, 7595.0], [699.0, 7545.0], [697.0, 10233.0], [703.0, 7544.0], [689.0, 10250.0], [691.0, 10245.0], [701.0, 10230.0], [679.0, 7582.0], [675.0, 7584.0], [673.0, 10270.0], [687.0, 10253.0], [683.0, 10257.0], [681.0, 7577.0], [695.0, 8892.0], [693.0, 10235.0], [729.0, 7507.0], [735.0, 10185.0], [721.0, 7521.0], [731.0, 10189.0], [709.0, 10225.0], [707.0, 7540.0], [705.0, 7541.0], [719.0, 7521.5], [713.0, 10209.0], [725.0, 10200.0], [761.0, 10127.0], [753.0, 10164.0], [743.0, 10335.0], [739.0, 7499.0], [749.0, 10334.0], [745.0, 8908.0], [759.0, 10131.0], [757.0, 10312.0], [755.0, 10163.0], [795.0, 9121.0], [799.0, 7024.0], [785.0, 8899.0], [797.0, 8766.0], [775.0, 10124.0], [773.0, 8781.5], [771.0, 10124.0], [783.0, 9855.0], [779.0, 10249.0], [777.0, 7410.0], [789.0, 7028.0], [787.0, 7029.0], [825.0, 7702.0], [831.0, 7005.0], [819.0, 8583.0], [829.0, 8748.0], [807.0, 8757.0], [805.0, 7020.5], [803.0, 8592.0], [801.0, 9284.0], [811.0, 7017.0], [809.0, 7017.0], [823.0, 8170.333333333333], [821.0, 9106.0], [857.0, 10204.0], [859.0, 6993.0], [847.0, 9177.5], [837.0, 9099.0], [835.0, 9099.0], [839.0, 9264.0], [845.0, 9261.0], [843.0, 10865.5], [853.0, 8733.0], [849.0, 8653.5], [889.0, 10664.5], [883.0, 12613.0], [893.0, 6975.0], [895.0, 9069.0], [881.0, 9074.0], [871.0, 9083.0], [869.0, 10936.0], [867.0, 9924.5], [877.0, 12620.0], [875.0, 6987.0], [873.0, 8988.0], [887.0, 10664.0], [885.0, 7671.0], [903.0, 10654.5], [925.0, 10474.75], [921.0, 9223.0], [915.0, 9783.0], [911.0, 10129.5], [897.0, 7663.0], [899.0, 12604.0], [901.0, 12602.0], [933.0, 10823.5], [959.0, 9199.0], [955.0, 9201.0], [953.0, 7638.0], [943.0, 12582.0], [929.0, 12594.0], [931.0, 6959.0], [935.0, 9054.0], [941.0, 7528.0], [937.0, 9045.0], [949.0, 7640.0], [945.0, 7774.666666666667], [989.0, 8663.0], [979.0, 9108.5], [985.0, 9020.0], [975.0, 7623.0], [961.0, 12571.0], [965.0, 9086.333333333334], [967.0, 8674.0], [973.0, 9193.0], [969.0, 9029.0], [983.0, 7618.0], [981.0, 6928.0], [997.0, 9010.0], [1009.0, 8908.0], [1019.0, 8639.0], [999.0, 8486.0], [995.0, 9012.0], [993.0, 6918.0], [1007.0, 9168.0], [1005.0, 9171.0], [1003.0, 6912.0], [1001.0, 9173.0], [1015.0, 8642.0], [1013.0, 8999.0], [1078.0, 9118.0], [1086.0, 9102.0], [1058.0, 8965.0], [1082.0, 8766.0], [1074.0, 8559.666666666666], [1034.0, 8722.0], [1030.0, 12527.0], [1026.0, 8990.0], [1046.0, 7571.0], [1042.0, 7575.0], [1070.0, 7602.0], [1066.0, 7558.0], [1138.0, 8998.0], [1142.0, 8733.0], [1126.0, 9004.0], [1146.0, 7972.0], [1150.0, 6731.0], [1122.0, 9958.0], [1102.0, 8537.0], [1098.0, 8748.0], [1094.0, 9010.5], [1090.0, 7530.0], [1118.0, 7963.5], [1114.0, 8496.0], [1110.0, 9054.0], [1106.0, 9057.0], [1134.0, 8478.0], [1130.0, 7436.0], [1162.0, 8642.0], [1186.0, 12235.0], [1190.0, 8338.0], [1166.0, 12266.0], [1158.0, 8428.0], [1154.0, 8982.0], [1182.0, 12236.0], [1174.0, 8869.0], [1402.0, 6574.0], [1406.0, 7089.0], [1374.0, 8493.5], [1354.0, 7914.333333333333], [1350.0, 7929.125], [1370.0, 7988.466666666665], [1366.0, 7231.857142857142], [1390.0, 7318.0], [1378.0, 8318.57142857143], [1458.0, 6738.0], [1466.0, 6733.5], [1442.0, 8438.0], [1446.0, 6745.0], [1462.0, 6571.0], [1422.0, 8483.0], [1418.0, 8651.0], [1414.0, 8488.0], [1410.0, 8655.0], [1438.0, 6363.0], [1434.0, 12005.0], [1426.0, 6383.0], [1454.0, 6578.0], [1450.0, 6744.0], [1486.0, 6517.0], [1522.0, 2951.0], [1526.0, 6012.0], [1530.0, 6010.0], [1506.0, 5751.0], [1482.0, 6519.0], [1478.0, 6688.0], [1474.0, 10099.0], [1494.0, 6511.0], [1514.0, 118.66666666666667], [1510.0, 121.0], [1590.0, 5952.0], [1598.0, 7662.0], [1574.0, 7244.0], [1582.0, 7239.0], [1546.0, 7265.0], [1550.0, 5999.0], [1566.0, 7253.0], [1558.0, 7257.0], [1658.0, 6837.0], [1638.0, 6845.0], [1634.0, 6760.666666666667], [1646.0, 6843.0], [1654.0, 6838.0], [1606.0, 6728.5], [1602.0, 6859.0], [1626.0, 6850.0], [1622.0, 6853.0], [1618.0, 6724.5], [1718.0, 6798.0], [1702.0, 6683.5], [1706.0, 6549.0], [1726.0, 6788.0], [1714.0, 6541.0], [1670.0, 7764.0], [1678.0, 8690.0], [1690.0, 6564.0], [1682.0, 6698.0], [1782.0, 7653.0], [1762.0, 7075.5], [1766.0, 6477.0], [1770.0, 7268.666666666667], [1778.0, 6729.0], [1730.0, 6783.0], [1738.0, 8639.0], [1742.0, 6755.0], [1754.0, 8604.0], [1746.0, 8615.0], [1846.0, 6363.0], [1826.0, 8498.0], [1838.0, 8489.0], [1854.0, 7421.0], [1842.0, 8485.0], [1794.0, 6448.0], [1802.0, 6697.0], [1818.0, 6404.0], [1814.0, 6408.0], [1810.0, 6695.0], [1890.0, 130.5], [1870.0, 6605.0], [1866.0, 8467.0], [1874.0, 6600.0], [1954.0, 120.54545454545456], [1958.0, 2199.666666666667], [1950.0, 116.33333333333333], [2018.0, 84.0], [2026.0, 2841.6666666666665], [2042.0, 80.8], [2038.0, 80.0], [2034.0, 81.0], [2030.0, 909.6000000000001], [2172.0, 116.0], [2068.0, 87.0], [2060.0, 88.0], [2140.0, 68.0], [2284.0, 7387.0], [2252.0, 7398.0], [2260.0, 7640.0], [2300.0, 8722.0], [2276.0, 7878.0], [2196.0, 114.77777777777777], [2204.0, 6512.0], [2228.0, 7408.0], [2212.0, 5577.0], [2268.0, 7882.0], [2316.0, 7367.0], [2420.0, 7747.333333333333], [2412.0, 7295.0], [2308.0, 7378.0], [2324.0, 7853.0], [2332.0, 7846.0], [2364.0, 7810.0], [2356.0, 7331.0], [2348.0, 7841.0], [2548.0, 8773.0], [2508.0, 7122.0], [2540.0, 7438.5], [2436.0, 9912.0], [2452.0, 7676.5], [2460.0, 7174.0], [2492.0, 6276.5], [2484.0, 7506.25], [2660.0, 5353.666666666667], [2628.0, 5593.0], [2644.0, 6056.5], [2676.0, 4893.0], [2572.0, 7420.0], [2620.0, 4918.0], [2612.0, 6278.0], [2604.0, 6732.5], [2596.0, 6753.5], [2700.0, 4889.0], [2796.0, 4728.333333333333], [2772.0, 6580.0], [2756.0, 6130.0], [2780.0, 7031.0], [2692.0, 4888.0], [2708.0, 6418.333333333333], [2748.0, 6306.666666666667], [2732.0, 6237.0], [2724.0, 6533.4], [2924.0, 6494.5], [2932.0, 4913.5], [2884.0, 3725.0], [2892.0, 6018.0], [2916.0, 8077.0], [2836.0, 4722.0], [2844.0, 5399.5], [2860.0, 5840.5], [2852.0, 4712.0], [2956.0, 8059.0], [2964.0, 4885.0], [2980.0, 4869.0], [2173.0, 116.0], [2141.0, 67.0], [2069.0, 87.0], [2285.0, 7630.5], [2301.0, 7871.0], [2245.0, 6543.5], [2253.0, 5682.0], [2261.0, 7396.0], [2269.0, 7393.0], [2277.0, 7390.0], [2205.0, 5582.0], [2197.0, 114.74999999999999], [2229.0, 7897.0], [2213.0, 5316.0], [2421.0, 7260.0], [2429.0, 7735.0], [2373.0, 7636.0], [2389.0, 7544.0], [2397.0, 7786.0], [2309.0, 7379.0], [2325.0, 7363.0], [2357.0, 8384.666666666666], [2349.0, 7596.5], [2445.0, 6954.333333333333], [2541.0, 8775.0], [2525.0, 5389.333333333333], [2557.0, 7879.666666666667], [2437.0, 7238.0], [2453.0, 7676.0], [2493.0, 7135.0], [2477.0, 7396.5], [2469.0, 7655.0], [2685.0, 6254.333333333333], [2629.0, 4914.0], [2645.0, 6266.0], [2653.0, 5924.25], [2677.0, 6256.0], [2669.0, 4899.0], [2661.0, 6261.0], [2565.0, 8765.0], [2573.0, 8756.0], [2589.0, 6756.5], [2621.0, 5684.0], [2597.0, 6749.0], [2757.0, 4770.0], [2805.0, 4727.0], [2765.0, 6597.0], [2773.0, 7033.0], [2797.0, 5180.666666666667], [2693.0, 4887.0], [2717.0, 4883.0], [2781.0, 7031.0], [2933.0, 4912.0], [2893.0, 6018.0], [2909.0, 8079.0], [2941.0, 7014.0], [2917.0, 6109.5], [2869.0, 92.0], [2821.0, 4724.0], [2853.0, 4700.0], [2949.0, 6096.0], [2989.0, 4863.333333333333], [2981.0, 4059.0], [1075.0, 7601.0], [1087.0, 9101.0], [1063.0, 8963.5], [1083.0, 6847.0], [1031.0, 8628.0], [1027.0, 9156.0], [1055.0, 9051.0], [1047.0, 9140.0], [1043.0, 8620.0], [1067.0, 9125.0], [1103.0, 8797.0], [1151.0, 8647.0], [1147.0, 8993.0], [1139.0, 8829.0], [1099.0, 9092.0], [1091.0, 7578.0], [1119.0, 7440.0], [1115.0, 9017.0], [1111.0, 8862.0], [1135.0, 8478.0], [1131.0, 10429.0], [1155.0, 8459.0], [1187.0, 8862.0], [1183.0, 8341.0], [1159.0, 8405.0], [1167.0, 12266.0], [1163.0, 12299.0], [1179.0, 10288.5], [1171.0, 8726.0], [1395.0, 8722.0], [1387.0, 7272.5], [1383.0, 12210.0], [1379.0, 6954.0], [1359.0, 6869.666666666667], [1355.0, 8948.5], [1371.0, 7357.75], [1367.0, 7968.4], [1363.0, 12213.0], [1467.0, 6732.0], [1471.0, 6730.0], [1443.0, 6826.0], [1447.0, 6746.0], [1463.0, 6735.0], [1419.0, 12025.0], [1423.0, 6387.0], [1435.0, 12003.0], [1455.0, 6576.0], [1451.0, 6743.0], [1523.0, 2942.0], [1535.0, 6009.0], [1507.0, 4870.0], [1531.0, 7271.0], [1483.0, 6163.0], [1475.0, 10088.0], [1499.0, 6498.0], [1495.0, 6510.0], [1491.0, 6513.5], [1519.0, 118.75], [1547.0, 6633.5], [1575.0, 5980.0], [1595.0, 6862.0], [1599.0, 6601.0], [1579.0, 7242.0], [1583.0, 5976.0], [1567.0, 5991.0], [1539.0, 6636.0], [1543.0, 6003.0], [1551.0, 7260.0], [1555.0, 7259.5], [1651.0, 7770.5], [1663.0, 6836.5], [1635.0, 6588.0], [1643.0, 6584.0], [1647.0, 6582.0], [1655.0, 6839.0], [1615.0, 6855.0], [1611.0, 6769.666666666667], [1607.0, 6859.0], [1603.0, 6859.0], [1631.0, 7778.5], [1627.0, 6849.0], [1623.0, 8712.0], [1723.0, 7591.5], [1727.0, 6785.0], [1699.0, 7748.5], [1711.0, 8666.5], [1695.0, 8681.0], [1667.0, 6834.0], [1675.0, 8692.0], [1679.0, 8689.0], [1779.0, 8588.0], [1791.0, 7336.666666666667], [1763.0, 6740.0], [1767.0, 6736.0], [1775.0, 6475.0], [1783.0, 6593.0], [1735.0, 6586.25], [1731.0, 6522.0], [1739.0, 6498.0], [1743.0, 6755.0], [1755.0, 6743.0], [1751.0, 6745.0], [1847.0, 6362.0], [1855.0, 8468.0], [1827.0, 6637.0], [1835.0, 7564.75], [1823.0, 6514.5], [1803.0, 6698.0], [1807.0, 6697.0], [1819.0, 6389.0], [1815.0, 6665.0], [1811.0, 6426.0], [1867.0, 7407.0], [1887.0, 130.6], [1895.0, 265.4], [1871.0, 8464.0], [1879.0, 131.0], [1875.0, 819.0], [1955.0, 122.12499999999999], [1963.0, 2286.0], [1951.0, 116.0], [1947.0, 117.0], [2023.0, 83.0], [2047.0, 1262.2857142857144], [2019.0, 84.0], [2027.0, 1117.0], [2043.0, 80.0], [2015.0, 84.0], [2174.0, 117.0], [2070.0, 87.0], [2142.0, 67.10526315789473], [2206.0, 7442.0], [2286.0, 7874.0], [2302.0, 7872.0], [2294.0, 7384.0], [2238.0, 5690.0], [2230.0, 5691.0], [2222.0, 10084.0], [2214.0, 5574.0], [2406.0, 7785.5], [2414.0, 7757.0], [2390.0, 7300.0], [2398.0, 7786.0], [2310.0, 7374.0], [2326.0, 7364.0], [2334.0, 7480.0], [2366.0, 7809.0], [2358.0, 7819.0], [2350.0, 7830.0], [2446.0, 7689.0], [2534.0, 6074.4], [2550.0, 8772.0], [2558.0, 8768.0], [2502.0, 7377.0], [2526.0, 5389.0], [2438.0, 7724.0], [2454.0, 7676.0], [2462.0, 7662.5], [2486.0, 7383.0], [2478.0, 7147.0], [2470.0, 9835.0], [2582.0, 8724.0], [2638.0, 7210.0], [2646.0, 4901.0], [2670.0, 4899.0], [2622.0, 6275.0], [2566.0, 8765.0], [2574.0, 8754.0], [2590.0, 6755.0], [2614.0, 5598.0], [2606.0, 6279.0], [2598.0, 6748.0], [2806.0, 4726.0], [2766.0, 7065.0], [2694.0, 4890.0], [2718.0, 6242.0], [2742.0, 6621.0], [2726.0, 7180.5], [2894.0, 6017.0], [2934.0, 4913.0], [2902.0, 4960.5], [2910.0, 6757.0], [2926.0, 4915.0], [2838.0, 5778.0], [2862.0, 4680.5], [2982.0, 8024.0], [2143.0, 66.4054054054054], [2063.0, 88.0], [2295.0, 6811.666666666667], [2303.0, 7381.5], [2247.0, 7401.0], [2255.0, 7397.5], [2287.0, 7385.0], [2279.0, 6530.5], [2207.0, 7441.0], [2199.0, 75.5], [2239.0, 7596.2], [2223.0, 6551.5], [2415.0, 7757.5], [2407.0, 7458.833333333333], [2431.0, 8827.5], [2375.0, 7554.0], [2423.0, 7746.0], [2367.0, 7805.0], [2311.0, 5654.0], [2319.0, 7691.0], [2359.0, 7818.0], [2343.0, 7597.833333333334], [2503.0, 7295.0], [2527.0, 5389.0], [2535.0, 6460.75], [2495.0, 7134.0], [2439.0, 7717.0], [2455.0, 7673.0], [2463.0, 5452.0], [2487.0, 7136.0], [2471.0, 7159.0], [2687.0, 4894.0], [2679.0, 4897.0], [2631.0, 4913.0], [2639.0, 5590.75], [2647.0, 4906.0], [2655.0, 5584.0], [2671.0, 4899.0], [2663.0, 4902.0], [2567.0, 8768.0], [2575.0, 6567.0], [2591.0, 6754.0], [2599.0, 6752.0], [2791.0, 7027.0], [2759.0, 7069.0], [2799.0, 4727.0], [2767.0, 7055.0], [2751.0, 7071.0], [2703.0, 5567.0], [2719.0, 6242.0], [2735.0, 6705.5], [2783.0, 7029.0], [2935.0, 8069.0], [2887.0, 4490.333333333333], [2943.0, 4907.0], [2895.0, 6014.0], [2903.0, 4959.0], [2911.0, 4920.0], [2919.0, 7299.0], [2823.0, 4725.0], [2839.0, 6080.0], [2847.0, 4719.0], [2855.0, 5850.0], [2951.0, 8063.0], [2967.0, 5677.666666666667], [2975.0, 8038.0], [1.0, 100136.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2888.702786069661, 8408.445124378066]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1512.0, "minX": 1.68288162E12, "maxY": 105198.08333333333, "series": [{"data": [[1.68288192E12, 74735.71666666666], [1.68288162E12, 1904.7666666666667], [1.6828818E12, 105198.08333333333], [1.68288198E12, 4611.85], [1.68288168E12, 85317.45], [1.68288186E12, 101367.66666666667], [1.68288204E12, 4398.666666666667], [1.68288174E12, 87486.13333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68288192E12, 56313.6], [1.68288162E12, 1512.0], [1.6828818E12, 74247.6], [1.68288198E12, 3519.6], [1.68288168E12, 62840.4], [1.68288186E12, 72416.4], [1.68288204E12, 3066.0], [1.68288174E12, 63722.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288204E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2966.8444444444435, "minX": 1.68288162E12, "maxY": 97286.98082191784, "series": [{"data": [[1.68288192E12, 4790.05295346062], [1.68288162E12, 2966.8444444444435], [1.6828818E12, 6461.916393257154], [1.68288198E12, 17760.093078758953], [1.68288168E12, 7650.927416120833], [1.68288186E12, 6172.334299965198], [1.68288204E12, 97286.98082191784], [1.68288174E12, 12495.923988934244]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288204E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2966.738888888888, "minX": 1.68288162E12, "maxY": 97286.96712328757, "series": [{"data": [[1.68288192E12, 4790.037589498801], [1.68288162E12, 2966.738888888888], [1.6828818E12, 6461.906550514762], [1.68288198E12, 17760.088305489266], [1.68288168E12, 7650.9137815799895], [1.68288186E12, 6172.326180257494], [1.68288204E12, 97286.96712328757], [1.68288174E12, 12446.435779212195]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288204E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.2076372315035797, "minX": 1.68288162E12, "maxY": 4069.42233284307, "series": [{"data": [[1.68288192E12, 0.3400954653937947], [1.68288162E12, 51.29444444444443], [1.6828818E12, 4069.42233284307], [1.68288198E12, 0.2076372315035797], [1.68288168E12, 32.60152386044646], [1.68288186E12, 506.400765572443], [1.68288204E12, 0.21095890410958906], [1.68288174E12, 2522.140165986036]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288204E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 16.0, "minX": 1.68288162E12, "maxY": 186331.0, "series": [{"data": [[1.68288192E12, 13439.0], [1.68288162E12, 4347.0], [1.6828818E12, 160313.0], [1.68288198E12, 68210.0], [1.68288168E12, 50414.0], [1.68288186E12, 186331.0], [1.68288204E12, 100144.0], [1.68288174E12, 100139.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68288192E12, 8839.0], [1.68288162E12, 4320.8], [1.6828818E12, 11356.0], [1.68288198E12, 49243.0], [1.68288168E12, 18048.0], [1.68288186E12, 12713.0], [1.68288204E12, 100103.0], [1.68288174E12, 17623.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68288192E12, 12212.0], [1.68288162E12, 4347.0], [1.6828818E12, 134575.00000000006], [1.68288198E12, 66747.40000000001], [1.68288168E12, 40921.0], [1.68288186E12, 40971.0], [1.68288204E12, 100143.34], [1.68288174E12, 100069.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68288192E12, 9313.0], [1.68288162E12, 4329.8], [1.6828818E12, 18985.0], [1.68288198E12, 59124.0], [1.68288168E12, 26088.1], [1.68288186E12, 21708.0], [1.68288204E12, 100140.0], [1.68288174E12, 62035.34999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68288192E12, 19.0], [1.68288162E12, 120.0], [1.6828818E12, 19.0], [1.68288198E12, 7274.0], [1.68288168E12, 21.0], [1.68288186E12, 20.0], [1.68288204E12, 66709.0], [1.68288174E12, 16.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68288192E12, 5061.5], [1.68288162E12, 2345.5], [1.6828818E12, 108.0], [1.68288198E12, 10270.0], [1.68288168E12, 5318.0], [1.68288186E12, 126.0], [1.68288204E12, 100060.0], [1.68288174E12, 10030.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288204E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 52.0, "minX": 1.0, "maxY": 100135.5, "series": [{"data": [[2.0, 54357.5], [3.0, 57725.0], [4.0, 30990.0], [5.0, 9370.0], [6.0, 11981.5], [7.0, 5161.0], [8.0, 4961.0], [9.0, 3243.0], [11.0, 27447.0], [12.0, 26611.0], [13.0, 119.0], [15.0, 4379.0], [17.0, 3956.0], [19.0, 10762.5], [22.0, 6752.0], [23.0, 96.0], [26.0, 11678.5], [27.0, 14532.0], [28.0, 6241.5], [29.0, 10862.0], [33.0, 14920.0], [35.0, 92.0], [37.0, 436.0], [38.0, 100071.5], [41.0, 102.0], [44.0, 100135.5], [47.0, 8759.0], [49.0, 87.0], [50.0, 158.0], [53.0, 3261.0], [54.0, 7082.0], [55.0, 50313.5], [56.0, 33826.0], [58.0, 11618.5], [59.0, 91.0], [60.0, 4935.5], [61.0, 9518.5], [63.0, 7234.0], [62.0, 6721.0], [66.0, 101.0], [70.0, 75999.0], [68.0, 6010.5], [74.0, 7222.0], [73.0, 97377.0], [76.0, 3850.5], [77.0, 4161.0], [78.0, 10908.5], [80.0, 10883.0], [86.0, 80.0], [91.0, 2195.0], [93.0, 2308.0], [101.0, 7818.0], [107.0, 3067.0], [105.0, 4632.0], [108.0, 7526.0], [115.0, 71.0], [117.0, 3616.0], [119.0, 5643.0], [120.0, 97.5], [123.0, 817.0], [122.0, 2464.0], [127.0, 88.0], [125.0, 78.0], [124.0, 3227.0], [133.0, 82.0], [131.0, 2059.0], [134.0, 96.0], [135.0, 91.0], [129.0, 4657.0], [128.0, 91.5], [141.0, 9700.0], [136.0, 91.5], [138.0, 94.0], [143.0, 1194.0], [137.0, 108.0], [139.0, 92.0], [140.0, 100.0], [149.0, 92.0], [146.0, 7578.0], [145.0, 2344.0], [148.0, 67.0], [158.0, 7279.0], [165.0, 91.0], [173.0, 52.0], [171.0, 108.0], [190.0, 101.0], [201.0, 8402.0], [207.0, 88.0], [202.0, 100065.0], [212.0, 98.0], [209.0, 8086.0], [219.0, 74.0], [223.0, 7638.0], [225.0, 122.0], [227.0, 13927.0], [236.0, 106.0], [238.0, 93.0], [235.0, 72.0], [241.0, 5325.0], [245.0, 3300.0], [244.0, 4729.5], [253.0, 101.0], [266.0, 83.0], [259.0, 227.0], [264.0, 97.0], [262.0, 91.0], [268.0, 93.0], [270.0, 95.0], [267.0, 110.0], [258.0, 4918.0], [276.0, 13461.0], [274.0, 109.0], [280.0, 88.0], [273.0, 129.0], [286.0, 5548.5], [275.0, 4862.0], [295.0, 812.0], [314.0, 84.0], [309.0, 108.0], [308.0, 111.0], [306.0, 97.0], [315.0, 4078.0], [317.0, 7404.0], [334.0, 12740.0], [324.0, 11283.5], [325.0, 11179.0], [338.0, 107.0], [346.0, 11572.0], [365.0, 96.0], [352.0, 5665.0], [379.0, 87.0], [370.0, 9506.0], [371.0, 8409.0], [390.0, 13601.0], [391.0, 14123.0], [397.0, 95.0], [404.0, 9625.0], [417.0, 220.0], [432.0, 9831.5], [446.0, 132.0], [452.0, 11433.5], [463.0, 12622.0], [451.0, 319.0], [479.0, 11359.0], [477.0, 6495.0], [496.0, 12220.0], [566.0, 12374.0], [550.0, 12008.0], [546.0, 9135.5], [576.0, 7508.0], [646.0, 11148.0], [656.0, 8648.0], [684.0, 163.0], [672.0, 8228.0], [784.0, 12280.5], [817.0, 139.0], [1.0, 53262.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[70.0, 75119.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 817.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100135.5, "series": [{"data": [[2.0, 54357.5], [3.0, 57725.0], [4.0, 30990.0], [5.0, 9370.0], [6.0, 11981.5], [7.0, 5161.0], [8.0, 4960.5], [9.0, 3243.0], [11.0, 27447.0], [12.0, 26611.0], [13.0, 119.0], [15.0, 4379.0], [17.0, 3956.0], [19.0, 10762.5], [22.0, 6752.0], [23.0, 96.0], [26.0, 11678.5], [27.0, 14532.0], [28.0, 6241.5], [29.0, 10862.0], [33.0, 14920.0], [35.0, 92.0], [37.0, 436.0], [38.0, 100071.5], [41.0, 102.0], [44.0, 100135.5], [47.0, 8759.0], [49.0, 87.0], [50.0, 158.0], [53.0, 3261.0], [54.0, 7082.0], [55.0, 50313.5], [56.0, 33826.0], [58.0, 11618.5], [59.0, 91.0], [60.0, 4935.0], [61.0, 9518.5], [63.0, 7234.0], [62.0, 6721.0], [66.0, 101.0], [70.0, 75999.0], [68.0, 6010.5], [74.0, 7222.0], [73.0, 97377.0], [76.0, 3850.0], [77.0, 4161.0], [78.0, 10908.5], [80.0, 10883.0], [86.0, 80.0], [91.0, 2195.0], [93.0, 2308.0], [101.0, 7818.0], [107.0, 3067.0], [105.0, 4632.0], [108.0, 7526.0], [115.0, 71.0], [117.0, 3616.0], [119.0, 5643.0], [120.0, 97.5], [123.0, 817.0], [122.0, 2464.0], [127.0, 88.0], [125.0, 78.0], [124.0, 3227.0], [133.0, 82.0], [131.0, 2059.0], [134.0, 96.0], [135.0, 91.0], [129.0, 4657.0], [128.0, 91.0], [141.0, 9700.0], [136.0, 91.5], [138.0, 94.0], [143.0, 1194.0], [137.0, 108.0], [139.0, 92.0], [140.0, 100.0], [149.0, 92.0], [146.0, 7578.0], [145.0, 2344.0], [148.0, 67.0], [158.0, 7279.0], [165.0, 91.0], [173.0, 52.0], [171.0, 108.0], [190.0, 101.0], [201.0, 8402.0], [207.0, 88.0], [202.0, 100065.0], [212.0, 98.0], [209.0, 8086.0], [219.0, 74.0], [223.0, 7638.0], [225.0, 122.0], [227.0, 13927.0], [236.0, 106.0], [238.0, 93.0], [235.0, 72.0], [241.0, 5325.0], [245.0, 3300.0], [244.0, 4729.5], [253.0, 101.0], [266.0, 83.0], [259.0, 227.0], [264.0, 97.0], [262.0, 91.0], [268.0, 93.0], [270.0, 95.0], [267.0, 110.0], [258.0, 4918.0], [276.0, 13461.0], [274.0, 109.0], [280.0, 88.0], [273.0, 129.0], [286.0, 5548.5], [275.0, 4862.0], [295.0, 812.0], [314.0, 84.0], [309.0, 108.0], [308.0, 111.0], [306.0, 97.0], [315.0, 4078.0], [317.0, 7404.0], [334.0, 12740.0], [324.0, 11283.5], [325.0, 11179.0], [338.0, 107.0], [346.0, 11572.0], [365.0, 96.0], [352.0, 5665.0], [379.0, 87.0], [370.0, 9506.0], [371.0, 8409.0], [390.0, 13601.0], [391.0, 14123.0], [397.0, 95.0], [404.0, 9625.0], [417.0, 220.0], [432.0, 9831.5], [446.0, 132.0], [452.0, 11433.5], [463.0, 12622.0], [451.0, 319.0], [479.0, 11359.0], [477.0, 6495.0], [496.0, 12220.0], [566.0, 12374.0], [550.0, 12008.0], [546.0, 9135.5], [576.0, 7508.0], [646.0, 11148.0], [656.0, 8648.0], [684.0, 163.0], [672.0, 8228.0], [784.0, 12280.5], [817.0, 139.0], [1.0, 53262.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[70.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 817.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.166666666666666, "minX": 1.68288162E12, "maxY": 145.16666666666666, "series": [{"data": [[1.68288192E12, 113.9], [1.68288162E12, 11.166666666666666], [1.6828818E12, 145.16666666666666], [1.68288168E12, 138.46666666666667], [1.68288186E12, 140.7], [1.68288174E12, 120.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288192E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.68288162E12, "maxY": 147.31666666666666, "series": [{"data": [[1.68288192E12, 111.73333333333333], [1.68288162E12, 3.0], [1.6828818E12, 147.31666666666666], [1.68288198E12, 6.983333333333333], [1.68288168E12, 124.68333333333334], [1.68288186E12, 143.68333333333334], [1.68288204E12, 6.083333333333333], [1.68288174E12, 126.43333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68288174E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288204E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.68288162E12, "maxY": 147.31666666666666, "series": [{"data": [[1.68288192E12, 111.73333333333333], [1.68288162E12, 3.0], [1.6828818E12, 147.31666666666666], [1.68288198E12, 6.983333333333333], [1.68288168E12, 124.68333333333334], [1.68288186E12, 143.68333333333334], [1.68288204E12, 6.083333333333333], [1.68288174E12, 126.43333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68288174E12, 0.08333333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288204E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.68288162E12, "maxY": 147.31666666666666, "series": [{"data": [[1.68288192E12, 111.73333333333333], [1.68288162E12, 3.0], [1.6828818E12, 147.31666666666666], [1.68288198E12, 6.983333333333333], [1.68288168E12, 124.68333333333334], [1.68288186E12, 143.68333333333334], [1.68288204E12, 6.083333333333333], [1.68288174E12, 126.43333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68288174E12, 0.08333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288204E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

