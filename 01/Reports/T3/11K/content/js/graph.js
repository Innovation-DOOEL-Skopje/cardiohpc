/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 211104.0, "series": [{"data": [[0.0, 3.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 8.0], [1.6, 8.0], [1.7, 9.0], [1.8, 9.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 11.0], [2.3, 11.0], [2.4, 11.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 13.0], [3.0, 13.0], [3.1, 13.0], [3.2, 14.0], [3.3, 14.0], [3.4, 15.0], [3.5, 15.0], [3.6, 15.0], [3.7, 16.0], [3.8, 16.0], [3.9, 17.0], [4.0, 17.0], [4.1, 17.0], [4.2, 17.0], [4.3, 18.0], [4.4, 18.0], [4.5, 18.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 21.0], [5.4, 21.0], [5.5, 21.0], [5.6, 22.0], [5.7, 22.0], [5.8, 22.0], [5.9, 23.0], [6.0, 23.0], [6.1, 23.0], [6.2, 24.0], [6.3, 24.0], [6.4, 24.0], [6.5, 24.0], [6.6, 25.0], [6.7, 25.0], [6.8, 25.0], [6.9, 26.0], [7.0, 26.0], [7.1, 26.0], [7.2, 27.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 28.0], [7.7, 28.0], [7.8, 28.0], [7.9, 29.0], [8.0, 29.0], [8.1, 29.0], [8.2, 30.0], [8.3, 30.0], [8.4, 30.0], [8.5, 31.0], [8.6, 31.0], [8.7, 31.0], [8.8, 32.0], [8.9, 32.0], [9.0, 33.0], [9.1, 33.0], [9.2, 33.0], [9.3, 34.0], [9.4, 34.0], [9.5, 34.0], [9.6, 35.0], [9.7, 35.0], [9.8, 35.0], [9.9, 36.0], [10.0, 36.0], [10.1, 36.0], [10.2, 37.0], [10.3, 37.0], [10.4, 38.0], [10.5, 38.0], [10.6, 38.0], [10.7, 39.0], [10.8, 39.0], [10.9, 40.0], [11.0, 40.0], [11.1, 41.0], [11.2, 41.0], [11.3, 42.0], [11.4, 42.0], [11.5, 43.0], [11.6, 43.0], [11.7, 43.0], [11.8, 44.0], [11.9, 44.0], [12.0, 45.0], [12.1, 45.0], [12.2, 46.0], [12.3, 46.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 48.0], [12.8, 48.0], [12.9, 49.0], [13.0, 49.0], [13.1, 50.0], [13.2, 50.0], [13.3, 50.0], [13.4, 50.0], [13.5, 51.0], [13.6, 51.0], [13.7, 52.0], [13.8, 52.0], [13.9, 53.0], [14.0, 53.0], [14.1, 53.0], [14.2, 54.0], [14.3, 54.0], [14.4, 55.0], [14.5, 55.0], [14.6, 56.0], [14.7, 56.0], [14.8, 56.0], [14.9, 57.0], [15.0, 57.0], [15.1, 58.0], [15.2, 59.0], [15.3, 59.0], [15.4, 60.0], [15.5, 61.0], [15.6, 62.0], [15.7, 62.0], [15.8, 63.0], [15.9, 64.0], [16.0, 64.0], [16.1, 65.0], [16.2, 65.0], [16.3, 66.0], [16.4, 66.0], [16.5, 67.0], [16.6, 68.0], [16.7, 68.0], [16.8, 69.0], [16.9, 69.0], [17.0, 70.0], [17.1, 71.0], [17.2, 71.0], [17.3, 72.0], [17.4, 72.0], [17.5, 73.0], [17.6, 73.0], [17.7, 74.0], [17.8, 74.0], [17.9, 75.0], [18.0, 75.0], [18.1, 76.0], [18.2, 77.0], [18.3, 77.0], [18.4, 78.0], [18.5, 79.0], [18.6, 79.0], [18.7, 80.0], [18.8, 80.0], [18.9, 81.0], [19.0, 81.0], [19.1, 82.0], [19.2, 82.0], [19.3, 83.0], [19.4, 83.0], [19.5, 84.0], [19.6, 84.0], [19.7, 85.0], [19.8, 86.0], [19.9, 86.0], [20.0, 87.0], [20.1, 88.0], [20.2, 89.0], [20.3, 90.0], [20.4, 90.0], [20.5, 92.0], [20.6, 93.0], [20.7, 93.0], [20.8, 94.0], [20.9, 95.0], [21.0, 95.0], [21.1, 96.0], [21.2, 96.0], [21.3, 97.0], [21.4, 97.0], [21.5, 98.0], [21.6, 98.0], [21.7, 99.0], [21.8, 99.0], [21.9, 100.0], [22.0, 100.0], [22.1, 100.0], [22.2, 101.0], [22.3, 101.0], [22.4, 102.0], [22.5, 102.0], [22.6, 102.0], [22.7, 103.0], [22.8, 104.0], [22.9, 104.0], [23.0, 104.0], [23.1, 105.0], [23.2, 105.0], [23.3, 106.0], [23.4, 106.0], [23.5, 107.0], [23.6, 107.0], [23.7, 108.0], [23.8, 108.0], [23.9, 109.0], [24.0, 109.0], [24.1, 109.0], [24.2, 110.0], [24.3, 111.0], [24.4, 111.0], [24.5, 112.0], [24.6, 113.0], [24.7, 113.0], [24.8, 114.0], [24.9, 114.0], [25.0, 114.0], [25.1, 115.0], [25.2, 115.0], [25.3, 116.0], [25.4, 117.0], [25.5, 117.0], [25.6, 118.0], [25.7, 118.0], [25.8, 119.0], [25.9, 120.0], [26.0, 120.0], [26.1, 121.0], [26.2, 122.0], [26.3, 123.0], [26.4, 124.0], [26.5, 125.0], [26.6, 126.0], [26.7, 126.0], [26.8, 127.0], [26.9, 127.0], [27.0, 128.0], [27.1, 129.0], [27.2, 129.0], [27.3, 130.0], [27.4, 130.0], [27.5, 131.0], [27.6, 131.0], [27.7, 132.0], [27.8, 132.0], [27.9, 133.0], [28.0, 133.0], [28.1, 133.0], [28.2, 134.0], [28.3, 134.0], [28.4, 134.0], [28.5, 135.0], [28.6, 136.0], [28.7, 137.0], [28.8, 137.0], [28.9, 138.0], [29.0, 138.0], [29.1, 139.0], [29.2, 139.0], [29.3, 140.0], [29.4, 140.0], [29.5, 141.0], [29.6, 141.0], [29.7, 141.0], [29.8, 142.0], [29.9, 142.0], [30.0, 143.0], [30.1, 143.0], [30.2, 144.0], [30.3, 144.0], [30.4, 144.0], [30.5, 145.0], [30.6, 145.0], [30.7, 146.0], [30.8, 146.0], [30.9, 147.0], [31.0, 147.0], [31.1, 148.0], [31.2, 148.0], [31.3, 149.0], [31.4, 149.0], [31.5, 150.0], [31.6, 150.0], [31.7, 151.0], [31.8, 151.0], [31.9, 152.0], [32.0, 152.0], [32.1, 152.0], [32.2, 153.0], [32.3, 153.0], [32.4, 153.0], [32.5, 154.0], [32.6, 154.0], [32.7, 154.0], [32.8, 155.0], [32.9, 155.0], [33.0, 155.0], [33.1, 156.0], [33.2, 156.0], [33.3, 156.0], [33.4, 157.0], [33.5, 157.0], [33.6, 157.0], [33.7, 158.0], [33.8, 158.0], [33.9, 158.0], [34.0, 158.0], [34.1, 159.0], [34.2, 159.0], [34.3, 159.0], [34.4, 160.0], [34.5, 160.0], [34.6, 160.0], [34.7, 161.0], [34.8, 161.0], [34.9, 162.0], [35.0, 162.0], [35.1, 163.0], [35.2, 163.0], [35.3, 163.0], [35.4, 164.0], [35.5, 164.0], [35.6, 165.0], [35.7, 165.0], [35.8, 165.0], [35.9, 166.0], [36.0, 166.0], [36.1, 166.0], [36.2, 167.0], [36.3, 167.0], [36.4, 168.0], [36.5, 168.0], [36.6, 168.0], [36.7, 168.0], [36.8, 169.0], [36.9, 169.0], [37.0, 169.0], [37.1, 170.0], [37.2, 170.0], [37.3, 170.0], [37.4, 171.0], [37.5, 171.0], [37.6, 171.0], [37.7, 172.0], [37.8, 172.0], [37.9, 173.0], [38.0, 173.0], [38.1, 173.0], [38.2, 173.0], [38.3, 174.0], [38.4, 174.0], [38.5, 174.0], [38.6, 174.0], [38.7, 174.0], [38.8, 175.0], [38.9, 175.0], [39.0, 175.0], [39.1, 175.0], [39.2, 176.0], [39.3, 176.0], [39.4, 177.0], [39.5, 178.0], [39.6, 178.0], [39.7, 178.0], [39.8, 179.0], [39.9, 179.0], [40.0, 180.0], [40.1, 180.0], [40.2, 180.0], [40.3, 181.0], [40.4, 181.0], [40.5, 181.0], [40.6, 181.0], [40.7, 182.0], [40.8, 182.0], [40.9, 182.0], [41.0, 183.0], [41.1, 183.0], [41.2, 183.0], [41.3, 183.0], [41.4, 184.0], [41.5, 184.0], [41.6, 184.0], [41.7, 185.0], [41.8, 185.0], [41.9, 185.0], [42.0, 186.0], [42.1, 186.0], [42.2, 186.0], [42.3, 186.0], [42.4, 187.0], [42.5, 187.0], [42.6, 187.0], [42.7, 187.0], [42.8, 188.0], [42.9, 188.0], [43.0, 188.0], [43.1, 189.0], [43.2, 189.0], [43.3, 190.0], [43.4, 190.0], [43.5, 190.0], [43.6, 191.0], [43.7, 191.0], [43.8, 192.0], [43.9, 192.0], [44.0, 193.0], [44.1, 193.0], [44.2, 194.0], [44.3, 195.0], [44.4, 195.0], [44.5, 195.0], [44.6, 195.0], [44.7, 196.0], [44.8, 196.0], [44.9, 196.0], [45.0, 196.0], [45.1, 196.0], [45.2, 197.0], [45.3, 197.0], [45.4, 197.0], [45.5, 197.0], [45.6, 197.0], [45.7, 197.0], [45.8, 198.0], [45.9, 198.0], [46.0, 198.0], [46.1, 198.0], [46.2, 198.0], [46.3, 198.0], [46.4, 199.0], [46.5, 199.0], [46.6, 199.0], [46.7, 199.0], [46.8, 200.0], [46.9, 200.0], [47.0, 200.0], [47.1, 200.0], [47.2, 200.0], [47.3, 201.0], [47.4, 201.0], [47.5, 201.0], [47.6, 201.0], [47.7, 201.0], [47.8, 202.0], [47.9, 202.0], [48.0, 202.0], [48.1, 202.0], [48.2, 202.0], [48.3, 202.0], [48.4, 202.0], [48.5, 203.0], [48.6, 203.0], [48.7, 203.0], [48.8, 203.0], [48.9, 203.0], [49.0, 203.0], [49.1, 204.0], [49.2, 204.0], [49.3, 204.0], [49.4, 204.0], [49.5, 204.0], [49.6, 204.0], [49.7, 204.0], [49.8, 204.0], [49.9, 205.0], [50.0, 205.0], [50.1, 205.0], [50.2, 205.0], [50.3, 205.0], [50.4, 205.0], [50.5, 205.0], [50.6, 205.0], [50.7, 206.0], [50.8, 206.0], [50.9, 206.0], [51.0, 206.0], [51.1, 206.0], [51.2, 206.0], [51.3, 207.0], [51.4, 207.0], [51.5, 207.0], [51.6, 207.0], [51.7, 207.0], [51.8, 207.0], [51.9, 207.0], [52.0, 208.0], [52.1, 208.0], [52.2, 208.0], [52.3, 208.0], [52.4, 208.0], [52.5, 209.0], [52.6, 209.0], [52.7, 209.0], [52.8, 209.0], [52.9, 209.0], [53.0, 209.0], [53.1, 209.0], [53.2, 210.0], [53.3, 210.0], [53.4, 210.0], [53.5, 210.0], [53.6, 210.0], [53.7, 210.0], [53.8, 210.0], [53.9, 211.0], [54.0, 211.0], [54.1, 211.0], [54.2, 211.0], [54.3, 212.0], [54.4, 212.0], [54.5, 212.0], [54.6, 212.0], [54.7, 212.0], [54.8, 213.0], [54.9, 213.0], [55.0, 213.0], [55.1, 213.0], [55.2, 213.0], [55.3, 214.0], [55.4, 214.0], [55.5, 214.0], [55.6, 214.0], [55.7, 214.0], [55.8, 215.0], [55.9, 215.0], [56.0, 215.0], [56.1, 215.0], [56.2, 215.0], [56.3, 216.0], [56.4, 216.0], [56.5, 216.0], [56.6, 216.0], [56.7, 216.0], [56.8, 216.0], [56.9, 217.0], [57.0, 217.0], [57.1, 217.0], [57.2, 217.0], [57.3, 217.0], [57.4, 217.0], [57.5, 217.0], [57.6, 218.0], [57.7, 218.0], [57.8, 218.0], [57.9, 218.0], [58.0, 218.0], [58.1, 218.0], [58.2, 218.0], [58.3, 218.0], [58.4, 218.0], [58.5, 219.0], [58.6, 219.0], [58.7, 219.0], [58.8, 219.0], [58.9, 219.0], [59.0, 219.0], [59.1, 219.0], [59.2, 219.0], [59.3, 219.0], [59.4, 219.0], [59.5, 219.0], [59.6, 220.0], [59.7, 220.0], [59.8, 220.0], [59.9, 220.0], [60.0, 220.0], [60.1, 220.0], [60.2, 220.0], [60.3, 221.0], [60.4, 221.0], [60.5, 221.0], [60.6, 222.0], [60.7, 222.0], [60.8, 223.0], [60.9, 223.0], [61.0, 223.0], [61.1, 223.0], [61.2, 223.0], [61.3, 224.0], [61.4, 224.0], [61.5, 224.0], [61.6, 224.0], [61.7, 224.0], [61.8, 225.0], [61.9, 225.0], [62.0, 225.0], [62.1, 225.0], [62.2, 225.0], [62.3, 225.0], [62.4, 225.0], [62.5, 226.0], [62.6, 226.0], [62.7, 226.0], [62.8, 226.0], [62.9, 226.0], [63.0, 226.0], [63.1, 226.0], [63.2, 226.0], [63.3, 227.0], [63.4, 227.0], [63.5, 227.0], [63.6, 227.0], [63.7, 227.0], [63.8, 227.0], [63.9, 228.0], [64.0, 228.0], [64.1, 228.0], [64.2, 228.0], [64.3, 228.0], [64.4, 229.0], [64.5, 229.0], [64.6, 229.0], [64.7, 229.0], [64.8, 229.0], [64.9, 230.0], [65.0, 230.0], [65.1, 230.0], [65.2, 230.0], [65.3, 230.0], [65.4, 230.0], [65.5, 231.0], [65.6, 231.0], [65.7, 231.0], [65.8, 231.0], [65.9, 232.0], [66.0, 232.0], [66.1, 232.0], [66.2, 233.0], [66.3, 233.0], [66.4, 233.0], [66.5, 233.0], [66.6, 234.0], [66.7, 234.0], [66.8, 234.0], [66.9, 234.0], [67.0, 235.0], [67.1, 235.0], [67.2, 235.0], [67.3, 235.0], [67.4, 236.0], [67.5, 236.0], [67.6, 236.0], [67.7, 236.0], [67.8, 237.0], [67.9, 237.0], [68.0, 238.0], [68.1, 239.0], [68.2, 239.0], [68.3, 240.0], [68.4, 240.0], [68.5, 241.0], [68.6, 241.0], [68.7, 241.0], [68.8, 241.0], [68.9, 242.0], [69.0, 242.0], [69.1, 242.0], [69.2, 243.0], [69.3, 243.0], [69.4, 243.0], [69.5, 244.0], [69.6, 244.0], [69.7, 244.0], [69.8, 244.0], [69.9, 245.0], [70.0, 245.0], [70.1, 246.0], [70.2, 246.0], [70.3, 247.0], [70.4, 247.0], [70.5, 248.0], [70.6, 248.0], [70.7, 249.0], [70.8, 250.0], [70.9, 251.0], [71.0, 252.0], [71.1, 252.0], [71.2, 253.0], [71.3, 254.0], [71.4, 255.0], [71.5, 255.0], [71.6, 256.0], [71.7, 257.0], [71.8, 258.0], [71.9, 261.0], [72.0, 263.0], [72.1, 265.0], [72.2, 265.0], [72.3, 266.0], [72.4, 267.0], [72.5, 268.0], [72.6, 269.0], [72.7, 270.0], [72.8, 272.0], [72.9, 273.0], [73.0, 274.0], [73.1, 279.0], [73.2, 280.0], [73.3, 280.0], [73.4, 281.0], [73.5, 281.0], [73.6, 282.0], [73.7, 282.0], [73.8, 283.0], [73.9, 285.0], [74.0, 289.0], [74.1, 289.0], [74.2, 290.0], [74.3, 290.0], [74.4, 291.0], [74.5, 291.0], [74.6, 291.0], [74.7, 291.0], [74.8, 292.0], [74.9, 293.0], [75.0, 295.0], [75.1, 296.0], [75.2, 297.0], [75.3, 300.0], [75.4, 303.0], [75.5, 303.0], [75.6, 304.0], [75.7, 305.0], [75.8, 306.0], [75.9, 307.0], [76.0, 308.0], [76.1, 309.0], [76.2, 312.0], [76.3, 316.0], [76.4, 318.0], [76.5, 319.0], [76.6, 320.0], [76.7, 321.0], [76.8, 322.0], [76.9, 323.0], [77.0, 324.0], [77.1, 325.0], [77.2, 325.0], [77.3, 326.0], [77.4, 326.0], [77.5, 327.0], [77.6, 328.0], [77.7, 332.0], [77.8, 335.0], [77.9, 337.0], [78.0, 338.0], [78.1, 339.0], [78.2, 351.0], [78.3, 361.0], [78.4, 366.0], [78.5, 367.0], [78.6, 368.0], [78.7, 376.0], [78.8, 387.0], [78.9, 389.0], [79.0, 390.0], [79.1, 392.0], [79.2, 399.0], [79.3, 403.0], [79.4, 407.0], [79.5, 419.0], [79.6, 431.0], [79.7, 452.0], [79.8, 458.0], [79.9, 459.0], [80.0, 460.0], [80.1, 462.0], [80.2, 464.0], [80.3, 464.0], [80.4, 466.0], [80.5, 474.0], [80.6, 539.0], [80.7, 608.0], [80.8, 725.0], [80.9, 810.0], [81.0, 1005.0], [81.1, 1153.0], [81.2, 1249.0], [81.3, 1323.0], [81.4, 1400.0], [81.5, 1450.0], [81.6, 1488.0], [81.7, 1518.0], [81.8, 1657.0], [81.9, 1730.0], [82.0, 1826.0], [82.1, 1932.0], [82.2, 2180.0], [82.3, 2268.0], [82.4, 2454.0], [82.5, 2590.0], [82.6, 2654.0], [82.7, 2828.0], [82.8, 2947.0], [82.9, 3075.0], [83.0, 3277.0], [83.1, 3468.0], [83.2, 3584.0], [83.3, 3629.0], [83.4, 3883.0], [83.5, 3973.0], [83.6, 4085.0], [83.7, 4298.0], [83.8, 4495.0], [83.9, 4716.0], [84.0, 5133.0], [84.1, 5309.0], [84.2, 5675.0], [84.3, 5938.0], [84.4, 6391.0], [84.5, 6433.0], [84.6, 6439.0], [84.7, 6745.0], [84.8, 7045.0], [84.9, 7342.0], [85.0, 7356.0], [85.1, 7381.0], [85.2, 7408.0], [85.3, 7474.0], [85.4, 7736.0], [85.5, 8032.0], [85.6, 8212.0], [85.7, 8255.0], [85.8, 8276.0], [85.9, 8360.0], [86.0, 8521.0], [86.1, 8652.0], [86.2, 8713.0], [86.3, 9033.0], [86.4, 9086.0], [86.5, 9110.0], [86.6, 9129.0], [86.7, 9139.0], [86.8, 9297.0], [86.9, 9322.0], [87.0, 9323.0], [87.1, 9351.0], [87.2, 9446.0], [87.3, 9483.0], [87.4, 9505.0], [87.5, 9561.0], [87.6, 9579.0], [87.7, 9636.0], [87.8, 9703.0], [87.9, 9758.0], [88.0, 9772.0], [88.1, 9839.0], [88.2, 9857.0], [88.3, 9903.0], [88.4, 9918.0], [88.5, 9925.0], [88.6, 9926.0], [88.7, 9932.0], [88.8, 9934.0], [88.9, 9939.0], [89.0, 9982.0], [89.1, 10008.0], [89.2, 10147.0], [89.3, 10156.0], [89.4, 10158.0], [89.5, 10160.0], [89.6, 10178.0], [89.7, 10181.0], [89.8, 10277.0], [89.9, 10376.0], [90.0, 10613.0], [90.1, 10983.0], [90.2, 11014.0], [90.3, 11339.0], [90.4, 11673.0], [90.5, 11971.0], [90.6, 12021.0], [90.7, 12032.0], [90.8, 12262.0], [90.9, 12546.0], [91.0, 12684.0], [91.1, 12705.0], [91.2, 12735.0], [91.3, 12862.0], [91.4, 12878.0], [91.5, 12906.0], [91.6, 13016.0], [91.7, 13065.0], [91.8, 13114.0], [91.9, 13206.0], [92.0, 13217.0], [92.1, 13264.0], [92.2, 13298.0], [92.3, 13413.0], [92.4, 13530.0], [92.5, 13538.0], [92.6, 14018.0], [92.7, 14031.0], [92.8, 14111.0], [92.9, 14145.0], [93.0, 14259.0], [93.1, 14477.0], [93.2, 14631.0], [93.3, 14885.0], [93.4, 14976.0], [93.5, 15360.0], [93.6, 15627.0], [93.7, 15803.0], [93.8, 15967.0], [93.9, 16503.0], [94.0, 16681.0], [94.1, 17486.0], [94.2, 17898.0], [94.3, 18329.0], [94.4, 18536.0], [94.5, 18691.0], [94.6, 19414.0], [94.7, 19901.0], [94.8, 20451.0], [94.9, 21139.0], [95.0, 22376.0], [95.1, 23589.0], [95.2, 25552.0], [95.3, 27267.0], [95.4, 27855.0], [95.5, 28020.0], [95.6, 31143.0], [95.7, 31843.0], [95.8, 33342.0], [95.9, 34293.0], [96.0, 34388.0], [96.1, 35285.0], [96.2, 37849.0], [96.3, 38401.0], [96.4, 40862.0], [96.5, 41514.0], [96.6, 42901.0], [96.7, 45746.0], [96.8, 50505.0], [96.9, 57886.0], [97.0, 59351.0], [97.1, 60558.0], [97.2, 63255.0], [97.3, 64677.0], [97.4, 66683.0], [97.5, 67561.0], [97.6, 69390.0], [97.7, 75727.0], [97.8, 76777.0], [97.9, 79665.0], [98.0, 84922.0], [98.1, 88418.0], [98.2, 100020.0], [98.3, 100048.0], [98.4, 100074.0], [98.5, 100092.0], [98.6, 100113.0], [98.7, 100233.0], [98.8, 100294.0], [98.9, 100386.0], [99.0, 101120.0], [99.1, 107157.0], [99.2, 124191.0], [99.3, 127793.0], [99.4, 128538.0], [99.5, 129862.0], [99.6, 131008.0], [99.7, 131242.0], [99.8, 134710.0], [99.9, 148427.0], [100.0, 211104.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 31422.0, "series": [{"data": [[0.0, 24126.0], [132900.0, 2.0], [66700.0, 7.0], [73100.0, 1.0], [76300.0, 1.0], [82700.0, 2.0], [89100.0, 1.0], [95500.0, 3.0], [98700.0, 1.0], [111500.0, 2.0], [121100.0, 27.0], [124300.0, 3.0], [130700.0, 5.0], [127500.0, 2.0], [137000.0, 1.0], [100.0, 27477.0], [34500.0, 17.0], [134700.0, 82.0], [32900.0, 4.0], [37700.0, 1.0], [39300.0, 8.0], [40900.0, 3.0], [42500.0, 11.0], [45700.0, 12.0], [48900.0, 1.0], [47300.0, 4.0], [50500.0, 2.0], [200.0, 31422.0], [55300.0, 4.0], [58500.0, 13.0], [63300.0, 66.0], [64900.0, 3.0], [65800.0, 2.0], [69000.0, 1.0], [72200.0, 2.0], [300.0, 4328.0], [75400.0, 1.0], [78600.0, 19.0], [97800.0, 1.0], [101000.0, 19.0], [400.0, 1490.0], [123400.0, 3.0], [500.0, 127.0], [129800.0, 26.0], [600.0, 102.0], [164400.0, 1.0], [700.0, 139.0], [800.0, 78.0], [900.0, 38.0], [1000.0, 95.0], [1100.0, 81.0], [1200.0, 111.0], [1300.0, 157.0], [1400.0, 309.0], [1500.0, 94.0], [1600.0, 98.0], [1700.0, 115.0], [1800.0, 113.0], [1900.0, 89.0], [2000.0, 45.0], [2100.0, 117.0], [2200.0, 25.0], [2300.0, 73.0], [2400.0, 58.0], [2500.0, 104.0], [2600.0, 105.0], [2800.0, 122.0], [2700.0, 19.0], [2900.0, 112.0], [3000.0, 68.0], [3100.0, 52.0], [3300.0, 62.0], [3200.0, 60.0], [3400.0, 57.0], [3500.0, 152.0], [3700.0, 23.0], [3600.0, 92.0], [3800.0, 71.0], [3900.0, 93.0], [4000.0, 119.0], [4200.0, 48.0], [4600.0, 45.0], [71300.0, 2.0], [4400.0, 102.0], [74500.0, 1.0], [4800.0, 4.0], [77700.0, 1.0], [5000.0, 34.0], [5200.0, 47.0], [5400.0, 20.0], [5600.0, 19.0], [5800.0, 41.0], [93700.0, 1.0], [6000.0, 16.0], [6200.0, 3.0], [100100.0, 133.0], [6400.0, 184.0], [103300.0, 1.0], [6600.0, 40.0], [6800.0, 12.0], [109700.0, 2.0], [7000.0, 53.0], [7400.0, 167.0], [7200.0, 29.0], [7600.0, 43.0], [7800.0, 5.0], [8000.0, 108.0], [8400.0, 18.0], [9200.0, 103.0], [8800.0, 26.0], [9600.0, 186.0], [10000.0, 101.0], [10400.0, 62.0], [10800.0, 70.0], [11200.0, 15.0], [11600.0, 69.0], [12000.0, 163.0], [12400.0, 33.0], [13200.0, 359.0], [12800.0, 212.0], [14000.0, 224.0], [14400.0, 38.0], [14800.0, 83.0], [15200.0, 14.0], [15600.0, 103.0], [16000.0, 3.0], [16800.0, 2.0], [18400.0, 58.0], [17600.0, 2.0], [19200.0, 2.0], [20000.0, 5.0], [20800.0, 5.0], [21600.0, 12.0], [22400.0, 28.0], [23200.0, 1.0], [25600.0, 13.0], [26400.0, 2.0], [27200.0, 48.0], [28000.0, 16.0], [30400.0, 1.0], [31200.0, 21.0], [33600.0, 3.0], [131900.0, 2.0], [35200.0, 40.0], [38400.0, 1.0], [46400.0, 4.0], [59200.0, 3.0], [57600.0, 5.0], [60800.0, 3.0], [62400.0, 2.0], [64000.0, 1.0], [67200.0, 2.0], [73600.0, 4.0], [76800.0, 22.0], [89600.0, 1.0], [86400.0, 2.0], [92800.0, 4.0], [99200.0, 2.0], [115200.0, 1.0], [124800.0, 1.0], [128000.0, 11.0], [67100.0, 13.0], [70300.0, 1.0], [73500.0, 1.0], [76700.0, 50.0], [79900.0, 18.0], [86300.0, 65.0], [99100.0, 1.0], [121500.0, 1.0], [127900.0, 1.0], [34700.0, 6.0], [133900.0, 1.0], [33100.0, 12.0], [36300.0, 3.0], [37900.0, 16.0], [41100.0, 1.0], [47500.0, 4.0], [53900.0, 1.0], [57100.0, 1.0], [55500.0, 3.0], [65100.0, 1.0], [63500.0, 10.0], [69400.0, 1.0], [66200.0, 1.0], [72600.0, 5.0], [75800.0, 2.0], [85400.0, 2.0], [91800.0, 4.0], [101400.0, 59.0], [130200.0, 14.0], [68500.0, 1.0], [71700.0, 1.0], [81300.0, 3.0], [87700.0, 2.0], [119700.0, 26.0], [126100.0, 1.0], [129300.0, 16.0], [16900.0, 7.0], [17700.0, 8.0], [18500.0, 115.0], [19300.0, 18.0], [20100.0, 5.0], [20900.0, 8.0], [22500.0, 22.0], [21700.0, 2.0], [23300.0, 5.0], [25700.0, 6.0], [26500.0, 1.0], [27300.0, 3.0], [28100.0, 2.0], [28900.0, 15.0], [29700.0, 18.0], [31300.0, 8.0], [32100.0, 2.0], [33800.0, 16.0], [35400.0, 2.0], [38600.0, 6.0], [37000.0, 2.0], [41800.0, 19.0], [46600.0, 1.0], [51400.0, 2.0], [57800.0, 28.0], [59400.0, 2.0], [64200.0, 1.0], [67600.0, 24.0], [80400.0, 1.0], [83600.0, 2.0], [96400.0, 2.0], [122000.0, 1.0], [128400.0, 26.0], [67500.0, 20.0], [70700.0, 2.0], [73900.0, 3.0], [77100.0, 1.0], [80300.0, 2.0], [83500.0, 2.0], [86700.0, 2.0], [99500.0, 1.0], [128300.0, 5.0], [132200.0, 2.0], [33300.0, 52.0], [36500.0, 5.0], [34900.0, 3.0], [42900.0, 24.0], [41300.0, 2.0], [46100.0, 1.0], [47700.0, 3.0], [50900.0, 1.0], [49300.0, 12.0], [206700.0, 1.0], [57300.0, 4.0], [55700.0, 1.0], [58900.0, 1.0], [60500.0, 3.0], [66600.0, 13.0], [73000.0, 1.0], [69800.0, 1.0], [76200.0, 33.0], [79400.0, 1.0], [82600.0, 1.0], [85800.0, 2.0], [89000.0, 1.0], [95400.0, 1.0], [117800.0, 1.0], [127400.0, 29.0], [130600.0, 1.0], [65700.0, 2.0], [68900.0, 1.0], [75300.0, 1.0], [81700.0, 2.0], [84900.0, 1.0], [116900.0, 1.0], [123300.0, 1.0], [8500.0, 93.0], [8900.0, 34.0], [9300.0, 378.0], [9700.0, 285.0], [10100.0, 720.0], [10500.0, 23.0], [10900.0, 26.0], [11300.0, 40.0], [11700.0, 36.0], [12100.0, 43.0], [12500.0, 97.0], [13300.0, 98.0], [12900.0, 117.0], [13700.0, 3.0], [14100.0, 248.0], [14500.0, 97.0], [15300.0, 12.0], [14900.0, 153.0], [15700.0, 24.0], [16100.0, 3.0], [17000.0, 1.0], [17800.0, 20.0], [18600.0, 38.0], [19400.0, 99.0], [21000.0, 4.0], [22600.0, 2.0], [23400.0, 5.0], [24200.0, 2.0], [25000.0, 2.0], [25800.0, 21.0], [26600.0, 1.0], [27400.0, 3.0], [28200.0, 11.0], [29000.0, 2.0], [30600.0, 3.0], [29800.0, 2.0], [31400.0, 19.0], [32200.0, 8.0], [133500.0, 2.0], [38800.0, 9.0], [37200.0, 23.0], [40400.0, 9.0], [46800.0, 3.0], [45200.0, 1.0], [48400.0, 2.0], [53200.0, 1.0], [54800.0, 3.0], [58000.0, 17.0], [59600.0, 60.0], [64400.0, 1.0], [71200.0, 3.0], [74400.0, 3.0], [77600.0, 2.0], [80800.0, 1.0], [96800.0, 2.0], [100000.0, 434.0], [122400.0, 3.0], [133700.0, 20.0], [71100.0, 1.0], [77500.0, 1.0], [80700.0, 2.0], [87100.0, 1.0], [90300.0, 2.0], [96700.0, 1.0], [33500.0, 2.0], [35100.0, 2.0], [38300.0, 5.0], [41500.0, 80.0], [44700.0, 1.0], [43100.0, 11.0], [47900.0, 7.0], [49500.0, 2.0], [51100.0, 4.0], [52700.0, 2.0], [55900.0, 1.0], [59100.0, 19.0], [57500.0, 11.0], [62300.0, 1.0], [67000.0, 3.0], [70200.0, 3.0], [73400.0, 1.0], [76600.0, 1.0], [79800.0, 1.0], [86200.0, 5.0], [89400.0, 2.0], [95800.0, 4.0], [127800.0, 1.0], [131000.0, 89.0], [66100.0, 3.0], [69300.0, 2.0], [75700.0, 45.0], [78900.0, 11.0], [85300.0, 2.0], [88500.0, 1.0], [101300.0, 5.0], [126900.0, 1.0], [123700.0, 1.0], [130100.0, 3.0], [135000.0, 4.0], [17100.0, 3.0], [17900.0, 27.0], [18700.0, 31.0], [19500.0, 2.0], [20300.0, 8.0], [21100.0, 3.0], [21900.0, 9.0], [23500.0, 22.0], [22700.0, 4.0], [24300.0, 4.0], [25900.0, 2.0], [26700.0, 16.0], [27500.0, 2.0], [28300.0, 4.0], [29900.0, 6.0], [32300.0, 1.0], [34200.0, 26.0], [40600.0, 18.0], [45400.0, 2.0], [51800.0, 1.0], [55000.0, 1.0], [53400.0, 2.0], [56600.0, 1.0], [58200.0, 3.0], [59800.0, 1.0], [61400.0, 1.0], [63000.0, 4.0], [64600.0, 35.0], [71600.0, 2.0], [74800.0, 1.0], [81200.0, 1.0], [87600.0, 1.0], [94000.0, 1.0], [90800.0, 2.0], [97200.0, 3.0], [100400.0, 17.0], [116400.0, 3.0], [129200.0, 32.0], [132000.0, 2.0], [68300.0, 5.0], [71500.0, 1.0], [84300.0, 2.0], [93900.0, 2.0], [97100.0, 1.0], [100300.0, 85.0], [129100.0, 1.0], [33700.0, 19.0], [35300.0, 8.0], [36900.0, 1.0], [38500.0, 5.0], [40100.0, 1.0], [41700.0, 10.0], [43300.0, 2.0], [52900.0, 1.0], [54500.0, 2.0], [56100.0, 2.0], [57700.0, 1.0], [59300.0, 30.0], [60900.0, 3.0], [62500.0, 2.0], [64100.0, 3.0], [67400.0, 18.0], [77000.0, 2.0], [83400.0, 16.0], [86600.0, 1.0], [89800.0, 2.0], [96200.0, 2.0], [128200.0, 17.0], [148400.0, 126.0], [4300.0, 26.0], [4100.0, 46.0], [66500.0, 8.0], [4500.0, 31.0], [69700.0, 2.0], [72900.0, 2.0], [76100.0, 16.0], [4700.0, 63.0], [4900.0, 9.0], [5100.0, 59.0], [79300.0, 2.0], [82500.0, 3.0], [5300.0, 73.0], [85700.0, 3.0], [5500.0, 26.0], [5700.0, 32.0], [5900.0, 44.0], [6100.0, 19.0], [6300.0, 106.0], [98500.0, 1.0], [6500.0, 35.0], [6900.0, 30.0], [6700.0, 60.0], [7100.0, 24.0], [7300.0, 331.0], [7500.0, 36.0], [7700.0, 11.0], [7900.0, 84.0], [124100.0, 4.0], [8100.0, 20.0], [127300.0, 2.0], [8200.0, 279.0], [8600.0, 127.0], [9000.0, 213.0], [9400.0, 215.0], [9800.0, 263.0], [10200.0, 55.0], [10600.0, 25.0], [11000.0, 172.0], [11400.0, 20.0], [12200.0, 41.0], [11800.0, 35.0], [12600.0, 76.0], [13000.0, 214.0], [13400.0, 10.0], [13800.0, 3.0], [14200.0, 45.0], [14600.0, 9.0], [15000.0, 14.0], [15400.0, 16.0], [15800.0, 71.0], [16200.0, 9.0], [16400.0, 32.0], [17200.0, 4.0], [18000.0, 13.0], [18800.0, 1.0], [20400.0, 36.0], [19600.0, 1.0], [21200.0, 24.0], [22800.0, 4.0], [25200.0, 7.0], [26000.0, 2.0], [26800.0, 21.0], [29200.0, 4.0], [30000.0, 3.0], [32400.0, 4.0], [135100.0, 1.0], [32800.0, 24.0], [34400.0, 7.0], [36000.0, 2.0], [37600.0, 21.0], [40800.0, 34.0], [48800.0, 2.0], [50400.0, 2.0], [55200.0, 3.0], [56800.0, 9.0], [58400.0, 6.0], [60000.0, 1.0], [63200.0, 102.0], [64800.0, 1.0], [68800.0, 3.0], [65600.0, 7.0], [72000.0, 1.0], [81600.0, 4.0], [84800.0, 6.0], [91200.0, 1.0], [123200.0, 2.0], [131200.0, 42.0], [68700.0, 5.0], [84700.0, 2.0], [97500.0, 1.0], [107100.0, 2.0], [119900.0, 2.0], [129500.0, 2.0], [203400.0, 1.0], [35500.0, 2.0], [38700.0, 1.0], [37100.0, 1.0], [40300.0, 2.0], [41900.0, 12.0], [45100.0, 35.0], [51500.0, 2.0], [57900.0, 1.0], [59500.0, 28.0], [61100.0, 2.0], [62700.0, 2.0], [64300.0, 1.0], [67800.0, 10.0], [80600.0, 2.0], [83800.0, 8.0], [93400.0, 2.0], [119000.0, 2.0], [128600.0, 28.0], [66900.0, 23.0], [73300.0, 1.0], [76500.0, 3.0], [79700.0, 19.0], [86100.0, 11.0], [102100.0, 14.0], [114900.0, 1.0], [124500.0, 5.0], [127700.0, 6.0], [130900.0, 11.0], [16500.0, 73.0], [17300.0, 2.0], [18100.0, 53.0], [18900.0, 11.0], [19700.0, 13.0], [20500.0, 59.0], [21300.0, 2.0], [22100.0, 1.0], [22900.0, 22.0], [23700.0, 25.0], [24500.0, 9.0], [25300.0, 4.0], [26900.0, 1.0], [28500.0, 4.0], [27700.0, 25.0], [29300.0, 5.0], [31700.0, 1.0], [33000.0, 12.0], [36200.0, 2.0], [37800.0, 13.0], [41000.0, 2.0], [45800.0, 4.0], [49000.0, 32.0], [47400.0, 2.0], [50600.0, 2.0], [52200.0, 4.0], [211100.0, 1.0], [60200.0, 1.0], [63400.0, 3.0], [65000.0, 6.0], [69200.0, 5.0], [72400.0, 1.0], [75600.0, 8.0], [78800.0, 26.0], [85200.0, 3.0], [88400.0, 2.0], [94800.0, 4.0], [98000.0, 1.0], [101200.0, 1.0], [107600.0, 4.0], [120400.0, 4.0], [130000.0, 1.0], [140000.0, 1.0], [131300.0, 23.0], [72300.0, 4.0], [75500.0, 1.0], [78700.0, 2.0], [101100.0, 92.0], [34100.0, 4.0], [35700.0, 28.0], [37300.0, 5.0], [38900.0, 28.0], [40500.0, 2.0], [43700.0, 26.0], [48500.0, 2.0], [51700.0, 3.0], [54900.0, 2.0], [56500.0, 2.0], [58100.0, 2.0], [59700.0, 8.0], [64500.0, 2.0], [68200.0, 4.0], [74600.0, 5.0], [87400.0, 2.0], [93800.0, 3.0], [100200.0, 161.0], [134900.0, 6.0], [160500.0, 13.0], [67300.0, 6.0], [70500.0, 2.0], [83300.0, 1.0], [86500.0, 1.0], [89700.0, 1.0], [96100.0, 2.0], [128100.0, 34.0], [8300.0, 93.0], [8700.0, 95.0], [9100.0, 278.0], [145400.0, 4.0], [9500.0, 286.0], [9900.0, 810.0], [10300.0, 103.0], [10700.0, 11.0], [11100.0, 10.0], [11500.0, 13.0], [11900.0, 112.0], [12300.0, 22.0], [12700.0, 283.0], [13100.0, 131.0], [13500.0, 250.0], [14300.0, 67.0], [13900.0, 8.0], [14700.0, 36.0], [15100.0, 21.0], [15500.0, 65.0], [16300.0, 17.0], [15900.0, 86.0], [17400.0, 6.0], [16600.0, 96.0], [18200.0, 12.0], [19000.0, 9.0], [19800.0, 9.0], [21400.0, 31.0], [23000.0, 2.0], [23800.0, 12.0], [25400.0, 17.0], [24600.0, 2.0], [26200.0, 6.0], [27000.0, 1.0], [27800.0, 128.0], [28600.0, 2.0], [29400.0, 1.0], [30200.0, 2.0], [31000.0, 7.0], [31800.0, 51.0], [32600.0, 1.0], [33200.0, 11.0], [34800.0, 2.0], [38000.0, 8.0], [39600.0, 2.0], [41200.0, 9.0], [42800.0, 5.0], [44400.0, 2.0], [47600.0, 1.0], [50800.0, 2.0], [200700.0, 2.0], [52400.0, 2.0], [54000.0, 1.0], [57200.0, 1.0], [58800.0, 1.0], [60400.0, 2.0], [65200.0, 4.0], [63600.0, 3.0], [66400.0, 1.0], [69600.0, 1.0], [76000.0, 4.0], [85600.0, 3.0], [88800.0, 2.0], [92000.0, 1.0], [111200.0, 1.0], [127200.0, 1.0], [69500.0, 9.0], [66300.0, 27.0], [72700.0, 1.0], [85500.0, 1.0], [82300.0, 1.0], [88700.0, 2.0], [101500.0, 5.0], [130300.0, 62.0], [134600.0, 20.0], [34300.0, 140.0], [132300.0, 3.0], [40700.0, 11.0], [42300.0, 2.0], [55100.0, 1.0], [58300.0, 2.0], [59900.0, 1.0], [63100.0, 2.0], [61500.0, 2.0], [68600.0, 2.0], [71800.0, 1.0], [84600.0, 2.0], [91000.0, 2.0], [119800.0, 1.0], [67700.0, 44.0], [74100.0, 2.0], [80500.0, 2.0], [83700.0, 2.0], [96500.0, 1.0], [118900.0, 1.0], [128500.0, 19.0], [16700.0, 31.0], [17500.0, 79.0], [18300.0, 17.0], [19100.0, 17.0], [19900.0, 92.0], [21500.0, 23.0], [20700.0, 2.0], [22300.0, 4.0], [23900.0, 2.0], [24700.0, 5.0], [25500.0, 17.0], [26300.0, 2.0], [27900.0, 7.0], [29500.0, 4.0], [30300.0, 2.0], [31100.0, 32.0], [32700.0, 9.0], [31900.0, 3.0], [33400.0, 2.0], [35000.0, 1.0], [38200.0, 70.0], [41400.0, 35.0], [44600.0, 1.0], [46200.0, 14.0], [47800.0, 1.0], [49400.0, 2.0], [52600.0, 5.0], [55800.0, 1.0], [59000.0, 1.0], [57400.0, 2.0], [65400.0, 2.0], [66800.0, 19.0], [70000.0, 1.0], [79600.0, 2.0], [92400.0, 1.0], [98800.0, 1.0], [111600.0, 12.0], [118000.0, 1.0], [121200.0, 1.0], [124400.0, 17.0], [127600.0, 46.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 211100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 320.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 88843.0, "series": [{"data": [[0.0, 88843.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1238.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 19884.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 320.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 234.6480686695278, "minX": 1.68288516E12, "maxY": 3000.0, "series": [{"data": [[1.68288516E12, 3000.0], [1.68288534E12, 3000.0], [1.68288528E12, 3000.0], [1.68288546E12, 2461.3223593964344], [1.6828854E12, 3000.0], [1.68288552E12, 234.6480686695278], [1.68288522E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288552E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 166.0, "minX": 5.0, "maxY": 124803.0, "series": [{"data": [[5.0, 100268.0], [6.0, 100268.0], [7.0, 100267.0], [8.0, 100267.0], [9.0, 100265.0], [12.0, 115216.0], [14.0, 100265.25], [15.0, 100264.0], [17.0, 100260.5], [20.0, 100260.66666666667], [29.0, 100256.0], [33.0, 100254.83333333333], [39.0, 100244.0], [38.0, 100253.8], [40.0, 100226.0], [45.0, 100113.0], [44.0, 100122.25], [47.0, 100098.0], [50.0, 100097.0], [52.0, 100095.8], [54.0, 100096.0], [57.0, 100095.5], [59.0, 100095.0], [61.0, 100095.0], [63.0, 100095.5], [62.0, 100095.0], [67.0, 100093.0], [66.0, 100093.0], [65.0, 100093.5], [70.0, 100092.0], [69.0, 100093.0], [75.0, 100091.0], [73.0, 100092.0], [72.0, 100091.5], [78.0, 100090.0], [77.0, 100089.0], [76.0, 100090.0], [83.0, 100089.0], [86.0, 100088.0], [85.0, 100089.0], [84.0, 100088.5], [91.0, 100085.5], [89.0, 100087.0], [88.0, 100088.5], [95.0, 100068.0], [92.0, 100069.0], [99.0, 100068.0], [103.0, 100066.5], [101.0, 100066.8], [100.0, 100068.0], [111.0, 100045.0], [115.0, 100044.0], [112.0, 100044.0], [117.0, 100043.0], [116.0, 100042.5], [122.0, 100039.0], [121.0, 100042.0], [120.0, 100041.66666666667], [127.0, 100035.0], [126.0, 100034.0], [125.0, 100037.0], [124.0, 100037.5], [134.0, 100034.0], [133.0, 100033.0], [131.0, 100035.0], [130.0, 100034.5], [136.0, 100029.0], [151.0, 100018.8], [149.0, 100019.0], [147.0, 100019.0], [146.0, 100020.0], [157.0, 100132.0], [156.0, 100142.0], [154.0, 98896.0], [153.0, 100239.0], [152.0, 100243.0], [167.0, 100113.0], [166.0, 100113.33333333333], [165.0, 100113.0], [164.0, 100114.0], [163.0, 100115.0], [175.0, 100108.5], [173.0, 100108.0], [172.0, 100112.0], [171.0, 100112.0], [183.0, 100087.0], [182.0, 100094.5], [180.0, 100095.0], [179.0, 100104.0], [177.0, 100107.0], [176.0, 100107.0], [187.0, 100085.0], [185.0, 100086.0], [184.0, 100087.0], [199.0, 100081.5], [197.0, 100081.25], [195.0, 100081.0], [207.0, 100078.0], [205.0, 100079.0], [204.0, 100079.5], [202.0, 100080.0], [201.0, 100080.0], [200.0, 100080.0], [213.0, 100075.0], [210.0, 100076.0], [209.0, 100077.0], [208.0, 100077.0], [223.0, 100067.0], [222.0, 100067.0], [221.0, 100069.0], [220.0, 100070.0], [219.0, 100071.5], [217.0, 100073.0], [216.0, 100073.33333333333], [231.0, 100064.0], [227.0, 100064.5], [225.0, 100067.0], [239.0, 100062.33333333333], [238.0, 100063.25], [237.0, 100063.0], [234.0, 100063.0], [232.0, 100063.0], [247.0, 100060.0], [244.0, 100061.0], [242.0, 100062.0], [241.0, 100062.0], [255.0, 100051.0], [254.0, 100052.0], [253.0, 100053.5], [251.0, 100054.0], [249.0, 100060.0], [248.0, 100061.0], [270.0, 100019.0], [268.0, 100020.0], [267.0, 100035.0], [266.0, 100036.0], [265.0, 100037.0], [264.0, 100047.0], [261.0, 100049.66666666667], [260.0, 100049.0], [259.0, 100049.0], [256.0, 100050.0], [275.0, 100100.0], [285.0, 100095.0], [284.0, 100096.0], [282.0, 100096.0], [281.0, 100098.0], [280.0, 100098.5], [278.0, 100099.0], [272.0, 100227.0], [274.0, 100224.0], [273.0, 100226.0], [301.0, 100092.0], [303.0, 100092.0], [300.0, 100092.0], [298.0, 100093.0], [297.0, 100093.0], [296.0, 100093.0], [294.0, 100094.0], [290.0, 100094.0], [288.0, 100095.0], [307.0, 100088.0], [317.0, 100076.0], [316.0, 100079.0], [314.0, 100080.0], [312.0, 100082.0], [311.0, 100085.0], [310.0, 100086.0], [309.0, 100087.0], [306.0, 100091.0], [305.0, 100091.0], [335.0, 100054.5], [333.0, 100055.0], [330.0, 100056.0], [329.0, 100057.0], [328.0, 100057.0], [325.0, 100058.0], [324.0, 100069.0], [322.0, 100070.0], [320.0, 100071.33333333333], [339.0, 100046.0], [350.0, 100024.0], [349.0, 100025.0], [348.0, 100026.0], [347.0, 100026.0], [343.0, 100035.0], [340.0, 100044.0], [337.0, 100047.0], [336.0, 100048.0], [355.0, 100020.0], [366.0, 100295.0], [365.0, 115768.0], [363.0, 115777.0], [361.0, 100314.0], [360.0, 99522.0], [359.0, 97889.0], [358.0, 100018.5], [356.0, 100020.0], [354.0, 100022.0], [352.0, 100023.0], [382.0, 93870.0], [383.0, 92862.0], [381.0, 124803.0], [380.0, 94879.0], [379.0, 94881.0], [378.0, 95889.0], [377.0, 95891.0], [376.0, 96898.0], [375.0, 95486.0], [369.0, 98515.0], [368.0, 100287.0], [371.0, 95872.0], [370.0, 96880.0], [374.0, 96494.0], [373.0, 96496.0], [372.0, 97503.0], [398.0, 84380.0], [399.0, 81739.0], [397.0, 84382.0], [396.0, 85391.0], [395.0, 85392.0], [394.0, 86399.0], [393.0, 86401.0], [392.0, 87408.0], [391.0, 87410.0], [385.0, 91853.0], [384.0, 123791.0], [387.0, 89430.0], [386.0, 91851.0], [390.0, 88418.0], [389.0, 88420.0], [388.0, 89428.0], [414.0, 77718.0], [415.0, 76710.0], [413.0, 76307.0], [412.0, 78727.0], [411.0, 78729.0], [410.0, 79737.0], [409.0, 79740.0], [408.0, 80746.0], [407.0, 79335.0], [401.0, 82363.0], [400.0, 83370.0], [403.0, 79720.0], [402.0, 80728.0], [406.0, 80342.0], [405.0, 80345.0], [404.0, 81351.0], [430.0, 68228.0], [431.0, 67220.0], [429.0, 68230.0], [428.0, 69237.0], [427.0, 67606.0], [426.0, 68614.0], [425.0, 68616.0], [424.0, 71257.0], [423.0, 71258.0], [417.0, 72653.0], [416.0, 73661.0], [419.0, 71644.0], [418.0, 72650.0], [422.0, 72266.0], [421.0, 72269.0], [420.0, 71642.0], [446.0, 61569.0], [447.0, 60560.0], [444.0, 62576.0], [435.0, 66616.0], [434.0, 67623.0], [433.0, 66212.0], [432.0, 67218.0], [443.0, 62582.0], [442.0, 63585.0], [441.0, 63588.0], [440.0, 64595.0], [439.0, 64597.0], [438.0, 65605.0], [437.0, 64192.0], [436.0, 66614.0], [462.0, 53492.0], [463.0, 52484.0], [461.0, 53493.0], [460.0, 54501.0], [459.0, 54507.0], [458.0, 55509.0], [457.0, 55512.0], [456.0, 56518.0], [455.0, 56521.0], [449.0, 59551.0], [448.0, 60558.0], [451.0, 58540.0], [450.0, 59548.0], [454.0, 57529.0], [453.0, 57530.0], [452.0, 58537.0], [478.0, 45415.0], [479.0, 44408.0], [477.0, 45417.0], [476.0, 46424.0], [475.0, 46427.0], [474.0, 47434.0], [473.0, 47437.0], [472.0, 48444.0], [471.0, 48445.0], [465.0, 51474.0], [464.0, 52482.0], [467.0, 50464.0], [466.0, 51472.0], [470.0, 49453.0], [469.0, 49455.0], [468.0, 50462.0], [494.0, 37341.0], [495.0, 36333.0], [493.0, 37343.0], [492.0, 38350.0], [491.0, 38352.0], [490.0, 39359.0], [489.0, 39362.0], [488.0, 40369.0], [487.0, 40370.0], [481.0, 43398.0], [480.0, 44406.0], [483.0, 42389.0], [482.0, 43396.0], [486.0, 41378.0], [485.0, 41380.0], [484.0, 42387.0], [510.0, 35240.0], [511.0, 35238.0], [509.0, 35240.0], [508.0, 35240.0], [507.0, 35241.0], [506.0, 35242.0], [505.0, 35243.0], [504.0, 35242.0], [503.0, 35244.0], [496.0, 36331.0], [498.0, 35322.0], [497.0, 35324.0], [502.0, 35245.0], [501.0, 35246.333333333336], [537.0, 34919.0], [542.0, 34395.0], [543.0, 34394.0], [529.0, 35206.0], [528.0, 35206.0], [531.0, 35204.0], [530.0, 35204.0], [533.0, 34291.0], [532.0, 35204.0], [541.0, 34395.0], [539.0, 34395.0], [538.0, 34395.0], [536.0, 34924.0], [519.0, 35223.0], [518.0, 35224.0], [517.0, 35224.0], [516.0, 35233.0], [515.0, 35235.0], [514.0, 35235.0], [513.0, 35235.0], [512.0, 35237.0], [526.0, 35212.0], [525.0, 35212.0], [524.0, 35214.0], [522.0, 35215.0], [521.0, 35218.0], [520.0, 35222.0], [535.0, 34942.0], [534.0, 34289.0], [570.0, 34385.5], [563.0, 34388.0], [573.0, 34384.0], [574.0, 34383.0], [562.0, 34389.25], [572.0, 34385.0], [568.0, 34386.0], [551.0, 34391.0], [549.0, 34392.0], [548.0, 34392.0], [547.0, 34393.0], [546.0, 34393.0], [545.0, 34393.5], [558.0, 34389.0], [557.0, 34390.0], [555.0, 34391.0], [554.0, 34391.0], [553.0, 34390.5], [567.0, 34387.0], [565.0, 34387.0], [564.0, 34388.0], [604.0, 34366.0], [596.0, 34372.0], [606.0, 34364.0], [592.0, 34374.0], [595.0, 34373.0], [594.0, 34374.0], [603.0, 34367.0], [601.0, 34368.0], [600.0, 34371.0], [583.0, 34380.0], [580.0, 34381.0], [579.0, 34382.0], [577.0, 34382.0], [576.0, 34382.0], [589.0, 34376.0], [588.0, 34378.0], [587.0, 34379.0], [586.0, 34378.5], [584.0, 34379.666666666664], [599.0, 34370.0], [598.0, 34372.0], [597.0, 34372.0], [633.0, 34347.5], [638.0, 34336.5], [639.0, 34336.0], [636.0, 34341.0], [635.0, 34341.0], [634.0, 34347.0], [623.0, 34356.0], [611.0, 34362.0], [608.0, 34363.0], [613.0, 34360.0], [612.0, 34361.0], [615.0, 34360.0], [614.0, 34360.0], [622.0, 34356.0], [620.0, 34357.0], [619.0, 34357.0], [618.0, 34358.0], [617.0, 34357.0], [616.0, 34359.0], [631.0, 34347.0], [627.0, 34355.0], [625.0, 34355.5], [659.0, 34303.0], [670.0, 34291.0], [668.0, 34292.0], [666.0, 34293.0], [647.0, 34328.0], [645.0, 34328.0], [643.0, 34329.0], [642.0, 34331.0], [640.0, 34335.0], [654.0, 34305.666666666664], [651.0, 34306.0], [650.0, 34306.0], [648.0, 34328.0], [663.0, 34298.5], [661.0, 34299.0], [660.0, 34300.0], [658.0, 34304.5], [656.0, 34305.0], [700.0, 33373.0], [692.0, 30310.0], [703.0, 33371.0], [689.0, 31435.0], [688.0, 32443.0], [691.0, 30343.0], [690.0, 31433.0], [699.0, 33372.0], [698.0, 33373.0], [697.0, 33373.5], [678.0, 34253.0], [677.0, 34258.0], [676.0, 34264.0], [675.0, 34290.0], [674.0, 34290.0], [672.0, 34290.0], [687.0, 32444.0], [686.0, 33318.0], [685.0, 33320.0], [684.0, 34240.0], [683.0, 34244.0], [681.0, 34243.0], [680.0, 34243.5], [695.0, 33375.0], [694.0, 33374.0], [693.0, 33375.0], [732.0, 28513.0], [735.0, 26761.0], [721.0, 33345.0], [720.0, 33345.666666666664], [723.0, 33334.0], [722.0, 33345.0], [725.0, 33331.0], [724.0, 33333.0], [734.0, 27768.0], [733.0, 27771.0], [731.0, 28536.0], [730.0, 29528.0], [729.0, 29532.0], [728.0, 33325.0], [717.0, 33346.0], [705.0, 33369.0], [704.0, 33370.0], [707.0, 33369.0], [706.0, 33369.0], [709.0, 33366.0], [708.0, 33367.0], [711.0, 33355.0], [710.0, 33361.0], [715.0, 33347.0], [713.0, 33349.0], [727.0, 33329.0], [726.0, 33330.0], [761.0, 18588.0], [766.0, 18573.0], [767.0, 18548.0], [752.0, 18689.0], [755.0, 18592.5], [753.0, 18598.0], [757.0, 18592.0], [756.0, 18591.0], [765.0, 18573.0], [764.0, 18584.0], [763.0, 18584.5], [760.0, 18589.0], [743.0, 22726.0], [742.0, 23733.0], [741.0, 23734.0], [740.0, 24743.0], [739.0, 24744.0], [738.0, 25751.0], [737.0, 25753.0], [736.0, 26759.0], [751.0, 18691.0], [750.0, 19698.0], [749.0, 19700.0], [748.0, 20706.0], [747.0, 20708.0], [746.0, 21715.0], [745.0, 21718.0], [744.0, 22725.0], [759.0, 18589.0], [758.0, 18591.0], [793.0, 17902.0], [798.0, 17898.0], [799.0, 17898.0], [784.0, 17907.5], [787.0, 17908.0], [786.0, 17906.5], [797.0, 17899.0], [796.0, 17902.0], [795.0, 17902.0], [792.0, 17904.0], [775.0, 18467.0], [774.0, 18477.0], [773.0, 18486.0], [772.0, 18493.0], [771.0, 18506.0], [770.0, 18517.0], [769.0, 18527.0], [768.0, 18533.0], [782.0, 17509.0], [781.0, 17511.0], [780.0, 18422.0], [779.0, 18430.0], [778.0, 18439.0], [777.0, 18448.0], [776.0, 18457.0], [791.0, 17904.0], [788.0, 17906.0], [828.0, 19420.5], [818.0, 20007.5], [830.0, 20584.0], [831.0, 19420.0], [816.0, 19426.0], [829.0, 19422.0], [826.0, 19422.8], [807.0, 17878.0], [806.0, 17887.0], [805.0, 17888.0], [804.0, 17890.0], [803.0, 17891.0], [802.0, 17895.0], [801.0, 17895.5], [815.0, 20590.0], [814.0, 19424.0], [813.0, 19427.0], [811.0, 17865.0], [810.0, 17869.0], [809.0, 17870.0], [808.0, 17871.0], [821.0, 19423.0], [820.0, 20588.0], [819.0, 19425.0], [856.0, 20569.0], [860.0, 19399.0], [863.0, 20566.0], [849.0, 19990.5], [859.0, 19403.0], [858.0, 19404.0], [857.0, 19402.0], [847.0, 19991.0], [833.0, 20581.0], [832.0, 19419.0], [835.0, 19415.0], [834.0, 19414.0], [837.0, 19412.0], [836.0, 19416.0], [839.0, 19414.0], [838.0, 19411.0], [846.0, 19992.5], [843.0, 19412.0], [842.0, 19993.5], [840.0, 19413.0], [855.0, 19987.5], [853.0, 19406.0], [852.0, 19407.0], [850.0, 19409.0], [888.0, 20552.0], [892.0, 20548.0], [895.0, 20539.0], [884.0, 19777.333333333332], [881.0, 19971.5], [894.0, 19374.0], [893.0, 20541.0], [891.0, 20549.0], [890.0, 19387.0], [889.0, 19387.0], [879.0, 19972.5], [864.0, 20564.666666666668], [867.0, 19397.0], [866.0, 20563.5], [871.0, 20560.0], [868.0, 19397.0], [877.0, 20555.0], [876.0, 19392.0], [875.0, 19390.0], [874.0, 19394.0], [873.0, 19976.5], [872.0, 19393.0], [887.0, 20552.0], [885.0, 20552.0], [924.0, 20351.0], [927.0, 16556.0], [912.0, 20469.5], [916.0, 19886.0], [914.0, 19887.0], [926.0, 16559.0], [925.0, 19188.0], [923.0, 20356.0], [922.0, 20357.0], [921.0, 19197.0], [920.0, 19779.5], [910.0, 20492.0], [897.0, 20530.0], [896.0, 20534.0], [900.0, 20528.0], [898.0, 20529.0], [903.0, 20526.0], [901.0, 20527.5], [908.0, 20496.0], [906.0, 20497.0], [905.0, 20498.0], [904.0, 20500.0], [918.0, 20361.0], [917.0, 20468.0], [952.0, 19489.5], [958.0, 19091.666666666668], [959.0, 19464.0], [957.0, 19479.0], [954.0, 19483.0], [953.0, 19483.0], [942.0, 18911.0], [930.0, 18590.0], [929.0, 18591.0], [932.0, 18589.0], [931.0, 18590.0], [935.0, 19751.5], [934.0, 19751.0], [940.0, 19740.0], [939.0, 19741.0], [938.0, 19743.0], [937.0, 19745.0], [936.0, 19749.0], [950.0, 19490.0], [949.0, 19104.0], [946.0, 18910.5], [985.0, 10371.0], [979.0, 15692.0], [989.0, 18568.0], [988.0, 14469.5], [986.0, 14470.5], [974.0, 14474.5], [960.0, 19463.0], [963.0, 18878.5], [961.0, 19463.0], [967.0, 18878.0], [966.0, 19460.0], [972.0, 10376.0], [971.0, 10376.0], [970.0, 10376.0], [969.0, 15648.0], [968.0, 15650.0], [983.0, 14471.0], [981.0, 10373.0], [980.0, 23304.0], [978.0, 16839.5], [976.0, 14474.0], [1020.0, 18556.0], [1023.0, 13088.666666666666], [1019.0, 10358.0], [1018.0, 18558.0], [1017.0, 18559.0], [1016.0, 10360.0], [1007.0, 14462.5], [994.0, 14468.5], [992.0, 13101.666666666666], [998.0, 15833.0], [995.0, 18567.0], [1005.0, 18563.0], [1004.0, 18563.0], [1003.0, 18563.0], [1002.0, 18564.0], [1001.0, 10366.0], [1000.0, 18565.0], [1014.0, 10361.0], [1013.0, 16510.5], [1009.0, 18561.0], [1008.0, 18562.0], [1076.0, 14354.5], [1078.0, 15571.0], [1084.0, 18437.0], [1056.0, 17336.0], [1060.0, 10299.0], [1064.0, 18496.0], [1066.0, 10295.0], [1070.0, 18493.0], [1086.0, 14632.0], [1082.0, 14345.0], [1080.0, 14351.0], [1074.0, 18461.0], [1072.0, 10262.0], [1038.0, 10331.0], [1034.0, 12676.0], [1030.0, 14440.5], [1024.0, 10355.0], [1054.0, 18501.0], [1052.0, 10303.0], [1050.0, 18502.0], [1048.0, 10313.0], [1046.0, 18513.0], [1044.0, 10315.0], [1042.0, 18520.0], [1040.0, 18522.0], [1144.0, 12622.0], [1142.0, 8522.0], [1120.0, 16726.0], [1122.0, 8527.0], [1126.0, 12625.5], [1128.0, 8525.0], [1132.0, 10916.333333333334], [1134.0, 15559.0], [1150.0, 8520.0], [1148.0, 8520.0], [1146.0, 8521.0], [1140.0, 16721.0], [1138.0, 11256.0], [1100.0, 15709.0], [1098.0, 16732.0], [1094.0, 13545.0], [1092.0, 9141.0], [1090.0, 9224.0], [1088.0, 9226.0], [1116.0, 12627.5], [1114.0, 8529.0], [1110.0, 16730.0], [1104.0, 16148.5], [1202.0, 8501.0], [1188.0, 8505.0], [1184.0, 12607.0], [1186.0, 8506.0], [1192.0, 12021.5], [1190.0, 8505.0], [1198.0, 8502.0], [1212.0, 16692.0], [1208.0, 10892.333333333334], [1166.0, 8515.0], [1164.0, 8517.0], [1162.0, 8516.0], [1160.0, 8517.0], [1154.0, 8518.0], [1182.0, 8507.0], [1180.0, 15545.0], [1176.0, 15546.0], [1174.0, 8511.0], [1172.0, 8513.0], [1170.0, 12102.0], [1168.0, 8515.0], [1278.0, 16631.0], [1252.0, 15634.0], [1248.0, 16660.0], [1250.0, 16657.0], [1254.0, 15633.0], [1256.0, 15633.0], [1260.0, 16143.0], [1258.0, 16653.0], [1262.0, 15631.0], [1274.0, 16636.0], [1272.0, 15617.0], [1270.0, 13566.666666666666], [1264.0, 16653.0], [1246.0, 16661.0], [1220.0, 14353.0], [1224.0, 15518.0], [1226.0, 16682.0], [1228.0, 8484.0], [1242.0, 16661.0], [1240.0, 16080.0], [1238.0, 15501.0], [1236.0, 8466.0], [1234.0, 16670.0], [1232.0, 16681.0], [1336.0, 8373.0], [1340.0, 16568.0], [1314.0, 8387.0], [1316.0, 8386.0], [1318.0, 16583.0], [1320.0, 16582.0], [1322.0, 16581.0], [1324.0, 8378.0], [1342.0, 16567.0], [1338.0, 15548.0], [1334.0, 8374.0], [1332.0, 8375.0], [1292.0, 16254.333333333334], [1288.0, 15573.0], [1282.0, 15609.0], [1308.0, 8388.0], [1306.0, 16587.0], [1302.0, 15567.0], [1300.0, 16592.0], [1298.0, 15571.0], [1400.0, 10448.0], [1404.0, 10445.0], [1376.0, 10742.333333333334], [1380.0, 16539.0], [1382.0, 15289.0], [1386.0, 15278.0], [1388.0, 15276.0], [1390.0, 12433.0], [1406.0, 10304.0], [1402.0, 10305.5], [1398.0, 9466.0], [1396.0, 10475.0], [1394.0, 11483.0], [1392.0, 11595.0], [1346.0, 8367.0], [1352.0, 13150.333333333334], [1354.0, 15542.0], [1356.0, 16563.0], [1370.0, 8353.0], [1368.0, 8355.0], [1366.0, 8356.0], [1362.0, 8357.0], [1360.0, 8360.0], [1440.0, 10293.0], [1468.0, 10264.0], [1444.0, 10289.5], [1442.0, 10362.0], [1448.0, 10287.0], [1452.0, 11450.0], [1454.0, 10420.0], [1470.0, 10260.0], [1466.0, 10265.0], [1464.0, 10268.0], [1462.0, 10271.0], [1460.0, 10272.0], [1458.0, 10416.0], [1416.0, 10783.333333333334], [1436.0, 10438.0], [1434.0, 10297.0], [1430.0, 10298.0], [1428.0, 10393.666666666666], [1424.0, 10301.0], [1524.0, 8644.0], [1522.0, 8647.0], [1532.0, 8340.0], [1504.0, 9283.0], [1506.0, 6389.0], [1512.0, 8401.5], [1516.0, 8655.0], [1518.0, 8653.0], [1534.0, 5255.0], [1530.0, 8620.5], [1528.0, 7603.0], [1526.0, 8641.0], [1520.0, 7627.0], [1472.0, 10247.0], [1474.0, 10248.0], [1476.0, 10360.0], [1480.0, 10204.0], [1502.0, 8299.0], [1500.0, 9323.0], [1498.0, 8476.0], [1496.0, 9131.0], [1494.0, 8056.5], [1492.0, 8454.0], [1490.0, 10191.0], [1488.0, 10580.333333333334], [1590.0, 17107.5], [1570.0, 18292.666666666668], [1578.0, 9530.0], [1598.0, 20910.333333333332], [1588.0, 11413.0], [1584.0, 7736.0], [1550.0, 11352.5], [1548.0, 20214.666666666668], [1544.0, 9536.0], [1542.0, 14019.0], [1540.0, 15113.0], [1566.0, 26607.5], [1564.0, 10232.0], [1562.0, 16645.0], [1558.0, 25552.0], [1552.0, 14013.0], [1612.0, 42959.0], [1614.0, 8649.0], [1610.0, 42960.0], [1608.0, 42964.0], [1606.0, 25544.0], [1604.0, 22283.666666666668], [1724.0, 9501.0], [1696.0, 7663.0], [1712.0, 7661.0], [1678.0, 10889.0], [1694.0, 8911.0], [1688.0, 7664.0], [1758.0, 7655.5], [1756.0, 38541.25], [1760.0, 4443.0], [1740.0, 13933.0], [1728.0, 7660.0], [1748.0, 42322.5], [1746.0, 16809.595744680853], [1744.0, 11027.888888888889], [1952.0, 226.67999999999998], [1954.0, 226.55405405405403], [1964.0, 3435.5], [1962.0, 188.0], [1950.0, 227.09090909090907], [1948.0, 227.22222222222223], [1946.0, 227.57575757575754], [1944.0, 228.0], [1940.0, 227.5], [2120.0, 237.0], [2124.0, 238.0], [2112.0, 239.0], [2116.0, 238.25], [2140.0, 236.07142857142856], [2168.0, 233.0], [2148.0, 235.0], [2144.0, 236.11111111111111], [2212.0, 166.0], [2180.0, 212.0], [2184.0, 211.0], [2188.0, 210.0], [2192.0, 184.0], [2200.0, 167.0], [2416.0, 222.0], [2392.0, 224.0], [2400.0, 223.0], [2452.0, 216.0], [2520.0, 296.6666666666667], [2512.0, 290.0], [2460.0, 2134.0], [2448.0, 217.0], [2444.0, 218.0], [2440.0, 219.0], [2436.0, 219.0], [2492.0, 290.66666666666663], [2480.0, 294.0], [2476.0, 294.0], [2668.0, 284.0], [2660.0, 284.6666666666667], [2632.0, 288.0], [2624.0, 289.0], [2628.0, 289.0], [2636.0, 288.0], [2640.0, 287.5], [2656.0, 285.0], [2580.0, 294.25], [2584.0, 287.0], [2616.0, 290.0], [2612.0, 289.0], [2608.0, 291.0], [2652.0, 287.0], [2792.0, 219.0], [2788.0, 220.22222222222223], [2696.0, 244.0], [2936.0, 255.0], [2892.0, 305.0], [2896.0, 304.83333333333337], [2888.0, 306.0], [2824.0, 306.5], [2868.0, 306.14285714285717], [2860.0, 307.4], [2852.0, 308.8333333333333], [2848.0, 309.0], [3000.0, 4671.591383313024], [2988.0, 254.33333333333334], [2984.0, 254.2], [2121.0, 237.2], [2161.0, 234.0], [2113.0, 240.0], [2117.0, 238.0], [2125.0, 237.33333333333334], [2129.0, 237.0], [2133.0, 237.0], [2137.0, 237.0], [2141.0, 236.07407407407408], [2173.0, 224.0], [2157.0, 235.33333333333334], [2149.0, 235.25], [2145.0, 236.25000000000003], [2181.0, 212.0], [2213.0, 166.0], [2193.0, 184.0], [2209.0, 166.0], [2369.0, 226.0], [2429.0, 220.0], [2377.0, 225.0], [2385.0, 224.0], [2381.0, 225.0], [2365.0, 226.5], [2357.0, 227.0], [2453.0, 216.0], [2513.0, 292.0], [2501.0, 289.3333333333333], [2497.0, 289.5], [2449.0, 217.0], [2445.0, 218.04761904761904], [2441.0, 218.28571428571428], [2437.0, 219.0], [2489.0, 290.0], [2477.0, 294.0], [2625.0, 289.0], [2661.0, 285.0], [2629.0, 289.0], [2633.0, 288.0], [2641.0, 288.0], [2649.0, 287.0], [2657.0, 284.8], [2565.0, 288.0], [2569.0, 296.0], [2581.0, 294.3333333333333], [2617.0, 290.0], [2613.0, 289.0], [2609.0, 291.0], [2653.0, 285.3333333333333], [2793.0, 219.0], [2789.0, 220.0], [2785.0, 220.0], [2921.0, 254.0], [2881.0, 306.25], [2885.0, 305.8], [2893.0, 305.25], [2829.0, 307.2857142857144], [2825.0, 309.0], [2877.0, 304.0], [2873.0, 306.0], [2865.0, 306.5], [2861.0, 307.66666666666663], [2857.0, 308.1666666666667], [2853.0, 308.6], [2905.0, 302.8999999999999], [2897.0, 304.0], [2985.0, 255.0], [1077.0, 18451.0], [1063.0, 15764.0], [1087.0, 14631.0], [1059.0, 15765.666666666666], [1065.0, 10297.0], [1069.0, 18493.0], [1067.0, 18494.0], [1071.0, 10295.0], [1085.0, 18436.0], [1083.0, 10246.0], [1073.0, 18461.0], [1039.0, 10330.0], [1037.0, 10331.0], [1035.0, 18529.0], [1029.0, 10341.0], [1027.0, 14441.5], [1025.0, 10342.0], [1055.0, 18500.0], [1053.0, 17990.5], [1049.0, 18512.0], [1047.0, 10313.0], [1045.0, 17492.0], [1043.0, 18520.0], [1041.0, 10322.0], [1139.0, 8523.0], [1125.0, 12625.5], [1147.0, 15556.0], [1151.0, 8520.0], [1121.0, 15562.0], [1127.0, 16725.0], [1129.0, 8525.0], [1135.0, 8523.0], [1145.0, 8522.0], [1141.0, 8522.0], [1137.0, 8523.0], [1103.0, 12631.0], [1099.0, 16732.0], [1097.0, 8533.5], [1095.0, 13543.0], [1093.0, 9139.0], [1091.0, 9142.0], [1089.0, 9226.0], [1119.0, 12116.5], [1117.0, 8528.0], [1113.0, 8529.0], [1111.0, 16729.0], [1109.0, 12629.5], [1107.0, 16218.5], [1105.0, 16730.0], [1209.0, 15534.0], [1215.0, 15528.0], [1185.0, 8507.0], [1187.0, 8506.0], [1189.0, 8505.0], [1195.0, 8503.5], [1193.0, 15539.0], [1197.0, 12602.5], [1211.0, 16692.0], [1207.0, 8500.0], [1203.0, 15536.0], [1201.0, 13580.0], [1163.0, 8516.0], [1159.0, 12034.5], [1157.0, 12035.0], [1155.0, 8518.0], [1153.0, 16718.0], [1183.0, 8508.0], [1179.0, 12027.5], [1175.0, 8511.0], [1173.0, 8513.0], [1265.0, 16653.0], [1271.0, 15618.0], [1275.0, 16633.0], [1279.0, 16632.0], [1249.0, 16078.0], [1257.0, 15633.0], [1261.0, 16653.0], [1277.0, 12022.5], [1273.0, 16637.0], [1267.0, 16642.0], [1217.0, 8492.0], [1219.0, 8492.0], [1221.0, 15667.0], [1225.0, 16100.5], [1227.0, 8483.0], [1231.0, 15905.0], [1229.0, 15518.0], [1245.0, 16273.0], [1243.0, 16661.0], [1237.0, 15501.0], [1235.0, 16666.0], [1233.0, 8481.0], [1337.0, 12472.0], [1317.0, 16584.0], [1343.0, 8368.0], [1313.0, 16587.0], [1315.0, 10778.333333333334], [1321.0, 8383.0], [1323.0, 8380.0], [1327.0, 13843.666666666666], [1341.0, 8369.0], [1339.0, 16570.0], [1333.0, 16573.0], [1331.0, 16063.0], [1329.0, 8377.5], [1295.0, 16594.333333333332], [1289.0, 16595.0], [1287.0, 16085.5], [1285.0, 16256.333333333334], [1281.0, 16631.0], [1309.0, 8387.0], [1307.0, 15565.0], [1305.0, 16588.0], [1303.0, 15566.0], [1301.0, 15567.0], [1299.0, 16593.0], [1405.0, 10304.0], [1407.0, 10303.0], [1379.0, 8342.0], [1377.0, 8349.0], [1381.0, 8339.0], [1383.0, 15280.0], [1385.0, 15278.0], [1389.0, 15275.0], [1391.0, 12415.0], [1399.0, 9464.0], [1397.0, 10473.0], [1395.0, 11482.0], [1393.0, 12490.0], [1373.0, 8352.0], [1345.0, 12466.5], [1349.0, 8366.0], [1353.0, 8366.0], [1355.0, 8364.0], [1359.0, 8363.0], [1357.0, 16562.0], [1371.0, 8352.0], [1369.0, 8355.0], [1365.0, 16555.0], [1363.0, 15391.0], [1465.0, 10407.0], [1471.0, 10250.0], [1447.0, 10382.666666666666], [1451.0, 10356.5], [1449.0, 10287.0], [1453.0, 10284.0], [1455.0, 10277.0], [1469.0, 10264.0], [1467.0, 10265.0], [1463.0, 10408.0], [1461.0, 10412.0], [1459.0, 10273.0], [1457.0, 10277.5], [1423.0, 10370.75], [1419.0, 10301.0], [1417.0, 10301.0], [1415.0, 10443.0], [1413.0, 10303.0], [1411.0, 10302.5], [1409.0, 10303.5], [1439.0, 10362.5], [1437.0, 10296.0], [1435.0, 10879.0], [1433.0, 10297.0], [1425.0, 10441.0], [1533.0, 8329.0], [1535.0, 5245.0], [1505.0, 9281.0], [1507.0, 6387.0], [1509.0, 8658.0], [1515.0, 8144.0], [1513.0, 7494.0], [1517.0, 8654.0], [1519.0, 8652.0], [1527.0, 8637.0], [1525.0, 8642.0], [1523.0, 8644.0], [1521.0, 8650.0], [1503.0, 9283.0], [1473.0, 10389.0], [1475.0, 11390.0], [1479.0, 10791.0], [1477.0, 10361.0], [1481.0, 11362.0], [1485.0, 10264.0], [1483.0, 10197.5], [1501.0, 8302.0], [1499.0, 9636.0], [1497.0, 8479.0], [1491.0, 8455.0], [1489.0, 10192.0], [1587.0, 26252.0], [1599.0, 7732.0], [1573.0, 26254.5], [1571.0, 42981.0], [1577.0, 42979.0], [1575.0, 12695.0], [1581.0, 42979.0], [1597.0, 19005.5], [1589.0, 25547.0], [1585.0, 22550.5], [1551.0, 11418.0], [1545.0, 9535.0], [1543.0, 16500.0], [1541.0, 9538.0], [1537.0, 10884.0], [1567.0, 9533.0], [1565.0, 42982.0], [1563.0, 10489.5], [1559.0, 17346.4], [1609.0, 25531.0], [1619.0, 25223.0], [1617.0, 26582.5], [1615.0, 42958.0], [1613.0, 25529.0], [1611.0, 43163.0], [1607.0, 31915.0], [1605.0, 12464.0], [1601.0, 18181.0], [1719.0, 7662.0], [1725.0, 10112.666666666666], [1723.0, 7662.0], [1721.0, 11339.5], [1717.0, 9719.0], [1679.0, 7324.666666666667], [1669.0, 31089.0], [1685.0, 7664.0], [1709.0, 7663.0], [1701.0, 8910.0], [1753.0, 41745.0], [1743.0, 10395.0], [1759.0, 4444.0], [1755.0, 18416.5], [1751.0, 10150.0], [1749.0, 17809.0], [1747.0, 17668.391304347828], [1745.0, 19316.0], [1949.0, 227.58333333333334], [1959.0, 188.0], [1953.0, 226.72727272727272], [1951.0, 227.5], [1947.0, 227.0], [1945.0, 227.8], [1943.0, 228.0], [1941.0, 228.0], [2122.0, 237.33333333333334], [2114.0, 239.0], [2126.0, 238.0], [2134.0, 237.16666666666666], [2138.0, 236.15384615384613], [2142.0, 236.06250000000003], [2174.0, 224.0], [2166.0, 234.0], [2158.0, 235.0], [2154.0, 235.5], [2146.0, 235.25000000000003], [2186.0, 211.0], [2194.0, 184.0], [2190.0, 185.0], [2210.0, 166.25], [2370.0, 996.6666666666667], [2394.0, 224.0], [2414.0, 222.0], [2406.0, 222.33333333333334], [2358.0, 226.0], [2450.0, 218.0], [2514.0, 290.0], [2498.0, 289.8181818181818], [2458.0, 215.6], [2446.0, 217.54999999999998], [2442.0, 218.0], [2438.0, 219.0], [2434.0, 220.0], [2490.0, 290.0], [2486.0, 290.0], [2466.0, 294.0], [2626.0, 288.8333333333333], [2646.0, 287.5], [2674.0, 283.20000000000005], [2630.0, 288.75], [2638.0, 288.0], [2650.0, 287.0], [2582.0, 294.0], [2622.0, 290.0], [2618.0, 290.0], [2610.0, 291.0], [2606.0, 291.2272727272727], [2654.0, 286.0], [2790.0, 220.0], [2782.0, 220.0], [2794.0, 219.0], [2786.0, 220.0], [2694.0, 266.05000000000007], [2838.0, 309.0], [2830.0, 304.0], [2882.0, 304.6666666666667], [2890.0, 306.0], [2846.0, 310.0], [2878.0, 307.3333333333333], [2870.0, 306.0], [2862.0, 305.0], [2858.0, 306.5], [2850.0, 307.5], [2894.0, 305.0], [2982.0, 254.2], [2119.0, 237.11111111111111], [2171.0, 232.0], [2175.0, 223.0], [2115.0, 238.0], [2123.0, 237.0], [2127.0, 237.125], [2131.0, 237.0], [2135.0, 237.0], [2139.0, 236.0], [2143.0, 236.2], [2163.0, 234.0], [2151.0, 235.0], [2147.0, 235.0], [2183.0, 212.0], [2187.0, 210.0], [2211.0, 166.0], [2199.0, 167.0], [2195.0, 183.0], [2415.0, 221.5], [2371.0, 225.0], [2375.0, 225.0], [2391.0, 224.0], [2395.0, 224.0], [2427.0, 221.0], [2411.0, 222.0], [2403.0, 223.0], [2367.0, 226.0], [2359.0, 1382.0], [2451.0, 217.0], [2459.0, 2136.0], [2503.0, 290.5], [2527.0, 297.0], [2519.0, 289.0], [2511.0, 288.0], [2447.0, 217.10526315789474], [2439.0, 219.0], [2435.0, 219.0], [2491.0, 289.8], [2487.0, 289.0], [2639.0, 288.0], [2627.0, 289.0], [2643.0, 287.0], [2647.0, 288.0], [2623.0, 289.8888888888889], [2575.0, 295.0], [2619.0, 289.75], [2615.0, 290.0], [2651.0, 286.3333333333333], [2795.0, 218.9677419354839], [2787.0, 220.0], [2699.0, 230.0], [2695.0, 245.0], [2915.0, 255.0], [2935.0, 255.0], [2883.0, 306.25], [2891.0, 306.0], [2927.0, 255.0], [2847.0, 309.5], [2839.0, 306.0], [2827.0, 303.0], [2875.0, 307.0], [2867.0, 308.0], [2863.0, 306.5], [2859.0, 309.0], [2855.0, 309.0], [2851.0, 307.0], [2907.0, 255.0], [2895.0, 305.0], [2983.0, 254.66666666666666]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2959.829278687049, 5174.919952849451]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3914.4, "minX": 1.68288516E12, "maxY": 313036.7166666667, "series": [{"data": [[1.68288516E12, 206543.1], [1.68288534E12, 220772.35], [1.68288528E12, 230309.48333333334], [1.68288546E12, 68246.66666666667], [1.6828854E12, 279749.2833333333], [1.68288552E12, 5619.95], [1.68288522E12, 313036.7166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68288516E12, 145420.8], [1.68288534E12, 152703.6], [1.68288528E12, 158390.4], [1.68288546E12, 48988.8], [1.6828854E12, 196434.0], [1.68288552E12, 3914.4], [1.68288522E12, 217854.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288552E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2100.6312384473244, "minX": 1.68288516E12, "maxY": 95065.48927038632, "series": [{"data": [[1.68288516E12, 2100.6312384473244], [1.68288534E12, 4736.112844940881], [1.68288528E12, 7349.712224913139], [1.68288546E12, 4662.314814814815], [1.6828854E12, 2986.8511202326017], [1.68288552E12, 95065.48927038632], [1.68288522E12, 6412.13677052521]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288552E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2100.6124653419556, "minX": 1.68288516E12, "maxY": 95065.46781115873, "series": [{"data": [[1.68288516E12, 2100.6124653419556], [1.68288534E12, 4434.48028909333], [1.68288528E12, 6473.362114351909], [1.68288546E12, 4662.3089849108355], [1.6828854E12, 2971.7650076962273], [1.68288552E12, 95065.46781115873], [1.68288522E12, 6245.95209189749]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288552E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 24.68039510166359, "minX": 1.68288516E12, "maxY": 3698.4003895967185, "series": [{"data": [[1.68288516E12, 24.68039510166359], [1.68288534E12, 1754.111585632931], [1.68288528E12, 3698.4003895967185], [1.68288546E12, 73.21450617283931], [1.6828854E12, 1082.574952967332], [1.68288552E12, 298.72746781115836], [1.68288522E12, 1166.9373391217453]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288552E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.68288516E12, "maxY": 211104.0, "series": [{"data": [[1.68288516E12, 42853.0], [1.68288534E12, 211104.0], [1.68288528E12, 148488.0], [1.68288546E12, 50464.0], [1.6828854E12, 164488.0], [1.68288552E12, 131243.0], [1.68288522E12, 101505.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68288516E12, 9143.0], [1.68288534E12, 4102.0], [1.68288528E12, 10003.3], [1.68288546E12, 18490.899999999998], [1.6828854E12, 2566.0], [1.68288552E12, 100253.3], [1.68288522E12, 14375.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68288516E12, 40641.0], [1.68288534E12, 112275.40000000242], [1.68288528E12, 131023.0], [1.68288546E12, 39026.690000000075], [1.6828854E12, 38996.0], [1.68288552E12, 118045.74999999987], [1.68288522E12, 100364.98000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68288516E12, 10185.0], [1.68288534E12, 19899.0], [1.68288528E12, 19998.899999999987], [1.68288546E12, 33326.399999999994], [1.6828854E12, 11976.0], [1.68288552E12, 100264.65], [1.68288522E12, 63242.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68288516E12, 7.0], [1.68288534E12, 18.0], [1.68288528E12, 11.0], [1.68288546E12, 23.0], [1.6828854E12, 14.0], [1.68288552E12, 51472.0], [1.68288522E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68288516E12, 114.0], [1.68288534E12, 211.0], [1.68288528E12, 231.5], [1.68288546E12, 241.0], [1.6828854E12, 216.0], [1.68288552E12, 100067.0], [1.68288522E12, 41.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288552E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 2.0, "maxY": 148463.0, "series": [{"data": [[2.0, 55008.0], [3.0, 82875.5], [4.0, 24579.5], [5.0, 22132.0], [6.0, 5950.0], [7.0, 67368.0], [8.0, 5242.0], [10.0, 16412.5], [12.0, 32855.0], [13.0, 8620.0], [14.0, 21552.5], [18.0, 5486.0], [21.0, 69572.0], [22.0, 29833.0], [26.0, 35703.0], [28.0, 8641.5], [30.0, 9789.5], [33.0, 31092.0], [35.0, 15845.0], [37.0, 31398.0], [36.0, 35228.5], [38.0, 33352.0], [42.0, 19461.5], [47.0, 6.0], [52.0, 53.0], [57.0, 9045.0], [62.0, 107.0], [67.0, 1158.0], [69.0, 55.0], [73.0, 96.0], [77.0, 55.0], [84.0, 95.0], [94.0, 10147.0], [92.0, 164.0], [95.0, 4127.5], [101.0, 220.0], [107.0, 181.0], [106.0, 100.0], [118.0, 17964.0], [120.0, 130.0], [121.0, 185.0], [122.0, 3603.5], [130.0, 148463.0], [137.0, 7982.0], [145.0, 19419.0], [151.0, 100090.0], [153.0, 87.0], [158.0, 51.0], [152.0, 34362.0], [161.0, 100325.0], [195.0, 4272.0], [202.0, 158.0], [206.0, 58307.0], [205.0, 146.0], [207.0, 100076.0], [215.0, 24.0], [222.0, 210.0], [231.0, 127.0], [236.0, 34.0], [239.0, 10180.0], [234.0, 289.0], [247.0, 73.0], [253.0, 188.0], [255.0, 12890.0], [266.0, 216.0], [285.0, 11023.0], [289.0, 13210.0], [301.0, 228.0], [292.0, 217.0], [296.0, 15518.5], [319.0, 252.0], [306.0, 200.0], [318.0, 230.0], [316.0, 230.0], [309.0, 255.0], [304.0, 226.0], [330.0, 208.0], [344.0, 6390.0], [339.0, 174.0], [350.0, 225.0], [351.0, 175.0], [337.0, 174.0], [365.0, 118.0], [353.0, 9934.0], [361.0, 5431.0], [363.0, 13041.0], [367.0, 191.0], [354.0, 175.0], [371.0, 181.0], [381.0, 206.0], [373.0, 191.0], [372.0, 72.0], [377.0, 13530.0], [369.0, 204.0], [374.0, 181.0], [383.0, 199.0], [397.0, 62.0], [393.0, 100.0], [391.0, 197.0], [386.0, 205.0], [387.0, 219.0], [388.0, 170.0], [411.0, 182.0], [404.0, 208.0], [402.0, 244.0], [428.0, 6.0], [417.0, 208.0], [427.0, 7661.0], [439.0, 145.0], [443.0, 191.0], [435.0, 270.0], [440.0, 9306.0], [448.0, 225.0], [452.0, 204.0], [478.0, 6.0], [469.0, 265.0], [491.0, 8277.0], [482.0, 226.0], [488.0, 254.0], [496.0, 220.0], [513.0, 99.0], [537.0, 280.0], [540.0, 202.5], [523.0, 208.0], [554.0, 176.0], [547.0, 9322.0], [574.0, 213.0], [568.0, 233.0], [601.0, 7342.0], [600.0, 9839.0], [634.0, 136.0], [639.0, 13233.0], [628.0, 9573.0], [630.0, 179.0], [635.0, 200.0], [633.0, 211.0], [614.0, 216.0], [640.0, 8213.0], [661.0, 186.0], [654.0, 9904.0], [652.0, 205.0], [646.0, 12877.0], [663.0, 209.0], [668.0, 327.0], [645.0, 218.0], [676.0, 142.0], [674.0, 97.5], [698.0, 162.0], [700.0, 37.0], [681.0, 164.0], [728.0, 117.0], [735.0, 289.0], [714.0, 204.0], [731.0, 290.0], [722.0, 326.0], [732.0, 207.0], [738.0, 169.0], [748.0, 99.0], [742.0, 9882.0], [766.0, 193.5], [739.0, 47.0], [752.0, 174.5], [795.0, 112.0], [783.0, 175.0], [782.0, 320.0], [791.0, 205.0], [779.0, 256.0], [802.0, 95.0], [815.0, 169.0], [807.0, 290.0], [840.0, 195.0], [842.0, 12703.0], [847.0, 209.0], [921.0, 159.0], [907.0, 152.0], [918.0, 166.0], [896.0, 229.0], [967.0, 8713.0], [994.0, 456.0], [1032.0, 58.5], [1073.0, 31.0], [1082.0, 235.0], [1083.0, 191.0], [1105.0, 31.0], [1126.0, 327.0], [1110.0, 243.0], [1091.0, 227.0], [1294.0, 461.0], [1396.0, 9.0], [1380.0, 205.0], [1425.0, 30.0], [1423.0, 231.0], [1420.0, 231.0], [1500.0, 19.0], [1472.0, 281.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 148426.0], [540.0, 134718.0], [574.0, 49369.0], [9.0, 43119.0], [628.0, 111698.0], [766.0, 55353.5], [847.0, 107199.0], [1396.0, 66978.0], [344.0, 64003.0], [374.0, 119740.0], [369.0, 122406.0], [417.0, 13537.0], [439.0, 14975.0], [435.0, 86363.0], [478.0, 66893.0], [469.0, 107642.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1500.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 148463.0, "series": [{"data": [[2.0, 55008.0], [3.0, 82875.5], [4.0, 24579.5], [5.0, 22132.0], [6.0, 5950.0], [7.0, 67368.0], [8.0, 5242.0], [10.0, 16412.5], [12.0, 32855.0], [13.0, 8620.0], [14.0, 21552.5], [18.0, 5486.0], [21.0, 69572.0], [22.0, 29833.0], [26.0, 35703.0], [28.0, 8641.5], [30.0, 9789.0], [33.0, 31092.0], [35.0, 15845.0], [37.0, 31398.0], [36.0, 35228.5], [38.0, 33352.0], [42.0, 19461.5], [47.0, 6.0], [52.0, 53.0], [57.0, 9045.0], [62.0, 107.0], [67.0, 1158.0], [69.0, 55.0], [73.0, 96.0], [77.0, 55.0], [84.0, 95.0], [94.0, 10147.0], [92.0, 164.0], [95.0, 4127.5], [101.0, 220.0], [107.0, 181.0], [106.0, 100.0], [118.0, 17964.0], [120.0, 130.0], [121.0, 185.0], [122.0, 3603.5], [130.0, 148463.0], [137.0, 7982.0], [145.0, 19419.0], [151.0, 100090.0], [153.0, 87.0], [158.0, 51.0], [152.0, 34362.0], [161.0, 100325.0], [195.0, 4272.0], [202.0, 158.0], [206.0, 58307.0], [205.0, 146.0], [207.0, 100076.0], [215.0, 24.0], [222.0, 210.0], [231.0, 127.0], [236.0, 34.0], [239.0, 10180.0], [234.0, 289.0], [247.0, 73.0], [253.0, 188.0], [255.0, 12890.0], [266.0, 216.0], [285.0, 11023.0], [289.0, 13210.0], [301.0, 228.0], [292.0, 217.0], [296.0, 15518.5], [319.0, 252.0], [306.0, 200.0], [318.0, 230.0], [316.0, 230.0], [309.0, 255.0], [304.0, 226.0], [330.0, 208.0], [344.0, 6390.0], [339.0, 174.0], [350.0, 225.0], [351.0, 175.0], [337.0, 174.0], [365.0, 118.0], [353.0, 9934.0], [361.0, 5431.0], [363.0, 13041.0], [367.0, 191.0], [354.0, 175.0], [371.0, 181.0], [381.0, 206.0], [373.0, 191.0], [372.0, 72.0], [377.0, 13530.0], [369.0, 204.0], [374.0, 181.0], [383.0, 199.0], [397.0, 62.0], [393.0, 100.0], [391.0, 197.0], [386.0, 205.0], [387.0, 219.0], [388.0, 170.0], [411.0, 182.0], [404.0, 208.0], [402.0, 244.0], [428.0, 6.0], [417.0, 208.0], [427.0, 7661.0], [439.0, 145.0], [443.0, 191.0], [435.0, 270.0], [440.0, 9306.0], [448.0, 225.0], [452.0, 204.0], [478.0, 6.0], [469.0, 265.0], [491.0, 8277.0], [482.0, 226.0], [488.0, 254.0], [496.0, 220.0], [513.0, 99.0], [537.0, 280.0], [540.0, 202.0], [523.0, 208.0], [554.0, 176.0], [547.0, 9322.0], [574.0, 213.0], [568.0, 233.0], [601.0, 7342.0], [600.0, 9839.0], [634.0, 136.0], [639.0, 13233.0], [628.0, 9573.0], [630.0, 179.0], [635.0, 200.0], [633.0, 211.0], [614.0, 216.0], [640.0, 8213.0], [661.0, 186.0], [654.0, 9904.0], [652.0, 205.0], [646.0, 12877.0], [663.0, 209.0], [668.0, 327.0], [645.0, 218.0], [676.0, 142.0], [674.0, 97.5], [698.0, 162.0], [700.0, 37.0], [681.0, 164.0], [728.0, 117.0], [735.0, 289.0], [714.0, 204.0], [731.0, 290.0], [722.0, 326.0], [732.0, 207.0], [738.0, 169.0], [748.0, 99.0], [742.0, 9882.0], [766.0, 193.5], [739.0, 47.0], [752.0, 174.5], [795.0, 112.0], [783.0, 175.0], [782.0, 320.0], [791.0, 205.0], [779.0, 256.0], [802.0, 95.0], [815.0, 169.0], [807.0, 290.0], [840.0, 195.0], [842.0, 12703.0], [847.0, 209.0], [921.0, 159.0], [907.0, 152.0], [918.0, 166.0], [896.0, 229.0], [967.0, 8713.0], [994.0, 456.0], [1032.0, 58.5], [1073.0, 31.0], [1082.0, 235.0], [1083.0, 191.0], [1105.0, 31.0], [1126.0, 327.0], [1110.0, 243.0], [1091.0, 227.0], [1294.0, 461.0], [1396.0, 9.0], [1380.0, 205.0], [1425.0, 30.0], [1423.0, 231.0], [1420.0, 231.0], [1500.0, 19.0], [1472.0, 281.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 0.0], [540.0, 0.0], [574.0, 0.0], [9.0, 0.0], [628.0, 0.0], [766.0, 0.0], [847.0, 0.0], [1396.0, 0.0], [344.0, 0.0], [374.0, 0.0], [369.0, 0.0], [417.0, 0.0], [439.0, 0.0], [435.0, 0.0], [478.0, 0.0], [469.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1500.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 100.95, "minX": 1.68288516E12, "maxY": 428.1666666666667, "series": [{"data": [[1.68288516E12, 336.4166666666667], [1.68288534E12, 305.8333333333333], [1.68288528E12, 293.6], [1.68288546E12, 100.95], [1.6828854E12, 373.1166666666667], [1.68288522E12, 428.1666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288546E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68288516E12, "maxY": 432.25, "series": [{"data": [[1.68288516E12, 288.53333333333336], [1.68288534E12, 302.98333333333335], [1.68288528E12, 314.26666666666665], [1.68288546E12, 97.2], [1.6828854E12, 389.75], [1.68288552E12, 7.766666666666667], [1.68288522E12, 432.25]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68288534E12, 1.4166666666666667], [1.68288528E12, 2.3], [1.6828854E12, 0.05], [1.68288522E12, 1.5666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68288552E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68288516E12, "maxY": 432.25, "series": [{"data": [[1.68288516E12, 288.53333333333336], [1.68288534E12, 302.98333333333335], [1.68288528E12, 314.26666666666665], [1.68288546E12, 97.2], [1.6828854E12, 389.75], [1.68288552E12, 7.766666666666667], [1.68288522E12, 432.25]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68288534E12, 1.4166666666666667], [1.68288528E12, 2.3], [1.6828854E12, 0.05], [1.68288522E12, 1.5666666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288552E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68288516E12, "maxY": 432.25, "series": [{"data": [[1.68288516E12, 288.53333333333336], [1.68288534E12, 302.98333333333335], [1.68288528E12, 314.26666666666665], [1.68288546E12, 97.2], [1.6828854E12, 389.75], [1.68288552E12, 7.766666666666667], [1.68288522E12, 432.25]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68288534E12, 1.4166666666666667], [1.68288528E12, 2.3], [1.6828854E12, 0.05], [1.68288522E12, 1.5666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68288552E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

