/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "maxY": 194273.0, "series": [{"data": [[0.0, 7.0], [0.1, 22.0], [0.2, 23.0], [0.3, 26.0], [0.4, 27.0], [0.5, 29.0], [0.6, 30.0], [0.7, 31.0], [0.8, 32.0], [0.9, 34.0], [1.0, 35.0], [1.1, 35.0], [1.2, 36.0], [1.3, 36.0], [1.4, 37.0], [1.5, 38.0], [1.6, 39.0], [1.7, 40.0], [1.8, 41.0], [1.9, 41.0], [2.0, 42.0], [2.1, 43.0], [2.2, 43.0], [2.3, 44.0], [2.4, 44.0], [2.5, 45.0], [2.6, 46.0], [2.7, 46.0], [2.8, 46.0], [2.9, 47.0], [3.0, 47.0], [3.1, 48.0], [3.2, 49.0], [3.3, 49.0], [3.4, 49.0], [3.5, 50.0], [3.6, 50.0], [3.7, 50.0], [3.8, 51.0], [3.9, 51.0], [4.0, 51.0], [4.1, 52.0], [4.2, 52.0], [4.3, 53.0], [4.4, 53.0], [4.5, 53.0], [4.6, 54.0], [4.7, 54.0], [4.8, 54.0], [4.9, 55.0], [5.0, 55.0], [5.1, 55.0], [5.2, 56.0], [5.3, 56.0], [5.4, 57.0], [5.5, 57.0], [5.6, 57.0], [5.7, 58.0], [5.8, 58.0], [5.9, 58.0], [6.0, 58.0], [6.1, 59.0], [6.2, 59.0], [6.3, 59.0], [6.4, 59.0], [6.5, 60.0], [6.6, 60.0], [6.7, 60.0], [6.8, 60.0], [6.9, 61.0], [7.0, 61.0], [7.1, 61.0], [7.2, 62.0], [7.3, 62.0], [7.4, 62.0], [7.5, 62.0], [7.6, 63.0], [7.7, 63.0], [7.8, 63.0], [7.9, 63.0], [8.0, 63.0], [8.1, 64.0], [8.2, 64.0], [8.3, 65.0], [8.4, 65.0], [8.5, 65.0], [8.6, 66.0], [8.7, 66.0], [8.8, 66.0], [8.9, 67.0], [9.0, 67.0], [9.1, 67.0], [9.2, 67.0], [9.3, 68.0], [9.4, 68.0], [9.5, 68.0], [9.6, 69.0], [9.7, 69.0], [9.8, 69.0], [9.9, 70.0], [10.0, 70.0], [10.1, 70.0], [10.2, 71.0], [10.3, 71.0], [10.4, 71.0], [10.5, 72.0], [10.6, 72.0], [10.7, 72.0], [10.8, 72.0], [10.9, 72.0], [11.0, 73.0], [11.1, 73.0], [11.2, 73.0], [11.3, 73.0], [11.4, 73.0], [11.5, 74.0], [11.6, 74.0], [11.7, 74.0], [11.8, 74.0], [11.9, 74.0], [12.0, 75.0], [12.1, 75.0], [12.2, 75.0], [12.3, 75.0], [12.4, 75.0], [12.5, 76.0], [12.6, 76.0], [12.7, 76.0], [12.8, 76.0], [12.9, 76.0], [13.0, 76.0], [13.1, 76.0], [13.2, 77.0], [13.3, 77.0], [13.4, 77.0], [13.5, 77.0], [13.6, 77.0], [13.7, 77.0], [13.8, 78.0], [13.9, 78.0], [14.0, 78.0], [14.1, 78.0], [14.2, 78.0], [14.3, 78.0], [14.4, 78.0], [14.5, 79.0], [14.6, 79.0], [14.7, 79.0], [14.8, 79.0], [14.9, 79.0], [15.0, 80.0], [15.1, 80.0], [15.2, 80.0], [15.3, 80.0], [15.4, 80.0], [15.5, 80.0], [15.6, 81.0], [15.7, 81.0], [15.8, 81.0], [15.9, 81.0], [16.0, 81.0], [16.1, 81.0], [16.2, 81.0], [16.3, 81.0], [16.4, 81.0], [16.5, 82.0], [16.6, 82.0], [16.7, 82.0], [16.8, 82.0], [16.9, 82.0], [17.0, 82.0], [17.1, 82.0], [17.2, 82.0], [17.3, 82.0], [17.4, 82.0], [17.5, 82.0], [17.6, 82.0], [17.7, 82.0], [17.8, 83.0], [17.9, 83.0], [18.0, 83.0], [18.1, 83.0], [18.2, 83.0], [18.3, 83.0], [18.4, 83.0], [18.5, 83.0], [18.6, 83.0], [18.7, 83.0], [18.8, 83.0], [18.9, 83.0], [19.0, 84.0], [19.1, 84.0], [19.2, 84.0], [19.3, 84.0], [19.4, 84.0], [19.5, 84.0], [19.6, 84.0], [19.7, 84.0], [19.8, 84.0], [19.9, 84.0], [20.0, 84.0], [20.1, 84.0], [20.2, 85.0], [20.3, 85.0], [20.4, 85.0], [20.5, 85.0], [20.6, 85.0], [20.7, 85.0], [20.8, 85.0], [20.9, 85.0], [21.0, 85.0], [21.1, 85.0], [21.2, 85.0], [21.3, 85.0], [21.4, 86.0], [21.5, 86.0], [21.6, 86.0], [21.7, 86.0], [21.8, 86.0], [21.9, 86.0], [22.0, 86.0], [22.1, 86.0], [22.2, 86.0], [22.3, 87.0], [22.4, 87.0], [22.5, 87.0], [22.6, 87.0], [22.7, 87.0], [22.8, 87.0], [22.9, 87.0], [23.0, 87.0], [23.1, 87.0], [23.2, 87.0], [23.3, 87.0], [23.4, 87.0], [23.5, 88.0], [23.6, 88.0], [23.7, 88.0], [23.8, 88.0], [23.9, 88.0], [24.0, 88.0], [24.1, 88.0], [24.2, 88.0], [24.3, 88.0], [24.4, 88.0], [24.5, 88.0], [24.6, 88.0], [24.7, 88.0], [24.8, 88.0], [24.9, 88.0], [25.0, 88.0], [25.1, 88.0], [25.2, 89.0], [25.3, 89.0], [25.4, 89.0], [25.5, 89.0], [25.6, 89.0], [25.7, 89.0], [25.8, 89.0], [25.9, 89.0], [26.0, 89.0], [26.1, 89.0], [26.2, 89.0], [26.3, 89.0], [26.4, 89.0], [26.5, 89.0], [26.6, 89.0], [26.7, 89.0], [26.8, 89.0], [26.9, 90.0], [27.0, 90.0], [27.1, 90.0], [27.2, 90.0], [27.3, 90.0], [27.4, 90.0], [27.5, 90.0], [27.6, 90.0], [27.7, 90.0], [27.8, 90.0], [27.9, 90.0], [28.0, 90.0], [28.1, 90.0], [28.2, 91.0], [28.3, 91.0], [28.4, 91.0], [28.5, 91.0], [28.6, 91.0], [28.7, 91.0], [28.8, 91.0], [28.9, 91.0], [29.0, 91.0], [29.1, 92.0], [29.2, 92.0], [29.3, 92.0], [29.4, 92.0], [29.5, 92.0], [29.6, 92.0], [29.7, 92.0], [29.8, 92.0], [29.9, 93.0], [30.0, 93.0], [30.1, 93.0], [30.2, 93.0], [30.3, 93.0], [30.4, 93.0], [30.5, 93.0], [30.6, 93.0], [30.7, 93.0], [30.8, 93.0], [30.9, 93.0], [31.0, 94.0], [31.1, 94.0], [31.2, 94.0], [31.3, 94.0], [31.4, 94.0], [31.5, 94.0], [31.6, 94.0], [31.7, 94.0], [31.8, 94.0], [31.9, 94.0], [32.0, 94.0], [32.1, 94.0], [32.2, 94.0], [32.3, 94.0], [32.4, 94.0], [32.5, 94.0], [32.6, 94.0], [32.7, 94.0], [32.8, 95.0], [32.9, 95.0], [33.0, 95.0], [33.1, 95.0], [33.2, 95.0], [33.3, 95.0], [33.4, 95.0], [33.5, 95.0], [33.6, 95.0], [33.7, 95.0], [33.8, 95.0], [33.9, 95.0], [34.0, 95.0], [34.1, 95.0], [34.2, 95.0], [34.3, 95.0], [34.4, 96.0], [34.5, 96.0], [34.6, 96.0], [34.7, 96.0], [34.8, 96.0], [34.9, 96.0], [35.0, 96.0], [35.1, 96.0], [35.2, 96.0], [35.3, 96.0], [35.4, 96.0], [35.5, 96.0], [35.6, 96.0], [35.7, 96.0], [35.8, 96.0], [35.9, 97.0], [36.0, 97.0], [36.1, 97.0], [36.2, 97.0], [36.3, 97.0], [36.4, 97.0], [36.5, 97.0], [36.6, 97.0], [36.7, 97.0], [36.8, 97.0], [36.9, 97.0], [37.0, 98.0], [37.1, 98.0], [37.2, 98.0], [37.3, 98.0], [37.4, 98.0], [37.5, 98.0], [37.6, 98.0], [37.7, 98.0], [37.8, 99.0], [37.9, 99.0], [38.0, 99.0], [38.1, 99.0], [38.2, 99.0], [38.3, 99.0], [38.4, 99.0], [38.5, 99.0], [38.6, 99.0], [38.7, 100.0], [38.8, 100.0], [38.9, 100.0], [39.0, 100.0], [39.1, 100.0], [39.2, 100.0], [39.3, 100.0], [39.4, 100.0], [39.5, 100.0], [39.6, 101.0], [39.7, 101.0], [39.8, 101.0], [39.9, 101.0], [40.0, 101.0], [40.1, 101.0], [40.2, 101.0], [40.3, 101.0], [40.4, 101.0], [40.5, 102.0], [40.6, 102.0], [40.7, 102.0], [40.8, 102.0], [40.9, 102.0], [41.0, 102.0], [41.1, 102.0], [41.2, 102.0], [41.3, 103.0], [41.4, 103.0], [41.5, 103.0], [41.6, 103.0], [41.7, 103.0], [41.8, 103.0], [41.9, 103.0], [42.0, 103.0], [42.1, 104.0], [42.2, 104.0], [42.3, 104.0], [42.4, 104.0], [42.5, 104.0], [42.6, 104.0], [42.7, 104.0], [42.8, 104.0], [42.9, 104.0], [43.0, 105.0], [43.1, 105.0], [43.2, 105.0], [43.3, 105.0], [43.4, 105.0], [43.5, 105.0], [43.6, 105.0], [43.7, 106.0], [43.8, 106.0], [43.9, 106.0], [44.0, 106.0], [44.1, 106.0], [44.2, 107.0], [44.3, 107.0], [44.4, 107.0], [44.5, 107.0], [44.6, 107.0], [44.7, 107.0], [44.8, 108.0], [44.9, 108.0], [45.0, 108.0], [45.1, 108.0], [45.2, 108.0], [45.3, 109.0], [45.4, 109.0], [45.5, 109.0], [45.6, 109.0], [45.7, 109.0], [45.8, 110.0], [45.9, 110.0], [46.0, 110.0], [46.1, 110.0], [46.2, 111.0], [46.3, 111.0], [46.4, 111.0], [46.5, 111.0], [46.6, 112.0], [46.7, 112.0], [46.8, 112.0], [46.9, 112.0], [47.0, 113.0], [47.1, 113.0], [47.2, 113.0], [47.3, 113.0], [47.4, 113.0], [47.5, 113.0], [47.6, 114.0], [47.7, 114.0], [47.8, 114.0], [47.9, 114.0], [48.0, 114.0], [48.1, 114.0], [48.2, 114.0], [48.3, 115.0], [48.4, 115.0], [48.5, 115.0], [48.6, 115.0], [48.7, 115.0], [48.8, 115.0], [48.9, 116.0], [49.0, 116.0], [49.1, 116.0], [49.2, 116.0], [49.3, 117.0], [49.4, 117.0], [49.5, 117.0], [49.6, 118.0], [49.7, 118.0], [49.8, 118.0], [49.9, 119.0], [50.0, 119.0], [50.1, 119.0], [50.2, 120.0], [50.3, 120.0], [50.4, 120.0], [50.5, 121.0], [50.6, 122.0], [50.7, 123.0], [50.8, 123.0], [50.9, 124.0], [51.0, 124.0], [51.1, 125.0], [51.2, 126.0], [51.3, 126.0], [51.4, 126.0], [51.5, 127.0], [51.6, 128.0], [51.7, 129.0], [51.8, 130.0], [51.9, 131.0], [52.0, 132.0], [52.1, 132.0], [52.2, 134.0], [52.3, 134.0], [52.4, 135.0], [52.5, 136.0], [52.6, 138.0], [52.7, 139.0], [52.8, 142.0], [52.9, 144.0], [53.0, 145.0], [53.1, 146.0], [53.2, 147.0], [53.3, 148.0], [53.4, 149.0], [53.5, 151.0], [53.6, 152.0], [53.7, 154.0], [53.8, 154.0], [53.9, 155.0], [54.0, 155.0], [54.1, 156.0], [54.2, 156.0], [54.3, 158.0], [54.4, 159.0], [54.5, 160.0], [54.6, 161.0], [54.7, 161.0], [54.8, 161.0], [54.9, 161.0], [55.0, 162.0], [55.1, 162.0], [55.2, 163.0], [55.3, 164.0], [55.4, 165.0], [55.5, 166.0], [55.6, 168.0], [55.7, 170.0], [55.8, 174.0], [55.9, 175.0], [56.0, 178.0], [56.1, 183.0], [56.2, 184.0], [56.3, 186.0], [56.4, 189.0], [56.5, 197.0], [56.6, 200.0], [56.7, 201.0], [56.8, 203.0], [56.9, 212.0], [57.0, 216.0], [57.1, 217.0], [57.2, 220.0], [57.3, 241.0], [57.4, 242.0], [57.5, 243.0], [57.6, 246.0], [57.7, 248.0], [57.8, 248.0], [57.9, 249.0], [58.0, 288.0], [58.1, 319.0], [58.2, 325.0], [58.3, 347.0], [58.4, 359.0], [58.5, 430.0], [58.6, 448.0], [58.7, 471.0], [58.8, 495.0], [58.9, 521.0], [59.0, 544.0], [59.1, 556.0], [59.2, 595.0], [59.3, 621.0], [59.4, 722.0], [59.5, 760.0], [59.6, 806.0], [59.7, 814.0], [59.8, 855.0], [59.9, 889.0], [60.0, 963.0], [60.1, 1012.0], [60.2, 1128.0], [60.3, 1142.0], [60.4, 1183.0], [60.5, 1241.0], [60.6, 1259.0], [60.7, 1284.0], [60.8, 1320.0], [60.9, 1334.0], [61.0, 1355.0], [61.1, 1359.0], [61.2, 1395.0], [61.3, 1412.0], [61.4, 1431.0], [61.5, 1443.0], [61.6, 1466.0], [61.7, 1528.0], [61.8, 1562.0], [61.9, 1679.0], [62.0, 1713.0], [62.1, 1815.0], [62.2, 1841.0], [62.3, 1944.0], [62.4, 2069.0], [62.5, 2107.0], [62.6, 2149.0], [62.7, 2171.0], [62.8, 2220.0], [62.9, 2297.0], [63.0, 2310.0], [63.1, 2315.0], [63.2, 2416.0], [63.3, 2537.0], [63.4, 2587.0], [63.5, 2617.0], [63.6, 2715.0], [63.7, 2874.0], [63.8, 2907.0], [63.9, 2949.0], [64.0, 3052.0], [64.1, 3076.0], [64.2, 3087.0], [64.3, 3163.0], [64.4, 3190.0], [64.5, 3302.0], [64.6, 3347.0], [64.7, 3377.0], [64.8, 3483.0], [64.9, 3531.0], [65.0, 3573.0], [65.1, 3782.0], [65.2, 3863.0], [65.3, 3947.0], [65.4, 4047.0], [65.5, 4082.0], [65.6, 4118.0], [65.7, 4172.0], [65.8, 4220.0], [65.9, 4350.0], [66.0, 4434.0], [66.1, 4468.0], [66.2, 4542.0], [66.3, 4604.0], [66.4, 4658.0], [66.5, 4799.0], [66.6, 4861.0], [66.7, 4940.0], [66.8, 4972.0], [66.9, 5009.0], [67.0, 5031.0], [67.1, 5068.0], [67.2, 5215.0], [67.3, 5370.0], [67.4, 5413.0], [67.5, 5428.0], [67.6, 5542.0], [67.7, 5596.0], [67.8, 5626.0], [67.9, 5672.0], [68.0, 5695.0], [68.1, 5709.0], [68.2, 5754.0], [68.3, 5781.0], [68.4, 5855.0], [68.5, 5911.0], [68.6, 5978.0], [68.7, 6059.0], [68.8, 6113.0], [68.9, 6166.0], [69.0, 6212.0], [69.1, 6250.0], [69.2, 6253.0], [69.3, 6282.0], [69.4, 6303.0], [69.5, 6359.0], [69.6, 6453.0], [69.7, 6466.0], [69.8, 6500.0], [69.9, 6538.0], [70.0, 6556.0], [70.1, 6614.0], [70.2, 6845.0], [70.3, 6975.0], [70.4, 7126.0], [70.5, 7257.0], [70.6, 7294.0], [70.7, 7380.0], [70.8, 7438.0], [70.9, 7472.0], [71.0, 7508.0], [71.1, 7542.0], [71.2, 7622.0], [71.3, 7726.0], [71.4, 7783.0], [71.5, 7839.0], [71.6, 7841.0], [71.7, 7978.0], [71.8, 8039.0], [71.9, 8041.0], [72.0, 8138.0], [72.1, 8170.0], [72.2, 8171.0], [72.3, 8202.0], [72.4, 8240.0], [72.5, 8252.0], [72.6, 8276.0], [72.7, 8307.0], [72.8, 8350.0], [72.9, 8358.0], [73.0, 8380.0], [73.1, 8389.0], [73.2, 8392.0], [73.3, 8393.0], [73.4, 8399.0], [73.5, 8401.0], [73.6, 8467.0], [73.7, 8514.0], [73.8, 8560.0], [73.9, 8591.0], [74.0, 8619.0], [74.1, 8640.0], [74.2, 8667.0], [74.3, 8717.0], [74.4, 8737.0], [74.5, 8759.0], [74.6, 8783.0], [74.7, 8867.0], [74.8, 8929.0], [74.9, 8980.0], [75.0, 9160.0], [75.1, 9367.0], [75.2, 9409.0], [75.3, 9432.0], [75.4, 9449.0], [75.5, 9477.0], [75.6, 9507.0], [75.7, 9531.0], [75.8, 9576.0], [75.9, 9607.0], [76.0, 9638.0], [76.1, 9666.0], [76.2, 9691.0], [76.3, 9716.0], [76.4, 9717.0], [76.5, 9720.0], [76.6, 9744.0], [76.7, 9765.0], [76.8, 9791.0], [76.9, 9859.0], [77.0, 9889.0], [77.1, 9935.0], [77.2, 9970.0], [77.3, 10000.0], [77.4, 10011.0], [77.5, 10288.0], [77.6, 10435.0], [77.7, 10479.0], [77.8, 10504.0], [77.9, 10582.0], [78.0, 10709.0], [78.1, 10922.0], [78.2, 11015.0], [78.3, 11095.0], [78.4, 11199.0], [78.5, 11278.0], [78.6, 11299.0], [78.7, 11304.0], [78.8, 11333.0], [78.9, 11335.0], [79.0, 11415.0], [79.1, 11601.0], [79.2, 11609.0], [79.3, 11712.0], [79.4, 11816.0], [79.5, 12038.0], [79.6, 12398.0], [79.7, 12705.0], [79.8, 12707.0], [79.9, 13311.0], [80.0, 13313.0], [80.1, 13314.0], [80.2, 13363.0], [80.3, 13530.0], [80.4, 13785.0], [80.5, 13787.0], [80.6, 13850.0], [80.7, 13918.0], [80.8, 14086.0], [80.9, 14172.0], [81.0, 14191.0], [81.1, 14291.0], [81.2, 14598.0], [81.3, 14658.0], [81.4, 14734.0], [81.5, 14758.0], [81.6, 14820.0], [81.7, 15017.0], [81.8, 15058.0], [81.9, 15254.0], [82.0, 15258.0], [82.1, 15457.0], [82.2, 15501.0], [82.3, 15763.0], [82.4, 16230.0], [82.5, 16492.0], [82.6, 16742.0], [82.7, 16785.0], [82.8, 16900.0], [82.9, 17223.0], [83.0, 17309.0], [83.1, 17327.0], [83.2, 17344.0], [83.3, 17359.0], [83.4, 17450.0], [83.5, 17473.0], [83.6, 17479.0], [83.7, 17488.0], [83.8, 17506.0], [83.9, 17539.0], [84.0, 17560.0], [84.1, 17616.0], [84.2, 17797.0], [84.3, 17824.0], [84.4, 17848.0], [84.5, 17873.0], [84.6, 17920.0], [84.7, 17980.0], [84.8, 18128.0], [84.9, 18131.0], [85.0, 18139.0], [85.1, 18262.0], [85.2, 18503.0], [85.3, 18507.0], [85.4, 18607.0], [85.5, 18889.0], [85.6, 18896.0], [85.7, 18935.0], [85.8, 18955.0], [85.9, 19014.0], [86.0, 19054.0], [86.1, 19103.0], [86.2, 19149.0], [86.3, 19175.0], [86.4, 19200.0], [86.5, 19224.0], [86.6, 19238.0], [86.7, 19258.0], [86.8, 19263.0], [86.9, 19321.0], [87.0, 19392.0], [87.1, 19524.0], [87.2, 19630.0], [87.3, 19644.0], [87.4, 19669.0], [87.5, 19707.0], [87.6, 19709.0], [87.7, 19741.0], [87.8, 19809.0], [87.9, 19845.0], [88.0, 19850.0], [88.1, 19855.0], [88.2, 19856.0], [88.3, 19870.0], [88.4, 19950.0], [88.5, 19993.0], [88.6, 20073.0], [88.7, 20109.0], [88.8, 20170.0], [88.9, 20367.0], [89.0, 20392.0], [89.1, 20440.0], [89.2, 20453.0], [89.3, 20606.0], [89.4, 20701.0], [89.5, 20704.0], [89.6, 20748.0], [89.7, 20843.0], [89.8, 21252.0], [89.9, 21423.0], [90.0, 21471.0], [90.1, 21552.0], [90.2, 21625.0], [90.3, 22176.0], [90.4, 22396.0], [90.5, 22438.0], [90.6, 22511.0], [90.7, 22599.0], [90.8, 22748.0], [90.9, 22752.0], [91.0, 22841.0], [91.1, 22889.0], [91.2, 22898.0], [91.3, 22924.0], [91.4, 23037.0], [91.5, 23159.0], [91.6, 23766.0], [91.7, 23823.0], [91.8, 24939.0], [91.9, 25228.0], [92.0, 25805.0], [92.1, 25807.0], [92.2, 26249.0], [92.3, 26361.0], [92.4, 26587.0], [92.5, 26593.0], [92.6, 26686.0], [92.7, 26885.0], [92.8, 26976.0], [92.9, 27025.0], [93.0, 27758.0], [93.1, 27892.0], [93.2, 28282.0], [93.3, 28914.0], [93.4, 29898.0], [93.5, 31953.0], [93.6, 32011.0], [93.7, 32304.0], [93.8, 32311.0], [93.9, 32654.0], [94.0, 32901.0], [94.1, 33329.0], [94.2, 33368.0], [94.3, 34352.0], [94.4, 37899.0], [94.5, 38182.0], [94.6, 38255.0], [94.7, 41725.0], [94.8, 44605.0], [94.9, 45150.0], [95.0, 45390.0], [95.1, 46610.0], [95.2, 47994.0], [95.3, 48674.0], [95.4, 53862.0], [95.5, 54918.0], [95.6, 58689.0], [95.7, 59394.0], [95.8, 60317.0], [95.9, 62425.0], [96.0, 63363.0], [96.1, 64114.0], [96.2, 64147.0], [96.3, 65156.0], [96.4, 67889.0], [96.5, 71022.0], [96.6, 73232.0], [96.7, 76127.0], [96.8, 76321.0], [96.9, 79225.0], [97.0, 83092.0], [97.1, 83138.0], [97.2, 83366.0], [97.3, 86540.0], [97.4, 92347.0], [97.5, 94283.0], [97.6, 97096.0], [97.7, 100036.0], [97.8, 100071.0], [97.9, 100083.0], [98.0, 100094.0], [98.1, 100123.0], [98.2, 100135.0], [98.3, 100148.0], [98.4, 100162.0], [98.5, 103658.0], [98.6, 127434.0], [98.7, 127458.0], [98.8, 128558.0], [98.9, 129255.0], [99.0, 129772.0], [99.1, 131140.0], [99.2, 131263.0], [99.3, 132085.0], [99.4, 132227.0], [99.5, 132288.0], [99.6, 134857.0], [99.7, 135812.0], [99.8, 135932.0], [99.9, 154536.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15606.0, "series": [{"data": [[0.0, 15606.0], [132000.0, 35.0], [71500.0, 1.0], [73100.0, 1.0], [69900.0, 1.0], [76300.0, 29.0], [81100.0, 1.0], [79500.0, 3.0], [82700.0, 1.0], [93900.0, 2.0], [92300.0, 2.0], [98700.0, 1.0], [100.0, 7262.0], [34500.0, 1.0], [32900.0, 18.0], [134700.0, 16.0], [37700.0, 1.0], [39300.0, 10.0], [40900.0, 2.0], [41700.0, 2.0], [44900.0, 5.0], [45700.0, 2.0], [46500.0, 12.0], [47300.0, 1.0], [50500.0, 2.0], [200.0, 583.0], [53700.0, 1.0], [54500.0, 14.0], [59300.0, 48.0], [60100.0, 2.0], [63300.0, 36.0], [61700.0, 2.0], [64100.0, 61.0], [67400.0, 2.0], [69000.0, 1.0], [65800.0, 1.0], [70600.0, 4.0], [72200.0, 4.0], [300.0, 160.0], [75400.0, 4.0], [73800.0, 2.0], [80200.0, 2.0], [83400.0, 9.0], [88200.0, 5.0], [91400.0, 2.0], [94600.0, 1.0], [99400.0, 12.0], [400.0, 179.0], [500.0, 139.0], [129800.0, 9.0], [600.0, 61.0], [700.0, 88.0], [800.0, 130.0], [900.0, 68.0], [1000.0, 40.0], [1100.0, 113.0], [1200.0, 123.0], [1300.0, 177.0], [1400.0, 187.0], [1500.0, 76.0], [1600.0, 38.0], [1700.0, 46.0], [1800.0, 67.0], [1900.0, 61.0], [2000.0, 30.0], [2100.0, 121.0], [2200.0, 64.0], [2300.0, 115.0], [2400.0, 32.0], [2500.0, 61.0], [2600.0, 70.0], [2800.0, 69.0], [2700.0, 3.0], [2900.0, 83.0], [3000.0, 111.0], [3100.0, 66.0], [3200.0, 23.0], [3300.0, 107.0], [3400.0, 34.0], [3500.0, 80.0], [3700.0, 18.0], [3600.0, 19.0], [3800.0, 45.0], [3900.0, 49.0], [4000.0, 82.0], [66500.0, 2.0], [4300.0, 49.0], [68100.0, 4.0], [4100.0, 84.0], [4200.0, 31.0], [72900.0, 2.0], [4400.0, 81.0], [4600.0, 49.0], [4500.0, 54.0], [69700.0, 2.0], [77700.0, 2.0], [76100.0, 16.0], [4800.0, 63.0], [4700.0, 36.0], [74500.0, 1.0], [5000.0, 119.0], [79300.0, 1.0], [80900.0, 1.0], [5100.0, 4.0], [4900.0, 94.0], [85700.0, 1.0], [5300.0, 62.0], [5200.0, 17.0], [5600.0, 102.0], [5500.0, 71.0], [5400.0, 75.0], [87300.0, 1.0], [5700.0, 136.0], [5800.0, 60.0], [90500.0, 1.0], [6000.0, 69.0], [5900.0, 48.0], [6100.0, 84.0], [95300.0, 1.0], [100100.0, 153.0], [6300.0, 59.0], [6200.0, 162.0], [6500.0, 119.0], [6600.0, 19.0], [6400.0, 105.0], [6800.0, 26.0], [6700.0, 17.0], [6900.0, 30.0], [7000.0, 27.0], [7100.0, 32.0], [7400.0, 92.0], [7300.0, 53.0], [7200.0, 63.0], [7600.0, 35.0], [7500.0, 88.0], [7800.0, 90.0], [7700.0, 54.0], [7900.0, 56.0], [8100.0, 141.0], [8000.0, 65.0], [8400.0, 102.0], [8600.0, 134.0], [8200.0, 162.0], [9000.0, 8.0], [8800.0, 56.0], [9200.0, 3.0], [9400.0, 165.0], [9600.0, 149.0], [10000.0, 73.0], [9800.0, 91.0], [10200.0, 5.0], [10400.0, 92.0], [10600.0, 24.0], [11000.0, 48.0], [11200.0, 82.0], [10800.0, 13.0], [11400.0, 21.0], [11600.0, 87.0], [12000.0, 38.0], [11800.0, 63.0], [12200.0, 1.0], [12400.0, 11.0], [12600.0, 10.0], [13000.0, 6.0], [13400.0, 9.0], [13800.0, 57.0], [13600.0, 4.0], [14000.0, 39.0], [14200.0, 39.0], [14400.0, 7.0], [14800.0, 23.0], [14600.0, 51.0], [15200.0, 72.0], [15000.0, 69.0], [15400.0, 53.0], [15800.0, 7.0], [15600.0, 4.0], [16000.0, 4.0], [16200.0, 22.0], [16400.0, 32.0], [17200.0, 36.0], [16800.0, 38.0], [17600.0, 44.0], [18000.0, 16.0], [18400.0, 4.0], [19200.0, 196.0], [18800.0, 89.0], [19600.0, 146.0], [20400.0, 79.0], [20000.0, 62.0], [20800.0, 28.0], [21200.0, 45.0], [21600.0, 26.0], [22400.0, 69.0], [23200.0, 10.0], [22800.0, 110.0], [23600.0, 7.0], [24400.0, 3.0], [24800.0, 3.0], [25200.0, 2.0], [25600.0, 4.0], [26000.0, 8.0], [26400.0, 3.0], [26800.0, 14.0], [27200.0, 9.0], [28000.0, 1.0], [28400.0, 1.0], [28800.0, 11.0], [30000.0, 1.0], [31200.0, 2.0], [31600.0, 5.0], [30800.0, 2.0], [32000.0, 26.0], [32400.0, 1.0], [32800.0, 15.0], [131900.0, 7.0], [35200.0, 1.0], [36800.0, 2.0], [39200.0, 15.0], [44800.0, 2.0], [45600.0, 1.0], [46400.0, 7.0], [48800.0, 2.0], [47200.0, 12.0], [52800.0, 2.0], [52000.0, 2.0], [54400.0, 1.0], [56000.0, 2.0], [57600.0, 1.0], [63200.0, 4.0], [62400.0, 1.0], [64000.0, 2.0], [64800.0, 2.0], [67200.0, 2.0], [65600.0, 1.0], [72000.0, 15.0], [75200.0, 1.0], [80000.0, 3.0], [81600.0, 1.0], [83200.0, 20.0], [86400.0, 1.0], [92800.0, 1.0], [97600.0, 3.0], [96000.0, 1.0], [105600.0, 9.0], [102400.0, 6.0], [128000.0, 4.0], [129600.0, 9.0], [131200.0, 1.0], [132100.0, 13.0], [144900.0, 3.0], [154500.0, 43.0], [67100.0, 4.0], [68700.0, 1.0], [75100.0, 2.0], [76700.0, 1.0], [79900.0, 2.0], [83100.0, 48.0], [89500.0, 2.0], [94300.0, 2.0], [127900.0, 1.0], [33100.0, 4.0], [33900.0, 14.0], [34700.0, 2.0], [35500.0, 2.0], [37900.0, 6.0], [42700.0, 2.0], [41900.0, 2.0], [43500.0, 1.0], [45100.0, 6.0], [46700.0, 8.0], [45900.0, 3.0], [48300.0, 13.0], [52300.0, 1.0], [57100.0, 2.0], [59500.0, 3.0], [60300.0, 19.0], [61100.0, 2.0], [62700.0, 2.0], [64300.0, 1.0], [65100.0, 1.0], [69400.0, 1.0], [67800.0, 1.0], [71000.0, 4.0], [75800.0, 2.0], [74200.0, 1.0], [83800.0, 2.0], [85400.0, 1.0], [82200.0, 2.0], [93400.0, 5.0], [91800.0, 2.0], [90200.0, 1.0], [96600.0, 2.0], [128600.0, 1.0], [134800.0, 14.0], [135700.0, 5.0], [66900.0, 2.0], [71700.0, 3.0], [70100.0, 2.0], [76500.0, 1.0], [79700.0, 1.0], [81300.0, 2.0], [89300.0, 2.0], [94100.0, 1.0], [92500.0, 2.0], [97300.0, 2.0], [194200.0, 1.0], [16500.0, 4.0], [16900.0, 9.0], [17300.0, 157.0], [18100.0, 101.0], [17700.0, 13.0], [18500.0, 111.0], [18900.0, 97.0], [19300.0, 55.0], [19700.0, 131.0], [20100.0, 60.0], [20500.0, 16.0], [21300.0, 3.0], [21700.0, 27.0], [22500.0, 44.0], [22100.0, 11.0], [22900.0, 67.0], [23300.0, 7.0], [23700.0, 9.0], [25300.0, 13.0], [24900.0, 39.0], [26500.0, 96.0], [25700.0, 3.0], [26900.0, 63.0], [27300.0, 3.0], [27700.0, 17.0], [28100.0, 20.0], [28500.0, 6.0], [28900.0, 37.0], [29700.0, 1.0], [31300.0, 1.0], [31700.0, 1.0], [32500.0, 3.0], [32100.0, 7.0], [33000.0, 2.0], [33800.0, 4.0], [131100.0, 52.0], [35400.0, 1.0], [38600.0, 2.0], [37800.0, 13.0], [40200.0, 1.0], [45000.0, 1.0], [43400.0, 1.0], [45800.0, 1.0], [46600.0, 4.0], [48200.0, 12.0], [47400.0, 1.0], [49000.0, 2.0], [49800.0, 4.0], [53000.0, 2.0], [53800.0, 2.0], [57000.0, 2.0], [58600.0, 4.0], [59400.0, 14.0], [63400.0, 10.0], [64200.0, 4.0], [65000.0, 3.0], [69200.0, 2.0], [66000.0, 1.0], [72400.0, 1.0], [75600.0, 3.0], [77200.0, 2.0], [82000.0, 1.0], [85200.0, 2.0], [91600.0, 1.0], [98000.0, 1.0], [99600.0, 2.0], [107600.0, 1.0], [133600.0, 2.0], [131300.0, 13.0], [65900.0, 2.0], [69100.0, 2.0], [70700.0, 3.0], [73900.0, 2.0], [75500.0, 3.0], [78700.0, 2.0], [83500.0, 8.0], [85100.0, 3.0], [88300.0, 8.0], [91500.0, 2.0], [96300.0, 2.0], [99500.0, 1.0], [132200.0, 55.0], [33300.0, 64.0], [34100.0, 2.0], [36500.0, 2.0], [38100.0, 34.0], [38900.0, 2.0], [42900.0, 2.0], [44500.0, 9.0], [43700.0, 1.0], [45300.0, 33.0], [46900.0, 2.0], [47700.0, 1.0], [50900.0, 4.0], [52500.0, 2.0], [54900.0, 28.0], [61300.0, 2.0], [62900.0, 2.0], [62100.0, 6.0], [63700.0, 5.0], [65300.0, 2.0], [68200.0, 2.0], [73000.0, 2.0], [76200.0, 36.0], [81000.0, 1.0], [79400.0, 2.0], [84200.0, 2.0], [93800.0, 1.0], [97000.0, 22.0], [95400.0, 1.0], [98600.0, 2.0], [106600.0, 1.0], [111400.0, 4.0], [127400.0, 65.0], [134900.0, 18.0], [65700.0, 7.0], [70500.0, 2.0], [72100.0, 1.0], [81700.0, 1.0], [78500.0, 1.0], [83300.0, 16.0], [84900.0, 2.0], [86500.0, 1.0], [88100.0, 4.0], [92900.0, 1.0], [91300.0, 2.0], [96100.0, 2.0], [94500.0, 1.0], [102500.0, 18.0], [129700.0, 32.0], [8500.0, 98.0], [8300.0, 298.0], [8700.0, 151.0], [135800.0, 40.0], [8900.0, 83.0], [9100.0, 26.0], [9300.0, 42.0], [9500.0, 122.0], [9700.0, 234.0], [9900.0, 102.0], [10100.0, 4.0], [10300.0, 22.0], [10500.0, 61.0], [10700.0, 16.0], [11100.0, 41.0], [10900.0, 48.0], [11300.0, 154.0], [11500.0, 16.0], [11700.0, 13.0], [11900.0, 5.0], [12100.0, 2.0], [12500.0, 6.0], [12700.0, 59.0], [12300.0, 2.0], [13100.0, 20.0], [13300.0, 155.0], [12900.0, 4.0], [13500.0, 3.0], [13700.0, 83.0], [14100.0, 83.0], [13900.0, 22.0], [14300.0, 17.0], [14700.0, 98.0], [14500.0, 11.0], [15300.0, 6.0], [14900.0, 19.0], [15100.0, 10.0], [15700.0, 31.0], [15500.0, 15.0], [16300.0, 2.0], [15900.0, 5.0], [16100.0, 4.0], [17000.0, 17.0], [17400.0, 158.0], [16600.0, 16.0], [18200.0, 32.0], [17800.0, 150.0], [19000.0, 90.0], [19400.0, 10.0], [18600.0, 1.0], [19800.0, 222.0], [20200.0, 15.0], [20600.0, 20.0], [21400.0, 96.0], [21000.0, 1.0], [21800.0, 1.0], [22200.0, 12.0], [22600.0, 7.0], [23000.0, 16.0], [23400.0, 1.0], [23800.0, 39.0], [24200.0, 2.0], [25400.0, 13.0], [25000.0, 8.0], [25800.0, 62.0], [26600.0, 24.0], [26200.0, 4.0], [27000.0, 13.0], [27400.0, 13.0], [27800.0, 34.0], [28200.0, 24.0], [28600.0, 1.0], [29000.0, 3.0], [29800.0, 5.0], [30200.0, 8.0], [31000.0, 2.0], [32600.0, 26.0], [31800.0, 8.0], [32200.0, 3.0], [34000.0, 4.0], [33200.0, 18.0], [34800.0, 2.0], [35600.0, 2.0], [37200.0, 1.0], [41200.0, 1.0], [44400.0, 7.0], [43600.0, 3.0], [45200.0, 14.0], [46000.0, 2.0], [47600.0, 3.0], [48400.0, 11.0], [50800.0, 1.0], [50000.0, 3.0], [54800.0, 5.0], [54000.0, 2.0], [58800.0, 2.0], [58000.0, 2.0], [60400.0, 5.0], [59600.0, 1.0], [62000.0, 5.0], [65200.0, 2.0], [69600.0, 2.0], [68000.0, 1.0], [72800.0, 3.0], [71200.0, 3.0], [79200.0, 2.0], [82400.0, 8.0], [87200.0, 2.0], [93600.0, 1.0], [96800.0, 2.0], [100000.0, 147.0], [98400.0, 2.0], [104800.0, 1.0], [133700.0, 4.0], [162500.0, 8.0], [66300.0, 3.0], [72700.0, 1.0], [71100.0, 1.0], [93500.0, 1.0], [90300.0, 2.0], [95100.0, 1.0], [128700.0, 14.0], [134600.0, 8.0], [34300.0, 2.0], [132300.0, 3.0], [36700.0, 1.0], [35100.0, 3.0], [39900.0, 4.0], [40700.0, 2.0], [44700.0, 4.0], [43100.0, 1.0], [43900.0, 2.0], [45500.0, 2.0], [46300.0, 1.0], [47100.0, 3.0], [47900.0, 2.0], [58300.0, 1.0], [59100.0, 1.0], [59900.0, 2.0], [60700.0, 2.0], [62300.0, 3.0], [63100.0, 13.0], [64700.0, 3.0], [65500.0, 1.0], [68600.0, 2.0], [67000.0, 3.0], [70200.0, 3.0], [73400.0, 1.0], [75000.0, 1.0], [81400.0, 2.0], [78200.0, 2.0], [83000.0, 3.0], [86200.0, 4.0], [94200.0, 9.0], [99000.0, 1.0], [100600.0, 1.0], [103800.0, 1.0], [67700.0, 2.0], [66100.0, 2.0], [72500.0, 1.0], [74100.0, 1.0], [78900.0, 1.0], [80500.0, 2.0], [91700.0, 2.0], [93300.0, 13.0], [96500.0, 1.0], [101300.0, 1.0], [128500.0, 48.0], [131800.0, 2.0], [17100.0, 9.0], [16700.0, 59.0], [17500.0, 128.0], [17900.0, 67.0], [19100.0, 121.0], [18700.0, 2.0], [20300.0, 86.0], [19900.0, 67.0], [19500.0, 30.0], [21100.0, 2.0], [20700.0, 118.0], [21500.0, 37.0], [21900.0, 1.0], [22300.0, 28.0], [22700.0, 94.0], [23100.0, 30.0], [23500.0, 7.0], [23900.0, 1.0], [24300.0, 2.0], [24700.0, 13.0], [25500.0, 1.0], [25100.0, 7.0], [25900.0, 16.0], [26300.0, 37.0], [26700.0, 32.0], [27100.0, 2.0], [27500.0, 2.0], [27900.0, 1.0], [28300.0, 6.0], [29500.0, 4.0], [29900.0, 3.0], [31900.0, 27.0], [32300.0, 87.0], [32700.0, 1.0], [34200.0, 2.0], [135900.0, 33.0], [35000.0, 2.0], [35800.0, 3.0], [38200.0, 40.0], [37400.0, 2.0], [42200.0, 1.0], [43000.0, 1.0], [44600.0, 29.0], [45400.0, 1.0], [47000.0, 4.0], [47800.0, 2.0], [48600.0, 3.0], [51000.0, 5.0], [51800.0, 2.0], [52600.0, 5.0], [55000.0, 12.0], [55800.0, 2.0], [58200.0, 2.0], [59000.0, 1.0], [64600.0, 11.0], [63800.0, 2.0], [68400.0, 2.0], [73200.0, 2.0], [74800.0, 1.0], [81200.0, 2.0], [94000.0, 4.0], [95600.0, 1.0], [103600.0, 15.0], [127600.0, 1.0], [129200.0, 23.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 194200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 120.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 23790.0, "series": [{"data": [[0.0, 23790.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1128.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15367.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 120.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.781250000000004, "minX": 1.68289752E12, "maxY": 3000.0, "series": [{"data": [[1.68289776E12, 3000.0], [1.68289794E12, 17.781250000000004], [1.68289764E12, 3000.0], [1.68289782E12, 1808.5450530035337], [1.68289752E12, 3000.0], [1.6828977E12, 3000.0], [1.68289788E12, 91.50847457627125], [1.68289758E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68289794E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 26.5, "minX": 2.0, "maxY": 135976.0, "series": [{"data": [[2.0, 100084.0], [3.0, 100084.0], [7.0, 100083.0], [8.0, 100083.0], [10.0, 100082.0], [12.0, 100082.0], [13.0, 100077.0], [18.0, 100076.0], [20.0, 100076.0], [22.0, 100107.5], [23.0, 100075.0], [24.0, 100073.0], [25.0, 100072.0], [27.0, 100071.0], [28.0, 100070.0], [29.0, 100070.0], [30.0, 100067.0], [31.0, 100066.0], [33.0, 99416.0], [32.0, 100062.0], [35.0, 98406.0], [34.0, 99413.0], [37.0, 97397.0], [36.0, 98404.0], [39.0, 96387.0], [38.0, 97395.0], [41.0, 95378.0], [40.0, 96385.0], [43.0, 94368.0], [42.0, 95442.0], [45.0, 93358.0], [44.0, 94366.0], [47.0, 92349.0], [46.0, 93357.0], [49.0, 91339.0], [48.0, 92347.0], [51.0, 90396.0], [50.0, 91337.0], [53.0, 89321.0], [52.0, 90328.0], [55.0, 88311.0], [54.0, 89318.0], [57.0, 87301.0], [56.0, 88309.0], [59.0, 86293.0], [58.0, 87299.0], [61.0, 85282.0], [60.0, 86290.0], [63.0, 84273.0], [62.0, 85280.0], [67.0, 82254.0], [66.0, 83261.0], [65.0, 83264.0], [64.0, 84272.0], [71.0, 80236.0], [70.0, 81242.0], [69.0, 81244.0], [68.0, 82252.0], [75.0, 78282.0], [74.0, 79223.0], [73.0, 79225.0], [72.0, 80233.0], [79.0, 76263.0], [78.0, 77204.0], [77.0, 77272.0], [76.0, 78214.0], [83.0, 74178.0], [82.0, 75251.0], [81.0, 75191.0], [80.0, 76260.0], [87.0, 72225.0], [86.0, 73232.0], [85.0, 73234.0], [84.0, 74242.0], [91.0, 70140.0], [90.0, 71148.0], [89.0, 71215.0], [88.0, 72157.0], [95.0, 68121.0], [94.0, 69128.0], [93.0, 69131.0], [92.0, 70204.0], [99.0, 66167.0], [98.0, 67175.0], [97.0, 67177.0], [96.0, 68118.0], [103.0, 64083.0], [102.0, 65156.0], [101.0, 65093.0], [100.0, 66164.0], [107.0, 62129.0], [106.0, 63136.0], [105.0, 63141.0], [104.0, 64146.0], [111.0, 60111.0], [110.0, 61119.0], [109.0, 61122.0], [108.0, 62127.0], [115.0, 58091.0], [114.0, 59099.0], [113.0, 59101.0], [112.0, 60108.0], [119.0, 56073.0], [118.0, 57080.0], [117.0, 57082.0], [116.0, 58089.0], [123.0, 54055.0], [122.0, 55061.0], [121.0, 55063.0], [120.0, 56071.0], [127.0, 52036.0], [126.0, 53045.0], [124.0, 54054.0], [135.0, 47997.0], [134.0, 49004.0], [133.0, 49006.0], [132.0, 50013.0], [131.0, 50015.0], [130.0, 51023.0], [129.0, 51027.0], [128.0, 52034.0], [143.0, 43959.0], [142.0, 44966.0], [141.0, 44967.0], [140.0, 45975.0], [139.0, 45977.0], [138.0, 46984.0], [137.0, 46986.0], [136.0, 47994.0], [151.0, 39919.0], [150.0, 40927.0], [149.0, 40929.0], [148.0, 41936.0], [147.0, 41938.0], [146.0, 42946.0], [145.0, 42949.0], [144.0, 43957.0], [159.0, 35882.0], [158.0, 36889.0], [157.0, 36891.0], [156.0, 37899.0], [155.0, 37901.0], [154.0, 38908.0], [153.0, 38910.0], [152.0, 39917.0], [167.0, 31844.0], [166.0, 32853.0], [165.0, 32854.0], [164.0, 33861.0], [163.0, 33863.0], [162.0, 34871.0], [161.0, 34874.0], [160.0, 35880.0], [175.0, 27806.0], [174.0, 28814.0], [173.0, 28817.0], [172.0, 29823.0], [171.0, 29825.0], [170.0, 30833.0], [169.0, 30835.0], [168.0, 31842.0], [183.0, 23769.0], [182.0, 24776.0], [181.0, 24778.0], [180.0, 25786.0], [179.0, 25789.0], [178.0, 26796.0], [177.0, 26797.0], [176.0, 27804.0], [191.0, 19730.0], [190.0, 20738.0], [189.0, 20740.0], [188.0, 21747.0], [187.0, 21749.0], [186.0, 22758.0], [185.0, 22761.0], [184.0, 23766.0], [199.0, 15692.0], [198.0, 16700.0], [197.0, 16701.0], [196.0, 17708.0], [195.0, 17710.0], [194.0, 18719.0], [193.0, 18720.0], [192.0, 19727.0], [207.0, 11985.0], [206.0, 12993.0], [205.0, 12663.0], [204.0, 13670.0], [203.0, 13673.0], [202.0, 14682.0], [201.0, 14683.0], [200.0, 15690.0], [215.0, 10007.0], [213.0, 10009.0], [212.0, 10011.0], [211.0, 10011.0], [210.0, 10974.0], [209.0, 10976.0], [208.0, 11984.0], [223.0, 9997.0], [222.0, 9999.0], [221.0, 10000.0], [220.0, 10002.0], [219.0, 10003.0], [217.0, 10005.0], [216.0, 10005.0], [231.0, 9980.0], [230.0, 9981.0], [229.0, 9989.0], [228.0, 9992.0], [226.0, 9994.0], [224.0, 9996.0], [239.0, 9769.0], [238.0, 9770.0], [237.0, 9771.0], [236.0, 9773.0], [235.0, 9776.0], [234.0, 9784.0], [233.0, 9884.0], [232.0, 9971.0], [247.0, 9755.0], [246.0, 9759.5], [244.0, 9763.0], [243.0, 9764.0], [242.0, 9765.0], [241.0, 9766.5], [255.0, 9678.0], [254.0, 9691.0], [253.0, 9740.0], [252.0, 9744.0], [251.0, 9744.0], [250.0, 9751.0], [249.0, 9753.0], [248.0, 9754.0], [270.0, 9457.0], [271.0, 9456.0], [269.0, 9457.0], [268.0, 9458.0], [267.0, 9459.0], [266.0, 9595.5], [264.0, 9460.0], [263.0, 9548.0], [257.0, 9654.0], [256.0, 9663.0], [259.0, 9625.0], [258.0, 9627.0], [262.0, 9564.0], [261.0, 9589.0], [260.0, 9608.0], [275.0, 10614.5], [285.0, 9978.0], [287.0, 9713.5], [284.0, 9585.0], [282.0, 9449.0], [281.0, 9722.0], [279.0, 9451.0], [278.0, 9729.0], [277.0, 9455.0], [273.0, 9457.0], [272.0, 9456.0], [302.0, 9436.0], [303.0, 9436.0], [301.0, 9712.0], [300.0, 9439.0], [299.0, 9439.0], [298.0, 9440.0], [296.0, 9441.0], [295.0, 10336.0], [288.0, 9445.0], [291.0, 9444.0], [290.0, 9581.0], [293.0, 9443.0], [292.0, 9715.0], [307.0, 9434.0], [319.0, 9699.0], [318.0, 9608.333333333334], [306.0, 9435.0], [305.0, 9435.0], [304.0, 9435.0], [315.0, 9429.0], [314.0, 9430.0], [312.0, 9702.0], [311.0, 9703.0], [310.0, 9963.0], [309.0, 9705.0], [308.0, 9432.0], [334.0, 9948.0], [335.0, 9417.0], [333.0, 9595.666666666666], [323.0, 9696.0], [322.0, 9696.0], [321.0, 9424.0], [320.0, 9698.0], [330.0, 9419.0], [329.0, 9691.0], [328.0, 9695.0], [327.0, 9421.0], [326.0, 9953.0], [325.0, 9696.0], [324.0, 9423.0], [350.0, 11196.5], [351.0, 9679.0], [348.0, 9681.0], [339.0, 9416.0], [338.0, 9550.5], [336.0, 9689.0], [347.0, 11198.0], [346.0, 9684.0], [345.0, 11200.0], [344.0, 9548.5], [342.0, 9679.0], [340.0, 9686.0], [365.0, 11185.0], [366.0, 9670.0], [364.0, 10429.5], [355.0, 9405.0], [354.0, 9406.0], [353.0, 9935.0], [352.0, 9679.0], [362.0, 9671.0], [361.0, 9673.0], [360.0, 9673.0], [359.0, 11190.0], [358.0, 9675.0], [357.0, 9402.0], [356.0, 9933.0], [382.0, 9658.0], [383.0, 11172.0], [381.0, 9386.0], [380.0, 9919.0], [379.0, 9661.0], [378.0, 9387.0], [377.0, 9389.0], [376.0, 9662.0], [375.0, 9663.0], [368.0, 11184.0], [371.0, 9665.0], [369.0, 10426.0], [374.0, 11179.0], [373.0, 9662.0], [372.0, 9664.0], [387.0, 11171.0], [398.0, 9646.0], [397.0, 9774.5], [386.0, 9382.0], [385.0, 9383.0], [384.0, 11171.0], [395.0, 9906.0], [394.0, 9649.0], [393.0, 9642.0], [391.0, 9649.0], [390.0, 9651.0], [389.0, 11168.0], [388.0, 9912.0], [413.0, 11150.0], [415.0, 9760.5], [412.0, 9893.0], [401.0, 9643.0], [400.0, 10533.0], [411.0, 9894.0], [410.0, 11151.0], [409.0, 11154.0], [408.0, 9767.0], [406.0, 9895.0], [405.0, 9898.0], [404.0, 9814.0], [430.0, 9739.0], [428.0, 9869.0], [427.0, 9870.0], [426.0, 9871.0], [425.0, 9872.0], [424.0, 9704.0], [421.0, 9620.0], [420.0, 9880.0], [419.0, 9625.0], [418.0, 9627.0], [417.0, 9889.0], [416.0, 11148.0], [446.0, 9580.5], [444.0, 9842.0], [435.0, 9603.0], [434.0, 9861.0], [433.0, 11121.0], [432.0, 11125.5], [443.0, 11101.0], [442.0, 9855.5], [441.0, 9854.0], [440.0, 11113.0], [438.0, 9856.0], [437.0, 11115.0], [436.0, 11116.0], [451.0, 9804.0], [461.0, 9533.0], [462.0, 9789.0], [460.0, 9790.0], [459.0, 9793.0], [458.0, 9711.666666666666], [455.0, 9801.0], [454.0, 9803.5], [452.0, 9546.0], [450.0, 9579.0], [449.0, 10589.666666666666], [476.0, 9785.0], [478.0, 9777.0], [479.0, 9775.0], [477.0, 9698.666666666666], [475.0, 9527.0], [472.0, 9785.0], [471.0, 10351.25], [465.0, 9787.0], [464.0, 10291.0], [467.0, 9528.0], [466.0, 9530.0], [492.0, 9769.0], [494.0, 11023.0], [495.0, 9764.0], [493.0, 9764.0], [491.0, 9599.666666666666], [488.0, 9774.0], [487.0, 10107.0], [484.0, 9775.0], [483.0, 9516.0], [481.0, 9775.0], [499.0, 9503.0], [509.0, 9753.0], [508.0, 9753.0], [498.0, 9762.0], [497.0, 11020.0], [496.0, 9762.0], [507.0, 9626.5], [505.0, 9756.0], [504.0, 9758.0], [503.0, 9757.0], [502.0, 9501.0], [501.0, 9501.0], [500.0, 9502.0], [540.0, 9475.0], [542.0, 9732.0], [538.0, 9475.0], [534.0, 9735.0], [532.0, 9479.0], [530.0, 9485.0], [526.0, 9743.0], [524.0, 9487.0], [518.0, 9487.0], [514.0, 9493.0], [512.0, 9495.0], [568.0, 9708.0], [572.0, 9446.0], [560.0, 9584.0], [564.0, 9955.0], [574.0, 9703.0], [570.0, 10964.0], [558.0, 9716.0], [544.0, 9470.0], [546.0, 9726.0], [550.0, 10057.0], [556.0, 9459.0], [552.0, 9593.0], [600.0, 9679.0], [604.0, 9673.0], [592.0, 9688.0], [602.0, 9418.0], [576.0, 9697.0], [578.0, 9565.0], [582.0, 9436.0], [586.0, 10320.0], [584.0, 10191.5], [598.0, 9551.0], [596.0, 9422.0], [594.0, 9425.0], [634.0, 9384.0], [626.0, 9394.0], [624.0, 10916.0], [636.0, 9384.0], [632.0, 9387.0], [612.0, 9409.0], [610.0, 9541.0], [608.0, 10510.0], [622.0, 9404.0], [620.0, 9406.0], [618.0, 9404.0], [616.0, 9665.0], [630.0, 9394.0], [668.0, 7760.0], [670.0, 7758.0], [656.0, 10832.0], [660.0, 10194.0], [658.0, 9565.0], [666.0, 6931.0], [664.0, 8146.0], [646.0, 10257.0], [644.0, 10887.0], [642.0, 9631.0], [640.0, 9634.0], [654.0, 10833.0], [652.0, 10854.0], [650.0, 9622.0], [648.0, 9366.0], [662.0, 9017.5], [700.0, 7625.0], [696.0, 8203.0], [688.0, 8210.0], [692.0, 8206.5], [690.0, 9653.0], [702.0, 9586.0], [698.0, 8202.0], [672.0, 7755.0], [674.0, 7753.0], [676.0, 7122.0], [678.0, 7642.0], [686.0, 8210.0], [682.0, 7640.0], [680.0, 8215.0], [728.0, 8150.0], [724.0, 7876.0], [732.0, 8143.0], [730.0, 8871.0], [704.0, 7623.0], [706.0, 7623.0], [708.0, 8195.0], [710.0, 8191.0], [718.0, 7602.0], [716.0, 8181.0], [714.0, 8185.0], [712.0, 9576.0], [726.0, 8158.0], [722.0, 7880.0], [762.0, 6979.0], [764.0, 6976.0], [752.0, 5687.0], [754.0, 10047.0], [742.0, 9512.0], [740.0, 8130.0], [738.0, 7557.0], [736.0, 9030.25], [750.0, 8098.0], [748.0, 9489.0], [746.0, 9496.0], [758.0, 10045.0], [774.0, 8933.0], [796.0, 8985.0], [798.0, 10027.0], [792.0, 8661.333333333334], [772.0, 6972.0], [770.0, 6973.0], [768.0, 8995.0], [782.0, 8988.0], [780.0, 8989.0], [778.0, 8934.0], [824.0, 8906.0], [830.0, 10005.0], [816.0, 10014.0], [826.0, 9485.0], [802.0, 10025.0], [804.0, 8978.5], [806.0, 8973.0], [814.0, 10015.0], [812.0, 10015.0], [810.0, 8972.0], [820.0, 8965.0], [860.0, 8885.0], [850.0, 8948.0], [858.0, 7933.0], [856.0, 9989.0], [836.0, 8900.0], [834.0, 8476.333333333334], [844.0, 8896.0], [854.0, 6926.0], [864.0, 9465.0], [894.0, 8872.0], [892.0, 8929.0], [888.0, 6910.0], [886.0, 7484.0], [880.0, 6911.0], [878.0, 9977.0], [876.0, 8437.666666666666], [874.0, 8882.0], [872.0, 8440.333333333334], [920.0, 8891.5], [924.0, 9962.0], [896.0, 8870.0], [902.0, 7482.0], [910.0, 8867.0], [904.0, 7479.5], [918.0, 9968.0], [916.0, 8923.0], [912.0, 7479.0], [944.0, 7871.5], [958.0, 8152.5], [946.0, 9955.0], [932.0, 9960.0], [940.0, 7467.0], [938.0, 8309.5], [950.0, 7461.0], [984.0, 8779.0], [990.0, 9881.0], [976.0, 9886.0], [986.0, 9884.0], [960.0, 8840.0], [964.0, 8813.5], [962.0, 8786.0], [974.0, 9014.8], [970.0, 9885.0], [968.0, 8821.333333333334], [982.0, 7392.0], [980.0, 8779.0], [1018.0, 8102.5], [1022.0, 8787.5], [1008.0, 7383.0], [1020.0, 7372.0], [1016.0, 8827.0], [994.0, 8776.0], [996.0, 7389.0], [998.0, 9879.0], [1002.0, 8773.0], [1000.0, 8829.0], [1014.0, 7670.666666666667], [1010.0, 9336.5], [1032.0, 8792.0], [1084.0, 8737.0], [1064.0, 8036.5], [1080.0, 8739.0], [1024.0, 7369.0], [1052.0, 9822.0], [1048.0, 8778.0], [1044.0, 8782.0], [1040.0, 8728.0], [1068.0, 8696.0], [1060.0, 9805.0], [1056.0, 8717.0], [1144.0, 9667.0], [1148.0, 9666.0], [1128.0, 6640.0], [1120.0, 9173.0], [1124.0, 8611.5], [1140.0, 8588.0], [1096.0, 9776.0], [1092.0, 8731.0], [1112.0, 8690.0], [1104.0, 9771.0], [1132.0, 8590.0], [1208.0, 7112.0], [1204.0, 7115.0], [1196.0, 8581.0], [1188.0, 7138.0], [1184.0, 8528.0], [1164.0, 7169.0], [1160.0, 7170.0], [1156.0, 8620.0], [1152.0, 9666.0], [1264.0, 4119.0], [1276.0, 4103.0], [1272.0, 4197.666666666667], [1268.0, 4109.0], [1228.0, 5430.0], [1224.0, 2571.0], [1220.0, 4145.0], [1244.0, 123.0], [1236.0, 6466.0], [1232.0, 6468.0], [1256.0, 4119.0], [1252.0, 4392.5], [1328.0, 4071.0], [1336.0, 4335.0], [1316.0, 4347.0], [1320.0, 4075.0], [1340.0, 4061.0], [1332.0, 4066.5], [1284.0, 4188.333333333333], [1292.0, 4229.0], [1308.0, 4084.0], [1300.0, 4359.0], [1296.0, 3570.0], [1400.0, 3754.6666666666665], [1404.0, 4191.0], [1376.0, 3781.0], [1380.0, 3856.0], [1384.0, 3437.0], [1396.0, 3930.0], [1392.0, 3934.0], [1348.0, 4056.0], [1344.0, 4059.0], [1372.0, 4043.0], [1368.0, 4044.0], [1360.0, 3789.0], [1388.0, 4222.0], [1464.0, 3976.5], [1468.0, 3971.5], [1440.0, 3863.0], [1444.0, 4127.0], [1460.0, 3980.5], [1456.0, 3847.0], [1408.0, 3915.0], [1412.0, 3389.0], [1416.0, 4178.0], [1436.0, 3866.0], [1432.0, 3622.5], [1428.0, 4171.0], [1452.0, 3853.0], [1448.0, 4125.0], [1528.0, 1295.0], [1508.0, 1321.0], [1532.0, 1286.5], [1504.0, 1324.0], [1520.0, 1305.0], [1484.0, 1336.0], [1472.0, 3788.0], [1500.0, 1325.0], [1496.0, 1329.0], [1492.0, 1332.0], [1512.0, 1315.0], [1540.0, 21676.0], [1576.0, 11324.0], [1588.0, 6521.0], [1584.0, 6523.0], [1536.0, 1284.0], [1564.0, 20843.0], [1560.0, 6546.0], [1556.0, 6546.0], [1552.0, 21535.0], [1580.0, 6526.0], [1572.0, 6533.0], [1568.0, 11334.0], [1660.0, 5790.0], [1632.0, 7555.0], [1636.0, 10596.0], [1640.0, 9072.5], [1644.0, 9071.0], [1656.0, 5792.0], [1648.0, 10591.0], [1600.0, 6202.0], [1604.0, 10612.0], [1608.0, 9890.5], [1612.0, 5815.0], [1628.0, 7555.0], [1624.0, 7558.0], [1620.0, 5810.0], [1616.0, 8210.5], [1720.0, 5754.0], [1724.0, 6337.0], [1696.0, 7519.0], [1700.0, 5766.0], [1704.0, 6638.5], [1716.0, 10637.0], [1676.0, 6659.0], [1668.0, 10582.0], [1664.0, 7971.666666666667], [1692.0, 12173.0], [1684.0, 7528.0], [1680.0, 5781.0], [1788.0, 7454.0], [1784.0, 7463.0], [1760.0, 10519.0], [1764.0, 7905.666666666667], [1768.0, 6598.5], [1772.0, 10510.0], [1732.0, 10541.0], [1740.0, 10616.5], [1756.0, 7479.0], [1752.0, 9568.666666666666], [1748.0, 7484.0], [1744.0, 5735.0], [1804.0, 7443.0], [1840.0, 10609.0], [1836.0, 10576.333333333334], [1848.0, 5643.0], [1800.0, 10661.0], [1796.0, 8098.5], [1820.0, 6557.0], [1816.0, 8082.0], [1812.0, 7438.0], [1904.0, 7294.0], [1868.0, 10412.0], [1892.0, 7301.0], [1896.0, 6421.5], [1916.0, 7779.666666666667], [1864.0, 7370.0], [1860.0, 10428.0], [1856.0, 8990.5], [1880.0, 8831.0], [1876.0, 10530.0], [1872.0, 7361.0], [1972.0, 7345.5], [1980.0, 8297.0], [1952.0, 6182.0], [1956.0, 7830.0], [1960.0, 8307.0], [1968.0, 7824.0], [1924.0, 6415.5], [1948.0, 6184.0], [1944.0, 9234.0], [1940.0, 6193.0], [1936.0, 6196.0], [2032.0, 135919.0], [2020.0, 7715.0], [2028.0, 7058.0], [2036.0, 71963.0], [1996.0, 72113.5], [1988.0, 7078.0], [1984.0, 8295.0], [2012.0, 7806.0], [2008.0, 75824.0], [2004.0, 7808.0], [2160.0, 134931.0], [2120.0, 8165.0], [2112.0, 7832.0], [2136.0, 6879.333333333333], [2168.0, 134949.0], [2152.0, 7288.0], [2144.0, 135786.0], [2048.0, 7060.0], [2104.0, 72009.5], [2096.0, 135831.0], [2288.0, 6403.5], [2296.0, 11849.0], [2240.0, 134714.0], [2256.0, 134706.0], [2264.0, 7023.0], [2192.0, 72019.5], [2176.0, 134944.0], [2232.0, 49622.666666666664], [2224.0, 7195.0], [2216.0, 10933.0], [2208.0, 134897.0], [2416.0, 6356.0], [2368.0, 6463.5], [2376.0, 9040.5], [2424.0, 6256.0], [2408.0, 14038.0], [2304.0, 6495.0], [2328.0, 8223.0], [2360.0, 13303.666666666666], [2352.0, 9968.333333333334], [2336.0, 11835.0], [2504.0, 6089.0], [2432.0, 6365.0], [2456.0, 6319.0], [2480.0, 9483.75], [2464.0, 13892.0], [2640.0, 6063.8], [2648.0, 6160.5], [2656.0, 6126.666666666667], [2808.0, 94.0], [2800.0, 94.0], [2776.0, 96.5], [2792.0, 94.4], [2784.0, 96.0], [2728.0, 3945.0], [2720.0, 75.5], [2928.0, 68.0], [2880.0, 118.25], [2920.0, 88.0], [2840.0, 120.0], [2872.0, 119.33333333333334], [2856.0, 120.0], [2848.0, 121.0], [2992.0, 176.33333333333331], [3000.0, 8691.695246020428], [2944.0, 129.71428571428572], [2952.0, 117.0], [2968.0, 170.2], [2984.0, 126.33333333333333], [2161.0, 134953.0], [2153.0, 7290.0], [2113.0, 135837.0], [2121.0, 135834.0], [2129.0, 135828.0], [2137.0, 135812.0], [2169.0, 134927.0], [2145.0, 135784.0], [2057.0, 71780.5], [2065.0, 135886.0], [2105.0, 6260.0], [2097.0, 8183.0], [2089.0, 8018.5], [2081.0, 135839.33333333334], [2193.0, 9136.0], [2273.0, 6407.5], [2281.0, 8222.333333333334], [2241.0, 134735.0], [2249.0, 70881.0], [2297.0, 11849.0], [2185.0, 12215.0], [2177.0, 134940.0], [2233.0, 134722.0], [2217.0, 14646.0], [2209.0, 6657.0], [2409.0, 11805.0], [2417.0, 8348.5], [2369.0, 14047.0], [2377.0, 6269.0], [2305.0, 11846.0], [2361.0, 9139.5], [2345.0, 10257.0], [2337.0, 11834.0], [2497.0, 6285.0], [2505.0, 11623.0], [2441.0, 6154.5], [2457.0, 6127.0], [2481.0, 6298.0], [2473.0, 8981.0], [2465.0, 13891.0], [2665.0, 13364.66037735849], [2809.0, 93.83333333333331], [2801.0, 95.0], [2769.0, 98.0], [2777.0, 98.0], [2793.0, 94.83333333333333], [2729.0, 7833.5], [2721.0, 75.0], [2913.0, 89.0], [2865.0, 119.66666666666667], [2849.0, 120.90909090909089], [2953.0, 117.0], [2961.0, 114.0], [2969.0, 184.0], [2993.0, 103.0], [2985.0, 97.0], [2977.0, 99.0], [1073.0, 7789.0], [1057.0, 8717.0], [1081.0, 8738.0], [1077.0, 9268.0], [1033.0, 6772.0], [1029.0, 8278.333333333334], [1025.0, 8752.0], [1053.0, 8776.0], [1049.0, 6759.0], [1045.0, 8724.0], [1041.0, 8784.0], [1069.0, 8753.0], [1141.0, 8584.0], [1125.0, 8610.0], [1117.0, 9762.0], [1093.0, 8673.0], [1089.0, 8733.0], [1097.0, 8729.0], [1101.0, 7716.0], [1109.0, 8694.0], [1105.0, 7685.5], [1129.0, 8654.0], [1121.0, 8621.0], [1209.0, 7111.0], [1185.0, 9631.0], [1189.0, 8583.0], [1193.0, 8121.0], [1213.0, 9077.5], [1205.0, 9604.0], [1201.0, 7116.5], [1165.0, 7169.0], [1173.0, 8827.333333333334], [1169.0, 8556.0], [1197.0, 7126.0], [1273.0, 4376.0], [1277.0, 3581.0], [1249.0, 4123.0], [1253.0, 4119.0], [1257.0, 4118.0], [1265.0, 4388.0], [1229.0, 6475.0], [1225.0, 2570.0], [1221.0, 4144.0], [1217.0, 9025.0], [1245.0, 122.0], [1241.0, 5936.5], [1237.0, 6465.0], [1233.0, 6469.0], [1261.0, 4254.0], [1333.0, 4064.0], [1341.0, 4059.0], [1313.0, 4351.0], [1317.0, 4077.0], [1321.0, 3950.0], [1337.0, 4063.0], [1329.0, 4340.0], [1289.0, 3834.0], [1285.0, 3576.0], [1281.0, 3974.5], [1305.0, 4084.0], [1301.0, 4087.0], [1297.0, 4090.0], [1325.0, 4071.5], [1393.0, 3932.0], [1405.0, 3918.0], [1377.0, 4033.0], [1381.0, 4028.0], [1401.0, 4198.0], [1373.0, 4042.5], [1345.0, 4058.0], [1349.0, 4056.0], [1353.0, 4056.0], [1365.0, 4182.5], [1361.0, 4048.0], [1389.0, 3430.0], [1385.0, 3957.0], [1457.0, 3846.0], [1469.0, 3835.0], [1465.0, 4109.0], [1461.0, 3843.0], [1437.0, 3867.0], [1409.0, 3912.0], [1413.0, 3910.0], [1421.0, 3646.25], [1417.0, 3387.0], [1433.0, 3361.0], [1429.0, 3684.333333333333], [1453.0, 4123.0], [1441.0, 3863.5], [1529.0, 1295.0], [1533.0, 1286.0], [1509.0, 1320.0], [1505.0, 1323.0], [1513.0, 21707.0], [1525.0, 1298.0], [1521.0, 1305.0], [1477.0, 3783.0], [1473.0, 3787.0], [1501.0, 1326.0], [1489.0, 1334.5], [1541.0, 1274.0], [1597.0, 6235.5], [1589.0, 6521.0], [1537.0, 1283.5], [1545.0, 1271.0], [1549.0, 7969.0], [1561.0, 11338.0], [1557.0, 11340.0], [1553.0, 20851.0], [1577.0, 20831.0], [1573.0, 6532.0], [1569.0, 6537.0], [1649.0, 7546.0], [1653.0, 8276.0], [1633.0, 5805.0], [1637.0, 10596.0], [1641.0, 10594.0], [1645.0, 10592.0], [1601.0, 6177.0], [1605.0, 10779.0], [1629.0, 7555.0], [1625.0, 7558.0], [1621.0, 5810.0], [1725.0, 7501.0], [1697.0, 7519.0], [1701.0, 7514.0], [1705.0, 7512.0], [1709.0, 6344.333333333333], [1713.0, 10723.0], [1677.0, 5784.0], [1673.0, 8182.0], [1665.0, 5789.0], [1693.0, 10569.0], [1689.0, 6652.0], [1681.0, 7530.0], [1785.0, 5713.0], [1765.0, 7474.0], [1769.0, 7473.0], [1773.0, 7465.0], [1789.0, 10667.0], [1777.0, 7953.0], [1729.0, 10541.0], [1733.0, 10539.0], [1737.0, 10537.5], [1741.0, 7486.0], [1757.0, 7478.0], [1745.0, 6609.0], [1849.0, 10604.0], [1829.0, 6549.0], [1833.0, 8944.5], [1853.0, 6510.0], [1841.0, 5646.0], [1805.0, 7442.0], [1801.0, 5699.0], [1797.0, 7449.0], [1793.0, 8100.0], [1821.0, 5682.0], [1817.0, 10648.0], [1813.0, 10483.0], [1809.0, 9046.5], [1913.0, 10336.0], [1893.0, 10512.0], [1917.0, 7291.0], [1897.0, 7296.0], [1901.0, 7726.333333333333], [1869.0, 10410.0], [1865.0, 7369.0], [1861.0, 5625.0], [1857.0, 7383.5], [1885.0, 6431.5], [1881.0, 5558.0], [1877.0, 7316.0], [1873.0, 10547.0], [1977.0, 72124.0], [1981.0, 135945.0], [1953.0, 7975.0], [1957.0, 15736.0], [1961.0, 7973.0], [1965.0, 8305.5], [1973.0, 135948.0], [1969.0, 135951.0], [1933.0, 9469.142857142857], [1925.0, 7195.333333333333], [1949.0, 6184.0], [1941.0, 9406.0], [1937.0, 9240.0], [2041.0, 8262.5], [2017.0, 75832.5], [2021.0, 8280.0], [2025.0, 135948.0], [2029.0, 6358.0], [2045.0, 7653.0], [2037.0, 8271.0], [1997.0, 7075.0], [1993.0, 135940.0], [1989.0, 7078.0], [1985.0, 135943.0], [2013.0, 75821.5], [2009.0, 8286.0], [2005.0, 92755.0], [2154.0, 7290.0], [2162.0, 7284.0], [2170.0, 7277.0], [2114.0, 15595.0], [2130.0, 11871.5], [2138.0, 8143.0], [2146.0, 135804.0], [2074.0, 93318.33333333333], [2066.0, 8217.0], [2058.0, 135887.0], [2050.0, 71851.5], [2106.0, 15598.0], [2098.0, 6268.0], [2202.0, 7000.0], [2250.0, 7046.0], [2242.0, 134735.0], [2258.0, 10461.0], [2194.0, 14673.0], [2186.0, 7263.0], [2234.0, 14499.0], [2226.0, 71018.5], [2218.0, 134886.0], [2418.0, 11803.0], [2426.0, 6373.0], [2378.0, 6461.0], [2394.0, 11807.0], [2402.0, 10022.333333333334], [2306.0, 6301.0], [2314.0, 6294.0], [2322.0, 9161.5], [2362.0, 8973.8], [2346.0, 6466.0], [2338.0, 11817.0], [2506.0, 6269.0], [2498.0, 6282.0], [2434.0, 8942.0], [2450.0, 8791.0], [2490.0, 8270.125], [2474.0, 6306.0], [2642.0, 6065.0], [2666.0, 8439.359375000002], [2650.0, 6061.0], [2810.0, 94.0], [2802.0, 94.83333333333333], [2786.0, 96.0], [2738.0, 8440.0], [2730.0, 9488.0], [2930.0, 66.5], [2882.0, 118.5], [2890.0, 116.0], [2906.0, 102.28571428571429], [2938.0, 107.9], [2914.0, 89.0], [2874.0, 119.0], [2866.0, 120.0], [2858.0, 120.0], [2962.0, 114.0], [2994.0, 179.53333333333333], [2978.0, 142.0], [2075.0, 135881.0], [2171.0, 9160.0], [2163.0, 7283.0], [2147.0, 135795.0], [2051.0, 8241.0], [2107.0, 135841.0], [2099.0, 135829.0], [2091.0, 135832.5], [2083.0, 135838.0], [2291.0, 6500.0], [2299.0, 6399.5], [2243.0, 7063.0], [2251.0, 134710.0], [2267.0, 91943.66666666667], [2283.0, 6502.0], [2275.0, 69204.0], [2203.0, 71062.5], [2195.0, 7246.0], [2187.0, 7263.0], [2235.0, 14499.0], [2227.0, 7193.0], [2219.0, 7216.0], [2371.0, 6463.333333333333], [2427.0, 8952.5], [2379.0, 6461.0], [2395.0, 6360.0], [2419.0, 14035.0], [2403.0, 6263.0], [2355.0, 9141.0], [2499.0, 6089.0], [2435.0, 6170.0], [2443.0, 6337.0], [2451.0, 6135.0], [2467.0, 6210.0], [2667.0, 10041.5], [2659.0, 7544.25], [2651.0, 6064.0], [2771.0, 98.33333333333333], [2811.0, 92.0], [2803.0, 94.5], [2787.0, 95.5], [2707.0, 76.0], [2723.0, 75.33333333333333], [2939.0, 131.0], [2891.0, 111.0], [2923.0, 87.4], [2843.0, 120.0], [2867.0, 119.83333333333333], [2947.0, 123.66666666666667], [2987.0, 129.09523809523807], [543.0, 10986.0], [531.0, 10995.0], [541.0, 10066.0], [537.0, 9732.0], [535.0, 9477.0], [533.0, 9477.0], [529.0, 9743.0], [527.0, 10371.5], [515.0, 9752.0], [513.0, 10172.0], [519.0, 9745.0], [517.0, 9490.0], [525.0, 9744.0], [523.0, 11001.0], [521.0, 9745.0], [571.0, 10963.0], [575.0, 10960.0], [561.0, 10967.0], [573.0, 9446.0], [569.0, 9448.0], [545.0, 9469.0], [547.0, 9465.0], [557.0, 10975.0], [555.0, 10219.0], [553.0, 9461.0], [567.0, 10207.0], [565.0, 9708.0], [601.0, 10934.0], [605.0, 10931.0], [593.0, 9686.0], [603.0, 9674.0], [591.0, 9560.0], [579.0, 9693.0], [581.0, 9564.5], [589.0, 9559.5], [587.0, 9687.0], [595.0, 9683.0], [633.0, 9645.0], [637.0, 10901.0], [639.0, 10139.0], [629.0, 10280.5], [627.0, 9653.0], [635.0, 9643.0], [615.0, 10000.666666666666], [611.0, 10926.0], [623.0, 9663.0], [621.0, 9662.0], [619.0, 10922.0], [617.0, 9666.0], [631.0, 10906.0], [665.0, 6933.0], [671.0, 7756.0], [657.0, 9567.0], [669.0, 7759.0], [647.0, 10885.0], [643.0, 9631.0], [641.0, 10893.0], [655.0, 10832.0], [653.0, 9595.0], [651.0, 9619.0], [649.0, 9625.0], [663.0, 8148.0], [699.0, 8200.0], [703.0, 7624.0], [689.0, 7634.0], [701.0, 9588.0], [697.0, 9591.0], [687.0, 7637.0], [673.0, 7755.0], [677.0, 7751.0], [679.0, 8216.0], [685.0, 7924.0], [683.0, 8213.0], [681.0, 8215.0], [695.0, 7917.0], [693.0, 8207.0], [705.0, 7622.0], [731.0, 9536.0], [719.0, 8176.0], [707.0, 8196.0], [709.0, 9580.0], [711.0, 9579.0], [717.0, 9566.0], [715.0, 8182.0], [713.0, 8187.0], [727.0, 8156.0], [725.0, 8159.0], [721.0, 7593.0], [763.0, 7553.0], [755.0, 8943.0], [767.0, 8994.666666666666], [753.0, 5686.0], [761.0, 9521.5], [743.0, 8116.0], [741.0, 9516.0], [739.0, 8130.0], [737.0, 8132.0], [751.0, 8098.0], [749.0, 9489.0], [747.0, 8104.0], [745.0, 9357.5], [759.0, 10046.0], [757.0, 8945.0], [793.0, 10030.0], [775.0, 8934.0], [799.0, 8979.0], [797.0, 8984.0], [795.0, 8985.0], [773.0, 8992.0], [771.0, 10038.0], [769.0, 8994.0], [783.0, 8988.0], [781.0, 8988.0], [779.0, 10034.0], [777.0, 8990.0], [789.0, 8626.25], [785.0, 8986.5], [827.0, 7516.0], [831.0, 8902.0], [817.0, 8968.0], [829.0, 6940.5], [815.0, 8968.0], [801.0, 9502.5], [805.0, 6955.0], [807.0, 7527.0], [813.0, 8912.0], [811.0, 10016.0], [823.0, 9487.5], [821.0, 8964.0], [819.0, 9488.0], [859.0, 8886.0], [851.0, 8947.0], [863.0, 8219.0], [849.0, 8924.0], [839.0, 8435.0], [835.0, 8900.0], [847.0, 8923.5], [845.0, 7220.0], [843.0, 7508.0], [841.0, 8203.0], [855.0, 9991.0], [853.0, 7214.5], [889.0, 8843.166666666666], [895.0, 7830.5], [869.0, 9434.5], [867.0, 8190.5], [865.0, 8885.0], [883.0, 8873.0], [879.0, 8932.0], [877.0, 9980.0], [923.0, 9411.0], [915.0, 8866.5], [921.0, 8862.0], [911.0, 8866.0], [897.0, 7484.0], [901.0, 8551.75], [907.0, 9420.0], [917.0, 8922.0], [913.0, 7885.5], [957.0, 9949.0], [947.0, 7464.0], [959.0, 8901.0], [945.0, 8911.0], [955.0, 8182.5], [953.0, 7460.0], [935.0, 7469.5], [931.0, 8164.5], [929.0, 7633.4], [943.0, 8853.0], [941.0, 6891.0], [939.0, 7467.0], [951.0, 9951.0], [949.0, 9953.0], [989.0, 8084.5], [991.0, 9880.0], [979.0, 8639.0], [977.0, 8781.0], [987.0, 7798.0], [975.0, 7394.0], [961.0, 8809.0], [971.0, 8840.0], [983.0, 6817.0], [981.0, 8838.0], [1019.0, 6800.0], [1023.0, 8816.0], [1007.0, 8484.0], [993.0, 9357.5], [995.0, 8777.0], [997.0, 8775.0], [1001.0, 8772.0], [1015.0, 7381.0], [1011.0, 9873.0], [1034.0, 8734.0], [1038.0, 8587.5], [1030.0, 6778.0], [1026.0, 6779.0], [1054.0, 8718.0], [1050.0, 7331.0], [1046.0, 8724.0], [1070.0, 8695.0], [1066.0, 9282.0], [1062.0, 9253.0], [1058.0, 7327.0], [1102.0, 8727.0], [1150.0, 8620.0], [1122.0, 8678.0], [1138.0, 7767.4], [1098.0, 8671.0], [1094.0, 7978.5], [1090.0, 9777.0], [1118.0, 8196.333333333334], [1114.0, 9240.5], [1110.0, 8721.0], [1106.0, 7277.0], [1134.0, 8589.0], [1130.0, 8595.0], [1198.0, 9608.0], [1178.0, 7951.8], [1170.0, 9659.0], [1162.0, 9662.0], [1266.0, 4112.0], [1278.0, 4373.0], [1250.0, 4121.333333333333], [1274.0, 4103.0], [1230.0, 6474.0], [1226.0, 5430.0], [1222.0, 3134.0], [1218.0, 4658.0], [1246.0, 4393.0], [1242.0, 1137.0], [1238.0, 5418.0], [1234.0, 5422.0], [1338.0, 4062.0], [1342.0, 3538.0], [1314.0, 4351.0], [1318.0, 4346.0], [1334.0, 4337.0], [1330.0, 4067.0], [1310.0, 4082.0], [1290.0, 4094.0], [1286.0, 4095.0], [1294.0, 4092.5], [1306.0, 3822.5], [1298.0, 3568.0], [1326.0, 4071.0], [1322.0, 4075.0], [1394.0, 4202.0], [1406.0, 4187.0], [1382.0, 4237.0], [1386.0, 3956.0], [1402.0, 4192.0], [1354.0, 3970.6666666666665], [1346.0, 4059.0], [1374.0, 4042.0], [1370.0, 3521.0], [1366.0, 3523.0], [1362.0, 3525.0], [1390.0, 4222.0], [1462.0, 4115.0], [1466.0, 4107.0], [1442.0, 4129.0], [1446.0, 3990.5], [1438.0, 4137.0], [1410.0, 4183.0], [1422.0, 4171.0], [1430.0, 3377.0], [1454.0, 4123.0], [1450.0, 3944.0], [1486.0, 1335.5], [1522.0, 1304.0], [1530.0, 1295.0], [1506.0, 1321.0], [1482.0, 1338.6666666666667], [1478.0, 4054.0], [1474.0, 3783.0], [1502.0, 1325.0], [1498.0, 1328.0], [1494.0, 1330.0], [1490.0, 1333.0], [1518.0, 1310.3333333333333], [1514.0, 1312.0], [1598.0, 6236.0], [1582.0, 8921.5], [1586.0, 6522.5], [1546.0, 1264.0], [1566.0, 6540.0], [1562.0, 6543.0], [1554.0, 6549.0], [1578.0, 6529.0], [1574.0, 20834.0], [1570.0, 6535.0], [1654.0, 7544.0], [1658.0, 10586.0], [1638.0, 7551.0], [1662.0, 10585.0], [1642.0, 10762.0], [1646.0, 5799.0], [1650.0, 5797.0], [1602.0, 6175.0], [1606.0, 7568.0], [1610.0, 8213.5], [1614.0, 7564.0], [1630.0, 10599.0], [1622.0, 7559.0], [1618.0, 6686.0], [1718.0, 5754.5], [1698.0, 7517.0], [1702.0, 5766.0], [1710.0, 10554.0], [1726.0, 5750.0], [1714.0, 8523.333333333334], [1678.0, 5782.0], [1674.0, 7534.0], [1670.0, 6662.0], [1666.0, 7538.0], [1694.0, 10568.0], [1786.0, 10504.0], [1766.0, 7474.0], [1770.0, 7468.0], [1790.0, 7452.0], [1782.0, 10677.0], [1734.0, 5746.0], [1738.0, 5739.0], [1758.0, 12125.0], [1754.0, 9088.5], [1746.0, 9090.0], [1846.0, 5644.0], [1826.0, 6843.666666666667], [1838.0, 7415.5], [1850.0, 10599.0], [1842.0, 10607.0], [1806.0, 7440.0], [1802.0, 10577.5], [1798.0, 7448.0], [1822.0, 7429.0], [1818.0, 10645.0], [1814.0, 5686.0], [1810.0, 7439.0], [1906.0, 8899.5], [1914.0, 5543.0], [1890.0, 7153.0], [1898.0, 7296.0], [1902.0, 7294.0], [1910.0, 10506.0], [1866.0, 5621.0], [1862.0, 7373.0], [1886.0, 10349.0], [1882.0, 5558.0], [1878.0, 5567.0], [1874.0, 10540.0], [1982.0, 135966.0], [1954.0, 7831.0], [1958.0, 6395.0], [1962.0, 135954.0], [1966.0, 8304.0], [1978.0, 135969.0], [1970.0, 15729.0], [1922.0, 7139.333333333333], [1946.0, 6188.5], [1942.0, 10839.0], [1938.0, 9409.0], [2022.0, 15705.0], [2018.0, 8284.0], [2026.0, 71934.5], [2030.0, 135920.0], [2038.0, 135935.0], [1998.0, 135937.0], [2014.0, 135932.0], [2010.0, 7537.333333333333], [2172.0, 6710.0], [2116.0, 71044.0], [2132.0, 15584.0], [2140.0, 135811.0], [2156.0, 7287.0], [2148.0, 135793.0], [2076.0, 8195.0], [2068.0, 7880.0], [2060.0, 7760.0], [2108.0, 135818.0], [2100.0, 8176.0], [2092.0, 8186.0], [2084.0, 7711.0], [2204.0, 7232.0], [2244.0, 7046.0], [2252.0, 7040.0], [2260.0, 134698.0], [2292.0, 8155.333333333333], [2188.0, 134905.0], [2180.0, 134937.0], [2236.0, 134742.0], [2228.0, 134840.0], [2372.0, 6463.0], [2420.0, 11803.0], [2388.0, 10769.0], [2380.0, 6459.0], [2412.0, 7694.5], [2404.0, 11806.0], [2356.0, 9140.0], [2500.0, 6283.0], [2460.0, 6126.0], [2508.0, 6076.0], [2436.0, 6170.0], [2444.0, 6142.0], [2452.0, 6128.0], [2492.0, 11352.333333333334], [2476.0, 8883.5], [2668.0, 7250.0], [2644.0, 6257.0], [2772.0, 98.0], [2788.0, 96.0], [2724.0, 74.0], [2940.0, 132.0], [2932.0, 52.5], [2892.0, 111.0], [2876.0, 118.0], [2844.0, 121.0], [2860.0, 120.0], [2852.0, 120.0], [2948.0, 123.0], [2956.0, 117.0], [2964.0, 114.0], [2988.0, 91.5], [2980.0, 98.0], [2149.0, 7289.0], [2141.0, 135800.0], [2165.0, 134951.0], [2157.0, 71121.5], [2053.0, 15667.0], [2069.0, 72048.5], [2077.0, 8196.0], [2101.0, 8176.0], [2085.0, 71406.0], [2293.0, 6305.0], [2261.0, 14452.0], [2269.0, 70853.0], [2301.0, 6305.0], [2285.0, 6308.0], [2197.0, 7244.0], [2189.0, 7257.0], [2181.0, 94856.0], [2237.0, 134737.0], [2229.0, 7175.0], [2221.0, 134873.5], [2373.0, 14047.0], [2429.0, 6180.5], [2389.0, 6393.333333333334], [2405.0, 11805.0], [2309.0, 6488.0], [2325.0, 11995.0], [2341.0, 14050.0], [2453.0, 6127.0], [2461.0, 6124.0], [2493.0, 13867.0], [2653.0, 6062.0], [2813.0, 86.0], [2765.0, 99.0], [2773.0, 98.0], [2709.0, 76.0], [2733.0, 5149.333333333333], [2725.0, 4145.0], [2925.0, 69.0], [2941.0, 131.0], [2885.0, 117.0], [2893.0, 110.0], [2909.0, 89.0], [2917.0, 88.0], [2837.0, 122.5], [2845.0, 120.0], [2869.0, 120.0], [2861.0, 120.0], [2957.0, 116.0], [2981.0, 127.33333333333333], [1075.0, 8694.0], [1083.0, 8015.5], [1087.0, 9043.333333333334], [1059.0, 8703.0], [1079.0, 7993.0], [1039.0, 8786.0], [1035.0, 7343.0], [1031.0, 8735.0], [1051.0, 8718.0], [1047.0, 8722.0], [1043.0, 7773.0], [1067.0, 8756.0], [1147.0, 7176.0], [1151.0, 8620.0], [1143.0, 8432.0], [1095.0, 8730.0], [1099.0, 9772.0], [1107.0, 8722.0], [1131.0, 8647.0], [1127.0, 7944.5], [1211.0, 8354.5], [1215.0, 8515.5], [1187.0, 7833.5], [1195.0, 7137.5], [1207.0, 9604.0], [1203.0, 9607.0], [1183.0, 8881.333333333334], [1159.0, 8466.0], [1155.0, 8005.333333333333], [1167.0, 8613.0], [1171.0, 9659.0], [1199.0, 7118.0], [1271.0, 4106.0], [1267.0, 3586.0], [1279.0, 4101.0], [1255.0, 4120.0], [1259.0, 4253.5], [1275.0, 4375.0], [1231.0, 5370.0], [1223.0, 3132.0], [1219.0, 4657.0], [1243.0, 1135.0], [1239.0, 5415.0], [1235.0, 5421.0], [1263.0, 4118.5], [1339.0, 4332.0], [1343.0, 4330.0], [1315.0, 4349.0], [1323.0, 4344.0], [1335.0, 4064.0], [1287.0, 4367.0], [1311.0, 4081.0], [1307.0, 4355.0], [1303.0, 4086.5], [1299.0, 4089.0], [1327.0, 4070.0], [1399.0, 4200.0], [1407.0, 3393.0], [1383.0, 3962.0], [1403.0, 3919.0], [1347.0, 4328.0], [1351.0, 4056.0], [1355.0, 4053.0], [1371.0, 4042.0], [1367.0, 4043.0], [1363.0, 3786.0], [1391.0, 4223.0], [1387.0, 3956.0], [1459.0, 4118.0], [1471.0, 3949.0], [1411.0, 4182.0], [1415.0, 3909.0], [1435.0, 4017.5], [1455.0, 3849.0], [1443.0, 3856.0], [1523.0, 1302.0], [1535.0, 1284.0], [1511.0, 1320.0], [1527.0, 1296.0], [1487.0, 1336.0], [1483.0, 1338.0], [1479.0, 4049.0], [1475.0, 4053.0], [1503.0, 1324.0], [1499.0, 1327.0], [1495.0, 1330.0], [1491.0, 1333.0], [1519.0, 21701.0], [1515.0, 1312.0], [1539.0, 11480.0], [1587.0, 6522.0], [1599.0, 6209.0], [1595.0, 9697.833333333334], [1583.0, 20826.0], [1567.0, 11335.0], [1543.0, 11469.5], [1551.0, 1142.0], [1563.0, 6543.0], [1559.0, 6545.0], [1555.0, 6547.0], [1579.0, 6526.0], [1575.0, 11325.0], [1571.0, 6535.0], [1655.0, 5794.0], [1651.0, 7545.0], [1635.0, 6678.5], [1647.0, 7547.0], [1659.0, 7541.0], [1631.0, 7555.0], [1603.0, 6167.0], [1611.0, 10608.0], [1615.0, 7563.0], [1627.0, 6683.0], [1623.0, 7559.0], [1619.0, 10605.0], [1719.0, 7505.0], [1699.0, 7517.0], [1727.0, 5747.0], [1723.0, 7503.0], [1679.0, 5781.0], [1671.0, 7534.0], [1695.0, 7522.0], [1691.0, 5776.5], [1687.0, 8542.333333333334], [1683.0, 9052.0], [1787.0, 5706.0], [1791.0, 7451.0], [1771.0, 7467.0], [1775.0, 7466.0], [1783.0, 10564.666666666666], [1779.0, 6590.5], [1759.0, 10522.0], [1731.0, 8227.5], [1735.0, 10538.0], [1755.0, 10525.0], [1751.0, 5733.0], [1843.0, 7394.0], [1855.0, 10428.0], [1827.0, 10469.0], [1831.0, 6549.5], [1839.0, 10609.0], [1847.0, 6810.0], [1807.0, 5692.0], [1803.0, 5695.0], [1799.0, 5700.0], [1823.0, 7428.0], [1811.0, 7439.0], [1911.0, 8306.333333333334], [1891.0, 7303.0], [1895.0, 5548.0], [1903.0, 7293.0], [1915.0, 5543.0], [1871.0, 6487.5], [1867.0, 10413.0], [1863.0, 10416.0], [1859.0, 6508.0], [1887.0, 5556.0], [1883.0, 5557.0], [1875.0, 10540.0], [1979.0, 15725.0], [1959.0, 7829.0], [1983.0, 135943.0], [1955.0, 7831.0], [1963.0, 135976.0], [1967.0, 6390.0], [1975.0, 7849.5], [1935.0, 7967.0], [1927.0, 5541.0], [1951.0, 5309.0], [1947.0, 6187.0], [1943.0, 9403.0], [1939.0, 9239.0], [2039.0, 6350.0], [2043.0, 7136.0], [2047.0, 8257.0], [2019.0, 7949.0], [2027.0, 7062.0], [2031.0, 135920.0], [1995.0, 7724.0], [1991.0, 72127.5], [1987.0, 7687.0], [2015.0, 8285.0], [2003.0, 75835.5], [2166.0, 134929.0], [2118.0, 7997.5], [2126.0, 84424.2], [2174.0, 70827.0], [2158.0, 134934.0], [2078.0, 8193.0], [2062.0, 7913.6], [2102.0, 135822.0], [2094.0, 72017.5], [2294.0, 6306.0], [2246.0, 70880.5], [2254.0, 134698.0], [2262.0, 134695.0], [2270.0, 7012.0], [2302.0, 6303.0], [2206.0, 7229.0], [2190.0, 7257.0], [2182.0, 7265.0], [2238.0, 134736.0], [2222.0, 134857.0], [2406.0, 11805.0], [2422.0, 6259.0], [2374.0, 11453.666666666666], [2398.0, 14039.333333333334], [2366.0, 10159.0], [2326.0, 7216.666666666667], [2334.0, 8632.5], [2358.0, 11815.0], [2454.0, 11671.0], [2438.0, 9037.0], [2502.0, 6282.0], [2510.0, 10580.0], [2494.0, 13867.0], [2462.0, 6311.0], [2470.0, 9873.333333333334], [2638.0, 6064.0], [2654.0, 6159.0], [2806.0, 94.33333333333333], [2766.0, 99.0], [2782.0, 97.0], [2710.0, 76.33333333333333], [2726.0, 4142.0], [2934.0, 26.5], [2942.0, 130.8], [2926.0, 68.5], [2846.0, 120.5], [2862.0, 120.5], [2958.0, 115.0], [2950.0, 122.0], [2966.0, 113.0], [2990.0, 110.63636363636364], [2982.0, 150.0], [2167.0, 7280.0], [2151.0, 74827.0], [2175.0, 7276.0], [2127.0, 135810.0], [2135.0, 71022.5], [2143.0, 71017.0], [2159.0, 7286.0], [2111.0, 95750.0], [2055.0, 135909.0], [2063.0, 6307.0], [2071.0, 71754.5], [2087.0, 72013.0], [2303.0, 6304.5], [2295.0, 6498.0], [2247.0, 134714.0], [2255.0, 134706.0], [2263.0, 14451.0], [2271.0, 134679.0], [2287.0, 6502.0], [2279.0, 6375.0], [2207.0, 74775.5], [2199.0, 92343.0], [2239.0, 134735.0], [2223.0, 134857.0], [2215.0, 58662.0], [2431.0, 6267.5], [2423.0, 11801.0], [2311.0, 9065.5], [2335.0, 8203.666666666666], [2359.0, 6464.0], [2503.0, 8957.5], [2447.0, 9012.0], [2511.0, 13850.0], [2439.0, 6155.0], [2455.0, 6321.0], [2463.0, 6310.0], [2471.0, 11656.0], [2791.0, 95.0], [2711.0, 76.0], [2735.0, 10598.5], [2887.0, 116.0], [2927.0, 68.0], [2903.0, 101.75], [2895.0, 111.0], [2919.0, 88.5], [2871.0, 119.0], [2863.0, 120.0], [2951.0, 117.0], [2959.0, 114.0], [2967.0, 112.0], [2991.0, 136.8], [2983.0, 142.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2889.0033906694744, 9259.378888751351]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 268.8, "minX": 1.68289752E12, "maxY": 117969.46666666666, "series": [{"data": [[1.68289776E12, 102843.18333333333], [1.68289794E12, 384.2], [1.68289764E12, 117969.46666666666], [1.68289782E12, 36926.73333333333], [1.68289752E12, 42004.25], [1.6828977E12, 91060.23333333334], [1.68289788E12, 1446.0166666666667], [1.68289758E12, 84668.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68289776E12, 72727.2], [1.68289794E12, 268.8], [1.68289764E12, 82866.0], [1.68289782E12, 28526.4], [1.68289752E12, 30727.2], [1.6828977E12, 63873.6], [1.68289788E12, 991.2], [1.68289758E12, 58413.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68289794E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4007.883482377677, "minX": 1.68289752E12, "maxY": 100078.5625, "series": [{"data": [[1.68289776E12, 4843.054920964584], [1.68289794E12, 100078.5625], [1.68289764E12, 13202.638450647246], [1.68289782E12, 11909.751766784477], [1.68289752E12, 6877.173318753412], [1.6828977E12, 4007.883482377677], [1.68289788E12, 70175.16101694918], [1.68289758E12, 13354.361261005433]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68289794E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4007.8701998947836, "minX": 1.68289752E12, "maxY": 100078.5625, "series": [{"data": [[1.68289776E12, 4745.141686858181], [1.68289794E12, 100078.5625], [1.68289764E12, 12959.915554207117], [1.68289782E12, 11909.74499411068], [1.68289752E12, 6877.150082012026], [1.6828977E12, 4007.8701998947836], [1.68289788E12, 70175.15254237287], [1.68289758E12, 12596.889236012481]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68289794E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68289752E12, "maxY": 5742.3922936893, "series": [{"data": [[1.68289776E12, 289.88173531787254], [1.68289794E12, 0.0], [1.68289764E12, 5742.3922936893], [1.68289782E12, 5179.688457008245], [1.68289752E12, 40.83050847457618], [1.6828977E12, 1326.0579957916875], [1.68289788E12, 0.11016949152542367], [1.68289758E12, 2231.196677080383]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68289794E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.68289752E12, "maxY": 194273.0, "series": [{"data": [[1.68289776E12, 102523.0], [1.68289794E12, 100140.0], [1.68289764E12, 133703.0], [1.68289782E12, 135976.0], [1.68289752E12, 39378.0], [1.6828977E12, 194273.0], [1.68289788E12, 99416.0], [1.68289758E12, 94110.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68289776E12, 11333.0], [1.68289794E12, 100083.7], [1.68289764E12, 25806.0], [1.68289782E12, 11637.200000000003], [1.68289752E12, 16119.799999999974], [1.6828977E12, 6498.5], [1.68289788E12, 94366.2], [1.68289758E12, 44674.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68289776E12, 99471.41], [1.68289794E12, 100140.0], [1.68289764E12, 132084.0], [1.68289782E12, 135888.63], [1.68289752E12, 38242.82], [1.6828977E12, 91496.39999999982], [1.68289788E12, 99415.43], [1.68289758E12, 83173.84999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68289776E12, 22890.0], [1.68289794E12, 100103.6], [1.68289764E12, 100113.7], [1.68289782E12, 24776.3], [1.68289752E12, 26968.0], [1.6828977E12, 17200.0], [1.68289788E12, 97395.1], [1.68289758E12, 60385.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68289776E12, 12.0], [1.68289794E12, 100062.0], [1.68289764E12, 10.0], [1.68289782E12, 25.0], [1.68289752E12, 15.0], [1.6828977E12, 18.0], [1.68289788E12, 40927.0], [1.68289758E12, 7.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68289776E12, 102.0], [1.68289794E12, 100076.0], [1.68289764E12, 113.0], [1.68289782E12, 7384.0], [1.68289752E12, 153.0], [1.6828977E12, 102.0], [1.68289788E12, 70172.0], [1.68289758E12, 242.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68289794E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 66.0, "minX": 1.0, "maxY": 154538.0, "series": [{"data": [[2.0, 49509.5], [3.0, 16500.0], [4.0, 23647.5], [5.0, 7257.0], [6.0, 21841.5], [7.0, 27875.0], [8.0, 63155.0], [9.0, 4149.0], [10.0, 23823.0], [12.0, 52206.0], [14.0, 14103.5], [15.0, 5027.0], [16.0, 6474.5], [17.0, 6193.0], [18.0, 104.5], [23.0, 1179.0], [25.0, 16230.0], [27.0, 4511.0], [29.0, 6508.0], [30.0, 9447.0], [32.0, 100076.0], [41.0, 11833.0], [42.0, 10402.0], [45.0, 154538.0], [46.0, 18902.5], [48.0, 21734.5], [50.0, 136.0], [51.0, 6535.0], [54.0, 22196.5], [56.0, 4948.5], [60.0, 95.0], [65.0, 100.0], [66.0, 1455.0], [71.0, 150.0], [74.0, 10488.5], [73.0, 1320.0], [79.0, 75.0], [85.0, 32304.0], [87.0, 8159.0], [91.0, 5864.0], [99.0, 120.0], [122.0, 87.0], [123.0, 85.0], [121.0, 14654.0], [126.0, 129251.5], [125.0, 5026.0], [134.0, 114.0], [128.0, 107.5], [131.0, 93.0], [132.0, 105.0], [129.0, 78.0], [135.0, 103.0], [130.0, 1006.5], [133.0, 110.5], [138.0, 92.0], [140.0, 13663.5], [141.0, 100.0], [139.0, 86.0], [142.0, 73.0], [137.0, 89.0], [136.0, 91.0], [151.0, 103.0], [147.0, 108.0], [148.0, 94.0], [146.0, 83.0], [157.0, 16571.0], [153.0, 115.0], [159.0, 9696.0], [166.0, 108.0], [174.0, 9937.0], [175.0, 66.0], [180.0, 96.0], [191.0, 98.0], [197.0, 85.0], [199.0, 83.0], [196.0, 8298.5], [205.0, 549.0], [201.0, 89.0], [211.0, 165.0], [220.0, 8588.0], [221.0, 9536.0], [227.0, 11069.0], [234.0, 4066.0], [247.0, 19027.0], [242.0, 78.0], [245.0, 82.0], [246.0, 73.0], [269.0, 122.0], [271.0, 97.0], [270.0, 86.0], [262.0, 85.0], [268.0, 105.5], [263.0, 161.0], [266.0, 86.0], [265.0, 94.0], [273.0, 93.0], [272.0, 95.0], [274.0, 147.0], [278.0, 94.0], [283.0, 96.0], [279.0, 161.0], [290.0, 96.0], [293.0, 9708.0], [316.0, 90.0], [307.0, 95.0], [313.0, 9717.0], [332.0, 7483.0], [350.0, 202.0], [336.0, 134.0], [358.0, 193.0], [356.0, 114.0], [381.0, 127.0], [397.0, 450.0], [395.0, 165.0], [390.0, 138.0], [406.0, 102.0], [400.0, 212.0], [404.0, 98.0], [405.0, 85.0], [407.0, 88.0], [433.0, 96.0], [441.0, 19846.0], [438.0, 8379.0], [479.0, 19102.0], [466.0, 8738.0], [468.0, 132.0], [482.0, 92.0], [494.0, 115.0], [532.0, 13787.0], [540.0, 17486.0], [534.0, 114.0], [546.0, 6277.0], [551.0, 19268.0], [554.0, 19670.5], [607.0, 8252.0], [628.0, 19855.0], [619.0, 22747.0], [1.0, 55061.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[141.0, 9282.0], [283.0, 103658.0], [279.0, 94283.0], [151.0, 105637.5], [350.0, 76248.0], [50.0, 7914.0], [15.0, 26664.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 628.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 154538.0, "series": [{"data": [[2.0, 49509.5], [3.0, 16500.0], [4.0, 23647.5], [5.0, 7257.0], [6.0, 21841.5], [7.0, 27875.0], [8.0, 63155.0], [9.0, 4149.0], [10.0, 23823.0], [12.0, 52206.0], [14.0, 14103.5], [15.0, 5027.0], [16.0, 6474.5], [17.0, 6193.0], [18.0, 104.5], [23.0, 1179.0], [25.0, 16230.0], [27.0, 4511.0], [29.0, 6508.0], [30.0, 9446.5], [32.0, 100076.0], [41.0, 11833.0], [42.0, 10402.0], [45.0, 154538.0], [46.0, 18902.5], [48.0, 21734.5], [50.0, 136.0], [51.0, 6535.0], [54.0, 22196.5], [56.0, 4948.5], [60.0, 95.0], [65.0, 100.0], [66.0, 1455.0], [71.0, 150.0], [74.0, 10488.5], [73.0, 1320.0], [79.0, 75.0], [85.0, 32304.0], [87.0, 8159.0], [91.0, 5864.0], [99.0, 120.0], [122.0, 87.0], [123.0, 85.0], [121.0, 14654.0], [126.0, 129251.5], [125.0, 5026.0], [134.0, 114.0], [128.0, 107.5], [131.0, 93.0], [132.0, 105.0], [129.0, 78.0], [135.0, 103.0], [130.0, 1006.5], [133.0, 110.5], [138.0, 92.0], [140.0, 13663.5], [141.0, 100.0], [139.0, 86.0], [142.0, 73.0], [137.0, 89.0], [136.0, 91.0], [151.0, 103.0], [147.0, 108.0], [148.0, 94.0], [146.0, 83.0], [157.0, 16571.0], [153.0, 115.0], [159.0, 9696.0], [166.0, 108.0], [174.0, 9937.0], [175.0, 66.0], [180.0, 96.0], [191.0, 98.0], [197.0, 85.0], [199.0, 83.0], [196.0, 8298.5], [205.0, 549.0], [201.0, 89.0], [211.0, 165.0], [220.0, 8588.0], [221.0, 9536.0], [227.0, 11069.0], [234.0, 4066.0], [247.0, 19027.0], [242.0, 78.0], [245.0, 82.0], [246.0, 73.0], [269.0, 122.0], [271.0, 97.0], [270.0, 86.0], [262.0, 85.0], [268.0, 105.5], [263.0, 161.0], [266.0, 86.0], [265.0, 94.0], [273.0, 93.0], [272.0, 95.0], [274.0, 147.0], [278.0, 94.0], [283.0, 96.0], [279.0, 161.0], [290.0, 96.0], [293.0, 9708.0], [316.0, 90.0], [307.0, 95.0], [313.0, 9717.0], [332.0, 7483.0], [350.0, 202.0], [336.0, 134.0], [358.0, 193.0], [356.0, 114.0], [381.0, 127.0], [397.0, 450.0], [395.0, 165.0], [390.0, 138.0], [406.0, 102.0], [400.0, 212.0], [404.0, 98.0], [405.0, 85.0], [407.0, 88.0], [433.0, 96.0], [441.0, 19846.0], [438.0, 8379.0], [479.0, 19102.0], [466.0, 8738.0], [468.0, 132.0], [482.0, 92.0], [494.0, 115.0], [532.0, 13787.0], [540.0, 17486.0], [534.0, 114.0], [546.0, 6277.0], [551.0, 19268.0], [554.0, 19670.5], [607.0, 8252.0], [628.0, 19855.0], [619.0, 22747.0], [1.0, 55061.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[141.0, 0.0], [283.0, 0.0], [279.0, 0.0], [151.0, 0.0], [350.0, 0.0], [50.0, 0.0], [15.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 628.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 45.85, "minX": 1.68289752E12, "maxY": 149.63333333333333, "series": [{"data": [[1.68289776E12, 149.63333333333333], [1.68289764E12, 145.16666666666666], [1.68289782E12, 45.85], [1.68289752E12, 91.56666666666666], [1.6828977E12, 122.83333333333333], [1.68289758E12, 118.36666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68289782E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.68289752E12, "maxY": 164.41666666666666, "series": [{"data": [[1.68289776E12, 144.3], [1.68289794E12, 0.5333333333333333], [1.68289764E12, 164.41666666666666], [1.68289782E12, 56.6], [1.68289752E12, 60.96666666666667], [1.6828977E12, 126.73333333333333], [1.68289788E12, 1.9666666666666666], [1.68289758E12, 115.9]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68289776E12, 0.15], [1.68289764E12, 0.38333333333333336], [1.68289758E12, 1.4666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68289794E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.68289752E12, "maxY": 164.41666666666666, "series": [{"data": [[1.68289776E12, 144.3], [1.68289794E12, 0.5333333333333333], [1.68289764E12, 164.41666666666666], [1.68289782E12, 56.6], [1.68289752E12, 60.96666666666667], [1.6828977E12, 126.73333333333333], [1.68289788E12, 1.9666666666666666], [1.68289758E12, 115.9]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68289776E12, 0.15], [1.68289764E12, 0.38333333333333336], [1.68289758E12, 1.4666666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68289794E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.68289752E12, "maxY": 164.41666666666666, "series": [{"data": [[1.68289776E12, 144.3], [1.68289794E12, 0.5333333333333333], [1.68289764E12, 164.41666666666666], [1.68289782E12, 56.6], [1.68289752E12, 60.96666666666667], [1.6828977E12, 126.73333333333333], [1.68289788E12, 1.9666666666666666], [1.68289758E12, 115.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68289776E12, 0.15], [1.68289764E12, 0.38333333333333336], [1.68289758E12, 1.4666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68289794E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

