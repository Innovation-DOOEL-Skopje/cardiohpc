/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 17.0, "minX": 0.0, "maxY": 196124.0, "series": [{"data": [[0.0, 17.0], [0.1, 24.0], [0.2, 26.0], [0.3, 28.0], [0.4, 30.0], [0.5, 31.0], [0.6, 32.0], [0.7, 33.0], [0.8, 35.0], [0.9, 37.0], [1.0, 39.0], [1.1, 41.0], [1.2, 41.0], [1.3, 42.0], [1.4, 42.0], [1.5, 43.0], [1.6, 44.0], [1.7, 46.0], [1.8, 47.0], [1.9, 48.0], [2.0, 49.0], [2.1, 49.0], [2.2, 50.0], [2.3, 51.0], [2.4, 51.0], [2.5, 52.0], [2.6, 53.0], [2.7, 54.0], [2.8, 54.0], [2.9, 55.0], [3.0, 55.0], [3.1, 56.0], [3.2, 56.0], [3.3, 57.0], [3.4, 57.0], [3.5, 58.0], [3.6, 58.0], [3.7, 58.0], [3.8, 59.0], [3.9, 59.0], [4.0, 59.0], [4.1, 59.0], [4.2, 60.0], [4.3, 60.0], [4.4, 61.0], [4.5, 61.0], [4.6, 61.0], [4.7, 62.0], [4.8, 62.0], [4.9, 62.0], [5.0, 63.0], [5.1, 63.0], [5.2, 63.0], [5.3, 64.0], [5.4, 64.0], [5.5, 65.0], [5.6, 65.0], [5.7, 66.0], [5.8, 66.0], [5.9, 66.0], [6.0, 67.0], [6.1, 67.0], [6.2, 67.0], [6.3, 67.0], [6.4, 68.0], [6.5, 68.0], [6.6, 68.0], [6.7, 69.0], [6.8, 69.0], [6.9, 69.0], [7.0, 70.0], [7.1, 70.0], [7.2, 70.0], [7.3, 71.0], [7.4, 71.0], [7.5, 71.0], [7.6, 71.0], [7.7, 71.0], [7.8, 72.0], [7.9, 72.0], [8.0, 72.0], [8.1, 72.0], [8.2, 72.0], [8.3, 72.0], [8.4, 73.0], [8.5, 73.0], [8.6, 73.0], [8.7, 73.0], [8.8, 73.0], [8.9, 73.0], [9.0, 73.0], [9.1, 73.0], [9.2, 74.0], [9.3, 74.0], [9.4, 74.0], [9.5, 74.0], [9.6, 74.0], [9.7, 74.0], [9.8, 74.0], [9.9, 75.0], [10.0, 75.0], [10.1, 75.0], [10.2, 75.0], [10.3, 75.0], [10.4, 75.0], [10.5, 75.0], [10.6, 76.0], [10.7, 76.0], [10.8, 76.0], [10.9, 76.0], [11.0, 76.0], [11.1, 76.0], [11.2, 76.0], [11.3, 77.0], [11.4, 77.0], [11.5, 77.0], [11.6, 77.0], [11.7, 77.0], [11.8, 77.0], [11.9, 77.0], [12.0, 78.0], [12.1, 78.0], [12.2, 78.0], [12.3, 78.0], [12.4, 78.0], [12.5, 78.0], [12.6, 78.0], [12.7, 79.0], [12.8, 79.0], [12.9, 79.0], [13.0, 79.0], [13.1, 79.0], [13.2, 79.0], [13.3, 80.0], [13.4, 80.0], [13.5, 80.0], [13.6, 80.0], [13.7, 80.0], [13.8, 80.0], [13.9, 81.0], [14.0, 81.0], [14.1, 81.0], [14.2, 81.0], [14.3, 81.0], [14.4, 82.0], [14.5, 82.0], [14.6, 82.0], [14.7, 82.0], [14.8, 82.0], [14.9, 82.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 83.0], [15.4, 83.0], [15.5, 83.0], [15.6, 83.0], [15.7, 84.0], [15.8, 84.0], [15.9, 84.0], [16.0, 84.0], [16.1, 84.0], [16.2, 84.0], [16.3, 84.0], [16.4, 84.0], [16.5, 84.0], [16.6, 85.0], [16.7, 85.0], [16.8, 85.0], [16.9, 85.0], [17.0, 85.0], [17.1, 85.0], [17.2, 85.0], [17.3, 85.0], [17.4, 85.0], [17.5, 86.0], [17.6, 86.0], [17.7, 86.0], [17.8, 86.0], [17.9, 86.0], [18.0, 86.0], [18.1, 86.0], [18.2, 86.0], [18.3, 86.0], [18.4, 87.0], [18.5, 87.0], [18.6, 87.0], [18.7, 87.0], [18.8, 87.0], [18.9, 87.0], [19.0, 87.0], [19.1, 87.0], [19.2, 87.0], [19.3, 87.0], [19.4, 87.0], [19.5, 88.0], [19.6, 88.0], [19.7, 88.0], [19.8, 88.0], [19.9, 88.0], [20.0, 88.0], [20.1, 88.0], [20.2, 88.0], [20.3, 88.0], [20.4, 89.0], [20.5, 89.0], [20.6, 89.0], [20.7, 89.0], [20.8, 90.0], [20.9, 90.0], [21.0, 90.0], [21.1, 90.0], [21.2, 90.0], [21.3, 90.0], [21.4, 90.0], [21.5, 91.0], [21.6, 91.0], [21.7, 91.0], [21.8, 91.0], [21.9, 91.0], [22.0, 91.0], [22.1, 91.0], [22.2, 92.0], [22.3, 92.0], [22.4, 92.0], [22.5, 92.0], [22.6, 92.0], [22.7, 92.0], [22.8, 92.0], [22.9, 93.0], [23.0, 93.0], [23.1, 93.0], [23.2, 93.0], [23.3, 93.0], [23.4, 93.0], [23.5, 93.0], [23.6, 93.0], [23.7, 93.0], [23.8, 93.0], [23.9, 94.0], [24.0, 94.0], [24.1, 94.0], [24.2, 94.0], [24.3, 94.0], [24.4, 94.0], [24.5, 94.0], [24.6, 94.0], [24.7, 94.0], [24.8, 94.0], [24.9, 94.0], [25.0, 95.0], [25.1, 95.0], [25.2, 95.0], [25.3, 95.0], [25.4, 95.0], [25.5, 95.0], [25.6, 95.0], [25.7, 95.0], [25.8, 96.0], [25.9, 96.0], [26.0, 96.0], [26.1, 96.0], [26.2, 96.0], [26.3, 96.0], [26.4, 96.0], [26.5, 96.0], [26.6, 96.0], [26.7, 96.0], [26.8, 96.0], [26.9, 96.0], [27.0, 97.0], [27.1, 97.0], [27.2, 97.0], [27.3, 97.0], [27.4, 97.0], [27.5, 97.0], [27.6, 97.0], [27.7, 97.0], [27.8, 97.0], [27.9, 97.0], [28.0, 97.0], [28.1, 98.0], [28.2, 98.0], [28.3, 98.0], [28.4, 98.0], [28.5, 98.0], [28.6, 98.0], [28.7, 98.0], [28.8, 98.0], [28.9, 99.0], [29.0, 99.0], [29.1, 99.0], [29.2, 99.0], [29.3, 99.0], [29.4, 99.0], [29.5, 99.0], [29.6, 99.0], [29.7, 99.0], [29.8, 99.0], [29.9, 99.0], [30.0, 100.0], [30.1, 100.0], [30.2, 100.0], [30.3, 100.0], [30.4, 100.0], [30.5, 100.0], [30.6, 100.0], [30.7, 100.0], [30.8, 100.0], [30.9, 100.0], [31.0, 100.0], [31.1, 101.0], [31.2, 101.0], [31.3, 101.0], [31.4, 101.0], [31.5, 101.0], [31.6, 101.0], [31.7, 101.0], [31.8, 101.0], [31.9, 101.0], [32.0, 102.0], [32.1, 102.0], [32.2, 102.0], [32.3, 102.0], [32.4, 102.0], [32.5, 103.0], [32.6, 103.0], [32.7, 103.0], [32.8, 103.0], [32.9, 103.0], [33.0, 103.0], [33.1, 104.0], [33.2, 104.0], [33.3, 104.0], [33.4, 104.0], [33.5, 105.0], [33.6, 105.0], [33.7, 105.0], [33.8, 105.0], [33.9, 105.0], [34.0, 106.0], [34.1, 106.0], [34.2, 106.0], [34.3, 106.0], [34.4, 106.0], [34.5, 106.0], [34.6, 107.0], [34.7, 107.0], [34.8, 107.0], [34.9, 107.0], [35.0, 107.0], [35.1, 107.0], [35.2, 108.0], [35.3, 108.0], [35.4, 108.0], [35.5, 108.0], [35.6, 108.0], [35.7, 108.0], [35.8, 109.0], [35.9, 109.0], [36.0, 110.0], [36.1, 110.0], [36.2, 110.0], [36.3, 111.0], [36.4, 111.0], [36.5, 111.0], [36.6, 111.0], [36.7, 112.0], [36.8, 112.0], [36.9, 112.0], [37.0, 112.0], [37.1, 113.0], [37.2, 113.0], [37.3, 113.0], [37.4, 113.0], [37.5, 113.0], [37.6, 113.0], [37.7, 114.0], [37.8, 114.0], [37.9, 115.0], [38.0, 115.0], [38.1, 115.0], [38.2, 115.0], [38.3, 115.0], [38.4, 116.0], [38.5, 116.0], [38.6, 117.0], [38.7, 117.0], [38.8, 118.0], [38.9, 118.0], [39.0, 118.0], [39.1, 119.0], [39.2, 119.0], [39.3, 119.0], [39.4, 120.0], [39.5, 120.0], [39.6, 120.0], [39.7, 120.0], [39.8, 121.0], [39.9, 121.0], [40.0, 121.0], [40.1, 121.0], [40.2, 122.0], [40.3, 122.0], [40.4, 122.0], [40.5, 123.0], [40.6, 123.0], [40.7, 123.0], [40.8, 124.0], [40.9, 124.0], [41.0, 125.0], [41.1, 125.0], [41.2, 125.0], [41.3, 126.0], [41.4, 128.0], [41.5, 128.0], [41.6, 129.0], [41.7, 131.0], [41.8, 132.0], [41.9, 134.0], [42.0, 135.0], [42.1, 136.0], [42.2, 136.0], [42.3, 137.0], [42.4, 138.0], [42.5, 140.0], [42.6, 140.0], [42.7, 140.0], [42.8, 141.0], [42.9, 141.0], [43.0, 142.0], [43.1, 142.0], [43.2, 143.0], [43.3, 143.0], [43.4, 143.0], [43.5, 144.0], [43.6, 144.0], [43.7, 144.0], [43.8, 145.0], [43.9, 148.0], [44.0, 149.0], [44.1, 150.0], [44.2, 153.0], [44.3, 154.0], [44.4, 155.0], [44.5, 155.0], [44.6, 156.0], [44.7, 157.0], [44.8, 157.0], [44.9, 158.0], [45.0, 158.0], [45.1, 158.0], [45.2, 163.0], [45.3, 164.0], [45.4, 165.0], [45.5, 165.0], [45.6, 165.0], [45.7, 166.0], [45.8, 166.0], [45.9, 167.0], [46.0, 167.0], [46.1, 167.0], [46.2, 168.0], [46.3, 168.0], [46.4, 168.0], [46.5, 169.0], [46.6, 170.0], [46.7, 170.0], [46.8, 171.0], [46.9, 171.0], [47.0, 173.0], [47.1, 174.0], [47.2, 175.0], [47.3, 178.0], [47.4, 179.0], [47.5, 180.0], [47.6, 180.0], [47.7, 180.0], [47.8, 181.0], [47.9, 182.0], [48.0, 183.0], [48.1, 186.0], [48.2, 191.0], [48.3, 192.0], [48.4, 194.0], [48.5, 199.0], [48.6, 201.0], [48.7, 203.0], [48.8, 205.0], [48.9, 208.0], [49.0, 210.0], [49.1, 210.0], [49.2, 211.0], [49.3, 213.0], [49.4, 215.0], [49.5, 220.0], [49.6, 224.0], [49.7, 226.0], [49.8, 227.0], [49.9, 230.0], [50.0, 233.0], [50.1, 241.0], [50.2, 244.0], [50.3, 245.0], [50.4, 249.0], [50.5, 259.0], [50.6, 267.0], [50.7, 273.0], [50.8, 279.0], [50.9, 280.0], [51.0, 281.0], [51.1, 289.0], [51.2, 301.0], [51.3, 313.0], [51.4, 466.0], [51.5, 507.0], [51.6, 576.0], [51.7, 620.0], [51.8, 658.0], [51.9, 701.0], [52.0, 754.0], [52.1, 759.0], [52.2, 773.0], [52.3, 895.0], [52.4, 1008.0], [52.5, 1041.0], [52.6, 1079.0], [52.7, 1095.0], [52.8, 1116.0], [52.9, 1123.0], [53.0, 1132.0], [53.1, 1151.0], [53.2, 1169.0], [53.3, 1178.0], [53.4, 1203.0], [53.5, 1208.0], [53.6, 1220.0], [53.7, 1229.0], [53.8, 1277.0], [53.9, 1345.0], [54.0, 1371.0], [54.1, 1558.0], [54.2, 1655.0], [54.3, 1728.0], [54.4, 1876.0], [54.5, 1921.0], [54.6, 1939.0], [54.7, 2000.0], [54.8, 2030.0], [54.9, 2140.0], [55.0, 2156.0], [55.1, 2194.0], [55.2, 2217.0], [55.3, 2252.0], [55.4, 2307.0], [55.5, 2345.0], [55.6, 2368.0], [55.7, 2383.0], [55.8, 2414.0], [55.9, 2433.0], [56.0, 2464.0], [56.1, 2505.0], [56.2, 2579.0], [56.3, 2672.0], [56.4, 2754.0], [56.5, 2784.0], [56.6, 2897.0], [56.7, 2919.0], [56.8, 2937.0], [56.9, 2942.0], [57.0, 2956.0], [57.1, 2982.0], [57.2, 3015.0], [57.3, 3035.0], [57.4, 3079.0], [57.5, 3122.0], [57.6, 3186.0], [57.7, 3223.0], [57.8, 3270.0], [57.9, 3297.0], [58.0, 3310.0], [58.1, 3337.0], [58.2, 3385.0], [58.3, 3538.0], [58.4, 3773.0], [58.5, 3804.0], [58.6, 3852.0], [58.7, 3883.0], [58.8, 3911.0], [58.9, 3944.0], [59.0, 4078.0], [59.1, 4107.0], [59.2, 4155.0], [59.3, 4234.0], [59.4, 4276.0], [59.5, 4348.0], [59.6, 4439.0], [59.7, 4493.0], [59.8, 4521.0], [59.9, 4644.0], [60.0, 4782.0], [60.1, 4891.0], [60.2, 4915.0], [60.3, 4949.0], [60.4, 4981.0], [60.5, 5000.0], [60.6, 5081.0], [60.7, 5152.0], [60.8, 5174.0], [60.9, 5343.0], [61.0, 5416.0], [61.1, 5431.0], [61.2, 5433.0], [61.3, 5443.0], [61.4, 5523.0], [61.5, 5590.0], [61.6, 5714.0], [61.7, 5868.0], [61.8, 6101.0], [61.9, 6214.0], [62.0, 6457.0], [62.1, 6607.0], [62.2, 6805.0], [62.3, 6815.0], [62.4, 6877.0], [62.5, 6966.0], [62.6, 7133.0], [62.7, 7225.0], [62.8, 7310.0], [62.9, 7376.0], [63.0, 7602.0], [63.1, 7697.0], [63.2, 7707.0], [63.3, 7741.0], [63.4, 7781.0], [63.5, 7808.0], [63.6, 7889.0], [63.7, 7960.0], [63.8, 8001.0], [63.9, 8060.0], [64.0, 8130.0], [64.1, 8191.0], [64.2, 8217.0], [64.3, 8283.0], [64.4, 8297.0], [64.5, 8317.0], [64.6, 8544.0], [64.7, 8556.0], [64.8, 8615.0], [64.9, 8616.0], [65.0, 8629.0], [65.1, 8653.0], [65.2, 8675.0], [65.3, 8710.0], [65.4, 8785.0], [65.5, 8843.0], [65.6, 8867.0], [65.7, 8919.0], [65.8, 8943.0], [65.9, 8949.0], [66.0, 8988.0], [66.1, 9009.0], [66.2, 9036.0], [66.3, 9066.0], [66.4, 9087.0], [66.5, 9099.0], [66.6, 9124.0], [66.7, 9143.0], [66.8, 9167.0], [66.9, 9188.0], [67.0, 9190.0], [67.1, 9195.0], [67.2, 9222.0], [67.3, 9241.0], [67.4, 9290.0], [67.5, 9670.0], [67.6, 10004.0], [67.7, 10029.0], [67.8, 10110.0], [67.9, 10176.0], [68.0, 10205.0], [68.1, 10258.0], [68.2, 10274.0], [68.3, 10276.0], [68.4, 10321.0], [68.5, 10366.0], [68.6, 10403.0], [68.7, 10414.0], [68.8, 10443.0], [68.9, 10563.0], [69.0, 10607.0], [69.1, 10673.0], [69.2, 10715.0], [69.3, 10770.0], [69.4, 10810.0], [69.5, 10859.0], [69.6, 10961.0], [69.7, 10977.0], [69.8, 11126.0], [69.9, 11133.0], [70.0, 11144.0], [70.1, 11148.0], [70.2, 11153.0], [70.3, 11163.0], [70.4, 11186.0], [70.5, 11203.0], [70.6, 11238.0], [70.7, 11254.0], [70.8, 11274.0], [70.9, 11275.0], [71.0, 11301.0], [71.1, 11370.0], [71.2, 11464.0], [71.3, 11474.0], [71.4, 11511.0], [71.5, 11573.0], [71.6, 11595.0], [71.7, 11609.0], [71.8, 11675.0], [71.9, 11822.0], [72.0, 11836.0], [72.1, 11841.0], [72.2, 11861.0], [72.3, 11876.0], [72.4, 11886.0], [72.5, 11900.0], [72.6, 11916.0], [72.7, 11933.0], [72.8, 11948.0], [72.9, 12002.0], [73.0, 12051.0], [73.1, 12119.0], [73.2, 12139.0], [73.3, 12178.0], [73.4, 12211.0], [73.5, 12284.0], [73.6, 12364.0], [73.7, 12430.0], [73.8, 12489.0], [73.9, 12509.0], [74.0, 12520.0], [74.1, 12541.0], [74.2, 12566.0], [74.3, 12640.0], [74.4, 12708.0], [74.5, 12736.0], [74.6, 12743.0], [74.7, 12749.0], [74.8, 12764.0], [74.9, 12784.0], [75.0, 12804.0], [75.1, 12823.0], [75.2, 12839.0], [75.3, 12858.0], [75.4, 12871.0], [75.5, 12880.0], [75.6, 12894.0], [75.7, 12913.0], [75.8, 12920.0], [75.9, 12935.0], [76.0, 12943.0], [76.1, 12955.0], [76.2, 12958.0], [76.3, 12964.0], [76.4, 12971.0], [76.5, 12981.0], [76.6, 13001.0], [76.7, 13028.0], [76.8, 13043.0], [76.9, 13103.0], [77.0, 13161.0], [77.1, 13201.0], [77.2, 13203.0], [77.3, 13204.0], [77.4, 13226.0], [77.5, 13241.0], [77.6, 13293.0], [77.7, 13402.0], [77.8, 13451.0], [77.9, 13542.0], [78.0, 13558.0], [78.1, 13568.0], [78.2, 13608.0], [78.3, 13644.0], [78.4, 13666.0], [78.5, 13722.0], [78.6, 13740.0], [78.7, 13835.0], [78.8, 13865.0], [78.9, 13868.0], [79.0, 13888.0], [79.1, 13911.0], [79.2, 13935.0], [79.3, 13958.0], [79.4, 13961.0], [79.5, 13964.0], [79.6, 13967.0], [79.7, 13974.0], [79.8, 13984.0], [79.9, 14006.0], [80.0, 14039.0], [80.1, 14062.0], [80.2, 14115.0], [80.3, 14148.0], [80.4, 14182.0], [80.5, 14207.0], [80.6, 14248.0], [80.7, 14254.0], [80.8, 14300.0], [80.9, 14350.0], [81.0, 14391.0], [81.1, 14407.0], [81.2, 14463.0], [81.3, 14485.0], [81.4, 14542.0], [81.5, 14576.0], [81.6, 14639.0], [81.7, 14688.0], [81.8, 14768.0], [81.9, 14789.0], [82.0, 14811.0], [82.1, 14820.0], [82.2, 14822.0], [82.3, 14823.0], [82.4, 14856.0], [82.5, 14877.0], [82.6, 14910.0], [82.7, 14967.0], [82.8, 15051.0], [82.9, 15136.0], [83.0, 15139.0], [83.1, 15248.0], [83.2, 15276.0], [83.3, 15311.0], [83.4, 15348.0], [83.5, 15361.0], [83.6, 15469.0], [83.7, 15802.0], [83.8, 15995.0], [83.9, 16013.0], [84.0, 16120.0], [84.1, 16253.0], [84.2, 16363.0], [84.3, 16442.0], [84.4, 16912.0], [84.5, 16985.0], [84.6, 17044.0], [84.7, 17130.0], [84.8, 17139.0], [84.9, 17159.0], [85.0, 17239.0], [85.1, 17329.0], [85.2, 17358.0], [85.3, 17482.0], [85.4, 17565.0], [85.5, 17613.0], [85.6, 17628.0], [85.7, 17653.0], [85.8, 17691.0], [85.9, 17762.0], [86.0, 17838.0], [86.1, 17860.0], [86.2, 17863.0], [86.3, 17935.0], [86.4, 17940.0], [86.5, 18080.0], [86.6, 18153.0], [86.7, 18218.0], [86.8, 18276.0], [86.9, 18482.0], [87.0, 18619.0], [87.1, 18688.0], [87.2, 18860.0], [87.3, 18890.0], [87.4, 18938.0], [87.5, 19003.0], [87.6, 19031.0], [87.7, 19214.0], [87.8, 19305.0], [87.9, 19406.0], [88.0, 19452.0], [88.1, 19546.0], [88.2, 19716.0], [88.3, 19756.0], [88.4, 19801.0], [88.5, 19811.0], [88.6, 19854.0], [88.7, 19937.0], [88.8, 20073.0], [88.9, 20171.0], [89.0, 20181.0], [89.1, 20213.0], [89.2, 20274.0], [89.3, 20416.0], [89.4, 20489.0], [89.5, 20703.0], [89.6, 21700.0], [89.7, 21807.0], [89.8, 21820.0], [89.9, 22051.0], [90.0, 22661.0], [90.1, 23006.0], [90.2, 23616.0], [90.3, 23848.0], [90.4, 23947.0], [90.5, 24024.0], [90.6, 24214.0], [90.7, 24391.0], [90.8, 24436.0], [90.9, 24652.0], [91.0, 24723.0], [91.1, 25109.0], [91.2, 25195.0], [91.3, 25418.0], [91.4, 26644.0], [91.5, 27149.0], [91.6, 27600.0], [91.7, 27646.0], [91.8, 27989.0], [91.9, 28091.0], [92.0, 28699.0], [92.1, 30587.0], [92.2, 31976.0], [92.3, 32337.0], [92.4, 32560.0], [92.5, 34008.0], [92.6, 34264.0], [92.7, 34555.0], [92.8, 37991.0], [92.9, 39302.0], [93.0, 40287.0], [93.1, 43059.0], [93.2, 43903.0], [93.3, 45590.0], [93.4, 47874.0], [93.5, 48385.0], [93.6, 50354.0], [93.7, 52183.0], [93.8, 52193.0], [93.9, 52469.0], [94.0, 52657.0], [94.1, 54967.0], [94.2, 57227.0], [94.3, 60452.0], [94.4, 61625.0], [94.5, 63523.0], [94.6, 63843.0], [94.7, 64292.0], [94.8, 65539.0], [94.9, 65695.0], [95.0, 65986.0], [95.1, 66180.0], [95.2, 66870.0], [95.3, 67910.0], [95.4, 70851.0], [95.5, 72365.0], [95.6, 73230.0], [95.7, 73719.0], [95.8, 74223.0], [95.9, 74227.0], [96.0, 77410.0], [96.1, 79674.0], [96.2, 81252.0], [96.3, 84376.0], [96.4, 92792.0], [96.5, 92826.0], [96.6, 94256.0], [96.7, 95823.0], [96.8, 100012.0], [96.9, 100024.0], [97.0, 100072.0], [97.1, 100082.0], [97.2, 100085.0], [97.3, 100092.0], [97.4, 100116.0], [97.5, 100123.0], [97.6, 100141.0], [97.7, 100151.0], [97.8, 100157.0], [97.9, 100159.0], [98.0, 100169.0], [98.1, 100175.0], [98.2, 100180.0], [98.3, 100277.0], [98.4, 110470.0], [98.5, 127875.0], [98.6, 128778.0], [98.7, 128817.0], [98.8, 130323.0], [98.9, 131517.0], [99.0, 132326.0], [99.1, 133512.0], [99.2, 133742.0], [99.3, 133842.0], [99.4, 134725.0], [99.5, 135390.0], [99.6, 136201.0], [99.7, 136405.0], [99.8, 136926.0], [99.9, 163006.0], [100.0, 196124.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10516.0, "series": [{"data": [[0.0, 10516.0], [132900.0, 3.0], [136100.0, 8.0], [68300.0, 1.0], [73100.0, 22.0], [74700.0, 1.0], [81100.0, 10.0], [85900.0, 1.0], [84300.0, 1.0], [93900.0, 4.0], [97100.0, 2.0], [95500.0, 2.0], [100300.0, 1.0], [130700.0, 2.0], [133800.0, 12.0], [100.0, 6518.0], [34500.0, 2.0], [131500.0, 5.0], [134700.0, 32.0], [33700.0, 4.0], [35300.0, 2.0], [39300.0, 11.0], [40900.0, 2.0], [40100.0, 2.0], [44100.0, 1.0], [47300.0, 1.0], [48100.0, 1.0], [49700.0, 2.0], [50500.0, 2.0], [200.0, 937.0], [52100.0, 59.0], [51300.0, 1.0], [54500.0, 7.0], [55300.0, 1.0], [59300.0, 4.0], [58500.0, 2.0], [61700.0, 2.0], [63300.0, 2.0], [65800.0, 1.0], [69000.0, 2.0], [72200.0, 2.0], [300.0, 49.0], [77000.0, 1.0], [73800.0, 2.0], [80200.0, 1.0], [81800.0, 1.0], [93000.0, 2.0], [400.0, 52.0], [112200.0, 1.0], [500.0, 41.0], [135600.0, 24.0], [600.0, 100.0], [700.0, 124.0], [800.0, 29.0], [900.0, 21.0], [1000.0, 117.0], [1100.0, 230.0], [1200.0, 154.0], [1300.0, 88.0], [1400.0, 2.0], [1500.0, 13.0], [1600.0, 47.0], [1700.0, 34.0], [1800.0, 38.0], [1900.0, 88.0], [2000.0, 57.0], [2100.0, 110.0], [2300.0, 128.0], [2200.0, 73.0], [2400.0, 122.0], [2500.0, 56.0], [2600.0, 25.0], [2800.0, 39.0], [2700.0, 65.0], [2900.0, 183.0], [3000.0, 115.0], [3100.0, 54.0], [3300.0, 101.0], [3200.0, 104.0], [3400.0, 24.0], [3500.0, 15.0], [3700.0, 54.0], [3600.0, 9.0], [3800.0, 89.0], [3900.0, 76.0], [4000.0, 31.0], [4100.0, 59.0], [68100.0, 2.0], [4300.0, 23.0], [4200.0, 89.0], [66500.0, 1.0], [71300.0, 3.0], [4500.0, 26.0], [4400.0, 76.0], [4600.0, 53.0], [72900.0, 1.0], [4700.0, 7.0], [4800.0, 36.0], [5000.0, 40.0], [5100.0, 72.0], [79300.0, 2.0], [4900.0, 138.0], [5300.0, 28.0], [5200.0, 22.0], [5400.0, 149.0], [5500.0, 41.0], [5600.0, 11.0], [5700.0, 46.0], [5800.0, 17.0], [6100.0, 24.0], [5900.0, 11.0], [6000.0, 19.0], [96900.0, 3.0], [6200.0, 28.0], [6300.0, 13.0], [100100.0, 314.0], [98500.0, 3.0], [6400.0, 26.0], [6500.0, 14.0], [6600.0, 12.0], [6700.0, 19.0], [6800.0, 94.0], [6900.0, 39.0], [7000.0, 11.0], [7100.0, 24.0], [7300.0, 41.0], [7200.0, 46.0], [7400.0, 11.0], [7600.0, 43.0], [7500.0, 18.0], [7700.0, 126.0], [7800.0, 47.0], [7900.0, 64.0], [8000.0, 58.0], [8100.0, 53.0], [8400.0, 6.0], [8600.0, 175.0], [8200.0, 106.0], [9000.0, 160.0], [9200.0, 92.0], [8800.0, 91.0], [9600.0, 9.0], [9400.0, 8.0], [10200.0, 147.0], [10000.0, 65.0], [163000.0, 25.0], [9800.0, 16.0], [10400.0, 103.0], [10600.0, 65.0], [10800.0, 68.0], [11200.0, 182.0], [11000.0, 17.0], [11600.0, 53.0], [11400.0, 82.0], [11800.0, 213.0], [12200.0, 43.0], [12000.0, 64.0], [12400.0, 64.0], [12600.0, 58.0], [12800.0, 228.0], [13000.0, 106.0], [13200.0, 199.0], [13800.0, 120.0], [13400.0, 60.0], [13600.0, 100.0], [14000.0, 112.0], [14200.0, 115.0], [14400.0, 127.0], [14800.0, 212.0], [14600.0, 53.0], [15200.0, 84.0], [15000.0, 15.0], [15600.0, 8.0], [15800.0, 2.0], [15400.0, 28.0], [16200.0, 10.0], [16000.0, 60.0], [16400.0, 32.0], [16800.0, 14.0], [17200.0, 23.0], [17600.0, 120.0], [18400.0, 34.0], [18000.0, 11.0], [19200.0, 39.0], [18800.0, 59.0], [19600.0, 27.0], [20400.0, 46.0], [20000.0, 36.0], [21200.0, 9.0], [21600.0, 1.0], [22000.0, 11.0], [22400.0, 4.0], [22800.0, 2.0], [23200.0, 6.0], [24000.0, 35.0], [23600.0, 28.0], [24400.0, 36.0], [24800.0, 7.0], [25600.0, 6.0], [26000.0, 7.0], [27600.0, 53.0], [26800.0, 2.0], [27200.0, 1.0], [28000.0, 35.0], [28400.0, 29.0], [28800.0, 3.0], [29200.0, 1.0], [30000.0, 2.0], [31200.0, 2.0], [31600.0, 7.0], [32000.0, 19.0], [32400.0, 1.0], [32800.0, 4.0], [33600.0, 4.0], [34400.0, 17.0], [36000.0, 3.0], [38400.0, 2.0], [39200.0, 6.0], [42400.0, 2.0], [46400.0, 2.0], [50400.0, 2.0], [55200.0, 4.0], [59200.0, 4.0], [60800.0, 2.0], [61600.0, 4.0], [63200.0, 2.0], [64000.0, 9.0], [64800.0, 2.0], [65600.0, 37.0], [72000.0, 9.0], [73600.0, 18.0], [80000.0, 1.0], [78400.0, 2.0], [84800.0, 2.0], [86400.0, 1.0], [92800.0, 34.0], [97600.0, 1.0], [110400.0, 16.0], [134400.0, 15.0], [135300.0, 14.0], [196100.0, 1.0], [67100.0, 3.0], [70300.0, 4.0], [71900.0, 2.0], [92700.0, 13.0], [97500.0, 2.0], [94300.0, 6.0], [95900.0, 3.0], [99100.0, 1.0], [127900.0, 5.0], [136200.0, 21.0], [165000.0, 10.0], [34700.0, 1.0], [35500.0, 7.0], [37900.0, 2.0], [40300.0, 9.0], [42700.0, 2.0], [41100.0, 2.0], [43500.0, 4.0], [46700.0, 2.0], [49100.0, 10.0], [48300.0, 31.0], [52300.0, 15.0], [53100.0, 2.0], [51500.0, 2.0], [57100.0, 2.0], [55500.0, 2.0], [60300.0, 6.0], [59500.0, 2.0], [64300.0, 13.0], [65100.0, 2.0], [63500.0, 26.0], [66200.0, 5.0], [71000.0, 3.0], [74200.0, 76.0], [77400.0, 2.0], [83800.0, 2.0], [87000.0, 1.0], [96600.0, 2.0], [130200.0, 1.0], [66900.0, 1.0], [76500.0, 1.0], [79700.0, 2.0], [86100.0, 1.0], [89300.0, 1.0], [95700.0, 9.0], [102100.0, 1.0], [136600.0, 2.0], [16900.0, 51.0], [17300.0, 88.0], [17700.0, 49.0], [18100.0, 57.0], [19300.0, 38.0], [18900.0, 62.0], [18500.0, 24.0], [19700.0, 76.0], [20100.0, 87.0], [20500.0, 13.0], [21300.0, 2.0], [20900.0, 1.0], [21700.0, 29.0], [22100.0, 2.0], [23300.0, 7.0], [22900.0, 2.0], [24100.0, 11.0], [23700.0, 17.0], [24500.0, 5.0], [24900.0, 6.0], [26100.0, 1.0], [26500.0, 5.0], [27300.0, 2.0], [26900.0, 3.0], [28100.0, 2.0], [27700.0, 6.0], [28900.0, 13.0], [30500.0, 16.0], [32100.0, 1.0], [32500.0, 8.0], [134300.0, 2.0], [34600.0, 2.0], [33000.0, 2.0], [35400.0, 4.0], [37000.0, 3.0], [37800.0, 2.0], [40200.0, 23.0], [43400.0, 3.0], [44200.0, 2.0], [46600.0, 1.0], [47400.0, 2.0], [52200.0, 13.0], [51400.0, 2.0], [56200.0, 4.0], [60200.0, 2.0], [62600.0, 6.0], [63400.0, 1.0], [64200.0, 7.0], [65000.0, 2.0], [66000.0, 4.0], [67600.0, 11.0], [70800.0, 12.0], [78800.0, 4.0], [80400.0, 2.0], [86800.0, 2.0], [99600.0, 3.0], [130000.0, 33.0], [140900.0, 1.0], [65900.0, 20.0], [69100.0, 1.0], [72300.0, 4.0], [73900.0, 1.0], [78700.0, 10.0], [83500.0, 1.0], [86700.0, 1.0], [89900.0, 1.0], [88300.0, 1.0], [94700.0, 1.0], [97900.0, 1.0], [96300.0, 1.0], [136300.0, 10.0], [34100.0, 19.0], [33300.0, 12.0], [36500.0, 2.0], [34900.0, 1.0], [145900.0, 1.0], [38900.0, 11.0], [42100.0, 2.0], [43700.0, 6.0], [45300.0, 2.0], [46900.0, 7.0], [48500.0, 1.0], [50100.0, 2.0], [52500.0, 11.0], [53300.0, 2.0], [54900.0, 17.0], [54100.0, 2.0], [56500.0, 2.0], [58100.0, 2.0], [60500.0, 3.0], [61300.0, 3.0], [65300.0, 3.0], [64500.0, 1.0], [63700.0, 2.0], [68200.0, 1.0], [66600.0, 2.0], [76200.0, 10.0], [79400.0, 2.0], [85800.0, 2.0], [93800.0, 13.0], [97000.0, 1.0], [100200.0, 33.0], [98600.0, 1.0], [106600.0, 5.0], [134900.0, 3.0], [65700.0, 12.0], [67300.0, 2.0], [73700.0, 10.0], [70500.0, 3.0], [80100.0, 4.0], [81700.0, 2.0], [83300.0, 1.0], [92900.0, 8.0], [96100.0, 2.0], [94500.0, 2.0], [8300.0, 60.0], [8500.0, 59.0], [8700.0, 49.0], [9100.0, 228.0], [8900.0, 135.0], [9700.0, 3.0], [9300.0, 7.0], [9500.0, 8.0], [10100.0, 67.0], [9900.0, 12.0], [10300.0, 52.0], [10700.0, 77.0], [10500.0, 50.0], [11100.0, 251.0], [10900.0, 50.0], [11700.0, 16.0], [11500.0, 110.0], [11300.0, 44.0], [11900.0, 149.0], [12100.0, 105.0], [12500.0, 139.0], [12300.0, 51.0], [12700.0, 207.0], [13300.0, 22.0], [13100.0, 55.0], [12900.0, 338.0], [13500.0, 116.0], [13700.0, 74.0], [14100.0, 103.0], [13900.0, 294.0], [14300.0, 71.0], [14500.0, 73.0], [14700.0, 73.0], [14900.0, 85.0], [15300.0, 92.0], [15100.0, 74.0], [15500.0, 4.0], [15700.0, 19.0], [15900.0, 37.0], [16300.0, 38.0], [16100.0, 39.0], [16600.0, 7.0], [17000.0, 50.0], [17400.0, 12.0], [18200.0, 50.0], [17800.0, 95.0], [19000.0, 55.0], [18600.0, 47.0], [19400.0, 49.0], [19800.0, 94.0], [20200.0, 67.0], [20600.0, 14.0], [21000.0, 3.0], [21800.0, 56.0], [23000.0, 19.0], [23400.0, 2.0], [22600.0, 4.0], [24200.0, 24.0], [23800.0, 7.0], [24600.0, 51.0], [25000.0, 1.0], [25400.0, 32.0], [26600.0, 1.0], [26200.0, 1.0], [27000.0, 2.0], [27400.0, 14.0], [27800.0, 10.0], [28600.0, 1.0], [29000.0, 3.0], [30600.0, 4.0], [30200.0, 2.0], [31000.0, 4.0], [32600.0, 2.0], [32200.0, 6.0], [133500.0, 31.0], [34000.0, 10.0], [38000.0, 7.0], [44400.0, 4.0], [45200.0, 1.0], [46800.0, 7.0], [46000.0, 1.0], [48400.0, 6.0], [47600.0, 2.0], [50000.0, 1.0], [52400.0, 16.0], [54800.0, 3.0], [57200.0, 3.0], [60400.0, 4.0], [59600.0, 1.0], [61200.0, 2.0], [62800.0, 1.0], [65200.0, 1.0], [63600.0, 3.0], [64400.0, 2.0], [66400.0, 4.0], [68000.0, 6.0], [71200.0, 1.0], [80800.0, 3.0], [79200.0, 4.0], [82400.0, 1.0], [84000.0, 2.0], [90400.0, 2.0], [96800.0, 3.0], [95200.0, 1.0], [100000.0, 189.0], [103200.0, 8.0], [109600.0, 1.0], [127200.0, 22.0], [128800.0, 24.0], [130400.0, 19.0], [133700.0, 36.0], [136900.0, 16.0], [66300.0, 5.0], [67900.0, 9.0], [69500.0, 1.0], [72700.0, 2.0], [74300.0, 2.0], [80700.0, 2.0], [79100.0, 1.0], [82300.0, 2.0], [91900.0, 3.0], [96700.0, 1.0], [99900.0, 2.0], [128700.0, 16.0], [130300.0, 2.0], [169800.0, 1.0], [33500.0, 3.0], [132300.0, 50.0], [35900.0, 1.0], [39900.0, 2.0], [40700.0, 3.0], [43900.0, 31.0], [43100.0, 2.0], [46300.0, 6.0], [45500.0, 2.0], [47900.0, 2.0], [50300.0, 3.0], [51100.0, 2.0], [54300.0, 2.0], [55100.0, 1.0], [53500.0, 2.0], [56700.0, 8.0], [59100.0, 2.0], [57500.0, 2.0], [60700.0, 8.0], [63100.0, 1.0], [65500.0, 3.0], [64700.0, 1.0], [68600.0, 1.0], [67000.0, 2.0], [73400.0, 1.0], [70200.0, 1.0], [76600.0, 1.0], [78200.0, 3.0], [79800.0, 2.0], [86200.0, 1.0], [94200.0, 7.0], [95800.0, 4.0], [127800.0, 29.0], [133200.0, 7.0], [136400.0, 34.0], [162000.0, 1.0], [146900.0, 20.0], [67700.0, 12.0], [66100.0, 33.0], [69300.0, 2.0], [70900.0, 4.0], [85300.0, 2.0], [94900.0, 4.0], [135000.0, 2.0], [17100.0, 104.0], [17900.0, 89.0], [17500.0, 53.0], [18300.0, 4.0], [19100.0, 11.0], [18700.0, 9.0], [19900.0, 20.0], [20300.0, 8.0], [19500.0, 24.0], [20700.0, 9.0], [21100.0, 12.0], [21900.0, 17.0], [22300.0, 21.0], [22700.0, 12.0], [23500.0, 3.0], [23100.0, 2.0], [23900.0, 51.0], [24300.0, 19.0], [24700.0, 29.0], [25100.0, 43.0], [25500.0, 7.0], [25900.0, 4.0], [27500.0, 13.0], [26700.0, 14.0], [27100.0, 18.0], [27900.0, 3.0], [28300.0, 2.0], [29100.0, 1.0], [28700.0, 1.0], [29900.0, 2.0], [30700.0, 8.0], [31900.0, 4.0], [32700.0, 1.0], [32300.0, 33.0], [33400.0, 2.0], [34200.0, 24.0], [35000.0, 2.0], [37400.0, 2.0], [38200.0, 6.0], [40600.0, 9.0], [39000.0, 2.0], [41400.0, 2.0], [43000.0, 6.0], [43800.0, 6.0], [47000.0, 1.0], [45400.0, 2.0], [47800.0, 4.0], [49400.0, 11.0], [52600.0, 16.0], [54200.0, 6.0], [58200.0, 2.0], [57400.0, 1.0], [60600.0, 12.0], [61400.0, 1.0], [63000.0, 1.0], [62200.0, 2.0], [65400.0, 3.0], [63800.0, 41.0], [64600.0, 2.0], [66800.0, 17.0], [73200.0, 20.0], [70000.0, 1.0], [76400.0, 2.0], [81200.0, 25.0], [79600.0, 9.0], [78000.0, 1.0], [86000.0, 5.0], [82800.0, 2.0], [94000.0, 2.0], [95600.0, 1.0], [103600.0, 5.0], [130800.0, 12.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 196100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 93.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 18072.0, "series": [{"data": [[0.0, 18072.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 906.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16029.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 93.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 104.11165048543691, "minX": 1.68320568E12, "maxY": 3000.0, "series": [{"data": [[1.68320598E12, 773.3248014121792], [1.6832058E12, 3000.0], [1.68320592E12, 2765.3629211561392], [1.68320574E12, 3000.0], [1.68320604E12, 104.11165048543691], [1.68320586E12, 3000.0], [1.68320568E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68320604E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 88.0, "minX": 3.0, "maxY": 140952.0, "series": [{"data": [[3.0, 100127.0], [4.0, 100126.0], [7.0, 100123.0], [8.0, 100122.0], [9.0, 100054.0], [12.0, 100054.66666666667], [13.0, 100050.0], [14.0, 100035.0], [15.0, 100034.0], [17.0, 100033.5], [19.0, 100032.0], [20.0, 100032.0], [22.0, 100032.33333333333], [23.0, 100027.0], [24.0, 100023.0], [26.0, 100023.0], [27.0, 100022.0], [29.0, 100021.0], [32.0, 100125.0], [34.0, 100126.0], [39.0, 100124.5], [41.0, 100124.0], [40.0, 100123.66666666667], [45.0, 100123.0], [44.0, 100123.0], [47.0, 100122.0], [49.0, 100118.0], [48.0, 100122.5], [51.0, 100117.0], [50.0, 100117.0], [53.0, 100106.0], [52.0, 100115.0], [55.0, 100096.0], [54.0, 100104.0], [56.0, 100094.0], [59.0, 100093.5], [58.0, 100093.0], [62.0, 100091.66666666667], [64.0, 100090.0], [68.0, 100086.5], [74.0, 100086.0], [72.0, 100086.0], [79.0, 100084.0], [76.0, 100085.0], [81.0, 100084.0], [87.0, 100079.0], [86.0, 100083.0], [85.0, 100083.25], [91.0, 100078.0], [90.0, 100079.0], [89.0, 100079.0], [93.0, 100074.0], [92.0, 100074.0], [99.0, 100072.0], [97.0, 100072.75], [103.0, 100071.0], [102.0, 100070.0], [100.0, 100071.0], [106.0, 100024.0], [105.0, 100068.5], [110.0, 100024.25], [113.0, 100017.0], [112.0, 100018.0], [118.0, 100015.0], [117.0, 100016.0], [116.0, 100017.0], [123.0, 100007.0], [122.0, 100011.0], [121.0, 100015.0], [120.0, 100015.0], [127.0, 96305.0], [126.0, 98662.0], [125.0, 100106.0], [124.0, 99669.0], [135.0, 94959.0], [134.0, 94961.0], [133.0, 95968.0], [132.0, 95634.0], [131.0, 96642.0], [130.0, 96979.0], [129.0, 97652.0], [128.0, 95298.0], [142.0, 100116.0], [139.0, 100117.0], [138.0, 100117.0], [151.0, 92942.0], [150.0, 93949.0], [149.0, 93951.0], [148.0, 100112.0], [147.0, 100113.0], [146.0, 100114.5], [144.0, 100115.0], [159.0, 94918.0], [158.0, 95925.0], [157.0, 95927.0], [156.0, 96934.0], [155.0, 96937.0], [154.0, 97944.0], [153.0, 91932.0], [152.0, 92940.0], [167.0, 84867.0], [166.0, 85873.0], [165.0, 85875.0], [164.0, 86882.0], [163.0, 86883.0], [162.0, 93907.0], [161.0, 93909.0], [160.0, 94916.0], [175.0, 80828.0], [174.0, 81835.0], [173.0, 79145.0], [172.0, 80153.0], [171.0, 80155.0], [170.0, 83854.0], [169.0, 81165.0], [168.0, 84863.0], [183.0, 82803.0], [182.0, 83812.0], [181.0, 78021.0], [180.0, 78805.0], [179.0, 78809.0], [178.0, 79816.0], [177.0, 79818.0], [176.0, 80824.0], [191.0, 78765.0], [190.0, 79772.0], [189.0, 79775.0], [188.0, 80782.0], [187.0, 80784.0], [186.0, 81792.0], [185.0, 81794.0], [184.0, 82801.0], [199.0, 66021.0], [198.0, 67030.0], [197.0, 67032.0], [196.0, 68039.0], [195.0, 68041.0], [194.0, 69048.0], [193.0, 71964.0], [192.0, 72972.0], [207.0, 64897.0], [206.0, 65905.0], [205.0, 65907.0], [204.0, 66356.0], [203.0, 64003.0], [202.0, 65010.0], [201.0, 65012.0], [200.0, 66019.0], [215.0, 66651.0], [214.0, 67660.0], [213.0, 67661.0], [212.0, 68669.0], [211.0, 62880.0], [210.0, 63886.0], [209.0, 63889.0], [208.0, 64896.0], [223.0, 62613.0], [222.0, 63622.0], [221.0, 63623.0], [220.0, 64631.0], [219.0, 64634.0], [218.0, 65641.0], [217.0, 65643.0], [216.0, 66649.0], [231.0, 58575.0], [230.0, 59582.0], [229.0, 59584.0], [228.0, 60592.0], [227.0, 60594.0], [226.0, 61601.0], [225.0, 61603.0], [224.0, 62611.0], [239.0, 54538.0], [238.0, 55545.0], [237.0, 55547.0], [236.0, 56556.0], [235.0, 56557.0], [234.0, 57564.0], [233.0, 57566.0], [232.0, 58573.0], [247.0, 50500.0], [246.0, 51508.0], [245.0, 51510.0], [244.0, 52517.0], [243.0, 52519.0], [242.0, 53527.0], [241.0, 53529.0], [240.0, 54536.0], [255.0, 46462.0], [254.0, 47470.0], [253.0, 47472.0], [252.0, 48480.0], [251.0, 48481.0], [250.0, 49489.0], [249.0, 49491.0], [248.0, 50500.0], [270.0, 40101.0], [271.0, 39094.0], [269.0, 40104.0], [268.0, 41110.0], [267.0, 41113.0], [266.0, 42121.0], [265.0, 42122.0], [264.0, 43131.0], [263.0, 43133.0], [257.0, 45453.0], [256.0, 46460.0], [259.0, 44444.0], [258.0, 45452.0], [262.0, 44139.0], [261.0, 43434.0], [260.0, 44442.0], [286.0, 32025.0], [287.0, 31019.0], [285.0, 32029.0], [284.0, 33036.0], [283.0, 33038.0], [282.0, 34045.0], [281.0, 34046.0], [280.0, 35054.0], [279.0, 35057.0], [273.0, 38084.0], [272.0, 39094.0], [275.0, 37075.0], [274.0, 38082.0], [278.0, 36064.0], [277.0, 36065.0], [276.0, 37073.0], [302.0, 23950.0], [303.0, 22944.0], [301.0, 23954.0], [300.0, 24961.0], [299.0, 24961.0], [298.0, 25969.0], [297.0, 25971.0], [296.0, 26979.0], [295.0, 26981.0], [289.0, 30009.0], [288.0, 31017.0], [291.0, 29000.0], [290.0, 30007.0], [294.0, 27989.0], [293.0, 27991.0], [292.0, 28998.0], [318.0, 24430.0], [319.0, 24429.0], [317.0, 24430.0], [316.0, 24431.0], [314.0, 24431.0], [313.0, 24434.0], [312.0, 24434.0], [311.0, 24434.0], [305.0, 24444.0], [304.0, 22941.0], [307.0, 24436.0], [306.0, 24442.0], [310.0, 24434.0], [309.0, 24435.5], [334.0, 24406.0], [335.0, 24405.0], [333.0, 24407.0], [332.0, 24408.0], [331.0, 24409.0], [330.0, 24413.0], [329.0, 24415.0], [327.0, 24418.0], [321.0, 24426.0], [320.0, 24427.0], [323.0, 24423.0], [322.0, 24424.0], [326.0, 24421.0], [325.0, 24423.0], [324.0, 24423.0], [350.0, 24272.0], [351.0, 24271.0], [349.0, 24312.0], [348.0, 24319.0], [347.0, 24326.0], [346.0, 24335.0], [345.0, 24349.0], [344.0, 21878.0], [343.0, 21881.0], [336.0, 24402.0], [338.0, 24395.0], [337.0, 24401.0], [342.0, 24391.0], [341.0, 24395.333333333332], [355.0, 24185.0], [366.0, 12585.5], [365.0, 12126.0], [362.0, 12126.0], [360.0, 24024.0], [359.0, 24024.0], [358.0, 12128.0], [357.0, 13046.0], [356.0, 12130.0], [354.0, 24187.0], [353.0, 24189.0], [352.0, 24218.0], [382.0, 12123.0], [380.0, 12123.0], [379.0, 12583.0], [377.0, 12125.0], [376.0, 12123.0], [375.0, 13043.0], [374.0, 12125.5], [372.0, 12124.5], [370.0, 16397.666666666668], [369.0, 13044.0], [399.0, 12120.0], [397.0, 18070.5], [395.0, 18070.5], [394.0, 12351.25], [393.0, 24020.0], [388.0, 15783.999999999998], [415.0, 24012.0], [414.0, 12114.0], [413.0, 16563.333333333332], [410.0, 13034.0], [409.0, 15551.5], [405.0, 12425.0], [402.0, 12119.666666666666], [430.0, 12983.0], [431.0, 12983.0], [429.0, 12984.0], [428.0, 12067.0], [427.0, 12987.0], [426.0, 23966.0], [425.0, 18017.5], [423.0, 12988.0], [417.0, 12112.0], [416.0, 12113.0], [419.0, 12991.0], [418.0, 13022.0], [422.0, 12070.0], [421.0, 23968.0], [420.0, 12990.0], [446.0, 12975.0], [447.0, 12056.0], [445.0, 23955.0], [444.0, 12977.0], [443.0, 12061.0], [442.0, 23958.0], [441.0, 12519.5], [439.0, 12061.0], [432.0, 12983.0], [435.0, 12064.0], [434.0, 12982.5], [438.0, 12979.0], [437.0, 23959.0], [436.0, 12062.0], [461.0, 12050.0], [463.0, 17998.0], [460.0, 23947.0], [450.0, 12055.0], [449.0, 12055.0], [448.0, 12056.0], [459.0, 12968.0], [458.0, 12051.0], [457.0, 23949.0], [455.0, 12051.0], [454.0, 12970.0], [453.0, 23949.0], [452.0, 18002.5], [478.0, 23937.0], [477.0, 17990.5], [475.0, 12348.0], [472.0, 23939.0], [471.0, 23940.0], [470.0, 12965.0], [469.0, 12047.0], [468.0, 24209.0], [467.0, 23945.0], [464.0, 23946.0], [494.0, 23928.0], [495.0, 12030.0], [493.0, 23927.0], [492.0, 23929.0], [491.0, 23929.0], [490.0, 23930.0], [489.0, 19965.333333333332], [487.0, 23931.0], [486.0, 23934.0], [485.0, 18382.0], [499.0, 12945.0], [511.0, 12939.0], [510.0, 12635.0], [498.0, 23926.0], [497.0, 23926.0], [496.0, 13057.0], [507.0, 18431.5], [505.0, 12943.0], [504.0, 12024.0], [503.0, 12026.0], [502.0, 13054.0], [501.0, 12026.0], [500.0, 24451.0], [540.0, 13071.0], [542.0, 12917.0], [538.0, 23898.0], [536.0, 12006.0], [534.0, 12926.0], [530.0, 12010.0], [528.0, 12930.0], [526.0, 12525.5], [512.0, 12020.0], [518.0, 12477.5], [516.0, 20293.0], [524.0, 12932.0], [522.0, 12014.0], [520.0, 13044.0], [572.0, 18439.0], [574.0, 11976.0], [570.0, 12903.0], [568.0, 13056.0], [566.0, 12447.0], [564.0, 12906.0], [562.0, 11989.0], [560.0, 11989.0], [558.0, 12964.0], [544.0, 12971.5], [550.0, 13046.0], [546.0, 11997.0], [556.0, 11991.0], [554.0, 13020.0], [552.0, 12913.0], [602.0, 18358.5], [606.0, 12862.0], [600.0, 12869.5], [598.0, 12869.0], [596.0, 18625.5], [592.0, 13027.0], [588.0, 12876.0], [584.0, 12879.0], [582.0, 12939.0], [580.0, 14880.0], [578.0, 23865.0], [576.0, 11976.0], [636.0, 12823.0], [638.0, 12924.0], [634.0, 12885.0], [632.0, 12830.0], [630.0, 12943.0], [628.0, 12945.0], [626.0, 12848.0], [624.0, 12960.0], [622.0, 12581.0], [614.0, 12968.0], [618.0, 12967.0], [616.0, 12398.0], [668.0, 12897.0], [670.0, 12917.5], [666.0, 12912.0], [662.0, 12858.5], [660.0, 12805.0], [658.0, 12914.0], [656.0, 12806.333333333334], [648.0, 12917.0], [644.0, 16543.0], [640.0, 12811.0], [646.0, 12918.0], [700.0, 12914.0], [702.0, 12871.0], [698.0, 12764.0], [696.0, 12874.0], [694.0, 12918.0], [692.0, 11848.0], [690.0, 12923.0], [688.0, 12924.0], [686.0, 12774.0], [674.0, 12784.0], [672.0, 12938.0], [678.0, 12783.0], [676.0, 12784.0], [684.0, 12885.0], [680.0, 12887.0], [710.0, 13747.5], [734.0, 16460.333333333332], [730.0, 12883.0], [722.0, 12848.0], [718.0, 23723.0], [716.0, 12748.0], [714.0, 12749.0], [712.0, 12859.0], [708.0, 23730.0], [706.0, 14753.0], [704.0, 12869.0], [760.0, 12797.0], [766.0, 12836.0], [764.0, 12739.5], [762.0, 14681.0], [758.0, 12821.333333333334], [750.0, 23677.0], [742.0, 12715.0], [738.0, 12880.0], [748.0, 14697.0], [746.0, 12812.0], [744.0, 12868.5], [792.0, 12810.0], [796.0, 12808.0], [798.0, 12806.0], [794.0, 12809.0], [772.0, 12790.0], [774.0, 12789.0], [782.0, 12780.0], [770.0, 12806.333333333334], [768.0, 12792.0], [780.0, 12782.0], [778.0, 12783.0], [790.0, 12771.0], [828.0, 12763.5], [830.0, 12777.0], [816.0, 12749.0], [818.0, 12748.0], [826.0, 12786.5], [800.0, 12805.0], [804.0, 12802.0], [802.0, 12802.0], [806.0, 12800.0], [814.0, 12750.0], [812.0, 12751.0], [810.0, 12753.0], [808.0, 12797.5], [822.0, 12744.0], [820.0, 12790.0], [860.0, 12694.0], [848.0, 12747.0], [852.0, 12745.0], [862.0, 12736.0], [858.0, 12738.0], [856.0, 12696.0], [832.0, 12776.0], [834.0, 12769.0], [838.0, 12714.0], [846.0, 12708.0], [844.0, 12755.0], [842.0, 12757.0], [840.0, 12735.0], [854.0, 12741.0], [890.0, 21017.0], [894.0, 12646.0], [880.0, 12711.0], [882.0, 12711.0], [892.0, 20109.0], [888.0, 12688.0], [870.0, 12727.0], [868.0, 12731.0], [866.0, 12731.0], [864.0, 12689.0], [878.0, 12712.0], [876.0, 12725.0], [872.0, 12726.0], [886.0, 13630.5], [884.0, 14552.0], [898.0, 12642.0], [912.0, 10607.0], [924.0, 10597.0], [922.0, 10600.5], [896.0, 12644.0], [900.0, 19051.0], [902.0, 18041.0], [910.0, 10609.0], [908.0, 10611.0], [906.0, 10612.0], [904.0, 10614.0], [918.0, 10603.0], [916.0, 8762.0], [956.0, 7319.8], [958.0, 7310.0], [948.0, 15795.0], [944.0, 17029.0], [930.0, 10593.0], [942.0, 10567.0], [940.0, 10574.0], [936.0, 10588.0], [950.0, 14785.0], [946.0, 16806.0], [986.0, 16442.0], [990.0, 11533.0], [976.0, 13497.333333333334], [978.0, 12492.0], [980.0, 11539.0], [988.0, 6931.0], [984.0, 11534.0], [964.0, 11549.0], [972.0, 11546.0], [970.0, 14475.0], [968.0, 11549.0], [982.0, 11537.0], [1020.0, 16426.0], [1022.0, 16375.0], [1008.0, 11521.0], [1010.0, 11521.0], [1012.0, 16428.0], [1018.0, 11518.0], [1016.0, 6915.0], [998.0, 12479.0], [994.0, 11531.0], [1006.0, 14453.0], [1004.0, 14454.0], [1002.0, 11527.0], [1000.0, 11530.0], [1014.0, 11519.0], [1076.0, 6882.0], [1084.0, 6877.0], [1072.0, 16349.5], [1052.0, 16415.0], [1024.0, 11512.0], [1028.0, 16419.0], [1036.0, 11661.5], [1048.0, 12972.5], [1040.0, 13283.75], [1060.0, 13401.0], [1056.0, 14434.0], [1136.0, 16360.0], [1148.0, 14373.5], [1120.0, 16370.0], [1144.0, 18239.0], [1088.0, 6875.0], [1096.0, 13371.0], [1100.0, 11470.0], [1116.0, 16372.0], [1112.0, 16373.0], [1108.0, 19826.0], [1104.0, 18262.0], [1132.0, 14383.0], [1208.0, 12831.0], [1184.0, 14341.0], [1192.0, 11408.0], [1212.0, 11357.0], [1204.0, 11385.0], [1200.0, 14316.0], [1152.0, 14369.0], [1156.0, 14365.0], [1160.0, 11434.0], [1180.0, 16327.0], [1176.0, 14347.0], [1172.0, 14352.0], [1168.0, 15348.5], [1196.0, 16299.0], [1272.0, 18001.0], [1248.0, 11235.0], [1252.0, 14161.0], [1256.0, 16134.0], [1276.0, 10368.5], [1268.0, 16120.0], [1264.0, 6617.0], [1216.0, 11330.0], [1220.0, 14239.0], [1224.0, 11308.0], [1228.0, 11274.0], [1244.0, 13699.5], [1240.0, 13864.666666666666], [1232.0, 14188.0], [1260.0, 11376.5], [1328.0, 14068.0], [1340.0, 11575.0], [1312.0, 14096.0], [1316.0, 16075.0], [1332.0, 16044.0], [1308.0, 16080.0], [1288.0, 10361.0], [1292.0, 11194.0], [1304.0, 17967.0], [1300.0, 14114.0], [1296.0, 19546.0], [1324.0, 17936.0], [1320.0, 11161.0], [1400.0, 10047.5], [1404.0, 10863.0], [1376.0, 11331.0], [1380.0, 11329.0], [1392.0, 11321.0], [1372.0, 7870.0], [1348.0, 10895.0], [1352.0, 10894.0], [1368.0, 11572.5], [1364.0, 11338.0], [1388.0, 9701.0], [1384.0, 11101.0], [1456.0, 12209.0], [1468.0, 14278.0], [1440.0, 12727.0], [1464.0, 7820.0], [1408.0, 12490.5], [1416.0, 10857.0], [1420.0, 10856.0], [1436.0, 12220.0], [1432.0, 10847.0], [1428.0, 14300.0], [1452.0, 11287.0], [1444.0, 12217.0], [1520.0, 10487.0], [1532.0, 11947.0], [1512.0, 12253.666666666666], [1528.0, 11232.0], [1484.0, 12189.0], [1480.0, 12194.0], [1472.0, 11278.0], [1496.0, 7794.0], [1492.0, 11261.0], [1488.0, 12186.0], [1588.0, 13654.0], [1596.0, 14150.0], [1568.0, 10756.0], [1572.0, 11193.0], [1584.0, 12101.0], [1548.0, 11454.5], [1544.0, 11220.0], [1540.0, 12148.0], [1564.0, 12640.0], [1556.0, 12645.0], [1552.0, 11214.0], [1580.0, 12616.0], [1576.0, 14183.0], [1648.0, 11976.0], [1636.0, 14061.0], [1632.0, 12513.0], [1656.0, 11369.333333333334], [1612.0, 11127.0], [1600.0, 12070.0], [1628.0, 11085.0], [1620.0, 12037.0], [1616.0, 12050.0], [1644.0, 11978.0], [1640.0, 11217.666666666666], [1668.0, 10788.0], [1724.0, 11591.0], [1664.0, 11013.0], [1704.0, 13982.0], [1700.0, 13982.0], [1692.0, 12418.0], [1688.0, 6814.5], [1680.0, 10550.0], [1788.0, 11058.692307692309], [1776.0, 9326.5], [1772.0, 12365.25], [1796.0, 7508.0], [1792.0, 10597.75], [1908.0, 10179.5], [1888.0, 4079.0], [1892.0, 2008.0], [1912.0, 13640.0], [1868.0, 120.8], [1864.0, 121.5], [1860.0, 122.0], [1884.0, 6171.0], [1880.0, 120.16666666666667], [1876.0, 120.0], [1872.0, 121.0], [1932.0, 13628.0], [1976.0, 8588.5], [1972.0, 8983.0], [1956.0, 15040.0], [1960.0, 8212.0], [1980.0, 8976.0], [1928.0, 9007.0], [1948.0, 8218.0], [1944.0, 8610.0], [1940.0, 8224.0], [1936.0, 9002.0], [2040.0, 13515.0], [2044.0, 13514.0], [2016.0, 8926.0], [2020.0, 8924.0], [2024.0, 11947.0], [2028.0, 8916.0], [2032.0, 8513.0], [1984.0, 8973.0], [1988.0, 15017.0], [1992.0, 8190.0], [2008.0, 8950.0], [2004.0, 8181.0], [2160.0, 6968.0], [2120.0, 5730.0], [2128.0, 12688.0], [2136.0, 6300.75], [2072.0, 8864.0], [2064.0, 8871.0], [2056.0, 8878.0], [2048.0, 8885.0], [2104.0, 13451.0], [2096.0, 8068.0], [2088.0, 6507.0], [2080.0, 7300.0], [2272.0, 9223.0], [2288.0, 9210.0], [2264.0, 8190.5], [2296.0, 8169.0], [2200.0, 7832.0], [2184.0, 10971.0], [2232.0, 9241.0], [2224.0, 8207.0], [2216.0, 8210.0], [2320.0, 9517.666666666666], [2392.0, 7703.0], [2368.0, 7712.0], [2328.0, 9184.0], [2304.0, 7772.0], [2360.0, 8629.0], [2352.0, 8129.0], [2344.0, 9166.666666666666], [2336.0, 7753.0], [2528.0, 3911.0], [2544.0, 3904.0], [2496.0, 6853.0], [2504.0, 6834.0], [2520.0, 3915.0], [2448.0, 8185.666666666667], [2488.0, 7379.0], [2480.0, 6888.0], [2472.0, 6895.0], [2656.0, 3349.0], [2624.0, 3865.0], [2632.0, 3837.0], [2640.0, 3043.0], [2648.0, 3352.0], [2680.0, 3028.0], [2576.0, 3878.0], [2560.0, 3894.0], [2616.0, 3917.0], [2608.0, 4949.0], [2600.0, 4967.0], [2592.0, 4973.0], [2792.0, 2901.0], [2760.0, 3280.0], [2808.0, 3205.0], [2752.0, 3285.0], [2768.0, 3270.0], [2776.0, 3264.5], [2784.0, 3257.0], [2704.0, 3325.0], [2696.0, 3329.0], [2744.0, 3293.0], [2728.0, 3310.0], [2912.0, 1143.0], [2840.0, 2550.0], [2880.0, 1176.0], [2896.0, 1166.0], [2936.0, 1127.0], [2832.0, 2567.0], [2816.0, 2586.0], [2872.0, 1181.0], [2864.0, 2228.0], [2856.0, 2297.0], [2848.0, 2447.0], [2944.0, 1123.0], [2952.0, 1120.0], [3000.0, 10664.746442029153], [2968.0, 1105.0], [2976.0, 1098.0], [2161.0, 6967.0], [2121.0, 5728.0], [2129.0, 11087.0], [2169.0, 6702.666666666667], [2153.0, 4623.333333333334], [2145.0, 4080.5], [2073.0, 8863.0], [2065.0, 8869.0], [2049.0, 6540.0], [2105.0, 6484.0], [2097.0, 13463.0], [2289.0, 7784.0], [2297.0, 8686.5], [2249.0, 8522.0], [2257.0, 8061.0], [2273.0, 8182.0], [2201.0, 8222.0], [2177.0, 11216.5], [2233.0, 8206.5], [2209.0, 8302.0], [2409.0, 8081.0], [2369.0, 8100.0], [2377.0, 8778.0], [2385.0, 9129.0], [2393.0, 8092.0], [2401.0, 8608.0], [2313.0, 9180.0], [2361.0, 7721.0], [2353.0, 8124.0], [2345.0, 10183.0], [2337.0, 8142.0], [2545.0, 3903.0], [2553.0, 4173.25], [2497.0, 6851.0], [2513.0, 3918.0], [2521.0, 4468.5], [2537.0, 4461.0], [2529.0, 5330.0], [2481.0, 8927.0], [2465.0, 9460.0], [2665.0, 3189.5], [2657.0, 3036.0], [2633.0, 3837.0], [2641.0, 3355.0], [2649.0, 3040.0], [2681.0, 3340.0], [2577.0, 3877.0], [2569.0, 4436.5], [2617.0, 3915.0], [2593.0, 4971.0], [2809.0, 3204.0], [2785.0, 2944.0], [2761.0, 2967.0], [2753.0, 3284.0], [2769.0, 2958.0], [2777.0, 3261.0], [2713.0, 3215.0], [2697.0, 3015.0], [2689.0, 3337.0], [2745.0, 3293.0], [2737.0, 3296.5], [2729.0, 3310.0], [2721.0, 3159.0], [2833.0, 2564.0], [2921.0, 113.0], [2881.0, 1175.0], [2889.0, 1167.0], [2897.0, 1165.0], [2905.0, 1943.5], [2825.0, 2578.5], [2865.0, 1187.0], [2857.0, 2271.0], [2849.0, 2445.0], [2953.0, 1118.0], [2961.0, 1111.0], [2969.0, 1103.0], [2985.0, 1086.0], [2977.0, 1097.0], [1077.0, 6881.0], [1057.0, 6902.5], [1061.0, 16413.0], [1081.0, 12946.0], [1073.0, 6884.0], [1037.0, 13963.0], [1029.0, 14439.0], [1025.0, 18304.0], [1053.0, 11506.0], [1049.0, 14119.333333333334], [1045.0, 15851.5], [1065.0, 13957.5], [1145.0, 6843.0], [1149.0, 11444.0], [1121.0, 14388.0], [1125.0, 15376.5], [1129.0, 12550.0], [1141.0, 9147.5], [1137.0, 11452.0], [1101.0, 6868.0], [1097.0, 14402.0], [1093.0, 11475.0], [1089.0, 11477.0], [1117.0, 18256.0], [1105.0, 18262.0], [1133.0, 14383.0], [1205.0, 11385.0], [1209.0, 6761.0], [1213.0, 6749.0], [1189.0, 10852.0], [1185.0, 6808.0], [1165.0, 16340.5], [1161.0, 14362.0], [1157.0, 14833.5], [1153.0, 11439.0], [1173.0, 14350.0], [1169.0, 14358.0], [1193.0, 14337.0], [1221.0, 14240.0], [1265.0, 14148.0], [1277.0, 14131.0], [1273.0, 16116.0], [1217.0, 16232.0], [1245.0, 16153.0], [1241.0, 19612.0], [1237.0, 14182.0], [1233.0, 14188.0], [1261.0, 18016.0], [1253.0, 14161.0], [1337.0, 12961.0], [1313.0, 16075.0], [1317.0, 14093.0], [1321.0, 11159.0], [1341.0, 11573.0], [1333.0, 14062.0], [1329.0, 17930.0], [1281.0, 16110.0], [1293.0, 17986.0], [1309.0, 17962.0], [1305.0, 19532.0], [1301.0, 14082.0], [1297.0, 13641.5], [1325.0, 19501.0], [1397.0, 12243.0], [1393.0, 12245.0], [1405.0, 11314.0], [1377.0, 10879.0], [1401.0, 14314.0], [1345.0, 9524.5], [1353.0, 11344.0], [1357.0, 10893.5], [1373.0, 10880.0], [1369.0, 12260.0], [1365.0, 11337.0], [1389.0, 12247.0], [1385.0, 14323.0], [1381.0, 10876.0], [1465.0, 11282.0], [1449.0, 12214.0], [1441.0, 11293.0], [1445.0, 8861.0], [1421.0, 12737.0], [1417.0, 12231.0], [1413.0, 10858.5], [1409.0, 14310.0], [1437.0, 12220.0], [1433.0, 7127.0], [1429.0, 11301.0], [1425.0, 12227.0], [1453.0, 140952.0], [1485.0, 12190.0], [1533.0, 12154.0], [1525.0, 10733.666666666666], [1521.0, 12671.0], [1481.0, 12193.0], [1477.0, 10059.0], [1473.0, 11277.0], [1517.0, 12419.5], [1497.0, 12180.0], [1493.0, 12184.0], [1489.0, 12186.0], [1589.0, 14176.0], [1585.0, 14176.0], [1569.0, 14205.0], [1573.0, 11191.0], [1593.0, 11619.5], [1537.0, 12727.5], [1541.0, 14223.0], [1545.0, 11219.0], [1549.0, 11214.0], [1561.0, 9993.0], [1557.0, 11211.0], [1553.0, 11213.0], [1581.0, 12105.0], [1577.0, 10734.0], [1609.0, 13094.0], [1637.0, 11985.0], [1653.0, 12316.0], [1649.0, 12483.0], [1605.0, 11859.5], [1601.0, 12070.0], [1629.0, 12517.0], [1625.0, 13410.333333333334], [1621.0, 10662.0], [1617.0, 11115.0], [1641.0, 14058.0], [1693.0, 13984.0], [1721.0, 10531.0], [1681.0, 10991.0], [1677.0, 10854.0], [1673.0, 12332.0], [1669.0, 10561.0], [1665.0, 10788.0], [1789.0, 7512.0], [1801.0, 7456.0], [1797.0, 10970.0], [1909.0, 9016.0], [1917.0, 8237.0], [1889.0, 4078.0], [1893.0, 2006.0], [1913.0, 8239.0], [1905.0, 8243.25], [1865.0, 120.6], [1885.0, 6169.0], [1881.0, 120.0], [1877.0, 120.0], [1873.0, 121.0], [1933.0, 13628.0], [1953.0, 8992.0], [1961.0, 8212.0], [1969.0, 8595.5], [1921.0, 8623.5], [1949.0, 8217.0], [1945.0, 8998.0], [1941.0, 13624.0], [1937.0, 9001.0], [2041.0, 6549.0], [2017.0, 8150.0], [2021.0, 8923.0], [2025.0, 8919.0], [2029.0, 8130.0], [2045.0, 13513.0], [2033.0, 13526.0], [1985.0, 13597.0], [1989.0, 13591.0], [1993.0, 8964.5], [1997.0, 13589.0], [2013.0, 8560.5], [2009.0, 8561.5], [2005.0, 6609.0], [2162.0, 6966.0], [2122.0, 5728.0], [2114.0, 7650.666666666667], [2130.0, 12684.0], [2138.0, 5715.0], [2170.0, 5891.0], [2154.0, 91.0], [2058.0, 8100.5], [2050.0, 14933.0], [2106.0, 8824.0], [2098.0, 14888.0], [2082.0, 11169.0], [2282.0, 8176.0], [2242.0, 8205.0], [2250.0, 9234.0], [2290.0, 10214.0], [2202.0, 9256.0], [2194.0, 7932.0], [2178.0, 11926.0], [2234.0, 8550.666666666666], [2226.0, 8206.0], [2218.0, 8015.0], [2210.0, 8216.0], [2402.0, 10132.0], [2370.0, 7709.0], [2410.0, 7618.0], [2378.0, 9133.0], [2330.0, 7953.0], [2322.0, 7766.0], [2306.0, 9197.0], [2346.0, 9176.0], [2338.0, 9177.0], [2394.0, 8092.0], [2498.0, 7883.0], [2546.0, 3902.0], [2506.0, 3921.0], [2514.0, 3917.0], [2522.0, 5333.0], [2450.0, 7971.0], [2490.0, 6860.0], [2474.0, 8432.0], [2466.0, 7933.0], [2666.0, 3345.0], [2682.0, 3340.0], [2626.0, 3864.0], [2642.0, 3354.0], [2650.0, 3038.0], [2674.0, 3342.0], [2658.0, 3036.0], [2578.0, 3876.0], [2570.0, 4990.0], [2562.0, 3887.0], [2618.0, 3915.0], [2610.0, 4392.0], [2602.0, 4965.0], [2594.0, 4970.0], [2802.0, 3001.0], [2762.0, 2966.0], [2770.0, 3269.0], [2778.0, 2949.0], [2810.0, 2589.0], [2786.0, 2939.0], [2714.0, 3319.0], [2706.0, 3012.0], [2738.0, 2985.0], [2930.0, 112.0], [2890.0, 1167.0], [2906.0, 1152.0], [2938.0, 1126.0], [2914.0, 1141.5], [2842.0, 2453.0], [2834.0, 2561.0], [2818.0, 2586.0], [2874.0, 1180.0], [2858.0, 2271.0], [2986.0, 1084.0], [2954.0, 1117.0], [2962.0, 1110.0], [2978.0, 1095.0], [2163.0, 6965.0], [2123.0, 5725.0], [2139.0, 8056.0], [2171.0, 5891.0], [2155.0, 88.0], [2147.0, 6493.333333333333], [2075.0, 14199.0], [2067.0, 8482.0], [2059.0, 8098.0], [2051.0, 8881.0], [2107.0, 8824.0], [2099.0, 13462.0], [2091.0, 9303.333333333334], [2283.0, 7786.0], [2291.0, 8171.0], [2251.0, 10240.0], [2243.0, 8722.0], [2259.0, 8191.0], [2267.0, 8189.0], [2203.0, 7830.0], [2195.0, 7833.0], [2187.0, 8478.333333333334], [2179.0, 9550.0], [2235.0, 7816.0], [2219.0, 7818.0], [2211.0, 8215.0], [2427.0, 7602.0], [2411.0, 8006.0], [2379.0, 9133.0], [2371.0, 10141.0], [2387.0, 8178.666666666667], [2395.0, 8092.0], [2403.0, 10132.0], [2307.0, 7770.0], [2315.0, 10199.0], [2323.0, 9191.0], [2363.0, 10151.5], [2355.0, 8945.0], [2347.0, 8133.0], [2547.0, 3901.0], [2499.0, 8886.0], [2507.0, 5028.0], [2523.0, 3913.0], [2443.0, 10014.0], [2451.0, 8586.666666666666], [2491.0, 7378.0], [2483.0, 6883.0], [2475.0, 6894.0], [2467.0, 8939.0], [2683.0, 3339.0], [2627.0, 3864.0], [2643.0, 3042.0], [2651.0, 3350.0], [2659.0, 3346.0], [2579.0, 4984.0], [2563.0, 3886.0], [2619.0, 3912.0], [2611.0, 3835.0], [2803.0, 3208.0], [2755.0, 3127.0], [2771.0, 3268.0], [2779.0, 2947.0], [2795.0, 3108.3333333333335], [2715.0, 3317.0], [2707.0, 3167.5], [2699.0, 3014.5], [2731.0, 3310.0], [2931.0, 1131.0], [2883.0, 1174.0], [2899.0, 1163.5], [2907.0, 1151.0], [2939.0, 1125.0], [2915.0, 1834.0], [2843.0, 2453.0], [2827.0, 2578.0], [2819.0, 2585.0], [2867.0, 1186.0], [2851.0, 2381.0], [2947.0, 1122.0], [2963.0, 1109.0], [2971.0, 1102.5], [2987.0, 1081.0], [2979.0, 1092.0], [539.0, 12002.0], [541.0, 12919.0], [537.0, 12006.0], [519.0, 23916.0], [513.0, 23917.0], [535.0, 12925.0], [533.0, 12468.5], [531.0, 12009.0], [529.0, 12010.0], [527.0, 12931.0], [523.0, 12931.0], [521.0, 12015.0], [551.0, 12913.0], [573.0, 13005.0], [575.0, 23872.0], [569.0, 13014.0], [567.0, 11987.0], [563.0, 12907.0], [559.0, 12908.0], [555.0, 12910.0], [553.0, 11994.0], [549.0, 13067.0], [547.0, 11997.0], [545.0, 11997.0], [605.0, 12921.5], [607.0, 12862.0], [603.0, 11950.0], [583.0, 12994.0], [579.0, 12886.0], [577.0, 13045.0], [597.0, 13023.0], [595.0, 12983.0], [593.0, 12874.0], [591.0, 12471.0], [589.0, 12875.0], [587.0, 12420.5], [585.0, 11960.0], [637.0, 12820.0], [639.0, 12965.0], [635.0, 12830.0], [613.0, 12859.0], [611.0, 12456.25], [631.0, 12942.0], [629.0, 23813.0], [627.0, 12840.0], [625.0, 12959.0], [619.0, 12961.0], [617.0, 12966.0], [667.0, 12788.0], [671.0, 12896.0], [665.0, 12935.0], [647.0, 12808.0], [645.0, 12920.0], [641.0, 12812.0], [663.0, 11885.0], [659.0, 11885.0], [657.0, 24314.0], [655.0, 12806.0], [653.0, 12915.0], [651.0, 12348.5], [649.0, 12917.0], [701.0, 12915.0], [703.0, 12870.0], [699.0, 12763.0], [697.0, 23743.0], [695.0, 12765.0], [693.0, 12876.0], [691.0, 12920.0], [689.0, 12880.0], [683.0, 12928.5], [679.0, 12777.0], [677.0, 12937.0], [675.0, 12936.0], [673.0, 12785.0], [681.0, 11858.0], [731.0, 23707.0], [729.0, 13804.5], [711.0, 12859.0], [707.0, 12905.0], [705.0, 12912.0], [727.0, 12863.0], [725.0, 12843.5], [723.0, 12887.0], [721.0, 13812.5], [719.0, 12739.0], [717.0, 12854.0], [715.0, 12901.0], [713.0, 23728.0], [741.0, 12869.0], [765.0, 12836.0], [761.0, 12796.0], [759.0, 12839.0], [757.0, 20054.0], [755.0, 12851.0], [749.0, 12851.0], [747.0, 14697.0], [745.0, 12823.0], [739.0, 14713.0], [737.0, 20259.0], [797.0, 12764.0], [799.0, 12806.0], [785.0, 12724.0], [789.0, 12794.5], [787.0, 12816.0], [795.0, 12765.0], [793.0, 12809.0], [783.0, 12823.0], [771.0, 12835.0], [773.0, 12790.0], [775.0, 12827.0], [781.0, 12824.0], [779.0, 12783.0], [777.0, 12826.0], [791.0, 12814.0], [825.0, 12787.0], [831.0, 12734.0], [819.0, 12769.5], [829.0, 23604.0], [815.0, 12749.0], [801.0, 12762.0], [805.0, 12760.0], [813.0, 12750.0], [811.0, 12752.0], [809.0, 12797.0], [823.0, 12786.0], [821.0, 12747.0], [861.0, 12736.0], [863.0, 14577.0], [851.0, 18158.0], [849.0, 12747.0], [853.0, 12701.0], [859.0, 12738.0], [857.0, 12696.0], [847.0, 12747.0], [835.0, 12726.0], [837.0, 12767.0], [845.0, 12753.0], [843.0, 12755.0], [841.0, 12603.0], [855.0, 12697.0], [893.0, 12648.0], [895.0, 12645.0], [881.0, 12711.0], [883.0, 12711.0], [891.0, 20111.0], [871.0, 23553.0], [869.0, 12730.0], [867.0, 14574.0], [865.0, 12689.0], [879.0, 12712.0], [877.0, 12719.0], [875.0, 12682.0], [873.0, 12725.0], [921.0, 10601.0], [925.0, 10595.0], [927.0, 10594.5], [915.0, 9684.5], [913.0, 10607.0], [923.0, 10599.0], [911.0, 10608.0], [897.0, 12642.0], [899.0, 12640.0], [901.0, 19048.0], [903.0, 18038.0], [909.0, 10610.0], [907.0, 10613.0], [919.0, 10601.0], [917.0, 8762.0], [935.0, 9668.0], [959.0, 11549.0], [945.0, 17028.0], [957.0, 7310.0], [943.0, 10559.0], [929.0, 9672.0], [931.0, 8749.0], [933.0, 9669.5], [941.0, 10572.0], [939.0, 10575.0], [937.0, 10577.0], [951.0, 14783.0], [949.0, 15793.0], [947.0, 16803.0], [989.0, 14462.0], [991.0, 14461.0], [979.0, 16451.0], [981.0, 14468.0], [987.0, 14463.0], [967.0, 15466.5], [965.0, 11549.0], [963.0, 14477.666666666666], [961.0, 16457.0], [973.0, 14475.0], [971.0, 16455.0], [969.0, 14477.0], [983.0, 11538.0], [1017.0, 16425.0], [1023.0, 13412.0], [1009.0, 11522.0], [1011.0, 11521.0], [1013.0, 6916.0], [1019.0, 6913.0], [999.0, 11530.0], [997.0, 11530.0], [995.0, 11531.0], [993.0, 15450.5], [1007.0, 13419.0], [1005.0, 11524.0], [1003.0, 16435.0], [1001.0, 16438.0], [1015.0, 6915.0], [1082.0, 14410.0], [1086.0, 12943.0], [1078.0, 6881.0], [1026.0, 11513.0], [1030.0, 11509.0], [1034.0, 11509.0], [1050.0, 18300.0], [1042.0, 11660.5], [1070.0, 12741.333333333334], [1066.0, 14427.0], [1142.0, 6844.0], [1146.0, 13342.0], [1138.0, 18244.0], [1118.0, 14391.0], [1090.0, 16385.0], [1094.0, 15375.333333333334], [1098.0, 6869.0], [1114.0, 11464.5], [1110.0, 11465.5], [1134.0, 16360.0], [1130.0, 16363.0], [1126.0, 11457.0], [1210.0, 18153.0], [1214.0, 14281.0], [1190.0, 6807.0], [1186.0, 11411.0], [1194.0, 14336.0], [1206.0, 13280.0], [1202.0, 12851.5], [1182.0, 11417.5], [1154.0, 14365.0], [1158.0, 14364.0], [1166.0, 14358.0], [1162.0, 14361.0], [1178.0, 15337.5], [1170.0, 11423.0], [1198.0, 15309.5], [1274.0, 14135.0], [1278.0, 6599.0], [1250.0, 14163.0], [1254.0, 16137.0], [1258.0, 12687.5], [1270.0, 12675.0], [1266.0, 14143.0], [1246.0, 16145.0], [1218.0, 14252.0], [1222.0, 11310.0], [1226.0, 13762.0], [1230.0, 11412.0], [1242.0, 6646.0], [1234.0, 11257.0], [1262.0, 16132.0], [1330.0, 14065.0], [1342.0, 10565.0], [1318.0, 11164.0], [1338.0, 12169.0], [1286.0, 14385.75], [1282.0, 12665.0], [1290.0, 13650.5], [1294.0, 14122.0], [1306.0, 14101.0], [1302.0, 14113.0], [1326.0, 11141.0], [1322.0, 11147.0], [1398.0, 7856.0], [1406.0, 12745.0], [1378.0, 14329.0], [1402.0, 12240.0], [1350.0, 13562.5], [1358.0, 12268.0], [1366.0, 10887.0], [1362.0, 12127.333333333334], [1386.0, 11323.0], [1382.0, 12251.0], [1414.0, 12742.0], [1466.0, 12203.0], [1462.0, 11900.0], [1458.0, 8854.0], [1438.0, 12220.0], [1410.0, 7848.0], [1418.0, 12231.0], [1422.0, 7133.0], [1430.0, 10849.0], [1426.0, 12227.0], [1454.0, 12211.0], [1450.0, 10839.0], [1526.0, 11234.0], [1522.0, 11236.0], [1534.0, 12154.0], [1510.0, 11947.0], [1530.0, 12409.0], [1486.0, 11265.0], [1482.0, 12193.0], [1478.0, 8842.0], [1474.0, 14275.0], [1494.0, 11260.0], [1490.0, 12185.0], [1518.0, 12164.0], [1514.0, 11959.5], [1590.0, 11158.0], [1574.0, 11189.0], [1598.0, 12074.5], [1570.0, 11194.0], [1546.0, 11218.0], [1542.0, 12146.0], [1538.0, 11228.0], [1562.0, 12640.0], [1558.0, 12134.0], [1554.0, 11213.0], [1582.0, 14177.0], [1614.0, 13342.5], [1650.0, 11972.0], [1658.0, 10563.5], [1662.0, 11013.5], [1634.0, 11542.5], [1610.0, 12054.0], [1606.0, 12574.0], [1602.0, 12068.0], [1630.0, 14081.0], [1626.0, 12014.0], [1622.0, 11113.0], [1646.0, 11769.5], [1674.0, 11004.0], [1718.0, 6812.5], [1670.0, 11005.0], [1666.0, 11013.0], [1710.0, 6812.0], [1702.0, 6813.0], [1690.0, 9616.0], [1682.0, 10989.0], [1790.0, 9318.666666666666], [1854.0, 122.0], [1798.0, 10969.0], [1794.0, 11898.0], [1910.0, 9016.0], [1914.0, 8238.0], [1890.0, 3069.0], [1894.0, 13649.0], [1898.0, 8248.0], [1906.0, 13648.0], [1866.0, 121.0], [1858.0, 121.33333333333333], [1886.0, 5161.0], [1882.0, 119.87499999999999], [1982.0, 11288.0], [1958.0, 11301.5], [1954.0, 8216.0], [1962.0, 8210.0], [1966.0, 6642.0], [1978.0, 8588.5], [1974.0, 8589.5], [1922.0, 8233.0], [1926.0, 8749.0], [1930.0, 9006.0], [1950.0, 8217.0], [1946.0, 13621.0], [1942.0, 13622.0], [2046.0, 8112.0], [2018.0, 8926.0], [2022.0, 14972.0], [2030.0, 8903.0], [2042.0, 8114.0], [2038.0, 9661.0], [2034.0, 8901.0], [1986.0, 8971.0], [1990.0, 8966.0], [1994.0, 13590.0], [1998.0, 11276.5], [2014.0, 8947.0], [2148.0, 8054.0], [2164.0, 13014.0], [2116.0, 11823.0], [2124.0, 5724.0], [2140.0, 5714.0], [2156.0, 13023.0], [2076.0, 8862.0], [2068.0, 8868.0], [2108.0, 6482.0], [2100.0, 6496.0], [2084.0, 8856.0], [2292.0, 8171.0], [2276.0, 9547.666666666666], [2244.0, 8722.0], [2260.0, 7996.0], [2252.0, 8197.0], [2268.0, 8880.0], [2300.0, 8486.0], [2284.0, 9211.0], [2204.0, 9254.0], [2188.0, 9260.0], [2180.0, 9550.0], [2228.0, 9243.0], [2220.0, 8208.0], [2212.0, 9246.0], [2404.0, 9124.0], [2428.0, 8854.333333333334], [2332.0, 10189.5], [2364.0, 8109.0], [2356.0, 8113.0], [2348.0, 8132.0], [2340.0, 10183.0], [2396.0, 9127.0], [2556.0, 3895.0], [2500.0, 8884.0], [2508.0, 3920.0], [2516.0, 4626.5], [2524.0, 3913.0], [2548.0, 3897.0], [2540.0, 3905.5], [2532.0, 3909.3333333333335], [2452.0, 8894.5], [2492.0, 8900.0], [2484.0, 7915.0], [2476.0, 6892.0], [2668.0, 3031.0], [2628.0, 3861.0], [2636.0, 3148.3333333333335], [2676.0, 3186.0], [2588.0, 4314.0], [2580.0, 3874.0], [2572.0, 3881.0], [2620.0, 3887.0], [2604.0, 4957.0], [2596.0, 4969.0], [2804.0, 3207.0], [2764.0, 2965.0], [2772.0, 3267.0], [2796.0, 3211.0], [2700.0, 3327.0], [2732.0, 3310.0], [2932.0, 1128.0], [2940.0, 1125.0], [2900.0, 1162.0], [2908.0, 2728.0], [2844.0, 2452.0], [2836.0, 2560.0], [2828.0, 2574.0], [2820.0, 2584.0], [2876.0, 1179.5], [2860.0, 2269.0], [2852.0, 2380.0], [2956.0, 1116.5], [2964.0, 1110.0], [2149.0, 8054.0], [2157.0, 6196.0], [2165.0, 11588.0], [2117.0, 1508.0], [2125.0, 14115.0], [2133.0, 5715.0], [2077.0, 8860.0], [2069.0, 8865.0], [2061.0, 8486.5], [2053.0, 10022.0], [2101.0, 8060.0], [2093.0, 13471.5], [2085.0, 6512.0], [2293.0, 9205.0], [2245.0, 8204.0], [2253.0, 9233.0], [2301.0, 7968.0], [2285.0, 9211.5], [2205.0, 7829.0], [2197.0, 8740.5], [2189.0, 8225.0], [2181.0, 4925.0], [2213.0, 8211.0], [2413.0, 9041.0], [2373.0, 9134.0], [2381.0, 8615.5], [2421.0, 8390.166666666668], [2405.0, 9123.0], [2309.0, 7770.5], [2325.0, 9688.0], [2333.0, 7757.0], [2365.0, 8108.0], [2357.0, 9148.0], [2541.0, 3906.0], [2549.0, 5005.0], [2501.0, 6841.0], [2509.0, 3921.0], [2517.0, 3916.0], [2525.0, 3911.0], [2533.0, 3909.0], [2437.0, 10014.0], [2453.0, 9266.833333333334], [2493.0, 6856.0], [2477.0, 6891.0], [2661.0, 3035.0], [2677.0, 3342.0], [2645.0, 3197.5], [2685.0, 3338.5], [2669.0, 3032.0], [2589.0, 3870.0], [2573.0, 3881.0], [2565.0, 3885.0], [2621.0, 3887.0], [2613.0, 3834.5], [2605.0, 4957.0], [2597.0, 4969.0], [2797.0, 3210.0], [2789.0, 3059.0], [2757.0, 3126.5], [2773.0, 3267.0], [2813.0, 2588.3333333333335], [2709.0, 3322.0], [2701.0, 3014.0], [2693.0, 3257.5], [2749.0, 3229.6], [2733.0, 3246.4], [2725.0, 3310.0], [2941.0, 1124.0], [2885.0, 1173.5], [2901.0, 1161.0], [2909.0, 2727.0], [2917.0, 117.0], [2845.0, 2451.0], [2829.0, 2571.0], [2821.0, 2583.0], [2869.0, 1183.0], [2861.0, 2268.0], [2853.0, 2379.0], [2965.0, 1107.0], [2949.0, 1120.0], [2957.0, 1115.0], [2973.0, 1100.0], [2989.0, 1079.0], [2981.0, 1092.0], [1075.0, 11486.0], [1083.0, 6878.0], [1087.0, 13375.0], [1059.0, 14908.0], [1063.0, 11503.0], [1079.0, 11481.0], [1031.0, 6906.0], [1027.0, 6909.0], [1055.0, 11505.0], [1051.0, 6904.0], [1067.0, 11490.0], [1139.0, 11451.0], [1151.0, 13897.5], [1123.0, 10620.0], [1127.0, 11456.0], [1131.0, 11454.0], [1143.0, 11446.0], [1103.0, 14868.0], [1099.0, 11471.0], [1095.0, 13371.0], [1119.0, 14391.0], [1115.0, 18255.0], [1111.0, 18258.0], [1107.0, 13346.0], [1135.0, 11451.0], [1163.0, 14360.0], [1191.0, 11408.0], [1215.0, 16253.0], [1211.0, 6754.0], [1159.0, 11434.0], [1183.0, 11416.0], [1179.0, 11418.0], [1175.0, 13875.5], [1171.0, 19781.0], [1199.0, 11389.0], [1195.0, 13291.0], [1267.0, 14142.0], [1279.0, 17994.0], [1251.0, 15152.0], [1271.0, 6607.0], [1247.0, 14164.0], [1219.0, 18108.0], [1223.0, 14237.0], [1231.0, 11258.0], [1227.0, 6698.0], [1235.0, 14184.0], [1263.0, 6620.0], [1255.0, 14156.0], [1339.0, 12164.0], [1343.0, 10563.0], [1315.0, 11165.0], [1319.0, 11164.0], [1323.0, 11144.0], [1335.0, 14062.5], [1331.0, 16044.0], [1311.0, 11168.0], [1291.0, 11196.0], [1307.0, 14099.0], [1303.0, 19542.0], [1327.0, 11141.0], [1351.0, 12778.0], [1403.0, 14315.0], [1379.0, 11330.0], [1395.0, 13283.0], [1375.0, 12048.0], [1347.0, 8544.0], [1355.0, 11806.0], [1359.0, 8911.0], [1371.0, 12259.0], [1363.0, 14339.0], [1391.0, 9236.5], [1463.0, 12208.0], [1467.0, 11278.0], [1471.0, 12585.666666666666], [1443.0, 11292.0], [1447.0, 11575.0], [1459.0, 12463.5], [1423.0, 14303.0], [1419.0, 11306.0], [1415.0, 7137.0], [1411.0, 14308.0], [1439.0, 12219.0], [1435.0, 11759.5], [1431.0, 11299.0], [1427.0, 11301.0], [1455.0, 11286.0], [1451.0, 12720.0], [1483.0, 12191.0], [1487.0, 11262.0], [1535.0, 12663.0], [1527.0, 11234.0], [1479.0, 12195.0], [1475.0, 11274.0], [1515.0, 12166.0], [1511.0, 11715.5], [1495.0, 11257.0], [1491.0, 11262.0], [1591.0, 12082.0], [1595.0, 9888.0], [1599.0, 12582.0], [1571.0, 14193.0], [1575.0, 14184.0], [1567.0, 11992.666666666666], [1539.0, 11226.0], [1543.0, 14220.0], [1551.0, 12139.0], [1559.0, 11208.0], [1555.0, 14212.0], [1583.0, 14177.0], [1579.0, 11898.5], [1615.0, 11125.0], [1651.0, 14041.0], [1659.0, 10563.0], [1663.0, 10564.0], [1635.0, 7602.0], [1611.0, 7666.0], [1607.0, 12065.0], [1603.0, 12576.0], [1631.0, 11080.0], [1627.0, 12011.0], [1619.0, 11576.0], [1647.0, 10601.0], [1643.0, 13017.0], [1679.0, 10777.0], [1723.0, 6811.0], [1711.0, 10533.0], [1699.0, 12417.0], [1695.0, 6814.0], [1791.0, 10780.666666666666], [1787.0, 10375.761904761903], [1775.0, 12411.0], [1855.0, 122.33333333333333], [1799.0, 11856.0], [1795.0, 11895.0], [1915.0, 9014.0], [1919.0, 11325.0], [1891.0, 3063.0], [1895.0, 9024.0], [1911.0, 8240.0], [1907.0, 10564.666666666666], [1887.0, 5160.0], [1859.0, 121.0], [1863.0, 121.0], [1871.0, 121.0], [1867.0, 121.0], [1883.0, 119.0], [1879.0, 120.0], [1875.0, 120.375], [1979.0, 13600.0], [1971.0, 13608.0], [1983.0, 8974.0], [1955.0, 13616.0], [1959.0, 8988.0], [1963.0, 13609.0], [1967.0, 10266.666666666666], [1951.0, 15041.0], [1923.0, 9007.0], [1927.0, 13632.0], [1931.0, 8227.0], [1935.0, 7443.0], [1947.0, 8996.0], [1939.0, 14338.5], [2043.0, 8889.0], [2047.0, 8887.0], [2019.0, 8924.0], [2027.0, 10843.5], [2039.0, 13522.0], [2035.0, 8900.0], [2015.0, 13554.0], [1987.0, 13593.0], [1995.0, 8965.0], [1999.0, 8958.0], [2011.0, 8562.0], [2007.0, 13574.0], [2003.0, 11075.5], [2166.0, 6187.0], [2174.0, 8973.666666666666], [2118.0, 1509.0], [2126.0, 5722.0], [2158.0, 11596.0], [2150.0, 9196.5], [2078.0, 8860.0], [2054.0, 8879.0], [2102.0, 8060.0], [2094.0, 8846.0], [2086.0, 6512.0], [2278.0, 9212.0], [2206.0, 8218.0], [2294.0, 9205.0], [2302.0, 7773.0], [2246.0, 8721.5], [2286.0, 7785.0], [2198.0, 8222.0], [2190.0, 7834.0], [2182.0, 4923.0], [2238.0, 8205.0], [2222.0, 8530.5], [2214.0, 8211.0], [2334.0, 7755.0], [2326.0, 8149.0], [2390.0, 9454.0], [2382.0, 9133.0], [2406.0, 9119.0], [2318.0, 9695.0], [2310.0, 8160.0], [2366.0, 8108.0], [2358.0, 10154.0], [2350.0, 7935.5], [2342.0, 8141.0], [2398.0, 7962.333333333333], [2558.0, 4448.5], [2502.0, 6841.0], [2510.0, 3918.0], [2526.0, 3912.0], [2542.0, 5012.0], [2534.0, 3908.0], [2446.0, 8992.0], [2494.0, 6855.0], [2478.0, 6889.0], [2470.0, 7586.666666666667], [2662.0, 3034.0], [2646.0, 3041.0], [2654.0, 3245.3333333333335], [2670.0, 3343.5], [2590.0, 4975.0], [2582.0, 4981.0], [2574.0, 3879.0], [2614.0, 3920.0], [2606.0, 4956.0], [2806.0, 3051.5], [2758.0, 3282.0], [2774.0, 3267.0], [2782.0, 2946.0], [2790.0, 3215.0], [2710.0, 3322.5], [2694.0, 3331.0], [2750.0, 3289.0], [2742.0, 3216.0], [2734.0, 3309.0], [2934.0, 1128.0], [2846.0, 2450.0], [2886.0, 1169.0], [2902.0, 1154.0], [2910.0, 1146.0], [2942.0, 1123.0], [2838.0, 2559.0], [2830.0, 2571.0], [2822.0, 2582.0], [2878.0, 1177.0], [2862.0, 2267.0], [2854.0, 2299.0], [2958.0, 1113.0], [2966.0, 1107.0], [2071.0, 8866.0], [2159.0, 11596.0], [2175.0, 5882.0], [2119.0, 5731.0], [2135.0, 5715.0], [2143.0, 108.0], [2063.0, 11896.5], [2055.0, 14928.0], [2103.0, 14878.0], [2095.0, 8068.0], [2087.0, 8851.0], [2287.0, 10217.0], [2303.0, 9197.0], [2247.0, 7809.0], [2255.0, 9226.0], [2263.0, 8707.5], [2271.0, 8748.333333333334], [2279.0, 9211.5], [2183.0, 4922.0], [2239.0, 7815.0], [2231.0, 8723.0], [2215.0, 8210.0], [2407.0, 7692.0], [2415.0, 8005.0], [2375.0, 10141.0], [2383.0, 7707.0], [2399.0, 7700.0], [2367.0, 9141.0], [2311.0, 9194.0], [2319.0, 8157.0], [2335.0, 9178.0], [2351.0, 9166.0], [2343.0, 7750.0], [2535.0, 3908.0], [2559.0, 5003.0], [2503.0, 6838.0], [2511.0, 3919.0], [2527.0, 3912.0], [2495.0, 7889.0], [2463.0, 8979.599999999999], [2487.0, 7379.0], [2471.0, 6896.0], [2671.0, 3343.0], [2687.0, 3182.0], [2631.0, 3852.3333333333335], [2639.0, 3356.0], [2647.0, 3041.0], [2679.0, 3184.5], [2663.0, 3034.0], [2591.0, 4974.0], [2583.0, 3873.0], [2575.0, 4985.0], [2567.0, 3883.5], [2623.0, 3866.0], [2615.0, 3919.0], [2607.0, 4956.0], [2599.0, 4968.0], [2799.0, 2898.0], [2815.0, 2588.0], [2759.0, 3281.0], [2767.0, 3275.0], [2807.0, 2895.0], [2791.0, 3058.5], [2719.0, 3237.0], [2703.0, 3325.5], [2695.0, 3331.0], [2751.0, 3286.0], [2735.0, 3303.0], [2727.0, 3153.5], [2935.0, 1127.0], [2943.0, 1123.0], [2887.0, 1169.0], [2903.0, 1154.0], [2911.0, 1143.0], [2847.0, 2449.0], [2839.0, 2559.0], [2831.0, 2569.0], [2823.0, 2580.0], [2871.0, 1182.0], [2863.0, 2229.0], [2855.0, 2298.0], [2951.0, 1119.0], [2959.0, 1111.0], [2967.0, 1106.0], [2975.0, 1098.0], [2983.0, 1090.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2872.0427350427426, 11208.908490028452]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1730.4, "minX": 1.68320568E12, "maxY": 105634.08333333333, "series": [{"data": [[1.68320598E12, 12126.916666666666], [1.6832058E12, 105634.08333333333], [1.68320592E12, 67388.43333333333], [1.68320574E12, 84792.53333333334], [1.68320604E12, 2490.8], [1.68320586E12, 69199.15], [1.68320568E12, 70647.86666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68320598E12, 9517.2], [1.6832058E12, 73508.4], [1.68320592E12, 49114.8], [1.68320574E12, 60740.4], [1.68320604E12, 1730.4], [1.68320586E12, 48837.6], [1.68320568E12, 50610.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68320604E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 5024.175645630251, "minX": 1.68320568E12, "maxY": 94564.71359223302, "series": [{"data": [[1.68320598E12, 17021.32921447484], [1.6832058E12, 11491.637450199167], [1.68320592E12, 5024.175645630251], [1.68320574E12, 17464.790582403897], [1.68320604E12, 94564.71359223302], [1.68320586E12, 8554.824621733138], [1.68320568E12, 7890.110247933863]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68320604E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 5024.168291431509, "minX": 1.68320568E12, "maxY": 94564.70873786406, "series": [{"data": [[1.68320598E12, 17021.323036187106], [1.6832058E12, 11060.955378486015], [1.68320592E12, 5024.168291431509], [1.68320574E12, 17171.120749001893], [1.68320604E12, 94564.70873786406], [1.68320586E12, 8532.608665749683], [1.68320568E12, 7708.584958677699]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68320604E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.4624889673433362, "minX": 1.68320568E12, "maxY": 8133.4201479794465, "series": [{"data": [[1.68320598E12, 0.4624889673433362], [1.6832058E12, 8133.4201479794465], [1.68320592E12, 271.87959637420846], [1.68320574E12, 2153.9726008536386], [1.68320604E12, 0.5145631067961169], [1.68320586E12, 2535.7998624484158], [1.68320568E12, 155.2482644628098]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68320604E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 17.0, "minX": 1.68320568E12, "maxY": 196124.0, "series": [{"data": [[1.68320598E12, 68669.0], [1.6832058E12, 163033.0], [1.68320592E12, 140952.0], [1.68320574E12, 100355.0], [1.68320604E12, 100127.0], [1.68320586E12, 196124.0], [1.68320568E12, 54261.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68320598E12, 24428.2], [1.6832058E12, 12980.0], [1.68320592E12, 13983.0], [1.68320574E12, 58970.40000000018], [1.68320604E12, 100123.0], [1.68320586E12, 18583.0], [1.68320568E12, 20465.800000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68320598E12, 64378.72000000006], [1.6832058E12, 136420.96], [1.68320592E12, 33317.52], [1.68320574E12, 100174.68], [1.68320604E12, 100126.0], [1.68320586E12, 100163.7], [1.68320568E12, 52192.74]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68320598E12, 43223.29999999999], [1.6832058E12, 128805.4], [1.68320592E12, 16005.599999999999], [1.68320574E12, 81259.4], [1.68320604E12, 100124.0], [1.68320586E12, 66801.0], [1.68320568E12, 27649.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68320598E12, 6595.0], [1.6832058E12, 17.0], [1.68320592E12, 28.0], [1.68320574E12, 19.0], [1.68320604E12, 64003.0], [1.68320586E12, 21.0], [1.68320568E12, 21.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68320598E12, 12924.0], [1.6832058E12, 119.0], [1.68320592E12, 214.0], [1.68320574E12, 13028.0], [1.68320604E12, 100042.5], [1.68320586E12, 111.0], [1.68320568E12, 191.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68320604E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 133742.5, "series": [{"data": [[2.0, 56051.5], [3.0, 54196.0], [4.0, 38909.0], [5.0, 10267.0], [6.0, 85.0], [7.0, 14562.0], [8.0, 2306.0], [9.0, 10516.0], [11.0, 66572.0], [12.0, 11740.0], [13.0, 9463.0], [14.0, 6280.0], [15.0, 51175.5], [16.0, 18262.0], [17.0, 54967.0], [18.0, 33306.5], [19.0, 27.0], [20.0, 3865.0], [22.0, 14876.5], [23.0, 7373.0], [25.0, 9851.0], [29.0, 100034.0], [31.0, 13869.5], [37.0, 5724.0], [38.0, 13276.0], [39.0, 6894.0], [42.0, 8748.5], [43.0, 5081.0], [45.0, 55.0], [48.0, 2380.5], [50.0, 1169.0], [55.0, 3233.5], [57.0, 32316.0], [59.0, 1111.0], [61.0, 4481.0], [69.0, 7323.0], [74.0, 2358.0], [79.0, 95.0], [77.0, 8895.0], [76.0, 110.0], [80.0, 9121.5], [82.0, 14227.5], [83.0, 107.5], [91.0, 76.0], [89.0, 5107.0], [93.0, 14990.5], [96.0, 100016.0], [98.0, 85.0], [102.0, 1728.0], [100.0, 268.0], [104.0, 10161.5], [107.0, 1202.0], [111.0, 172.0], [109.0, 3912.0], [112.0, 74.0], [113.0, 91.0], [114.0, 103.0], [115.0, 77.0], [119.0, 1219.0], [117.0, 98.0], [118.0, 76.0], [116.0, 67876.0], [121.0, 96.0], [122.0, 99.0], [120.0, 228.0], [123.0, 89.0], [127.0, 2769.0], [126.0, 90.0], [131.0, 9071.0], [135.0, 18590.0], [130.0, 3773.0], [134.0, 142.0], [140.0, 6521.0], [138.0, 9207.5], [142.0, 14759.0], [139.0, 84.0], [148.0, 19700.5], [150.0, 16893.0], [151.0, 103.0], [144.0, 100141.5], [147.0, 90.0], [154.0, 119.0], [158.0, 8594.0], [164.0, 5146.0], [163.0, 106.0], [168.0, 98.0], [174.0, 106.0], [178.0, 17531.0], [176.0, 3274.5], [189.0, 96.0], [191.0, 5790.0], [207.0, 119.0], [216.0, 6480.5], [220.0, 167.0], [217.0, 92.0], [230.0, 93.0], [231.0, 107.0], [225.0, 8926.0], [238.0, 91.0], [236.0, 80.5], [237.0, 128.0], [235.0, 77.0], [234.0, 101.0], [233.0, 107.0], [242.0, 8946.0], [246.0, 144.0], [245.0, 113.0], [240.0, 89.0], [241.0, 87.0], [252.0, 98.0], [251.0, 13286.0], [270.0, 10276.0], [263.0, 93.0], [286.0, 12841.0], [274.0, 15253.0], [287.0, 71.0], [279.0, 93.0], [301.0, 12880.0], [309.0, 7797.0], [312.0, 13553.0], [305.0, 81.0], [324.0, 17613.0], [323.0, 100.0], [330.0, 14248.0], [338.0, 11923.0], [344.0, 107.0], [346.0, 112.5], [351.0, 149.0], [365.0, 21807.0], [355.0, 125.0], [381.0, 205.0], [393.0, 13963.0], [386.0, 14097.5], [404.0, 82.0], [431.0, 98.0], [433.0, 9238.0], [476.0, 15355.0], [472.0, 108.0], [536.0, 11253.0], [564.0, 17858.0], [548.0, 12855.5], [607.0, 13204.0], [653.0, 13866.0], [703.0, 168.0], [1.0, 2894.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[270.0, 103648.0], [2.0, 64284.5], [69.0, 51313.0], [274.0, 52334.0], [301.0, 103202.5], [154.0, 109662.0], [93.0, 43904.0], [404.0, 66161.0], [230.0, 103666.0], [476.0, 10720.0], [120.0, 54857.0], [127.0, 133742.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 703.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100141.5, "series": [{"data": [[2.0, 56051.5], [3.0, 54196.0], [4.0, 38909.0], [5.0, 10267.0], [6.0, 85.0], [7.0, 14562.0], [8.0, 2306.0], [9.0, 10516.0], [11.0, 66572.0], [12.0, 11740.0], [13.0, 9463.0], [14.0, 6280.0], [15.0, 51175.5], [16.0, 18262.0], [17.0, 54967.0], [18.0, 33306.5], [19.0, 27.0], [20.0, 3865.0], [22.0, 14876.5], [23.0, 7373.0], [25.0, 9851.0], [29.0, 100034.0], [31.0, 13869.5], [37.0, 5724.0], [38.0, 13276.0], [39.0, 6894.0], [42.0, 8748.5], [43.0, 5081.0], [45.0, 55.0], [48.0, 2380.5], [50.0, 1169.0], [55.0, 3233.5], [57.0, 32316.0], [59.0, 1111.0], [61.0, 4481.0], [69.0, 7323.0], [74.0, 2358.0], [79.0, 95.0], [77.0, 8895.0], [76.0, 110.0], [80.0, 9121.5], [82.0, 14227.5], [83.0, 107.5], [91.0, 76.0], [89.0, 5107.0], [93.0, 14990.5], [96.0, 100016.0], [98.0, 85.0], [102.0, 1728.0], [100.0, 268.0], [104.0, 10161.5], [107.0, 1202.0], [111.0, 172.0], [109.0, 3912.0], [112.0, 74.0], [113.0, 91.0], [114.0, 103.0], [115.0, 77.0], [119.0, 1219.0], [117.0, 98.0], [118.0, 76.0], [116.0, 67876.0], [121.0, 96.0], [122.0, 99.0], [120.0, 228.0], [123.0, 89.0], [127.0, 2769.0], [126.0, 90.0], [131.0, 9071.0], [135.0, 18590.0], [130.0, 3773.0], [134.0, 142.0], [140.0, 6521.0], [138.0, 9207.5], [142.0, 14759.0], [139.0, 84.0], [148.0, 19700.5], [150.0, 16893.0], [151.0, 103.0], [144.0, 100141.5], [147.0, 90.0], [154.0, 119.0], [158.0, 8594.0], [164.0, 5146.0], [163.0, 106.0], [168.0, 98.0], [174.0, 106.0], [178.0, 17531.0], [176.0, 3274.5], [189.0, 96.0], [191.0, 5790.0], [207.0, 119.0], [216.0, 6480.5], [220.0, 167.0], [217.0, 92.0], [230.0, 93.0], [231.0, 107.0], [225.0, 8926.0], [238.0, 91.0], [236.0, 80.5], [237.0, 128.0], [235.0, 77.0], [234.0, 101.0], [233.0, 107.0], [242.0, 8946.0], [246.0, 144.0], [245.0, 113.0], [240.0, 89.0], [241.0, 87.0], [252.0, 98.0], [251.0, 13286.0], [270.0, 10276.0], [263.0, 93.0], [286.0, 12841.0], [274.0, 15253.0], [287.0, 71.0], [279.0, 93.0], [301.0, 12880.0], [309.0, 7797.0], [312.0, 13553.0], [305.0, 81.0], [324.0, 17613.0], [323.0, 100.0], [330.0, 14248.0], [338.0, 11923.0], [344.0, 107.0], [346.0, 112.5], [351.0, 149.0], [365.0, 21807.0], [355.0, 125.0], [381.0, 205.0], [393.0, 13963.0], [386.0, 14097.5], [404.0, 82.0], [431.0, 98.0], [433.0, 9238.0], [476.0, 15355.0], [472.0, 108.0], [536.0, 11253.0], [564.0, 17858.0], [548.0, 12855.5], [607.0, 13204.0], [653.0, 13866.0], [703.0, 168.0], [1.0, 2894.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[270.0, 0.0], [2.0, 0.0], [69.0, 0.0], [274.0, 0.0], [301.0, 0.0], [154.0, 0.0], [93.0, 0.0], [404.0, 0.0], [230.0, 0.0], [476.0, 0.0], [120.0, 0.0], [127.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 703.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.9, "minX": 1.68320562E12, "maxY": 136.5, "series": [{"data": [[1.6832058E12, 128.7], [1.68320592E12, 107.25], [1.68320562E12, 3.9], [1.68320574E12, 111.15], [1.68320586E12, 97.5], [1.68320568E12, 136.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68320592E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68320568E12, "maxY": 145.85, "series": [{"data": [[1.68320598E12, 18.883333333333333], [1.6832058E12, 145.85], [1.68320592E12, 97.45], [1.68320574E12, 120.51666666666667], [1.68320604E12, 3.433333333333333], [1.68320586E12, 96.9], [1.68320568E12, 100.41666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6832058E12, 0.5666666666666667], [1.68320574E12, 0.5333333333333333], [1.68320586E12, 0.03333333333333333], [1.68320568E12, 0.4166666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68320604E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68320568E12, "maxY": 145.85, "series": [{"data": [[1.68320598E12, 18.883333333333333], [1.6832058E12, 145.85], [1.68320592E12, 97.45], [1.68320574E12, 120.51666666666667], [1.68320604E12, 3.433333333333333], [1.68320586E12, 96.9], [1.68320568E12, 100.41666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6832058E12, 0.5666666666666667], [1.68320574E12, 0.5333333333333333], [1.68320586E12, 0.03333333333333333], [1.68320568E12, 0.4166666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68320604E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68320568E12, "maxY": 145.85, "series": [{"data": [[1.68320598E12, 18.883333333333333], [1.6832058E12, 145.85], [1.68320592E12, 97.45], [1.68320574E12, 120.51666666666667], [1.68320604E12, 3.433333333333333], [1.68320586E12, 96.9], [1.68320568E12, 100.41666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6832058E12, 0.5666666666666667], [1.68320574E12, 0.5333333333333333], [1.68320586E12, 0.03333333333333333], [1.68320568E12, 0.4166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68320604E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

