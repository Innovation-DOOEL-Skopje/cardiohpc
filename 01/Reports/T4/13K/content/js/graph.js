/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 242489.0, "series": [{"data": [[0.0, 12.0], [0.1, 24.0], [0.2, 27.0], [0.3, 29.0], [0.4, 32.0], [0.5, 35.0], [0.6, 39.0], [0.7, 40.0], [0.8, 43.0], [0.9, 45.0], [1.0, 49.0], [1.1, 52.0], [1.2, 54.0], [1.3, 55.0], [1.4, 56.0], [1.5, 57.0], [1.6, 58.0], [1.7, 59.0], [1.8, 59.0], [1.9, 60.0], [2.0, 61.0], [2.1, 62.0], [2.2, 63.0], [2.3, 64.0], [2.4, 66.0], [2.5, 69.0], [2.6, 69.0], [2.7, 70.0], [2.8, 72.0], [2.9, 72.0], [3.0, 73.0], [3.1, 73.0], [3.2, 74.0], [3.3, 75.0], [3.4, 76.0], [3.5, 77.0], [3.6, 77.0], [3.7, 78.0], [3.8, 79.0], [3.9, 79.0], [4.0, 80.0], [4.1, 81.0], [4.2, 81.0], [4.3, 82.0], [4.4, 82.0], [4.5, 83.0], [4.6, 84.0], [4.7, 84.0], [4.8, 85.0], [4.9, 85.0], [5.0, 85.0], [5.1, 86.0], [5.2, 87.0], [5.3, 87.0], [5.4, 88.0], [5.5, 88.0], [5.6, 88.0], [5.7, 89.0], [5.8, 89.0], [5.9, 89.0], [6.0, 90.0], [6.1, 91.0], [6.2, 91.0], [6.3, 91.0], [6.4, 92.0], [6.5, 92.0], [6.6, 93.0], [6.7, 94.0], [6.8, 94.0], [6.9, 94.0], [7.0, 94.0], [7.1, 94.0], [7.2, 95.0], [7.3, 95.0], [7.4, 95.0], [7.5, 95.0], [7.6, 95.0], [7.7, 96.0], [7.8, 96.0], [7.9, 96.0], [8.0, 96.0], [8.1, 97.0], [8.2, 97.0], [8.3, 97.0], [8.4, 97.0], [8.5, 98.0], [8.6, 98.0], [8.7, 98.0], [8.8, 99.0], [8.9, 99.0], [9.0, 100.0], [9.1, 100.0], [9.2, 100.0], [9.3, 101.0], [9.4, 101.0], [9.5, 101.0], [9.6, 102.0], [9.7, 102.0], [9.8, 103.0], [9.9, 103.0], [10.0, 104.0], [10.1, 104.0], [10.2, 104.0], [10.3, 105.0], [10.4, 105.0], [10.5, 105.0], [10.6, 106.0], [10.7, 106.0], [10.8, 107.0], [10.9, 107.0], [11.0, 107.0], [11.1, 108.0], [11.2, 108.0], [11.3, 108.0], [11.4, 108.0], [11.5, 109.0], [11.6, 109.0], [11.7, 109.0], [11.8, 110.0], [11.9, 110.0], [12.0, 110.0], [12.1, 111.0], [12.2, 111.0], [12.3, 111.0], [12.4, 112.0], [12.5, 112.0], [12.6, 112.0], [12.7, 113.0], [12.8, 113.0], [12.9, 114.0], [13.0, 114.0], [13.1, 114.0], [13.2, 114.0], [13.3, 115.0], [13.4, 115.0], [13.5, 115.0], [13.6, 115.0], [13.7, 115.0], [13.8, 116.0], [13.9, 116.0], [14.0, 116.0], [14.1, 116.0], [14.2, 117.0], [14.3, 117.0], [14.4, 117.0], [14.5, 117.0], [14.6, 118.0], [14.7, 118.0], [14.8, 118.0], [14.9, 118.0], [15.0, 119.0], [15.1, 119.0], [15.2, 119.0], [15.3, 120.0], [15.4, 120.0], [15.5, 120.0], [15.6, 121.0], [15.7, 121.0], [15.8, 121.0], [15.9, 122.0], [16.0, 122.0], [16.1, 122.0], [16.2, 123.0], [16.3, 123.0], [16.4, 123.0], [16.5, 124.0], [16.6, 124.0], [16.7, 124.0], [16.8, 124.0], [16.9, 125.0], [17.0, 125.0], [17.1, 125.0], [17.2, 125.0], [17.3, 126.0], [17.4, 126.0], [17.5, 126.0], [17.6, 126.0], [17.7, 126.0], [17.8, 127.0], [17.9, 127.0], [18.0, 127.0], [18.1, 127.0], [18.2, 127.0], [18.3, 127.0], [18.4, 128.0], [18.5, 128.0], [18.6, 128.0], [18.7, 128.0], [18.8, 128.0], [18.9, 129.0], [19.0, 129.0], [19.1, 129.0], [19.2, 129.0], [19.3, 129.0], [19.4, 130.0], [19.5, 130.0], [19.6, 130.0], [19.7, 130.0], [19.8, 131.0], [19.9, 131.0], [20.0, 131.0], [20.1, 132.0], [20.2, 132.0], [20.3, 132.0], [20.4, 132.0], [20.5, 132.0], [20.6, 132.0], [20.7, 132.0], [20.8, 133.0], [20.9, 133.0], [21.0, 133.0], [21.1, 133.0], [21.2, 133.0], [21.3, 133.0], [21.4, 133.0], [21.5, 133.0], [21.6, 133.0], [21.7, 134.0], [21.8, 134.0], [21.9, 134.0], [22.0, 134.0], [22.1, 134.0], [22.2, 135.0], [22.3, 135.0], [22.4, 135.0], [22.5, 135.0], [22.6, 135.0], [22.7, 135.0], [22.8, 136.0], [22.9, 136.0], [23.0, 136.0], [23.1, 136.0], [23.2, 136.0], [23.3, 136.0], [23.4, 136.0], [23.5, 136.0], [23.6, 136.0], [23.7, 137.0], [23.8, 137.0], [23.9, 137.0], [24.0, 137.0], [24.1, 137.0], [24.2, 137.0], [24.3, 137.0], [24.4, 137.0], [24.5, 137.0], [24.6, 137.0], [24.7, 137.0], [24.8, 138.0], [24.9, 138.0], [25.0, 138.0], [25.1, 138.0], [25.2, 138.0], [25.3, 138.0], [25.4, 138.0], [25.5, 138.0], [25.6, 139.0], [25.7, 139.0], [25.8, 139.0], [25.9, 139.0], [26.0, 139.0], [26.1, 140.0], [26.2, 140.0], [26.3, 140.0], [26.4, 141.0], [26.5, 141.0], [26.6, 141.0], [26.7, 141.0], [26.8, 141.0], [26.9, 141.0], [27.0, 142.0], [27.1, 142.0], [27.2, 142.0], [27.3, 142.0], [27.4, 142.0], [27.5, 142.0], [27.6, 142.0], [27.7, 142.0], [27.8, 143.0], [27.9, 143.0], [28.0, 143.0], [28.1, 143.0], [28.2, 143.0], [28.3, 143.0], [28.4, 143.0], [28.5, 143.0], [28.6, 143.0], [28.7, 143.0], [28.8, 143.0], [28.9, 143.0], [29.0, 144.0], [29.1, 144.0], [29.2, 144.0], [29.3, 144.0], [29.4, 144.0], [29.5, 144.0], [29.6, 144.0], [29.7, 144.0], [29.8, 144.0], [29.9, 144.0], [30.0, 144.0], [30.1, 144.0], [30.2, 145.0], [30.3, 145.0], [30.4, 145.0], [30.5, 145.0], [30.6, 145.0], [30.7, 145.0], [30.8, 145.0], [30.9, 145.0], [31.0, 145.0], [31.1, 145.0], [31.2, 145.0], [31.3, 145.0], [31.4, 145.0], [31.5, 146.0], [31.6, 146.0], [31.7, 146.0], [31.8, 146.0], [31.9, 146.0], [32.0, 146.0], [32.1, 146.0], [32.2, 146.0], [32.3, 146.0], [32.4, 146.0], [32.5, 147.0], [32.6, 147.0], [32.7, 147.0], [32.8, 147.0], [32.9, 147.0], [33.0, 147.0], [33.1, 147.0], [33.2, 147.0], [33.3, 148.0], [33.4, 148.0], [33.5, 148.0], [33.6, 148.0], [33.7, 148.0], [33.8, 148.0], [33.9, 148.0], [34.0, 148.0], [34.1, 148.0], [34.2, 148.0], [34.3, 148.0], [34.4, 148.0], [34.5, 148.0], [34.6, 149.0], [34.7, 149.0], [34.8, 149.0], [34.9, 149.0], [35.0, 149.0], [35.1, 149.0], [35.2, 149.0], [35.3, 149.0], [35.4, 149.0], [35.5, 149.0], [35.6, 149.0], [35.7, 149.0], [35.8, 150.0], [35.9, 150.0], [36.0, 150.0], [36.1, 150.0], [36.2, 150.0], [36.3, 150.0], [36.4, 150.0], [36.5, 150.0], [36.6, 151.0], [36.7, 151.0], [36.8, 151.0], [36.9, 151.0], [37.0, 151.0], [37.1, 151.0], [37.2, 151.0], [37.3, 152.0], [37.4, 152.0], [37.5, 152.0], [37.6, 152.0], [37.7, 152.0], [37.8, 152.0], [37.9, 152.0], [38.0, 152.0], [38.1, 152.0], [38.2, 152.0], [38.3, 153.0], [38.4, 153.0], [38.5, 153.0], [38.6, 153.0], [38.7, 153.0], [38.8, 153.0], [38.9, 153.0], [39.0, 153.0], [39.1, 153.0], [39.2, 153.0], [39.3, 153.0], [39.4, 153.0], [39.5, 153.0], [39.6, 154.0], [39.7, 154.0], [39.8, 154.0], [39.9, 154.0], [40.0, 154.0], [40.1, 154.0], [40.2, 154.0], [40.3, 154.0], [40.4, 154.0], [40.5, 154.0], [40.6, 155.0], [40.7, 155.0], [40.8, 155.0], [40.9, 155.0], [41.0, 155.0], [41.1, 155.0], [41.2, 155.0], [41.3, 155.0], [41.4, 155.0], [41.5, 155.0], [41.6, 156.0], [41.7, 156.0], [41.8, 156.0], [41.9, 156.0], [42.0, 156.0], [42.1, 156.0], [42.2, 156.0], [42.3, 157.0], [42.4, 157.0], [42.5, 157.0], [42.6, 157.0], [42.7, 157.0], [42.8, 157.0], [42.9, 157.0], [43.0, 157.0], [43.1, 158.0], [43.2, 158.0], [43.3, 158.0], [43.4, 158.0], [43.5, 158.0], [43.6, 158.0], [43.7, 158.0], [43.8, 158.0], [43.9, 158.0], [44.0, 158.0], [44.1, 158.0], [44.2, 159.0], [44.3, 159.0], [44.4, 159.0], [44.5, 159.0], [44.6, 159.0], [44.7, 159.0], [44.8, 159.0], [44.9, 159.0], [45.0, 160.0], [45.1, 160.0], [45.2, 160.0], [45.3, 160.0], [45.4, 160.0], [45.5, 160.0], [45.6, 160.0], [45.7, 160.0], [45.8, 161.0], [45.9, 161.0], [46.0, 161.0], [46.1, 161.0], [46.2, 161.0], [46.3, 161.0], [46.4, 161.0], [46.5, 161.0], [46.6, 161.0], [46.7, 162.0], [46.8, 162.0], [46.9, 162.0], [47.0, 162.0], [47.1, 162.0], [47.2, 162.0], [47.3, 162.0], [47.4, 162.0], [47.5, 162.0], [47.6, 163.0], [47.7, 163.0], [47.8, 163.0], [47.9, 163.0], [48.0, 163.0], [48.1, 163.0], [48.2, 163.0], [48.3, 163.0], [48.4, 164.0], [48.5, 164.0], [48.6, 164.0], [48.7, 164.0], [48.8, 164.0], [48.9, 164.0], [49.0, 164.0], [49.1, 164.0], [49.2, 165.0], [49.3, 165.0], [49.4, 165.0], [49.5, 165.0], [49.6, 165.0], [49.7, 165.0], [49.8, 165.0], [49.9, 165.0], [50.0, 166.0], [50.1, 166.0], [50.2, 166.0], [50.3, 166.0], [50.4, 166.0], [50.5, 166.0], [50.6, 166.0], [50.7, 167.0], [50.8, 167.0], [50.9, 167.0], [51.0, 167.0], [51.1, 167.0], [51.2, 168.0], [51.3, 168.0], [51.4, 168.0], [51.5, 168.0], [51.6, 168.0], [51.7, 168.0], [51.8, 169.0], [51.9, 169.0], [52.0, 169.0], [52.1, 169.0], [52.2, 169.0], [52.3, 169.0], [52.4, 169.0], [52.5, 169.0], [52.6, 170.0], [52.7, 170.0], [52.8, 170.0], [52.9, 170.0], [53.0, 170.0], [53.1, 170.0], [53.2, 170.0], [53.3, 170.0], [53.4, 171.0], [53.5, 171.0], [53.6, 171.0], [53.7, 171.0], [53.8, 171.0], [53.9, 172.0], [54.0, 172.0], [54.1, 172.0], [54.2, 172.0], [54.3, 172.0], [54.4, 172.0], [54.5, 173.0], [54.6, 173.0], [54.7, 173.0], [54.8, 173.0], [54.9, 173.0], [55.0, 173.0], [55.1, 174.0], [55.2, 174.0], [55.3, 174.0], [55.4, 174.0], [55.5, 174.0], [55.6, 174.0], [55.7, 175.0], [55.8, 175.0], [55.9, 175.0], [56.0, 176.0], [56.1, 176.0], [56.2, 176.0], [56.3, 176.0], [56.4, 177.0], [56.5, 177.0], [56.6, 177.0], [56.7, 178.0], [56.8, 178.0], [56.9, 178.0], [57.0, 178.0], [57.1, 179.0], [57.2, 179.0], [57.3, 179.0], [57.4, 180.0], [57.5, 180.0], [57.6, 181.0], [57.7, 181.0], [57.8, 182.0], [57.9, 182.0], [58.0, 182.0], [58.1, 183.0], [58.2, 183.0], [58.3, 183.0], [58.4, 184.0], [58.5, 184.0], [58.6, 185.0], [58.7, 185.0], [58.8, 186.0], [58.9, 187.0], [59.0, 187.0], [59.1, 188.0], [59.2, 188.0], [59.3, 189.0], [59.4, 189.0], [59.5, 189.0], [59.6, 190.0], [59.7, 190.0], [59.8, 190.0], [59.9, 191.0], [60.0, 191.0], [60.1, 193.0], [60.2, 195.0], [60.3, 195.0], [60.4, 196.0], [60.5, 196.0], [60.6, 197.0], [60.7, 198.0], [60.8, 199.0], [60.9, 200.0], [61.0, 200.0], [61.1, 201.0], [61.2, 202.0], [61.3, 203.0], [61.4, 205.0], [61.5, 208.0], [61.6, 210.0], [61.7, 211.0], [61.8, 211.0], [61.9, 213.0], [62.0, 215.0], [62.1, 216.0], [62.2, 216.0], [62.3, 217.0], [62.4, 217.0], [62.5, 219.0], [62.6, 221.0], [62.7, 222.0], [62.8, 222.0], [62.9, 225.0], [63.0, 227.0], [63.1, 227.0], [63.2, 229.0], [63.3, 230.0], [63.4, 231.0], [63.5, 231.0], [63.6, 233.0], [63.7, 234.0], [63.8, 236.0], [63.9, 238.0], [64.0, 239.0], [64.1, 239.0], [64.2, 242.0], [64.3, 247.0], [64.4, 248.0], [64.5, 249.0], [64.6, 251.0], [64.7, 253.0], [64.8, 254.0], [64.9, 255.0], [65.0, 255.0], [65.1, 256.0], [65.2, 256.0], [65.3, 257.0], [65.4, 258.0], [65.5, 258.0], [65.6, 258.0], [65.7, 259.0], [65.8, 259.0], [65.9, 259.0], [66.0, 260.0], [66.1, 260.0], [66.2, 260.0], [66.3, 261.0], [66.4, 262.0], [66.5, 263.0], [66.6, 265.0], [66.7, 267.0], [66.8, 269.0], [66.9, 270.0], [67.0, 270.0], [67.1, 270.0], [67.2, 271.0], [67.3, 272.0], [67.4, 278.0], [67.5, 281.0], [67.6, 283.0], [67.7, 284.0], [67.8, 285.0], [67.9, 286.0], [68.0, 288.0], [68.1, 289.0], [68.2, 289.0], [68.3, 290.0], [68.4, 291.0], [68.5, 291.0], [68.6, 292.0], [68.7, 293.0], [68.8, 294.0], [68.9, 294.0], [69.0, 295.0], [69.1, 297.0], [69.2, 299.0], [69.3, 301.0], [69.4, 302.0], [69.5, 303.0], [69.6, 304.0], [69.7, 305.0], [69.8, 305.0], [69.9, 306.0], [70.0, 306.0], [70.1, 306.0], [70.2, 307.0], [70.3, 307.0], [70.4, 308.0], [70.5, 309.0], [70.6, 313.0], [70.7, 314.0], [70.8, 315.0], [70.9, 319.0], [71.0, 328.0], [71.1, 337.0], [71.2, 338.0], [71.3, 339.0], [71.4, 340.0], [71.5, 341.0], [71.6, 347.0], [71.7, 360.0], [71.8, 374.0], [71.9, 403.0], [72.0, 426.0], [72.1, 438.0], [72.2, 452.0], [72.3, 503.0], [72.4, 558.0], [72.5, 589.0], [72.6, 638.0], [72.7, 740.0], [72.8, 772.0], [72.9, 810.0], [73.0, 883.0], [73.1, 928.0], [73.2, 957.0], [73.3, 1043.0], [73.4, 1073.0], [73.5, 1116.0], [73.6, 1180.0], [73.7, 1214.0], [73.8, 1285.0], [73.9, 1434.0], [74.0, 1488.0], [74.1, 1529.0], [74.2, 1564.0], [74.3, 1610.0], [74.4, 1627.0], [74.5, 1657.0], [74.6, 1725.0], [74.7, 1751.0], [74.8, 1787.0], [74.9, 1830.0], [75.0, 1862.0], [75.1, 1967.0], [75.2, 2044.0], [75.3, 2119.0], [75.4, 2151.0], [75.5, 2187.0], [75.6, 2222.0], [75.7, 2314.0], [75.8, 2352.0], [75.9, 2484.0], [76.0, 2602.0], [76.1, 2677.0], [76.2, 2709.0], [76.3, 2744.0], [76.4, 2860.0], [76.5, 2915.0], [76.6, 3138.0], [76.7, 3181.0], [76.8, 3311.0], [76.9, 3420.0], [77.0, 3452.0], [77.1, 3487.0], [77.2, 3528.0], [77.3, 3576.0], [77.4, 3639.0], [77.5, 3668.0], [77.6, 3718.0], [77.7, 3814.0], [77.8, 3841.0], [77.9, 3865.0], [78.0, 3946.0], [78.1, 4010.0], [78.2, 4095.0], [78.3, 4119.0], [78.4, 4157.0], [78.5, 4229.0], [78.6, 4245.0], [78.7, 4284.0], [78.8, 4317.0], [78.9, 4330.0], [79.0, 4456.0], [79.1, 4499.0], [79.2, 4546.0], [79.3, 4579.0], [79.4, 4650.0], [79.5, 4680.0], [79.6, 4742.0], [79.7, 4977.0], [79.8, 5294.0], [79.9, 5349.0], [80.0, 5464.0], [80.1, 5536.0], [80.2, 5668.0], [80.3, 5671.0], [80.4, 5764.0], [80.5, 5886.0], [80.6, 5889.0], [80.7, 5950.0], [80.8, 6004.0], [80.9, 6047.0], [81.0, 6081.0], [81.1, 6260.0], [81.2, 6282.0], [81.3, 6287.0], [81.4, 6322.0], [81.5, 6367.0], [81.6, 6522.0], [81.7, 6528.0], [81.8, 6705.0], [81.9, 6723.0], [82.0, 6725.0], [82.1, 6744.0], [82.2, 6840.0], [82.3, 7054.0], [82.4, 7139.0], [82.5, 7141.0], [82.6, 7164.0], [82.7, 7283.0], [82.8, 7350.0], [82.9, 7431.0], [83.0, 7619.0], [83.1, 7702.0], [83.2, 7811.0], [83.3, 8098.0], [83.4, 8144.0], [83.5, 8232.0], [83.6, 8242.0], [83.7, 8362.0], [83.8, 8434.0], [83.9, 8464.0], [84.0, 8523.0], [84.1, 8539.0], [84.2, 8542.0], [84.3, 8549.0], [84.4, 8555.0], [84.5, 8568.0], [84.6, 8593.0], [84.7, 8610.0], [84.8, 8664.0], [84.9, 8699.0], [85.0, 8713.0], [85.1, 8782.0], [85.2, 8997.0], [85.3, 9032.0], [85.4, 9042.0], [85.5, 9067.0], [85.6, 9349.0], [85.7, 9527.0], [85.8, 9611.0], [85.9, 9645.0], [86.0, 9662.0], [86.1, 9678.0], [86.2, 9686.0], [86.3, 9699.0], [86.4, 9745.0], [86.5, 9759.0], [86.6, 9763.0], [86.7, 9774.0], [86.8, 10002.0], [86.9, 10072.0], [87.0, 10150.0], [87.1, 10158.0], [87.2, 10160.0], [87.3, 10162.0], [87.4, 10164.0], [87.5, 10307.0], [87.6, 10374.0], [87.7, 10391.0], [87.8, 10395.0], [87.9, 10435.0], [88.0, 10585.0], [88.1, 10684.0], [88.2, 10750.0], [88.3, 10761.0], [88.4, 10809.0], [88.5, 10819.0], [88.6, 10889.0], [88.7, 10891.0], [88.8, 10892.0], [88.9, 10932.0], [89.0, 10948.0], [89.1, 11015.0], [89.2, 11239.0], [89.3, 11339.0], [89.4, 11343.0], [89.5, 11386.0], [89.6, 11399.0], [89.7, 11547.0], [89.8, 11613.0], [89.9, 11725.0], [90.0, 11787.0], [90.1, 11915.0], [90.2, 12097.0], [90.3, 12106.0], [90.4, 12116.0], [90.5, 12140.0], [90.6, 12151.0], [90.7, 12170.0], [90.8, 12437.0], [90.9, 13061.0], [91.0, 13065.0], [91.1, 13077.0], [91.2, 13260.0], [91.3, 13295.0], [91.4, 13308.0], [91.5, 13310.0], [91.6, 13384.0], [91.7, 13420.0], [91.8, 13604.0], [91.9, 13735.0], [92.0, 14010.0], [92.1, 14550.0], [92.2, 14658.0], [92.3, 14663.0], [92.4, 14753.0], [92.5, 14816.0], [92.6, 14946.0], [92.7, 15788.0], [92.8, 16292.0], [92.9, 16349.0], [93.0, 17157.0], [93.1, 17487.0], [93.2, 18235.0], [93.3, 19652.0], [93.4, 19986.0], [93.5, 20449.0], [93.6, 21047.0], [93.7, 22028.0], [93.8, 22201.0], [93.9, 22815.0], [94.0, 24034.0], [94.1, 24570.0], [94.2, 25278.0], [94.3, 25601.0], [94.4, 26183.0], [94.5, 27954.0], [94.6, 28709.0], [94.7, 29397.0], [94.8, 30065.0], [94.9, 34105.0], [95.0, 38685.0], [95.1, 40699.0], [95.2, 40739.0], [95.3, 42120.0], [95.4, 44158.0], [95.5, 45168.0], [95.6, 45336.0], [95.7, 45517.0], [95.8, 46481.0], [95.9, 48856.0], [96.0, 50412.0], [96.1, 52090.0], [96.2, 52521.0], [96.3, 58020.0], [96.4, 59432.0], [96.5, 63197.0], [96.6, 63397.0], [96.7, 63657.0], [96.8, 63708.0], [96.9, 64226.0], [97.0, 65414.0], [97.1, 68417.0], [97.2, 70195.0], [97.3, 73404.0], [97.4, 75790.0], [97.5, 77068.0], [97.6, 78142.0], [97.7, 81343.0], [97.8, 85796.0], [97.9, 97530.0], [98.0, 100036.0], [98.1, 100086.0], [98.2, 100111.0], [98.3, 100121.0], [98.4, 100133.0], [98.5, 100143.0], [98.6, 100158.0], [98.7, 100177.0], [98.8, 100187.0], [98.9, 100196.0], [99.0, 100208.0], [99.1, 100280.0], [99.2, 101050.0], [99.3, 128018.0], [99.4, 130632.0], [99.5, 134303.0], [99.6, 134701.0], [99.7, 135043.0], [99.8, 143280.0], [99.9, 242363.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 33904.0, "series": [{"data": [[0.0, 5836.0], [135200.0, 1.0], [68300.0, 20.0], [73100.0, 9.0], [71500.0, 1.0], [76300.0, 1.0], [74700.0, 1.0], [81100.0, 1.0], [79500.0, 2.0], [84300.0, 3.0], [95500.0, 2.0], [101900.0, 4.0], [100300.0, 3.0], [133800.0, 1.0], [100.0, 33904.0], [33700.0, 8.0], [134700.0, 5.0], [32900.0, 5.0], [36100.0, 4.0], [37700.0, 2.0], [40100.0, 3.0], [39300.0, 2.0], [41700.0, 3.0], [42500.0, 2.0], [44100.0, 23.0], [44900.0, 1.0], [46500.0, 35.0], [48100.0, 1.0], [48900.0, 1.0], [200.0, 5467.0], [52900.0, 3.0], [52100.0, 35.0], [56900.0, 4.0], [55300.0, 2.0], [59300.0, 46.0], [57700.0, 4.0], [233900.0, 21.0], [60900.0, 4.0], [63300.0, 70.0], [62500.0, 1.0], [64900.0, 17.0], [64100.0, 7.0], [69000.0, 4.0], [67400.0, 2.0], [72200.0, 1.0], [300.0, 1747.0], [77000.0, 5.0], [78600.0, 29.0], [83400.0, 4.0], [88200.0, 1.0], [86600.0, 4.0], [97800.0, 2.0], [101000.0, 63.0], [400.0, 261.0], [500.0, 160.0], [138800.0, 14.0], [600.0, 61.0], [700.0, 166.0], [800.0, 105.0], [900.0, 135.0], [1000.0, 141.0], [1100.0, 114.0], [1200.0, 106.0], [1300.0, 34.0], [1400.0, 135.0], [1500.0, 135.0], [1600.0, 193.0], [1700.0, 179.0], [1800.0, 137.0], [1900.0, 77.0], [2000.0, 59.0], [2100.0, 176.0], [133300.0, 1.0], [2200.0, 85.0], [2300.0, 100.0], [2400.0, 73.0], [2500.0, 38.0], [2600.0, 117.0], [2700.0, 98.0], [2800.0, 109.0], [2900.0, 40.0], [3000.0, 17.0], [3100.0, 93.0], [3300.0, 53.0], [3200.0, 54.0], [3400.0, 166.0], [3500.0, 140.0], [3600.0, 165.0], [3700.0, 61.0], [3800.0, 167.0], [3900.0, 91.0], [4000.0, 98.0], [4100.0, 136.0], [4200.0, 186.0], [4300.0, 147.0], [66500.0, 1.0], [68100.0, 1.0], [4500.0, 139.0], [4400.0, 103.0], [4600.0, 147.0], [4700.0, 46.0], [76100.0, 2.0], [4800.0, 3.0], [74500.0, 2.0], [5000.0, 15.0], [4900.0, 54.0], [79300.0, 2.0], [5100.0, 21.0], [5200.0, 35.0], [5300.0, 73.0], [84100.0, 1.0], [85700.0, 3.0], [5500.0, 31.0], [5400.0, 105.0], [5600.0, 156.0], [5700.0, 34.0], [5800.0, 132.0], [95300.0, 2.0], [5900.0, 104.0], [6000.0, 157.0], [6100.0, 22.0], [6300.0, 104.0], [100100.0, 524.0], [6200.0, 206.0], [98500.0, 2.0], [6500.0, 134.0], [6600.0, 10.0], [6400.0, 3.0], [6800.0, 44.0], [6900.0, 13.0], [6700.0, 264.0], [7000.0, 63.0], [7100.0, 187.0], [7200.0, 75.0], [7300.0, 90.0], [7400.0, 27.0], [7500.0, 39.0], [7600.0, 69.0], [7700.0, 64.0], [7800.0, 19.0], [8100.0, 82.0], [8000.0, 88.0], [8400.0, 131.0], [8600.0, 176.0], [8200.0, 108.0], [8800.0, 7.0], [9000.0, 209.0], [9200.0, 20.0], [9400.0, 22.0], [9600.0, 357.0], [9800.0, 17.0], [10000.0, 93.0], [10200.0, 24.0], [10600.0, 36.0], [10400.0, 60.0], [11200.0, 66.0], [10800.0, 314.0], [11000.0, 27.0], [11400.0, 46.0], [11600.0, 51.0], [12000.0, 60.0], [11800.0, 37.0], [12200.0, 26.0], [12400.0, 16.0], [12600.0, 3.0], [13000.0, 181.0], [12800.0, 3.0], [13200.0, 106.0], [13400.0, 91.0], [13600.0, 32.0], [13800.0, 6.0], [14000.0, 2.0], [14200.0, 3.0], [14600.0, 162.0], [14800.0, 53.0], [14400.0, 26.0], [15200.0, 4.0], [15000.0, 13.0], [15400.0, 4.0], [15800.0, 6.0], [16200.0, 36.0], [16000.0, 4.0], [16800.0, 3.0], [16400.0, 10.0], [17200.0, 3.0], [18000.0, 4.0], [17600.0, 6.0], [18400.0, 5.0], [18800.0, 2.0], [20400.0, 14.0], [20000.0, 7.0], [19600.0, 35.0], [21200.0, 14.0], [22000.0, 42.0], [22400.0, 2.0], [22800.0, 7.0], [23200.0, 4.0], [24000.0, 5.0], [24400.0, 11.0], [24800.0, 2.0], [25200.0, 45.0], [26000.0, 6.0], [25600.0, 11.0], [26800.0, 4.0], [27600.0, 8.0], [27200.0, 13.0], [28000.0, 3.0], [28400.0, 9.0], [29600.0, 30.0], [30000.0, 2.0], [32400.0, 2.0], [32000.0, 2.0], [32800.0, 1.0], [36000.0, 12.0], [36800.0, 1.0], [37600.0, 3.0], [40800.0, 2.0], [42400.0, 4.0], [44000.0, 22.0], [44800.0, 12.0], [46400.0, 35.0], [45600.0, 2.0], [48800.0, 4.0], [48000.0, 5.0], [47200.0, 2.0], [50400.0, 48.0], [52000.0, 48.0], [52800.0, 4.0], [51200.0, 2.0], [61600.0, 3.0], [63200.0, 2.0], [64000.0, 4.0], [64800.0, 5.0], [67200.0, 1.0], [65600.0, 2.0], [68800.0, 1.0], [72000.0, 4.0], [73600.0, 1.0], [75200.0, 1.0], [80000.0, 1.0], [81600.0, 1.0], [83200.0, 1.0], [91200.0, 2.0], [94400.0, 1.0], [100800.0, 35.0], [128000.0, 3.0], [134400.0, 1.0], [144000.0, 1.0], [73500.0, 1.0], [75100.0, 2.0], [78300.0, 1.0], [81500.0, 1.0], [86300.0, 2.0], [94300.0, 1.0], [97500.0, 2.0], [129500.0, 7.0], [127900.0, 3.0], [34700.0, 2.0], [33900.0, 5.0], [133900.0, 35.0], [36300.0, 4.0], [37100.0, 2.0], [40300.0, 2.0], [41900.0, 15.0], [41100.0, 4.0], [43500.0, 1.0], [44300.0, 1.0], [45100.0, 1.0], [53900.0, 4.0], [56300.0, 2.0], [57900.0, 2.0], [59500.0, 7.0], [61100.0, 1.0], [60300.0, 2.0], [62700.0, 2.0], [61900.0, 2.0], [63500.0, 9.0], [65100.0, 9.0], [67800.0, 1.0], [71000.0, 1.0], [72600.0, 5.0], [75800.0, 50.0], [77400.0, 1.0], [74200.0, 1.0], [80600.0, 2.0], [82200.0, 1.0], [90200.0, 2.0], [99800.0, 1.0], [134800.0, 1.0], [66900.0, 2.0], [68500.0, 10.0], [70100.0, 25.0], [73300.0, 1.0], [71700.0, 1.0], [78100.0, 6.0], [81300.0, 19.0], [79700.0, 2.0], [82900.0, 4.0], [87700.0, 1.0], [97300.0, 1.0], [95700.0, 3.0], [105300.0, 1.0], [242200.0, 1.0], [16500.0, 5.0], [17300.0, 23.0], [16900.0, 4.0], [17700.0, 7.0], [18100.0, 11.0], [19300.0, 1.0], [18500.0, 1.0], [18900.0, 2.0], [20100.0, 3.0], [19700.0, 2.0], [20900.0, 10.0], [20500.0, 7.0], [21300.0, 11.0], [22100.0, 29.0], [22500.0, 2.0], [23300.0, 10.0], [22900.0, 4.0], [24500.0, 49.0], [23700.0, 2.0], [24100.0, 2.0], [25300.0, 51.0], [25700.0, 46.0], [26100.0, 2.0], [27300.0, 2.0], [27700.0, 2.0], [28500.0, 2.0], [28900.0, 42.0], [29300.0, 14.0], [29700.0, 22.0], [30100.0, 1.0], [31700.0, 2.0], [33800.0, 1.0], [134300.0, 5.0], [33000.0, 2.0], [36200.0, 1.0], [140700.0, 6.0], [143900.0, 3.0], [37800.0, 2.0], [38600.0, 2.0], [39400.0, 2.0], [41800.0, 12.0], [43400.0, 3.0], [44200.0, 5.0], [45000.0, 1.0], [45800.0, 3.0], [47400.0, 2.0], [49000.0, 5.0], [48200.0, 2.0], [49800.0, 4.0], [50600.0, 1.0], [51400.0, 1.0], [52200.0, 3.0], [57000.0, 2.0], [55400.0, 1.0], [59400.0, 34.0], [60200.0, 2.0], [63400.0, 46.0], [65000.0, 1.0], [64200.0, 26.0], [67600.0, 2.0], [69200.0, 2.0], [72400.0, 1.0], [74000.0, 1.0], [75600.0, 2.0], [85200.0, 2.0], [83600.0, 1.0], [88400.0, 1.0], [93200.0, 1.0], [143200.0, 21.0], [242400.0, 5.0], [134500.0, 2.0], [65900.0, 2.0], [67500.0, 3.0], [72300.0, 2.0], [77100.0, 53.0], [75500.0, 1.0], [78700.0, 4.0], [81900.0, 2.0], [80300.0, 1.0], [83500.0, 2.0], [96300.0, 1.0], [97900.0, 1.0], [94700.0, 2.0], [101100.0, 5.0], [104300.0, 3.0], [135400.0, 1.0], [34100.0, 2.0], [35700.0, 2.0], [34900.0, 2.0], [139500.0, 1.0], [38900.0, 2.0], [38100.0, 2.0], [40500.0, 8.0], [39700.0, 1.0], [42100.0, 14.0], [42900.0, 4.0], [41300.0, 2.0], [44500.0, 22.0], [43700.0, 5.0], [46900.0, 3.0], [46100.0, 19.0], [45300.0, 14.0], [48500.0, 2.0], [50900.0, 2.0], [50100.0, 22.0], [52500.0, 11.0], [54900.0, 2.0], [57300.0, 2.0], [58900.0, 4.0], [61300.0, 3.0], [62100.0, 1.0], [62900.0, 2.0], [63700.0, 44.0], [65300.0, 2.0], [64500.0, 5.0], [68200.0, 3.0], [66600.0, 1.0], [73000.0, 7.0], [71400.0, 1.0], [74600.0, 1.0], [79400.0, 1.0], [84200.0, 1.0], [82600.0, 1.0], [92200.0, 2.0], [100200.0, 105.0], [130600.0, 17.0], [137200.0, 1.0], [134900.0, 55.0], [67300.0, 2.0], [72100.0, 3.0], [70500.0, 5.0], [80100.0, 2.0], [81700.0, 3.0], [78500.0, 3.0], [83300.0, 1.0], [88100.0, 1.0], [89700.0, 2.0], [94500.0, 2.0], [97700.0, 1.0], [128100.0, 14.0], [8300.0, 82.0], [8500.0, 434.0], [8700.0, 132.0], [9100.0, 17.0], [8900.0, 57.0], [9300.0, 48.0], [9500.0, 45.0], [9700.0, 293.0], [9900.0, 12.0], [10100.0, 321.0], [10300.0, 241.0], [10700.0, 170.0], [10500.0, 79.0], [10900.0, 160.0], [11100.0, 16.0], [11500.0, 69.0], [11700.0, 103.0], [11300.0, 228.0], [12100.0, 334.0], [11900.0, 36.0], [12500.0, 25.0], [12300.0, 13.0], [12700.0, 3.0], [12900.0, 14.0], [13300.0, 188.0], [13100.0, 7.0], [13500.0, 13.0], [13700.0, 75.0], [14300.0, 11.0], [13900.0, 26.0], [14100.0, 4.0], [14700.0, 87.0], [14500.0, 24.0], [14900.0, 37.0], [15300.0, 5.0], [15100.0, 5.0], [15700.0, 28.0], [15500.0, 5.0], [16300.0, 76.0], [16100.0, 2.0], [15900.0, 4.0], [16600.0, 3.0], [17400.0, 52.0], [17000.0, 8.0], [17800.0, 1.0], [18200.0, 5.0], [18600.0, 4.0], [19000.0, 2.0], [20200.0, 11.0], [21000.0, 4.0], [20600.0, 19.0], [21400.0, 10.0], [21800.0, 2.0], [22200.0, 15.0], [23000.0, 1.0], [23400.0, 6.0], [23800.0, 6.0], [24200.0, 2.0], [25000.0, 4.0], [24600.0, 8.0], [27000.0, 2.0], [27800.0, 1.0], [29400.0, 7.0], [29000.0, 2.0], [29800.0, 2.0], [30200.0, 3.0], [31000.0, 3.0], [32600.0, 1.0], [31800.0, 2.0], [32200.0, 2.0], [36400.0, 2.0], [38800.0, 2.0], [37200.0, 1.0], [38000.0, 3.0], [39600.0, 6.0], [42800.0, 2.0], [42000.0, 4.0], [43600.0, 2.0], [44400.0, 2.0], [45200.0, 61.0], [46800.0, 2.0], [50000.0, 1.0], [50800.0, 3.0], [49200.0, 2.0], [51600.0, 3.0], [52400.0, 2.0], [53200.0, 2.0], [58000.0, 4.0], [232700.0, 7.0], [242300.0, 76.0], [62000.0, 2.0], [63600.0, 49.0], [64400.0, 10.0], [68000.0, 3.0], [69600.0, 6.0], [66400.0, 5.0], [71200.0, 1.0], [77600.0, 1.0], [76000.0, 9.0], [79200.0, 2.0], [85600.0, 1.0], [87200.0, 1.0], [93600.0, 2.0], [96800.0, 2.0], [100000.0, 149.0], [104800.0, 1.0], [130400.0, 32.0], [133700.0, 12.0], [69500.0, 11.0], [71100.0, 3.0], [72700.0, 12.0], [77500.0, 1.0], [80700.0, 4.0], [82300.0, 5.0], [87100.0, 1.0], [88700.0, 2.0], [93500.0, 2.0], [98300.0, 1.0], [96700.0, 4.0], [99900.0, 1.0], [104700.0, 1.0], [128700.0, 5.0], [134600.0, 58.0], [141000.0, 2.0], [144200.0, 8.0], [33500.0, 3.0], [132300.0, 2.0], [135500.0, 14.0], [138700.0, 1.0], [36700.0, 5.0], [35900.0, 2.0], [35100.0, 2.0], [39900.0, 1.0], [40700.0, 77.0], [39100.0, 2.0], [43900.0, 3.0], [44700.0, 2.0], [43100.0, 2.0], [45500.0, 56.0], [46300.0, 1.0], [48700.0, 2.0], [50300.0, 2.0], [51100.0, 1.0], [51900.0, 2.0], [54300.0, 8.0], [55900.0, 4.0], [56700.0, 4.0], [59100.0, 2.0], [58300.0, 2.0], [59900.0, 4.0], [63100.0, 2.0], [62300.0, 2.0], [63900.0, 14.0], [65500.0, 1.0], [68600.0, 2.0], [71800.0, 1.0], [73400.0, 2.0], [81400.0, 1.0], [87800.0, 3.0], [92600.0, 2.0], [95800.0, 3.0], [127800.0, 1.0], [69300.0, 1.0], [74100.0, 2.0], [75700.0, 48.0], [80500.0, 1.0], [82100.0, 2.0], [83700.0, 1.0], [93300.0, 1.0], [96500.0, 2.0], [135000.0, 18.0], [17100.0, 35.0], [16700.0, 1.0], [17500.0, 2.0], [18300.0, 7.0], [17900.0, 2.0], [18700.0, 3.0], [19100.0, 6.0], [19500.0, 9.0], [19900.0, 84.0], [20300.0, 2.0], [21100.0, 4.0], [20700.0, 22.0], [21500.0, 6.0], [21900.0, 9.0], [22300.0, 44.0], [23100.0, 2.0], [22700.0, 1.0], [23500.0, 22.0], [24300.0, 1.0], [24700.0, 8.0], [25500.0, 7.0], [25100.0, 4.0], [25900.0, 1.0], [27100.0, 4.0], [27500.0, 4.0], [27900.0, 71.0], [28300.0, 4.0], [28700.0, 4.0], [29100.0, 7.0], [30700.0, 2.0], [30300.0, 2.0], [32700.0, 2.0], [31900.0, 1.0], [34200.0, 4.0], [33400.0, 14.0], [36600.0, 5.0], [39800.0, 1.0], [40600.0, 33.0], [41400.0, 7.0], [44600.0, 2.0], [45400.0, 6.0], [46200.0, 2.0], [47800.0, 4.0], [50200.0, 2.0], [52600.0, 1.0], [51800.0, 2.0], [55000.0, 2.0], [63000.0, 3.0], [65400.0, 10.0], [64600.0, 1.0], [68400.0, 9.0], [66800.0, 1.0], [70000.0, 2.0], [71600.0, 2.0], [73200.0, 2.0], [76400.0, 1.0], [78000.0, 3.0], [81200.0, 1.0], [79600.0, 2.0], [84400.0, 8.0], [89200.0, 2.0], [87600.0, 1.0], [92400.0, 1.0], [102000.0, 2.0], [98800.0, 2.0], [127600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 242400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 321.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 47217.0, "series": [{"data": [[0.0, 47217.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1157.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16616.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 321.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 187.35215053763437, "minX": 1.68301638E12, "maxY": 3000.0, "series": [{"data": [[1.6830168E12, 187.35215053763437], [1.6830165E12, 3000.0], [1.68301668E12, 2413.5249624624685], [1.68301638E12, 3000.0], [1.68301656E12, 3000.0], [1.68301674E12, 431.5], [1.68301644E12, 3000.0], [1.68301662E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830168E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 96.0, "minX": 2.0, "maxY": 134559.0, "series": [{"data": [[2.0, 100191.0], [4.0, 100190.0], [5.0, 100190.0], [6.0, 100189.0], [7.0, 100188.0], [8.0, 100187.0], [9.0, 100186.0], [10.0, 100183.0], [13.0, 100183.0], [14.0, 100182.0], [15.0, 100180.0], [16.0, 100159.0], [17.0, 100156.0], [18.0, 100155.0], [19.0, 100153.0], [20.0, 100153.0], [24.0, 100149.0], [27.0, 100149.0], [29.0, 100149.0], [33.0, 100148.0], [35.0, 100148.0], [39.0, 100147.0], [38.0, 100147.0], [41.0, 100147.0], [43.0, 100146.0], [42.0, 100146.75], [45.0, 100144.0], [44.0, 100145.0], [47.0, 100139.0], [46.0, 100139.0], [51.0, 100138.0], [50.0, 100138.0], [52.0, 100138.0], [54.0, 100133.0], [57.0, 100133.0], [58.0, 100132.66666666667], [61.0, 100127.66666666667], [63.0, 100127.0], [66.0, 100117.0], [65.0, 100125.0], [64.0, 100127.0], [70.0, 100105.0], [69.0, 100115.0], [68.0, 100116.0], [75.0, 100104.0], [74.0, 100104.0], [73.0, 100104.0], [78.0, 100101.0], [77.0, 100101.0], [76.0, 100102.0], [81.0, 100099.0], [80.0, 100101.0], [86.0, 100088.0], [91.0, 100088.0], [90.0, 100088.0], [89.0, 100088.0], [94.0, 100088.0], [93.0, 100088.0], [98.0, 100084.0], [97.0, 100085.0], [96.0, 100087.0], [102.0, 100083.0], [101.0, 100084.0], [100.0, 100084.0], [106.0, 100074.66666666667], [105.0, 100075.0], [110.0, 100059.0], [109.0, 100062.0], [108.0, 100073.0], [115.0, 100042.0], [113.0, 100043.0], [112.0, 100047.0], [118.0, 100039.33333333333], [127.0, 100033.0], [124.0, 100039.16666666666], [134.0, 100287.5], [132.0, 100289.0], [131.0, 100301.0], [130.0, 100318.0], [128.0, 99822.0], [142.0, 100278.0], [141.0, 100279.0], [139.0, 100280.0], [137.0, 100284.0], [136.0, 100286.0], [151.0, 100276.0], [150.0, 100276.0], [149.0, 100277.0], [147.0, 100277.33333333333], [144.0, 100278.0], [159.0, 100269.0], [158.0, 100271.0], [156.0, 100274.0], [155.0, 100274.0], [154.0, 100274.0], [167.0, 100268.0], [166.0, 100268.0], [164.0, 100269.0], [162.0, 100269.0], [175.0, 100195.0], [174.0, 100200.5], [172.0, 100202.0], [171.0, 98812.0], [170.0, 98814.0], [169.0, 100264.0], [168.0, 100265.0], [181.0, 100191.0], [180.0, 100192.0], [179.0, 100193.0], [178.0, 100193.66666666667], [190.0, 100173.0], [189.0, 100175.0], [187.0, 100181.0], [186.0, 100186.0], [185.0, 100187.0], [184.0, 100191.0], [198.0, 100143.0], [197.0, 100157.0], [196.0, 100161.0], [192.0, 100173.0], [207.0, 100131.0], [206.0, 100131.5], [205.0, 100131.0], [203.0, 100132.0], [202.0, 100131.0], [200.0, 100133.0], [215.0, 100126.0], [213.0, 100127.0], [211.0, 100129.0], [210.0, 100129.0], [223.0, 100122.0], [220.0, 100122.0], [219.0, 100123.5], [217.0, 100124.5], [230.0, 100120.0], [229.0, 100120.0], [227.0, 100121.5], [225.0, 100121.5], [239.0, 100112.0], [237.0, 100113.0], [233.0, 100119.66666666667], [247.0, 100111.0], [246.0, 100111.0], [245.0, 100111.0], [244.0, 100112.0], [243.0, 100112.0], [242.0, 100112.0], [241.0, 100112.0], [255.0, 100105.0], [254.0, 100105.0], [253.0, 100109.0], [252.0, 100110.0], [249.0, 100111.0], [248.0, 100111.0], [270.0, 100098.5], [268.0, 100100.0], [267.0, 100100.6], [264.0, 100101.0], [263.0, 100101.0], [260.0, 100102.0], [259.0, 100103.0], [257.0, 100103.0], [285.0, 100044.0], [286.0, 100043.0], [284.0, 100046.0], [283.0, 100047.0], [282.0, 100049.33333333333], [279.0, 100050.0], [278.0, 100052.0], [277.0, 100094.0], [275.0, 100096.66666666667], [272.0, 100097.0], [303.0, 100036.0], [302.0, 100036.0], [301.0, 100036.0], [300.0, 100036.0], [297.0, 100037.0], [294.0, 100039.0], [290.0, 100042.0], [289.0, 100042.0], [319.0, 100031.0], [316.0, 100031.5], [314.0, 100032.0], [312.0, 100033.33333333333], [309.0, 100033.0], [306.0, 100034.5], [304.0, 100034.0], [335.0, 100026.5], [332.0, 100028.0], [331.0, 100028.0], [329.0, 100028.0], [328.0, 100029.0], [327.0, 100030.0], [325.0, 100029.0], [322.0, 100030.0], [321.0, 100030.0], [349.0, 100146.0], [350.0, 100142.0], [348.0, 100020.0], [339.0, 100026.0], [338.0, 100026.33333333333], [347.0, 100019.5], [345.0, 100020.0], [344.0, 100021.0], [343.0, 100022.0], [341.0, 100025.0], [340.0, 100025.0], [365.0, 100122.0], [367.0, 100119.5], [364.0, 100124.0], [363.0, 100126.0], [361.0, 100127.0], [360.0, 100134.0], [359.0, 100135.0], [356.0, 100136.0], [355.0, 100139.0], [382.0, 94707.0], [383.0, 93699.0], [381.0, 94711.0], [380.0, 95718.0], [379.0, 95720.0], [378.0, 96728.0], [377.0, 96730.0], [376.0, 97738.0], [375.0, 95783.0], [369.0, 100116.0], [371.0, 98515.0], [370.0, 100113.0], [374.0, 96791.0], [373.0, 96793.0], [372.0, 97801.0], [398.0, 86626.0], [399.0, 84372.0], [397.0, 86628.0], [396.0, 87636.0], [395.0, 85681.0], [394.0, 86689.0], [393.0, 86691.0], [392.0, 87700.0], [391.0, 88449.0], [385.0, 92689.0], [384.0, 93697.0], [387.0, 89722.0], [386.0, 92688.0], [390.0, 88710.0], [389.0, 88712.0], [388.0, 89720.0], [414.0, 78545.0], [415.0, 77537.0], [413.0, 78547.0], [412.0, 79555.0], [411.0, 78311.0], [410.0, 79319.0], [409.0, 80568.0], [408.0, 81575.0], [407.0, 79620.0], [401.0, 82651.0], [400.0, 83660.0], [403.0, 82387.0], [402.0, 83395.0], [406.0, 80629.0], [405.0, 80632.0], [404.0, 81640.0], [430.0, 68508.0], [431.0, 67500.0], [429.0, 69257.0], [428.0, 69519.0], [427.0, 71477.0], [426.0, 72485.0], [425.0, 70530.0], [424.0, 71539.0], [423.0, 72251.0], [417.0, 74570.0], [416.0, 75578.0], [419.0, 73560.0], [418.0, 74568.0], [422.0, 73259.0], [421.0, 73261.0], [420.0, 74269.0], [446.0, 62384.0], [447.0, 61376.0], [445.0, 62386.0], [444.0, 63394.0], [443.0, 63396.0], [442.0, 64404.0], [441.0, 64406.0], [440.0, 65415.0], [439.0, 65416.0], [433.0, 66489.0], [432.0, 67498.0], [435.0, 65480.0], [434.0, 66488.0], [438.0, 66424.0], [437.0, 66426.0], [436.0, 67434.0], [462.0, 54303.0], [463.0, 53296.0], [461.0, 54306.0], [460.0, 55313.0], [459.0, 55315.0], [458.0, 56323.0], [457.0, 56325.0], [456.0, 57333.0], [455.0, 57335.0], [449.0, 60366.0], [448.0, 61373.0], [451.0, 59356.0], [450.0, 60363.0], [454.0, 58343.0], [453.0, 58345.0], [452.0, 59353.0], [478.0, 46223.0], [479.0, 45215.0], [477.0, 46225.0], [476.0, 47233.0], [475.0, 47235.0], [474.0, 48243.0], [473.0, 48245.0], [472.0, 49253.0], [471.0, 49255.0], [465.0, 52286.0], [464.0, 53293.0], [467.0, 51275.0], [466.0, 52283.0], [470.0, 50263.0], [469.0, 50265.0], [468.0, 51273.0], [494.0, 38143.0], [495.0, 37135.0], [493.0, 38145.0], [492.0, 39153.0], [491.0, 39155.0], [490.0, 40163.0], [489.0, 40165.0], [488.0, 41173.0], [487.0, 41175.0], [481.0, 44206.0], [480.0, 45213.0], [483.0, 43195.0], [482.0, 44203.0], [486.0, 42183.0], [485.0, 42185.0], [484.0, 43193.0], [510.0, 30063.0], [511.0, 29054.0], [509.0, 30065.0], [508.0, 31073.0], [507.0, 31075.0], [506.0, 32083.0], [505.0, 32085.0], [504.0, 33093.0], [503.0, 33095.0], [497.0, 36125.0], [496.0, 37133.0], [499.0, 35115.0], [498.0, 36123.0], [502.0, 34103.0], [501.0, 34105.0], [500.0, 35113.0], [536.0, 16933.0], [540.0, 16355.0], [528.0, 20973.0], [530.0, 19963.0], [538.0, 15923.0], [512.0, 29052.0], [514.0, 28043.0], [516.0, 27033.0], [518.0, 26023.0], [526.0, 21984.0], [524.0, 22994.0], [522.0, 24003.0], [520.0, 25013.0], [534.0, 17943.0], [532.0, 18953.0], [568.0, 16332.0], [572.0, 16329.0], [560.0, 16337.5], [562.0, 16336.0], [570.0, 16330.0], [558.0, 16338.0], [544.0, 16354.0], [546.0, 16353.0], [548.0, 16350.0], [550.0, 16349.0], [556.0, 16345.0], [554.0, 16347.0], [552.0, 16348.0], [566.0, 16334.0], [564.0, 16334.0], [604.0, 16287.0], [606.0, 16284.0], [592.0, 16307.0], [594.0, 16306.0], [596.0, 16303.0], [600.0, 16293.0], [582.0, 16319.0], [580.0, 16324.0], [578.0, 16327.0], [576.0, 16328.333333333334], [590.0, 16307.0], [588.0, 16310.0], [586.0, 16317.0], [598.0, 16301.0], [636.0, 13585.0], [624.0, 16258.0], [626.0, 16250.0], [628.0, 16247.0], [638.0, 13202.0], [634.0, 15139.0], [632.0, 14825.0], [610.0, 16277.5], [608.0, 16279.0], [612.0, 16276.0], [622.0, 16259.0], [620.0, 16265.0], [616.0, 16274.0], [630.0, 16242.0], [668.0, 10578.0], [670.0, 10570.0], [656.0, 10589.0], [658.0, 10587.0], [666.0, 10580.0], [640.0, 12192.0], [642.0, 11183.0], [644.0, 10173.0], [646.0, 10594.0], [650.0, 10592.0], [648.0, 10593.0], [662.0, 10582.0], [660.0, 10584.0], [696.0, 10573.0], [700.0, 10551.0], [702.0, 10548.0], [688.0, 10586.0], [690.0, 10582.0], [698.0, 10565.0], [672.0, 10485.0], [674.0, 10481.0], [676.0, 10480.0], [678.0, 10478.0], [686.0, 10590.5], [684.0, 10591.0], [682.0, 10606.0], [680.0, 10477.0], [694.0, 10575.0], [692.0, 10578.0], [730.0, 8554.0], [724.0, 10197.0], [734.0, 9231.666666666666], [720.0, 10364.0], [722.0, 10228.0], [728.0, 10113.0], [710.0, 10532.0], [708.0, 10535.0], [706.0, 10545.0], [704.0, 10548.0], [718.0, 10366.0], [714.0, 10530.0], [712.0, 10531.0], [726.0, 10147.0], [762.0, 8294.0], [766.0, 9680.0], [752.0, 9686.0], [754.0, 9685.0], [736.0, 8306.0], [738.0, 9069.5], [740.0, 9832.0], [742.0, 8304.0], [750.0, 9687.5], [748.0, 9687.0], [746.0, 8302.0], [744.0, 9830.0], [758.0, 9823.0], [756.0, 9684.0], [796.0, 9664.5], [798.0, 9801.0], [784.0, 9671.0], [786.0, 9670.0], [788.0, 9669.0], [794.0, 9666.0], [792.0, 9807.0], [774.0, 9677.0], [772.0, 9677.0], [770.0, 9679.0], [768.0, 9679.0], [782.0, 9672.0], [780.0, 9673.0], [776.0, 9675.0], [790.0, 9668.0], [828.0, 9765.0], [816.0, 9645.0], [818.0, 9637.0], [820.0, 9775.0], [830.0, 9625.0], [826.0, 9767.0], [824.0, 9628.0], [800.0, 9661.0], [802.0, 9661.0], [804.0, 9656.0], [806.0, 9653.0], [812.0, 9649.0], [810.0, 9650.0], [808.0, 9651.0], [822.0, 9630.5], [860.0, 9594.0], [862.0, 9662.0], [848.0, 9610.0], [850.0, 8222.0], [858.0, 9739.0], [834.0, 9250.666666666666], [836.0, 8927.0], [846.0, 9683.5], [844.0, 9719.75], [842.0, 9615.0], [840.0, 9754.0], [854.0, 9608.0], [852.0, 9610.0], [892.0, 7151.0], [894.0, 7381.0], [880.0, 7156.0], [882.0, 7387.0], [890.0, 7383.0], [888.0, 7384.5], [870.0, 7391.0], [868.0, 8034.0], [864.0, 9589.0], [876.0, 7157.0], [874.0, 7390.0], [872.0, 7391.0], [886.0, 7963.5], [884.0, 7385.0], [924.0, 7368.0], [926.0, 7366.0], [912.0, 8666.0], [914.0, 7372.0], [922.0, 8663.0], [920.0, 7370.0], [902.0, 7379.0], [900.0, 8674.0], [896.0, 8674.0], [910.0, 7904.0], [908.0, 8668.0], [906.0, 7144.0], [904.0, 7376.0], [954.0, 7341.0], [958.0, 7335.0], [944.0, 7348.0], [956.0, 7336.0], [952.0, 7698.0], [934.0, 7357.0], [932.0, 7358.0], [930.0, 7363.0], [928.0, 8012.0], [940.0, 7119.0], [938.0, 7353.0], [936.0, 7356.0], [948.0, 7229.0], [984.0, 7721.0], [986.0, 7073.0], [978.0, 7312.0], [976.0, 7316.0], [966.0, 7209.5], [964.0, 7097.0], [962.0, 7329.0], [960.0, 7334.0], [974.0, 7318.0], [972.0, 7320.0], [970.0, 7089.0], [968.0, 7208.0], [982.0, 7304.0], [980.0, 7310.5], [1020.0, 7020.0], [1022.0, 7666.0], [1008.0, 6378.0], [1010.0, 6377.0], [1018.0, 7668.0], [992.0, 8362.0], [994.0, 7065.0], [996.0, 8358.0], [998.0, 7062.0], [1006.0, 6378.0], [1004.0, 6777.0], [1002.0, 7053.0], [1000.0, 7056.0], [1014.0, 6376.0], [1072.0, 6997.5], [1080.0, 6994.0], [1056.0, 6357.0], [1064.0, 7649.0], [1084.0, 6345.0], [1076.0, 7643.0], [1024.0, 6370.0], [1032.0, 6368.0], [1028.0, 7663.0], [1036.0, 9048.0], [1052.0, 7653.0], [1048.0, 6361.0], [1044.0, 6362.0], [1040.0, 9045.0], [1068.0, 7647.0], [1136.0, 6304.0], [1148.0, 6292.0], [1124.0, 7607.0], [1140.0, 6302.0], [1100.0, 7627.0], [1092.0, 7632.0], [1088.0, 7639.5], [1112.0, 6324.0], [1132.0, 6958.5], [1128.0, 6313.0], [1204.0, 6520.0], [1212.0, 6514.0], [1184.0, 7524.0], [1188.0, 6226.5], [1192.0, 6204.0], [1200.0, 8174.5], [1164.0, 6583.75], [1160.0, 7555.0], [1152.0, 6284.0], [1180.0, 6244.0], [1172.0, 6247.0], [1168.0, 7543.0], [1196.0, 7489.0], [1272.0, 6019.0], [1248.0, 6030.0], [1252.0, 6026.0], [1276.0, 6833.0], [1268.0, 6021.0], [1264.0, 6021.0], [1216.0, 6512.0], [1224.0, 4940.0], [1228.0, 6193.0], [1240.0, 6032.0], [1236.0, 3937.0], [1260.0, 6023.0], [1336.0, 6788.0], [1340.0, 6242.666666666667], [1312.0, 6001.0], [1316.0, 5998.0], [1324.0, 6398.0], [1292.0, 6418.5], [1288.0, 6829.0], [1284.0, 6014.0], [1280.0, 6015.0], [1308.0, 6003.0], [1304.0, 6004.0], [1300.0, 6823.0], [1296.0, 4620.0], [1400.0, 5938.0], [1404.0, 5935.0], [1376.0, 6768.0], [1384.0, 5949.0], [1388.0, 5946.0], [1396.0, 5940.0], [1356.0, 6779.0], [1352.0, 5968.0], [1344.0, 5971.0], [1372.0, 6769.0], [1368.0, 6774.0], [1360.0, 6775.0], [1412.0, 5927.0], [1420.0, 5919.0], [1424.0, 6321.5], [1512.0, 6359.285714285715], [1596.0, 182.0], [1568.0, 5886.4], [1576.0, 2604.0], [1580.0, 185.0], [1592.0, 183.5], [1544.0, 6706.0], [1536.0, 6052.4], [1564.0, 5886.666666666667], [1560.0, 5585.692307692308], [1556.0, 5642.75], [1552.0, 6092.0], [1632.0, 287.0], [1648.0, 278.2], [1604.0, 180.0], [1628.0, 1594.0], [1636.0, 285.0], [1700.0, 271.0], [1696.0, 271.0], [1692.0, 274.08333333333337], [1684.0, 272.0], [1788.0, 257.0], [1780.0, 276.0], [1768.0, 260.0], [1800.0, 256.25], [1812.0, 255.0], [1804.0, 273.5], [1952.0, 166.0], [1940.0, 176.0], [2016.0, 204.0], [2040.0, 183.0], [2020.0, 187.0], [2024.0, 187.0], [2028.0, 186.0], [2036.0, 185.0], [2012.0, 1052.0], [2008.0, 115.5], [2000.0, 115.2], [2152.0, 4164.5], [2144.0, 3665.0], [2136.0, 3667.5], [2120.0, 3668.0], [2048.0, 180.0], [2064.0, 3825.4285714285716], [2104.0, 4178.857142857142], [2096.0, 3674.3333333333335], [2128.0, 4681.0], [2280.0, 4468.0], [2288.0, 3943.0], [2240.0, 4514.0], [2256.0, 4501.0], [2264.0, 4488.0], [2272.0, 4483.0], [2200.0, 4650.0], [2192.0, 4650.0], [2232.0, 3603.0], [2224.0, 4292.666666666667], [2208.0, 4648.0], [2416.0, 1566.0], [2424.0, 3855.0], [2368.0, 1610.0], [2384.0, 2752.0], [2392.0, 2719.0], [2304.0, 2799.5], [2312.0, 2225.5], [2320.0, 1649.0], [2328.0, 1647.0], [2360.0, 1621.0], [2352.0, 1626.0], [2344.0, 1630.0], [2336.0, 1637.5], [2544.0, 2690.5], [2496.0, 2732.0], [2504.0, 4092.0], [2512.0, 2719.0], [2552.0, 2688.0], [2536.0, 2700.0], [2528.0, 2708.75], [2432.0, 3835.0], [2440.0, 3827.0], [2448.0, 3824.0], [2456.0, 3786.0], [2488.0, 2734.0], [2480.0, 2807.0], [2472.0, 2823.0], [2464.0, 3784.0], [2664.0, 1283.0], [2624.0, 2144.0], [2632.0, 2129.0], [2680.0, 1216.0], [2656.0, 1328.0], [2576.0, 1803.0], [2616.0, 2150.5], [2608.0, 2156.0], [2592.0, 1614.0], [2792.0, 141.0], [2688.0, 1211.0], [2704.0, 1200.0], [2712.0, 1184.5], [2840.0, 2741.0], [2816.0, 1752.0], [2872.0, 70101.5], [2848.0, 1479.0], [2944.0, 133942.66666666666], [3000.0, 5585.0569439083965], [2952.0, 64938.0], [2960.0, 237.0], [2968.0, 232.0], [2984.0, 64428.0], [2976.0, 216.0], [2057.0, 3693.0], [2137.0, 3667.0], [2065.0, 3681.0], [2105.0, 3670.0], [2097.0, 4687.0], [2129.0, 3667.0], [2297.0, 2802.0], [2241.0, 3500.0], [2249.0, 4502.0], [2257.0, 3994.0], [2265.0, 4489.0], [2289.0, 3418.0], [2281.0, 4468.0], [2185.0, 4225.894736842105], [2233.0, 3579.0], [2313.0, 1651.0], [2417.0, 1567.0], [2393.0, 1574.0], [2401.0, 1572.0], [2305.0, 1655.0], [2321.0, 1649.5], [2329.0, 1647.0], [2361.0, 1619.0], [2353.0, 1626.0], [2345.0, 1629.0], [2337.0, 1636.0], [2529.0, 2708.0], [2553.0, 2687.0], [2497.0, 2730.0], [2521.0, 2712.0], [2433.0, 3833.0], [2457.0, 3787.0], [2481.0, 2806.0], [2473.0, 2823.0], [2465.0, 3782.0], [2681.0, 1215.0], [2673.0, 1219.0], [2625.0, 2143.0], [2633.0, 2126.0], [2641.0, 1931.0], [2649.0, 1334.0], [2665.0, 1283.0], [2657.0, 1326.0], [2561.0, 2676.0], [2577.0, 1804.0], [2585.0, 1620.0], [2617.0, 2150.0], [2609.0, 2157.0], [2601.0, 1611.0], [2801.0, 138.85714285714286], [2705.0, 1200.0], [2769.0, 154.0], [2809.0, 111.8], [2689.0, 1209.0], [2697.0, 1206.3333333333333], [2713.0, 1184.0], [2721.0, 1174.0], [2929.0, 99164.25], [2937.0, 115397.0], [2825.0, 70518.0], [2833.0, 1792.0], [2841.0, 2740.0], [2865.0, 70182.0], [2945.0, 82323.25], [2953.0, 64857.0], [2961.0, 237.0], [2977.0, 216.0], [1077.0, 7642.0], [1081.0, 6346.0], [1085.0, 6992.5], [1057.0, 7651.0], [1061.0, 7002.0], [1073.0, 7644.0], [1029.0, 6369.0], [1045.0, 6361.0], [1041.0, 6363.0], [1069.0, 7646.0], [1065.0, 6353.0], [1149.0, 6290.0], [1121.0, 7181.333333333333], [1141.0, 6302.0], [1117.0, 6970.0], [1097.0, 6333.0], [1101.0, 6330.0], [1109.0, 6325.0], [1105.0, 6329.0], [1133.0, 6310.0], [1129.0, 7607.0], [1209.0, 6517.0], [1201.0, 7481.0], [1189.0, 7522.0], [1185.0, 6229.0], [1193.0, 6205.0], [1213.0, 6514.0], [1205.0, 6519.0], [1153.0, 7577.0], [1157.0, 6927.0], [1165.0, 6258.0], [1181.0, 6242.0], [1177.0, 6245.0], [1173.0, 7542.0], [1197.0, 7486.0], [1229.0, 5498.0], [1277.0, 6015.0], [1249.0, 6845.0], [1265.0, 6021.0], [1225.0, 5502.0], [1221.0, 5859.0], [1217.0, 5216.0], [1245.0, 6303.333333333333], [1237.0, 3936.0], [1233.0, 6189.0], [1261.0, 6023.0], [1257.0, 6024.5], [1333.0, 6797.0], [1317.0, 5999.0], [1321.0, 5990.5], [1341.0, 5970.0], [1329.0, 6390.0], [1289.0, 6012.0], [1285.0, 6012.0], [1281.0, 6013.0], [1309.0, 6002.0], [1297.0, 6008.0], [1401.0, 5937.0], [1377.0, 6769.0], [1381.0, 6357.5], [1389.0, 5945.0], [1405.0, 5934.0], [1393.0, 6759.5], [1357.0, 5961.0], [1353.0, 5968.0], [1369.0, 6774.0], [1365.0, 5958.5], [1361.0, 6775.0], [1409.0, 6748.5], [1413.0, 6335.0], [1417.0, 6741.0], [1429.0, 6316.0], [1425.0, 6728.0], [1421.0, 6735.0], [1513.0, 5828.444444444444], [1589.0, 183.0], [1577.0, 2602.0], [1597.0, 182.0], [1593.0, 182.0], [1585.0, 183.0], [1545.0, 6706.0], [1541.0, 6298.0], [1565.0, 5886.0], [1557.0, 5882.9375], [1553.0, 6296.5], [1605.0, 180.0], [1601.0, 181.0], [1613.0, 177.0], [1629.0, 1591.0], [1625.0, 177.0], [1621.0, 177.0], [1617.0, 177.0], [1645.0, 278.0], [1641.0, 279.0], [1637.0, 285.0], [1697.0, 271.25], [1701.0, 280.0], [1693.0, 271.0], [1689.0, 272.0], [1685.0, 272.0], [1681.0, 273.0], [1781.0, 261.5], [1789.0, 257.0], [1777.0, 258.0], [1821.0, 269.77777777777777], [1813.0, 255.0], [1797.0, 257.0], [1793.0, 257.0], [1801.0, 257.0], [1809.0, 273.5], [1805.0, 291.5], [1953.0, 165.0], [1961.0, 141.25], [1945.0, 175.0], [1937.0, 176.6867469879518], [2033.0, 186.0], [2017.0, 203.0], [2025.0, 187.0], [2037.0, 185.0], [1997.0, 115.89999999999998], [2009.0, 114.0], [2005.0, 115.0], [2001.0, 115.0], [2029.0, 186.0], [2154.0, 4670.0], [2122.0, 3667.0], [2050.0, 179.0], [2066.0, 4693.0], [2138.0, 3666.0], [2282.0, 4452.0], [2242.0, 4514.0], [2258.0, 3994.0], [2290.0, 3950.0], [2274.0, 4482.0], [2202.0, 4649.0], [2186.0, 4145.875], [2218.0, 3619.0], [2210.0, 4141.5], [2370.0, 2754.0], [2426.0, 3855.0], [2386.0, 3896.0], [2394.0, 1573.0], [2418.0, 3856.0], [2402.0, 3859.0], [2306.0, 1654.0], [2322.0, 1648.0], [2530.0, 2707.0], [2498.0, 2729.0], [2522.0, 2711.0], [2538.0, 2699.5], [2434.0, 3829.0], [2442.0, 3826.0], [2450.0, 3824.0], [2482.0, 2736.0], [2474.0, 2820.0], [2674.0, 1218.0], [2626.0, 2144.0], [2642.0, 1931.0], [2682.0, 1214.0], [2658.0, 1326.0], [2562.0, 2672.0], [2570.0, 2643.0], [2578.0, 1803.0], [2586.0, 1619.0], [2594.0, 1614.5], [2706.0, 1198.0], [2770.0, 153.83333333333334], [2794.0, 140.0], [2698.0, 1207.0], [2722.0, 1145.0], [2778.0, 152.6842105263158], [2930.0, 100646.58333333334], [2842.0, 2737.0], [2882.0, 96449.0], [2818.0, 1751.0], [2826.0, 36158.0], [2866.0, 70181.5], [2858.0, 70189.66666666667], [2954.0, 64857.0], [2946.0, 64986.4], [2962.0, 234.0], [2970.0, 231.0], [2994.0, 241.37499999999997], [2147.0, 3664.0], [2067.0, 3680.0], [2083.0, 3675.0], [2139.0, 4679.0], [2131.0, 3667.0], [2291.0, 1659.0], [2243.0, 3499.0], [2259.0, 4498.0], [2267.0, 4487.0], [2275.0, 4481.0], [2203.0, 4311.333333333333], [2187.0, 4651.0], [2227.0, 3943.0], [2219.0, 4294.666666666667], [2211.0, 4649.0], [2403.0, 3858.0], [2379.0, 3897.0], [2371.0, 1610.0], [2387.0, 1580.0], [2427.0, 3855.0], [2323.0, 3938.0], [2363.0, 1619.0], [2355.0, 1624.0], [2347.0, 1627.5], [2339.0, 2780.5], [2443.0, 3825.5], [2507.0, 2724.0], [2515.0, 2718.6666666666665], [2523.0, 4076.0], [2435.0, 3829.0], [2451.0, 3824.0], [2491.0, 2733.0], [2483.0, 2735.0], [2475.0, 2819.0], [2667.0, 1283.0], [2675.0, 1217.0], [2627.0, 2141.0], [2635.0, 2123.5], [2651.0, 1333.6666666666667], [2659.0, 1325.0], [2563.0, 2671.0], [2579.0, 1801.0], [2587.0, 1618.5], [2619.0, 2147.5], [2611.0, 2153.0], [2603.0, 1611.0], [2595.0, 1613.0], [2771.0, 153.5], [2699.0, 1206.0], [2707.0, 1196.0], [2723.0, 1144.0], [2931.0, 117852.75], [2835.0, 1793.0], [2883.0, 133958.0], [2939.0, 133944.0], [2875.0, 70100.0], [2819.0, 1750.0], [2827.0, 1799.0], [2843.0, 2735.0], [2859.0, 70189.0], [2851.0, 91651.0], [2971.0, 231.0], [2995.0, 171.22727272727272], [2987.0, 32378.5], [539.0, 16355.0], [543.0, 16354.0], [529.0, 19965.0], [531.0, 18955.0], [537.0, 15925.0], [527.0, 20975.0], [513.0, 28045.0], [515.0, 27035.0], [517.0, 26025.0], [519.0, 25015.0], [525.0, 21985.0], [523.0, 22995.0], [521.0, 24005.0], [535.0, 16935.0], [533.0, 17945.0], [571.0, 16330.0], [573.0, 16329.0], [561.0, 16337.0], [563.0, 16335.0], [569.0, 16332.0], [545.0, 16353.0], [547.0, 16352.0], [549.0, 16350.0], [551.0, 16349.0], [557.0, 16342.0], [555.0, 16346.0], [553.0, 16348.0], [567.0, 16333.0], [565.0, 16334.0], [603.0, 16288.0], [601.0, 16292.0], [607.0, 16283.0], [595.0, 16306.0], [597.0, 16302.0], [605.0, 16285.0], [583.0, 16318.0], [581.0, 16318.0], [579.0, 16324.0], [577.0, 16328.0], [591.0, 16307.0], [589.0, 16308.0], [587.0, 16317.0], [585.0, 16317.0], [599.0, 16296.0], [637.0, 13204.0], [639.0, 12195.0], [625.0, 16250.0], [627.0, 16248.0], [629.0, 16246.0], [635.0, 13586.0], [633.0, 15141.0], [623.0, 16258.0], [611.0, 16278.0], [615.0, 16274.0], [613.0, 16276.0], [621.0, 16263.0], [619.0, 16272.0], [617.0, 16273.0], [631.0, 14827.0], [665.0, 10581.0], [669.0, 10575.0], [657.0, 10588.0], [659.0, 10585.0], [667.0, 10580.0], [655.0, 10589.0], [641.0, 11185.0], [643.0, 10176.0], [645.0, 10595.0], [647.0, 10593.0], [653.0, 10590.0], [651.0, 10590.0], [649.0, 10593.0], [663.0, 10581.0], [661.0, 10583.0], [697.0, 10570.0], [689.0, 10584.0], [691.0, 10579.0], [699.0, 10562.0], [687.0, 10589.0], [673.0, 10483.0], [677.0, 10479.0], [679.0, 10478.0], [683.0, 10592.0], [681.0, 10472.0], [695.0, 10575.0], [693.0, 10576.0], [729.0, 10105.0], [731.0, 8552.0], [721.0, 10362.0], [723.0, 10207.0], [711.0, 10531.0], [709.0, 10534.0], [707.0, 10541.0], [705.0, 10545.0], [717.0, 10371.5], [715.0, 10527.0], [713.0, 10530.0], [727.0, 10127.0], [725.0, 10170.0], [763.0, 8295.0], [761.0, 9682.5], [767.0, 9679.0], [753.0, 8299.0], [755.0, 8298.0], [765.0, 9749.5], [751.0, 9687.0], [737.0, 8306.0], [739.0, 9692.0], [743.0, 8998.0], [747.0, 8302.0], [745.0, 9831.0], [759.0, 8295.0], [757.0, 8298.0], [793.0, 9666.0], [799.0, 9662.0], [785.0, 9671.0], [787.0, 9670.0], [789.0, 9669.0], [797.0, 9663.0], [775.0, 9676.0], [773.0, 9676.0], [771.0, 9677.0], [769.0, 8292.0], [783.0, 9811.0], [781.0, 9673.0], [779.0, 9674.0], [777.0, 9675.0], [791.0, 9805.0], [829.0, 9626.0], [831.0, 9621.0], [817.0, 9776.0], [819.0, 9636.0], [827.0, 8239.0], [825.0, 9627.0], [815.0, 9645.0], [801.0, 9661.0], [803.0, 9657.0], [805.0, 9656.0], [813.0, 9784.0], [811.0, 8262.0], [809.0, 9652.0], [823.0, 9769.0], [863.0, 9593.0], [849.0, 9611.0], [859.0, 9736.0], [857.0, 9669.5], [847.0, 9751.0], [839.0, 9616.0], [855.0, 9744.0], [853.0, 9678.5], [889.0, 8538.0], [893.0, 7381.0], [881.0, 7387.0], [883.0, 7386.0], [891.0, 8538.0], [871.0, 7391.0], [869.0, 8032.0], [867.0, 9629.666666666666], [879.0, 7849.5], [877.0, 7389.0], [875.0, 7159.0], [873.0, 7159.0], [921.0, 7364.0], [925.0, 7367.0], [913.0, 8666.0], [915.0, 7370.0], [923.0, 7368.0], [903.0, 7372.0], [901.0, 7378.0], [899.0, 7379.0], [897.0, 7380.0], [911.0, 7373.0], [907.0, 7375.0], [905.0, 7376.0], [919.0, 7256.0], [917.0, 7371.0], [953.0, 7109.0], [957.0, 7336.0], [947.0, 7345.0], [945.0, 7347.0], [955.0, 8632.0], [935.0, 7356.0], [933.0, 7357.0], [931.0, 7362.0], [929.0, 7363.0], [943.0, 7347.666666666667], [939.0, 7121.0], [937.0, 7354.0], [949.0, 8639.0], [987.0, 8368.0], [989.0, 7072.0], [991.0, 7071.0], [977.0, 7315.0], [963.0, 7328.0], [961.0, 7334.0], [975.0, 7316.0], [973.0, 7320.0], [971.0, 7321.0], [969.0, 7325.0], [981.0, 7308.0], [1017.0, 7670.5], [1023.0, 6371.0], [1009.0, 7672.0], [1021.0, 7667.0], [1007.0, 6379.0], [993.0, 7065.0], [995.0, 7065.0], [997.0, 8358.0], [999.0, 7061.0], [1005.0, 7673.0], [1003.0, 6779.0], [1001.0, 7054.0], [1015.0, 7023.0], [1013.0, 6376.0], [1011.0, 7672.0], [1078.0, 6347.0], [1086.0, 6345.0], [1058.0, 6356.0], [1082.0, 6346.0], [1074.0, 6349.0], [1054.0, 6358.5], [1026.0, 7018.0], [1034.0, 7663.0], [1050.0, 6360.0], [1046.0, 7656.0], [1042.0, 7657.0], [1070.0, 6352.0], [1102.0, 6329.0], [1138.0, 6303.0], [1126.0, 7608.0], [1150.0, 6287.0], [1098.0, 6333.0], [1094.0, 7675.0], [1090.0, 6344.0], [1118.0, 6322.0], [1110.0, 6325.0], [1106.0, 6326.0], [1130.0, 6312.0], [1206.0, 6517.0], [1202.0, 5613.0], [1214.0, 6513.0], [1186.0, 6229.0], [1190.0, 6226.0], [1194.0, 6204.0], [1210.0, 6516.0], [1166.0, 8934.0], [1158.0, 6280.0], [1154.0, 6282.0], [1182.0, 6239.0], [1178.0, 6245.5], [1174.0, 6247.0], [1170.0, 6248.5], [1198.0, 6188.0], [1274.0, 6834.5], [1278.0, 6014.0], [1250.0, 6028.0], [1254.0, 5332.0], [1270.0, 6837.0], [1266.0, 6022.0], [1246.0, 6030.0], [1218.0, 6510.0], [1222.0, 5210.0], [1226.0, 5501.0], [1238.0, 6034.0], [1234.0, 5495.0], [1258.0, 6024.0], [1342.0, 5969.0], [1314.0, 6000.5], [1318.0, 6813.0], [1322.0, 6807.0], [1326.0, 6398.0], [1334.0, 5980.0], [1330.0, 6798.0], [1294.0, 6417.5], [1290.0, 6011.0], [1310.0, 6002.0], [1306.0, 6003.5], [1302.0, 6005.0], [1406.0, 6750.0], [1382.0, 5949.0], [1378.0, 5949.0], [1386.0, 6219.0], [1390.0, 6761.0], [1402.0, 5935.0], [1398.0, 6347.0], [1394.0, 5941.0], [1358.0, 5958.0], [1354.0, 6377.5], [1374.0, 6360.5], [1366.0, 6774.0], [1410.0, 6744.0], [1430.0, 5906.0], [1414.0, 6742.0], [1426.0, 5910.0], [1422.0, 5913.0], [1586.0, 183.5], [1590.0, 183.0], [1598.0, 182.0], [1578.0, 186.0], [1582.0, 183.0], [1550.0, 5888.0], [1546.0, 6705.0], [1542.0, 5888.5], [1562.0, 6295.666666666666], [1558.0, 6005.159999999999], [1554.0, 5922.714285714285], [1614.0, 177.0], [1638.0, 285.0], [1610.0, 178.0], [1602.0, 180.66666666666666], [1626.0, 177.0], [1622.0, 176.5], [1634.0, 286.0], [1702.0, 272.0], [1786.0, 257.0], [1774.0, 258.0], [1770.0, 258.0], [1766.0, 259.0], [1798.0, 257.4166666666667], [1794.0, 256.6666666666667], [1810.0, 291.0], [1806.0, 259.00000000000006], [1942.0, 176.0], [1938.0, 175.9090909090909], [2018.0, 200.0], [2046.0, 180.0], [2022.0, 188.0], [2026.0, 187.0], [2034.0, 185.0], [1998.0, 116.0], [2014.0, 206.0], [2010.0, 114.0], [2108.0, 3668.0], [2052.0, 179.0], [2076.0, 3678.0], [2100.0, 4687.5], [2092.0, 3674.0], [2140.0, 4172.5], [2268.0, 4487.0], [2300.0, 3183.6666666666665], [2204.0, 4649.5], [2196.0, 3637.0], [2236.0, 4241.333333333333], [2220.0, 4631.0], [2388.0, 1575.0], [2308.0, 1653.0], [2332.0, 2219.25], [2364.0, 3907.0], [2548.0, 3030.75], [2556.0, 2679.0], [2500.0, 3411.5], [2508.0, 2724.0], [2516.0, 2718.0], [2540.0, 2698.0], [2532.0, 3389.0], [2436.0, 3828.0], [2492.0, 2732.0], [2476.0, 2817.0], [2468.0, 3774.3333333333335], [2668.0, 1282.0], [2684.0, 1214.0], [2628.0, 2141.0], [2636.0, 2116.0], [2652.0, 1334.0], [2564.0, 2670.0], [2572.0, 2641.666666666667], [2580.0, 1800.0], [2604.0, 1611.0], [2788.0, 141.3], [2804.0, 138.0], [2772.0, 153.78571428571428], [2708.0, 1191.0], [2724.0, 185.0], [2836.0, 1791.5], [2884.0, 133956.0], [2932.0, 133367.11111111112], [2924.0, 133946.0], [2820.0, 1746.0], [2844.0, 1780.0], [2868.0, 70179.0], [2860.0, 70188.0], [2852.0, 134559.0], [2948.0, 73132.77777777778], [2972.0, 231.0], [2077.0, 4692.0], [2101.0, 3674.0], [2093.0, 3674.6666666666665], [2141.0, 4003.6666666666665], [2277.0, 4480.0], [2245.0, 4000.0], [2293.0, 1659.0], [2301.0, 3946.0], [2261.0, 3984.0], [2205.0, 4649.0], [2197.0, 3635.0], [2237.0, 4574.0], [2221.0, 4292.333333333333], [2421.0, 3092.3333333333335], [2397.0, 1574.0], [2333.0, 1645.0], [2365.0, 1615.0], [2357.0, 1624.0], [2349.0, 1627.0], [2341.0, 1635.0], [2541.0, 2696.0], [2549.0, 4054.0], [2509.0, 2723.0], [2557.0, 2677.0], [2533.0, 2701.0], [2453.0, 3823.5], [2493.0, 2732.0], [2485.0, 2735.0], [2477.0, 2816.0], [2685.0, 1213.0], [2629.0, 2133.0], [2637.0, 1935.0], [2645.0, 1926.6666666666667], [2653.0, 1332.0], [2677.0, 1217.5], [2669.0, 1282.0], [2661.0, 1321.0], [2565.0, 4010.0], [2573.0, 2638.0], [2581.0, 1620.0], [2589.0, 1617.0], [2621.0, 2146.0], [2613.0, 2152.0], [2605.0, 1611.0], [2773.0, 153.625], [2725.0, 184.0], [2693.0, 1208.0], [2701.0, 1205.0], [2709.0, 1189.0], [2717.0, 1183.0], [2941.0, 64955.0], [2917.0, 85671.75], [2885.0, 65130.0], [2821.0, 1743.0], [2829.0, 1797.5], [2837.0, 1786.0], [2845.0, 1778.0], [2869.0, 70176.0], [2853.0, 70191.0], [2997.0, 171.22222222222226], [2957.0, 87834.0], [2965.0, 233.66666666666666], [2989.0, 209.0], [2981.0, 217.0], [1039.0, 7660.0], [1063.0, 7648.0], [1059.0, 6355.0], [1075.0, 6348.0], [1035.0, 7661.0], [1031.0, 7016.0], [1027.0, 6371.0], [1055.0, 7653.0], [1051.0, 7654.0], [1047.0, 6361.0], [1043.0, 6362.0], [1067.0, 7647.0], [1139.0, 6303.0], [1151.0, 7581.0], [1147.0, 6818.0], [1143.0, 7596.0], [1095.0, 6335.0], [1091.0, 6336.0], [1099.0, 7627.0], [1103.0, 6329.0], [1115.0, 6755.666666666667], [1107.0, 6325.0], [1135.0, 6957.0], [1123.0, 7658.0], [1207.0, 6517.0], [1215.0, 5217.0], [1191.0, 6207.0], [1211.0, 6515.0], [1203.0, 5604.0], [1183.0, 6231.0], [1155.0, 7577.0], [1159.0, 6279.0], [1167.0, 7544.0], [1179.0, 7538.0], [1171.0, 7543.0], [1195.0, 6199.0], [1271.0, 6019.0], [1255.0, 6026.0], [1279.0, 6832.0], [1251.0, 4639.0], [1275.0, 6016.0], [1231.0, 5497.0], [1223.0, 4942.0], [1219.0, 5215.0], [1247.0, 6030.0], [1243.0, 6440.0], [1239.0, 6849.0], [1235.0, 5493.0], [1263.0, 6840.0], [1335.0, 6797.0], [1315.0, 6000.0], [1343.0, 6379.0], [1319.0, 5992.0], [1327.0, 5988.0], [1331.0, 5980.0], [1295.0, 6008.0], [1287.0, 6829.0], [1283.0, 5320.0], [1311.0, 6818.0], [1303.0, 6005.0], [1299.0, 5722.0], [1403.0, 5937.0], [1407.0, 6749.0], [1379.0, 5950.0], [1387.0, 5946.0], [1391.0, 5944.0], [1395.0, 6757.0], [1359.0, 5959.0], [1355.0, 6085.571428571428], [1371.0, 5954.5], [1367.0, 5957.0], [1363.0, 6366.0], [1431.0, 5906.0], [1415.0, 5925.0], [1419.0, 6736.0], [1427.0, 5910.0], [1511.0, 4968.0], [1499.0, 5894.0], [1587.0, 183.0], [1595.0, 182.0], [1575.0, 6155.7], [1579.0, 185.0], [1551.0, 5887.5], [1567.0, 5193.5], [1563.0, 5887.0], [1555.0, 6296.5], [1611.0, 178.0], [1631.0, 288.5], [1627.0, 176.0], [1623.0, 177.0], [1619.0, 176.5], [1643.0, 278.3333333333333], [1703.0, 285.0666666666667], [1699.0, 272.0], [1695.0, 271.0], [1691.0, 272.0], [1683.0, 272.0], [1787.0, 257.0], [1791.0, 257.0], [1767.0, 259.0], [1795.0, 257.0], [1803.0, 256.25], [1811.0, 255.0], [1807.0, 291.0], [1951.0, 166.0], [1947.0, 166.0], [1939.0, 176.13333333333333], [2039.0, 183.0], [2019.0, 192.0], [1999.0, 115.2], [2015.0, 204.0], [2011.0, 1054.0], [2007.0, 115.0], [2003.0, 116.0], [2031.0, 186.5], [2150.0, 4474.4], [2054.0, 121.0], [2142.0, 4172.25], [2134.0, 4680.0], [2246.0, 4503.0], [2302.0, 3945.0], [2254.0, 4501.666666666667], [2262.0, 4491.0], [2270.0, 4483.5], [2278.0, 4480.5], [2198.0, 3973.3333333333335], [2238.0, 3505.0], [2230.0, 3942.0], [2430.0, 2938.3999999999996], [2382.0, 2752.0], [2390.0, 2720.0], [2398.0, 2718.0], [2406.0, 3093.3333333333335], [2318.0, 1650.8], [2326.0, 1646.3333333333333], [2334.0, 1641.0], [2366.0, 3901.0], [2358.0, 3913.0], [2350.0, 1627.5], [2342.0, 1634.5], [2542.0, 2691.0], [2534.0, 2701.0], [2518.0, 2716.0], [2558.0, 2677.0], [2438.0, 3827.5], [2454.0, 3823.5], [2462.0, 3785.25], [2494.0, 2732.0], [2486.0, 2734.0], [2670.0, 1277.0], [2662.0, 1286.0], [2630.0, 2127.0], [2646.0, 1641.0], [2686.0, 1212.0], [2582.0, 1621.0], [2622.0, 2145.0], [2614.0, 2151.0], [2606.0, 1604.0], [2598.0, 2977.0], [2814.0, 103.2], [2694.0, 1208.0], [2702.0, 1205.0], [2710.0, 1186.0], [2718.0, 1183.0], [2774.0, 154.5], [2822.0, 70518.0], [2830.0, 1794.0], [2838.0, 1785.0], [2846.0, 73404.0], [2862.0, 70187.0], [2958.0, 64536.0], [2998.0, 171.0], [2990.0, 328.0], [2982.0, 216.0], [2055.0, 4706.0], [2159.0, 4062.6], [2111.0, 3668.3333333333335], [2103.0, 4348.333333333334], [2143.0, 4341.5], [2135.0, 3667.0], [2127.0, 4681.0], [2287.0, 3690.0], [2255.0, 4501.0], [2247.0, 4503.0], [2263.0, 4489.0], [2271.0, 4483.0], [2295.0, 1658.0], [2279.0, 4469.0], [2207.0, 3973.0], [2199.0, 4311.666666666667], [2239.0, 4514.0], [2231.0, 4618.0], [2223.0, 3617.0], [2311.0, 1653.0], [2423.0, 1566.0], [2431.0, 1552.0], [2399.0, 3862.0], [2367.0, 3900.0], [2359.0, 1623.0], [2351.0, 1627.0], [2343.0, 1634.0], [2559.0, 4041.0], [2551.0, 2689.5], [2503.0, 2728.3333333333335], [2511.0, 2721.5], [2519.0, 2716.0], [2527.0, 2709.0], [2535.0, 2700.0], [2495.0, 2731.0], [2439.0, 3828.0], [2455.0, 3787.0], [2463.0, 3785.0], [2479.0, 2809.5], [2471.0, 3754.6666666666665], [2687.0, 1211.0], [2679.0, 1216.0], [2631.0, 2129.0], [2639.0, 1934.0], [2647.0, 1634.0], [2655.0, 1328.0], [2671.0, 1278.0], [2663.0, 1284.0], [2623.0, 2144.0], [2575.0, 2631.0], [2583.0, 1620.0], [2591.0, 1616.5], [2607.0, 1577.0], [2599.0, 1612.0], [2815.0, 96.0], [2703.0, 1205.0], [2719.0, 1176.0], [2839.0, 1785.0], [2943.0, 133942.5], [2831.0, 1794.0], [2847.0, 1479.0], [2871.0, 134470.0], [2863.0, 70182.0], [2855.0, 70190.5], [2967.0, 232.0], [2951.0, 110930.66666666667], [2999.0, 185.09090909090915], [2983.0, 216.25]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2931.4948477285548, 6362.730382324538]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 991.2, "minX": 1.68301638E12, "maxY": 182195.81666666668, "series": [{"data": [[1.6830168E12, 4467.833333333333], [1.6830165E12, 154942.05], [1.68301668E12, 61301.73333333333], [1.68301638E12, 54399.833333333336], [1.68301656E12, 169198.66666666666], [1.68301674E12, 1446.3333333333333], [1.68301644E12, 182195.81666666668], [1.68301662E12, 157770.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6830168E12, 3124.8], [1.6830165E12, 107167.2], [1.68301668E12, 44755.2], [1.68301638E12, 38648.4], [1.68301656E12, 118792.8], [1.68301674E12, 991.2], [1.68301644E12, 121808.4], [1.68301662E12, 110628.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830168E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3816.4174143556384, "minX": 1.68301638E12, "maxY": 100104.7876344086, "series": [{"data": [[1.6830168E12, 100104.7876344086], [1.6830165E12, 10525.766461466572], [1.68301668E12, 4477.591966966967], [1.68301638E12, 5655.79895674855], [1.68301656E12, 3916.864941309564], [1.68301674E12, 68843.33050847457], [1.68301644E12, 3816.4174143556384], [1.68301662E12, 5581.086785308604]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830168E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3266.9373980424007, "minX": 1.68301638E12, "maxY": 100104.77956989252, "series": [{"data": [[1.6830168E12, 100104.77956989252], [1.6830165E12, 9739.482116418565], [1.68301668E12, 4477.570945945946], [1.68301638E12, 5655.779613127575], [1.68301656E12, 3916.8572337717337], [1.68301674E12, 68843.32203389831], [1.68301644E12, 3266.9373980424007], [1.68301662E12, 5313.455357819005]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830168E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.05932203389830507, "minX": 1.68301638E12, "maxY": 3393.6650822099346, "series": [{"data": [[1.6830168E12, 0.11021505376344089], [1.6830165E12, 3393.6650822099346], [1.68301668E12, 472.89564564564523], [1.68301638E12, 96.76505107585324], [1.68301656E12, 756.8492433884923], [1.68301674E12, 0.05932203389830507], [1.68301644E12, 2217.324361065796], [1.68301662E12, 1267.894055282092]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830168E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.68301638E12, "maxY": 242489.0, "series": [{"data": [[1.6830168E12, 100318.0], [1.6830165E12, 141003.0], [1.68301668E12, 134563.0], [1.68301638E12, 28709.0], [1.68301656E12, 144212.0], [1.68301674E12, 97738.0], [1.68301644E12, 88251.0], [1.68301662E12, 242489.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6830168E12, 100268.0], [1.6830165E12, 22044.1], [1.68301668E12, 7666.1], [1.68301638E12, 12141.0], [1.68301656E12, 5464.0], [1.68301674E12, 93697.2], [1.68301644E12, 2181.800000000001], [1.68301662E12, 10681.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6830168E12, 100292.24], [1.6830165E12, 130689.41], [1.68301668E12, 70190.71], [1.68301638E12, 24850.98], [1.68301656E12, 96730.6199999999], [1.68301674E12, 97558.45], [1.68301644E12, 63986.0], [1.68301662E12, 78604.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6830168E12, 100277.0], [1.6830165E12, 77152.0], [1.68301668E12, 12193.650000000001], [1.68301638E12, 14741.9], [1.68301656E12, 18142.0], [1.68301674E12, 95830.25], [1.68301644E12, 28941.0], [1.68301662E12, 13261.599999999991]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6830168E12, 97801.0], [1.6830165E12, 14.0], [1.68301668E12, 19.0], [1.68301638E12, 27.0], [1.68301656E12, 21.0], [1.68301674E12, 40163.0], [1.68301644E12, 19.0], [1.68301662E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6830168E12, 100119.0], [1.6830165E12, 156.0], [1.68301668E12, 194.5], [1.68301638E12, 4254.0], [1.68301656E12, 159.0], [1.68301674E12, 67499.0], [1.68301644E12, 161.0], [1.68301662E12, 169.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830168E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 42.0, "minX": 1.0, "maxY": 134694.0, "series": [{"data": [[2.0, 49759.0], [4.0, 35561.5], [5.0, 25784.5], [6.0, 4827.0], [7.0, 9469.5], [8.0, 1631.5], [10.0, 2177.5], [11.0, 72119.0], [12.0, 3073.0], [13.0, 5497.0], [14.0, 12457.5], [15.0, 11582.0], [16.0, 21183.5], [17.0, 42.0], [18.0, 4340.5], [19.0, 6317.5], [21.0, 6518.0], [22.0, 12425.0], [23.0, 64224.0], [26.0, 7186.0], [32.0, 1616.5], [34.0, 73085.5], [38.0, 2142.0], [41.0, 40567.0], [42.0, 186.0], [54.0, 1038.5], [58.0, 10008.5], [60.0, 70100.0], [66.0, 100.0], [71.0, 4323.0], [70.0, 9645.0], [75.0, 9350.0], [77.0, 11214.0], [78.0, 1213.5], [82.0, 158.5], [91.0, 28932.0], [95.0, 55726.0], [92.0, 153.0], [94.0, 16317.0], [96.0, 159.0], [101.0, 68794.5], [104.0, 2716.0], [110.0, 109.0], [108.0, 100121.5], [114.0, 11795.5], [122.0, 22002.5], [133.0, 132.0], [135.0, 7354.0], [139.0, 132.0], [149.0, 291.0], [154.0, 4243.0], [159.0, 187.0], [155.0, 9969.0], [156.0, 137.0], [167.0, 148.0], [163.0, 138.0], [168.0, 11341.5], [169.0, 100145.0], [178.0, 112.0], [182.0, 1659.0], [190.0, 157.0], [185.0, 3518.0], [184.0, 110.0], [189.0, 161.0], [186.0, 148.0], [195.0, 161.0], [199.0, 6361.0], [205.0, 190.0], [200.0, 1732.0], [210.0, 3429.0], [214.0, 151.5], [209.0, 7125.0], [211.0, 163.0], [213.0, 138.0], [221.0, 147.0], [219.0, 161.0], [223.0, 150.0], [217.0, 153.0], [222.0, 146.0], [218.0, 142.0], [220.0, 14365.0], [216.0, 162.0], [225.0, 133.0], [227.0, 148.5], [228.0, 12594.0], [224.0, 162.0], [229.0, 165.0], [237.0, 8840.5], [235.0, 130.0], [232.0, 156.0], [239.0, 8361.0], [233.0, 158.0], [247.0, 196.0], [242.0, 149.0], [244.0, 167.5], [243.0, 181.0], [250.0, 100186.5], [254.0, 6081.0], [248.0, 6726.0], [262.0, 160.0], [263.0, 154.0], [268.0, 167.0], [264.0, 137.0], [259.0, 145.0], [256.0, 149.0], [257.0, 143.0], [260.0, 133.5], [319.0, 351.0], [306.0, 10891.0], [334.0, 13295.0], [332.0, 145.0], [331.0, 8547.0], [349.0, 118.0], [340.0, 5980.0], [356.0, 138.0], [361.0, 10395.0], [372.0, 204.5], [381.0, 222.0], [379.0, 154.0], [369.0, 4042.0], [382.0, 9041.0], [370.0, 144.0], [368.0, 207.0], [391.0, 157.0], [395.0, 158.0], [399.0, 144.0], [390.0, 138.0], [392.0, 302.0], [400.0, 133.0], [410.0, 176.0], [407.0, 134.0], [419.0, 8553.0], [431.0, 138.0], [429.0, 136.0], [416.0, 143.0], [425.0, 150.0], [433.0, 182.0], [438.0, 159.0], [447.0, 172.0], [436.0, 149.0], [445.0, 149.0], [442.0, 117.0], [439.0, 151.0], [435.0, 8080.0], [432.0, 148.0], [461.0, 156.0], [476.0, 12115.5], [469.0, 125.0], [470.0, 149.0], [478.0, 136.0], [471.0, 205.0], [493.0, 10819.0], [498.0, 6281.0], [517.0, 13263.0], [520.0, 132.0], [587.0, 10161.0], [617.0, 213.0], [629.0, 125.0], [632.0, 232.0], [655.0, 126.0], [653.0, 215.0], [651.0, 162.0], [657.0, 141.0], [640.0, 166.0], [645.0, 248.0], [675.0, 256.0], [689.0, 284.0], [716.0, 163.0], [714.0, 170.0], [742.0, 159.0], [737.0, 157.0], [786.0, 9609.0], [865.0, 261.0], [917.0, 230.0], [1147.0, 261.0], [1178.0, 167.0], [1.0, 51274.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 54321.0], [41.0, 44160.5], [361.0, 100885.0], [23.0, 44034.0], [742.0, 75786.5], [737.0, 19986.0], [101.0, 134694.0], [445.0, 6335.0], [865.0, 16343.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1178.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100186.5, "series": [{"data": [[2.0, 49759.0], [4.0, 35561.5], [5.0, 25784.5], [6.0, 4827.0], [7.0, 9469.5], [8.0, 1631.5], [10.0, 2177.5], [11.0, 72119.0], [12.0, 3073.0], [13.0, 5497.0], [14.0, 12457.5], [15.0, 11582.0], [16.0, 21183.5], [17.0, 42.0], [18.0, 4340.5], [19.0, 6317.5], [21.0, 6518.0], [22.0, 12425.0], [23.0, 64224.0], [26.0, 7186.0], [32.0, 1616.5], [34.0, 73085.5], [38.0, 2142.0], [41.0, 40567.0], [42.0, 186.0], [54.0, 1038.5], [58.0, 10008.5], [60.0, 70100.0], [66.0, 100.0], [71.0, 4323.0], [70.0, 9645.0], [75.0, 9350.0], [77.0, 11214.0], [78.0, 1213.5], [82.0, 158.5], [91.0, 28932.0], [95.0, 55726.0], [92.0, 153.0], [94.0, 16317.0], [96.0, 159.0], [101.0, 68794.5], [104.0, 2716.0], [110.0, 109.0], [108.0, 100121.5], [114.0, 11795.5], [122.0, 22002.5], [133.0, 132.0], [135.0, 7354.0], [139.0, 132.0], [149.0, 291.0], [154.0, 4243.0], [159.0, 187.0], [155.0, 9969.0], [156.0, 137.0], [167.0, 148.0], [163.0, 138.0], [168.0, 11341.5], [169.0, 100145.0], [178.0, 112.0], [182.0, 1659.0], [190.0, 157.0], [185.0, 3518.0], [184.0, 110.0], [189.0, 161.0], [186.0, 148.0], [195.0, 161.0], [199.0, 6361.0], [205.0, 190.0], [200.0, 1732.0], [210.0, 3429.0], [214.0, 151.5], [209.0, 7125.0], [211.0, 163.0], [213.0, 138.0], [221.0, 147.0], [219.0, 161.0], [223.0, 150.0], [217.0, 153.0], [222.0, 146.0], [218.0, 142.0], [220.0, 14365.0], [216.0, 162.0], [225.0, 133.0], [227.0, 148.5], [228.0, 12594.0], [224.0, 162.0], [229.0, 165.0], [237.0, 8840.5], [235.0, 130.0], [232.0, 156.0], [239.0, 8361.0], [233.0, 158.0], [247.0, 196.0], [242.0, 149.0], [244.0, 167.0], [243.0, 181.0], [250.0, 100186.5], [254.0, 6081.0], [248.0, 6726.0], [262.0, 160.0], [263.0, 154.0], [268.0, 167.0], [264.0, 137.0], [259.0, 145.0], [256.0, 149.0], [257.0, 143.0], [260.0, 133.0], [319.0, 351.0], [306.0, 10891.0], [334.0, 13295.0], [332.0, 145.0], [331.0, 8547.0], [349.0, 118.0], [340.0, 5980.0], [356.0, 138.0], [361.0, 10395.0], [372.0, 204.5], [381.0, 222.0], [379.0, 154.0], [369.0, 4042.0], [382.0, 9041.0], [370.0, 144.0], [368.0, 207.0], [391.0, 157.0], [395.0, 158.0], [399.0, 144.0], [390.0, 138.0], [392.0, 302.0], [400.0, 133.0], [410.0, 176.0], [407.0, 134.0], [419.0, 8553.0], [431.0, 138.0], [429.0, 136.0], [416.0, 143.0], [425.0, 150.0], [433.0, 182.0], [438.0, 159.0], [447.0, 172.0], [436.0, 149.0], [445.0, 149.0], [442.0, 117.0], [439.0, 151.0], [435.0, 8080.0], [432.0, 148.0], [461.0, 156.0], [476.0, 12115.5], [469.0, 125.0], [470.0, 149.0], [478.0, 136.0], [471.0, 205.0], [493.0, 10819.0], [498.0, 6281.0], [517.0, 13263.0], [520.0, 132.0], [587.0, 10161.0], [617.0, 213.0], [629.0, 125.0], [632.0, 232.0], [655.0, 126.0], [653.0, 215.0], [651.0, 162.0], [657.0, 141.0], [640.0, 166.0], [645.0, 248.0], [675.0, 256.0], [689.0, 284.0], [716.0, 163.0], [714.0, 170.0], [742.0, 159.0], [737.0, 157.0], [786.0, 9609.0], [865.0, 261.0], [917.0, 230.0], [1147.0, 261.0], [1178.0, 167.0], [1.0, 51274.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 0.0], [41.0, 0.0], [361.0, 0.0], [23.0, 0.0], [742.0, 0.0], [737.0, 0.0], [101.0, 0.0], [445.0, 0.0], [865.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1178.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 93.93333333333334, "minX": 1.68301638E12, "maxY": 242.31666666666666, "series": [{"data": [[1.6830165E12, 209.76666666666668], [1.68301668E12, 93.93333333333334], [1.68301638E12, 104.88333333333334], [1.68301656E12, 220.61666666666667], [1.68301644E12, 242.31666666666666], [1.68301662E12, 217.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68301668E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.68301638E12, "maxY": 241.68333333333334, "series": [{"data": [[1.6830168E12, 6.2], [1.6830165E12, 212.63333333333333], [1.68301668E12, 88.8], [1.68301638E12, 76.68333333333334], [1.68301656E12, 235.7], [1.68301674E12, 1.9666666666666666], [1.68301644E12, 241.68333333333334], [1.68301662E12, 219.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6830165E12, 1.25], [1.68301644E12, 3.5166666666666666], [1.68301662E12, 0.5833333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830168E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.68301638E12, "maxY": 241.68333333333334, "series": [{"data": [[1.6830168E12, 6.2], [1.6830165E12, 212.63333333333333], [1.68301668E12, 88.8], [1.68301638E12, 76.68333333333334], [1.68301656E12, 235.7], [1.68301674E12, 1.9666666666666666], [1.68301644E12, 241.68333333333334], [1.68301662E12, 219.5]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6830165E12, 1.25], [1.68301644E12, 3.5166666666666666], [1.68301662E12, 0.5833333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830168E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.68301638E12, "maxY": 241.68333333333334, "series": [{"data": [[1.6830168E12, 6.2], [1.6830165E12, 212.63333333333333], [1.68301668E12, 88.8], [1.68301638E12, 76.68333333333334], [1.68301656E12, 235.7], [1.68301674E12, 1.9666666666666666], [1.68301644E12, 241.68333333333334], [1.68301662E12, 219.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6830165E12, 1.25], [1.68301644E12, 3.5166666666666666], [1.68301662E12, 0.5833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830168E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

