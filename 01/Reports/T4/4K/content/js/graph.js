/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 142796.0, "series": [{"data": [[0.0, 12.0], [0.1, 22.0], [0.2, 26.0], [0.3, 28.0], [0.4, 30.0], [0.5, 30.0], [0.6, 32.0], [0.7, 33.0], [0.8, 33.0], [0.9, 34.0], [1.0, 34.0], [1.1, 35.0], [1.2, 36.0], [1.3, 36.0], [1.4, 37.0], [1.5, 38.0], [1.6, 39.0], [1.7, 40.0], [1.8, 41.0], [1.9, 42.0], [2.0, 43.0], [2.1, 44.0], [2.2, 46.0], [2.3, 46.0], [2.4, 47.0], [2.5, 48.0], [2.6, 49.0], [2.7, 50.0], [2.8, 51.0], [2.9, 53.0], [3.0, 53.0], [3.1, 53.0], [3.2, 54.0], [3.3, 54.0], [3.4, 55.0], [3.5, 55.0], [3.6, 55.0], [3.7, 56.0], [3.8, 57.0], [3.9, 58.0], [4.0, 59.0], [4.1, 59.0], [4.2, 60.0], [4.3, 60.0], [4.4, 61.0], [4.5, 62.0], [4.6, 63.0], [4.7, 63.0], [4.8, 64.0], [4.9, 64.0], [5.0, 66.0], [5.1, 66.0], [5.2, 66.0], [5.3, 68.0], [5.4, 69.0], [5.5, 70.0], [5.6, 71.0], [5.7, 73.0], [5.8, 75.0], [5.9, 78.0], [6.0, 81.0], [6.1, 87.0], [6.2, 97.0], [6.3, 99.0], [6.4, 113.0], [6.5, 168.0], [6.6, 170.0], [6.7, 243.0], [6.8, 255.0], [6.9, 398.0], [7.0, 410.0], [7.1, 437.0], [7.2, 679.0], [7.3, 1014.0], [7.4, 1069.0], [7.5, 1083.0], [7.6, 1087.0], [7.7, 1090.0], [7.8, 1092.0], [7.9, 1094.0], [8.0, 1097.0], [8.1, 1099.0], [8.2, 1102.0], [8.3, 1104.0], [8.4, 1106.0], [8.5, 1108.0], [8.6, 1110.0], [8.7, 1112.0], [8.8, 1114.0], [8.9, 1116.0], [9.0, 1117.0], [9.1, 1118.0], [9.2, 1120.0], [9.3, 1121.0], [9.4, 1122.0], [9.5, 1124.0], [9.6, 1125.0], [9.7, 1127.0], [9.8, 1128.0], [9.9, 1129.0], [10.0, 1130.0], [10.1, 1131.0], [10.2, 1132.0], [10.3, 1133.0], [10.4, 1134.0], [10.5, 1135.0], [10.6, 1137.0], [10.7, 1138.0], [10.8, 1140.0], [10.9, 1141.0], [11.0, 1143.0], [11.1, 1144.0], [11.2, 1146.0], [11.3, 1147.0], [11.4, 1149.0], [11.5, 1150.0], [11.6, 1151.0], [11.7, 1152.0], [11.8, 1155.0], [11.9, 1157.0], [12.0, 1158.0], [12.1, 1159.0], [12.2, 1161.0], [12.3, 1163.0], [12.4, 1165.0], [12.5, 1167.0], [12.6, 1168.0], [12.7, 1171.0], [12.8, 1173.0], [12.9, 1177.0], [13.0, 1179.0], [13.1, 1182.0], [13.2, 1185.0], [13.3, 1188.0], [13.4, 1189.0], [13.5, 1191.0], [13.6, 1194.0], [13.7, 1198.0], [13.8, 1201.0], [13.9, 1217.0], [14.0, 1231.0], [14.1, 1238.0], [14.2, 1243.0], [14.3, 1249.0], [14.4, 1260.0], [14.5, 1298.0], [14.6, 1317.0], [14.7, 1335.0], [14.8, 1400.0], [14.9, 1415.0], [15.0, 1430.0], [15.1, 1462.0], [15.2, 1529.0], [15.3, 1541.0], [15.4, 1545.0], [15.5, 1549.0], [15.6, 1586.0], [15.7, 1604.0], [15.8, 1620.0], [15.9, 1624.0], [16.0, 1629.0], [16.1, 1634.0], [16.2, 1640.0], [16.3, 1666.0], [16.4, 1678.0], [16.5, 1694.0], [16.6, 1705.0], [16.7, 1726.0], [16.8, 1735.0], [16.9, 1750.0], [17.0, 1758.0], [17.1, 1772.0], [17.2, 1795.0], [17.3, 1811.0], [17.4, 1828.0], [17.5, 1842.0], [17.6, 1860.0], [17.7, 1870.0], [17.8, 1876.0], [17.9, 1894.0], [18.0, 1914.0], [18.1, 1939.0], [18.2, 1974.0], [18.3, 1985.0], [18.4, 2000.0], [18.5, 2008.0], [18.6, 2019.0], [18.7, 2031.0], [18.8, 2052.0], [18.9, 2066.0], [19.0, 2073.0], [19.1, 2082.0], [19.2, 2090.0], [19.3, 2096.0], [19.4, 2104.0], [19.5, 2111.0], [19.6, 2121.0], [19.7, 2133.0], [19.8, 2141.0], [19.9, 2145.0], [20.0, 2150.0], [20.1, 2161.0], [20.2, 2167.0], [20.3, 2176.0], [20.4, 2183.0], [20.5, 2184.0], [20.6, 2185.0], [20.7, 2192.0], [20.8, 2197.0], [20.9, 2203.0], [21.0, 2208.0], [21.1, 2213.0], [21.2, 2217.0], [21.3, 2224.0], [21.4, 2231.0], [21.5, 2239.0], [21.6, 2242.0], [21.7, 2246.0], [21.8, 2260.0], [21.9, 2272.0], [22.0, 2283.0], [22.1, 2301.0], [22.2, 2308.0], [22.3, 2317.0], [22.4, 2331.0], [22.5, 2368.0], [22.6, 2419.0], [22.7, 2434.0], [22.8, 2445.0], [22.9, 2456.0], [23.0, 2466.0], [23.1, 2485.0], [23.2, 2506.0], [23.3, 2517.0], [23.4, 2526.0], [23.5, 2534.0], [23.6, 2540.0], [23.7, 2545.0], [23.8, 2553.0], [23.9, 2560.0], [24.0, 2568.0], [24.1, 2579.0], [24.2, 2586.0], [24.3, 2594.0], [24.4, 2609.0], [24.5, 2619.0], [24.6, 2647.0], [24.7, 2655.0], [24.8, 2661.0], [24.9, 2670.0], [25.0, 2677.0], [25.1, 2699.0], [25.2, 2713.0], [25.3, 2719.0], [25.4, 2730.0], [25.5, 2742.0], [25.6, 2755.0], [25.7, 2769.0], [25.8, 2780.0], [25.9, 2790.0], [26.0, 2801.0], [26.1, 2814.0], [26.2, 2824.0], [26.3, 2868.0], [26.4, 2896.0], [26.5, 2926.0], [26.6, 2941.0], [26.7, 2967.0], [26.8, 2992.0], [26.9, 2999.0], [27.0, 3033.0], [27.1, 3054.0], [27.2, 3077.0], [27.3, 3120.0], [27.4, 3137.0], [27.5, 3146.0], [27.6, 3160.0], [27.7, 3167.0], [27.8, 3180.0], [27.9, 3209.0], [28.0, 3220.0], [28.1, 3226.0], [28.2, 3232.0], [28.3, 3239.0], [28.4, 3246.0], [28.5, 3252.0], [28.6, 3255.0], [28.7, 3259.0], [28.8, 3263.0], [28.9, 3271.0], [29.0, 3273.0], [29.1, 3277.0], [29.2, 3288.0], [29.3, 3296.0], [29.4, 3305.0], [29.5, 3319.0], [29.6, 3325.0], [29.7, 3334.0], [29.8, 3350.0], [29.9, 3365.0], [30.0, 3385.0], [30.1, 3397.0], [30.2, 3410.0], [30.3, 3413.0], [30.4, 3424.0], [30.5, 3436.0], [30.6, 3448.0], [30.7, 3463.0], [30.8, 3474.0], [30.9, 3485.0], [31.0, 3491.0], [31.1, 3503.0], [31.2, 3511.0], [31.3, 3516.0], [31.4, 3534.0], [31.5, 3540.0], [31.6, 3546.0], [31.7, 3553.0], [31.8, 3561.0], [31.9, 3573.0], [32.0, 3582.0], [32.1, 3591.0], [32.2, 3598.0], [32.3, 3604.0], [32.4, 3610.0], [32.5, 3615.0], [32.6, 3620.0], [32.7, 3631.0], [32.8, 3649.0], [32.9, 3659.0], [33.0, 3666.0], [33.1, 3677.0], [33.2, 3687.0], [33.3, 3697.0], [33.4, 3706.0], [33.5, 3719.0], [33.6, 3728.0], [33.7, 3734.0], [33.8, 3762.0], [33.9, 3777.0], [34.0, 3792.0], [34.1, 3840.0], [34.2, 3875.0], [34.3, 3893.0], [34.4, 3995.0], [34.5, 4020.0], [34.6, 4123.0], [34.7, 4161.0], [34.8, 4181.0], [34.9, 4187.0], [35.0, 4207.0], [35.1, 4220.0], [35.2, 4280.0], [35.3, 4291.0], [35.4, 4309.0], [35.5, 4327.0], [35.6, 4347.0], [35.7, 4358.0], [35.8, 4369.0], [35.9, 4378.0], [36.0, 4385.0], [36.1, 4391.0], [36.2, 4401.0], [36.3, 4420.0], [36.4, 4437.0], [36.5, 4485.0], [36.6, 4531.0], [36.7, 4567.0], [36.8, 4580.0], [36.9, 4599.0], [37.0, 4610.0], [37.1, 4616.0], [37.2, 4625.0], [37.3, 4634.0], [37.4, 4645.0], [37.5, 4661.0], [37.6, 4670.0], [37.7, 4685.0], [37.8, 4698.0], [37.9, 4708.0], [38.0, 4718.0], [38.1, 4731.0], [38.2, 4743.0], [38.3, 4751.0], [38.4, 4759.0], [38.5, 4763.0], [38.6, 4775.0], [38.7, 4785.0], [38.8, 4794.0], [38.9, 4803.0], [39.0, 4811.0], [39.1, 4818.0], [39.2, 4824.0], [39.3, 4833.0], [39.4, 4843.0], [39.5, 4857.0], [39.6, 4878.0], [39.7, 4923.0], [39.8, 5009.0], [39.9, 5045.0], [40.0, 5078.0], [40.1, 5131.0], [40.2, 5182.0], [40.3, 5212.0], [40.4, 5224.0], [40.5, 5238.0], [40.6, 5252.0], [40.7, 5289.0], [40.8, 5320.0], [40.9, 5353.0], [41.0, 5395.0], [41.1, 5418.0], [41.2, 5445.0], [41.3, 5472.0], [41.4, 5481.0], [41.5, 5495.0], [41.6, 5508.0], [41.7, 5516.0], [41.8, 5521.0], [41.9, 5527.0], [42.0, 5535.0], [42.1, 5542.0], [42.2, 5549.0], [42.3, 5557.0], [42.4, 5570.0], [42.5, 5580.0], [42.6, 5594.0], [42.7, 5608.0], [42.8, 5625.0], [42.9, 5652.0], [43.0, 5664.0], [43.1, 5679.0], [43.2, 5698.0], [43.3, 5718.0], [43.4, 5726.0], [43.5, 5750.0], [43.6, 5770.0], [43.7, 5810.0], [43.8, 5854.0], [43.9, 5877.0], [44.0, 5900.0], [44.1, 5912.0], [44.2, 5921.0], [44.3, 5929.0], [44.4, 5946.0], [44.5, 5957.0], [44.6, 5972.0], [44.7, 5983.0], [44.8, 5992.0], [44.9, 6002.0], [45.0, 6023.0], [45.1, 6041.0], [45.2, 6056.0], [45.3, 6070.0], [45.4, 6089.0], [45.5, 6131.0], [45.6, 6142.0], [45.7, 6178.0], [45.8, 6244.0], [45.9, 6280.0], [46.0, 6300.0], [46.1, 6305.0], [46.2, 6321.0], [46.3, 6358.0], [46.4, 6383.0], [46.5, 6398.0], [46.6, 6419.0], [46.7, 6430.0], [46.8, 6438.0], [46.9, 6449.0], [47.0, 6472.0], [47.1, 6487.0], [47.2, 6506.0], [47.3, 6514.0], [47.4, 6524.0], [47.5, 6532.0], [47.6, 6541.0], [47.7, 6550.0], [47.8, 6555.0], [47.9, 6562.0], [48.0, 6568.0], [48.1, 6572.0], [48.2, 6580.0], [48.3, 6593.0], [48.4, 6608.0], [48.5, 6630.0], [48.6, 6652.0], [48.7, 6679.0], [48.8, 6689.0], [48.9, 6718.0], [49.0, 6742.0], [49.1, 6766.0], [49.2, 6774.0], [49.3, 6809.0], [49.4, 6847.0], [49.5, 6854.0], [49.6, 6873.0], [49.7, 6882.0], [49.8, 6890.0], [49.9, 6902.0], [50.0, 6913.0], [50.1, 6919.0], [50.2, 6930.0], [50.3, 6932.0], [50.4, 6940.0], [50.5, 6984.0], [50.6, 7010.0], [50.7, 7060.0], [50.8, 7079.0], [50.9, 7089.0], [51.0, 7102.0], [51.1, 7115.0], [51.2, 7126.0], [51.3, 7134.0], [51.4, 7154.0], [51.5, 7178.0], [51.6, 7199.0], [51.7, 7208.0], [51.8, 7220.0], [51.9, 7235.0], [52.0, 7241.0], [52.1, 7250.0], [52.2, 7262.0], [52.3, 7274.0], [52.4, 7288.0], [52.5, 7321.0], [52.6, 7333.0], [52.7, 7361.0], [52.8, 7376.0], [52.9, 7391.0], [53.0, 7406.0], [53.1, 7429.0], [53.2, 7452.0], [53.3, 7458.0], [53.4, 7466.0], [53.5, 7494.0], [53.6, 7514.0], [53.7, 7525.0], [53.8, 7541.0], [53.9, 7568.0], [54.0, 7591.0], [54.1, 7602.0], [54.2, 7612.0], [54.3, 7619.0], [54.4, 7631.0], [54.5, 7650.0], [54.6, 7660.0], [54.7, 7674.0], [54.8, 7691.0], [54.9, 7703.0], [55.0, 7715.0], [55.1, 7725.0], [55.2, 7736.0], [55.3, 7754.0], [55.4, 7774.0], [55.5, 7784.0], [55.6, 7790.0], [55.7, 7805.0], [55.8, 7821.0], [55.9, 7835.0], [56.0, 7865.0], [56.1, 7888.0], [56.2, 7932.0], [56.3, 7947.0], [56.4, 7970.0], [56.5, 8019.0], [56.6, 8069.0], [56.7, 8109.0], [56.8, 8154.0], [56.9, 8198.0], [57.0, 8242.0], [57.1, 8260.0], [57.2, 8294.0], [57.3, 8308.0], [57.4, 8338.0], [57.5, 8361.0], [57.6, 8372.0], [57.7, 8393.0], [57.8, 8421.0], [57.9, 8440.0], [58.0, 8456.0], [58.1, 8474.0], [58.2, 8477.0], [58.3, 8497.0], [58.4, 8514.0], [58.5, 8527.0], [58.6, 8592.0], [58.7, 8655.0], [58.8, 8683.0], [58.9, 8721.0], [59.0, 8759.0], [59.1, 8776.0], [59.2, 8789.0], [59.3, 8798.0], [59.4, 8815.0], [59.5, 8834.0], [59.6, 8859.0], [59.7, 8887.0], [59.8, 8905.0], [59.9, 8922.0], [60.0, 8936.0], [60.1, 8946.0], [60.2, 8958.0], [60.3, 8970.0], [60.4, 8991.0], [60.5, 9000.0], [60.6, 9001.0], [60.7, 9015.0], [60.8, 9036.0], [60.9, 9050.0], [61.0, 9074.0], [61.1, 9099.0], [61.2, 9115.0], [61.3, 9133.0], [61.4, 9159.0], [61.5, 9179.0], [61.6, 9199.0], [61.7, 9213.0], [61.8, 9215.0], [61.9, 9216.0], [62.0, 9238.0], [62.1, 9253.0], [62.2, 9284.0], [62.3, 9298.0], [62.4, 9315.0], [62.5, 9326.0], [62.6, 9336.0], [62.7, 9352.0], [62.8, 9360.0], [62.9, 9376.0], [63.0, 9393.0], [63.1, 9412.0], [63.2, 9433.0], [63.3, 9448.0], [63.4, 9479.0], [63.5, 9498.0], [63.6, 9519.0], [63.7, 9546.0], [63.8, 9588.0], [63.9, 9623.0], [64.0, 9635.0], [64.1, 9655.0], [64.2, 9674.0], [64.3, 9689.0], [64.4, 9715.0], [64.5, 9735.0], [64.6, 9744.0], [64.7, 9755.0], [64.8, 9774.0], [64.9, 9800.0], [65.0, 9816.0], [65.1, 9832.0], [65.2, 9871.0], [65.3, 9884.0], [65.4, 9897.0], [65.5, 9910.0], [65.6, 9926.0], [65.7, 9946.0], [65.8, 9958.0], [65.9, 9972.0], [66.0, 9993.0], [66.1, 10001.0], [66.2, 10022.0], [66.3, 10037.0], [66.4, 10047.0], [66.5, 10061.0], [66.6, 10076.0], [66.7, 10094.0], [66.8, 10119.0], [66.9, 10130.0], [67.0, 10142.0], [67.1, 10150.0], [67.2, 10162.0], [67.3, 10174.0], [67.4, 10178.0], [67.5, 10191.0], [67.6, 10198.0], [67.7, 10211.0], [67.8, 10236.0], [67.9, 10257.0], [68.0, 10268.0], [68.1, 10278.0], [68.2, 10286.0], [68.3, 10301.0], [68.4, 10310.0], [68.5, 10317.0], [68.6, 10324.0], [68.7, 10330.0], [68.8, 10336.0], [68.9, 10347.0], [69.0, 10357.0], [69.1, 10358.0], [69.2, 10360.0], [69.3, 10367.0], [69.4, 10381.0], [69.5, 10389.0], [69.6, 10416.0], [69.7, 10443.0], [69.8, 10474.0], [69.9, 10514.0], [70.0, 10548.0], [70.1, 10571.0], [70.2, 10595.0], [70.3, 10637.0], [70.4, 10646.0], [70.5, 10647.0], [70.6, 10654.0], [70.7, 10678.0], [70.8, 10690.0], [70.9, 10698.0], [71.0, 10709.0], [71.1, 10725.0], [71.2, 10739.0], [71.3, 10795.0], [71.4, 10815.0], [71.5, 10845.0], [71.6, 10869.0], [71.7, 10873.0], [71.8, 10874.0], [71.9, 10887.0], [72.0, 10898.0], [72.1, 10916.0], [72.2, 10965.0], [72.3, 10985.0], [72.4, 11004.0], [72.5, 11030.0], [72.6, 11037.0], [72.7, 11047.0], [72.8, 11062.0], [72.9, 11073.0], [73.0, 11084.0], [73.1, 11093.0], [73.2, 11105.0], [73.3, 11119.0], [73.4, 11129.0], [73.5, 11134.0], [73.6, 11141.0], [73.7, 11151.0], [73.8, 11165.0], [73.9, 11174.0], [74.0, 11175.0], [74.1, 11176.0], [74.2, 11192.0], [74.3, 11203.0], [74.4, 11218.0], [74.5, 11228.0], [74.6, 11239.0], [74.7, 11255.0], [74.8, 11264.0], [74.9, 11276.0], [75.0, 11287.0], [75.1, 11298.0], [75.2, 11320.0], [75.3, 11346.0], [75.4, 11374.0], [75.5, 11422.0], [75.6, 11470.0], [75.7, 11502.0], [75.8, 11569.0], [75.9, 11569.0], [76.0, 11570.0], [76.1, 11582.0], [76.2, 11638.0], [76.3, 11691.0], [76.4, 11692.0], [76.5, 11694.0], [76.6, 11747.0], [76.7, 11793.0], [76.8, 11844.0], [76.9, 11878.0], [77.0, 11932.0], [77.1, 11977.0], [77.2, 12107.0], [77.3, 12110.0], [77.4, 12150.0], [77.5, 12169.0], [77.6, 12179.0], [77.7, 12197.0], [77.8, 12210.0], [77.9, 12213.0], [78.0, 12220.0], [78.1, 12262.0], [78.2, 12299.0], [78.3, 12310.0], [78.4, 12321.0], [78.5, 12331.0], [78.6, 12342.0], [78.7, 12354.0], [78.8, 12393.0], [78.9, 12398.0], [79.0, 12425.0], [79.1, 12439.0], [79.2, 12462.0], [79.3, 12483.0], [79.4, 12537.0], [79.5, 12597.0], [79.6, 12653.0], [79.7, 12692.0], [79.8, 12800.0], [79.9, 12819.0], [80.0, 12840.0], [80.1, 12905.0], [80.2, 12925.0], [80.3, 12972.0], [80.4, 13034.0], [80.5, 13257.0], [80.6, 13364.0], [80.7, 13367.0], [80.8, 13501.0], [80.9, 13593.0], [81.0, 13757.0], [81.1, 13911.0], [81.2, 13952.0], [81.3, 13962.0], [81.4, 13971.0], [81.5, 13973.0], [81.6, 13987.0], [81.7, 14066.0], [81.8, 14075.0], [81.9, 14115.0], [82.0, 14173.0], [82.1, 14266.0], [82.2, 14359.0], [82.3, 14405.0], [82.4, 14432.0], [82.5, 14474.0], [82.6, 14494.0], [82.7, 14519.0], [82.8, 14534.0], [82.9, 14560.0], [83.0, 14595.0], [83.1, 14628.0], [83.2, 14652.0], [83.3, 14654.0], [83.4, 14736.0], [83.5, 14814.0], [83.6, 14850.0], [83.7, 14956.0], [83.8, 14994.0], [83.9, 15081.0], [84.0, 15152.0], [84.1, 15183.0], [84.2, 15211.0], [84.3, 15265.0], [84.4, 15401.0], [84.5, 15460.0], [84.6, 15615.0], [84.7, 15720.0], [84.8, 15744.0], [84.9, 15841.0], [85.0, 15924.0], [85.1, 16071.0], [85.2, 16245.0], [85.3, 16274.0], [85.4, 16321.0], [85.5, 16348.0], [85.6, 16377.0], [85.7, 16435.0], [85.8, 16454.0], [85.9, 16476.0], [86.0, 16515.0], [86.1, 16543.0], [86.2, 16568.0], [86.3, 16946.0], [86.4, 16997.0], [86.5, 17067.0], [86.6, 17105.0], [86.7, 17133.0], [86.8, 17158.0], [86.9, 17186.0], [87.0, 17208.0], [87.1, 17226.0], [87.2, 17251.0], [87.3, 17306.0], [87.4, 17344.0], [87.5, 17441.0], [87.6, 17494.0], [87.7, 17529.0], [87.8, 17548.0], [87.9, 17576.0], [88.0, 17605.0], [88.1, 17641.0], [88.2, 17695.0], [88.3, 17730.0], [88.4, 17879.0], [88.5, 17920.0], [88.6, 17968.0], [88.7, 18003.0], [88.8, 18005.0], [88.9, 18024.0], [89.0, 18076.0], [89.1, 18216.0], [89.2, 18331.0], [89.3, 18375.0], [89.4, 18424.0], [89.5, 18486.0], [89.6, 18546.0], [89.7, 18764.0], [89.8, 18791.0], [89.9, 18926.0], [90.0, 19103.0], [90.1, 19106.0], [90.2, 19177.0], [90.3, 19270.0], [90.4, 19308.0], [90.5, 19740.0], [90.6, 19790.0], [90.7, 20196.0], [90.8, 20229.0], [90.9, 20264.0], [91.0, 20304.0], [91.1, 20311.0], [91.2, 20421.0], [91.3, 20516.0], [91.4, 20566.0], [91.5, 21200.0], [91.6, 21417.0], [91.7, 21535.0], [91.8, 21636.0], [91.9, 21673.0], [92.0, 21921.0], [92.1, 22084.0], [92.2, 22349.0], [92.3, 22607.0], [92.4, 23709.0], [92.5, 24526.0], [92.6, 24729.0], [92.7, 25005.0], [92.8, 25247.0], [92.9, 25702.0], [93.0, 27256.0], [93.1, 28224.0], [93.2, 30187.0], [93.3, 30385.0], [93.4, 32409.0], [93.5, 33644.0], [93.6, 34875.0], [93.7, 36453.0], [93.8, 37459.0], [93.9, 39503.0], [94.0, 39891.0], [94.1, 40229.0], [94.2, 40534.0], [94.3, 41240.0], [94.4, 41710.0], [94.5, 41793.0], [94.6, 42315.0], [94.7, 42441.0], [94.8, 43215.0], [94.9, 43665.0], [95.0, 43724.0], [95.1, 43902.0], [95.2, 43904.0], [95.3, 43914.0], [95.4, 44131.0], [95.5, 44200.0], [95.6, 44946.0], [95.7, 45024.0], [95.8, 45644.0], [95.9, 46592.0], [96.0, 48290.0], [96.1, 48411.0], [96.2, 48634.0], [96.3, 50341.0], [96.4, 51497.0], [96.5, 54388.0], [96.6, 54750.0], [96.7, 57370.0], [96.8, 59767.0], [96.9, 60701.0], [97.0, 64238.0], [97.1, 65809.0], [97.2, 70862.0], [97.3, 71901.0], [97.4, 74676.0], [97.5, 75078.0], [97.6, 75099.0], [97.7, 75276.0], [97.8, 75339.0], [97.9, 75409.0], [98.0, 77550.0], [98.1, 80368.0], [98.2, 88644.0], [98.3, 97847.0], [98.4, 100019.0], [98.5, 100044.0], [98.6, 105747.0], [98.7, 127668.0], [98.8, 128382.0], [98.9, 128401.0], [99.0, 131066.0], [99.1, 133237.0], [99.2, 135958.0], [99.3, 136726.0], [99.4, 136928.0], [99.5, 138658.0], [99.6, 138773.0], [99.7, 138843.0], [99.8, 139040.0], [99.9, 142220.0], [100.0, 142796.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1279.0, "series": [{"data": [[0.0, 1279.0], [136100.0, 2.0], [142500.0, 4.0], [68300.0, 2.0], [73100.0, 2.0], [76300.0, 2.0], [84300.0, 2.0], [98700.0, 1.0], [100.0, 56.0], [33700.0, 3.0], [35300.0, 4.0], [37700.0, 2.0], [36900.0, 2.0], [40100.0, 3.0], [40900.0, 1.0], [42500.0, 1.0], [41700.0, 24.0], [44100.0, 26.0], [44900.0, 18.0], [46500.0, 3.0], [45700.0, 7.0], [200.0, 54.0], [62500.0, 2.0], [63300.0, 2.0], [65800.0, 2.0], [72200.0, 2.0], [75400.0, 16.0], [300.0, 4.0], [80200.0, 3.0], [94600.0, 1.0], [97800.0, 1.0], [400.0, 56.0], [138800.0, 34.0], [600.0, 7.0], [700.0, 11.0], [900.0, 4.0], [1000.0, 163.0], [1100.0, 1141.0], [1200.0, 151.0], [1300.0, 58.0], [1400.0, 75.0], [1500.0, 98.0], [1600.0, 184.0], [1700.0, 131.0], [1800.0, 145.0], [1900.0, 91.0], [2000.0, 197.0], [2100.0, 301.0], [2200.0, 248.0], [2300.0, 89.0], [2400.0, 131.0], [2500.0, 238.0], [2600.0, 150.0], [2800.0, 84.0], [2700.0, 180.0], [2900.0, 99.0], [3000.0, 68.0], [3100.0, 129.0], [3200.0, 289.0], [3300.0, 164.0], [3400.0, 195.0], [3500.0, 227.0], [3600.0, 225.0], [3700.0, 146.0], [3800.0, 50.0], [3900.0, 35.0], [4000.0, 22.0], [4100.0, 79.0], [4300.0, 167.0], [4200.0, 78.0], [4600.0, 180.0], [4500.0, 75.0], [4400.0, 69.0], [4800.0, 159.0], [4700.0, 211.0], [4900.0, 28.0], [5000.0, 59.0], [79300.0, 2.0], [5100.0, 38.0], [5300.0, 60.0], [5200.0, 95.0], [82500.0, 2.0], [5400.0, 102.0], [5500.0, 223.0], [5600.0, 114.0], [5700.0, 93.0], [5800.0, 67.0], [92100.0, 2.0], [93700.0, 1.0], [5900.0, 178.0], [6000.0, 112.0], [6100.0, 63.0], [95300.0, 1.0], [6300.0, 103.0], [6200.0, 51.0], [6400.0, 136.0], [6500.0, 239.0], [6600.0, 98.0], [6800.0, 119.0], [6900.0, 138.0], [6700.0, 88.0], [7000.0, 84.0], [7100.0, 125.0], [7300.0, 107.0], [7400.0, 114.0], [7200.0, 168.0], [7600.0, 165.0], [7500.0, 108.0], [7800.0, 97.0], [7900.0, 64.0], [7700.0, 157.0], [8100.0, 49.0], [8000.0, 41.0], [127300.0, 1.0], [8600.0, 43.0], [8400.0, 114.0], [8200.0, 66.0], [9000.0, 129.0], [9200.0, 143.0], [8800.0, 97.0], [9400.0, 96.0], [9600.0, 110.0], [10000.0, 128.0], [10200.0, 135.0], [9800.0, 104.0], [10600.0, 140.0], [10400.0, 60.0], [11200.0, 167.0], [11000.0, 164.0], [10800.0, 145.0], [11600.0, 85.0], [11400.0, 44.0], [11800.0, 51.0], [12000.0, 17.0], [12200.0, 94.0], [12600.0, 41.0], [12400.0, 89.0], [13200.0, 19.0], [12800.0, 58.0], [13000.0, 8.0], [13400.0, 14.0], [13600.0, 5.0], [13800.0, 15.0], [14000.0, 45.0], [14200.0, 16.0], [14400.0, 68.0], [14600.0, 74.0], [14800.0, 33.0], [15000.0, 24.0], [15200.0, 36.0], [15400.0, 22.0], [15800.0, 32.0], [15600.0, 19.0], [16200.0, 41.0], [16000.0, 6.0], [17200.0, 61.0], [16400.0, 61.0], [16800.0, 3.0], [18400.0, 35.0], [17600.0, 50.0], [18000.0, 77.0], [18800.0, 13.0], [19200.0, 33.0], [20400.0, 17.0], [21200.0, 13.0], [22400.0, 6.0], [21600.0, 29.0], [22000.0, 19.0], [22800.0, 2.0], [24400.0, 3.0], [24000.0, 7.0], [24800.0, 10.0], [25200.0, 5.0], [26000.0, 3.0], [25600.0, 4.0], [26400.0, 1.0], [27200.0, 14.0], [28400.0, 1.0], [29600.0, 1.0], [30400.0, 1.0], [31600.0, 3.0], [32400.0, 8.0], [33600.0, 10.0], [34400.0, 1.0], [35200.0, 1.0], [40000.0, 1.0], [40800.0, 4.0], [39200.0, 2.0], [42400.0, 17.0], [41600.0, 2.0], [43200.0, 4.0], [44000.0, 2.0], [44800.0, 9.0], [45600.0, 5.0], [49600.0, 2.0], [50400.0, 2.0], [60800.0, 2.0], [67200.0, 3.0], [70400.0, 1.0], [75200.0, 23.0], [78400.0, 1.0], [80000.0, 2.0], [83200.0, 1.0], [134400.0, 1.0], [67100.0, 1.0], [71900.0, 3.0], [75100.0, 3.0], [81500.0, 2.0], [79900.0, 4.0], [83100.0, 1.0], [100700.0, 2.0], [133000.0, 3.0], [142600.0, 9.0], [33900.0, 4.0], [36300.0, 4.0], [37100.0, 9.0], [38700.0, 2.0], [39500.0, 3.0], [42700.0, 4.0], [43500.0, 2.0], [45100.0, 4.0], [46700.0, 1.0], [48300.0, 15.0], [51500.0, 10.0], [54700.0, 7.0], [56300.0, 1.0], [58700.0, 3.0], [65100.0, 8.0], [66200.0, 2.0], [71000.0, 5.0], [72600.0, 2.0], [75800.0, 3.0], [88600.0, 2.0], [90200.0, 3.0], [99800.0, 1.0], [138900.0, 1.0], [71700.0, 1.0], [70100.0, 1.0], [16500.0, 48.0], [16900.0, 33.0], [17300.0, 33.0], [17700.0, 22.0], [18100.0, 6.0], [18500.0, 22.0], [19300.0, 6.0], [18900.0, 22.0], [20100.0, 19.0], [19700.0, 30.0], [20900.0, 5.0], [21300.0, 5.0], [20500.0, 31.0], [22500.0, 7.0], [22100.0, 2.0], [24500.0, 10.0], [23700.0, 4.0], [24900.0, 4.0], [25300.0, 3.0], [25700.0, 6.0], [26500.0, 1.0], [27300.0, 2.0], [28100.0, 5.0], [28500.0, 12.0], [30100.0, 2.0], [31700.0, 1.0], [32500.0, 2.0], [32100.0, 1.0], [33800.0, 2.0], [37000.0, 4.0], [40200.0, 31.0], [39400.0, 2.0], [42600.0, 3.0], [41800.0, 9.0], [43400.0, 8.0], [44200.0, 5.0], [45000.0, 6.0], [45800.0, 2.0], [48200.0, 6.0], [47400.0, 2.0], [50600.0, 2.0], [51400.0, 11.0], [54600.0, 15.0], [61800.0, 2.0], [64200.0, 17.0], [70800.0, 2.0], [72400.0, 1.0], [74000.0, 3.0], [96400.0, 2.0], [117200.0, 8.0], [128400.0, 14.0], [136800.0, 7.0], [134500.0, 9.0], [73900.0, 2.0], [77100.0, 1.0], [80300.0, 2.0], [89900.0, 2.0], [94700.0, 1.0], [128300.0, 32.0], [138600.0, 19.0], [34100.0, 1.0], [33300.0, 1.0], [34900.0, 2.0], [142700.0, 3.0], [37300.0, 4.0], [39700.0, 9.0], [40500.0, 2.0], [42100.0, 1.0], [41300.0, 4.0], [42900.0, 3.0], [43700.0, 13.0], [45300.0, 4.0], [46100.0, 3.0], [48500.0, 5.0], [47700.0, 7.0], [50100.0, 5.0], [54900.0, 1.0], [57300.0, 2.0], [59700.0, 25.0], [65300.0, 1.0], [69800.0, 2.0], [74600.0, 2.0], [81000.0, 3.0], [95400.0, 1.0], [75300.0, 30.0], [80100.0, 4.0], [91300.0, 2.0], [97700.0, 1.0], [105700.0, 8.0], [8700.0, 95.0], [8500.0, 64.0], [8300.0, 102.0], [132600.0, 7.0], [139000.0, 17.0], [9100.0, 101.0], [8900.0, 137.0], [142200.0, 4.0], [9500.0, 61.0], [9700.0, 107.0], [9300.0, 146.0], [10100.0, 181.0], [9900.0, 136.0], [10300.0, 256.0], [10700.0, 77.0], [10500.0, 76.0], [11100.0, 224.0], [10900.0, 67.0], [11300.0, 74.0], [11700.0, 31.0], [11500.0, 91.0], [12100.0, 110.0], [11900.0, 26.0], [12300.0, 142.0], [12700.0, 19.0], [12500.0, 31.0], [13300.0, 41.0], [12900.0, 57.0], [13100.0, 5.0], [13500.0, 22.0], [13700.0, 17.0], [13900.0, 106.0], [14300.0, 34.0], [14100.0, 40.0], [14500.0, 79.0], [14700.0, 18.0], [14900.0, 37.0], [15300.0, 12.0], [15100.0, 45.0], [15700.0, 30.0], [15500.0, 15.0], [16300.0, 66.0], [15900.0, 21.0], [16100.0, 3.0], [16600.0, 2.0], [17000.0, 30.0], [17400.0, 34.0], [18200.0, 21.0], [17800.0, 18.0], [19400.0, 15.0], [18600.0, 1.0], [19800.0, 2.0], [20200.0, 44.0], [21000.0, 2.0], [21400.0, 15.0], [20600.0, 2.0], [22200.0, 5.0], [21800.0, 2.0], [22600.0, 8.0], [23400.0, 1.0], [24200.0, 2.0], [24600.0, 11.0], [25000.0, 15.0], [28200.0, 4.0], [30200.0, 9.0], [30600.0, 2.0], [31800.0, 2.0], [32200.0, 2.0], [32600.0, 1.0], [33200.0, 2.0], [34800.0, 2.0], [136700.0, 24.0], [35600.0, 1.0], [36400.0, 7.0], [38000.0, 2.0], [38800.0, 2.0], [39600.0, 3.0], [42800.0, 3.0], [41200.0, 8.0], [44400.0, 2.0], [43600.0, 22.0], [45200.0, 6.0], [48400.0, 12.0], [47600.0, 1.0], [50000.0, 3.0], [51600.0, 2.0], [52400.0, 3.0], [54800.0, 9.0], [54000.0, 2.0], [55600.0, 2.0], [65200.0, 3.0], [71200.0, 2.0], [93600.0, 1.0], [100000.0, 49.0], [139200.0, 3.0], [136900.0, 9.0], [71100.0, 5.0], [77500.0, 2.0], [34300.0, 4.0], [138700.0, 19.0], [37500.0, 5.0], [39900.0, 3.0], [40700.0, 8.0], [41500.0, 3.0], [42300.0, 7.0], [43900.0, 57.0], [44700.0, 2.0], [43100.0, 1.0], [45500.0, 3.0], [46300.0, 1.0], [50300.0, 14.0], [54300.0, 4.0], [58300.0, 5.0], [60700.0, 1.0], [71800.0, 4.0], [70200.0, 5.0], [75000.0, 40.0], [78200.0, 3.0], [86200.0, 2.0], [131000.0, 17.0], [133200.0, 7.0], [70900.0, 2.0], [74100.0, 5.0], [85300.0, 2.0], [17100.0, 85.0], [16700.0, 2.0], [18300.0, 35.0], [17500.0, 77.0], [17900.0, 44.0], [18700.0, 35.0], [19100.0, 49.0], [20300.0, 44.0], [19900.0, 1.0], [21100.0, 6.0], [21500.0, 20.0], [21900.0, 22.0], [22300.0, 17.0], [23100.0, 4.0], [23500.0, 5.0], [24300.0, 2.0], [25100.0, 4.0], [25500.0, 10.0], [24700.0, 6.0], [26300.0, 2.0], [27100.0, 4.0], [27500.0, 1.0], [28300.0, 2.0], [29500.0, 1.0], [30300.0, 12.0], [32700.0, 2.0], [32300.0, 1.0], [31900.0, 2.0], [34200.0, 2.0], [135900.0, 7.0], [139100.0, 2.0], [142300.0, 2.0], [35800.0, 1.0], [37400.0, 1.0], [39000.0, 2.0], [39800.0, 8.0], [40600.0, 3.0], [41400.0, 4.0], [42200.0, 8.0], [43800.0, 8.0], [46200.0, 2.0], [47000.0, 1.0], [48600.0, 6.0], [47800.0, 5.0], [50200.0, 1.0], [56600.0, 3.0], [58200.0, 2.0], [59800.0, 3.0], [64600.0, 3.0], [82800.0, 2.0], [87600.0, 2.0], [98800.0, 1.0], [127600.0, 15.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 142700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 70.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 17037.0, "series": [{"data": [[0.0, 1449.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1610.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 17037.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 70.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 42.60714285714288, "minX": 1.6828953E12, "maxY": 3000.0, "series": [{"data": [[1.68289548E12, 3000.0], [1.6828953E12, 3000.0], [1.6828956E12, 42.60714285714288], [1.68289542E12, 3000.0], [1.68289554E12, 1978.6893484010538], [1.68289536E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828956E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1062.0, "minX": 1.0, "maxY": 128409.0, "series": [{"data": [[3.0, 128317.0], [4.0, 128316.0], [5.0, 128313.0], [7.0, 128312.0], [9.0, 128310.0], [11.0, 128386.0], [12.0, 128383.0], [13.0, 128383.0], [14.0, 128382.0], [15.0, 128381.0], [17.0, 128380.0], [18.0, 128378.0], [19.0, 1149.0], [20.0, 1149.0], [21.0, 1149.0], [22.0, 1147.0], [23.0, 1147.0], [24.0, 1146.0], [25.0, 1145.0], [26.0, 1145.0], [27.0, 1145.0], [28.0, 1144.0], [29.0, 1143.0], [30.0, 1142.0], [31.0, 1142.0], [32.0, 1141.0], [34.0, 1141.0], [37.0, 1138.0], [36.0, 1139.0], [39.0, 1137.0], [38.0, 1137.0], [41.0, 1136.0], [40.0, 1136.0], [43.0, 1133.0], [42.0, 1136.0], [45.0, 1133.0], [44.0, 1133.0], [47.0, 1131.0], [46.0, 1133.0], [49.0, 1130.0], [48.0, 1131.0], [51.0, 1129.0], [53.0, 1127.0], [52.0, 1128.0], [55.0, 1123.0], [54.0, 1124.0], [57.0, 1120.0], [56.0, 1123.0], [59.0, 1116.0], [58.0, 1117.0], [61.0, 1113.0], [60.0, 1115.0], [63.0, 1111.0], [62.0, 1112.0], [67.0, 1107.0], [66.0, 1108.0], [65.0, 1109.0], [64.0, 1110.0], [71.0, 1101.0], [70.0, 1104.0], [69.0, 1104.0], [68.0, 1104.0], [75.0, 1096.0], [74.0, 1098.0], [73.0, 1099.0], [72.0, 1099.0], [79.0, 1089.0], [78.0, 1090.0], [77.0, 1092.0], [76.0, 1093.0], [82.0, 1082.0], [81.0, 1085.0], [80.0, 1087.0], [87.0, 128408.0], [86.0, 128409.0], [85.0, 128409.0], [84.0, 1081.0], [91.0, 128405.0], [90.0, 128405.0], [89.0, 128407.0], [88.0, 128407.0], [95.0, 128402.0], [94.0, 128402.0], [93.0, 128403.0], [92.0, 128404.0], [99.0, 128398.0], [98.0, 128400.0], [97.0, 128400.0], [96.0, 128401.0], [103.0, 128397.0], [102.0, 128398.0], [101.0, 128398.0], [100.0, 128398.0], [107.0, 128388.0], [106.0, 128389.0], [105.0, 128391.0], [104.0, 128392.0], [111.0, 128383.0], [110.0, 128385.0], [109.0, 128387.0], [108.0, 128388.0], [115.0, 1179.0], [113.0, 1180.0], [112.0, 128381.0], [119.0, 1177.0], [118.0, 1178.0], [117.0, 1178.0], [116.0, 1179.0], [123.0, 1175.0], [121.0, 1175.0], [120.0, 1176.0], [127.0, 1171.0], [125.0, 1173.0], [124.0, 1175.0], [135.0, 1167.0], [134.0, 1168.0], [132.0, 1169.5], [130.0, 1170.0], [129.0, 1170.0], [128.0, 1171.5], [142.0, 1158.0], [140.0, 1161.0], [139.0, 1162.0], [138.0, 1162.0], [137.0, 1164.0], [136.0, 1165.0], [151.0, 1150.0], [150.0, 1151.0], [149.0, 1151.0], [148.0, 1152.0], [147.0, 1152.0], [146.0, 1153.0], [145.0, 1157.0], [144.0, 1157.0], [159.0, 1142.0], [157.0, 1143.5], [155.0, 1144.0], [154.0, 1148.0], [153.0, 1148.5], [166.0, 1134.0], [164.0, 1135.0], [163.0, 1136.0], [162.0, 1138.0], [161.0, 1139.0], [160.0, 1140.0], [175.0, 1113.0], [174.0, 1114.0], [173.0, 1118.0], [172.0, 1126.0], [171.0, 1130.0], [170.0, 1131.0], [169.0, 1131.0], [183.0, 1630.0], [182.0, 1631.0], [181.0, 1632.0], [180.0, 1632.0], [179.0, 1088.0], [178.0, 1093.0], [177.0, 1097.0], [176.0, 1104.0], [191.0, 1604.0], [190.0, 1604.0], [189.0, 1624.0], [188.0, 1627.0], [187.0, 1628.0], [186.0, 1628.5], [184.0, 1629.0], [199.0, 1588.0], [198.0, 1589.0], [197.0, 1589.0], [196.0, 1591.0], [195.0, 1599.0], [194.0, 1600.0], [193.0, 1600.5], [207.0, 1124.0], [206.0, 1124.0], [205.0, 1581.0], [204.0, 1584.5], [202.0, 1586.0], [201.0, 1586.0], [200.0, 1588.0], [215.0, 1120.0], [214.0, 1120.0], [213.0, 1121.0], [210.0, 1122.0], [209.0, 1123.0], [208.0, 1123.0], [222.0, 1114.0], [221.0, 1115.0], [220.0, 1115.0], [219.0, 1117.0], [218.0, 1117.0], [217.0, 1118.0], [216.0, 1119.0], [231.0, 1110.5], [229.0, 1110.0], [228.0, 1110.0], [227.0, 1111.0], [226.0, 1112.0], [225.0, 1113.0], [224.0, 1114.0], [239.0, 1099.0], [238.0, 1101.0], [237.0, 1101.0], [236.0, 1101.0], [235.0, 1103.0], [234.0, 1104.0], [233.0, 1107.0], [232.0, 1109.0], [247.0, 1204.0], [246.0, 1084.0], [245.0, 1089.0], [244.0, 1091.0], [243.0, 1094.0], [242.0, 1095.0], [241.0, 1096.0], [240.0, 1096.0], [254.0, 1201.0], [253.0, 1201.0], [252.0, 1203.0], [251.0, 1203.0], [250.0, 1204.0], [249.0, 1204.0], [270.0, 1192.0], [271.0, 1191.0], [269.0, 1193.0], [268.0, 1194.5], [267.0, 1194.0], [265.0, 1195.0], [264.0, 1195.0], [263.0, 1196.0], [259.0, 1198.0], [258.0, 1199.0], [257.0, 1200.0], [256.0, 1200.0], [261.0, 1197.0], [285.0, 1180.0], [287.0, 1180.0], [284.0, 1181.0], [274.0, 1190.0], [273.0, 1190.0], [272.0, 1191.0], [283.0, 1183.0], [282.0, 1184.0], [281.0, 1188.0], [280.0, 1187.0], [279.0, 1187.0], [278.0, 1188.0], [277.0, 1189.0], [302.0, 1156.0], [303.0, 1155.5], [300.0, 1157.0], [291.0, 1173.0], [290.0, 1174.0], [289.0, 1176.0], [299.0, 1157.0], [298.0, 1158.0], [296.0, 1158.0], [295.0, 1160.0], [294.0, 1159.0], [293.0, 1169.0], [292.0, 1172.0], [318.0, 1749.0], [319.0, 1748.0], [317.0, 1750.0], [316.0, 1750.0], [315.0, 1752.0], [313.0, 1096.0], [312.0, 1102.0], [311.0, 1131.0], [305.0, 1146.0], [304.0, 1152.0], [307.0, 1144.0], [306.0, 1145.0], [310.0, 1131.0], [309.0, 1133.0], [308.0, 1142.0], [334.0, 1330.0], [335.0, 1331.0], [333.0, 1331.0], [332.0, 1333.0], [331.0, 1333.0], [330.0, 1334.0], [329.0, 1334.0], [328.0, 1335.0], [327.0, 1336.0], [321.0, 1339.0], [320.0, 1341.0], [323.0, 1338.0], [322.0, 1339.0], [326.0, 1337.0], [325.0, 1337.0], [324.0, 1338.0], [350.0, 1316.0], [351.0, 1316.0], [349.0, 1317.0], [348.0, 1318.0], [347.0, 1319.0], [346.0, 1319.0], [345.0, 1320.0], [344.0, 1704.0], [343.0, 1322.0], [336.0, 1330.0], [339.0, 1328.5], [337.0, 1329.0], [342.0, 1323.0], [341.0, 1324.0], [340.0, 1328.0], [366.0, 1299.0], [367.0, 1298.0], [365.0, 1300.0], [364.0, 1303.0], [363.0, 1304.0], [362.0, 1304.0], [361.0, 1305.0], [360.0, 1308.0], [359.0, 1310.0], [355.0, 1312.0], [354.0, 1314.0], [353.0, 1315.0], [352.0, 1316.0], [358.0, 1311.0], [382.0, 1278.0], [383.0, 1660.0], [381.0, 1279.0], [380.0, 1280.0], [379.0, 1282.0], [378.0, 1283.0], [377.0, 1475.5], [375.0, 1284.0], [369.0, 1296.0], [368.0, 1297.0], [371.0, 1290.0], [370.0, 1291.0], [374.0, 1287.0], [373.0, 1289.0], [372.0, 1289.0], [398.0, 1240.0], [399.0, 1240.0], [397.0, 1241.0], [396.0, 1242.0], [395.0, 1243.0], [394.0, 1244.5], [392.0, 1244.0], [390.0, 1245.0], [385.0, 1659.0], [387.0, 1247.0], [386.0, 1656.0], [389.0, 1245.0], [388.0, 1247.0], [412.0, 1233.0], [414.0, 1231.0], [415.0, 1231.0], [413.0, 1692.0], [410.0, 1464.0], [408.0, 1235.0], [407.0, 1236.0], [400.0, 1239.0], [403.0, 1238.0], [401.0, 1239.0], [406.0, 1696.0], [405.0, 1237.0], [404.0, 1238.0], [428.0, 1225.0], [430.0, 1682.0], [431.0, 1217.0], [429.0, 1684.0], [426.0, 1225.5], [424.0, 1686.0], [423.0, 1686.0], [419.0, 1230.3333333333333], [416.0, 1691.0], [422.0, 1227.0], [421.0, 1228.0], [445.0, 1208.0], [447.0, 1436.0], [444.0, 1207.0], [443.0, 1207.0], [442.0, 1209.0], [441.0, 1669.0], [439.0, 1441.0], [437.0, 1443.0], [435.0, 1214.0], [433.0, 1676.0], [432.0, 1677.0], [463.0, 1652.0], [462.0, 1652.0], [459.0, 1193.0], [458.0, 1194.0], [457.0, 1195.0], [456.0, 1349.6666666666667], [453.0, 1658.0], [452.0, 1658.0], [451.0, 1201.0], [450.0, 1201.0], [449.0, 1663.0], [448.0, 1203.0], [479.0, 1630.0], [477.0, 1636.0], [467.0, 1188.0], [466.0, 1190.0], [464.0, 1651.0], [475.0, 1636.0], [474.0, 1637.0], [473.0, 1637.0], [472.0, 1638.0], [471.0, 1639.0], [470.0, 1641.0], [469.0, 1183.0], [468.0, 1647.0], [494.0, 1613.0], [495.0, 1612.0], [493.0, 1617.0], [483.0, 1626.0], [482.0, 1629.0], [491.0, 1618.0], [490.0, 1619.0], [489.0, 1390.0], [487.0, 1164.0], [486.0, 1624.0], [485.0, 1626.0], [484.0, 1626.0], [510.0, 1108.0], [511.0, 1107.0], [509.0, 1108.0], [508.0, 1120.0], [507.0, 1121.0], [506.0, 1121.0], [505.0, 1367.0], [503.0, 1597.0], [497.0, 1606.0], [496.0, 1609.0], [499.0, 1604.0], [498.0, 1604.0], [502.0, 1599.0], [501.0, 1603.0], [500.0, 1603.0], [540.0, 1128.5], [542.0, 1127.0], [538.0, 1129.0], [536.0, 1129.5], [534.0, 1131.0], [532.0, 1133.0], [528.0, 1134.5], [526.0, 1135.0], [514.0, 1105.0], [512.0, 1106.0], [518.0, 1140.0], [516.0, 1141.0], [524.0, 1136.0], [520.0, 1138.0], [572.0, 1093.0], [574.0, 1091.0], [570.0, 1095.0], [568.0, 1097.0], [566.0, 1102.0], [564.0, 1104.0], [560.0, 1108.0], [558.0, 1111.0], [546.0, 1124.0], [544.0, 1124.0], [550.0, 1121.0], [548.0, 1121.0], [556.0, 1112.0], [554.0, 1115.0], [552.0, 1117.0], [604.0, 1133.0], [602.0, 1140.0], [598.0, 1141.0], [596.0, 1142.0], [594.0, 1146.0], [592.0, 1148.0], [588.0, 1151.0], [582.0, 1151.0], [580.0, 1077.0], [578.0, 1090.6666666666667], [636.0, 1095.0], [638.0, 1093.0], [634.0, 1098.0], [632.0, 1100.0], [630.0, 1102.0], [628.0, 1103.0], [626.0, 1105.0], [624.0, 1108.0], [620.0, 1110.0], [610.0, 1130.0], [614.0, 1121.0], [612.0, 1122.0], [618.0, 1116.0], [616.0, 1117.0], [668.0, 1541.0], [670.0, 1539.0], [666.0, 1542.0], [664.0, 1545.0], [662.0, 1548.0], [660.0, 1549.0], [658.0, 1550.6666666666667], [654.0, 1553.0], [642.0, 1088.0], [640.0, 1091.0], [646.0, 1083.0], [644.0, 1085.0], [650.0, 1556.0], [648.0, 1082.0], [700.0, 1121.0], [702.0, 1119.0], [696.0, 1124.0], [678.0, 1157.0], [674.0, 1529.0], [672.0, 1535.0], [694.0, 1137.0], [692.0, 1139.0], [690.0, 1140.0], [688.0, 1144.0], [686.0, 1146.0], [684.0, 1152.0], [680.0, 1155.0], [710.0, 1091.0], [730.0, 1244.0], [734.0, 1237.0], [728.0, 1253.0], [726.0, 1256.0], [722.0, 1260.25], [714.0, 1085.0], [712.0, 1089.0], [708.0, 1111.0], [706.0, 1117.0], [704.0, 1117.0], [764.0, 1143.0], [766.0, 1143.0], [762.0, 1145.0], [760.0, 1145.0], [758.0, 1147.0], [754.0, 1150.0], [752.0, 1152.0], [750.0, 1155.0], [738.0, 1233.0], [736.0, 1235.0], [742.0, 1158.0], [740.0, 1229.0], [748.0, 1155.0], [746.0, 1157.0], [774.0, 1130.0], [796.0, 1165.0], [792.0, 1167.0], [790.0, 1168.0], [786.0, 1171.0], [782.0, 1106.0], [780.0, 1118.0], [776.0, 1128.0], [772.0, 1132.0], [770.0, 1134.5], [768.0, 1136.0], [828.0, 1135.0], [830.0, 1134.0], [826.0, 1138.0], [824.0, 1138.0], [822.0, 1142.0], [820.0, 1143.0], [818.0, 1145.0], [816.0, 1147.0], [814.0, 1148.0], [806.0, 1158.0], [800.0, 1162.0], [812.0, 1149.0], [810.0, 1151.0], [808.0, 1152.0], [858.0, 2669.0], [862.0, 2664.0], [856.0, 2672.0], [838.0, 1124.5], [836.0, 1127.0], [834.0, 1130.0], [854.0, 2675.0], [852.0, 2676.0], [850.0, 2677.0], [846.0, 1112.0], [844.0, 1113.0], [842.0, 1118.0], [840.0, 1121.5], [882.0, 1867.0], [880.0, 1869.0], [892.0, 1854.0], [876.0, 1872.0], [874.0, 1872.0], [870.0, 1875.0], [866.0, 2579.0], [864.0, 2626.0], [900.0, 1836.0], [922.0, 2560.0], [896.0, 1845.0], [916.0, 2561.0], [912.0, 2566.0], [910.0, 2306.6666666666665], [904.0, 1828.0], [954.0, 2534.0], [952.0, 2535.0], [958.0, 2533.0], [944.0, 2739.0], [946.0, 2546.0], [956.0, 1754.0], [928.0, 2247.4], [930.0, 2554.0], [932.0, 1774.0], [934.0, 1774.0], [942.0, 1770.0], [940.0, 2931.0], [938.0, 2550.0], [936.0, 1772.0], [948.0, 2545.0], [988.0, 2892.0], [990.0, 2506.0], [978.0, 2520.5], [976.0, 2775.6666666666665], [980.0, 2902.0], [986.0, 2511.0], [984.0, 2512.0], [964.0, 2529.0], [962.0, 2531.5], [960.0, 2532.0], [972.0, 2524.0], [970.0, 2655.0], [968.0, 2528.0], [982.0, 2897.0], [994.0, 2502.0], [998.0, 2877.0], [1016.0, 2848.0], [1014.0, 2864.0], [1008.0, 2868.0], [992.0, 2887.0], [996.0, 2496.0], [1004.0, 2871.0], [1002.0, 2874.0], [1000.0, 2877.0], [1036.0, 1998.0], [1080.0, 2304.0], [1076.0, 2038.0], [1072.0, 2203.0], [1032.0, 1999.0], [1028.0, 2328.0], [1024.0, 2261.6666666666665], [1052.0, 2107.0], [1044.0, 1994.0], [1040.0, 1995.0], [1060.0, 2103.0], [1148.0, 2039.0], [1136.0, 2047.0], [1120.0, 2061.0], [1088.0, 2093.0], [1100.0, 2078.0], [1116.0, 2275.0], [1104.0, 2284.0], [1132.0, 2052.0], [1128.0, 2266.0], [1124.0, 2164.0], [1204.0, 1129.0], [1212.0, 1122.0], [1184.0, 2179.0], [1188.0, 1678.0], [1208.0, 1125.0], [1200.0, 1132.0], [1160.0, 1912.0], [1152.0, 2246.0], [1180.0, 2213.0], [1176.0, 2005.0], [1172.0, 2220.0], [1168.0, 2012.0], [1196.0, 1133.0], [1268.0, 1185.0], [1276.0, 1180.0], [1248.0, 1069.0], [1252.0, 1411.0], [1256.0, 1192.0], [1272.0, 1182.0], [1264.0, 1188.0], [1228.0, 1103.0], [1224.0, 1110.0], [1220.0, 1115.0], [1244.0, 1083.0], [1240.0, 1085.0], [1236.0, 1087.0], [1232.0, 1090.0], [1288.0, 1167.0], [1340.0, 1543.0], [1312.0, 1127.0], [1292.0, 1162.0], [1284.0, 1176.0], [1280.0, 1177.0], [1308.0, 1132.0], [1304.0, 1143.0], [1300.0, 1147.0], [1296.0, 1158.0], [1320.0, 1551.0], [1316.0, 1117.0], [1400.0, 64230.0], [1376.0, 1418.0], [1380.0, 1136.0], [1384.0, 1134.0], [1404.0, 1641.0], [1396.0, 64233.5], [1392.0, 64236.0], [1352.0, 1515.0], [1348.0, 1539.6666666666665], [1372.0, 1424.0], [1364.0, 1462.0], [1360.0, 1480.0], [1388.0, 64239.5], [1464.0, 1625.0], [1444.0, 1627.0], [1408.0, 1639.0], [1412.0, 1638.0], [1416.0, 1637.0], [1432.0, 1629.0], [1424.0, 1632.0], [1420.0, 1634.0], [1528.0, 3166.5], [1532.0, 3164.0], [1504.0, 2517.0], [1508.0, 2140.0], [1524.0, 1703.0], [1520.0, 1705.0], [1484.0, 2135.5], [1480.0, 1622.5], [1472.0, 2137.5], [1500.0, 2538.0], [1496.0, 2639.0], [1488.0, 1963.3333333333333], [1516.0, 3172.0], [1588.0, 3135.5], [1596.0, 3893.0], [1576.0, 2857.0], [1568.0, 3758.0], [1592.0, 1668.0], [1584.0, 1673.0], [1548.0, 1691.0], [1544.0, 3158.0], [1540.0, 3160.0], [1536.0, 1698.0], [1564.0, 3761.0], [1560.0, 3150.0], [1556.0, 1688.0], [1648.0, 3486.3333333333335], [1660.0, 3320.0], [1656.0, 3361.5], [1652.0, 3678.0], [1612.0, 3728.0], [1608.0, 3879.0], [1600.0, 3742.0], [1628.0, 3611.0], [1624.0, 3717.0], [1620.0, 3107.0], [1616.0, 3872.0], [1640.0, 3704.0], [1672.0, 3605.0], [1712.0, 3401.5], [1716.0, 2985.0], [1676.0, 2990.0], [1692.0, 3582.0], [1688.0, 3589.0], [1684.0, 3593.0], [1680.0, 3596.0], [1704.0, 3248.5], [1696.0, 2996.0], [1736.0, 3281.0], [1776.0, 3280.6666666666665], [1788.0, 3251.0], [1784.0, 2942.0], [1756.0, 3403.0], [1728.0, 3290.0], [1732.0, 3283.0], [1740.0, 3483.0], [1752.0, 3337.0], [1772.0, 3260.0], [1768.0, 2951.0], [1764.0, 3468.0], [1840.0, 3412.0], [1852.0, 3151.0], [1828.0, 3292.0], [1844.0, 3082.5], [1792.0, 2937.0], [1796.0, 3311.0], [1800.0, 3311.0], [1804.0, 3243.0], [1820.0, 3302.0], [1812.0, 3238.0], [1808.0, 3185.5], [1836.0, 3221.0], [1832.0, 3097.5], [1908.0, 3056.0], [1916.0, 3051.0], [1888.0, 3137.0], [1892.0, 3273.0], [1896.0, 3269.5], [1912.0, 3257.0], [1868.0, 3218.5], [1864.0, 3119.0], [1860.0, 3223.5], [1884.0, 3277.0], [1880.0, 3177.0], [1876.0, 3077.0], [1872.0, 3308.0], [1900.0, 3128.0], [1980.0, 1127.0], [1952.0, 1813.0], [1956.0, 1811.0], [1964.0, 1805.0], [1972.0, 1792.0], [1968.0, 1800.0], [1932.0, 3239.0], [1924.0, 3245.0], [1920.0, 3249.0], [1948.0, 1817.0], [1944.0, 1820.0], [1940.0, 3155.0], [1936.0, 3231.0], [2036.0, 1188.0], [2016.0, 1198.0], [2028.0, 1191.0], [2044.0, 1177.0], [2032.0, 1189.0], [1984.0, 1125.0], [1988.0, 1121.0], [1992.0, 1118.0], [1996.0, 1111.0], [2012.0, 1200.0], [2008.0, 1202.0], [2004.0, 1098.0], [2168.0, 1125.0], [2112.0, 1138.0], [2120.0, 1109.0], [2128.0, 1102.0], [2136.0, 1094.0], [2160.0, 1130.0], [2152.0, 1980.0], [2048.0, 1173.5], [2064.0, 1134.0], [2072.0, 1102.0], [2104.0, 1152.0], [2096.0, 1159.0], [2080.0, 1169.0], [2288.0, 1137.0], [2240.0, 1183.0], [2248.0, 1181.5], [2256.0, 1167.0], [2264.0, 1149.0], [2296.0, 1134.5], [2280.0, 1737.0], [2272.0, 1124.0], [2200.0, 1095.0], [2192.0, 1108.0], [2184.0, 1116.0], [2176.0, 1121.0], [2232.0, 1188.0], [2224.0, 1192.0], [2216.0, 1196.0], [2208.0, 1080.0], [2320.0, 1111.0], [2384.0, 2750.0], [2368.0, 2787.0], [2376.0, 2780.0], [2400.0, 2715.0], [2304.0, 1126.0], [2312.0, 1116.0], [2328.0, 1101.0], [2360.0, 2793.0], [2352.0, 28508.0], [2344.0, 28516.0], [2336.0, 1091.0], [2392.0, 2723.0], [2544.0, 3358.0], [2504.0, 2228.0], [2512.0, 2223.0], [2552.0, 3400.0], [2536.0, 3009.3333333333335], [2456.0, 2305.600000000001], [2440.0, 2018.0], [2488.0, 4719.5], [2480.0, 3433.0], [2472.0, 2150.0], [2464.0, 2195.714285714286], [2656.0, 3271.0], [2624.0, 72660.0], [2672.0, 3252.0], [2664.0, 3260.0], [2576.0, 4618.0], [2568.0, 2048.0], [2616.0, 3333.0], [2608.0, 4581.0], [2592.0, 2122.0], [2792.0, 3602.0], [2752.0, 2597.5], [2760.0, 3625.0], [2768.0, 2588.0], [2712.0, 3324.0], [2704.0, 3333.0], [2688.0, 3357.0], [2744.0, 3161.0], [2736.0, 3227.0], [2728.0, 3259.0], [2928.0, 2586.0], [2888.0, 2453.0], [2896.0, 3449.0], [2904.0, 3423.5], [2920.0, 3312.0], [2912.0, 2590.0], [2840.0, 3066.5], [2832.0, 2551.0], [2824.0, 2556.0], [2864.0, 3534.0], [2944.0, 3478.0], [3000.0, 12792.397265875989], [2952.0, 2570.0], [2960.0, 3466.0], [2968.0, 3278.0], [2992.0, 2541.0], [2984.0, 7593.0], [2976.0, 3000.5], [2169.0, 1125.0], [2161.0, 1129.0], [2113.0, 1127.0], [2121.0, 1108.0], [2129.0, 1100.0], [2137.0, 1095.0], [2145.0, 1986.0], [2049.0, 1173.0], [2057.0, 1165.5], [2073.0, 1101.0], [2105.0, 1151.0], [2097.0, 1159.0], [2089.0, 1164.5], [2081.0, 1169.0], [2289.0, 1137.0], [2297.0, 1132.0], [2249.0, 1173.0], [2265.0, 1141.0], [2281.0, 1602.0], [2273.0, 1124.0], [2201.0, 1093.0], [2193.0, 1105.0], [2185.0, 1116.0], [2177.0, 1121.0], [2217.0, 1196.0], [2401.0, 2714.0], [2409.0, 2197.0], [2369.0, 2787.0], [2377.0, 2777.0], [2385.0, 2750.0], [2393.0, 2722.0], [2329.0, 1097.0], [2321.0, 1111.0], [2313.0, 1116.0], [2305.0, 1124.0], [2361.0, 2794.0], [2353.0, 28506.0], [2337.0, 1087.0], [2545.0, 4643.0], [2497.0, 4716.0], [2505.0, 4705.0], [2513.0, 4698.0], [2521.0, 2196.0], [2537.0, 2183.0], [2529.0, 4668.0], [2457.0, 2127.3333333333335], [2449.0, 2184.0], [2441.0, 4760.0], [2481.0, 2242.0], [2473.0, 1983.0], [2465.0, 2016.0], [2585.0, 2084.0], [2633.0, 3275.6666666666665], [2641.0, 3274.25], [2649.0, 3273.5], [2657.0, 3272.0], [2577.0, 4617.0], [2569.0, 2144.0], [2561.0, 3343.5], [2617.0, 4572.0], [2609.0, 2101.0], [2793.0, 3607.0], [2769.0, 2587.0], [2777.0, 3097.0], [2809.0, 2525.6666666666665], [2713.0, 3324.0], [2705.0, 3331.0], [2697.0, 3223.3333333333335], [2689.0, 3353.0], [2737.0, 3225.0], [2929.0, 3486.0], [2889.0, 3483.0], [2897.0, 3453.0], [2905.0, 3395.0], [2937.0, 3482.0], [2921.0, 2590.0], [2913.0, 3495.0], [2841.0, 3576.0], [2873.0, 2916.0], [2865.0, 2378.0], [2849.0, 3223.6666666666665], [2953.0, 3290.0], [2945.0, 3297.0], [2961.0, 2559.0], [2969.0, 3276.0], [2993.0, 2539.0], [2985.0, 2545.0], [2977.0, 3273.0], [1073.0, 2307.0], [1077.0, 2305.0], [1037.0, 1997.0], [1029.0, 2328.0], [1025.0, 2121.0], [1069.0, 2099.0], [1065.0, 2101.0], [1057.0, 2209.0], [1053.0, 2106.0], [1049.0, 2109.5], [1045.0, 2320.0], [1041.0, 2322.0], [1141.0, 2252.0], [1137.0, 2046.0], [1149.0, 1922.0], [1121.0, 2061.0], [1125.0, 1942.0], [1145.0, 2086.5], [1089.0, 2301.0], [1097.0, 2195.0], [1101.0, 2078.0], [1117.0, 2274.0], [1113.0, 2067.0], [1133.0, 2052.0], [1129.0, 1937.0], [1201.0, 1130.0], [1209.0, 1125.0], [1193.0, 1674.0], [1185.0, 1681.0], [1165.0, 2230.5], [1161.0, 2239.0], [1157.0, 1914.0], [1153.0, 2246.0], [1181.0, 2206.0], [1177.0, 2004.0], [1173.0, 2219.0], [1197.0, 1132.0], [1277.0, 1177.0], [1265.0, 1187.0], [1249.0, 1065.0], [1253.0, 1409.0], [1217.0, 1119.0], [1221.0, 1113.0], [1229.0, 1103.0], [1245.0, 1078.0], [1233.0, 1089.0], [1261.0, 1190.0], [1289.0, 1167.0], [1341.0, 1542.6666666666665], [1313.0, 1127.0], [1293.0, 1161.0], [1285.0, 1173.0], [1309.0, 1130.0], [1305.0, 1143.0], [1297.0, 1151.0], [1321.0, 1550.0], [1317.0, 1116.0], [1393.0, 64235.0], [1377.0, 1417.0], [1381.0, 1135.0], [1401.0, 64225.0], [1357.0, 1488.0], [1353.0, 1494.0], [1349.0, 1521.0], [1373.0, 1424.0], [1369.0, 1447.5], [1365.0, 1461.0], [1361.0, 1475.0], [1389.0, 64240.0], [1385.0, 1135.0], [1461.0, 1625.0], [1469.0, 1624.0], [1457.0, 1967.6666666666667], [1421.0, 1634.0], [1417.0, 1636.0], [1453.0, 1626.0], [1441.0, 2312.0], [1433.0, 1629.0], [1425.0, 1632.0], [1529.0, 3779.0], [1533.0, 3777.0], [1505.0, 2517.0], [1513.0, 3173.0], [1525.0, 3167.0], [1521.0, 3170.0], [1481.0, 2649.0], [1477.0, 1879.75], [1501.0, 2537.0], [1493.0, 1876.0], [1489.0, 1621.0], [1517.0, 1706.0], [1593.0, 3747.0], [1597.0, 1665.0], [1569.0, 1679.0], [1573.0, 2777.25], [1585.0, 3749.0], [1549.0, 3155.0], [1545.0, 3158.0], [1541.0, 1694.0], [1537.0, 3163.0], [1565.0, 1682.0], [1557.0, 3151.0], [1553.0, 3461.0], [1581.0, 1673.0], [1653.0, 3673.0], [1661.0, 3613.0], [1637.0, 3629.25], [1633.0, 3477.5], [1649.0, 3077.0], [1613.0, 3877.0], [1609.0, 3729.0], [1605.0, 3886.0], [1601.0, 3742.0], [1629.0, 3716.0], [1617.0, 3722.0], [1645.0, 3840.0], [1641.0, 3694.0], [1665.0, 3612.0], [1713.0, 3364.0], [1725.0, 3356.0], [1693.0, 2997.0], [1669.0, 3406.0], [1673.0, 3605.0], [1677.0, 3601.0], [1689.0, 3585.0], [1685.0, 2979.0], [1681.0, 3595.0], [1705.0, 3303.0], [1701.0, 3507.5], [1781.0, 3069.6666666666665], [1777.0, 2946.0], [1761.0, 2956.0], [1765.0, 2952.0], [1785.0, 3253.0], [1729.0, 2978.0], [1733.0, 3348.0], [1737.0, 3281.0], [1741.0, 3343.0], [1757.0, 3334.0], [1753.0, 3336.0], [1749.0, 3340.0], [1745.0, 3410.0], [1773.0, 3259.0], [1769.0, 3262.0], [1805.0, 3276.5], [1853.0, 3192.0], [1849.0, 3214.5], [1845.0, 3388.0], [1793.0, 3315.0], [1821.0, 2923.0], [1817.0, 2925.0], [1813.0, 2926.0], [1809.0, 3304.0], [1829.0, 3288.0], [1825.0, 3261.5], [1861.0, 3121.0], [1917.0, 3049.0], [1909.0, 3120.0], [1857.0, 3068.5], [1865.0, 2806.0], [1869.0, 2805.0], [1881.0, 3075.0], [1877.0, 3109.5], [1873.0, 3153.0], [1901.0, 3063.0], [1897.0, 3268.0], [1893.0, 3070.0], [1973.0, 1791.0], [1977.0, 1128.0], [1953.0, 1812.0], [1957.0, 1810.0], [1961.0, 1808.0], [1965.0, 1803.0], [1969.0, 1797.0], [1933.0, 3232.0], [1929.0, 3241.0], [1925.0, 3242.0], [1945.0, 1819.0], [1941.0, 1822.0], [1937.0, 3229.0], [2041.0, 1184.0], [2017.0, 1198.0], [2029.0, 1190.0], [2045.0, 1174.0], [1985.0, 1123.0], [1989.0, 1119.0], [1993.0, 1118.0], [1997.0, 1104.0], [2013.0, 1199.0], [2005.0, 1091.0], [2001.0, 1102.5], [2162.0, 1129.0], [2114.0, 1126.0], [2122.0, 1106.0], [2130.0, 1099.0], [2138.0, 1091.0], [2154.0, 1979.0], [2058.0, 1164.0], [2066.0, 1133.5], [2074.0, 1100.0], [2106.0, 1150.0], [2098.0, 1159.0], [2090.0, 1164.0], [2082.0, 1168.0], [2290.0, 1137.0], [2282.0, 1592.0], [2298.0, 1130.0], [2250.0, 1172.0], [2258.0, 1165.0], [2266.0, 1141.0], [2274.0, 1123.0], [2202.0, 1092.0], [2194.0, 1103.0], [2178.0, 1120.0], [2226.0, 1190.0], [2218.0, 1195.0], [2210.0, 1199.0], [2402.0, 2714.0], [2410.0, 2197.0], [2426.0, 3473.5], [2370.0, 2786.0], [2378.0, 2771.0], [2386.0, 2741.0], [2362.0, 2793.0], [2306.0, 1122.0], [2314.0, 1115.0], [2322.0, 1109.0], [2330.0, 1097.0], [2354.0, 28506.0], [2346.0, 28515.0], [2338.0, 1079.0], [2394.0, 2721.0], [2546.0, 4642.0], [2554.0, 4636.0], [2498.0, 4717.0], [2506.0, 4703.0], [2514.0, 4691.0], [2522.0, 2193.0], [2530.0, 2093.0], [2458.0, 2182.0], [2450.0, 2184.0], [2442.0, 2101.5], [2466.0, 2010.0], [2666.0, 3259.6], [2626.0, 3594.0], [2642.0, 3274.0], [2650.0, 3273.0], [2586.0, 2130.0], [2578.0, 2138.0], [2570.0, 2049.0], [2562.0, 4630.0], [2618.0, 2092.0], [2610.0, 2004.0], [2602.0, 2938.3333333333335], [2794.0, 3600.0], [2786.0, 2837.0], [2754.0, 2598.0], [2762.0, 3277.6666666666665], [2802.0, 3084.0], [2698.0, 3350.0], [2690.0, 3352.0], [2746.0, 3160.0], [2730.0, 3255.5], [2722.0, 3320.0], [2922.0, 3492.0], [2938.0, 3302.0], [2882.0, 3142.0], [2890.0, 2448.0], [2898.0, 3448.0], [2906.0, 3499.0], [2914.0, 3495.0], [2834.0, 2550.0], [2826.0, 3069.5], [2818.0, 3247.6666666666665], [2874.0, 2465.0], [2866.0, 2496.0], [2858.0, 3558.0], [2850.0, 2538.0], [2954.0, 3468.0], [2994.0, 2538.0], [2946.0, 3295.0], [2970.0, 2554.0], [2978.0, 3271.0], [2155.0, 1738.0], [2123.0, 1106.0], [2131.0, 1098.0], [2139.0, 1090.0], [2171.0, 1123.5], [2147.0, 1984.5], [2051.0, 1172.0], [2059.0, 1164.0], [2067.0, 1132.0], [2075.0, 1173.0], [2107.0, 1148.0], [2099.0, 1157.0], [2283.0, 1359.0], [2243.0, 1182.0], [2259.0, 1165.0], [2267.0, 1134.0], [2299.0, 1130.0], [2275.0, 1121.0], [2203.0, 1091.0], [2195.0, 1103.0], [2187.0, 1113.5], [2179.0, 1119.0], [2235.0, 1186.6666666666667], [2227.0, 1190.0], [2219.0, 1194.0], [2211.0, 1198.0], [2427.0, 2187.0], [2403.0, 2706.0], [2371.0, 2786.0], [2379.0, 2770.0], [2387.0, 2735.0], [2395.0, 2720.0], [2411.0, 2197.0], [2331.0, 1095.0], [2323.0, 1107.0], [2315.0, 1114.0], [2307.0, 1121.0], [2363.0, 2790.0], [2355.0, 2810.0], [2347.0, 28514.0], [2339.0, 1077.0], [2539.0, 2074.0], [2499.0, 4710.0], [2523.0, 2192.0], [2555.0, 3397.5], [2451.0, 2018.0], [2443.0, 2184.0], [2435.0, 2186.0], [2483.0, 3433.5], [2475.0, 2149.0], [2659.0, 3260.0], [2587.0, 2033.0], [2627.0, 3920.0], [2635.0, 3275.0], [2651.0, 3273.0], [2683.0, 3290.1666666666665], [2579.0, 4614.0], [2563.0, 2150.0], [2619.0, 4570.0], [2611.0, 2099.0], [2603.0, 2110.0], [2595.0, 2946.6666666666665], [2787.0, 2580.0], [2755.0, 2598.0], [2811.0, 3595.0], [2795.0, 2446.0], [2707.0, 3328.0], [2699.0, 3336.0], [2691.0, 3351.0], [2747.0, 3157.0], [2739.0, 3220.0], [2731.0, 3252.0], [2915.0, 2587.0], [2923.0, 2583.0], [2939.0, 2573.0], [2891.0, 3475.0], [2899.0, 3452.0], [2907.0, 3320.0], [2843.0, 3569.0], [2819.0, 2434.0], [2875.0, 2463.0], [2859.0, 2528.0], [2851.0, 2537.0], [2963.0, 3370.5], [2971.0, 3454.0], [2987.0, 2994.5], [2979.0, 3270.0], [541.0, 1126.0], [543.0, 1126.0], [537.0, 1129.0], [519.0, 1139.0], [517.0, 1141.0], [515.0, 1141.0], [513.0, 1106.0], [533.0, 1130.0], [531.0, 1133.5], [529.0, 1134.0], [525.0, 1136.0], [523.0, 1137.0], [521.0, 1138.0], [573.0, 1091.0], [575.0, 1091.0], [571.0, 1095.0], [569.0, 1096.0], [567.0, 1098.0], [563.0, 1108.0], [561.0, 1109.0], [559.0, 1109.0], [545.0, 1124.0], [551.0, 1118.0], [547.0, 1123.0], [557.0, 1112.0], [555.0, 1114.0], [553.0, 1116.0], [605.0, 1132.0], [607.0, 1132.0], [603.0, 1138.0], [599.0, 1141.0], [595.0, 1143.0], [593.0, 1147.0], [589.0, 1150.0], [587.0, 1151.0], [581.0, 1069.0], [579.0, 1082.0], [637.0, 1094.0], [639.0, 1092.0], [635.0, 1097.0], [633.0, 1099.0], [631.0, 1101.0], [629.0, 1102.0], [627.0, 1103.0], [625.0, 1106.0], [623.0, 1108.0], [611.0, 1129.0], [609.0, 1131.0], [615.0, 1117.0], [613.0, 1122.0], [621.0, 1109.0], [619.0, 1110.0], [647.0, 1083.0], [667.0, 1542.0], [671.0, 1538.0], [665.0, 1543.0], [645.0, 1084.0], [643.0, 1088.0], [663.0, 1546.0], [659.0, 1550.0], [655.0, 1552.0], [653.0, 1554.5], [651.0, 1556.0], [649.0, 1558.0], [701.0, 1121.0], [703.0, 1119.0], [699.0, 1123.5], [697.0, 1125.0], [695.0, 1134.0], [693.0, 1139.0], [691.0, 1140.0], [689.0, 1143.0], [687.0, 1146.0], [673.0, 1531.0], [679.0, 1156.0], [677.0, 1158.0], [685.0, 1151.0], [683.0, 1153.0], [681.0, 1154.0], [733.0, 1239.0], [735.0, 1237.0], [731.0, 1242.0], [729.0, 1253.0], [727.0, 1254.0], [725.0, 1259.0], [723.0, 1260.0], [721.0, 1260.0], [719.0, 1261.0], [707.0, 1116.0], [705.0, 1117.0], [711.0, 1090.0], [709.0, 1110.0], [715.0, 1085.0], [713.0, 1088.0], [765.0, 1143.0], [767.0, 1137.0], [761.0, 1145.0], [743.0, 1158.0], [741.0, 1227.0], [739.0, 1231.0], [759.0, 1147.0], [757.0, 1149.0], [755.0, 1149.0], [751.0, 1152.0], [749.0, 1155.0], [745.0, 1157.0], [797.0, 1163.0], [799.0, 1162.5], [795.0, 1165.0], [793.0, 1166.0], [791.0, 1169.0], [789.0, 1168.0], [787.0, 1170.0], [785.0, 1171.0], [781.0, 1113.0], [773.0, 1132.0], [771.0, 1133.0], [779.0, 1120.5], [777.0, 1124.0], [829.0, 1134.0], [831.0, 1133.0], [827.0, 1138.0], [807.0, 1157.0], [805.0, 1158.0], [803.0, 1160.0], [801.0, 1160.0], [823.0, 1141.0], [821.0, 1143.0], [819.0, 1145.0], [817.0, 1146.0], [815.0, 1147.0], [813.0, 1149.0], [811.0, 1150.0], [809.0, 1151.0], [861.0, 2666.0], [863.0, 2660.0], [859.0, 2668.0], [857.0, 2670.0], [855.0, 2673.0], [853.0, 2674.0], [851.0, 2676.0], [849.0, 1088.5], [847.0, 1095.0], [835.0, 1130.0], [833.0, 1131.5], [845.0, 1113.0], [843.0, 1116.0], [841.0, 1120.0], [895.0, 1851.0], [893.0, 1853.0], [881.0, 1869.0], [891.0, 1859.0], [889.0, 1861.0], [871.0, 1875.0], [869.0, 1876.0], [867.0, 1876.0], [865.0, 2599.0], [879.0, 1870.0], [877.0, 1870.0], [875.0, 1871.0], [873.0, 1874.0], [887.0, 1862.5], [885.0, 1863.5], [883.0, 1866.0], [903.0, 1829.0], [925.0, 1781.0], [901.0, 1835.0], [899.0, 1838.0], [897.0, 1842.0], [919.0, 2561.0], [917.0, 2561.0], [915.0, 2466.75], [907.0, 2567.3333333333335], [933.0, 2553.0], [957.0, 2534.0], [945.0, 2547.0], [955.0, 2534.0], [943.0, 2548.0], [929.0, 2169.5], [931.0, 2554.0], [935.0, 2552.0], [939.0, 2550.0], [937.0, 1772.0], [951.0, 2544.0], [949.0, 2545.0], [947.0, 2545.0], [985.0, 2513.0], [989.0, 2510.0], [981.0, 2520.0], [987.0, 2512.0], [965.0, 2911.0], [963.0, 2913.0], [973.0, 2523.0], [971.0, 2527.0], [983.0, 2896.0], [993.0, 2696.0], [1019.0, 2064.5], [1021.0, 2168.5], [1017.0, 2006.0], [1013.0, 2768.75], [1009.0, 2486.0], [1007.0, 2869.0], [995.0, 2501.0], [999.0, 2994.0], [1005.0, 2872.0], [1003.0, 2872.0], [1001.0, 2877.0], [1074.0, 2097.0], [1086.0, 2092.5], [1038.0, 2113.0], [1026.0, 2120.0], [1054.0, 2106.0], [1050.0, 2318.0], [1046.0, 2110.0], [1070.0, 2308.0], [1062.0, 2148.5], [1058.0, 2104.0], [1142.0, 2252.0], [1150.0, 2247.0], [1122.0, 2060.0], [1146.0, 2145.0], [1138.0, 1928.0], [1118.0, 2063.0], [1098.0, 2137.5], [1090.0, 2137.666666666667], [1102.0, 2077.0], [1114.0, 2277.0], [1110.0, 2142.3333333333335], [1106.0, 2074.0], [1126.0, 1942.0], [1210.0, 1125.0], [1214.0, 1121.0], [1186.0, 1681.0], [1190.0, 1678.0], [1206.0, 1127.0], [1166.0, 2015.0], [1162.0, 2238.0], [1158.0, 2240.0], [1154.0, 1978.0], [1174.0, 2217.0], [1170.0, 1894.0], [1198.0, 1131.0], [1274.0, 1181.0], [1278.0, 1178.0], [1250.0, 1063.0], [1254.0, 1408.0], [1270.0, 1184.0], [1230.0, 1092.0], [1226.0, 1108.0], [1222.0, 1112.0], [1218.0, 1118.0], [1246.0, 1077.0], [1234.0, 1088.0], [1262.0, 1189.0], [1258.0, 1191.0], [1290.0, 1166.0], [1318.0, 1114.0], [1342.0, 1541.0], [1334.0, 1543.0], [1286.0, 1172.0], [1282.0, 1177.0], [1310.0, 1129.0], [1306.0, 1137.0], [1302.0, 1146.5], [1326.0, 1549.0], [1322.0, 1550.0], [1314.0, 1127.0], [1402.0, 64224.0], [1406.0, 1641.0], [1378.0, 1415.0], [1382.0, 1135.0], [1386.0, 64241.0], [1398.0, 64231.0], [1394.0, 64234.0], [1374.0, 1422.0], [1358.0, 1486.0], [1354.0, 1491.0], [1370.0, 1432.0], [1366.0, 1459.0], [1362.0, 1467.0], [1390.0, 64238.0], [1442.0, 1627.0], [1450.0, 2654.0], [1434.0, 2141.5], [1410.0, 2152.5], [1414.0, 1637.0], [1418.0, 1635.0], [1422.0, 1633.0], [1522.0, 3169.0], [1530.0, 3165.0], [1510.0, 2138.0], [1526.0, 3167.0], [1482.0, 1964.3333333333333], [1498.0, 1513.0], [1494.0, 2644.5], [1490.0, 1621.3333333333333], [1518.0, 3171.0], [1550.0, 3155.0], [1598.0, 3743.0], [1594.0, 3744.0], [1590.0, 3440.5], [1546.0, 3157.0], [1562.0, 2416.5], [1558.0, 3151.0], [1554.0, 1688.0], [1582.0, 3137.0], [1578.0, 2407.5], [1654.0, 3669.0], [1658.0, 3341.5], [1650.0, 3077.0], [1606.0, 3733.0], [1602.0, 3889.0], [1622.0, 3719.0], [1618.0, 3722.0], [1638.0, 3706.0], [1670.0, 3609.0], [1702.0, 3369.0], [1722.0, 3210.6666666666665], [1714.0, 2986.0], [1694.0, 3511.0], [1666.0, 3610.0], [1674.0, 3603.0], [1678.0, 3600.0], [1690.0, 3584.0], [1686.0, 3591.0], [1682.0, 3594.0], [1710.0, 3300.0], [1706.0, 3505.0], [1698.0, 2993.0], [1738.0, 3281.0], [1790.0, 3353.0], [1782.0, 3320.0], [1778.0, 2944.0], [1734.0, 2970.0], [1742.0, 2965.0], [1754.0, 2958.0], [1750.0, 3076.5], [1746.0, 3478.0], [1762.0, 3368.0], [1842.0, 3309.5], [1854.0, 3126.0], [1826.0, 3228.0], [1850.0, 3218.0], [1822.0, 3236.0], [1794.0, 3313.0], [1798.0, 3231.3333333333335], [1806.0, 2930.0], [1810.0, 3442.0], [1838.0, 3273.8], [1830.0, 3222.0], [1914.0, 3256.0], [1918.0, 3049.0], [1890.0, 3137.0], [1894.0, 3272.0], [1910.0, 3258.0], [1906.0, 3099.75], [1870.0, 2806.0], [1866.0, 3119.0], [1858.0, 3325.0], [1886.0, 3138.0], [1882.0, 3139.0], [1874.0, 3283.0], [1902.0, 3263.0], [1978.0, 1128.0], [1954.0, 1812.0], [1958.0, 1809.0], [1962.0, 1807.0], [1966.0, 1803.0], [1982.0, 1125.0], [1974.0, 1129.0], [1934.0, 3232.0], [1930.0, 3241.0], [1922.0, 3179.0], [1950.0, 1816.0], [1946.0, 1819.0], [1942.0, 1822.0], [1938.0, 3227.0], [2038.0, 1186.5], [2046.0, 1174.0], [2018.0, 1198.0], [2022.0, 1195.0], [2026.0, 1193.0], [2042.0, 1185.0], [2014.0, 1199.0], [1986.0, 1121.0], [1990.0, 1119.0], [1994.0, 1112.0], [2006.0, 1088.0], [2002.0, 1101.0], [2148.0, 1985.0], [2156.0, 1133.0], [2164.0, 1128.0], [2124.0, 1104.0], [2132.0, 1098.0], [2140.0, 1084.0], [2052.0, 1172.0], [2060.0, 1154.0], [2068.0, 1127.0], [2076.0, 1172.0], [2108.0, 1146.0], [2092.0, 1164.5], [2084.0, 1166.0], [2292.0, 1135.0], [2244.0, 1182.0], [2252.0, 1169.0], [2260.0, 1165.0], [2284.0, 1140.0], [2276.0, 32140.0], [2204.0, 1091.0], [2196.0, 1101.0], [2188.0, 1112.0], [2180.0, 1118.0], [2236.0, 1186.0], [2212.0, 1199.0], [2404.0, 2317.0], [2372.0, 2785.0], [2380.0, 2769.0], [2388.0, 2729.0], [2316.0, 1113.0], [2324.0, 1104.0], [2332.0, 1094.0], [2356.0, 28503.0], [2348.0, 28512.0], [2340.0, 1076.0], [2396.0, 2718.0], [2556.0, 4634.0], [2540.0, 2169.0], [2508.0, 4704.0], [2516.0, 4690.5], [2524.0, 4670.0], [2532.0, 4662.5], [2444.0, 2184.0], [2492.0, 3479.0], [2588.0, 4604.0], [2660.0, 3260.0], [2668.0, 3257.0], [2684.0, 3239.0], [2620.0, 2084.0], [2612.0, 2097.0], [2604.0, 4587.0], [2596.0, 2119.0], [2812.0, 3594.0], [2804.0, 2913.6666666666665], [2756.0, 2598.0], [2764.0, 3620.5], [2772.0, 3229.6666666666665], [2780.0, 3269.6666666666665], [2788.0, 3605.0], [2740.0, 3218.0], [2732.0, 3235.0], [2724.0, 3239.0], [2924.0, 2587.0], [2884.0, 2969.5], [2892.0, 3480.0], [2900.0, 3444.0], [2908.0, 2598.0], [2932.0, 3126.0], [2916.0, 2594.0], [2836.0, 2551.0], [2828.0, 3069.0], [2868.0, 2368.0], [2948.0, 3295.0], [2972.0, 3455.0], [2988.0, 4830.0], [2980.0, 2541.0], [2165.0, 1127.0], [2157.0, 1132.0], [2125.0, 1106.0], [2117.0, 1114.6666666666667], [2141.0, 1081.0], [2173.0, 1123.0], [2149.0, 1984.0], [2053.0, 1166.0], [2061.0, 1149.0], [2069.0, 1126.0], [2077.0, 1173.0], [2109.0, 1145.0], [2101.0, 1156.0], [2085.0, 1166.5], [2285.0, 1141.0], [2245.0, 1182.0], [2261.0, 1164.0], [2269.0, 1128.5], [2301.0, 1128.5], [2277.0, 1741.0], [2205.0, 1087.0], [2189.0, 1110.0], [2181.0, 1117.0], [2237.0, 1185.0], [2221.0, 1193.0], [2213.0, 1197.0], [2405.0, 2031.0], [2413.0, 2612.2], [2373.0, 2783.0], [2381.0, 2768.0], [2389.0, 2728.0], [2333.0, 1093.0], [2325.0, 1103.0], [2317.0, 1112.0], [2309.0, 1120.0], [2365.0, 2790.0], [2357.0, 28503.0], [2557.0, 4633.0], [2501.0, 4708.0], [2517.0, 2198.0], [2541.0, 2072.0], [2453.0, 2184.0], [2477.0, 3434.5], [2677.0, 3326.6], [2629.0, 3275.5], [2645.0, 3273.5], [2685.0, 3361.0], [2581.0, 4614.5], [2573.0, 2142.0], [2621.0, 2077.0], [2613.0, 4575.0], [2605.0, 2107.0], [2597.0, 2118.0], [2805.0, 3602.0], [2789.0, 2578.0], [2757.0, 2470.0], [2765.0, 3614.0], [2773.0, 3612.0], [2813.0, 2566.5], [2797.0, 2572.5], [2717.0, 3260.0], [2701.0, 3272.0], [2749.0, 3112.0], [2733.0, 3233.0], [2725.0, 3145.0], [2933.0, 2578.0], [2893.0, 2445.0], [2885.0, 2455.0], [2901.0, 2416.0], [2941.0, 3301.0], [2917.0, 3494.0], [2877.0, 3495.0], [2869.0, 3525.0], [2853.0, 2473.0], [2957.0, 3105.0], [2965.0, 3280.0], [2973.0, 2551.0], [2997.0, 3078.3333333333335], [1031.0, 2058.5], [1039.0, 2113.0], [1063.0, 2101.0], [1035.0, 2115.3333333333335], [1027.0, 2330.0], [1067.0, 2145.5], [1059.0, 2314.0], [1055.0, 1988.0], [1051.0, 1990.0], [1047.0, 2319.0], [1043.0, 2217.0], [1095.0, 2121.0], [1147.0, 1924.0], [1127.0, 2265.0], [1139.0, 2255.0], [1119.0, 2063.0], [1091.0, 2091.0], [1099.0, 2299.0], [1103.0, 2075.0], [1115.0, 1949.0], [1111.0, 2070.0], [1107.0, 2178.5], [1135.0, 1989.5], [1131.0, 2158.0], [1207.0, 1126.0], [1211.0, 1123.0], [1191.0, 1677.0], [1187.0, 1680.0], [1203.0, 1129.0], [1167.0, 2225.0], [1163.0, 2236.0], [1159.0, 2240.0], [1155.0, 1914.0], [1183.0, 2205.0], [1175.0, 2007.0], [1171.0, 2220.0], [1199.0, 1131.0], [1195.0, 1134.0], [1271.0, 1183.0], [1279.0, 1178.0], [1251.0, 1062.0], [1275.0, 1180.0], [1267.0, 1186.0], [1247.0, 1070.0], [1219.0, 1116.0], [1223.0, 1111.0], [1231.0, 1091.0], [1243.0, 1083.0], [1239.0, 1086.6666666666667], [1235.0, 1088.0], [1263.0, 1189.0], [1259.0, 1191.0], [1255.0, 1193.0], [1295.0, 1158.0], [1339.0, 1543.0], [1319.0, 1552.0], [1331.0, 1545.0], [1287.0, 1171.0], [1283.0, 1177.0], [1311.0, 1129.0], [1307.0, 1135.0], [1303.0, 1146.0], [1299.0, 1148.5], [1327.0, 1548.0], [1323.0, 1549.0], [1315.0, 1125.0], [1399.0, 64230.0], [1403.0, 1642.0], [1383.0, 1136.0], [1407.0, 1640.0], [1379.0, 1414.0], [1359.0, 1483.0], [1355.0, 1490.0], [1351.0, 1519.0], [1375.0, 1421.0], [1371.0, 1430.0], [1367.0, 1451.0], [1363.0, 1464.0], [1391.0, 64238.0], [1451.0, 1626.0], [1435.0, 1628.0], [1427.0, 1631.0], [1523.0, 3168.0], [1535.0, 3163.0], [1511.0, 3173.0], [1507.0, 100734.0], [1515.0, 2440.0], [1531.0, 1700.0], [1487.0, 2306.0], [1479.0, 1622.0], [1503.0, 2530.5], [1499.0, 2539.5], [1495.0, 1616.0], [1491.0, 2331.0], [1519.0, 1707.0], [1591.0, 3133.0], [1587.0, 1671.0], [1599.0, 3129.0], [1579.0, 1674.0], [1595.0, 3131.0], [1551.0, 3155.0], [1547.0, 3156.0], [1543.0, 1694.5], [1539.0, 3467.5], [1567.0, 2414.0], [1563.0, 1684.0], [1559.0, 3150.0], [1555.0, 3152.0], [1583.0, 3137.0], [1615.0, 3724.5], [1651.0, 3067.0], [1639.0, 3855.0], [1663.0, 3306.5], [1611.0, 3878.0], [1603.0, 3888.0], [1631.0, 3710.0], [1627.0, 3866.0], [1623.0, 3104.0], [1619.0, 3720.0], [1647.0, 3840.0], [1719.0, 3317.6666666666665], [1727.0, 3425.6666666666665], [1699.0, 2993.0], [1723.0, 3494.0], [1715.0, 2985.0], [1671.0, 3608.0], [1675.0, 3602.0], [1679.0, 2984.0], [1687.0, 3591.0], [1683.0, 2981.0], [1711.0, 3401.5], [1707.0, 3367.0], [1783.0, 2943.0], [1787.0, 3096.0], [1791.0, 3250.0], [1763.0, 3330.0], [1759.0, 3268.0], [1731.0, 3128.0], [1735.0, 3347.0], [1739.0, 2967.0], [1743.0, 3342.0], [1751.0, 3273.0], [1747.0, 3479.0], [1771.0, 3464.0], [1767.0, 3329.0], [1851.0, 2841.0], [1855.0, 3327.0], [1847.0, 3215.5], [1823.0, 2922.0], [1799.0, 3246.0], [1803.0, 2932.0], [1819.0, 3176.6666666666665], [1815.0, 3271.5], [1839.0, 3219.0], [1827.0, 3292.0], [1911.0, 3257.0], [1907.0, 3124.0], [1919.0, 3251.0], [1891.0, 3104.5], [1915.0, 3117.0], [1887.0, 3137.0], [1863.0, 3152.5], [1871.0, 3109.0], [1883.0, 3139.0], [1879.0, 3140.0], [1899.0, 3198.0], [1983.0, 1124.5], [1979.0, 1127.5], [1959.0, 1808.0], [1955.0, 1811.0], [1963.0, 1807.0], [1967.0, 1801.0], [1975.0, 1129.0], [1971.0, 1795.0], [1935.0, 3094.0], [1931.0, 3240.5], [1927.0, 3070.5], [1951.0, 1814.0], [1947.0, 1818.0], [1943.0, 1822.0], [2043.0, 1183.0], [2039.0, 1185.0], [2019.0, 1196.0], [2023.0, 1193.0], [2027.0, 1192.0], [2031.0, 1189.0], [1987.0, 1121.0], [1991.0, 1119.0], [1995.0, 1111.0], [1999.0, 1104.0], [2011.0, 1201.0], [2007.0, 1088.0], [2003.0, 1099.0], [2158.0, 1131.0], [2126.0, 1104.0], [2174.0, 1122.0], [2134.0, 1096.0], [2166.0, 1127.0], [2150.0, 1984.0], [2110.0, 1146.0], [2062.0, 1148.0], [2070.0, 1124.0], [2102.0, 1155.0], [2094.0, 1163.0], [2086.0, 1165.0], [2286.0, 1139.0], [2254.0, 1168.5], [2246.0, 1180.0], [2262.0, 1163.0], [2270.0, 1127.0], [2278.0, 1740.0], [2206.0, 1085.0], [2198.0, 1098.5], [2190.0, 1111.0], [2182.0, 1117.0], [2238.0, 1183.0], [2230.0, 1189.0], [2214.0, 1198.0], [2374.0, 2782.0], [2414.0, 2030.0], [2382.0, 2768.0], [2390.0, 2725.0], [2318.0, 1112.0], [2326.0, 1103.0], [2334.0, 1093.0], [2350.0, 28510.0], [2342.0, 1075.5], [2398.0, 2717.5], [2550.0, 2781.75], [2510.0, 3876.6666666666665], [2518.0, 2197.0], [2526.0, 2189.5], [2558.0, 2057.0], [2542.0, 2167.0], [2534.0, 2184.0], [2454.0, 2183.0], [2494.0, 3478.5], [2486.0, 2193.5], [2478.0, 2147.0], [2590.0, 2077.0], [2582.0, 2039.0], [2630.0, 3277.0], [2646.0, 3274.0], [2686.0, 3232.0], [2574.0, 2142.0], [2566.0, 2974.3333333333335], [2614.0, 2096.0], [2606.0, 2008.0], [2598.0, 2115.0], [2814.0, 2566.0], [2758.0, 2594.0], [2774.0, 3612.0], [2782.0, 3614.0], [2806.0, 3595.0], [2710.0, 3261.5], [2694.0, 3308.0], [2750.0, 2600.0], [2742.0, 3164.0], [2734.0, 3231.0], [2726.0, 3263.0], [2926.0, 3399.5], [2894.0, 2424.0], [2902.0, 3442.0], [2910.0, 3741.5], [2942.0, 4083.0], [2846.0, 2542.0], [2838.0, 3193.6666666666665], [2822.0, 3242.6666666666665], [2870.0, 3006.0], [2862.0, 3554.25], [2854.0, 2529.0], [2950.0, 2571.0], [2990.0, 2993.0], [2958.0, 3466.0], [2966.0, 3279.0], [2974.0, 3273.0], [2982.0, 5071.0], [2167.0, 1127.0], [2175.0, 1122.0], [2119.0, 1108.0], [2135.0, 1096.0], [2143.0, 1989.0], [2111.0, 1138.0], [2063.0, 1136.0], [2071.0, 1123.0], [2079.0, 1172.0], [2103.0, 1152.0], [2095.0, 1161.0], [2087.0, 1166.0], [2279.0, 1739.0], [2287.0, 1138.0], [2255.0, 1168.0], [2303.0, 1126.0], [2263.0, 1149.0], [2271.0, 1124.0], [2207.0, 1083.0], [2199.0, 1096.0], [2191.0, 1108.0], [2231.0, 1187.0], [2223.0, 1192.5], [2215.0, 1196.0], [2335.0, 1091.0], [2383.0, 2764.0], [2375.0, 2782.0], [2391.0, 2725.0], [2399.0, 2716.0], [2327.0, 1102.0], [2319.0, 1111.0], [2311.0, 1117.0], [2367.0, 2788.0], [2359.0, 15642.0], [2351.0, 2813.0], [2343.0, 1069.0], [2503.0, 4707.0], [2559.0, 2057.0], [2511.0, 4703.0], [2519.0, 4675.0], [2527.0, 4668.0], [2447.0, 2184.25], [2495.0, 2239.0], [2487.0, 4720.0], [2471.0, 2648.6], [2583.0, 2135.0], [2687.0, 3231.0], [2671.0, 3256.5], [2591.0, 2123.0], [2575.0, 2139.0], [2567.0, 2145.0], [2623.0, 2023.0], [2607.0, 2007.0], [2599.0, 2113.0], [2799.0, 3598.5], [2815.0, 2438.0], [2767.0, 3102.5], [2775.0, 2584.0], [2783.0, 3614.0], [2791.0, 3093.0], [2719.0, 3257.5], [2711.0, 3325.0], [2703.0, 3334.5], [2743.0, 3162.0], [2735.0, 3229.0], [2727.0, 3261.0], [2927.0, 3308.0], [2943.0, 3479.0], [2887.0, 2391.5], [2911.0, 3497.0], [2935.0, 3394.5], [2919.0, 3733.0], [2839.0, 3583.0], [2831.0, 3237.6666666666665], [2823.0, 2558.0], [2879.0, 2461.0], [2871.0, 3517.0], [2855.0, 3562.0], [2999.0, 3461.8269230769224], [2951.0, 2571.0], [2967.0, 3457.0], [2991.0, 3263.0], [2983.0, 2545.0], [1.0, 128318.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2777.0477536447506, 11547.109491222822]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 705.6, "minX": 1.6828953E12, "maxY": 56390.45, "series": [{"data": [[1.68289548E12, 42964.683333333334], [1.6828953E12, 28302.233333333334], [1.6828956E12, 880.7833333333333], [1.68289542E12, 56390.45], [1.68289554E12, 44914.53333333333], [1.68289536E12, 46845.583333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68289548E12, 34297.2], [1.6828953E12, 21865.2], [1.6828956E12, 705.6], [1.68289542E12, 42898.8], [1.68289554E12, 34910.4], [1.68289536E12, 34129.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828956E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3771.5914883385362, "minX": 1.6828953E12, "maxY": 28384.619047619053, "series": [{"data": [[1.68289548E12, 6183.720793534182], [1.6828953E12, 13097.876680752961], [1.6828956E12, 28384.619047619053], [1.68289542E12, 16034.713587487797], [1.68289554E12, 3771.5914883385362], [1.68289536E12, 17813.97088791849]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828956E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3705.670113007936, "minX": 1.6828953E12, "maxY": 28384.58333333334, "series": [{"data": [[1.68289548E12, 6183.712221405825], [1.6828953E12, 13097.852477910097], [1.6828956E12, 28384.58333333334], [1.68289542E12, 15869.312023460416], [1.68289554E12, 3705.670113007936], [1.68289536E12, 17180.40441533234]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828956E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 26.079523626584653, "minX": 1.6828953E12, "maxY": 27270.84523809524, "series": [{"data": [[1.68289548E12, 530.7830026940983], [1.6828953E12, 26.079523626584653], [1.6828956E12, 27270.84523809524], [1.68289542E12, 6535.715542521983], [1.68289554E12, 1283.4948304880975], [1.68289536E12, 4505.913876758857]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828956E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.6828953E12, "maxY": 142796.0, "series": [{"data": [[1.68289548E12, 90256.0], [1.6828953E12, 48526.0], [1.6828956E12, 128386.0], [1.68289542E12, 142796.0], [1.68289554E12, 128409.0], [1.68289536E12, 93705.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68289548E12, 11253.999999999998], [1.6828953E12, 21515.2], [1.6828956E12, 128379.0], [1.68289542E12, 20320.6], [1.68289554E12, 4703.0], [1.68289536E12, 46193.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68289548E12, 27657.519999999917], [1.6828953E12, 42631.28], [1.6828956E12, 128386.0], [1.68289542E12, 138857.92], [1.68289554E12, 64233.43], [1.68289536E12, 79995.36]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68289548E12, 14275.599999999997], [1.6828953E12, 28201.8], [1.6828956E12, 128382.75], [1.68289542E12, 100036.0], [1.68289554E12, 8541.999999999985], [1.68289536E12, 70769.19999999988]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68289548E12, 1085.0], [1.6828953E12, 14.0], [1.6828956E12, 1081.0], [1.68289542E12, 15.0], [1.68289554E12, 21.0], [1.68289536E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68289548E12, 4801.0], [1.6828953E12, 11797.0], [1.6828956E12, 1134.5], [1.68289542E12, 8775.0], [1.68289554E12, 1964.0], [1.68289536E12, 10411.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828956E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 45.0, "minX": 1.0, "maxY": 128399.0, "series": [{"data": [[2.0, 46975.0], [3.0, 60701.0], [4.0, 22832.5], [5.0, 6633.0], [6.0, 4087.5], [7.0, 8753.5], [8.0, 8626.5], [9.0, 128313.0], [10.0, 1629.0], [11.0, 2413.5], [12.0, 18219.0], [13.0, 17168.0], [15.0, 7120.5], [16.0, 10556.0], [19.0, 6930.5], [21.0, 1134.0], [22.0, 8551.5], [23.0, 15092.0], [24.0, 5441.5], [25.0, 63.0], [26.0, 10151.0], [28.0, 128399.0], [30.0, 7689.5], [31.0, 3881.5], [33.0, 16319.5], [32.0, 2614.0], [34.0, 3254.0], [38.0, 5082.0], [41.0, 1129.0], [42.0, 5931.0], [46.0, 6571.0], [50.0, 14539.0], [53.0, 12426.0], [52.0, 7624.5], [55.0, 1186.0], [61.0, 6425.5], [62.0, 3536.0], [64.0, 587.5], [67.0, 1149.5], [66.0, 1127.5], [65.0, 45.0], [70.0, 5622.0], [71.0, 1964.0], [68.0, 66.0], [69.0, 3464.5], [73.0, 1750.0], [72.0, 1169.0], [79.0, 8064.0], [76.0, 1537.5], [77.0, 2195.0], [81.0, 5522.0], [85.0, 5518.0], [87.0, 5141.5], [90.0, 6907.5], [91.0, 4811.0], [94.0, 1168.0], [102.0, 2353.5], [103.0, 3549.0], [105.0, 77.0], [107.0, 1148.0], [111.0, 5557.0], [110.0, 3320.5], [115.0, 3602.0], [113.0, 1189.0], [114.0, 1178.0], [118.0, 2162.5], [121.0, 14125.5], [120.0, 2471.0], [123.0, 3272.0], [127.0, 52.0], [125.0, 6618.0], [126.0, 2176.5], [124.0, 4793.0], [129.0, 6507.0], [134.0, 60.0], [132.0, 2270.0], [131.0, 4615.0], [135.0, 4626.0], [128.0, 1244.0], [138.0, 59.5], [136.0, 5734.5], [146.0, 3424.0], [145.0, 3158.0], [150.0, 2531.5], [154.0, 6426.5], [158.0, 2757.5], [173.0, 2271.0], [168.0, 2105.0], [179.0, 7249.0], [181.0, 5994.0], [176.0, 7178.0], [183.0, 7649.0], [178.0, 1623.0], [191.0, 17457.0], [188.0, 6595.5], [186.0, 4827.0], [198.0, 2237.0], [203.0, 9343.0], [200.0, 3000.0], [210.0, 8301.5], [215.0, 10368.0], [209.0, 3254.0], [208.0, 3295.0], [216.0, 2691.0], [220.0, 2183.0], [231.0, 6015.0], [261.0, 9131.5], [268.0, 9752.5], [262.0, 5946.0], [282.0, 7782.0], [275.0, 11115.0], [309.0, 14477.0], [320.0, 17232.0], [323.0, 7734.0], [340.0, 8878.5], [353.0, 12912.0], [415.0, 10872.0], [468.0, 10576.5], [486.0, 12327.0], [493.0, 13935.0], [535.0, 17162.0], [513.0, 12559.0], [1.0, 28810.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 72660.0], [145.0, 100734.0], [23.0, 105747.0], [26.0, 43914.0], [486.0, 43903.0], [61.0, 54354.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 535.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 128399.0, "series": [{"data": [[2.0, 46975.0], [3.0, 60701.0], [4.0, 22832.5], [5.0, 6633.0], [6.0, 4087.5], [7.0, 8753.5], [8.0, 8626.0], [9.0, 128313.0], [10.0, 1629.0], [11.0, 2413.5], [12.0, 18219.0], [13.0, 17168.0], [15.0, 7120.5], [16.0, 10556.0], [19.0, 6930.5], [21.0, 1134.0], [22.0, 8551.5], [23.0, 15092.0], [24.0, 5441.5], [25.0, 63.0], [26.0, 10151.0], [28.0, 128399.0], [30.0, 7689.5], [31.0, 3881.5], [33.0, 16319.5], [32.0, 2614.0], [34.0, 3254.0], [38.0, 5082.0], [41.0, 1129.0], [42.0, 5931.0], [46.0, 6571.0], [50.0, 14539.0], [53.0, 12426.0], [52.0, 7624.5], [55.0, 1186.0], [61.0, 6425.5], [62.0, 3536.0], [64.0, 587.5], [67.0, 1149.5], [66.0, 1127.5], [65.0, 45.0], [70.0, 5622.0], [71.0, 1964.0], [68.0, 66.0], [69.0, 3464.5], [73.0, 1750.0], [72.0, 1169.0], [79.0, 8064.0], [76.0, 1537.5], [77.0, 2195.0], [81.0, 5522.0], [85.0, 5518.0], [87.0, 5141.5], [90.0, 6907.5], [91.0, 4811.0], [94.0, 1168.0], [102.0, 2353.5], [103.0, 3549.0], [105.0, 77.0], [107.0, 1148.0], [111.0, 5557.0], [110.0, 3320.5], [115.0, 3602.0], [113.0, 1189.0], [114.0, 1178.0], [118.0, 2162.5], [121.0, 14125.5], [120.0, 2471.0], [123.0, 3272.0], [127.0, 52.0], [125.0, 6618.0], [126.0, 2176.5], [124.0, 4793.0], [129.0, 6507.0], [134.0, 60.0], [132.0, 2270.0], [131.0, 4615.0], [135.0, 4626.0], [128.0, 1244.0], [138.0, 59.5], [136.0, 5734.5], [146.0, 3424.0], [145.0, 3158.0], [150.0, 2531.5], [154.0, 6426.5], [158.0, 2757.5], [173.0, 2270.0], [168.0, 2105.0], [179.0, 7249.0], [181.0, 5994.0], [176.0, 7178.0], [183.0, 7649.0], [178.0, 1623.0], [191.0, 17457.0], [188.0, 6595.5], [186.0, 4827.0], [198.0, 2237.0], [203.0, 9343.0], [200.0, 3000.0], [210.0, 8301.5], [215.0, 10368.0], [209.0, 3254.0], [208.0, 3295.0], [216.0, 2691.0], [220.0, 2183.0], [231.0, 6015.0], [261.0, 9131.5], [268.0, 9752.5], [262.0, 5946.0], [282.0, 7782.0], [275.0, 11115.0], [309.0, 14477.0], [320.0, 17232.0], [323.0, 7734.0], [340.0, 8878.5], [353.0, 12912.0], [415.0, 10872.0], [468.0, 10576.5], [486.0, 12327.0], [493.0, 13935.0], [535.0, 17162.0], [513.0, 12559.0], [1.0, 28806.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [145.0, 0.0], [23.0, 0.0], [26.0, 0.0], [486.0, 0.0], [61.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 535.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.1, "minX": 1.6828953E12, "maxY": 70.35, "series": [{"data": [[1.68289548E12, 61.416666666666664], [1.6828953E12, 70.35], [1.6828956E12, 1.1], [1.68289542E12, 70.35], [1.68289554E12, 65.88333333333334], [1.68289536E12, 67.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828956E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.6828953E12, "maxY": 85.11666666666666, "series": [{"data": [[1.68289548E12, 68.05], [1.6828953E12, 43.38333333333333], [1.6828956E12, 1.4], [1.68289542E12, 85.11666666666666], [1.68289554E12, 69.26666666666667], [1.68289536E12, 67.71666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68289542E12, 0.13333333333333333], [1.68289554E12, 0.05], [1.68289536E12, 0.9833333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828956E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.6828953E12, "maxY": 85.11666666666666, "series": [{"data": [[1.68289548E12, 68.05], [1.6828953E12, 43.38333333333333], [1.6828956E12, 1.4], [1.68289542E12, 85.11666666666666], [1.68289554E12, 69.26666666666667], [1.68289536E12, 67.71666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68289542E12, 0.13333333333333333], [1.68289554E12, 0.05], [1.68289536E12, 0.9833333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828956E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.6828953E12, "maxY": 85.11666666666666, "series": [{"data": [[1.68289548E12, 68.05], [1.6828953E12, 43.38333333333333], [1.6828956E12, 1.4], [1.68289542E12, 85.11666666666666], [1.68289554E12, 69.26666666666667], [1.68289536E12, 67.71666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68289542E12, 0.13333333333333333], [1.68289554E12, 0.05], [1.68289536E12, 0.9833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828956E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

