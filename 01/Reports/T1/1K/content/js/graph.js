/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 205000.0, "series": [{"data": [[0.0, 5.0], [0.1, 17.0], [0.2, 22.0], [0.3, 26.0], [0.4, 27.0], [0.5, 29.0], [0.6, 30.0], [0.7, 31.0], [0.8, 31.0], [0.9, 32.0], [1.0, 32.0], [1.1, 33.0], [1.2, 33.0], [1.3, 33.0], [1.4, 34.0], [1.5, 34.0], [1.6, 35.0], [1.7, 35.0], [1.8, 36.0], [1.9, 36.0], [2.0, 37.0], [2.1, 38.0], [2.2, 38.0], [2.3, 39.0], [2.4, 39.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 41.0], [2.9, 41.0], [3.0, 42.0], [3.1, 42.0], [3.2, 42.0], [3.3, 43.0], [3.4, 43.0], [3.5, 44.0], [3.6, 44.0], [3.7, 45.0], [3.8, 45.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 47.0], [4.3, 47.0], [4.4, 47.0], [4.5, 48.0], [4.6, 48.0], [4.7, 48.0], [4.8, 48.0], [4.9, 49.0], [5.0, 49.0], [5.1, 49.0], [5.2, 50.0], [5.3, 50.0], [5.4, 50.0], [5.5, 50.0], [5.6, 50.0], [5.7, 51.0], [5.8, 51.0], [5.9, 51.0], [6.0, 51.0], [6.1, 51.0], [6.2, 51.0], [6.3, 52.0], [6.4, 52.0], [6.5, 52.0], [6.6, 52.0], [6.7, 52.0], [6.8, 52.0], [6.9, 53.0], [7.0, 53.0], [7.1, 53.0], [7.2, 53.0], [7.3, 53.0], [7.4, 53.0], [7.5, 53.0], [7.6, 54.0], [7.7, 54.0], [7.8, 54.0], [7.9, 54.0], [8.0, 54.0], [8.1, 54.0], [8.2, 55.0], [8.3, 55.0], [8.4, 55.0], [8.5, 55.0], [8.6, 55.0], [8.7, 55.0], [8.8, 56.0], [8.9, 56.0], [9.0, 56.0], [9.1, 56.0], [9.2, 56.0], [9.3, 56.0], [9.4, 56.0], [9.5, 57.0], [9.6, 57.0], [9.7, 57.0], [9.8, 57.0], [9.9, 57.0], [10.0, 57.0], [10.1, 58.0], [10.2, 58.0], [10.3, 58.0], [10.4, 58.0], [10.5, 58.0], [10.6, 59.0], [10.7, 59.0], [10.8, 59.0], [10.9, 59.0], [11.0, 59.0], [11.1, 59.0], [11.2, 59.0], [11.3, 59.0], [11.4, 60.0], [11.5, 60.0], [11.6, 60.0], [11.7, 60.0], [11.8, 61.0], [11.9, 61.0], [12.0, 61.0], [12.1, 61.0], [12.2, 62.0], [12.3, 62.0], [12.4, 62.0], [12.5, 62.0], [12.6, 63.0], [12.7, 63.0], [12.8, 63.0], [12.9, 63.0], [13.0, 64.0], [13.1, 64.0], [13.2, 65.0], [13.3, 65.0], [13.4, 65.0], [13.5, 65.0], [13.6, 65.0], [13.7, 66.0], [13.8, 66.0], [13.9, 66.0], [14.0, 66.0], [14.1, 67.0], [14.2, 67.0], [14.3, 67.0], [14.4, 67.0], [14.5, 67.0], [14.6, 68.0], [14.7, 68.0], [14.8, 68.0], [14.9, 68.0], [15.0, 69.0], [15.1, 69.0], [15.2, 69.0], [15.3, 69.0], [15.4, 69.0], [15.5, 70.0], [15.6, 70.0], [15.7, 70.0], [15.8, 70.0], [15.9, 71.0], [16.0, 71.0], [16.1, 71.0], [16.2, 71.0], [16.3, 72.0], [16.4, 72.0], [16.5, 72.0], [16.6, 72.0], [16.7, 73.0], [16.8, 73.0], [16.9, 73.0], [17.0, 73.0], [17.1, 73.0], [17.2, 74.0], [17.3, 74.0], [17.4, 74.0], [17.5, 75.0], [17.6, 75.0], [17.7, 75.0], [17.8, 76.0], [17.9, 76.0], [18.0, 76.0], [18.1, 77.0], [18.2, 77.0], [18.3, 77.0], [18.4, 78.0], [18.5, 78.0], [18.6, 78.0], [18.7, 79.0], [18.8, 79.0], [18.9, 79.0], [19.0, 79.0], [19.1, 80.0], [19.2, 80.0], [19.3, 81.0], [19.4, 81.0], [19.5, 82.0], [19.6, 82.0], [19.7, 82.0], [19.8, 83.0], [19.9, 83.0], [20.0, 84.0], [20.1, 85.0], [20.2, 85.0], [20.3, 85.0], [20.4, 86.0], [20.5, 86.0], [20.6, 86.0], [20.7, 87.0], [20.8, 87.0], [20.9, 87.0], [21.0, 88.0], [21.1, 88.0], [21.2, 88.0], [21.3, 89.0], [21.4, 89.0], [21.5, 89.0], [21.6, 89.0], [21.7, 90.0], [21.8, 90.0], [21.9, 91.0], [22.0, 91.0], [22.1, 92.0], [22.2, 93.0], [22.3, 94.0], [22.4, 94.0], [22.5, 95.0], [22.6, 96.0], [22.7, 96.0], [22.8, 97.0], [22.9, 98.0], [23.0, 99.0], [23.1, 100.0], [23.2, 101.0], [23.3, 102.0], [23.4, 102.0], [23.5, 103.0], [23.6, 104.0], [23.7, 105.0], [23.8, 105.0], [23.9, 106.0], [24.0, 109.0], [24.1, 110.0], [24.2, 110.0], [24.3, 111.0], [24.4, 112.0], [24.5, 114.0], [24.6, 116.0], [24.7, 117.0], [24.8, 117.0], [24.9, 118.0], [25.0, 119.0], [25.1, 121.0], [25.2, 122.0], [25.3, 128.0], [25.4, 129.0], [25.5, 132.0], [25.6, 136.0], [25.7, 143.0], [25.8, 149.0], [25.9, 163.0], [26.0, 177.0], [26.1, 186.0], [26.2, 276.0], [26.3, 403.0], [26.4, 502.0], [26.5, 515.0], [26.6, 571.0], [26.7, 631.0], [26.8, 650.0], [26.9, 796.0], [27.0, 1001.0], [27.1, 1032.0], [27.2, 1035.0], [27.3, 1037.0], [27.4, 1038.0], [27.5, 1040.0], [27.6, 1042.0], [27.7, 1044.0], [27.8, 1046.0], [27.9, 1047.0], [28.0, 1049.0], [28.1, 1051.0], [28.2, 1053.0], [28.3, 1055.0], [28.4, 1057.0], [28.5, 1059.0], [28.6, 1060.0], [28.7, 1061.0], [28.8, 1062.0], [28.9, 1063.0], [29.0, 1064.0], [29.1, 1064.0], [29.2, 1065.0], [29.3, 1066.0], [29.4, 1067.0], [29.5, 1068.0], [29.6, 1069.0], [29.7, 1070.0], [29.8, 1071.0], [29.9, 1074.0], [30.0, 1076.0], [30.1, 1078.0], [30.2, 1081.0], [30.3, 1087.0], [30.4, 1093.0], [30.5, 1094.0], [30.6, 1096.0], [30.7, 1098.0], [30.8, 1100.0], [30.9, 1106.0], [31.0, 1116.0], [31.1, 1127.0], [31.2, 1130.0], [31.3, 1134.0], [31.4, 1137.0], [31.5, 1139.0], [31.6, 1141.0], [31.7, 1147.0], [31.8, 1157.0], [31.9, 1170.0], [32.0, 1178.0], [32.1, 1193.0], [32.2, 1198.0], [32.3, 1207.0], [32.4, 1220.0], [32.5, 1230.0], [32.6, 1241.0], [32.7, 1268.0], [32.8, 1276.0], [32.9, 1299.0], [33.0, 1308.0], [33.1, 1341.0], [33.2, 1368.0], [33.3, 1370.0], [33.4, 1372.0], [33.5, 1380.0], [33.6, 1395.0], [33.7, 1425.0], [33.8, 1434.0], [33.9, 1447.0], [34.0, 1463.0], [34.1, 1473.0], [34.2, 1482.0], [34.3, 1500.0], [34.4, 1551.0], [34.5, 1560.0], [34.6, 1573.0], [34.7, 1579.0], [34.8, 1581.0], [34.9, 1587.0], [35.0, 1601.0], [35.1, 1613.0], [35.2, 1632.0], [35.3, 1649.0], [35.4, 1658.0], [35.5, 1668.0], [35.6, 1683.0], [35.7, 1701.0], [35.8, 1723.0], [35.9, 1738.0], [36.0, 1749.0], [36.1, 1762.0], [36.2, 1818.0], [36.3, 1826.0], [36.4, 1834.0], [36.5, 1853.0], [36.6, 1873.0], [36.7, 1882.0], [36.8, 1898.0], [36.9, 1905.0], [37.0, 1908.0], [37.1, 1925.0], [37.2, 1937.0], [37.3, 1975.0], [37.4, 2028.0], [37.5, 2035.0], [37.6, 2044.0], [37.7, 2056.0], [37.8, 2059.0], [37.9, 2068.0], [38.0, 2074.0], [38.1, 2082.0], [38.2, 2087.0], [38.3, 2094.0], [38.4, 2100.0], [38.5, 2105.0], [38.6, 2109.0], [38.7, 2115.0], [38.8, 2122.0], [38.9, 2126.0], [39.0, 2131.0], [39.1, 2135.0], [39.2, 2138.0], [39.3, 2143.0], [39.4, 2148.0], [39.5, 2151.0], [39.6, 2157.0], [39.7, 2164.0], [39.8, 2171.0], [39.9, 2179.0], [40.0, 2193.0], [40.1, 2203.0], [40.2, 2209.0], [40.3, 2215.0], [40.4, 2225.0], [40.5, 2234.0], [40.6, 2239.0], [40.7, 2247.0], [40.8, 2257.0], [40.9, 2276.0], [41.0, 2295.0], [41.1, 2303.0], [41.2, 2311.0], [41.3, 2321.0], [41.4, 2329.0], [41.5, 2341.0], [41.6, 2347.0], [41.7, 2356.0], [41.8, 2361.0], [41.9, 2364.0], [42.0, 2367.0], [42.1, 2374.0], [42.2, 2380.0], [42.3, 2386.0], [42.4, 2394.0], [42.5, 2399.0], [42.6, 2405.0], [42.7, 2410.0], [42.8, 2416.0], [42.9, 2426.0], [43.0, 2452.0], [43.1, 2475.0], [43.2, 2483.0], [43.3, 2491.0], [43.4, 2506.0], [43.5, 2516.0], [43.6, 2555.0], [43.7, 2578.0], [43.8, 2587.0], [43.9, 2604.0], [44.0, 2623.0], [44.1, 2635.0], [44.2, 2677.0], [44.3, 2686.0], [44.4, 2695.0], [44.5, 2702.0], [44.6, 2708.0], [44.7, 2724.0], [44.8, 2741.0], [44.9, 2746.0], [45.0, 2759.0], [45.1, 2784.0], [45.2, 2804.0], [45.3, 2810.0], [45.4, 2835.0], [45.5, 2850.0], [45.6, 2863.0], [45.7, 2871.0], [45.8, 2876.0], [45.9, 2886.0], [46.0, 2902.0], [46.1, 2919.0], [46.2, 2963.0], [46.3, 2991.0], [46.4, 3009.0], [46.5, 3024.0], [46.6, 3049.0], [46.7, 3103.0], [46.8, 3124.0], [46.9, 3154.0], [47.0, 3159.0], [47.1, 3168.0], [47.2, 3193.0], [47.3, 3204.0], [47.4, 3208.0], [47.5, 3214.0], [47.6, 3220.0], [47.7, 3229.0], [47.8, 3230.0], [47.9, 3237.0], [48.0, 3243.0], [48.1, 3250.0], [48.2, 3267.0], [48.3, 3278.0], [48.4, 3285.0], [48.5, 3301.0], [48.6, 3323.0], [48.7, 3336.0], [48.8, 3341.0], [48.9, 3349.0], [49.0, 3368.0], [49.1, 3404.0], [49.2, 3448.0], [49.3, 3463.0], [49.4, 3481.0], [49.5, 3524.0], [49.6, 3580.0], [49.7, 3587.0], [49.8, 3609.0], [49.9, 3623.0], [50.0, 3653.0], [50.1, 3716.0], [50.2, 3728.0], [50.3, 3743.0], [50.4, 3763.0], [50.5, 3778.0], [50.6, 3798.0], [50.7, 3829.0], [50.8, 3838.0], [50.9, 3853.0], [51.0, 3880.0], [51.1, 3894.0], [51.2, 3914.0], [51.3, 3945.0], [51.4, 3953.0], [51.5, 3960.0], [51.6, 3984.0], [51.7, 4015.0], [51.8, 4030.0], [51.9, 4047.0], [52.0, 4073.0], [52.1, 4096.0], [52.2, 4102.0], [52.3, 4107.0], [52.4, 4109.0], [52.5, 4124.0], [52.6, 4133.0], [52.7, 4151.0], [52.8, 4180.0], [52.9, 4192.0], [53.0, 4198.0], [53.1, 4213.0], [53.2, 4223.0], [53.3, 4242.0], [53.4, 4255.0], [53.5, 4267.0], [53.6, 4276.0], [53.7, 4293.0], [53.8, 4317.0], [53.9, 4338.0], [54.0, 4341.0], [54.1, 4350.0], [54.2, 4363.0], [54.3, 4400.0], [54.4, 4447.0], [54.5, 4474.0], [54.6, 4489.0], [54.7, 4513.0], [54.8, 4538.0], [54.9, 4546.0], [55.0, 4552.0], [55.1, 4567.0], [55.2, 4576.0], [55.3, 4580.0], [55.4, 4620.0], [55.5, 4682.0], [55.6, 4706.0], [55.7, 4716.0], [55.8, 4746.0], [55.9, 4765.0], [56.0, 4773.0], [56.1, 4797.0], [56.2, 4820.0], [56.3, 4832.0], [56.4, 4839.0], [56.5, 4848.0], [56.6, 4860.0], [56.7, 4873.0], [56.8, 4883.0], [56.9, 4893.0], [57.0, 4902.0], [57.1, 4909.0], [57.2, 4918.0], [57.3, 4926.0], [57.4, 4932.0], [57.5, 4941.0], [57.6, 4948.0], [57.7, 4956.0], [57.8, 4964.0], [57.9, 4976.0], [58.0, 4983.0], [58.1, 5000.0], [58.2, 5014.0], [58.3, 5026.0], [58.4, 5034.0], [58.5, 5050.0], [58.6, 5071.0], [58.7, 5098.0], [58.8, 5117.0], [58.9, 5138.0], [59.0, 5151.0], [59.1, 5157.0], [59.2, 5173.0], [59.3, 5188.0], [59.4, 5206.0], [59.5, 5238.0], [59.6, 5246.0], [59.7, 5262.0], [59.8, 5281.0], [59.9, 5296.0], [60.0, 5315.0], [60.1, 5327.0], [60.2, 5335.0], [60.3, 5347.0], [60.4, 5354.0], [60.5, 5362.0], [60.6, 5370.0], [60.7, 5386.0], [60.8, 5405.0], [60.9, 5430.0], [61.0, 5441.0], [61.1, 5473.0], [61.2, 5482.0], [61.3, 5491.0], [61.4, 5504.0], [61.5, 5535.0], [61.6, 5561.0], [61.7, 5571.0], [61.8, 5578.0], [61.9, 5582.0], [62.0, 5585.0], [62.1, 5594.0], [62.2, 5611.0], [62.3, 5628.0], [62.4, 5643.0], [62.5, 5653.0], [62.6, 5664.0], [62.7, 5683.0], [62.8, 5700.0], [62.9, 5741.0], [63.0, 5765.0], [63.1, 5816.0], [63.2, 5828.0], [63.3, 5864.0], [63.4, 5888.0], [63.5, 5917.0], [63.6, 5924.0], [63.7, 5934.0], [63.8, 5940.0], [63.9, 5969.0], [64.0, 5992.0], [64.1, 6029.0], [64.2, 6098.0], [64.3, 6119.0], [64.4, 6123.0], [64.5, 6124.0], [64.6, 6141.0], [64.7, 6156.0], [64.8, 6159.0], [64.9, 6162.0], [65.0, 6168.0], [65.1, 6173.0], [65.2, 6187.0], [65.3, 6210.0], [65.4, 6225.0], [65.5, 6232.0], [65.6, 6239.0], [65.7, 6253.0], [65.8, 6258.0], [65.9, 6265.0], [66.0, 6275.0], [66.1, 6276.0], [66.2, 6279.0], [66.3, 6302.0], [66.4, 6333.0], [66.5, 6349.0], [66.6, 6360.0], [66.7, 6380.0], [66.8, 6396.0], [66.9, 6415.0], [67.0, 6423.0], [67.1, 6440.0], [67.2, 6505.0], [67.3, 6529.0], [67.4, 6571.0], [67.5, 6594.0], [67.6, 6612.0], [67.7, 6632.0], [67.8, 6649.0], [67.9, 6658.0], [68.0, 6666.0], [68.1, 6682.0], [68.2, 6691.0], [68.3, 6702.0], [68.4, 6720.0], [68.5, 6750.0], [68.6, 6779.0], [68.7, 6805.0], [68.8, 6833.0], [68.9, 6855.0], [69.0, 6880.0], [69.1, 6907.0], [69.2, 6945.0], [69.3, 6986.0], [69.4, 7012.0], [69.5, 7019.0], [69.6, 7051.0], [69.7, 7071.0], [69.8, 7077.0], [69.9, 7084.0], [70.0, 7103.0], [70.1, 7118.0], [70.2, 7141.0], [70.3, 7144.0], [70.4, 7152.0], [70.5, 7163.0], [70.6, 7166.0], [70.7, 7175.0], [70.8, 7185.0], [70.9, 7192.0], [71.0, 7195.0], [71.1, 7199.0], [71.2, 7208.0], [71.3, 7215.0], [71.4, 7223.0], [71.5, 7231.0], [71.6, 7242.0], [71.7, 7248.0], [71.8, 7254.0], [71.9, 7256.0], [72.0, 7261.0], [72.1, 7266.0], [72.2, 7272.0], [72.3, 7274.0], [72.4, 7287.0], [72.5, 7295.0], [72.6, 7300.0], [72.7, 7308.0], [72.8, 7317.0], [72.9, 7327.0], [73.0, 7342.0], [73.1, 7356.0], [73.2, 7364.0], [73.3, 7375.0], [73.4, 7382.0], [73.5, 7390.0], [73.6, 7401.0], [73.7, 7407.0], [73.8, 7413.0], [73.9, 7420.0], [74.0, 7427.0], [74.1, 7434.0], [74.2, 7446.0], [74.3, 7457.0], [74.4, 7466.0], [74.5, 7476.0], [74.6, 7486.0], [74.7, 7499.0], [74.8, 7511.0], [74.9, 7531.0], [75.0, 7544.0], [75.1, 7558.0], [75.2, 7571.0], [75.3, 7579.0], [75.4, 7588.0], [75.5, 7610.0], [75.6, 7618.0], [75.7, 7646.0], [75.8, 7680.0], [75.9, 7697.0], [76.0, 7705.0], [76.1, 7728.0], [76.2, 7737.0], [76.3, 7748.0], [76.4, 7759.0], [76.5, 7770.0], [76.6, 7771.0], [76.7, 7784.0], [76.8, 7816.0], [76.9, 7830.0], [77.0, 7840.0], [77.1, 7865.0], [77.2, 7884.0], [77.3, 7909.0], [77.4, 7938.0], [77.5, 7962.0], [77.6, 7987.0], [77.7, 8002.0], [77.8, 8014.0], [77.9, 8024.0], [78.0, 8045.0], [78.1, 8067.0], [78.2, 8078.0], [78.3, 8086.0], [78.4, 8113.0], [78.5, 8130.0], [78.6, 8148.0], [78.7, 8234.0], [78.8, 8337.0], [78.9, 8338.0], [79.0, 8366.0], [79.1, 8420.0], [79.2, 8462.0], [79.3, 8588.0], [79.4, 8618.0], [79.5, 8648.0], [79.6, 8657.0], [79.7, 8668.0], [79.8, 8680.0], [79.9, 8696.0], [80.0, 8712.0], [80.1, 8730.0], [80.2, 8785.0], [80.3, 8866.0], [80.4, 8910.0], [80.5, 8992.0], [80.6, 9009.0], [80.7, 9028.0], [80.8, 9043.0], [80.9, 9060.0], [81.0, 9074.0], [81.1, 9082.0], [81.2, 9097.0], [81.3, 9103.0], [81.4, 9111.0], [81.5, 9115.0], [81.6, 9118.0], [81.7, 9127.0], [81.8, 9148.0], [81.9, 9167.0], [82.0, 9182.0], [82.1, 9205.0], [82.2, 9218.0], [82.3, 9303.0], [82.4, 9333.0], [82.5, 9366.0], [82.6, 9399.0], [82.7, 9454.0], [82.8, 9527.0], [82.9, 9534.0], [83.0, 9568.0], [83.1, 9624.0], [83.2, 9715.0], [83.3, 9867.0], [83.4, 9956.0], [83.5, 10021.0], [83.6, 10049.0], [83.7, 10065.0], [83.8, 10118.0], [83.9, 10145.0], [84.0, 10202.0], [84.1, 10234.0], [84.2, 10257.0], [84.3, 10316.0], [84.4, 10399.0], [84.5, 10491.0], [84.6, 10574.0], [84.7, 10638.0], [84.8, 10708.0], [84.9, 10736.0], [85.0, 10770.0], [85.1, 10794.0], [85.2, 10858.0], [85.3, 10882.0], [85.4, 10895.0], [85.5, 10931.0], [85.6, 10957.0], [85.7, 10986.0], [85.8, 11023.0], [85.9, 11049.0], [86.0, 11191.0], [86.1, 11366.0], [86.2, 11525.0], [86.3, 11663.0], [86.4, 11727.0], [86.5, 11794.0], [86.6, 12003.0], [86.7, 12291.0], [86.8, 12298.0], [86.9, 12438.0], [87.0, 12662.0], [87.1, 12750.0], [87.2, 12811.0], [87.3, 12871.0], [87.4, 13037.0], [87.5, 13139.0], [87.6, 13212.0], [87.7, 13574.0], [87.8, 13660.0], [87.9, 13755.0], [88.0, 13830.0], [88.1, 13994.0], [88.2, 14276.0], [88.3, 14744.0], [88.4, 15194.0], [88.5, 15422.0], [88.6, 15458.0], [88.7, 15523.0], [88.8, 15606.0], [88.9, 15619.0], [89.0, 15629.0], [89.1, 15640.0], [89.2, 15674.0], [89.3, 15909.0], [89.4, 15981.0], [89.5, 16007.0], [89.6, 16018.0], [89.7, 16244.0], [89.8, 16317.0], [89.9, 16777.0], [90.0, 17008.0], [90.1, 17232.0], [90.2, 17998.0], [90.3, 18252.0], [90.4, 18754.0], [90.5, 19530.0], [90.6, 20343.0], [90.7, 20784.0], [90.8, 21421.0], [90.9, 21812.0], [91.0, 22314.0], [91.1, 22315.0], [91.2, 24496.0], [91.3, 26516.0], [91.4, 27820.0], [91.5, 29337.0], [91.6, 31057.0], [91.7, 31139.0], [91.8, 31702.0], [91.9, 31984.0], [92.0, 32015.0], [92.1, 32110.0], [92.2, 32134.0], [92.3, 32165.0], [92.4, 33441.0], [92.5, 34186.0], [92.6, 34883.0], [92.7, 35074.0], [92.8, 35892.0], [92.9, 37347.0], [93.0, 38176.0], [93.1, 38690.0], [93.2, 40182.0], [93.3, 40964.0], [93.4, 41202.0], [93.5, 42820.0], [93.6, 44688.0], [93.7, 45271.0], [93.8, 46264.0], [93.9, 49313.0], [94.0, 53106.0], [94.1, 53272.0], [94.2, 55051.0], [94.3, 56841.0], [94.4, 57659.0], [94.5, 58874.0], [94.6, 62748.0], [94.7, 64230.0], [94.8, 64389.0], [94.9, 64474.0], [95.0, 64962.0], [95.1, 65183.0], [95.2, 65996.0], [95.3, 67190.0], [95.4, 68421.0], [95.5, 68778.0], [95.6, 68863.0], [95.7, 68905.0], [95.8, 68926.0], [95.9, 68990.0], [96.0, 69338.0], [96.1, 69736.0], [96.2, 69822.0], [96.3, 72186.0], [96.4, 73311.0], [96.5, 73469.0], [96.6, 74828.0], [96.7, 74963.0], [96.8, 76017.0], [96.9, 76021.0], [97.0, 79952.0], [97.1, 88370.0], [97.2, 91703.0], [97.3, 99679.0], [97.4, 100033.0], [97.5, 100047.0], [97.6, 100068.0], [97.7, 100091.0], [97.8, 100109.0], [97.9, 100138.0], [98.0, 102211.0], [98.1, 106630.0], [98.2, 119150.0], [98.3, 125342.0], [98.4, 127944.0], [98.5, 128416.0], [98.6, 128431.0], [98.7, 128903.0], [98.8, 129559.0], [98.9, 129998.0], [99.0, 133301.0], [99.1, 133370.0], [99.2, 134151.0], [99.3, 136259.0], [99.4, 136521.0], [99.5, 136662.0], [99.6, 137807.0], [99.7, 148078.0], [99.8, 162588.0], [99.9, 163627.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 7102.0, "series": [{"data": [[0.0, 7102.0], [135200.0, 2.0], [148000.0, 32.0], [151200.0, 3.0], [184100.0, 3.0], [68300.0, 9.0], [69900.0, 1.0], [74700.0, 9.0], [77900.0, 11.0], [105100.0, 1.0], [127500.0, 14.0], [129100.0, 2.0], [137000.0, 2.0], [100.0, 931.0], [33700.0, 2.0], [34500.0, 2.0], [35300.0, 5.0], [37700.0, 3.0], [40900.0, 23.0], [40100.0, 20.0], [44100.0, 2.0], [43300.0, 6.0], [47300.0, 2.0], [49700.0, 3.0], [50500.0, 1.0], [51300.0, 1.0], [200.0, 39.0], [56100.0, 4.0], [55300.0, 1.0], [57700.0, 5.0], [58500.0, 7.0], [60900.0, 2.0], [62500.0, 2.0], [61700.0, 2.0], [64900.0, 30.0], [69000.0, 17.0], [67400.0, 1.0], [65800.0, 7.0], [72200.0, 4.0], [300.0, 13.0], [78600.0, 2.0], [81800.0, 1.0], [83400.0, 1.0], [97800.0, 1.0], [101000.0, 9.0], [400.0, 30.0], [105800.0, 1.0], [500.0, 79.0], [128200.0, 17.0], [600.0, 69.0], [700.0, 10.0], [800.0, 10.0], [900.0, 17.0], [1000.0, 1161.0], [1100.0, 448.0], [1200.0, 207.0], [1300.0, 216.0], [1400.0, 213.0], [1500.0, 213.0], [1600.0, 214.0], [1700.0, 143.0], [1800.0, 206.0], [1900.0, 148.0], [2000.0, 332.0], [2100.0, 512.0], [133300.0, 55.0], [136500.0, 31.0], [2300.0, 455.0], [2200.0, 302.0], [2400.0, 255.0], [2500.0, 160.0], [2600.0, 184.0], [2800.0, 249.0], [2700.0, 221.0], [2900.0, 112.0], [3000.0, 107.0], [3100.0, 174.0], [3200.0, 376.0], [3300.0, 182.0], [3400.0, 113.0], [3500.0, 86.0], [3700.0, 168.0], [3600.0, 104.0], [3800.0, 156.0], [3900.0, 158.0], [4000.0, 162.0], [4300.0, 176.0], [4100.0, 264.0], [4200.0, 218.0], [66500.0, 17.0], [4400.0, 96.0], [4500.0, 241.0], [4600.0, 56.0], [69700.0, 26.0], [72900.0, 2.0], [4800.0, 263.0], [4700.0, 168.0], [76100.0, 1.0], [4900.0, 344.0], [5100.0, 198.0], [5000.0, 187.0], [5200.0, 176.0], [5300.0, 251.0], [82500.0, 2.0], [5500.0, 231.0], [5600.0, 200.0], [5400.0, 201.0], [87300.0, 2.0], [88900.0, 1.0], [5700.0, 84.0], [5800.0, 115.0], [93700.0, 1.0], [5900.0, 186.0], [6000.0, 47.0], [6100.0, 318.0], [6200.0, 325.0], [6300.0, 159.0], [100100.0, 67.0], [6600.0, 232.0], [6400.0, 110.0], [6500.0, 108.0], [6900.0, 79.0], [6700.0, 130.0], [6800.0, 113.0], [106500.0, 1.0], [7000.0, 204.0], [7100.0, 344.0], [7300.0, 308.0], [7400.0, 346.0], [7200.0, 454.0], [7500.0, 242.0], [7600.0, 142.0], [7800.0, 156.0], [7700.0, 243.0], [7900.0, 121.0], [8000.0, 218.0], [8100.0, 96.0], [128900.0, 7.0], [8200.0, 27.0], [8600.0, 188.0], [8400.0, 56.0], [9000.0, 200.0], [8800.0, 47.0], [9200.0, 75.0], [9600.0, 45.0], [9400.0, 50.0], [150200.0, 1.0], [9800.0, 32.0], [10200.0, 83.0], [10000.0, 87.0], [10400.0, 34.0], [10600.0, 27.0], [10800.0, 90.0], [11000.0, 75.0], [11200.0, 8.0], [179000.0, 1.0], [11600.0, 39.0], [11400.0, 10.0], [12000.0, 20.0], [12200.0, 56.0], [11800.0, 13.0], [12600.0, 15.0], [12400.0, 9.0], [13000.0, 33.0], [12800.0, 44.0], [13200.0, 12.0], [13600.0, 22.0], [13800.0, 30.0], [13400.0, 1.0], [14200.0, 19.0], [14000.0, 9.0], [14800.0, 4.0], [14400.0, 6.0], [15200.0, 1.0], [15800.0, 21.0], [15600.0, 132.0], [15400.0, 80.0], [16200.0, 8.0], [16000.0, 69.0], [16800.0, 3.0], [17200.0, 7.0], [16400.0, 2.0], [18000.0, 28.0], [18400.0, 4.0], [17600.0, 3.0], [19200.0, 1.0], [20400.0, 5.0], [20800.0, 1.0], [22400.0, 2.0], [22800.0, 1.0], [23600.0, 4.0], [24000.0, 1.0], [24400.0, 2.0], [25200.0, 2.0], [26400.0, 5.0], [25600.0, 5.0], [27600.0, 1.0], [28000.0, 2.0], [30800.0, 2.0], [31200.0, 1.0], [32000.0, 29.0], [33600.0, 5.0], [35200.0, 10.0], [36000.0, 1.0], [37600.0, 2.0], [39200.0, 1.0], [41600.0, 2.0], [43200.0, 2.0], [45600.0, 4.0], [47200.0, 1.0], [50400.0, 1.0], [51200.0, 2.0], [53600.0, 2.0], [56800.0, 29.0], [57600.0, 12.0], [63200.0, 1.0], [64000.0, 1.0], [64800.0, 3.0], [65600.0, 1.0], [68800.0, 46.0], [67200.0, 2.0], [78400.0, 2.0], [97600.0, 2.0], [113600.0, 1.0], [123200.0, 2.0], [134400.0, 4.0], [144900.0, 2.0], [154500.0, 1.0], [68700.0, 14.0], [67100.0, 4.0], [71900.0, 2.0], [75100.0, 2.0], [79900.0, 10.0], [78300.0, 2.0], [86300.0, 2.0], [92700.0, 2.0], [95900.0, 2.0], [100700.0, 6.0], [107100.0, 2.0], [127900.0, 7.0], [129500.0, 13.0], [136200.0, 14.0], [184200.0, 1.0], [34700.0, 2.0], [35500.0, 1.0], [38700.0, 1.0], [37100.0, 1.0], [39500.0, 4.0], [40300.0, 2.0], [41900.0, 11.0], [42700.0, 1.0], [41100.0, 9.0], [43500.0, 2.0], [45900.0, 1.0], [185100.0, 5.0], [45100.0, 1.0], [46700.0, 2.0], [47500.0, 2.0], [49100.0, 2.0], [50700.0, 4.0], [53100.0, 22.0], [53900.0, 1.0], [62700.0, 11.0], [63500.0, 2.0], [65100.0, 15.0], [64300.0, 42.0], [69400.0, 6.0], [72600.0, 1.0], [96600.0, 2.0], [99800.0, 2.0], [106200.0, 1.0], [109400.0, 1.0], [117400.0, 3.0], [163600.0, 29.0], [135700.0, 1.0], [68500.0, 1.0], [66900.0, 3.0], [73300.0, 38.0], [71700.0, 1.0], [74900.0, 26.0], [81300.0, 2.0], [89300.0, 1.0], [90900.0, 1.0], [95700.0, 1.0], [98900.0, 2.0], [111700.0, 2.0], [118100.0, 1.0], [133400.0, 13.0], [136600.0, 27.0], [16900.0, 19.0], [17300.0, 2.0], [17700.0, 4.0], [18900.0, 4.0], [19700.0, 1.0], [20900.0, 10.0], [22100.0, 1.0], [21700.0, 5.0], [22500.0, 1.0], [25700.0, 2.0], [26100.0, 2.0], [26500.0, 3.0], [27300.0, 1.0], [27700.0, 2.0], [28100.0, 8.0], [28500.0, 2.0], [29300.0, 21.0], [30100.0, 1.0], [30500.0, 2.0], [31300.0, 18.0], [30900.0, 1.0], [31700.0, 10.0], [32100.0, 92.0], [32500.0, 2.0], [33800.0, 2.0], [33000.0, 7.0], [131100.0, 1.0], [38600.0, 31.0], [39400.0, 1.0], [163100.0, 4.0], [40200.0, 1.0], [42600.0, 5.0], [44200.0, 3.0], [45000.0, 14.0], [43400.0, 4.0], [47400.0, 2.0], [49000.0, 1.0], [49800.0, 1.0], [54600.0, 6.0], [57800.0, 11.0], [58600.0, 2.0], [61000.0, 1.0], [64200.0, 2.0], [65000.0, 1.0], [67600.0, 2.0], [69200.0, 2.0], [66000.0, 2.0], [72400.0, 2.0], [70800.0, 1.0], [74000.0, 2.0], [80400.0, 4.0], [94800.0, 1.0], [99600.0, 1.0], [104400.0, 3.0], [123600.0, 25.0], [128400.0, 43.0], [136800.0, 2.0], [165600.0, 3.0], [191200.0, 1.0], [67500.0, 1.0], [65900.0, 9.0], [69100.0, 1.0], [70700.0, 2.0], [72300.0, 2.0], [75500.0, 2.0], [88300.0, 2.0], [89900.0, 3.0], [94700.0, 1.0], [97900.0, 2.0], [102700.0, 2.0], [123500.0, 1.0], [129900.0, 28.0], [34100.0, 10.0], [34900.0, 12.0], [35700.0, 2.0], [36500.0, 3.0], [38900.0, 2.0], [37300.0, 34.0], [38100.0, 2.0], [40500.0, 5.0], [41300.0, 2.0], [43700.0, 2.0], [46100.0, 2.0], [45300.0, 7.0], [48500.0, 4.0], [47700.0, 2.0], [49300.0, 1.0], [61300.0, 2.0], [62900.0, 6.0], [64500.0, 3.0], [63700.0, 2.0], [66600.0, 1.0], [68200.0, 9.0], [69800.0, 12.0], [77800.0, 1.0], [74600.0, 1.0], [89000.0, 16.0], [90600.0, 2.0], [93800.0, 1.0], [101800.0, 2.0], [106600.0, 9.0], [117800.0, 1.0], [127400.0, 5.0], [68900.0, 71.0], [73700.0, 1.0], [72100.0, 13.0], [81700.0, 2.0], [97700.0, 1.0], [94500.0, 1.0], [115300.0, 1.0], [129700.0, 1.0], [8700.0, 94.0], [8300.0, 89.0], [8500.0, 29.0], [135800.0, 1.0], [8900.0, 57.0], [9100.0, 254.0], [9500.0, 79.0], [9700.0, 28.0], [9300.0, 94.0], [10100.0, 79.0], [9900.0, 29.0], [10500.0, 50.0], [10700.0, 110.0], [10300.0, 41.0], [10900.0, 102.0], [11100.0, 5.0], [11500.0, 10.0], [11300.0, 41.0], [183800.0, 1.0], [11700.0, 47.0], [12100.0, 3.0], [11900.0, 12.0], [12700.0, 49.0], [12500.0, 17.0], [12300.0, 13.0], [12900.0, 15.0], [13100.0, 32.0], [13300.0, 11.0], [13500.0, 30.0], [13700.0, 41.0], [13900.0, 25.0], [14300.0, 3.0], [14100.0, 1.0], [14700.0, 9.0], [14500.0, 1.0], [14900.0, 12.0], [15100.0, 16.0], [15300.0, 4.0], [15500.0, 29.0], [15700.0, 4.0], [16100.0, 5.0], [15900.0, 53.0], [16300.0, 38.0], [17400.0, 3.0], [16600.0, 6.0], [17000.0, 30.0], [18200.0, 17.0], [17800.0, 11.0], [19000.0, 8.0], [19400.0, 3.0], [19800.0, 6.0], [20600.0, 2.0], [21000.0, 1.0], [21400.0, 40.0], [22200.0, 6.0], [21800.0, 3.0], [23000.0, 6.0], [23400.0, 4.0], [25400.0, 1.0], [26200.0, 1.0], [27000.0, 16.0], [27800.0, 8.0], [28200.0, 3.0], [29000.0, 2.0], [29400.0, 2.0], [29800.0, 2.0], [31000.0, 8.0], [31400.0, 2.0], [32600.0, 5.0], [34800.0, 16.0], [34000.0, 2.0], [136700.0, 11.0], [35600.0, 3.0], [36400.0, 10.0], [38800.0, 1.0], [40400.0, 8.0], [39600.0, 2.0], [42800.0, 1.0], [42000.0, 2.0], [41200.0, 6.0], [43600.0, 3.0], [44400.0, 1.0], [45200.0, 29.0], [47600.0, 3.0], [48400.0, 1.0], [51600.0, 3.0], [53200.0, 23.0], [54000.0, 1.0], [54800.0, 8.0], [55600.0, 3.0], [58800.0, 11.0], [61200.0, 2.0], [59600.0, 2.0], [62800.0, 9.0], [65200.0, 4.0], [64400.0, 27.0], [69600.0, 9.0], [66400.0, 3.0], [72800.0, 3.0], [71200.0, 1.0], [76000.0, 51.0], [80800.0, 1.0], [82400.0, 1.0], [96800.0, 2.0], [100000.0, 126.0], [106400.0, 1.0], [116000.0, 3.0], [128800.0, 23.0], [130400.0, 1.0], [132800.0, 1.0], [136900.0, 2.0], [162500.0, 9.0], [181700.0, 1.0], [69500.0, 7.0], [67900.0, 1.0], [74300.0, 1.0], [85500.0, 1.0], [91900.0, 1.0], [106300.0, 7.0], [112700.0, 1.0], [117500.0, 2.0], [119100.0, 7.0], [128700.0, 1.0], [137800.0, 24.0], [166600.0, 1.0], [205000.0, 1.0], [33500.0, 2.0], [35100.0, 4.0], [36700.0, 1.0], [40700.0, 3.0], [39100.0, 4.0], [42300.0, 2.0], [43900.0, 4.0], [46300.0, 6.0], [45500.0, 1.0], [48700.0, 2.0], [49500.0, 2.0], [50300.0, 1.0], [56700.0, 6.0], [58300.0, 2.0], [57500.0, 3.0], [60700.0, 2.0], [62300.0, 1.0], [64700.0, 4.0], [65500.0, 6.0], [63900.0, 1.0], [70200.0, 1.0], [73400.0, 9.0], [75000.0, 1.0], [81400.0, 2.0], [89400.0, 1.0], [95800.0, 1.0], [102200.0, 9.0], [131000.0, 1.0], [133200.0, 8.0], [136400.0, 14.0], [134100.0, 18.0], [146900.0, 1.0], [178900.0, 1.0], [188500.0, 1.0], [69300.0, 13.0], [67700.0, 1.0], [70900.0, 2.0], [83700.0, 2.0], [85300.0, 2.0], [86900.0, 1.0], [90100.0, 5.0], [91700.0, 3.0], [104500.0, 3.0], [112500.0, 2.0], [125300.0, 10.0], [131800.0, 1.0], [16700.0, 14.0], [17100.0, 1.0], [18300.0, 9.0], [17500.0, 2.0], [17900.0, 3.0], [19100.0, 1.0], [18700.0, 2.0], [20300.0, 20.0], [19900.0, 4.0], [19500.0, 26.0], [21100.0, 2.0], [21500.0, 1.0], [20700.0, 11.0], [22300.0, 58.0], [23100.0, 2.0], [23500.0, 2.0], [22700.0, 1.0], [25500.0, 3.0], [25900.0, 3.0], [26300.0, 4.0], [26700.0, 1.0], [27100.0, 5.0], [27500.0, 2.0], [28300.0, 3.0], [27900.0, 2.0], [29500.0, 2.0], [31100.0, 26.0], [31500.0, 5.0], [31900.0, 32.0], [32700.0, 4.0], [34200.0, 9.0], [33400.0, 16.0], [35800.0, 2.0], [35000.0, 22.0], [36600.0, 4.0], [40600.0, 4.0], [44600.0, 2.0], [45400.0, 1.0], [46200.0, 1.0], [51000.0, 1.0], [50200.0, 1.0], [52600.0, 2.0], [55000.0, 7.0], [53400.0, 1.0], [55800.0, 2.0], [56600.0, 2.0], [63000.0, 1.0], [65400.0, 1.0], [64600.0, 1.0], [68400.0, 28.0], [71600.0, 7.0], [73200.0, 1.0], [74800.0, 27.0], [79600.0, 2.0], [95600.0, 1.0], [98800.0, 2.0], [116400.0, 1.0], [127600.0, 3.0], [129200.0, 14.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 205000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 263.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 19937.0, "series": [{"data": [[0.0, 8115.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2431.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 19937.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 263.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 259.60714285714295, "minX": 1.6828596E12, "maxY": 3000.0, "series": [{"data": [[1.68285996E12, 842.0924295774644], [1.68285966E12, 3000.0], [1.6828596E12, 3000.0], [1.68285978E12, 3000.0], [1.68285972E12, 3000.0], [1.6828599E12, 2804.6059182714894], [1.68285984E12, 3000.0], [1.68286002E12, 259.60714285714295]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68286002E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 72.0, "minX": 246.0, "maxY": 74325.0, "series": [{"data": [[247.0, 72871.0], [246.0, 74325.0], [255.0, 65512.0], [254.0, 65514.0], [253.0, 66522.0], [252.0, 71297.0], [251.0, 72304.0], [250.0, 70854.0], [249.0, 73314.0], [248.0, 74012.0], [270.0, 64230.0], [271.0, 64925.0], [269.0, 65935.0], [268.0, 65937.0], [267.0, 66944.0], [266.0, 64797.0], [265.0, 65805.0], [264.0, 67259.0], [263.0, 67692.33333333333], [259.0, 68266.0], [258.0, 68268.0], [257.0, 69276.0], [256.0, 64505.0], [260.0, 67101.0], [286.0, 59693.0], [287.0, 59691.0], [285.0, 60701.0], [284.0, 60703.0], [283.0, 61710.0], [282.0, 61712.0], [281.0, 62720.0], [280.0, 62722.0], [279.0, 63729.0], [273.0, 66593.0], [272.0, 63918.0], [275.0, 65581.0], [274.0, 65582.0], [278.0, 63731.0], [277.0, 64739.0], [276.0, 64573.0], [302.0, 51617.0], [303.0, 51615.0], [301.0, 52624.0], [300.0, 52626.0], [299.0, 53633.0], [298.0, 53635.0], [297.0, 54643.0], [296.0, 54644.0], [295.0, 55653.0], [289.0, 58680.0], [288.0, 58683.0], [291.0, 57671.0], [290.0, 57673.0], [294.0, 55655.0], [293.0, 56661.0], [292.0, 56664.0], [318.0, 43677.0], [319.0, 43676.0], [317.0, 44686.0], [316.0, 44688.0], [315.0, 45698.0], [314.0, 45699.0], [313.0, 46706.0], [312.0, 46708.0], [311.0, 47715.0], [305.0, 50744.0], [304.0, 50745.0], [307.0, 49733.0], [306.0, 49736.0], [310.0, 47717.0], [309.0, 48725.0], [308.0, 48726.0], [334.0, 35600.0], [335.0, 35599.0], [333.0, 36610.0], [332.0, 36612.0], [331.0, 37618.0], [330.0, 37620.0], [329.0, 38629.0], [328.0, 38631.0], [327.0, 39638.0], [321.0, 42666.0], [320.0, 42671.0], [323.0, 41657.0], [322.0, 41659.0], [326.0, 39639.0], [325.0, 40648.0], [324.0, 40650.0], [350.0, 27525.0], [351.0, 27522.0], [349.0, 28533.0], [348.0, 28535.0], [347.0, 29542.0], [346.0, 29544.0], [345.0, 30554.5], [343.0, 31561.0], [337.0, 34589.0], [336.0, 34593.0], [339.0, 33580.0], [338.0, 33582.0], [342.0, 31563.0], [341.0, 32571.0], [340.0, 32573.0], [366.0, 19448.0], [367.0, 19448.0], [365.0, 20456.0], [364.0, 20458.0], [363.0, 21467.0], [362.0, 21468.0], [361.0, 22475.0], [360.0, 22477.0], [359.0, 23485.0], [353.0, 26513.0], [352.0, 26516.0], [355.0, 25504.0], [354.0, 25506.0], [358.0, 23487.0], [357.0, 24494.0], [356.0, 24496.0], [382.0, 6982.0], [383.0, 6981.0], [381.0, 6984.0], [380.0, 6984.0], [379.0, 6985.0], [377.0, 6986.0], [376.0, 6986.0], [373.0, 16417.0], [371.0, 17426.0], [370.0, 17428.0], [369.0, 18435.0], [368.0, 18437.0], [372.0, 16420.0], [398.0, 6395.0], [399.0, 6395.0], [397.0, 6395.0], [396.0, 6396.0], [395.0, 6396.0], [394.0, 6611.0], [393.0, 15403.0], [392.0, 15405.0], [391.0, 6959.0], [386.0, 6977.0], [384.0, 6977.0], [390.0, 6960.0], [389.0, 6976.0], [414.0, 6385.0], [415.0, 6381.0], [413.0, 6385.0], [412.0, 6387.0], [411.0, 6386.0], [410.0, 6386.0], [409.0, 6388.0], [408.0, 6388.0], [407.0, 6390.0], [401.0, 6395.0], [400.0, 6394.0], [403.0, 6393.0], [402.0, 6394.0], [406.0, 6391.0], [405.0, 6394.0], [404.0, 6393.0], [430.0, 7969.0], [431.0, 6368.0], [429.0, 6367.0], [428.0, 6369.0], [427.0, 6368.0], [425.0, 6369.0], [424.0, 7169.5], [422.0, 6370.0], [417.0, 6380.0], [419.0, 6379.0], [418.0, 6379.0], [421.0, 6371.0], [420.0, 6379.0], [444.0, 7876.0], [446.0, 7876.0], [447.0, 7875.0], [445.0, 7875.0], [443.0, 7876.0], [440.0, 7876.0], [439.0, 7938.0], [433.0, 7956.0], [432.0, 6354.0], [435.0, 7955.0], [434.0, 7956.0], [438.0, 7951.0], [437.0, 7952.0], [436.0, 7955.0], [462.0, 8532.0], [463.0, 7845.0], [460.0, 8533.0], [458.0, 7846.0], [457.0, 10130.25], [456.0, 15615.0], [455.0, 9222.0], [451.0, 7874.0], [450.0, 7875.0], [448.0, 7875.0], [479.0, 8524.0], [477.0, 7843.0], [475.0, 8530.0], [472.0, 9218.0], [469.0, 8302.0], [467.0, 9219.0], [466.0, 11729.0], [495.0, 7840.0], [492.0, 9214.0], [491.0, 8299.666666666666], [488.0, 13478.0], [485.0, 7841.0], [484.0, 8391.6], [483.0, 7842.0], [482.0, 9217.0], [498.0, 7839.0], [509.0, 15605.0], [510.0, 7837.0], [508.0, 7837.0], [497.0, 7839.0], [496.0, 7839.0], [507.0, 9556.0], [505.0, 12409.0], [503.0, 9212.0], [502.0, 8755.0], [501.0, 8526.0], [500.0, 9212.0], [538.0, 11715.0], [530.0, 9207.0], [536.0, 15599.5], [526.0, 8864.75], [512.0, 7836.0], [514.0, 10121.75], [518.0, 8694.5], [524.0, 7834.0], [522.0, 8521.5], [532.0, 7832.5], [546.0, 9204.0], [568.0, 15523.0], [574.0, 7754.0], [572.0, 8785.666666666666], [544.0, 8402.333333333334], [550.0, 7829.0], [556.0, 9202.0], [554.0, 7828.0], [552.0, 7828.0], [566.0, 9130.0], [564.0, 8445.5], [562.0, 7759.0], [560.0, 9200.0], [602.0, 9454.0], [606.0, 15486.0], [600.0, 9110.0], [590.0, 8425.0], [576.0, 10801.0], [580.0, 9120.0], [582.0, 7741.0], [588.0, 11358.333333333334], [584.0, 7739.0], [598.0, 9455.0], [596.0, 12308.0], [594.0, 10108.75], [634.0, 9404.0], [638.0, 7684.0], [614.0, 9089.0], [610.0, 9090.0], [622.0, 9076.333333333334], [620.0, 9076.0], [616.0, 15474.0], [630.0, 10736.666666666666], [628.0, 7690.0], [626.0, 12869.0], [646.0, 9045.0], [670.0, 12225.0], [668.0, 9028.5], [664.0, 9030.0], [640.0, 9059.0], [652.0, 12405.5], [650.0, 12412.5], [648.0, 15438.0], [660.0, 12229.0], [658.0, 9148.0], [698.0, 9339.0], [692.0, 9344.0], [702.0, 9335.0], [688.0, 15402.0], [690.0, 9000.0], [696.0, 9340.0], [678.0, 15408.0], [676.0, 9014.0], [674.0, 9362.0], [672.0, 9363.0], [686.0, 9011.0], [684.0, 9012.0], [682.0, 9013.0], [694.0, 9342.0], [728.0, 14422.0], [734.0, 8140.0], [722.0, 12339.5], [720.0, 9316.0], [730.0, 13847.0], [704.0, 9334.0], [706.0, 9333.0], [718.0, 9319.0], [716.0, 9321.0], [714.0, 9322.0], [712.0, 15373.0], [724.0, 8952.0], [762.0, 8114.0], [766.0, 13781.0], [752.0, 9840.5], [754.0, 13798.0], [760.0, 12565.0], [742.0, 8137.0], [740.0, 9904.666666666666], [750.0, 7942.0], [748.0, 11593.0], [746.0, 8134.0], [756.0, 8121.0], [772.0, 12836.0], [798.0, 10375.25], [770.0, 8099.0], [768.0, 12550.0], [782.0, 9639.666666666666], [778.0, 13218.0], [776.0, 10382.0], [788.0, 13217.0], [786.0, 10966.0], [784.0, 10966.0], [828.0, 10999.0], [830.0, 7535.0], [826.0, 10999.0], [814.0, 7350.5], [812.0, 9834.0], [808.0, 10425.0], [822.0, 13212.0], [862.0, 10951.0], [850.0, 13303.0], [858.0, 10778.666666666666], [846.0, 9243.5], [832.0, 7535.0], [834.0, 10978.0], [844.0, 7346.0], [854.0, 11981.0], [852.0, 13205.0], [868.0, 11978.0], [888.0, 13194.5], [894.0, 10935.0], [890.0, 10936.0], [864.0, 13300.0], [870.0, 10649.5], [878.0, 10964.5], [874.0, 9298.0], [872.0, 10349.5], [886.0, 13195.0], [884.0, 10964.5], [882.0, 13195.0], [926.0, 9919.5], [918.0, 10478.75], [914.0, 10738.0], [910.0, 10394.666666666666], [906.0, 10653.0], [904.0, 10973.0], [952.0, 9232.5], [956.0, 8148.5], [934.0, 9258.0], [932.0, 7484.0], [930.0, 9789.5], [938.0, 10921.0], [936.0, 7479.0], [950.0, 10442.75], [948.0, 10922.0], [944.0, 10290.333333333334], [988.0, 10233.666666666666], [990.0, 8821.0], [984.0, 10874.0], [982.0, 10248.0], [980.0, 9143.5], [978.0, 10237.0], [960.0, 7447.0], [962.0, 9192.0], [974.0, 7415.0], [970.0, 10241.0], [968.0, 10242.0], [1016.0, 9170.0], [1020.0, 11207.666666666666], [1012.0, 9172.0], [1008.0, 7402.5], [992.0, 9709.0], [998.0, 10871.0], [1004.0, 7404.0], [1000.0, 10231.0], [1014.0, 10858.0], [1010.0, 9176.0], [1084.0, 11545.333333333334], [1080.0, 10770.5], [1056.0, 9092.333333333334], [1028.0, 9668.666666666666], [1032.0, 10832.0], [1036.0, 10830.0], [1048.0, 10012.0], [1068.0, 11119.333333333334], [1064.0, 9130.0], [1060.0, 13128.0], [1136.0, 10706.666666666666], [1092.0, 10747.0], [1132.0, 10707.666666666666], [1128.0, 10724.0], [1120.0, 12993.0], [1116.0, 11770.0], [1112.0, 10443.0], [1108.0, 9095.0], [1104.0, 10145.0], [1204.0, 10741.0], [1208.0, 11725.0], [1188.0, 11901.0], [1212.0, 7273.0], [1200.0, 12414.5], [1156.0, 10718.0], [1160.0, 10716.0], [1164.0, 10401.5], [1180.0, 10109.0], [1172.0, 7287.0], [1196.0, 10703.0], [1192.0, 11054.0], [1272.0, 7218.5], [1276.0, 10640.0], [1248.0, 11845.0], [1256.0, 8953.5], [1264.0, 8994.0], [1228.0, 12936.0], [1224.0, 12940.0], [1220.0, 11718.0], [1216.0, 10384.5], [1244.0, 9474.5], [1236.0, 12387.0], [1232.0, 9032.0], [1260.0, 11672.0], [1336.0, 9183.0], [1340.0, 9522.0], [1312.0, 9506.5], [1316.0, 10429.666666666666], [1332.0, 11780.0], [1284.0, 10678.0], [1280.0, 11173.0], [1292.0, 7213.0], [1308.0, 11660.0], [1304.0, 10633.0], [1300.0, 9510.0], [1324.0, 12972.0], [1320.0, 13024.0], [1400.0, 7936.0], [1380.0, 10255.5], [1384.0, 8498.0], [1404.0, 7710.0], [1396.0, 9526.0], [1392.0, 11436.0], [1344.0, 9520.0], [1348.0, 10653.5], [1352.0, 11722.0], [1356.0, 10489.0], [1372.0, 9135.0], [1364.0, 9456.8], [1388.0, 10782.0], [1412.0, 6681.0], [1456.0, 6697.0], [1460.0, 8135.5], [1408.0, 6613.0], [1416.0, 6704.0], [1420.0, 6655.0], [1436.0, 8061.5], [1432.0, 6677.5], [1424.0, 6655.5], [1452.0, 7417.5], [1444.0, 6651.0], [1440.0, 6652.0], [1520.0, 7589.333333333333], [1532.0, 6664.666666666667], [1528.0, 9529.0], [1524.0, 8585.5], [1480.0, 9541.5], [1476.0, 6670.5], [1516.0, 63000.0], [1500.0, 8074.0], [1496.0, 9459.0], [1492.0, 10056.5], [1488.0, 6691.0], [1548.0, 8543.0], [1596.0, 6628.0], [1588.0, 6631.0], [1584.0, 6631.0], [1544.0, 8579.5], [1540.0, 6677.0], [1536.0, 9448.0], [1568.0, 9561.0], [1564.0, 9484.0], [1560.0, 10444.0], [1656.0, 9864.5], [1632.0, 8329.300000000001], [1608.0, 9537.0], [1600.0, 6628.0], [1628.0, 8849.666666666666], [1620.0, 6605.0], [1640.0, 9821.0], [1720.0, 7756.0], [1696.0, 7762.0], [1704.0, 61308.0], [1724.0, 7911.0], [1716.0, 8276.5], [1672.0, 7853.333333333333], [1676.0, 9708.0], [1692.0, 4823.0], [1680.0, 8826.0], [1784.0, 8746.0], [1760.0, 8765.0], [1768.0, 7805.0], [1772.0, 7878.0], [1780.0, 35009.0], [1776.0, 7875.0], [1728.0, 34606.0], [1736.0, 7906.0], [1740.0, 8344.5], [1756.0, 7733.0], [1752.0, 7736.0], [1748.0, 7743.0], [1744.0, 8782.0], [1840.0, 3772.0], [1836.0, 8669.0], [1852.0, 16020.0], [1844.0, 1409.0], [1800.0, 7840.0], [1796.0, 8723.0], [1792.0, 7698.0], [1816.0, 8695.0], [1812.0, 7816.0], [1916.0, 10830.0], [1888.0, 16006.5], [1892.0, 10846.0], [1896.0, 16002.0], [1904.0, 15994.0], [1868.0, 16013.0], [1864.0, 16016.0], [1884.0, 16009.0], [1872.0, 16012.0], [1924.0, 7874.0], [1972.0, 11081.5], [1952.0, 6002.5], [1960.0, 36513.0], [1964.0, 15956.0], [1920.0, 15985.0], [1928.0, 5662.0], [1932.0, 21096.5], [1948.0, 6296.0], [1944.0, 5655.0], [1940.0, 6302.0], [1996.0, 6324.0], [2036.0, 6187.0], [1988.0, 6208.0], [1984.0, 15939.0], [2120.0, 5591.0], [2112.0, 5592.0], [2136.0, 6017.666666666667], [2152.0, 5585.0], [2144.0, 6171.0], [2072.0, 6182.0], [2088.0, 6181.0], [2240.0, 6101.0], [2184.0, 5579.5], [2192.0, 5497.666666666667], [2232.0, 9590.0], [2224.0, 6277.0], [2248.0, 20887.5], [2424.0, 4952.0], [2376.0, 5008.0], [2392.0, 10921.0], [2368.0, 5011.0], [2384.0, 2820.0], [2416.0, 4961.0], [2408.0, 2790.0], [2304.0, 8015.5], [2312.0, 2865.5], [2320.0, 5077.0], [2328.0, 3954.0], [2352.0, 5026.0], [2344.0, 2844.0], [2336.0, 2848.0], [2544.0, 8690.0], [2528.0, 8699.0], [2552.0, 8683.0], [2504.0, 8710.0], [2512.0, 7548.0], [2520.0, 6269.5], [2536.0, 3825.0], [2456.0, 4918.0], [2448.0, 3837.0], [2432.0, 2763.0], [2480.0, 4883.0], [2640.0, 3743.5], [2632.0, 3755.0], [2648.0, 8609.5], [2656.0, 6172.0], [2576.0, 8671.0], [2560.0, 6246.0], [2608.0, 3775.0], [2800.0, 2745.0], [2752.0, 18976.0], [2760.0, 3325.0], [2768.0, 3323.0], [2776.0, 2754.0], [2808.0, 6160.5], [2784.0, 5404.0], [2688.0, 3717.6666666666665], [2696.0, 8560.0], [2704.0, 3370.0], [2712.0, 4975.5], [2728.0, 3357.0], [2720.0, 3362.0], [2928.0, 16978.0], [2888.0, 2321.0], [2896.0, 2314.0], [2904.0, 6113.75], [2816.0, 6927.0], [2832.0, 4816.5], [2840.0, 2683.0], [2872.0, 6623.0], [2864.0, 12295.0], [2856.0, 5027.0], [3000.0, 10449.93119249635], [2960.0, 5558.666666666667], [2984.0, 4462.666666666667], [2976.0, 4673.692307692308], [2113.0, 6216.333333333333], [2121.0, 5776.2], [2153.0, 5585.0], [2105.0, 5471.5], [2137.0, 6211.166666666666], [2289.0, 3964.5], [2297.0, 3963.0], [2241.0, 6218.0], [2249.0, 7709.052631578948], [2257.0, 6216.5], [2265.0, 6215.75], [2281.0, 4654.75], [2193.0, 5750.0], [2185.0, 9018.0], [2233.0, 6230.0], [2225.0, 15978.333333333334], [2417.0, 4960.0], [2385.0, 2818.0], [2377.0, 11636.0], [2425.0, 2768.0], [2401.0, 2804.0], [2321.0, 2863.0], [2313.0, 2866.0], [2305.0, 2869.0], [2353.0, 5025.0], [2537.0, 8695.0], [2545.0, 3819.0], [2505.0, 3839.0], [2513.0, 3836.0], [2529.0, 3829.0], [2449.0, 4928.0], [2441.0, 4935.5], [2489.0, 5080.333333333333], [2481.0, 4155.0], [2473.0, 3794.0], [2465.0, 4909.0], [2585.0, 5421.333333333333], [2665.0, 6719.666666666667], [2633.0, 6190.0], [2657.0, 6171.5], [2577.0, 8669.0], [2569.0, 8679.0], [2617.0, 8633.0], [2609.0, 3774.0], [2601.0, 3014.0], [2809.0, 2733.0], [2769.0, 3321.0], [2777.0, 4852.0], [2801.0, 2743.0], [2745.0, 3341.0], [2737.0, 3352.0], [2921.0, 5565.5], [2905.0, 4940.0], [2817.0, 6927.0], [2825.0, 6152.5], [2873.0, 5014.0], [2865.0, 2371.0], [2857.0, 2375.0], [2993.0, 4496.333333333333], [2961.0, 5568.0], [2985.0, 4829.142857142857], [2977.0, 4722.5], [1077.0, 11925.0], [1085.0, 9100.0], [1057.0, 10823.0], [1081.0, 10789.0], [1073.0, 11946.0], [1037.0, 11140.0], [1033.0, 13091.0], [1029.0, 13191.0], [1025.0, 7373.0], [1053.0, 11922.0], [1049.0, 13035.0], [1045.0, 11089.0], [1041.0, 10829.0], [1065.0, 9066.0], [1141.0, 10741.0], [1137.0, 9073.0], [1145.0, 9596.0], [1117.0, 7319.0], [1089.0, 10748.0], [1097.0, 11774.0], [1101.0, 10745.0], [1113.0, 10743.0], [1109.0, 6946.0], [1133.0, 10764.0], [1129.0, 9599.5], [1121.0, 8205.0], [1201.0, 9053.0], [1209.0, 10737.0], [1185.0, 10706.0], [1205.0, 10700.0], [1153.0, 11073.666666666666], [1161.0, 10713.0], [1165.0, 10112.0], [1181.0, 10747.5], [1177.0, 9584.5], [1169.0, 9062.0], [1197.0, 10703.0], [1189.0, 9056.0], [1269.0, 10683.0], [1249.0, 9020.0], [1217.0, 10734.0], [1221.0, 12942.0], [1225.0, 13036.0], [1229.0, 10684.0], [1245.0, 10672.0], [1241.0, 11566.0], [1333.0, 11778.0], [1341.0, 9521.0], [1321.0, 8977.0], [1313.0, 7208.0], [1317.0, 11657.0], [1329.0, 11652.5], [1293.0, 9837.666666666666], [1289.0, 10899.666666666666], [1285.0, 10939.0], [1309.0, 10033.0], [1305.0, 8983.0], [1297.0, 10036.0], [1325.0, 11649.0], [1397.0, 8508.0], [1405.0, 7854.0], [1377.0, 7988.0], [1381.0, 8511.0], [1393.0, 10403.0], [1357.0, 10488.0], [1353.0, 11867.0], [1349.0, 10507.0], [1373.0, 9114.0], [1385.0, 8499.0], [1457.0, 6649.333333333333], [1469.0, 8157.5], [1441.0, 6676.0], [1465.0, 9622.0], [1417.0, 6704.0], [1409.0, 6612.0], [1433.0, 10509.0], [1429.0, 8605.5], [1425.0, 6702.0], [1529.0, 6680.0], [1505.0, 7648.0], [1521.0, 6682.5], [1485.0, 6691.0], [1481.0, 9619.0], [1473.0, 8574.5], [1497.0, 8592.5], [1513.0, 8146.0], [1597.0, 62946.0], [1585.0, 6631.0], [1549.0, 6662.0], [1581.0, 9480.0], [1565.0, 9562.0], [1561.0, 8022.0], [1657.0, 10267.0], [1601.0, 8051.5], [1609.0, 9379.0], [1629.0, 9453.0], [1625.0, 8556.666666666666], [1721.0, 7912.0], [1705.0, 7759.0], [1709.0, 7760.0], [1725.0, 8792.0], [1717.0, 7757.0], [1713.0, 7811.0], [1665.0, 8674.0], [1669.0, 8724.0], [1677.0, 8827.0], [1689.0, 8825.5], [1685.0, 8826.0], [1785.0, 7865.0], [1765.0, 25628.0], [1773.0, 8759.0], [1789.0, 7700.0], [1781.0, 7712.0], [1777.0, 7718.0], [1729.0, 7754.0], [1733.0, 7751.0], [1737.0, 8785.0], [1757.0, 8770.0], [1749.0, 8778.0], [1745.0, 7744.0], [1841.0, 3026.0], [1849.0, 16020.0], [1829.0, 8675.0], [1833.0, 8328.333333333334], [1805.0, 7677.0], [1793.0, 7697.0], [1817.0, 7812.0], [1809.0, 7665.0], [1905.0, 15993.0], [1893.0, 16002.0], [1901.0, 15997.0], [1909.0, 15989.5], [1869.0, 16013.0], [1861.0, 5700.0], [1857.0, 11153.5], [1885.0, 16009.0], [1881.0, 11144.5], [1873.0, 16011.0], [1981.0, 6268.5], [1977.0, 5976.0], [1953.0, 6232.0], [1957.0, 5938.5], [1961.0, 15957.0], [1965.0, 6223.0], [1973.0, 15947.0], [1969.0, 6338.0], [1921.0, 5669.0], [1925.0, 9495.666666666666], [1933.0, 6362.0], [1949.0, 6354.0], [1945.0, 6239.0], [1941.0, 6241.0], [1937.0, 15974.5], [2005.0, 6049.0], [1997.0, 5973.0], [1993.0, 5913.5], [1989.0, 11885.0], [1985.0, 5915.5], [2170.0, 9019.666666666666], [2130.0, 15904.0], [2162.0, 5582.0], [2154.0, 5877.0], [2146.0, 4382.333333333333], [2090.0, 6181.0], [2274.0, 4976.4], [2298.0, 3963.25], [2234.0, 6278.0], [2186.0, 5578.5], [2194.0, 13234.5], [2226.0, 5574.0], [2370.0, 11639.0], [2386.0, 2816.0], [2394.0, 3902.0], [2378.0, 8321.5], [2410.0, 4971.5], [2402.0, 4987.0], [2314.0, 3958.0], [2362.0, 3930.0], [2338.0, 2846.5], [2546.0, 8689.0], [2498.0, 3452.0], [2506.0, 8709.0], [2514.0, 6271.5], [2522.0, 8703.0], [2538.0, 3824.0], [2458.0, 4918.0], [2450.0, 4924.0], [2442.0, 4933.0], [2434.0, 3854.0], [2474.0, 2701.0], [2466.0, 4909.0], [2666.0, 3732.0], [2674.0, 3729.0], [2626.0, 5120.333333333333], [2634.0, 3754.0], [2650.0, 3739.0], [2658.0, 8606.0], [2586.0, 3798.0], [2610.0, 7485.0], [2602.0, 3794.0], [2594.0, 8666.0], [2786.0, 6433.333333333333], [2810.0, 2733.0], [2762.0, 3324.0], [2778.0, 5405.0], [2794.0, 5400.0], [2706.0, 3369.5], [2714.0, 4976.0], [2746.0, 3342.0], [2738.0, 3350.0], [2730.0, 3355.5], [2722.0, 5459.5], [2914.0, 5537.0], [2882.0, 5490.0], [2890.0, 4972.5], [2898.0, 4410.5], [2906.0, 4939.0], [2834.0, 4815.5], [2842.0, 2681.0], [2866.0, 5022.0], [2858.0, 6636.0], [2850.0, 4990.75], [2946.0, 5541.0], [2954.0, 5582.0], [2970.0, 4191.25], [2994.0, 4557.0], [2986.0, 3945.0], [2155.0, 3780.0], [2099.0, 5593.0], [2299.0, 2871.0], [2251.0, 5573.0], [2283.0, 1093.5], [2203.0, 6280.5], [2179.0, 5795.166666666666], [2219.0, 5333.0], [2227.0, 5574.0], [2411.0, 11600.0], [2371.0, 2825.0], [2427.0, 4950.0], [2419.0, 3868.0], [2403.0, 2799.0], [2331.0, 4310.666666666667], [2307.0, 3960.0], [2363.0, 2838.0], [2355.0, 3932.5], [2339.0, 5031.0], [2531.0, 3828.3333333333335], [2555.0, 6247.0], [2507.0, 8708.0], [2523.0, 8702.0], [2459.0, 4918.0], [2451.0, 4922.0], [2435.0, 4944.0], [2491.0, 8713.0], [2483.0, 2699.0], [2675.0, 8599.0], [2635.0, 2966.0], [2643.0, 5105.333333333333], [2651.0, 8608.0], [2667.0, 8602.0], [2587.0, 3798.0], [2571.0, 8679.0], [2563.0, 3810.0], [2603.0, 6229.0], [2595.0, 8665.0], [2795.0, 6945.0], [2699.0, 5516.333333333333], [2755.0, 3327.0], [2771.0, 3320.0], [2779.0, 6177.5], [2803.0, 2741.0], [2691.0, 6963.666666666667], [2747.0, 3342.0], [2739.0, 3350.0], [2731.0, 3354.0], [2723.0, 3360.0], [2923.0, 5532.0], [2931.0, 5569.666666666667], [2939.0, 5564.0], [2883.0, 6519.0], [2891.0, 4972.0], [2899.0, 6508.0], [2915.0, 5536.0], [2827.0, 5379.0], [2875.0, 5528.333333333333], [2867.0, 6565.0], [2947.0, 5520.0], [2995.0, 4556.0], [2955.0, 5045.0], [2971.0, 4747.166666666667], [2987.0, 4460.0], [539.0, 9203.0], [543.0, 9204.0], [515.0, 7836.0], [519.0, 9381.5], [533.0, 15600.0], [531.0, 7833.0], [529.0, 7833.0], [569.0, 9129.0], [563.0, 9133.0], [559.0, 8514.0], [545.0, 9376.5], [549.0, 8402.0], [557.0, 8285.666666666666], [555.0, 9202.0], [567.0, 15524.0], [605.0, 9106.0], [607.0, 9092.0], [603.0, 7735.0], [577.0, 7752.0], [579.0, 12319.0], [581.0, 7743.0], [587.0, 7740.0], [585.0, 7738.0], [599.0, 7736.5], [615.0, 13351.666666666666], [639.0, 9058.0], [637.0, 11190.333333333334], [633.0, 12257.0], [613.0, 9434.0], [609.0, 8404.0], [623.0, 15458.0], [619.0, 7703.0], [617.0, 9077.0], [631.0, 15457.0], [643.0, 15450.0], [671.0, 9026.0], [667.0, 8514.5], [645.0, 12242.0], [641.0, 9056.0], [655.0, 9206.5], [653.0, 9380.0], [649.0, 9043.0], [663.0, 9030.0], [661.0, 9032.0], [699.0, 9339.0], [701.0, 12363.5], [689.0, 9000.0], [691.0, 8999.0], [679.0, 8326.0], [675.0, 9017.0], [673.0, 9017.0], [687.0, 9355.5], [683.0, 9357.0], [681.0, 9185.5], [695.0, 9342.0], [693.0, 7623.0], [707.0, 9328.0], [733.0, 8140.0], [731.0, 13845.0], [729.0, 14419.0], [719.0, 9317.0], [711.0, 9325.0], [709.0, 8467.5], [717.0, 9321.0], [715.0, 9322.0], [713.0, 9323.0], [727.0, 12148.0], [725.0, 8951.0], [723.0, 9311.0], [763.0, 9886.0], [761.0, 8115.0], [767.0, 13926.0], [753.0, 8124.0], [755.0, 8122.0], [765.0, 13830.0], [743.0, 13811.0], [741.0, 7762.0], [737.0, 9293.333333333334], [747.0, 11597.0], [745.0, 8134.0], [759.0, 10286.666666666666], [773.0, 12835.0], [787.0, 13315.0], [799.0, 10964.0], [795.0, 9637.333333333334], [771.0, 9871.0], [769.0, 11562.0], [783.0, 7544.0], [779.0, 7169.0], [777.0, 7545.0], [791.0, 7167.0], [789.0, 12654.5], [829.0, 13307.0], [831.0, 13307.0], [817.0, 7538.0], [821.0, 13212.0], [819.0, 7537.0], [827.0, 9310.0], [825.0, 10959.0], [805.0, 11497.0], [803.0, 10377.0], [801.0, 9272.0], [809.0, 7538.5], [823.0, 11902.0], [859.0, 10952.0], [863.0, 10414.0], [849.0, 9827.666666666666], [861.0, 7529.0], [857.0, 10353.0], [833.0, 10958.0], [839.0, 10232.5], [837.0, 10566.333333333334], [843.0, 10996.0], [841.0, 12596.0], [853.0, 11981.0], [851.0, 10955.0], [889.0, 10976.0], [895.0, 9807.666666666666], [881.0, 8933.5], [891.0, 10975.0], [879.0, 10945.0], [865.0, 10352.0], [867.0, 10990.0], [869.0, 13299.0], [877.0, 7522.0], [875.0, 7523.0], [873.0, 11975.0], [887.0, 10983.0], [903.0, 10334.0], [927.0, 10315.0], [923.0, 10316.0], [921.0, 7123.5], [919.0, 7124.0], [897.0, 10934.0], [901.0, 9593.333333333334], [909.0, 10931.0], [905.0, 10334.0], [935.0, 10903.0], [957.0, 10871.0], [959.0, 8671.5], [955.0, 8673.5], [933.0, 13257.0], [931.0, 10315.0], [929.0, 10315.0], [941.0, 10704.666666666666], [945.0, 10290.0], [985.0, 10235.0], [977.0, 10557.5], [975.0, 10087.666666666666], [961.0, 7420.0], [967.0, 9893.0], [965.0, 8963.0], [971.0, 9190.0], [969.0, 7418.0], [997.0, 10872.0], [1023.0, 10469.666666666666], [1009.0, 10865.0], [1017.0, 7019.0], [1007.0, 10227.0], [993.0, 7034.0], [999.0, 10026.5], [1005.0, 10228.0], [1003.0, 10054.5], [1001.0, 10868.0], [1015.0, 13167.0], [1013.0, 10220.0], [1011.0, 10864.0], [1078.0, 11576.5], [1062.0, 7355.0], [1074.0, 10791.0], [1050.0, 7360.0], [1026.0, 10836.0], [1030.0, 13140.0], [1038.0, 7366.0], [1046.0, 13181.0], [1042.0, 8253.0], [1070.0, 10796.5], [1058.0, 10822.0], [1102.0, 10785.0], [1122.0, 11769.0], [1150.0, 12627.0], [1138.0, 7299.0], [1094.0, 10747.0], [1126.0, 9926.0], [1118.0, 10762.5], [1110.0, 10444.5], [1106.0, 10145.0], [1210.0, 9047.0], [1214.0, 10384.0], [1186.0, 10746.0], [1190.0, 9056.0], [1206.0, 11727.0], [1202.0, 9053.0], [1182.0, 7284.0], [1158.0, 11842.333333333334], [1162.0, 10113.0], [1166.0, 13060.0], [1174.0, 10709.0], [1170.0, 10711.0], [1270.0, 10943.5], [1266.0, 12895.0], [1278.0, 10640.0], [1250.0, 7225.0], [1254.0, 11572.333333333334], [1274.0, 11154.5], [1230.0, 7260.0], [1226.0, 11714.0], [1222.0, 11718.0], [1218.0, 10693.0], [1242.0, 12924.0], [1238.0, 11800.0], [1262.0, 8108.0], [1334.0, 9523.0], [1342.0, 9483.0], [1318.0, 10629.0], [1338.0, 10308.5], [1310.0, 10631.0], [1286.0, 10677.0], [1306.0, 10846.5], [1302.0, 8922.0], [1298.0, 10849.0], [1326.0, 8971.0], [1322.0, 12974.0], [1402.0, 7809.0], [1406.0, 7805.0], [1378.0, 9111.0], [1382.0, 9143.0], [1386.0, 11444.0], [1398.0, 8506.0], [1394.0, 10401.0], [1374.0, 9154.0], [1346.0, 10014.0], [1350.0, 11825.0], [1354.0, 9465.0], [1358.0, 9455.0], [1370.0, 9142.333333333334], [1366.0, 10145.0], [1390.0, 10219.5], [1418.0, 6657.0], [1446.0, 6652.0], [1466.0, 6695.0], [1462.0, 6649.0], [1438.0, 6700.0], [1410.0, 6657.0], [1414.0, 9475.0], [1422.0, 8142.5], [1434.0, 6700.0], [1430.0, 6653.0], [1454.0, 6650.0], [1450.0, 6650.0], [1482.0, 8054.0], [1534.0, 6656.5], [1478.0, 9463.0], [1474.0, 6670.5], [1510.0, 9610.0], [1506.0, 9454.0], [1502.0, 7611.666666666667], [1490.0, 8129.0], [1586.0, 8735.0], [1594.0, 7349.375], [1546.0, 8061.0], [1542.0, 6677.0], [1538.0, 9603.0], [1582.0, 7900.0], [1654.0, 9668.666666666666], [1634.0, 27273.333333333332], [1658.0, 5206.0], [1662.0, 7804.0], [1650.0, 9884.5], [1606.0, 25395.333333333336], [1630.0, 9531.0], [1626.0, 6605.0], [1646.0, 9522.0], [1638.0, 9371.0], [1714.0, 7914.0], [1726.0, 8352.0], [1698.0, 8504.333333333334], [1702.0, 7917.0], [1710.0, 7915.0], [1666.0, 8830.0], [1674.0, 8671.0], [1694.0, 7763.0], [1690.0, 8669.0], [1782.0, 7868.0], [1778.0, 7873.0], [1762.0, 7884.0], [1770.0, 6340.5], [1774.0, 8758.0], [1790.0, 7699.0], [1786.0, 8744.0], [1730.0, 7909.0], [1742.0, 4975.0], [1758.0, 7730.0], [1754.0, 7893.0], [1750.0, 8778.0], [1846.0, 16021.0], [1842.0, 3024.0], [1826.0, 8333.0], [1838.0, 8659.5], [1854.0, 16019.333333333334], [1806.0, 8074.666666666667], [1802.0, 8280.5], [1798.0, 8203.5], [1794.0, 7845.0], [1822.0, 8684.0], [1818.0, 7654.0], [1814.0, 8177.5], [1810.0, 7661.0], [1914.0, 13285.333333333334], [1890.0, 16004.0], [1898.0, 16001.0], [1902.0, 12558.0], [1918.0, 15986.0], [1910.0, 6376.0], [1906.0, 6378.0], [1870.0, 16012.0], [1866.0, 10857.0], [1882.0, 16010.0], [1974.0, 6334.0], [1970.0, 10792.0], [1958.0, 6229.0], [1954.0, 15963.0], [1978.0, 6328.0], [1950.0, 5651.0], [1926.0, 15981.0], [1930.0, 21097.0], [1946.0, 6237.0], [1942.0, 5656.0], [1938.0, 15974.0], [2002.0, 6470.333333333333], [1998.0, 6264.5], [1990.0, 6208.0], [1986.0, 15939.0], [2156.0, 5584.0], [2116.0, 5942.5], [2124.0, 9263.0], [2140.0, 6201.625], [2068.0, 6301.0], [2284.0, 72.0], [2292.0, 5367.0], [2300.0, 2870.0], [2244.0, 5962.0], [2276.0, 6245.0], [2180.0, 6551.0], [2228.0, 5648.166666666666], [2220.0, 5805.5], [2268.0, 6274.0], [2260.0, 7447.125], [2412.0, 2784.0], [2428.0, 4950.0], [2396.0, 3901.5], [2420.0, 4959.0], [2404.0, 4983.0], [2308.0, 2867.0], [2324.0, 5983.0], [2348.0, 5961.5], [2548.0, 6253.0], [2500.0, 5465.0], [2516.0, 6270.5], [2556.0, 8682.0], [2460.0, 6399.0], [2452.0, 2738.0], [2444.0, 6801.0], [2484.0, 4879.0], [2476.0, 2700.0], [2468.0, 4908.0], [2588.0, 7044.0], [2676.0, 3728.0], [2652.0, 6173.0], [2660.0, 3734.0], [2572.0, 7055.333333333333], [2564.0, 8680.0], [2620.0, 3763.0], [2604.0, 3778.0], [2804.0, 4067.0], [2764.0, 3323.0], [2772.0, 3319.0], [2812.0, 5383.5], [2796.0, 2747.0], [2788.0, 5403.0], [2700.0, 6589.0], [2708.0, 4977.5], [2716.0, 5464.5], [2748.0, 3337.0], [2740.0, 3348.0], [2732.0, 3352.0], [2724.0, 3360.0], [2924.0, 5564.0], [2940.0, 5585.0], [2892.0, 5744.5], [2900.0, 2308.0], [2908.0, 5538.0], [2916.0, 6152.0], [2836.0, 4014.0], [2868.0, 2363.0], [2852.0, 2376.0], [2996.0, 3835.6666666666665], [2988.0, 3943.0], [2980.0, 5131.75], [2157.0, 5583.0], [2165.0, 5582.0], [2125.0, 9028.666666666666], [2149.0, 5936.6], [2069.0, 5597.0], [2085.0, 7804.0], [2301.0, 2870.0], [2245.0, 6058.142857142857], [2253.0, 6158.0], [2261.0, 5920.666666666667], [2269.0, 21299.5], [2285.0, 73.0], [2277.0, 6244.0], [2237.0, 5923.6], [2221.0, 5926.5], [2229.0, 13407.25], [2421.0, 4958.0], [2405.0, 2795.0], [2389.0, 2815.0], [2397.0, 2808.0], [2429.0, 3857.5], [2333.0, 2854.0], [2325.0, 5047.0], [2365.0, 3924.5], [2357.0, 2839.0], [2341.0, 2846.0], [2541.0, 7069.333333333333], [2509.0, 3838.0], [2525.0, 3831.5], [2453.0, 4919.0], [2437.0, 3850.5], [2493.0, 3843.0], [2565.0, 3810.0], [2677.0, 3728.0], [2685.0, 6835.166666666666], [2629.0, 3236.3333333333335], [2637.0, 5790.0], [2645.0, 8611.5], [2621.0, 3763.0], [2613.0, 5010.333333333333], [2605.0, 8647.0], [2597.0, 5418.666666666667], [2757.0, 8542.666666666668], [2805.0, 5393.0], [2773.0, 3291.0], [2781.0, 2753.0], [2789.0, 6947.0], [2709.0, 3369.0], [2717.0, 6583.0], [2725.0, 3360.0], [2933.0, 5589.0], [2941.0, 5585.0], [2893.0, 4971.0], [2909.0, 5601.0], [2925.0, 5595.0], [2829.0, 6924.0], [2837.0, 5340.0], [2845.0, 6575.0], [2861.0, 6879.5], [2853.0, 3702.0], [2949.0, 5583.0], [2973.0, 4488.333333333333], [2989.0, 4715.0], [2981.0, 4720.5], [1059.0, 13131.0], [1087.0, 11574.0], [1035.0, 7367.0], [1043.0, 11090.0], [1071.0, 7334.0], [1063.0, 10819.0], [1143.0, 8709.0], [1147.0, 10419.0], [1139.0, 10721.0], [1095.0, 9097.0], [1091.0, 10962.0], [1099.0, 11621.0], [1103.0, 10145.0], [1115.0, 10782.0], [1107.0, 6947.0], [1123.0, 9091.0], [1207.0, 10099.0], [1211.0, 9047.0], [1203.0, 9052.0], [1183.0, 10747.0], [1155.0, 10118.0], [1167.0, 9062.0], [1179.0, 10171.5], [1171.0, 11585.0], [1199.0, 9053.0], [1195.0, 9405.0], [1275.0, 10040.0], [1279.0, 10040.0], [1267.0, 10363.0], [1263.0, 7220.0], [1259.0, 10588.0], [1251.0, 10047.0], [1247.0, 9022.0], [1219.0, 13041.0], [1223.0, 9040.0], [1227.0, 11714.0], [1231.0, 12933.0], [1235.0, 9850.5], [1343.0, 11732.0], [1319.0, 10029.0], [1331.0, 11011.0], [1295.0, 10850.0], [1283.0, 11152.0], [1311.0, 7208.0], [1327.0, 11619.0], [1323.0, 10024.0], [1399.0, 7938.0], [1407.0, 6482.0], [1383.0, 10129.0], [1403.0, 7760.0], [1395.0, 9527.0], [1359.0, 10475.0], [1355.0, 10491.0], [1351.0, 7825.0], [1375.0, 9153.0], [1367.0, 9330.5], [1391.0, 11486.0], [1467.0, 6671.0], [1471.0, 6648.0], [1463.0, 6672.0], [1459.0, 6649.0], [1419.0, 6655.5], [1415.0, 6656.0], [1427.0, 8064.0], [1447.0, 8161.0], [1443.0, 6675.0], [1535.0, 6678.0], [1507.0, 9610.0], [1527.0, 8066.0], [1523.0, 10490.0], [1487.0, 6674.666666666667], [1483.0, 6692.0], [1495.0, 8152.5], [1515.0, 8069.0], [1511.0, 6636.333333333333], [1543.0, 9602.0], [1567.0, 8538.0], [1551.0, 9950.0], [1539.0, 8116.0], [1583.0, 8181.166666666667], [1563.0, 10443.0], [1559.0, 8830.0], [1555.0, 6661.5], [1659.0, 5205.0], [1663.0, 9712.0], [1651.0, 10308.0], [1647.0, 9113.2], [1639.0, 10408.0], [1635.0, 9527.0], [1631.0, 6605.0], [1603.0, 36690.0], [1607.0, 6611.0], [1719.0, 7835.0], [1699.0, 7761.0], [1703.0, 7762.0], [1707.0, 8278.5], [1695.0, 7918.0], [1679.0, 8749.0], [1687.0, 8825.0], [1683.0, 9119.666666666666], [1787.0, 8745.0], [1783.0, 8747.0], [1791.0, 7855.0], [1763.0, 7727.0], [1771.0, 7724.0], [1775.0, 7721.0], [1759.0, 7730.0], [1735.0, 8788.0], [1739.0, 7904.0], [1743.0, 7823.0], [1755.0, 7892.0], [1751.0, 7739.0], [1747.0, 7822.0], [1855.0, 16019.0], [1847.0, 16019.0], [1827.0, 7638.0], [1831.0, 8674.0], [1835.0, 8671.0], [1839.0, 3774.0], [1843.0, 1422.0], [1807.0, 8710.0], [1799.0, 7685.0], [1795.0, 7688.0], [1823.0, 7415.0], [1819.0, 8687.0], [1815.0, 7659.0], [1907.0, 15989.0], [1871.0, 16012.0], [1919.0, 5669.0], [1895.0, 6271.0], [1911.0, 15988.0], [1863.0, 16016.0], [1859.0, 16017.0], [1887.0, 16007.0], [1883.0, 16010.5], [1879.0, 16010.333333333334], [1875.0, 11145.5], [1979.0, 5624.0], [1955.0, 6232.0], [1959.0, 5643.0], [1963.0, 15957.0], [1967.0, 7034.5], [1975.0, 6212.0], [1927.0, 15979.0], [1935.0, 11169.0], [1943.0, 6242.0], [2003.0, 5619.0], [1991.0, 15938.0], [2158.0, 5876.0], [2150.0, 6171.0], [2070.0, 7804.0], [2102.0, 5593.0], [2206.0, 36447.0], [2246.0, 5573.0], [2182.0, 5580.0], [2230.0, 6129.5], [2262.0, 12202.9], [2374.0, 9193.0], [2390.0, 6245.666666666667], [2398.0, 4990.0], [2430.0, 2765.0], [2382.0, 2822.0], [2422.0, 4957.0], [2406.0, 2794.0], [2366.0, 2831.0], [2326.0, 5047.0], [2358.0, 5024.0], [2350.0, 7280.5], [2542.0, 8692.0], [2550.0, 8688.0], [2502.0, 6277.0], [2510.0, 7549.0], [2518.0, 3834.0], [2526.0, 3829.0], [2534.0, 7073.666666666667], [2462.0, 3825.0], [2446.0, 2745.0], [2438.0, 2759.0], [2486.0, 3783.0], [2470.0, 2724.0], [2670.0, 8600.0], [2678.0, 8594.0], [2630.0, 3756.0], [2638.0, 3745.0], [2646.0, 3740.0], [2654.0, 3738.0], [2590.0, 8667.0], [2574.0, 3808.0], [2622.0, 5048.25], [2614.0, 8639.0], [2606.0, 8647.0], [2806.0, 6935.0], [2814.0, 4057.0], [2758.0, 3325.0], [2766.0, 3323.0], [2782.0, 2751.0], [2694.0, 4953.333333333333], [2702.0, 3370.0], [2710.0, 3368.0], [2750.0, 3336.0], [2742.0, 3346.5], [2726.0, 3360.0], [2926.0, 5594.0], [2918.0, 5534.5], [2886.0, 2321.0], [2894.0, 6514.0], [2942.0, 4748.0], [2822.0, 6540.0], [2830.0, 5378.0], [2838.0, 2687.0], [2846.0, 4146.0], [2878.0, 5490.666666666667], [2870.0, 6559.0], [2862.0, 5798.5], [2950.0, 5583.0], [2990.0, 5121.4], [2958.0, 5581.0], [2966.0, 4597.6], [2998.0, 4101.499999999999], [2167.0, 5581.0], [2159.0, 5583.0], [2111.0, 5592.0], [2143.0, 6289.0], [2255.0, 5572.0], [2303.0, 2870.0], [2263.0, 6595.75], [2207.0, 6279.0], [2191.0, 5578.0], [2231.0, 6278.0], [2223.0, 6189.75], [2423.0, 2769.0], [2415.0, 3511.3333333333335], [2431.0, 2765.0], [2383.0, 6133.0], [2391.0, 4998.0], [2399.0, 2805.0], [2407.0, 2791.0], [2335.0, 8348.0], [2311.0, 5050.0], [2367.0, 10937.0], [2343.0, 2845.3333333333335], [2463.0, 4909.0], [2559.0, 7058.0], [2503.0, 3840.0], [2535.0, 8696.0], [2447.0, 4928.0], [2439.0, 4938.0], [2495.0, 6442.666666666667], [2479.0, 4884.0], [2471.0, 3815.5], [2591.0, 8666.0], [2671.0, 6165.0], [2679.0, 8592.0], [2663.0, 3734.0], [2583.0, 7044.666666666667], [2575.0, 3805.0], [2567.0, 8680.0], [2623.0, 3758.0], [2615.0, 3764.0], [2607.0, 8646.0], [2599.0, 3794.5], [2695.0, 3692.0], [2799.0, 5750.0], [2791.0, 6174.0], [2751.0, 3334.0], [2719.0, 4972.0], [2743.0, 3343.0], [2735.0, 4424.333333333333], [2727.0, 3359.0], [2935.0, 5522.0], [2943.0, 5520.0], [2887.0, 4419.5], [2895.0, 6513.0], [2911.0, 5537.5], [2927.0, 5593.0], [2919.0, 5597.0], [2879.0, 2323.0], [2839.0, 2687.0], [2855.0, 4474.5], [2951.0, 9377.666666666666], [2975.0, 4466.0], [2991.0, 4529.0], [2983.0, 3949.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2877.1837637416215, 10407.665712613081]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 235.2, "minX": 1.6828596E12, "maxY": 81256.75, "series": [{"data": [[1.68285996E12, 12143.0], [1.68285966E12, 52887.63333333333], [1.6828596E12, 9905.466666666667], [1.68285978E12, 58166.7], [1.68285972E12, 81256.75], [1.6828599E12, 72556.46666666666], [1.68285984E12, 68299.21666666666], [1.68286002E12, 336.3333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68285996E12, 9542.4], [1.68285966E12, 39328.8], [1.6828596E12, 7770.0], [1.68285978E12, 38446.8], [1.68285972E12, 58758.0], [1.6828599E12, 53650.8], [1.68285984E12, 48325.2], [1.68286002E12, 235.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68286002E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3793.355409425395, "minX": 1.6828596E12, "maxY": 67977.17857142857, "series": [{"data": [[1.68285996E12, 12648.973591549278], [1.68285966E12, 5279.447501049984], [1.6828596E12, 8134.5113513513525], [1.68285978E12, 15566.559012875565], [1.68285972E12, 13772.516275120282], [1.6828599E12, 3793.355409425395], [1.68285984E12, 13312.247838118263], [1.68286002E12, 67977.17857142857]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68286002E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3793.3388132143473, "minX": 1.6828596E12, "maxY": 67977.17857142857, "series": [{"data": [[1.68285996E12, 12648.962147887327], [1.68285966E12, 4863.93301133979], [1.6828596E12, 8134.3221621621615], [1.68285978E12, 14000.3935622318], [1.68285972E12, 13124.212001132177], [1.6828599E12, 3793.3388132143473], [1.68285984E12, 13055.682808716689], [1.68286002E12, 67977.17857142857]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68286002E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.14285714285714285, "minX": 1.6828596E12, "maxY": 11474.131545064358, "series": [{"data": [[1.68285996E12, 0.25264084507042284], [1.68285966E12, 65.00230995380092], [1.6828596E12, 7.425945945945957], [1.68285978E12, 11474.131545064358], [1.68285972E12, 5647.761817152565], [1.6828599E12, 171.92062000939438], [1.68285984E12, 3868.2675544794206], [1.68286002E12, 0.14285714285714285]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68286002E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.6828596E12, "maxY": 205000.0, "series": [{"data": [[1.68285996E12, 65582.0], [1.68285966E12, 43775.0], [1.6828596E12, 19030.0], [1.68285978E12, 154522.0], [1.68285972E12, 101014.0], [1.6828599E12, 112590.0], [1.68285984E12, 205000.0], [1.68286002E12, 74325.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68285996E12, 15524.0], [1.68285966E12, 7745.799999999999], [1.6828596E12, 13599.199999999999], [1.68285978E12, 15832.4], [1.68285972E12, 57781.40000000001], [1.6828599E12, 8600.4], [1.68285984E12, 40966.0], [1.68286002E12, 73383.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68285996E12, 60702.26], [1.68285966E12, 34260.23], [1.6828596E12, 18304.36], [1.68285978E12, 137839.88], [1.68285972E12, 100104.04], [1.6828599E12, 20783.12], [1.68285984E12, 162595.46], [1.68286002E12, 74325.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68285996E12, 37771.34999999986], [1.68285966E12, 9869.0], [1.6828596E12, 16032.9], [1.68285978E12, 129995.3], [1.68285972E12, 72175.0], [1.6828599E12, 10977.199999999999], [1.68285984E12, 65873.0], [1.68286002E12, 74184.15]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68285996E12, 6354.0], [1.68285966E12, 37.0], [1.6828596E12, 84.0], [1.68285978E12, 8.0], [1.68285972E12, 7.0], [1.6828599E12, 15.0], [1.68285984E12, 5.0], [1.68286002E12, 63918.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68285996E12, 10111.5], [1.68285966E12, 4174.5], [1.6828596E12, 8094.0], [1.68285978E12, 147.0], [1.68285972E12, 5481.0], [1.6828599E12, 2023.0], [1.68285984E12, 2058.0], [1.68286002E12, 67101.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68286002E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 46.0, "minX": 1.0, "maxY": 163625.0, "series": [{"data": [[2.0, 43676.5], [3.0, 7125.0], [4.0, 21962.0], [5.0, 3764.0], [6.0, 67101.0], [7.0, 19884.0], [8.0, 5239.0], [9.0, 7711.0], [10.0, 4474.5], [11.0, 2825.0], [12.0, 31258.5], [13.0, 116248.0], [14.0, 8715.0], [15.0, 2137.0], [16.0, 1194.0], [18.0, 2169.5], [20.0, 89088.5], [21.0, 6742.5], [22.0, 5948.5], [23.0, 3079.0], [24.0, 1361.0], [29.0, 1561.0], [30.0, 7145.5], [31.0, 163625.0], [32.0, 4981.0], [33.0, 8826.0], [35.0, 4903.0], [34.0, 1254.0], [36.0, 5469.5], [38.0, 10777.0], [40.0, 10588.0], [43.0, 1742.0], [45.0, 7118.0], [44.0, 2358.0], [49.0, 2685.0], [48.0, 3481.0], [51.0, 1826.0], [52.0, 9009.5], [53.0, 75.0], [54.0, 2271.0], [55.0, 76030.5], [60.0, 62.0], [61.0, 9520.0], [62.0, 1077.5], [67.0, 6658.0], [66.0, 506.5], [65.0, 1482.0], [75.0, 2885.0], [72.0, 63.5], [74.0, 55.0], [76.0, 53.5], [79.0, 4452.0], [77.0, 3342.5], [78.0, 2105.0], [80.0, 65.0], [81.0, 1906.0], [82.0, 55024.0], [86.0, 2396.0], [85.0, 6827.5], [87.0, 7181.0], [90.0, 3224.5], [89.0, 6879.5], [91.0, 1132.0], [88.0, 55.0], [95.0, 2377.0], [92.0, 18626.0], [98.0, 1628.0], [96.0, 2302.5], [99.0, 75.0], [97.0, 1582.0], [102.0, 2071.0], [101.0, 2146.0], [100.0, 57.0], [103.0, 1173.0], [104.0, 76.0], [106.0, 2769.0], [107.0, 6165.0], [105.0, 46.0], [111.0, 2237.0], [109.0, 1054.0], [108.0, 80.0], [113.0, 2876.0], [119.0, 78.0], [118.0, 1581.0], [121.0, 4429.5], [120.0, 7480.5], [123.0, 5520.0], [125.0, 1914.0], [124.0, 7468.5], [131.0, 4002.0], [133.0, 5381.0], [139.0, 5321.0], [145.0, 5358.0], [144.0, 7329.0], [150.0, 7876.5], [158.0, 3457.0], [159.0, 61.0], [152.0, 104.0], [160.0, 8106.0], [161.0, 1685.0], [166.0, 1096.5], [171.0, 2122.0], [175.0, 2747.0], [172.0, 1651.5], [178.0, 2083.5], [182.0, 1269.0], [191.0, 4299.0], [184.0, 9389.0], [187.0, 1078.0], [197.0, 81.0], [196.0, 557.5], [202.0, 2064.5], [205.0, 68887.0], [201.0, 4924.0], [200.0, 83.0], [204.0, 4117.5], [207.0, 55.0], [215.0, 59.0], [210.0, 129.0], [213.0, 117.0], [208.0, 70.5], [216.0, 4264.5], [221.0, 4844.0], [223.0, 141.0], [228.0, 3170.5], [237.0, 1126.0], [247.0, 6075.0], [241.0, 97.0], [254.0, 12292.0], [250.0, 6698.5], [267.0, 6712.5], [270.0, 7317.0], [257.0, 2051.0], [263.0, 87.0], [282.0, 5670.0], [284.0, 8418.0], [275.0, 71.0], [288.0, 12787.0], [289.0, 5060.0], [297.0, 5324.0], [293.0, 4551.0], [300.0, 883.5], [304.0, 53.0], [310.0, 1371.0], [318.0, 3230.0], [335.0, 9059.0], [345.0, 7986.0], [398.0, 101.5], [395.0, 6118.0], [428.0, 7338.0], [439.0, 6239.0], [508.0, 5024.0], [562.0, 10701.5], [607.0, 7406.0], [758.0, 7574.5], [1.0, 77847.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 16316.0], [159.0, 44609.0], [172.0, 27064.0], [3.0, 8968.0], [12.0, 23695.0], [197.0, 15968.0], [213.0, 133300.0], [52.0, 17045.0], [215.0, 13963.0], [216.0, 31318.0], [55.0, 76018.0], [247.0, 28312.0], [60.0, 90184.5], [15.0, 133414.0], [4.0, 133287.5], [21.0, 29387.0], [88.0, 119150.0], [22.0, 53106.0], [106.0, 20739.5], [119.0, 45007.0], [125.0, 20344.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 758.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 163625.0, "series": [{"data": [[2.0, 43676.5], [3.0, 7125.0], [4.0, 21962.0], [5.0, 3764.0], [6.0, 67101.0], [7.0, 19884.0], [8.0, 5239.0], [9.0, 7711.0], [10.0, 4474.5], [11.0, 2825.0], [12.0, 31258.5], [13.0, 116247.5], [14.0, 8715.0], [15.0, 2137.0], [16.0, 1185.0], [18.0, 2169.5], [20.0, 89088.5], [21.0, 6742.5], [22.0, 5948.5], [23.0, 3079.0], [24.0, 1361.0], [29.0, 1561.0], [30.0, 7145.5], [31.0, 163625.0], [32.0, 4981.0], [33.0, 8826.0], [35.0, 4903.0], [34.0, 1254.0], [36.0, 5469.5], [38.0, 10777.0], [40.0, 10588.0], [43.0, 1742.0], [45.0, 7118.0], [44.0, 2358.0], [49.0, 2685.0], [48.0, 3481.0], [51.0, 1826.0], [52.0, 9009.5], [53.0, 74.5], [54.0, 2271.0], [55.0, 76030.5], [60.0, 62.0], [61.0, 9520.0], [62.0, 1077.5], [67.0, 6658.0], [66.0, 506.5], [65.0, 1482.0], [75.0, 2885.0], [72.0, 63.5], [74.0, 55.0], [76.0, 53.5], [79.0, 4452.0], [77.0, 3342.5], [78.0, 2105.0], [80.0, 65.0], [81.0, 1906.0], [82.0, 55024.0], [86.0, 2396.0], [85.0, 6827.5], [87.0, 7181.0], [90.0, 3224.5], [89.0, 6879.5], [91.0, 1132.0], [88.0, 55.0], [95.0, 2377.0], [92.0, 18626.0], [98.0, 1628.0], [96.0, 2302.5], [99.0, 75.0], [97.0, 1582.0], [102.0, 2071.0], [101.0, 2146.0], [100.0, 57.0], [103.0, 1173.0], [104.0, 76.0], [106.0, 2769.0], [107.0, 6165.0], [105.0, 46.0], [111.0, 2237.0], [109.0, 1054.0], [108.0, 80.0], [113.0, 2876.0], [119.0, 78.0], [118.0, 1581.0], [121.0, 4429.5], [120.0, 7480.5], [123.0, 5520.0], [125.0, 1914.0], [124.0, 7468.5], [131.0, 4001.0], [133.0, 5381.0], [139.0, 5321.0], [145.0, 5358.0], [144.0, 7329.0], [150.0, 7876.5], [158.0, 3457.0], [159.0, 61.0], [152.0, 104.0], [160.0, 8106.0], [161.0, 1685.0], [166.0, 1096.5], [171.0, 2122.0], [175.0, 2747.0], [172.0, 1651.5], [178.0, 2083.5], [182.0, 1269.0], [191.0, 4299.0], [184.0, 9389.0], [187.0, 1078.0], [197.0, 81.0], [196.0, 557.5], [202.0, 2064.5], [205.0, 68887.0], [201.0, 4924.0], [200.0, 83.0], [204.0, 4117.5], [207.0, 55.0], [215.0, 59.0], [210.0, 129.0], [213.0, 117.0], [208.0, 70.5], [216.0, 4264.5], [221.0, 4844.0], [223.0, 141.0], [228.0, 3170.5], [237.0, 1126.0], [247.0, 6075.0], [241.0, 97.0], [254.0, 12292.0], [250.0, 6698.5], [267.0, 6712.5], [270.0, 7317.0], [257.0, 2051.0], [263.0, 87.0], [282.0, 5670.0], [284.0, 8418.0], [275.0, 71.0], [288.0, 12786.5], [289.0, 5060.0], [297.0, 5324.0], [293.0, 4551.0], [300.0, 883.5], [304.0, 53.0], [310.0, 1371.0], [318.0, 3230.0], [335.0, 9059.0], [345.0, 7986.0], [398.0, 101.5], [395.0, 6118.0], [428.0, 7338.0], [439.0, 6239.0], [508.0, 5024.0], [562.0, 10701.5], [607.0, 7406.0], [758.0, 7574.5], [1.0, 77847.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 0.0], [159.0, 0.0], [172.0, 0.0], [3.0, 0.0], [12.0, 0.0], [197.0, 0.0], [213.0, 0.0], [52.0, 0.0], [215.0, 0.0], [216.0, 0.0], [55.0, 0.0], [247.0, 0.0], [60.0, 0.0], [15.0, 0.0], [4.0, 0.0], [21.0, 0.0], [88.0, 0.0], [22.0, 0.0], [106.0, 0.0], [119.0, 0.0], [125.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 758.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.65, "minX": 1.6828596E12, "maxY": 119.36666666666666, "series": [{"data": [[1.68285996E12, 2.65], [1.68285966E12, 113.33333333333333], [1.6828596E12, 15.416666666666666], [1.68285978E12, 80.0], [1.68285972E12, 96.66666666666667], [1.6828599E12, 119.36666666666666], [1.68285984E12, 85.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68285996E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.6828596E12, "maxY": 116.58333333333333, "series": [{"data": [[1.68285996E12, 18.933333333333334], [1.68285966E12, 78.03333333333333], [1.6828596E12, 15.416666666666666], [1.68285978E12, 76.28333333333333], [1.68285972E12, 116.58333333333333], [1.6828599E12, 106.45], [1.68285984E12, 95.88333333333334], [1.68286002E12, 0.4666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68285966E12, 1.3333333333333333], [1.68285978E12, 1.3833333333333333], [1.68285972E12, 1.1833333333333333], [1.68285984E12, 0.48333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68286002E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.6828596E12, "maxY": 116.58333333333333, "series": [{"data": [[1.68285996E12, 18.933333333333334], [1.68285966E12, 78.03333333333333], [1.6828596E12, 15.416666666666666], [1.68285978E12, 76.28333333333333], [1.68285972E12, 116.58333333333333], [1.6828599E12, 106.45], [1.68285984E12, 95.88333333333334], [1.68286002E12, 0.4666666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68285966E12, 1.3333333333333333], [1.68285978E12, 1.3833333333333333], [1.68285972E12, 1.1833333333333333], [1.68285984E12, 0.48333333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68286002E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.6828596E12, "maxY": 116.58333333333333, "series": [{"data": [[1.68285996E12, 18.933333333333334], [1.68285966E12, 78.03333333333333], [1.6828596E12, 15.416666666666666], [1.68285978E12, 76.28333333333333], [1.68285972E12, 116.58333333333333], [1.6828599E12, 106.45], [1.68285984E12, 95.88333333333334], [1.68286002E12, 0.4666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68285966E12, 1.3333333333333333], [1.68285978E12, 1.3833333333333333], [1.68285972E12, 1.1833333333333333], [1.68285984E12, 0.48333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68286002E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

