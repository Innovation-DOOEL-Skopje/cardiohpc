/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 139191.0, "series": [{"data": [[0.0, 9.0], [0.1, 19.0], [0.2, 21.0], [0.3, 22.0], [0.4, 26.0], [0.5, 27.0], [0.6, 28.0], [0.7, 29.0], [0.8, 30.0], [0.9, 30.0], [1.0, 30.0], [1.1, 30.0], [1.2, 31.0], [1.3, 31.0], [1.4, 32.0], [1.5, 32.0], [1.6, 32.0], [1.7, 33.0], [1.8, 33.0], [1.9, 33.0], [2.0, 33.0], [2.1, 34.0], [2.2, 34.0], [2.3, 35.0], [2.4, 35.0], [2.5, 35.0], [2.6, 36.0], [2.7, 36.0], [2.8, 37.0], [2.9, 37.0], [3.0, 38.0], [3.1, 38.0], [3.2, 39.0], [3.3, 39.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 41.0], [3.8, 41.0], [3.9, 42.0], [4.0, 43.0], [4.1, 44.0], [4.2, 44.0], [4.3, 45.0], [4.4, 45.0], [4.5, 46.0], [4.6, 47.0], [4.7, 47.0], [4.8, 49.0], [4.9, 49.0], [5.0, 49.0], [5.1, 50.0], [5.2, 50.0], [5.3, 51.0], [5.4, 51.0], [5.5, 52.0], [5.6, 52.0], [5.7, 53.0], [5.8, 53.0], [5.9, 54.0], [6.0, 54.0], [6.1, 55.0], [6.2, 56.0], [6.3, 57.0], [6.4, 58.0], [6.5, 58.0], [6.6, 59.0], [6.7, 59.0], [6.8, 59.0], [6.9, 60.0], [7.0, 60.0], [7.1, 62.0], [7.2, 63.0], [7.3, 64.0], [7.4, 65.0], [7.5, 65.0], [7.6, 66.0], [7.7, 66.0], [7.8, 67.0], [7.9, 68.0], [8.0, 69.0], [8.1, 70.0], [8.2, 73.0], [8.3, 74.0], [8.4, 79.0], [8.5, 83.0], [8.6, 87.0], [8.7, 88.0], [8.8, 89.0], [8.9, 93.0], [9.0, 103.0], [9.1, 744.0], [9.2, 1038.0], [9.3, 1046.0], [9.4, 1053.0], [9.5, 1058.0], [9.6, 1060.0], [9.7, 1064.0], [9.8, 1066.0], [9.9, 1068.0], [10.0, 1071.0], [10.1, 1073.0], [10.2, 1074.0], [10.3, 1075.0], [10.4, 1078.0], [10.5, 1081.0], [10.6, 1084.0], [10.7, 1088.0], [10.8, 1090.0], [10.9, 1091.0], [11.0, 1093.0], [11.1, 1094.0], [11.2, 1095.0], [11.3, 1097.0], [11.4, 1098.0], [11.5, 1099.0], [11.6, 1101.0], [11.7, 1102.0], [11.8, 1103.0], [11.9, 1105.0], [12.0, 1106.0], [12.1, 1108.0], [12.2, 1110.0], [12.3, 1111.0], [12.4, 1112.0], [12.5, 1115.0], [12.6, 1116.0], [12.7, 1117.0], [12.8, 1118.0], [12.9, 1120.0], [13.0, 1122.0], [13.1, 1125.0], [13.2, 1127.0], [13.3, 1129.0], [13.4, 1132.0], [13.5, 1137.0], [13.6, 1141.0], [13.7, 1143.0], [13.8, 1146.0], [13.9, 1149.0], [14.0, 1153.0], [14.1, 1161.0], [14.2, 1178.0], [14.3, 1190.0], [14.4, 1207.0], [14.5, 1210.0], [14.6, 1215.0], [14.7, 1235.0], [14.8, 1295.0], [14.9, 1308.0], [15.0, 1327.0], [15.1, 1344.0], [15.2, 1346.0], [15.3, 1351.0], [15.4, 1368.0], [15.5, 1377.0], [15.6, 1383.0], [15.7, 1404.0], [15.8, 1420.0], [15.9, 1426.0], [16.0, 1458.0], [16.1, 1466.0], [16.2, 1474.0], [16.3, 1520.0], [16.4, 1529.0], [16.5, 1542.0], [16.6, 1552.0], [16.7, 1596.0], [16.8, 1604.0], [16.9, 1618.0], [17.0, 1626.0], [17.1, 1640.0], [17.2, 1657.0], [17.3, 1675.0], [17.4, 1708.0], [17.5, 1737.0], [17.6, 1754.0], [17.7, 1762.0], [17.8, 1786.0], [17.9, 1794.0], [18.0, 1805.0], [18.1, 1810.0], [18.2, 1816.0], [18.3, 1819.0], [18.4, 1826.0], [18.5, 1832.0], [18.6, 1835.0], [18.7, 1839.0], [18.8, 1844.0], [18.9, 1856.0], [19.0, 1859.0], [19.1, 1862.0], [19.2, 1868.0], [19.3, 1884.0], [19.4, 1893.0], [19.5, 1900.0], [19.6, 1908.0], [19.7, 1918.0], [19.8, 1924.0], [19.9, 1929.0], [20.0, 1936.0], [20.1, 1946.0], [20.2, 1962.0], [20.3, 1975.0], [20.4, 1987.0], [20.5, 1998.0], [20.6, 2014.0], [20.7, 2056.0], [20.8, 2069.0], [20.9, 2077.0], [21.0, 2084.0], [21.1, 2100.0], [21.2, 2107.0], [21.3, 2120.0], [21.4, 2128.0], [21.5, 2135.0], [21.6, 2141.0], [21.7, 2150.0], [21.8, 2161.0], [21.9, 2169.0], [22.0, 2172.0], [22.1, 2179.0], [22.2, 2185.0], [22.3, 2186.0], [22.4, 2190.0], [22.5, 2201.0], [22.6, 2208.0], [22.7, 2212.0], [22.8, 2231.0], [22.9, 2235.0], [23.0, 2268.0], [23.1, 2340.0], [23.2, 2392.0], [23.3, 2399.0], [23.4, 2405.0], [23.5, 2410.0], [23.6, 2419.0], [23.7, 2419.0], [23.8, 2425.0], [23.9, 2442.0], [24.0, 2461.0], [24.1, 2475.0], [24.2, 2489.0], [24.3, 2498.0], [24.4, 2503.0], [24.5, 2511.0], [24.6, 2516.0], [24.7, 2520.0], [24.8, 2531.0], [24.9, 2538.0], [25.0, 2551.0], [25.1, 2559.0], [25.2, 2568.0], [25.3, 2574.0], [25.4, 2576.0], [25.5, 2579.0], [25.6, 2589.0], [25.7, 2598.0], [25.8, 2604.0], [25.9, 2612.0], [26.0, 2614.0], [26.1, 2617.0], [26.2, 2623.0], [26.3, 2666.0], [26.4, 2694.0], [26.5, 2701.0], [26.6, 2719.0], [26.7, 2737.0], [26.8, 2749.0], [26.9, 2757.0], [27.0, 2769.0], [27.1, 2780.0], [27.2, 2790.0], [27.3, 2803.0], [27.4, 2810.0], [27.5, 2813.0], [27.6, 2816.0], [27.7, 2825.0], [27.8, 2832.0], [27.9, 2840.0], [28.0, 2848.0], [28.1, 2864.0], [28.2, 2878.0], [28.3, 2901.0], [28.4, 2912.0], [28.5, 2928.0], [28.6, 2936.0], [28.7, 2943.0], [28.8, 2952.0], [28.9, 2959.0], [29.0, 2974.0], [29.1, 2980.0], [29.2, 2995.0], [29.3, 3004.0], [29.4, 3018.0], [29.5, 3023.0], [29.6, 3036.0], [29.7, 3041.0], [29.8, 3045.0], [29.9, 3059.0], [30.0, 3067.0], [30.1, 3070.0], [30.2, 3076.0], [30.3, 3081.0], [30.4, 3085.0], [30.5, 3089.0], [30.6, 3092.0], [30.7, 3097.0], [30.8, 3102.0], [30.9, 3115.0], [31.0, 3127.0], [31.1, 3140.0], [31.2, 3173.0], [31.3, 3178.0], [31.4, 3187.0], [31.5, 3195.0], [31.6, 3208.0], [31.7, 3226.0], [31.8, 3248.0], [31.9, 3262.0], [32.0, 3269.0], [32.1, 3279.0], [32.2, 3288.0], [32.3, 3334.0], [32.4, 3360.0], [32.5, 3368.0], [32.6, 3389.0], [32.7, 3404.0], [32.8, 3415.0], [32.9, 3425.0], [33.0, 3429.0], [33.1, 3433.0], [33.2, 3438.0], [33.3, 3448.0], [33.4, 3456.0], [33.5, 3468.0], [33.6, 3475.0], [33.7, 3484.0], [33.8, 3494.0], [33.9, 3502.0], [34.0, 3507.0], [34.1, 3522.0], [34.2, 3538.0], [34.3, 3559.0], [34.4, 3577.0], [34.5, 3586.0], [34.6, 3602.0], [34.7, 3612.0], [34.8, 3623.0], [34.9, 3637.0], [35.0, 3641.0], [35.1, 3648.0], [35.2, 3665.0], [35.3, 3669.0], [35.4, 3679.0], [35.5, 3694.0], [35.6, 3705.0], [35.7, 3709.0], [35.8, 3714.0], [35.9, 3724.0], [36.0, 3737.0], [36.1, 3746.0], [36.2, 3773.0], [36.3, 3787.0], [36.4, 3809.0], [36.5, 3832.0], [36.6, 3851.0], [36.7, 3864.0], [36.8, 3873.0], [36.9, 3881.0], [37.0, 3900.0], [37.1, 3908.0], [37.2, 3913.0], [37.3, 3918.0], [37.4, 3923.0], [37.5, 3926.0], [37.6, 3938.0], [37.7, 3946.0], [37.8, 3951.0], [37.9, 3954.0], [38.0, 3969.0], [38.1, 3983.0], [38.2, 3991.0], [38.3, 3998.0], [38.4, 4005.0], [38.5, 4009.0], [38.6, 4021.0], [38.7, 4026.0], [38.8, 4030.0], [38.9, 4041.0], [39.0, 4050.0], [39.1, 4066.0], [39.2, 4076.0], [39.3, 4086.0], [39.4, 4097.0], [39.5, 4108.0], [39.6, 4118.0], [39.7, 4137.0], [39.8, 4166.0], [39.9, 4188.0], [40.0, 4205.0], [40.1, 4240.0], [40.2, 4250.0], [40.3, 4283.0], [40.4, 4337.0], [40.5, 4381.0], [40.6, 4390.0], [40.7, 4415.0], [40.8, 4441.0], [40.9, 4458.0], [41.0, 4510.0], [41.1, 4526.0], [41.2, 4542.0], [41.3, 4571.0], [41.4, 4595.0], [41.5, 4601.0], [41.6, 4608.0], [41.7, 4627.0], [41.8, 4666.0], [41.9, 4682.0], [42.0, 4712.0], [42.1, 4746.0], [42.2, 4766.0], [42.3, 4783.0], [42.4, 4814.0], [42.5, 4848.0], [42.6, 4868.0], [42.7, 4874.0], [42.8, 4882.0], [42.9, 4890.0], [43.0, 4897.0], [43.1, 4901.0], [43.2, 4929.0], [43.3, 4943.0], [43.4, 4959.0], [43.5, 4974.0], [43.6, 4984.0], [43.7, 4999.0], [43.8, 5006.0], [43.9, 5021.0], [44.0, 5030.0], [44.1, 5065.0], [44.2, 5085.0], [44.3, 5090.0], [44.4, 5097.0], [44.5, 5115.0], [44.6, 5140.0], [44.7, 5179.0], [44.8, 5219.0], [44.9, 5231.0], [45.0, 5241.0], [45.1, 5246.0], [45.2, 5255.0], [45.3, 5266.0], [45.4, 5270.0], [45.5, 5280.0], [45.6, 5297.0], [45.7, 5306.0], [45.8, 5325.0], [45.9, 5349.0], [46.0, 5371.0], [46.1, 5407.0], [46.2, 5440.0], [46.3, 5449.0], [46.4, 5457.0], [46.5, 5465.0], [46.6, 5497.0], [46.7, 5504.0], [46.8, 5525.0], [46.9, 5542.0], [47.0, 5582.0], [47.1, 5597.0], [47.2, 5647.0], [47.3, 5670.0], [47.4, 5713.0], [47.5, 5722.0], [47.6, 5741.0], [47.7, 5770.0], [47.8, 5796.0], [47.9, 5810.0], [48.0, 5835.0], [48.1, 5858.0], [48.2, 5895.0], [48.3, 5909.0], [48.4, 5932.0], [48.5, 5946.0], [48.6, 5964.0], [48.7, 5972.0], [48.8, 5978.0], [48.9, 6000.0], [49.0, 6012.0], [49.1, 6032.0], [49.2, 6055.0], [49.3, 6062.0], [49.4, 6078.0], [49.5, 6082.0], [49.6, 6099.0], [49.7, 6107.0], [49.8, 6116.0], [49.9, 6118.0], [50.0, 6120.0], [50.1, 6132.0], [50.2, 6146.0], [50.3, 6156.0], [50.4, 6157.0], [50.5, 6187.0], [50.6, 6213.0], [50.7, 6234.0], [50.8, 6245.0], [50.9, 6261.0], [51.0, 6282.0], [51.1, 6295.0], [51.2, 6309.0], [51.3, 6317.0], [51.4, 6329.0], [51.5, 6338.0], [51.6, 6351.0], [51.7, 6371.0], [51.8, 6388.0], [51.9, 6410.0], [52.0, 6427.0], [52.1, 6434.0], [52.2, 6452.0], [52.3, 6480.0], [52.4, 6510.0], [52.5, 6544.0], [52.6, 6556.0], [52.7, 6586.0], [52.8, 6601.0], [52.9, 6621.0], [53.0, 6649.0], [53.1, 6673.0], [53.2, 6688.0], [53.3, 6697.0], [53.4, 6702.0], [53.5, 6711.0], [53.6, 6744.0], [53.7, 6824.0], [53.8, 6847.0], [53.9, 6871.0], [54.0, 6875.0], [54.1, 6900.0], [54.2, 6918.0], [54.3, 6931.0], [54.4, 6947.0], [54.5, 6968.0], [54.6, 6980.0], [54.7, 6990.0], [54.8, 7015.0], [54.9, 7037.0], [55.0, 7049.0], [55.1, 7063.0], [55.2, 7074.0], [55.3, 7081.0], [55.4, 7089.0], [55.5, 7104.0], [55.6, 7118.0], [55.7, 7125.0], [55.8, 7140.0], [55.9, 7149.0], [56.0, 7156.0], [56.1, 7181.0], [56.2, 7213.0], [56.3, 7293.0], [56.4, 7307.0], [56.5, 7339.0], [56.6, 7351.0], [56.7, 7390.0], [56.8, 7400.0], [56.9, 7422.0], [57.0, 7441.0], [57.1, 7464.0], [57.2, 7476.0], [57.3, 7513.0], [57.4, 7582.0], [57.5, 7618.0], [57.6, 7628.0], [57.7, 7645.0], [57.8, 7651.0], [57.9, 7664.0], [58.0, 7685.0], [58.1, 7708.0], [58.2, 7725.0], [58.3, 7745.0], [58.4, 7768.0], [58.5, 7801.0], [58.6, 7815.0], [58.7, 7833.0], [58.8, 7873.0], [58.9, 7902.0], [59.0, 7924.0], [59.1, 7940.0], [59.2, 7958.0], [59.3, 7974.0], [59.4, 7989.0], [59.5, 8000.0], [59.6, 8007.0], [59.7, 8040.0], [59.8, 8059.0], [59.9, 8069.0], [60.0, 8083.0], [60.1, 8097.0], [60.2, 8107.0], [60.3, 8123.0], [60.4, 8134.0], [60.5, 8144.0], [60.6, 8177.0], [60.7, 8190.0], [60.8, 8204.0], [60.9, 8219.0], [61.0, 8233.0], [61.1, 8245.0], [61.2, 8250.0], [61.3, 8276.0], [61.4, 8285.0], [61.5, 8291.0], [61.6, 8291.0], [61.7, 8292.0], [61.8, 8312.0], [61.9, 8341.0], [62.0, 8359.0], [62.1, 8362.0], [62.2, 8377.0], [62.3, 8384.0], [62.4, 8390.0], [62.5, 8401.0], [62.6, 8413.0], [62.7, 8447.0], [62.8, 8477.0], [62.9, 8493.0], [63.0, 8512.0], [63.1, 8522.0], [63.2, 8545.0], [63.3, 8563.0], [63.4, 8568.0], [63.5, 8574.0], [63.6, 8589.0], [63.7, 8598.0], [63.8, 8606.0], [63.9, 8619.0], [64.0, 8646.0], [64.1, 8682.0], [64.2, 8696.0], [64.3, 8714.0], [64.4, 8735.0], [64.5, 8750.0], [64.6, 8770.0], [64.7, 8826.0], [64.8, 8854.0], [64.9, 8868.0], [65.0, 8892.0], [65.1, 8902.0], [65.2, 8944.0], [65.3, 8961.0], [65.4, 8988.0], [65.5, 9010.0], [65.6, 9019.0], [65.7, 9033.0], [65.8, 9046.0], [65.9, 9055.0], [66.0, 9067.0], [66.1, 9084.0], [66.2, 9093.0], [66.3, 9107.0], [66.4, 9126.0], [66.5, 9150.0], [66.6, 9165.0], [66.7, 9181.0], [66.8, 9188.0], [66.9, 9200.0], [67.0, 9209.0], [67.1, 9265.0], [67.2, 9328.0], [67.3, 9340.0], [67.4, 9376.0], [67.5, 9405.0], [67.6, 9418.0], [67.7, 9440.0], [67.8, 9458.0], [67.9, 9476.0], [68.0, 9507.0], [68.1, 9520.0], [68.2, 9541.0], [68.3, 9619.0], [68.4, 9659.0], [68.5, 9721.0], [68.6, 9742.0], [68.7, 9760.0], [68.8, 9777.0], [68.9, 9810.0], [69.0, 9841.0], [69.1, 9860.0], [69.2, 9865.0], [69.3, 9904.0], [69.4, 9945.0], [69.5, 9975.0], [69.6, 9988.0], [69.7, 10015.0], [69.8, 10034.0], [69.9, 10051.0], [70.0, 10075.0], [70.1, 10085.0], [70.2, 10109.0], [70.3, 10135.0], [70.4, 10158.0], [70.5, 10181.0], [70.6, 10205.0], [70.7, 10258.0], [70.8, 10314.0], [70.9, 10336.0], [71.0, 10348.0], [71.1, 10388.0], [71.2, 10392.0], [71.3, 10430.0], [71.4, 10449.0], [71.5, 10469.0], [71.6, 10472.0], [71.7, 10478.0], [71.8, 10500.0], [71.9, 10514.0], [72.0, 10537.0], [72.1, 10622.0], [72.2, 10628.0], [72.3, 10633.0], [72.4, 10648.0], [72.5, 10806.0], [72.6, 10853.0], [72.7, 10859.0], [72.8, 10882.0], [72.9, 10897.0], [73.0, 10912.0], [73.1, 10921.0], [73.2, 10933.0], [73.3, 10942.0], [73.4, 10951.0], [73.5, 10970.0], [73.6, 10977.0], [73.7, 10982.0], [73.8, 11036.0], [73.9, 11052.0], [74.0, 11091.0], [74.1, 11141.0], [74.2, 11202.0], [74.3, 11215.0], [74.4, 11231.0], [74.5, 11256.0], [74.6, 11291.0], [74.7, 11309.0], [74.8, 11320.0], [74.9, 11322.0], [75.0, 11325.0], [75.1, 11339.0], [75.2, 11365.0], [75.3, 11429.0], [75.4, 11527.0], [75.5, 11555.0], [75.6, 11584.0], [75.7, 11639.0], [75.8, 11726.0], [75.9, 11737.0], [76.0, 11770.0], [76.1, 11805.0], [76.2, 11813.0], [76.3, 11880.0], [76.4, 11901.0], [76.5, 11908.0], [76.6, 11932.0], [76.7, 11953.0], [76.8, 11976.0], [76.9, 12002.0], [77.0, 12020.0], [77.1, 12031.0], [77.2, 12041.0], [77.3, 12045.0], [77.4, 12058.0], [77.5, 12069.0], [77.6, 12079.0], [77.7, 12081.0], [77.8, 12097.0], [77.9, 12109.0], [78.0, 12125.0], [78.1, 12142.0], [78.2, 12180.0], [78.3, 12201.0], [78.4, 12219.0], [78.5, 12229.0], [78.6, 12250.0], [78.7, 12289.0], [78.8, 12294.0], [78.9, 12328.0], [79.0, 12486.0], [79.1, 12595.0], [79.2, 12677.0], [79.3, 12794.0], [79.4, 12982.0], [79.5, 13039.0], [79.6, 13042.0], [79.7, 13073.0], [79.8, 13079.0], [79.9, 13089.0], [80.0, 13146.0], [80.1, 13169.0], [80.2, 13197.0], [80.3, 13201.0], [80.4, 13218.0], [80.5, 13225.0], [80.6, 13226.0], [80.7, 13230.0], [80.8, 13269.0], [80.9, 13312.0], [81.0, 13418.0], [81.1, 13524.0], [81.2, 13536.0], [81.3, 13567.0], [81.4, 13568.0], [81.5, 13571.0], [81.6, 13582.0], [81.7, 13587.0], [81.8, 13634.0], [81.9, 13752.0], [82.0, 13823.0], [82.1, 13926.0], [82.2, 13935.0], [82.3, 14028.0], [82.4, 14096.0], [82.5, 14136.0], [82.6, 14154.0], [82.7, 14183.0], [82.8, 14239.0], [82.9, 14280.0], [83.0, 14305.0], [83.1, 14344.0], [83.2, 14393.0], [83.3, 14497.0], [83.4, 14595.0], [83.5, 14597.0], [83.6, 14629.0], [83.7, 14649.0], [83.8, 14674.0], [83.9, 14691.0], [84.0, 14742.0], [84.1, 14796.0], [84.2, 14885.0], [84.3, 14935.0], [84.4, 14968.0], [84.5, 14997.0], [84.6, 15038.0], [84.7, 15057.0], [84.8, 15059.0], [84.9, 15070.0], [85.0, 15094.0], [85.1, 15124.0], [85.2, 15146.0], [85.3, 15179.0], [85.4, 15463.0], [85.5, 15529.0], [85.6, 15533.0], [85.7, 15578.0], [85.8, 15674.0], [85.9, 15685.0], [86.0, 15731.0], [86.1, 15741.0], [86.2, 15741.0], [86.3, 15811.0], [86.4, 15883.0], [86.5, 15966.0], [86.6, 15982.0], [86.7, 16000.0], [86.8, 16018.0], [86.9, 16052.0], [87.0, 16126.0], [87.1, 16235.0], [87.2, 16270.0], [87.3, 16316.0], [87.4, 16344.0], [87.5, 16352.0], [87.6, 16371.0], [87.7, 16392.0], [87.8, 16421.0], [87.9, 16462.0], [88.0, 16501.0], [88.1, 16547.0], [88.2, 16588.0], [88.3, 16649.0], [88.4, 16769.0], [88.5, 16890.0], [88.6, 16955.0], [88.7, 16974.0], [88.8, 17164.0], [88.9, 17461.0], [89.0, 17503.0], [89.1, 17570.0], [89.2, 18170.0], [89.3, 18193.0], [89.4, 18287.0], [89.5, 18295.0], [89.6, 18312.0], [89.7, 18393.0], [89.8, 18439.0], [89.9, 19300.0], [90.0, 19497.0], [90.1, 19541.0], [90.2, 19789.0], [90.3, 19840.0], [90.4, 20346.0], [90.5, 20404.0], [90.6, 20743.0], [90.7, 20760.0], [90.8, 21109.0], [90.9, 21221.0], [91.0, 21237.0], [91.1, 21255.0], [91.2, 21318.0], [91.3, 21761.0], [91.4, 21778.0], [91.5, 21793.0], [91.6, 21862.0], [91.7, 22133.0], [91.8, 22571.0], [91.9, 22727.0], [92.0, 23127.0], [92.1, 23251.0], [92.2, 23275.0], [92.3, 23304.0], [92.4, 23717.0], [92.5, 23961.0], [92.6, 24162.0], [92.7, 24185.0], [92.8, 24210.0], [92.9, 24530.0], [93.0, 26390.0], [93.1, 26616.0], [93.2, 26789.0], [93.3, 27871.0], [93.4, 28264.0], [93.5, 29265.0], [93.6, 31085.0], [93.7, 31092.0], [93.8, 31861.0], [93.9, 32947.0], [94.0, 33350.0], [94.1, 33443.0], [94.2, 33453.0], [94.3, 33878.0], [94.4, 34386.0], [94.5, 34597.0], [94.6, 34898.0], [94.7, 34947.0], [94.8, 34999.0], [94.9, 36187.0], [95.0, 37017.0], [95.1, 37696.0], [95.2, 37941.0], [95.3, 38344.0], [95.4, 39197.0], [95.5, 39547.0], [95.6, 40659.0], [95.7, 41774.0], [95.8, 42334.0], [95.9, 43317.0], [96.0, 43358.0], [96.1, 44531.0], [96.2, 45678.0], [96.3, 46360.0], [96.4, 46451.0], [96.5, 46906.0], [96.6, 47782.0], [96.7, 48426.0], [96.8, 48452.0], [96.9, 49087.0], [97.0, 49959.0], [97.1, 50075.0], [97.2, 55618.0], [97.3, 56988.0], [97.4, 59832.0], [97.5, 62375.0], [97.6, 64221.0], [97.7, 69753.0], [97.8, 69888.0], [97.9, 70498.0], [98.0, 71807.0], [98.1, 74780.0], [98.2, 80072.0], [98.3, 90352.0], [98.4, 100010.0], [98.5, 100037.0], [98.6, 100061.0], [98.7, 103642.0], [98.8, 104824.0], [98.9, 128380.0], [99.0, 131797.0], [99.1, 133721.0], [99.2, 133969.0], [99.3, 134043.0], [99.4, 134555.0], [99.5, 134675.0], [99.6, 135411.0], [99.7, 136605.0], [99.8, 137058.0], [99.9, 139141.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1792.0, "series": [{"data": [[0.0, 1792.0], [69900.0, 2.0], [74700.0, 5.0], [137000.0, 17.0], [100.0, 31.0], [32900.0, 5.0], [34500.0, 16.0], [33700.0, 2.0], [134700.0, 6.0], [36100.0, 3.0], [35300.0, 12.0], [38500.0, 3.0], [37700.0, 2.0], [36900.0, 16.0], [41700.0, 6.0], [42500.0, 2.0], [44900.0, 1.0], [43300.0, 30.0], [45700.0, 5.0], [46500.0, 3.0], [47300.0, 2.0], [48900.0, 7.0], [54500.0, 2.0], [53700.0, 1.0], [56100.0, 2.0], [56900.0, 2.0], [58500.0, 1.0], [59300.0, 2.0], [60900.0, 2.0], [61700.0, 2.0], [64100.0, 11.0], [70600.0, 1.0], [81800.0, 2.0], [99400.0, 2.0], [400.0, 1.0], [500.0, 1.0], [700.0, 22.0], [1000.0, 472.0], [1100.0, 560.0], [1200.0, 101.0], [1300.0, 174.0], [1400.0, 107.0], [1500.0, 102.0], [1600.0, 128.0], [1700.0, 118.0], [1800.0, 309.0], [1900.0, 205.0], [2000.0, 117.0], [136500.0, 4.0], [2100.0, 282.0], [2300.0, 60.0], [2200.0, 109.0], [2400.0, 197.0], [2500.0, 289.0], [2600.0, 147.0], [2800.0, 205.0], [2700.0, 154.0], [2900.0, 199.0], [3000.0, 298.0], [3100.0, 159.0], [3300.0, 84.0], [3200.0, 139.0], [3400.0, 244.0], [3500.0, 144.0], [3600.0, 194.0], [3700.0, 167.0], [3800.0, 126.0], [3900.0, 267.0], [4000.0, 225.0], [4100.0, 107.0], [4200.0, 70.0], [68100.0, 3.0], [4300.0, 57.0], [71300.0, 2.0], [69700.0, 11.0], [4400.0, 75.0], [4500.0, 97.0], [4600.0, 106.0], [4700.0, 71.0], [4800.0, 146.0], [5100.0, 65.0], [4900.0, 128.0], [5000.0, 139.0], [5200.0, 178.0], [5300.0, 95.0], [85700.0, 2.0], [5400.0, 107.0], [5500.0, 98.0], [5600.0, 46.0], [5800.0, 86.0], [5700.0, 96.0], [6000.0, 145.0], [5900.0, 131.0], [6100.0, 188.0], [6200.0, 119.0], [6300.0, 142.0], [6600.0, 110.0], [6400.0, 105.0], [6500.0, 86.0], [6800.0, 93.0], [6900.0, 129.0], [6700.0, 59.0], [7100.0, 139.0], [7000.0, 142.0], [7200.0, 44.0], [7300.0, 88.0], [7400.0, 88.0], [117700.0, 6.0], [7500.0, 41.0], [7600.0, 129.0], [7700.0, 78.0], [7900.0, 112.0], [7800.0, 83.0], [8000.0, 141.0], [8100.0, 127.0], [8400.0, 87.0], [8600.0, 111.0], [8200.0, 200.0], [8800.0, 87.0], [9000.0, 169.0], [9200.0, 57.0], [9400.0, 98.0], [9600.0, 38.0], [9800.0, 83.0], [10000.0, 96.0], [10200.0, 41.0], [10400.0, 105.0], [10600.0, 70.0], [10800.0, 85.0], [11000.0, 55.0], [11200.0, 88.0], [11400.0, 18.0], [11600.0, 27.0], [11800.0, 65.0], [12000.0, 193.0], [12200.0, 105.0], [12400.0, 12.0], [12600.0, 24.0], [12800.0, 12.0], [13000.0, 94.0], [13200.0, 116.0], [13400.0, 12.0], [13800.0, 10.0], [13600.0, 28.0], [14200.0, 44.0], [14000.0, 34.0], [14400.0, 17.0], [14800.0, 23.0], [14600.0, 77.0], [15000.0, 100.0], [15200.0, 4.0], [15400.0, 8.0], [15800.0, 25.0], [15600.0, 49.0], [16000.0, 57.0], [16200.0, 34.0], [16400.0, 51.0], [16800.0, 21.0], [18400.0, 27.0], [18000.0, 4.0], [19200.0, 1.0], [20400.0, 7.0], [19600.0, 7.0], [21200.0, 60.0], [21600.0, 7.0], [22000.0, 1.0], [22800.0, 6.0], [23200.0, 46.0], [24400.0, 13.0], [24800.0, 1.0], [26400.0, 3.0], [25600.0, 1.0], [26800.0, 9.0], [27600.0, 4.0], [28400.0, 3.0], [28800.0, 3.0], [29600.0, 4.0], [29200.0, 8.0], [30400.0, 1.0], [30800.0, 3.0], [31200.0, 1.0], [31600.0, 1.0], [32400.0, 2.0], [32800.0, 2.0], [36800.0, 1.0], [37600.0, 13.0], [38400.0, 1.0], [39200.0, 10.0], [41600.0, 1.0], [44800.0, 1.0], [43200.0, 15.0], [45600.0, 19.0], [46400.0, 25.0], [48800.0, 1.0], [52800.0, 2.0], [51200.0, 1.0], [53600.0, 2.0], [56800.0, 11.0], [58400.0, 1.0], [57600.0, 2.0], [63200.0, 2.0], [70400.0, 9.0], [80000.0, 4.0], [94400.0, 2.0], [135300.0, 1.0], [71900.0, 2.0], [84700.0, 1.0], [95900.0, 2.0], [133900.0, 24.0], [33100.0, 2.0], [37900.0, 17.0], [37100.0, 4.0], [39500.0, 2.0], [41100.0, 2.0], [41900.0, 1.0], [42700.0, 1.0], [43500.0, 2.0], [45100.0, 2.0], [49900.0, 26.0], [61900.0, 4.0], [62700.0, 1.0], [63500.0, 1.0], [72600.0, 2.0], [71000.0, 2.0], [85400.0, 1.0], [93400.0, 2.0], [131600.0, 5.0], [132500.0, 2.0], [66900.0, 2.0], [70100.0, 2.0], [71700.0, 7.0], [74900.0, 4.0], [78100.0, 2.0], [82900.0, 1.0], [103700.0, 4.0], [136600.0, 18.0], [16500.0, 52.0], [16900.0, 42.0], [17300.0, 2.0], [18100.0, 29.0], [17700.0, 7.0], [18900.0, 3.0], [19300.0, 16.0], [20100.0, 8.0], [19700.0, 15.0], [21300.0, 11.0], [20900.0, 9.0], [22100.0, 8.0], [21700.0, 49.0], [22500.0, 17.0], [23300.0, 9.0], [24100.0, 50.0], [23700.0, 10.0], [24500.0, 4.0], [26500.0, 5.0], [25700.0, 2.0], [27700.0, 2.0], [28500.0, 1.0], [30900.0, 2.0], [32500.0, 1.0], [33000.0, 9.0], [33800.0, 4.0], [34600.0, 4.0], [38600.0, 2.0], [37000.0, 5.0], [37800.0, 10.0], [39400.0, 3.0], [40200.0, 1.0], [41800.0, 2.0], [41000.0, 8.0], [46600.0, 2.0], [49000.0, 4.0], [50600.0, 1.0], [53800.0, 1.0], [58600.0, 3.0], [61800.0, 2.0], [64200.0, 4.0], [66000.0, 1.0], [77200.0, 2.0], [86800.0, 2.0], [96400.0, 2.0], [133600.0, 10.0], [134500.0, 14.0], [86700.0, 2.0], [128300.0, 25.0], [135400.0, 11.0], [34100.0, 2.0], [33300.0, 11.0], [34900.0, 39.0], [35700.0, 3.0], [37300.0, 1.0], [40500.0, 2.0], [41300.0, 2.0], [42100.0, 9.0], [43700.0, 1.0], [44500.0, 3.0], [46900.0, 17.0], [48500.0, 5.0], [47700.0, 5.0], [50900.0, 2.0], [56500.0, 1.0], [61300.0, 2.0], [59700.0, 1.0], [64500.0, 2.0], [68200.0, 1.0], [69800.0, 22.0], [85800.0, 2.0], [95400.0, 2.0], [134000.0, 20.0], [131700.0, 5.0], [73700.0, 3.0], [70500.0, 6.0], [76900.0, 2.0], [91300.0, 2.0], [8300.0, 144.0], [8500.0, 158.0], [8700.0, 82.0], [139000.0, 3.0], [9100.0, 128.0], [8900.0, 65.0], [9700.0, 86.0], [9300.0, 62.0], [9500.0, 58.0], [10100.0, 78.0], [9900.0, 76.0], [10700.0, 9.0], [10500.0, 61.0], [10300.0, 106.0], [10900.0, 166.0], [11100.0, 38.0], [11500.0, 51.0], [11700.0, 63.0], [11300.0, 129.0], [11900.0, 98.0], [12100.0, 91.0], [12500.0, 18.0], [12300.0, 28.0], [12700.0, 19.0], [13100.0, 78.0], [12900.0, 13.0], [13300.0, 25.0], [13500.0, 135.0], [13700.0, 21.0], [14300.0, 57.0], [14100.0, 59.0], [13900.0, 46.0], [14500.0, 46.0], [14700.0, 41.0], [15100.0, 68.0], [14900.0, 56.0], [15300.0, 2.0], [15500.0, 58.0], [15700.0, 68.0], [16100.0, 21.0], [15900.0, 55.0], [16300.0, 101.0], [17000.0, 11.0], [16600.0, 19.0], [17400.0, 32.0], [18200.0, 42.0], [18600.0, 3.0], [19400.0, 7.0], [20200.0, 4.0], [19800.0, 18.0], [20600.0, 4.0], [21400.0, 1.0], [21000.0, 7.0], [21800.0, 26.0], [22200.0, 1.0], [23000.0, 2.0], [23400.0, 7.0], [22600.0, 12.0], [24200.0, 11.0], [23800.0, 4.0], [25000.0, 3.0], [26600.0, 23.0], [27000.0, 1.0], [27800.0, 21.0], [28600.0, 4.0], [28200.0, 4.0], [29400.0, 2.0], [29000.0, 2.0], [31000.0, 29.0], [31400.0, 1.0], [31800.0, 3.0], [32600.0, 2.0], [34800.0, 14.0], [33200.0, 4.0], [34000.0, 1.0], [136700.0, 4.0], [37200.0, 2.0], [38000.0, 5.0], [42000.0, 2.0], [43600.0, 3.0], [46800.0, 2.0], [48400.0, 27.0], [50000.0, 14.0], [55600.0, 2.0], [56400.0, 1.0], [59600.0, 2.0], [63600.0, 1.0], [80800.0, 2.0], [98400.0, 2.0], [100000.0, 54.0], [104800.0, 1.0], [133700.0, 12.0], [66300.0, 2.0], [90300.0, 2.0], [134600.0, 30.0], [33500.0, 2.0], [34300.0, 24.0], [135500.0, 1.0], [35900.0, 1.0], [38300.0, 7.0], [39900.0, 2.0], [39100.0, 15.0], [40700.0, 2.0], [41500.0, 2.0], [42300.0, 2.0], [43900.0, 1.0], [44700.0, 1.0], [46300.0, 13.0], [45500.0, 2.0], [47900.0, 9.0], [57500.0, 2.0], [58300.0, 2.0], [60700.0, 2.0], [62300.0, 2.0], [61500.0, 2.0], [71800.0, 9.0], [87800.0, 2.0], [72500.0, 2.0], [101300.0, 1.0], [17100.0, 7.0], [16700.0, 13.0], [18300.0, 32.0], [17500.0, 30.0], [19100.0, 3.0], [19500.0, 24.0], [20300.0, 23.0], [21100.0, 17.0], [20700.0, 33.0], [21500.0, 1.0], [21900.0, 6.0], [22300.0, 3.0], [22700.0, 13.0], [23100.0, 10.0], [23500.0, 9.0], [23900.0, 11.0], [24700.0, 3.0], [25100.0, 1.0], [25500.0, 1.0], [26300.0, 6.0], [25900.0, 1.0], [26700.0, 9.0], [27500.0, 1.0], [29500.0, 1.0], [29900.0, 2.0], [30300.0, 1.0], [31100.0, 7.0], [32300.0, 5.0], [32700.0, 2.0], [31900.0, 4.0], [33400.0, 43.0], [139100.0, 23.0], [35000.0, 3.0], [38200.0, 1.0], [39800.0, 7.0], [40600.0, 8.0], [43800.0, 3.0], [47000.0, 2.0], [47800.0, 6.0], [51800.0, 2.0], [52600.0, 1.0], [53400.0, 2.0], [55000.0, 2.0], [56600.0, 2.0], [58200.0, 2.0], [60600.0, 2.0], [59800.0, 2.0], [64600.0, 2.0], [63800.0, 1.0], [74800.0, 5.0], [79600.0, 2.0], [87600.0, 1.0], [92400.0, 2.0], [103600.0, 21.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 139100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 32.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16807.0, "series": [{"data": [[0.0, 1824.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1437.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16807.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 32.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1324.3610586011334, "minX": 1.68287232E12, "maxY": 3000.0, "series": [{"data": [[1.68287256E12, 2985.0325125508], [1.68287244E12, 3000.0], [1.68287262E12, 1324.3610586011334], [1.68287232E12, 3000.0], [1.6828725E12, 3000.0], [1.68287238E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287262E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1035.0, "minX": 2.0, "maxY": 128383.0, "series": [{"data": [[2.0, 128340.0], [3.0, 128383.0], [5.0, 128383.0], [7.0, 128382.5], [8.0, 128383.0], [9.0, 128381.0], [11.0, 128380.5], [12.0, 128380.0], [13.0, 128380.0], [15.0, 128380.0], [16.0, 128379.5], [17.0, 128379.0], [18.0, 128378.0], [19.0, 128376.0], [20.0, 128375.0], [21.0, 128375.0], [22.0, 128365.0], [23.0, 128365.0], [24.0, 128360.0], [25.0, 128359.0], [26.0, 2752.0], [28.0, 2751.0], [29.0, 2749.0], [30.0, 2746.0], [31.0, 2599.0], [32.0, 2598.0], [35.0, 2598.0], [34.0, 2598.0], [37.0, 2597.5], [39.0, 2596.5], [41.0, 2596.0], [43.0, 2595.0], [42.0, 2596.0], [45.0, 2594.5], [47.0, 2593.0], [46.0, 2593.0], [48.0, 2590.0], [50.0, 2589.0], [53.0, 2587.0], [52.0, 2588.0], [55.0, 2585.0], [54.0, 2588.0], [57.0, 2584.5], [59.0, 2579.0], [61.0, 2574.0], [63.0, 2569.0], [62.0, 2573.0], [67.0, 2559.0], [66.0, 2559.0], [65.0, 2568.0], [71.0, 2547.0], [70.0, 2552.0], [69.0, 2556.0], [68.0, 2558.0], [75.0, 2325.0], [73.0, 2442.0], [72.0, 2443.0], [77.0, 2324.0], [76.0, 2325.0], [82.0, 1902.0], [81.0, 1902.5], [80.0, 1903.0], [86.0, 1901.0], [85.0, 1902.0], [91.0, 1900.0], [90.0, 2580.0], [95.0, 2237.5], [93.0, 2577.0], [92.0, 2578.0], [99.0, 1894.0], [98.0, 1896.0], [97.0, 2576.0], [96.0, 1898.0], [102.0, 2566.0], [101.0, 1893.0], [100.0, 2571.0], [106.0, 2554.0], [105.0, 2556.0], [104.0, 2564.5], [111.0, 2531.0], [110.0, 2534.0], [108.0, 2552.0], [114.0, 2531.0], [112.0, 2532.0], [119.0, 2520.0], [117.0, 2529.0], [116.0, 2531.0], [123.0, 2518.5], [121.0, 4043.5], [125.0, 2517.0], [124.0, 4043.0], [135.0, 4038.0], [134.0, 2515.0], [133.0, 4040.0], [132.0, 2517.0], [131.0, 3279.0], [129.0, 2517.0], [128.0, 2517.6666666666665], [143.0, 2507.0], [141.0, 2507.0], [140.0, 2510.0], [139.0, 2510.0], [138.0, 2511.0], [137.0, 2513.0], [136.0, 4037.0], [149.0, 2502.0], [148.0, 2504.0], [147.0, 4028.5], [146.0, 2505.0], [144.0, 4029.0], [159.0, 3263.0], [157.0, 3263.0], [155.0, 4026.0], [153.0, 2502.0], [152.0, 2502.6666666666665], [167.0, 4023.0], [166.0, 4022.0], [165.0, 3260.5], [163.0, 2500.0], [162.0, 2500.0], [161.0, 2501.0], [175.0, 2493.0], [174.0, 4017.0], [173.0, 3255.5], [171.0, 4020.0], [170.0, 4020.0], [169.0, 4021.0], [168.0, 4021.0], [183.0, 2489.0], [182.0, 3253.0], [181.0, 4015.0], [179.0, 4015.0], [178.0, 3254.0], [176.0, 4016.0], [191.0, 3998.0], [190.0, 2474.5], [188.0, 4004.0], [187.0, 4006.0], [186.0, 2992.0], [199.0, 3992.0], [197.0, 3993.0], [196.0, 3993.5], [194.0, 3994.0], [193.0, 3995.0], [192.0, 3997.0], [207.0, 3717.0], [205.0, 3209.0], [204.0, 3463.5], [202.0, 3959.0], [201.0, 3979.0], [200.0, 3991.0], [215.0, 3375.6666666666665], [212.0, 3716.0], [211.0, 3208.0], [210.0, 3717.0], [209.0, 3717.0], [223.0, 3714.0], [222.0, 3205.0], [221.0, 3714.5], [219.0, 3205.0], [218.0, 3798.0], [217.0, 3881.0], [230.0, 3456.5], [228.0, 3457.5], [226.0, 3712.5], [225.0, 3713.0], [239.0, 3875.0], [238.0, 3875.0], [237.0, 3201.5], [235.0, 3793.0], [233.0, 3372.0], [247.0, 3790.0], [245.0, 3708.0], [244.0, 3708.0], [243.0, 3593.6666666666665], [240.0, 3709.0], [255.0, 3450.5], [253.0, 3705.0], [252.0, 3788.5], [250.0, 3789.0], [249.0, 3198.0], [269.0, 3862.0], [271.0, 3862.0], [268.0, 3698.0], [259.0, 3702.0], [258.0, 3193.0], [257.0, 3194.0], [256.0, 3703.0], [267.0, 3697.0], [266.0, 3698.0], [265.0, 3864.0], [264.0, 3865.0], [263.0, 3191.0], [262.0, 3445.5], [260.0, 3192.0], [286.0, 3690.0], [287.0, 3857.0], [285.0, 3690.0], [284.0, 3691.0], [283.0, 3691.0], [282.0, 3182.0], [281.0, 3692.0], [279.0, 3693.0], [273.0, 3695.0], [272.0, 3695.0], [275.0, 3860.0], [274.0, 3695.0], [278.0, 3521.5], [276.0, 3694.0], [291.0, 3671.0], [302.0, 3667.0], [303.0, 3667.0], [300.0, 3668.5], [298.0, 3751.5], [296.0, 3835.0], [295.0, 3669.0], [294.0, 3670.0], [293.0, 3670.0], [290.0, 3671.0], [289.0, 3689.0], [288.0, 3689.0], [317.0, 3644.0], [318.0, 3180.0], [316.0, 3599.0], [306.0, 3666.0], [305.0, 3666.0], [315.0, 3774.0], [314.0, 3775.0], [313.0, 3745.5], [311.0, 3663.0], [310.0, 3747.5], [308.0, 3748.5], [334.0, 3409.0], [333.0, 2937.0], [329.0, 3098.3333333333335], [326.0, 3179.0], [325.0, 3223.8], [322.0, 3643.0], [351.0, 2936.0], [350.0, 3176.5], [348.0, 2936.0], [345.0, 3640.0], [344.0, 3406.0], [336.0, 3177.5], [367.0, 3406.0], [365.0, 3406.0], [361.0, 2935.0], [359.0, 3545.4], [356.0, 3268.0], [355.0, 3640.0], [354.0, 3132.5], [380.0, 2928.0], [382.0, 3990.0], [383.0, 3106.0], [381.0, 2927.0], [379.0, 2928.0], [376.0, 3169.0], [375.0, 3404.0], [371.0, 3093.0], [373.0, 3637.0], [372.0, 3310.8], [398.0, 3559.0], [399.0, 2853.0], [396.0, 3560.0], [386.0, 2864.0], [385.0, 2865.0], [384.0, 3105.0], [395.0, 3097.0], [394.0, 3099.0], [393.0, 2859.0], [392.0, 3101.0], [391.0, 3565.0], [390.0, 3023.3333333333335], [389.0, 2864.0], [414.0, 3548.0], [415.0, 3547.0], [413.0, 2845.0], [412.0, 3550.0], [411.0, 3514.0], [410.0, 2847.0], [408.0, 3320.0], [406.0, 3009.3333333333335], [400.0, 3092.0], [403.0, 3201.5], [401.0, 2851.0], [418.0, 3080.0], [431.0, 3501.0], [429.0, 3539.0], [427.0, 2955.0], [425.0, 3188.0], [424.0, 3076.0], [423.0, 3541.0], [422.0, 3541.0], [420.0, 2838.0], [417.0, 3080.0], [416.0, 3082.0], [446.0, 3059.0], [447.0, 3912.0], [445.0, 3061.0], [444.0, 3524.0], [443.0, 3524.0], [442.0, 3069.0], [441.0, 3069.0], [440.0, 3302.0], [439.0, 2830.0], [435.0, 3537.0], [434.0, 3668.0], [437.0, 3534.0], [436.0, 3535.0], [461.0, 3032.0], [463.0, 3337.0], [460.0, 3032.0], [451.0, 3045.0], [450.0, 2815.0], [449.0, 3522.0], [448.0, 3522.0], [459.0, 2793.0], [458.0, 3039.0], [457.0, 2799.0], [456.0, 3273.0], [454.0, 3349.5], [452.0, 3045.0], [467.0, 2909.0], [479.0, 2777.0], [478.0, 3327.3333333333335], [475.0, 3482.0], [474.0, 3677.5], [472.0, 3251.0], [470.0, 3679.5], [468.0, 3485.0], [466.0, 2789.0], [464.0, 3884.0], [494.0, 3863.0], [495.0, 3474.0], [493.0, 3474.0], [492.0, 3474.5], [490.0, 3475.0], [489.0, 2771.0], [488.0, 3475.0], [487.0, 3866.0], [481.0, 2776.0], [483.0, 3479.0], [482.0, 3015.0], [486.0, 3866.0], [485.0, 3866.0], [484.0, 3478.0], [510.0, 2896.0], [511.0, 2664.0], [509.0, 3518.0], [499.0, 3861.0], [498.0, 3862.0], [497.0, 3008.0], [507.0, 3446.0], [506.0, 3452.0], [505.0, 2990.0], [504.0, 3455.0], [503.0, 2999.0], [502.0, 3000.0], [501.0, 3465.0], [500.0, 3465.0], [516.0, 2509.0], [570.0, 2078.3333333333335], [568.0, 1861.0], [566.0, 2188.0], [562.0, 2516.6666666666665], [578.0, 2186.0], [596.0, 2006.5], [594.0, 2608.3333333333335], [590.0, 2183.0], [588.0, 1859.0], [586.0, 2730.6666666666665], [584.0, 2120.6], [582.0, 2077.3333333333335], [576.0, 1859.5], [636.0, 1746.0], [632.0, 2077.5], [608.0, 2169.0], [630.0, 3717.0], [626.0, 2083.0], [624.0, 2084.0], [622.0, 2096.0], [620.0, 1771.0], [618.0, 2433.8333333333335], [616.0, 3799.0], [668.0, 2517.0], [670.0, 2518.0], [664.0, 2520.0], [662.0, 2521.0], [660.0, 2522.0], [656.0, 2522.0], [650.0, 2773.0], [648.0, 2777.0], [646.0, 2781.0], [644.0, 3160.0], [640.0, 3708.0], [678.0, 2504.0], [698.0, 2567.0], [696.0, 2490.0], [694.0, 2569.0], [692.0, 2497.0], [688.0, 2498.0], [686.0, 2500.0], [684.0, 2502.0], [680.0, 2504.0], [676.0, 2512.0], [674.0, 2512.0], [672.0, 2515.0], [732.0, 1878.0], [734.0, 2810.0], [730.0, 2811.0], [728.0, 3746.0], [726.0, 1879.0], [724.0, 3748.0], [722.0, 3749.0], [720.0, 3749.0], [718.0, 3938.0], [706.0, 2819.5], [704.0, 3941.0], [710.0, 1884.0], [708.0, 1884.0], [716.0, 3845.0], [714.0, 1882.0], [712.0, 1884.0], [764.0, 3712.0], [766.0, 1842.0], [760.0, 2779.0], [742.0, 3735.0], [738.0, 3739.0], [736.0, 3741.0], [758.0, 1845.0], [756.0, 3722.0], [754.0, 3724.0], [750.0, 1857.0], [748.0, 3728.0], [746.0, 1861.0], [744.0, 3731.0], [774.0, 1837.5], [798.0, 1818.3333333333333], [792.0, 1832.0], [772.0, 1838.0], [770.0, 2774.0], [768.0, 3709.5], [790.0, 3700.0], [786.0, 3889.0], [784.0, 3702.0], [782.0, 1834.0], [780.0, 2769.0], [778.0, 3703.0], [776.0, 3704.0], [824.0, 3655.0], [826.0, 3652.0], [818.0, 2729.0], [828.0, 1782.0], [830.0, 2809.0], [816.0, 1806.0], [806.0, 1813.0], [804.0, 3683.0], [802.0, 1817.5], [800.0, 1817.0], [814.0, 3676.0], [812.0, 2742.0], [810.0, 1813.0], [808.0, 1812.0], [820.0, 3663.5], [856.0, 3434.0], [862.0, 3435.0], [848.0, 2902.0], [850.0, 2900.0], [858.0, 2768.5], [834.0, 2711.5], [832.0, 2715.0], [836.0, 3645.0], [846.0, 2719.0], [844.0, 2908.0], [842.0, 2721.0], [840.0, 3832.0], [854.0, 3028.0], [852.0, 2770.0], [892.0, 3422.0], [880.0, 3464.0], [882.0, 3279.0], [884.0, 3427.0], [894.0, 3273.0], [890.0, 3424.0], [888.0, 3426.0], [868.0, 3433.0], [870.0, 3468.0], [878.0, 3282.0], [876.0, 3466.0], [924.0, 3412.0], [926.0, 3262.0], [912.0, 3358.5], [914.0, 2748.0], [916.0, 3266.0], [922.0, 3412.0], [920.0, 3005.5], [900.0, 3197.0], [908.0, 3267.0], [906.0, 3268.0], [904.0, 2751.0], [918.0, 3264.0], [952.0, 2984.0], [958.0, 3388.0], [956.0, 2723.0], [954.0, 2723.0], [932.0, 3409.0], [942.0, 3405.0], [940.0, 3257.0], [938.0, 3258.0], [936.0, 3443.0], [950.0, 2727.0], [948.0, 3246.0], [946.0, 3247.0], [988.0, 2694.0], [990.0, 2953.5], [976.0, 2708.0], [980.0, 3383.5], [978.0, 3219.0], [986.0, 2697.0], [984.0, 3291.0], [966.0, 3325.5], [964.0, 3234.0], [962.0, 3238.0], [960.0, 3314.0], [972.0, 3411.0], [970.0, 3231.5], [968.0, 2714.0], [982.0, 3217.0], [1018.0, 2923.5], [1022.0, 3330.0], [1008.0, 3370.0], [1020.0, 3331.0], [998.0, 2673.5], [996.0, 3266.5], [994.0, 3021.3333333333335], [1002.0, 3356.0], [1000.0, 3374.0], [1012.0, 3334.0], [1010.0, 3334.0], [1028.0, 2661.5], [1064.0, 2302.0], [1056.0, 2270.0], [1024.0, 3365.0], [1032.0, 2617.0], [1036.0, 2616.0], [1052.0, 2447.0], [1048.0, 2488.0], [1044.0, 3302.3333333333335], [1040.0, 3231.0], [1068.0, 2114.0], [1060.0, 2120.0], [1140.0, 1952.0], [1148.0, 2390.0], [1120.0, 1969.0], [1128.0, 2851.0], [1136.0, 1953.0], [1092.0, 1987.0], [1112.0, 2863.0], [1108.0, 1405.0], [1104.0, 1410.0], [1132.0, 2844.0], [1204.0, 2779.0], [1200.0, 1893.0], [1212.0, 1073.0], [1184.0, 1900.0], [1208.0, 1619.0], [1156.0, 2048.0], [1160.0, 2825.0], [1176.0, 1903.0], [1172.0, 1908.0], [1168.0, 2808.0], [1196.0, 1324.0], [1224.0, 1065.0], [1252.0, 1186.0], [1264.0, 1159.0], [1228.0, 1050.0], [1220.0, 1071.0], [1216.0, 1072.0], [1244.0, 1213.6666666666665], [1232.0, 1041.0], [1248.0, 1196.0], [1332.0, 1074.0], [1316.0, 1965.0], [1312.0, 1113.0], [1336.0, 1073.5], [1288.0, 1146.0], [1284.0, 1148.0], [1308.0, 1976.0], [1304.0, 1556.5], [1324.0, 1076.0], [1400.0, 1133.0], [1380.0, 1148.0], [1376.0, 1148.5], [1384.0, 1145.0], [1396.0, 1142.0], [1392.0, 1144.0], [1356.0, 1057.0], [1352.0, 1060.0], [1348.0, 1061.0], [1344.0, 1063.0], [1372.0, 1149.0], [1364.0, 1181.0], [1360.0, 1053.0], [1456.0, 1102.0], [1468.0, 1097.0], [1448.0, 1588.0], [1440.0, 1599.0], [1420.0, 1111.0], [1416.0, 1117.0], [1412.0, 1119.0], [1408.0, 1122.0], [1436.0, 1599.0], [1424.0, 1110.0], [1452.0, 1103.0], [1444.0, 1593.0], [1524.0, 1928.0], [1532.0, 1922.0], [1504.0, 1937.0], [1512.0, 1935.0], [1528.0, 1925.0], [1520.0, 1931.0], [1484.0, 1091.5], [1480.0, 1092.0], [1476.0, 1094.0], [1472.0, 1095.0], [1500.0, 1064.0], [1496.0, 1066.0], [1492.0, 1067.5], [1488.0, 1068.0], [1516.0, 1934.0], [1592.0, 2190.6666666666665], [1596.0, 3675.0], [1568.0, 1461.0], [1572.0, 1541.0], [1588.0, 1530.0], [1584.0, 1369.0], [1536.0, 1918.0], [1540.0, 1910.0], [1548.0, 1393.0], [1544.0, 1395.5], [1564.0, 1544.0], [1560.0, 3692.0], [1552.0, 1464.5], [1580.0, 1537.0], [1576.0, 1539.0], [1612.0, 3670.5], [1656.0, 2540.0], [1660.0, 2539.0], [1648.0, 3617.0], [1608.0, 3672.0], [1604.0, 2599.0], [1600.0, 3674.0], [1624.0, 1519.0], [1620.0, 2594.0], [1636.0, 3650.0], [1720.0, 1799.0], [1712.0, 4889.0], [1724.0, 3340.5], [1668.0, 3610.0], [1672.0, 1457.0], [1676.0, 3580.0], [1684.0, 2573.0], [1680.0, 2579.0], [1708.0, 3349.0], [1704.0, 4892.0], [1776.0, 3072.0], [1784.0, 3069.0], [1760.0, 4845.0], [1764.0, 3088.0], [1780.0, 3071.0], [1728.0, 3119.0], [1732.0, 3117.0], [1736.0, 4868.0], [1740.0, 3109.0], [1752.0, 3094.0], [1772.0, 3078.0], [1768.0, 3083.0], [1848.0, 3997.0], [1840.0, 4299.0], [1824.0, 4305.5], [1828.0, 3084.0], [1832.0, 3589.0], [1836.0, 3541.0], [1844.0, 2243.0], [1792.0, 3093.0], [1796.0, 4310.5], [1804.0, 4209.0], [1816.0, 3088.0], [1812.0, 4007.0], [1808.0, 3849.0], [1912.0, 4554.0], [1892.0, 3055.0], [1900.0, 4571.0], [1916.0, 4553.0], [1904.0, 4558.0], [1856.0, 4595.0], [1860.0, 2654.0], [1868.0, 4588.0], [1884.0, 3984.0], [1880.0, 3826.0], [1876.0, 3986.5], [1924.0, 4545.0], [1980.0, 3005.0], [1976.0, 3519.0], [1932.0, 2170.0], [1920.0, 4550.0], [1948.0, 4513.0], [1944.0, 2996.0], [1940.0, 4518.0], [1936.0, 4523.0], [2040.0, 4025.0], [2044.0, 3927.0], [2016.0, 3016.0], [2020.0, 3005.0], [2032.0, 2989.0], [1996.0, 2995.0], [2008.0, 3021.0], [2000.0, 3024.0], [2144.0, 2621.0], [2112.0, 2580.0], [2128.0, 2485.0], [2152.0, 2835.0], [2072.0, 2992.0], [2104.0, 3363.0], [2096.0, 3279.5], [2080.0, 2492.0], [2280.0, 2953.25], [2248.0, 2539.0], [2264.0, 2551.0], [2288.0, 2760.0], [2272.0, 2513.0], [2176.0, 2742.0], [2232.0, 2552.0], [2224.0, 2907.5], [2216.0, 3081.0], [2208.0, 2609.0], [2424.0, 1095.0], [2368.0, 1065.0], [2408.0, 1108.0], [2304.0, 3170.0], [2320.0, 2483.0], [2328.0, 2950.0], [2352.0, 1073.0], [2336.0, 2944.0], [2536.0, 1156.0], [2552.0, 1425.0], [2496.0, 1129.0], [2504.0, 1125.0], [2512.0, 1550.0], [2528.0, 1524.0], [2432.0, 1088.0], [2440.0, 1085.3333333333333], [2488.0, 1137.0], [2480.0, 1140.0], [2464.0, 1626.0], [2672.0, 1092.0], [2664.0, 1097.5], [2640.0, 1054.6666666666667], [2648.0, 1111.0], [2680.0, 1084.0], [2656.0, 1106.0], [2584.0, 1666.0], [2576.0, 1128.0], [2568.0, 1139.5], [2560.0, 1146.0], [2616.0, 1640.0], [2608.0, 1647.0], [2600.0, 1660.0], [2592.0, 1664.0], [2792.0, 1108.0], [2800.0, 1104.0], [2760.0, 1103.0], [2768.0, 1088.0], [2776.0, 1079.0], [2784.0, 1067.0], [2688.0, 1077.0], [2696.0, 1070.0], [2704.0, 1063.0], [2712.0, 1037.0], [2744.0, 1111.0], [2728.0, 1119.0], [2928.0, 9271.0], [2880.0, 2203.0], [2888.0, 2192.0], [2904.0, 1317.0], [2936.0, 1306.0], [2920.0, 16370.0], [2840.0, 1073.0], [2824.0, 1092.0], [2816.0, 1096.0], [2864.0, 2210.0], [2856.0, 1059.0], [2944.0, 16356.0], [3000.0, 11888.045079810487], [2960.0, 2160.0], [2968.0, 16336.0], [2976.0, 2156.0], [2161.0, 3185.0], [2121.0, 3163.3333333333335], [2137.0, 2575.0], [2169.0, 3093.0], [2153.0, 3096.0], [2073.0, 2515.0], [2065.0, 3469.5], [2057.0, 3589.3333333333335], [2049.0, 3919.0], [2105.0, 3268.0], [2081.0, 3445.0], [2201.0, 3087.0], [2289.0, 2495.0], [2297.0, 3192.0], [2249.0, 2713.6666666666665], [2257.0, 2580.0], [2265.0, 3233.0], [2193.0, 3088.0], [2177.0, 3091.0], [2233.0, 2819.3333333333335], [2225.0, 2554.0], [2417.0, 1099.0], [2369.0, 1064.0], [2377.0, 64217.0], [2425.0, 1093.0], [2329.0, 3131.0], [2321.0, 3141.0], [2313.0, 3056.0], [2305.0, 3170.0], [2361.0, 32826.5], [2353.0, 1073.0], [2345.0, 2754.0], [2337.0, 2942.5], [2545.0, 1154.0], [2553.0, 1150.0], [2497.0, 1129.0], [2505.0, 1123.0], [2513.0, 1116.0], [2521.0, 1545.6666666666667], [2537.0, 1154.0], [2529.0, 1522.0], [2457.0, 1637.5], [2449.0, 1640.0], [2433.0, 1088.0], [2489.0, 1134.0], [2481.0, 1139.0], [2473.0, 1141.0], [2465.0, 1617.0], [2673.0, 1091.0], [2625.0, 1364.0], [2633.0, 1608.0], [2681.0, 1083.0], [2665.0, 1096.0], [2657.0, 1105.0], [2577.0, 1675.0], [2569.0, 1138.0], [2561.0, 1693.0], [2609.0, 1648.0], [2593.0, 1662.0], [2705.0, 1059.0], [2753.0, 1105.5], [2777.0, 1078.0], [2785.0, 1067.5], [2689.0, 1076.0], [2713.0, 53755.0], [2745.0, 1111.0], [2737.0, 1116.0], [2721.0, 64168.0], [2921.0, 1313.0], [2913.0, 16372.0], [2881.0, 2203.5], [2889.0, 2190.5], [2897.0, 2178.0], [2937.0, 2175.0], [2841.0, 1073.0], [2833.0, 1080.0], [2825.0, 1086.0], [2873.0, 2206.3333333333335], [2865.0, 2210.5], [2857.0, 1058.0], [2849.0, 1062.0], [2945.0, 8828.0], [2953.0, 1294.5], [2993.0, 2127.5], [2961.0, 16344.0], [2985.0, 2135.5], [1077.0, 1420.0], [1085.0, 1989.0], [1061.0, 2268.0], [1065.0, 2302.0], [1081.0, 1419.0], [1037.0, 3282.0], [1033.0, 3319.0], [1025.0, 3272.0], [1053.0, 2296.0], [1049.0, 2452.0], [1045.0, 3305.0], [1137.0, 2840.0], [1149.0, 1946.0], [1125.0, 1680.5], [1145.0, 1949.5], [1101.0, 1695.5], [1097.0, 2142.5], [1093.0, 1987.0], [1113.0, 1972.0], [1105.0, 2867.0], [1129.0, 2850.0], [1201.0, 1892.0], [1185.0, 2788.0], [1189.0, 1899.0], [1205.0, 2776.0], [1165.0, 1924.5], [1161.0, 2814.0], [1157.0, 1942.0], [1153.0, 1943.0], [1181.0, 2789.0], [1173.0, 2793.0], [1169.0, 2803.0], [1193.0, 2055.5], [1273.0, 1579.0], [1249.0, 1195.0], [1257.0, 1162.0], [1253.0, 1182.0], [1277.0, 2004.5], [1269.0, 1582.0], [1265.0, 1158.0], [1221.0, 1069.0], [1229.0, 1050.0], [1337.0, 1069.0], [1341.0, 1069.0], [1313.0, 1113.0], [1317.0, 1111.0], [1333.0, 1074.0], [1281.0, 1149.5], [1289.0, 1145.0], [1293.0, 1570.5], [1309.0, 1116.0], [1305.0, 1131.0], [1301.0, 1984.0], [1297.0, 1142.0], [1325.0, 1075.0], [1321.0, 1961.5], [1397.0, 1141.0], [1405.0, 1128.5], [1377.0, 1148.0], [1381.0, 1147.5], [1401.0, 1135.0], [1353.0, 1059.0], [1349.0, 1060.0], [1345.0, 1063.0], [1373.0, 1149.0], [1369.0, 1108.0], [1361.0, 1047.0], [1389.0, 1146.0], [1465.0, 1099.0], [1441.0, 1598.0], [1445.0, 1592.0], [1449.0, 1584.0], [1469.0, 1098.0], [1461.0, 1100.5], [1457.0, 1103.0], [1437.0, 1600.0], [1409.0, 1121.0], [1417.0, 1117.0], [1433.0, 1091.0], [1429.0, 1108.0], [1425.0, 1109.0], [1521.0, 1929.0], [1533.0, 1919.0], [1509.0, 1936.5], [1525.0, 1927.0], [1473.0, 1095.0], [1481.0, 1092.0], [1477.0, 1093.0], [1485.0, 1091.0], [1501.0, 2262.0], [1497.0, 1065.0], [1493.0, 1067.0], [1489.0, 1068.0], [1517.0, 1932.0], [1513.0, 1935.0], [1593.0, 1528.0], [1597.0, 1527.0], [1569.0, 1542.0], [1577.0, 1539.0], [1589.0, 3677.0], [1585.0, 1532.0], [1549.0, 1392.0], [1545.0, 1395.0], [1541.0, 1908.0], [1537.0, 1913.0], [1565.0, 1542.0], [1557.0, 1463.5], [1553.0, 1546.0], [1581.0, 1536.0], [1613.0, 3669.0], [1653.0, 2898.6666666666665], [1649.0, 1467.0], [1645.0, 1473.5], [1629.0, 2592.0], [1601.0, 1526.0], [1605.0, 1524.0], [1609.0, 1525.0], [1625.0, 1518.0], [1621.0, 3667.0], [1713.0, 3133.0], [1725.0, 4875.0], [1697.0, 3139.5], [1717.0, 4886.0], [1665.0, 3611.0], [1669.0, 1463.0], [1673.0, 3605.0], [1677.0, 2581.0], [1693.0, 2214.0], [1681.0, 2576.0], [1701.0, 4894.0], [1781.0, 3070.0], [1789.0, 4611.0], [1765.0, 3086.0], [1785.0, 3069.0], [1729.0, 4873.0], [1733.0, 4872.0], [1737.0, 3113.0], [1741.0, 3108.0], [1757.0, 3092.0], [1749.0, 3100.0], [1745.0, 3105.0], [1773.0, 3077.0], [1769.0, 3082.0], [1853.0, 3996.0], [1829.0, 3084.0], [1849.0, 3996.0], [1837.0, 3082.0], [1825.0, 4604.0], [1805.0, 3091.0], [1801.0, 3903.6666666666665], [1821.0, 4605.0], [1813.0, 3547.5], [1893.0, 3973.0], [1889.0, 4582.0], [1901.0, 3962.0], [1857.0, 3076.0], [1861.0, 3072.0], [1885.0, 4583.0], [1873.0, 3375.0], [1969.0, 3361.6666666666665], [1953.0, 3023.0], [1965.0, 3045.0], [1977.0, 3042.0], [1929.0, 3783.0], [1921.0, 4546.0], [1949.0, 2994.0], [1945.0, 2996.0], [1941.0, 4518.0], [1937.0, 4522.0], [2045.0, 3922.0], [2017.0, 3969.0], [2021.0, 3005.0], [2025.0, 3476.5], [2029.0, 2998.0], [2037.0, 3461.5], [2033.0, 3939.0], [1985.0, 3038.0], [1993.0, 3512.0], [2013.0, 3019.0], [2005.0, 3022.0], [2170.0, 2567.0], [2114.0, 2899.0], [2130.0, 2554.0], [2138.0, 2623.0], [2050.0, 3918.0], [2058.0, 3907.0], [2066.0, 2516.0], [2074.0, 3463.0], [2106.0, 3266.0], [2098.0, 3325.0], [2090.0, 2866.2], [2082.0, 3536.0], [2290.0, 3202.0], [2242.0, 2735.6666666666665], [2250.0, 2585.0], [2258.0, 2532.0], [2266.0, 2573.0], [2298.0, 2533.0], [2274.0, 2533.5], [2202.0, 2610.0], [2186.0, 3090.0], [2178.0, 3272.0], [2234.0, 3075.0], [2218.0, 2603.0], [2314.0, 2440.0], [2426.0, 1092.0], [2370.0, 1064.0], [2410.0, 1108.0], [2306.0, 2510.0], [2330.0, 3131.0], [2362.0, 1067.0], [2354.0, 1073.0], [2346.0, 3067.0], [2338.0, 2463.0], [2554.0, 1150.0], [2506.0, 1122.0], [2514.0, 1547.0], [2522.0, 1111.0], [2546.0, 1152.0], [2530.0, 1521.0], [2458.0, 1636.0], [2450.0, 1639.0], [2474.0, 1142.0], [2466.0, 1617.0], [2674.0, 1091.0], [2634.0, 1079.0], [2650.0, 1111.0], [2682.0, 1080.0], [2578.0, 1125.0], [2570.0, 1686.0], [2562.0, 1145.0], [2610.0, 1646.0], [2602.0, 1384.0], [2802.0, 1102.5], [2794.0, 1107.3333333333333], [2762.0, 1102.0], [2810.0, 1098.0], [2754.0, 1106.0], [2770.0, 1085.5], [2786.0, 1066.0], [2698.0, 1069.0], [2706.0, 1058.0], [2738.0, 1115.0], [2730.0, 1119.0], [2722.0, 64167.0], [2922.0, 2197.0], [2938.0, 1304.0], [2882.0, 2201.0], [2898.0, 2172.0], [2914.0, 6720.666666666666], [2834.0, 1078.0], [2826.0, 1084.0], [2818.0, 1097.0], [2874.0, 2205.0], [2850.0, 1061.0], [2946.0, 1298.0], [2954.0, 2162.0], [2970.0, 9242.5], [2986.0, 2135.0], [2978.0, 2155.0], [2155.0, 3278.0], [2131.0, 2576.0], [2139.0, 3099.0], [2163.0, 3093.0], [2147.0, 2573.5], [2075.0, 2509.0], [2059.0, 3906.0], [2051.0, 3914.0], [2107.0, 3265.0], [2083.0, 2491.0], [2275.0, 2557.0], [2299.0, 2513.0], [2243.0, 3250.0], [2283.0, 2532.6666666666665], [2203.0, 3086.0], [2195.0, 2927.6666666666665], [2187.0, 2829.4], [2235.0, 3076.0], [2227.0, 3078.0], [2411.0, 1107.0], [2371.0, 1055.0], [2403.0, 1176.6538461538462], [2331.0, 3040.0], [2323.0, 2427.0], [2355.0, 1073.0], [2339.0, 2461.0], [2499.0, 1344.0], [2555.0, 1149.0], [2515.0, 1115.0], [2539.0, 1704.0], [2531.0, 1520.0], [2459.0, 1635.0], [2483.0, 1138.5], [2659.0, 1104.0], [2683.0, 1081.0], [2627.0, 1361.5], [2651.0, 1109.5], [2675.0, 1090.0], [2587.0, 1665.5], [2579.0, 1124.0], [2571.0, 1134.0], [2563.0, 1693.0], [2619.0, 1365.5], [2603.0, 1657.0], [2595.0, 1662.5], [2803.0, 1102.0], [2787.0, 1066.0], [2755.0, 1105.0], [2779.0, 1077.0], [2811.0, 1097.5], [2691.0, 1076.0], [2699.0, 1068.0], [2707.0, 1050.0], [2715.0, 64171.0], [2747.0, 1109.0], [2739.0, 1113.0], [2731.0, 1117.5], [2723.0, 13360.0], [2931.0, 6326.666666666666], [2939.0, 1304.0], [2883.0, 2198.0], [2891.0, 2190.5], [2899.0, 2166.0], [2923.0, 16367.0], [2843.0, 1071.5], [2835.0, 1078.0], [2819.0, 1095.0], [2859.0, 64153.0], [2955.0, 16346.0], [2987.0, 2135.0], [2979.0, 2146.0], [515.0, 2511.0], [513.0, 3516.0], [573.0, 2078.0], [567.0, 2024.5], [565.0, 2080.0], [563.0, 1862.0], [561.0, 1862.0], [559.0, 2008.3333333333333], [605.0, 2169.0], [591.0, 3808.0], [589.0, 2479.9000000000005], [587.0, 2021.75], [585.0, 2022.1666666666667], [579.0, 1968.0], [633.0, 2077.0], [637.0, 3709.0], [639.0, 2072.5], [635.0, 1747.5], [629.0, 2516.6666666666665], [625.0, 2083.0], [621.0, 3734.0], [609.0, 1987.5555555555557], [619.0, 1783.0], [617.0, 1997.5], [665.0, 2521.0], [669.0, 2518.0], [671.0, 2516.0], [667.0, 2519.5], [661.0, 2521.3333333333335], [657.0, 2523.0], [655.0, 2562.0], [647.0, 2780.0], [641.0, 3708.0], [653.0, 2523.0], [651.0, 2524.0], [649.0, 2775.0], [701.0, 3754.0], [703.0, 3753.5], [699.0, 2468.0], [697.0, 2490.0], [695.0, 2492.0], [693.0, 2497.0], [691.0, 2498.5], [689.0, 2498.0], [685.0, 2500.0], [673.0, 2514.0], [679.0, 2504.0], [677.0, 2505.0], [683.0, 2542.0], [681.0, 2503.0], [735.0, 1877.0], [731.0, 3745.0], [727.0, 3746.0], [725.0, 1880.0], [723.0, 3749.0], [719.0, 1882.0], [717.0, 1882.0], [713.0, 2911.0], [709.0, 3753.0], [763.0, 2779.0], [765.0, 3898.0], [761.0, 3713.0], [743.0, 3731.0], [741.0, 3738.5], [739.0, 1870.0], [737.0, 3740.0], [757.0, 1848.0], [755.0, 3723.0], [753.0, 2790.0], [751.0, 1857.0], [749.0, 1858.0], [747.0, 1861.0], [745.0, 3730.0], [795.0, 2764.5], [799.0, 3874.0], [793.0, 1831.0], [775.0, 3705.0], [771.0, 3707.0], [791.0, 1832.0], [789.0, 2860.0], [787.0, 3889.0], [785.0, 1833.0], [783.0, 3702.0], [781.0, 1834.0], [777.0, 1836.0], [805.0, 3871.0], [827.0, 1784.0], [803.0, 3873.0], [815.0, 1807.0], [813.0, 3863.0], [809.0, 2841.0], [823.0, 3655.5], [821.0, 3656.0], [859.0, 3435.0], [863.0, 3285.0], [849.0, 2901.0], [861.0, 3360.0], [847.0, 2717.0], [837.0, 3832.0], [845.0, 2908.0], [843.0, 2720.0], [841.0, 1775.3333333333333], [855.0, 3437.0], [851.0, 3438.0], [893.0, 3273.0], [895.0, 3421.0], [881.0, 2762.0], [883.0, 3427.0], [891.0, 3274.0], [889.0, 3276.0], [879.0, 2763.0], [867.0, 3359.5], [865.0, 3100.5], [869.0, 3284.0], [871.0, 3431.0], [877.0, 3432.0], [875.0, 3357.5], [873.0, 3432.0], [887.0, 3018.0], [885.0, 3426.0], [921.0, 3263.0], [927.0, 3446.0], [913.0, 3415.0], [915.0, 3265.0], [923.0, 3412.0], [903.0, 3361.0], [901.0, 3420.0], [897.0, 3086.0], [911.0, 3267.0], [909.0, 2749.0], [907.0, 3269.0], [905.0, 3452.0], [917.0, 3265.0], [935.0, 3333.5], [957.0, 3390.0], [945.0, 2988.0], [955.0, 3315.5], [943.0, 3248.0], [929.0, 3336.0], [931.0, 3352.0], [933.0, 3260.0], [941.0, 3257.0], [939.0, 3442.0], [937.0, 3258.0], [949.0, 3061.5], [985.0, 3400.0], [991.0, 2689.0], [977.0, 3375.0], [987.0, 2696.0], [967.0, 3417.0], [963.0, 2716.0], [975.0, 3225.5], [973.0, 3376.0], [971.0, 2713.0], [981.0, 2699.0], [1021.0, 3015.0], [1009.0, 2668.0], [1017.0, 3017.0], [999.0, 3191.0], [1007.0, 3371.0], [1005.0, 3020.0], [1003.0, 2670.0], [1015.0, 2666.0], [1078.0, 2878.0], [1082.0, 1705.0], [1086.0, 1989.0], [1058.0, 2287.0], [1074.0, 1707.0], [1054.0, 2296.0], [1030.0, 3270.5], [1034.0, 3283.0], [1050.0, 2452.0], [1042.0, 3130.0], [1070.0, 2297.0], [1066.0, 2265.0], [1062.0, 2303.0], [1142.0, 1570.3333333333333], [1138.0, 1381.0], [1150.0, 1945.0], [1130.0, 2848.0], [1146.0, 1375.0], [1102.0, 1980.0], [1098.0, 1984.0], [1094.0, 1987.0], [1090.0, 2284.0], [1118.0, 2267.0], [1106.0, 1406.0], [1134.0, 2398.0], [1158.0, 2829.0], [1214.0, 1073.5], [1186.0, 2787.0], [1210.0, 1074.0], [1182.0, 2345.0], [1166.0, 1351.0], [1162.0, 1925.0], [1178.0, 1902.0], [1174.0, 1904.0], [1170.0, 2802.0], [1198.0, 1895.5], [1194.0, 1326.0], [1190.0, 1327.0], [1226.0, 1056.5], [1230.0, 1044.0], [1270.0, 1155.0], [1266.0, 1157.0], [1222.0, 1066.0], [1218.0, 1072.0], [1246.0, 1212.0], [1238.0, 1214.0], [1234.0, 1214.5], [1262.0, 1161.0], [1258.0, 1162.0], [1254.0, 1163.0], [1250.0, 1192.0], [1290.0, 1145.0], [1338.0, 1070.0], [1342.0, 1067.0], [1334.0, 1073.0], [1282.0, 1149.0], [1310.0, 1968.0], [1306.0, 1129.0], [1302.0, 1557.5], [1298.0, 1143.0], [1322.0, 1076.0], [1318.0, 1110.0], [1394.0, 1143.0], [1402.0, 1133.0], [1406.0, 1128.0], [1382.0, 1146.0], [1398.0, 1141.0], [1354.0, 1060.0], [1350.0, 1060.0], [1346.0, 1062.0], [1374.0, 1149.0], [1370.0, 1035.0], [1366.0, 1110.0], [1362.0, 1046.0], [1390.0, 1145.0], [1386.0, 1146.5], [1470.0, 1096.0], [1442.0, 1598.0], [1422.0, 1110.6666666666667], [1418.0, 1115.0], [1414.0, 1118.0], [1438.0, 1599.0], [1434.0, 1601.0], [1454.0, 1103.0], [1450.0, 1579.0], [1446.0, 1592.0], [1530.0, 1924.0], [1534.0, 1918.0], [1510.0, 1936.0], [1506.0, 1936.5], [1514.0, 1934.0], [1526.0, 1926.0], [1486.0, 1083.0], [1482.0, 1091.0], [1478.0, 1093.0], [1502.0, 2260.0], [1498.0, 1064.0], [1494.0, 1067.0], [1490.0, 1067.0], [1518.0, 1932.0], [1594.0, 1365.0], [1574.0, 2615.0], [1586.0, 1368.0], [1566.0, 1380.0], [1538.0, 1912.0], [1542.0, 1908.0], [1562.0, 1462.5], [1582.0, 1370.0], [1578.0, 1539.0], [1658.0, 1465.0], [1662.0, 2538.0], [1654.0, 3613.0], [1650.0, 1467.0], [1610.0, 1360.0], [1606.0, 1524.0], [1602.0, 1363.0], [1634.0, 1517.0], [1674.0, 3584.0], [1722.0, 3128.0], [1718.0, 4885.0], [1714.0, 3132.0], [1694.0, 3141.0], [1666.0, 1463.0], [1670.0, 1461.0], [1678.0, 2580.0], [1686.0, 2567.0], [1710.0, 3348.5], [1706.0, 3349.5], [1778.0, 3949.0], [1790.0, 3093.0], [1762.0, 3966.5], [1782.0, 3070.0], [1758.0, 4846.0], [1730.0, 3118.0], [1738.0, 3112.0], [1742.0, 3106.0], [1754.0, 3093.5], [1750.0, 3100.0], [1746.0, 3103.0], [1770.0, 3081.0], [1766.0, 3086.0], [1846.0, 3538.0], [1854.0, 4295.5], [1826.0, 4003.0], [1834.0, 3083.0], [1842.0, 4598.0], [1822.0, 3546.0], [1798.0, 3092.0], [1802.0, 4609.0], [1818.0, 3088.5], [1810.0, 3089.5], [1918.0, 4253.0], [1890.0, 3982.0], [1894.0, 3055.0], [1898.0, 3866.0], [1902.0, 3959.0], [1910.0, 4355.333333333333], [1906.0, 3039.5], [1862.0, 3071.0], [1870.0, 4587.0], [1878.0, 3826.0], [1874.0, 3068.0], [1978.0, 3041.0], [1962.0, 2981.0], [1966.0, 3044.5], [1982.0, 3516.5], [1974.0, 3042.6666666666665], [1934.0, 4225.0], [1942.0, 4518.0], [1938.0, 3001.0], [1994.0, 3035.0], [2018.0, 3015.0], [2042.0, 3420.5], [2038.0, 3938.0], [1990.0, 3037.0], [1998.0, 2993.0], [2014.0, 3972.0], [2010.0, 3021.5], [2002.0, 3976.0], [2148.0, 2835.0], [2156.0, 2618.0], [2164.0, 2617.0], [2132.0, 2483.0], [2108.0, 3261.0], [2052.0, 3915.0], [2060.0, 3996.0], [2068.0, 2992.5], [2076.0, 2501.0], [2100.0, 3370.0], [2092.0, 2850.5], [2084.0, 2489.0], [2284.0, 3207.0], [2276.0, 2557.0], [2252.0, 3062.0], [2260.0, 3055.0], [2292.0, 2844.5], [2180.0, 2614.0], [2236.0, 2599.0], [2228.0, 2601.0], [2220.0, 2603.5], [2404.0, 1118.0], [2412.0, 1107.0], [2428.0, 1090.5], [2420.0, 1098.0], [2364.0, 1066.0], [2308.0, 2441.0], [2316.0, 3143.5], [2332.0, 2423.0], [2356.0, 1072.0], [2348.0, 1075.0], [2548.0, 1152.5], [2500.0, 1127.0], [2508.0, 1120.5], [2556.0, 1698.0], [2516.0, 1115.0], [2524.0, 1543.0], [2540.0, 1154.0], [2532.0, 1520.0], [2460.0, 1633.0], [2452.0, 1639.0], [2492.0, 1277.6666666666667], [2436.0, 1087.3333333333333], [2444.0, 1084.0], [2476.0, 1142.0], [2468.0, 1144.0], [2668.0, 1096.0], [2628.0, 1626.0], [2636.0, 1078.5], [2644.0, 1054.5], [2652.0, 1109.0], [2676.0, 1088.0], [2572.0, 1134.0], [2564.0, 1691.0], [2620.0, 1640.0], [2612.0, 1644.5], [2604.0, 1655.0], [2796.0, 1106.0], [2804.0, 1101.0], [2756.0, 1105.0], [2764.0, 1102.0], [2772.0, 1082.0], [2780.0, 1077.0], [2788.0, 1064.0], [2700.0, 1069.0], [2708.0, 1049.0], [2716.0, 64171.0], [2748.0, 1110.5], [2740.0, 1113.0], [2732.0, 1117.0], [2724.0, 1120.0], [2932.0, 2177.0], [2940.0, 2188.0], [2884.0, 2197.0], [2892.0, 2189.0], [2900.0, 2166.0], [2924.0, 1311.0], [2836.0, 1075.0], [2828.0, 1082.0], [2868.0, 2209.0], [2964.0, 6888.666666666666], [2972.0, 1713.5], [2996.0, 2127.0], [2988.0, 2148.0], [2980.0, 2153.0], [2165.0, 2616.0], [2157.0, 2571.0], [2125.0, 2839.25], [2173.0, 3274.0], [2117.0, 2594.3333333333335], [2141.0, 3098.5], [2069.0, 3469.0], [2061.0, 2944.0], [2053.0, 3914.0], [2109.0, 3105.0], [2101.0, 3323.5], [2085.0, 3439.0], [2293.0, 2539.0], [2245.0, 2896.5], [2261.0, 2907.0], [2301.0, 2989.0], [2189.0, 2471.0], [2181.0, 2565.0], [2237.0, 3072.0], [2229.0, 2815.5], [2221.0, 3081.0], [2213.0, 2895.818181818182], [2325.0, 2951.0], [2405.0, 1117.0], [2373.0, 32809.5], [2421.0, 1098.0], [2333.0, 2420.0], [2309.0, 2489.0], [2365.0, 1065.0], [2357.0, 1072.0], [2349.0, 1075.0], [2341.0, 2758.5], [2533.0, 1506.0], [2557.0, 1149.0], [2509.0, 1552.0], [2517.0, 1546.0], [2525.0, 1105.0], [2461.0, 1627.0], [2453.0, 1638.0], [2445.0, 1640.0], [2493.0, 1133.0], [2485.0, 1353.0], [2477.0, 1141.0], [2677.0, 1088.0], [2669.0, 1095.0], [2637.0, 1078.0], [2645.0, 1053.3333333333333], [2653.0, 1108.0], [2685.0, 1079.5], [2661.0, 1100.5], [2589.0, 1390.5], [2581.0, 1396.5], [2565.0, 1141.0], [2621.0, 1089.0], [2605.0, 1105.0], [2597.0, 1661.0], [2805.0, 1100.0], [2813.0, 1097.0], [2757.0, 1104.0], [2765.0, 1101.0], [2773.0, 1082.0], [2781.0, 1074.0], [2797.0, 1106.0], [2693.0, 1075.0], [2701.0, 1067.0], [2709.0, 1046.0], [2717.0, 64170.0], [2749.0, 1110.0], [2925.0, 2193.0], [2941.0, 16358.0], [2845.0, 1066.0], [2837.0, 1075.0], [2821.0, 1094.5], [2869.0, 2209.6666666666665], [2853.0, 1061.75], [2957.0, 2160.5], [2973.0, 2147.0], [2997.0, 2133.0], [2981.0, 2138.0], [1083.0, 1989.0], [1087.0, 1988.0], [1059.0, 2270.0], [1063.0, 2267.0], [1079.0, 2878.0], [1075.0, 1991.0], [1035.0, 2616.0], [1031.0, 3319.0], [1027.0, 3364.0], [1055.0, 104824.0], [1051.0, 2449.0], [1047.0, 2470.5], [1071.0, 2296.0], [1067.0, 2262.0], [1103.0, 1980.0], [1143.0, 1951.0], [1127.0, 1964.0], [1151.0, 2833.0], [1123.0, 1884.0], [1099.0, 1411.0], [1095.0, 1985.0], [1091.0, 1987.0], [1115.0, 2415.0], [1111.0, 2080.6666666666665], [1107.0, 1976.0], [1135.0, 2841.0], [1131.0, 1959.0], [1203.0, 1605.5], [1207.0, 2751.0], [1191.0, 2342.0], [1215.0, 1072.0], [1187.0, 2787.0], [1167.0, 1921.0], [1163.0, 2813.0], [1159.0, 1368.0], [1179.0, 1902.0], [1175.0, 2791.0], [1171.0, 1912.0], [1199.0, 2782.0], [1195.0, 1896.0], [1271.0, 1154.0], [1279.0, 1577.0], [1251.0, 1190.0], [1275.0, 1577.5], [1267.0, 1156.0], [1247.0, 1199.0], [1223.0, 1065.0], [1227.0, 1055.0], [1243.0, 1213.0], [1235.0, 1215.0], [1263.0, 2013.0], [1259.0, 1161.0], [1331.0, 1074.0], [1343.0, 1067.0], [1315.0, 1112.0], [1339.0, 1071.0], [1311.0, 1966.0], [1287.0, 1572.5], [1283.0, 2002.0], [1291.0, 1997.0], [1295.0, 1569.5], [1307.0, 1129.0], [1299.0, 1142.0], [1327.0, 1074.5], [1319.0, 1963.0], [1399.0, 1138.0], [1407.0, 1123.0], [1379.0, 1148.0], [1403.0, 1132.0], [1395.0, 1142.0], [1359.0, 1054.0], [1355.0, 1059.0], [1347.0, 1062.0], [1371.0, 1172.0], [1367.0, 1179.0], [1363.0, 1042.0], [1391.0, 1145.0], [1467.0, 1098.5], [1471.0, 1095.0], [1443.0, 1596.0], [1447.0, 1591.0], [1463.0, 1100.0], [1459.0, 1101.0], [1415.0, 1118.0], [1411.0, 1121.0], [1423.0, 1110.0], [1435.0, 1601.0], [1431.0, 1094.5], [1427.0, 1108.0], [1455.0, 1102.5], [1451.0, 1103.0], [1523.0, 1929.0], [1531.0, 1923.0], [1507.0, 1936.0], [1527.0, 1926.0], [1503.0, 2260.0], [1475.0, 1094.5], [1487.0, 1073.0], [1495.0, 1065.0], [1519.0, 1932.0], [1515.0, 1934.0], [1587.0, 1530.0], [1599.0, 1445.5], [1575.0, 1377.0], [1571.0, 1459.5], [1579.0, 1537.0], [1595.0, 1365.0], [1551.0, 3694.0], [1547.0, 1394.0], [1539.0, 1911.0], [1563.0, 1544.0], [1559.0, 1545.0], [1555.0, 1464.5], [1583.0, 1532.0], [1663.0, 3612.0], [1659.0, 1465.0], [1647.0, 1473.5], [1643.0, 2725.285714285714], [1635.0, 2376.4], [1607.0, 1361.0], [1623.0, 1519.5], [1619.0, 2236.3333333333335], [1671.0, 3607.0], [1727.0, 3997.0], [1719.0, 1799.0], [1715.0, 3132.0], [1695.0, 1810.0], [1675.0, 3580.0], [1679.0, 2581.0], [1691.0, 2215.0], [1687.0, 2565.0], [1683.0, 2575.0], [1711.0, 4889.0], [1703.0, 4015.5], [1699.0, 3352.0], [1779.0, 3071.0], [1791.0, 3093.0], [1763.0, 4844.0], [1767.0, 3083.0], [1787.0, 3093.5], [1759.0, 3090.0], [1731.0, 4873.0], [1735.0, 3116.0], [1739.0, 3110.0], [1743.0, 3106.0], [1755.0, 3092.0], [1751.0, 4854.0], [1747.0, 3101.0], [1775.0, 3073.0], [1771.0, 3078.0], [1847.0, 3079.0], [1851.0, 3078.0], [1839.0, 3081.0], [1827.0, 4004.0], [1843.0, 3539.0], [1807.0, 4608.0], [1795.0, 3093.0], [1819.0, 4005.0], [1815.0, 4007.5], [1911.0, 4554.0], [1891.0, 3064.0], [1915.0, 3569.6666666666665], [1919.0, 4553.0], [1895.0, 4572.0], [1899.0, 3054.0], [1907.0, 2202.0], [1887.0, 3524.0], [1859.0, 3991.0], [1863.0, 3071.0], [1867.0, 3470.25], [1871.0, 4587.0], [1883.0, 3372.3333333333335], [1971.0, 3007.5], [1983.0, 3039.0], [1959.0, 2981.0], [1955.0, 4200.0], [1963.0, 3486.3333333333335], [1935.0, 2170.0], [1931.0, 4232.0], [1927.0, 4036.0], [1923.0, 3786.5], [1951.0, 3333.0], [1943.0, 4515.0], [1939.0, 4519.0], [2047.0, 3921.0], [2043.0, 3928.0], [2019.0, 3014.0], [2023.0, 3957.0], [2027.0, 3475.5], [2031.0, 3466.5], [2039.0, 3938.0], [2035.0, 3938.0], [2015.0, 3018.0], [1987.0, 3514.5], [1991.0, 3036.0], [1999.0, 3026.0], [2011.0, 3020.0], [2007.0, 3021.0], [2003.0, 2986.5], [2150.0, 2550.0], [2166.0, 2616.0], [2174.0, 2933.3333333333335], [2158.0, 2856.0], [2054.0, 3910.0], [2062.0, 3988.0], [2070.0, 3560.0], [2078.0, 3498.5], [2102.0, 3275.0], [2094.0, 3280.0], [2286.0, 2785.5], [2302.0, 3171.0], [2262.0, 2577.0], [2270.0, 2713.75], [2190.0, 3269.5], [2182.0, 3271.0], [2238.0, 2547.0], [2222.0, 3080.0], [2214.0, 2557.0], [2414.0, 1106.0], [2430.0, 1090.0], [2374.0, 64222.0], [2422.0, 1096.0], [2406.0, 1116.0], [2334.0, 2467.0], [2358.0, 1071.0], [2350.0, 1074.0], [2550.0, 1150.0], [2502.0, 1127.0], [2510.0, 1118.0], [2526.0, 1527.0], [2558.0, 1148.0], [2438.0, 1086.0], [2446.0, 1641.0], [2478.0, 1141.0], [2470.0, 1143.3333333333333], [2670.0, 1092.0], [2662.0, 1100.0], [2630.0, 1624.0], [2654.0, 1108.0], [2686.0, 1078.0], [2590.0, 1664.0], [2582.0, 1671.0], [2574.0, 1129.0], [2566.0, 1141.0], [2622.0, 1640.0], [2614.0, 1642.0], [2606.0, 1104.0], [2806.0, 1100.0], [2814.0, 1096.0], [2758.0, 1103.5], [2766.0, 1098.0], [2782.0, 1068.0], [2790.0, 1061.5], [2750.0, 1107.0], [2710.0, 1044.0], [2718.0, 64170.0], [2742.0, 1112.0], [2734.0, 1117.5], [2726.0, 1119.5], [2934.0, 8834.0], [2942.0, 2172.0], [2886.0, 2196.0], [2894.0, 2187.0], [2926.0, 1309.0], [2918.0, 5516.75], [2830.0, 1082.5], [2870.0, 2208.0], [2862.0, 2212.0], [2950.0, 1730.75], [2966.0, 8812.5], [2974.0, 2145.0], [2990.0, 9225.0], [2119.0, 2578.0], [2159.0, 3277.0], [2127.0, 2625.0], [2135.0, 2795.6666666666665], [2143.0, 2597.5], [2167.0, 2569.0], [2079.0, 3451.0], [2063.0, 3896.0], [2103.0, 3274.0], [2303.0, 2512.0], [2255.0, 2975.25], [2295.0, 2510.0], [2207.0, 3086.5], [2239.0, 3253.0], [2215.0, 2557.0], [2407.0, 1111.0], [2415.0, 1106.0], [2431.0, 1089.0], [2375.0, 64221.0], [2327.0, 2425.0], [2319.0, 2483.0], [2311.0, 2866.6666666666665], [2367.0, 1065.0], [2359.0, 1069.0], [2343.0, 2453.0], [2551.0, 1150.0], [2559.0, 1694.0], [2511.0, 1550.0], [2519.0, 1111.0], [2543.0, 1335.6666666666667], [2535.0, 1155.5], [2463.0, 1627.5], [2455.0, 1637.5], [2495.0, 1347.5], [2447.0, 1641.0], [2487.0, 1137.0], [2471.0, 1143.0], [2679.0, 1084.0], [2671.0, 1092.0], [2687.0, 1077.0], [2631.0, 1624.0], [2647.0, 1110.0], [2655.0, 1108.0], [2591.0, 1665.0], [2583.0, 1667.0], [2575.0, 1676.5], [2623.0, 1364.5], [2615.0, 1641.5], [2607.0, 1651.0], [2599.0, 1386.5], [2807.0, 1098.0], [2759.0, 1103.0], [2767.0, 1088.0], [2775.0, 1077.0], [2799.0, 1106.0], [2695.0, 1074.0], [2703.0, 1066.5], [2711.0, 1039.0], [2719.0, 64169.0], [2735.0, 1116.0], [2847.0, 1065.0], [2919.0, 1315.0], [2935.0, 1306.0], [2895.0, 2186.0], [2903.0, 1919.6666666666667], [2839.0, 1073.5], [2831.0, 1080.0], [2823.0, 1093.0], [2863.0, 2210.0], [2855.0, 1060.5], [2951.0, 2165.0], [2959.0, 9259.5], [2967.0, 16338.0], [2991.0, 2127.0], [2983.0, 9231.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2776.3841293532278, 10711.316666666573]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7148.4, "minX": 1.68287232E12, "maxY": 48356.23333333333, "series": [{"data": [[1.68287256E12, 45174.65], [1.68287244E12, 48356.23333333333], [1.68287262E12, 27774.4], [1.68287232E12, 8941.15], [1.6828725E12, 40936.88333333333], [1.68287238E12, 48354.21666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68287256E12, 35137.2], [1.68287244E12, 35683.2], [1.68287262E12, 22209.6], [1.68287232E12, 7148.4], [1.6828725E12, 31894.8], [1.68287238E12, 36498.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287262E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3923.9546313799615, "minX": 1.68287232E12, "maxY": 15516.024980278728, "series": [{"data": [[1.68287256E12, 5052.393497489819], [1.68287244E12, 12349.536859349395], [1.68287262E12, 3923.9546313799615], [1.68287232E12, 8232.95652173913], [1.6828725E12, 15516.024980278728], [1.68287238E12, 14959.996087456851]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287262E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3884.3107750472573, "minX": 1.68287232E12, "maxY": 15330.289508282838, "series": [{"data": [[1.68287256E12, 5052.3858474778735], [1.68287244E12, 11742.99204306111], [1.68287262E12, 3884.3107750472573], [1.68287232E12, 8232.62397179788], [1.6828725E12, 15330.289508282838], [1.68287238E12, 14959.9836593786]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287262E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 6.981198589894258, "minX": 1.68287232E12, "maxY": 7512.75414146727, "series": [{"data": [[1.68287256E12, 1068.1945971790585], [1.68287244E12, 2781.0201263749163], [1.68287262E12, 1347.433648393195], [1.68287232E12, 6.981198589894258], [1.6828725E12, 7512.75414146727], [1.68287238E12, 910.1599539700804]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287262E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.68287232E12, "maxY": 139191.0, "series": [{"data": [[1.68287256E12, 64171.0], [1.68287244E12, 101388.0], [1.68287262E12, 128383.0], [1.68287232E12, 17102.0], [1.6828725E12, 139191.0], [1.68287238E12, 58600.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68287256E12, 9740.599999999999], [1.68287244E12, 26312.59999999999], [1.68287262E12, 3874.0], [1.68287232E12, 12031.6], [1.6828725E12, 15180.0], [1.68287238E12, 33231.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68287256E12, 37696.16], [1.68287244E12, 100035.0], [1.68287262E12, 64576.9], [1.68287232E12, 13586.48], [1.6828725E12, 137068.0], [1.68287238E12, 49951.24]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68287256E12, 13203.599999999999], [1.68287244E12, 63599.55], [1.68287262E12, 4025.0], [1.68287232E12, 12545.6], [1.6828725E12, 133692.1], [1.68287238E12, 43334.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68287256E12, 16.0], [1.68287244E12, 9.0], [1.68287262E12, 1035.0], [1.68287232E12, 79.0], [1.6828725E12, 1041.0], [1.68287238E12, 13.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68287256E12, 2912.0], [1.68287244E12, 6665.5], [1.68287262E12, 2594.5], [1.68287232E12, 8488.0], [1.6828725E12, 7699.0], [1.68287238E12, 13213.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287262E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 117718.0, "series": [{"data": [[2.0, 41086.0], [3.0, 3705.0], [4.0, 20320.0], [6.0, 20558.0], [7.0, 17100.0], [8.0, 18593.0], [9.0, 1292.0], [10.0, 30867.5], [11.0, 11201.0], [12.0, 1054.5], [13.0, 7863.5], [14.0, 8487.0], [15.0, 31093.0], [17.0, 16718.5], [19.0, 14025.5], [21.0, 5471.0], [22.0, 8499.0], [23.0, 13020.0], [24.0, 7439.5], [25.0, 107604.5], [26.0, 2296.0], [28.0, 6501.5], [31.0, 1072.0], [36.0, 9519.5], [39.0, 12861.0], [38.0, 17164.5], [43.0, 4353.5], [42.0, 5297.0], [45.0, 1109.0], [44.0, 2202.0], [47.0, 1111.0], [48.0, 2589.0], [54.0, 100032.0], [55.0, 3055.5], [57.0, 3915.0], [59.0, 4598.0], [62.0, 1120.0], [64.0, 1410.0], [67.0, 1563.0], [71.0, 49.0], [70.0, 1762.0], [69.0, 1092.0], [68.0, 1084.0], [73.0, 74.0], [77.0, 8364.0], [76.0, 6014.0], [79.0, 4995.0], [78.0, 1353.0], [87.0, 11906.5], [89.0, 5266.5], [90.0, 10134.0], [95.0, 10628.5], [92.0, 1544.0], [99.0, 40.0], [107.0, 12026.0], [106.0, 3186.0], [110.0, 8054.0], [108.0, 2978.0], [109.0, 3431.5], [114.0, 2150.5], [112.0, 1110.0], [118.0, 2724.0], [121.0, 6343.0], [125.0, 3498.0], [127.0, 3017.0], [131.0, 3785.0], [134.0, 7106.0], [135.0, 3954.0], [128.0, 1747.5], [129.0, 2531.0], [136.0, 2165.0], [143.0, 7672.0], [142.0, 2972.0], [145.0, 6122.0], [151.0, 6336.0], [154.0, 7031.0], [157.0, 5885.0], [162.0, 9413.5], [163.0, 6329.0], [165.0, 1861.0], [167.0, 1154.0], [173.0, 1545.0], [183.0, 15046.0], [177.0, 11583.0], [176.0, 7663.5], [178.0, 3983.5], [190.0, 7986.0], [189.0, 5512.0], [186.0, 3611.0], [191.0, 4924.0], [193.0, 14322.0], [197.0, 3176.0], [202.0, 10921.0], [207.0, 8094.0], [203.0, 12028.0], [201.0, 3359.0], [204.0, 3267.5], [213.0, 3986.0], [212.0, 6651.0], [209.0, 6478.0], [220.0, 9817.5], [223.0, 1342.0], [231.0, 9062.0], [239.0, 8872.0], [255.0, 2625.0], [256.0, 52.0], [270.0, 47.5], [284.0, 14655.0], [281.0, 5976.0], [294.0, 8359.0], [318.0, 7877.0], [310.0, 3081.0], [344.0, 10342.5], [363.0, 12256.0], [431.0, 11932.0], [438.0, 18294.0], [486.0, 15529.0], [528.0, 13621.0], [1.0, 1913.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 103643.0], [1.0, 117718.0], [73.0, 103698.0], [5.0, 117717.0], [26.0, 104824.0], [15.0, 103727.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 528.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 107604.5, "series": [{"data": [[2.0, 41086.0], [3.0, 3705.0], [4.0, 20320.0], [6.0, 20558.0], [7.0, 17100.0], [8.0, 18593.0], [9.0, 1292.0], [10.0, 30867.5], [11.0, 11201.0], [12.0, 1054.5], [13.0, 7863.5], [14.0, 8487.0], [15.0, 31092.0], [17.0, 16718.5], [19.0, 14025.5], [21.0, 5471.0], [22.0, 8499.0], [23.0, 13020.0], [24.0, 7439.5], [25.0, 107604.5], [26.0, 2296.0], [28.0, 6501.5], [31.0, 1072.0], [36.0, 9519.5], [39.0, 12861.0], [38.0, 17164.5], [43.0, 4353.5], [42.0, 5297.0], [45.0, 1109.0], [44.0, 2202.0], [47.0, 1111.0], [48.0, 2589.0], [54.0, 100031.5], [55.0, 3055.5], [57.0, 3915.0], [59.0, 4598.0], [62.0, 1120.0], [64.0, 1410.0], [67.0, 1563.0], [71.0, 49.0], [70.0, 1762.0], [69.0, 1092.0], [68.0, 1084.0], [73.0, 74.0], [77.0, 8364.0], [76.0, 6014.0], [79.0, 4995.0], [78.0, 1353.0], [87.0, 11906.5], [89.0, 5266.5], [90.0, 10134.0], [95.0, 10628.5], [92.0, 1544.0], [99.0, 40.0], [107.0, 12026.0], [106.0, 3186.0], [110.0, 8054.0], [108.0, 2978.0], [109.0, 3431.5], [114.0, 2150.5], [112.0, 1110.0], [118.0, 2724.0], [121.0, 6343.0], [125.0, 3498.0], [127.0, 3017.0], [131.0, 3785.0], [134.0, 7106.0], [135.0, 3954.0], [128.0, 1747.5], [129.0, 2531.0], [136.0, 2165.0], [143.0, 7672.0], [142.0, 2972.0], [145.0, 6122.0], [151.0, 6336.0], [154.0, 7031.0], [157.0, 5885.0], [162.0, 9413.5], [163.0, 6329.0], [165.0, 1861.0], [167.0, 1154.0], [173.0, 1545.0], [183.0, 15046.0], [177.0, 11583.0], [176.0, 7663.5], [178.0, 3983.5], [190.0, 7986.0], [189.0, 5512.0], [186.0, 3611.0], [191.0, 4924.0], [193.0, 14322.0], [197.0, 3176.0], [202.0, 10921.0], [207.0, 8094.0], [203.0, 12028.0], [201.0, 3359.0], [204.0, 3267.5], [213.0, 3986.0], [212.0, 6651.0], [209.0, 6478.0], [220.0, 9816.5], [223.0, 1342.0], [231.0, 9062.0], [239.0, 8872.0], [255.0, 2625.0], [256.0, 51.5], [270.0, 47.5], [284.0, 14655.0], [281.0, 5976.0], [294.0, 8359.0], [318.0, 7877.0], [310.0, 3081.0], [344.0, 10342.5], [363.0, 12256.0], [431.0, 11932.0], [438.0, 18294.0], [486.0, 15529.0], [528.0, 13621.0], [1.0, 1912.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 0.0], [1.0, 0.0], [73.0, 0.0], [5.0, 0.0], [26.0, 0.0], [15.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 528.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 32.38333333333333, "minX": 1.68287232E12, "maxY": 72.58333333333333, "series": [{"data": [[1.68287256E12, 58.06666666666667], [1.68287244E12, 67.0], [1.68287262E12, 43.55], [1.68287232E12, 32.38333333333333], [1.6828725E12, 61.416666666666664], [1.68287238E12, 72.58333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287262E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68287232E12, "maxY": 72.41666666666667, "series": [{"data": [[1.68287256E12, 69.71666666666667], [1.68287244E12, 70.8], [1.68287262E12, 44.06666666666667], [1.68287232E12, 14.183333333333334], [1.6828725E12, 63.28333333333333], [1.68287238E12, 72.41666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68287244E12, 0.4166666666666667], [1.68287262E12, 0.016666666666666666], [1.6828725E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287262E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68287232E12, "maxY": 72.41666666666667, "series": [{"data": [[1.68287256E12, 69.71666666666667], [1.68287244E12, 70.8], [1.68287262E12, 44.06666666666667], [1.68287232E12, 14.183333333333334], [1.6828725E12, 63.28333333333333], [1.68287238E12, 72.41666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68287244E12, 0.4166666666666667], [1.68287262E12, 0.016666666666666666], [1.6828725E12, 0.1]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287262E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68287232E12, "maxY": 72.41666666666667, "series": [{"data": [[1.68287256E12, 69.71666666666667], [1.68287244E12, 70.8], [1.68287262E12, 44.06666666666667], [1.68287232E12, 14.183333333333334], [1.6828725E12, 63.28333333333333], [1.68287238E12, 72.41666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68287244E12, 0.4166666666666667], [1.68287262E12, 0.016666666666666666], [1.6828725E12, 0.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287262E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

