/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 247719.0, "series": [{"data": [[0.0, 5.0], [0.1, 15.0], [0.2, 18.0], [0.3, 20.0], [0.4, 22.0], [0.5, 23.0], [0.6, 24.0], [0.7, 25.0], [0.8, 26.0], [0.9, 27.0], [1.0, 28.0], [1.1, 29.0], [1.2, 30.0], [1.3, 31.0], [1.4, 31.0], [1.5, 32.0], [1.6, 33.0], [1.7, 33.0], [1.8, 34.0], [1.9, 35.0], [2.0, 35.0], [2.1, 36.0], [2.2, 36.0], [2.3, 37.0], [2.4, 37.0], [2.5, 38.0], [2.6, 38.0], [2.7, 39.0], [2.8, 39.0], [2.9, 40.0], [3.0, 40.0], [3.1, 41.0], [3.2, 41.0], [3.3, 42.0], [3.4, 42.0], [3.5, 43.0], [3.6, 43.0], [3.7, 44.0], [3.8, 44.0], [3.9, 45.0], [4.0, 45.0], [4.1, 46.0], [4.2, 46.0], [4.3, 46.0], [4.4, 47.0], [4.5, 47.0], [4.6, 48.0], [4.7, 48.0], [4.8, 49.0], [4.9, 49.0], [5.0, 50.0], [5.1, 50.0], [5.2, 50.0], [5.3, 51.0], [5.4, 51.0], [5.5, 51.0], [5.6, 52.0], [5.7, 52.0], [5.8, 53.0], [5.9, 54.0], [6.0, 54.0], [6.1, 54.0], [6.2, 55.0], [6.3, 55.0], [6.4, 56.0], [6.5, 56.0], [6.6, 57.0], [6.7, 57.0], [6.8, 58.0], [6.9, 58.0], [7.0, 59.0], [7.1, 59.0], [7.2, 60.0], [7.3, 60.0], [7.4, 61.0], [7.5, 62.0], [7.6, 62.0], [7.7, 63.0], [7.8, 63.0], [7.9, 64.0], [8.0, 64.0], [8.1, 65.0], [8.2, 65.0], [8.3, 66.0], [8.4, 67.0], [8.5, 67.0], [8.6, 68.0], [8.7, 68.0], [8.8, 69.0], [8.9, 69.0], [9.0, 69.0], [9.1, 70.0], [9.2, 71.0], [9.3, 71.0], [9.4, 72.0], [9.5, 72.0], [9.6, 73.0], [9.7, 73.0], [9.8, 74.0], [9.9, 75.0], [10.0, 75.0], [10.1, 76.0], [10.2, 76.0], [10.3, 77.0], [10.4, 77.0], [10.5, 78.0], [10.6, 78.0], [10.7, 79.0], [10.8, 81.0], [10.9, 81.0], [11.0, 82.0], [11.1, 84.0], [11.2, 85.0], [11.3, 86.0], [11.4, 86.0], [11.5, 87.0], [11.6, 88.0], [11.7, 89.0], [11.8, 89.0], [11.9, 90.0], [12.0, 91.0], [12.1, 91.0], [12.2, 92.0], [12.3, 92.0], [12.4, 93.0], [12.5, 94.0], [12.6, 95.0], [12.7, 96.0], [12.8, 97.0], [12.9, 98.0], [13.0, 99.0], [13.1, 100.0], [13.2, 101.0], [13.3, 102.0], [13.4, 103.0], [13.5, 103.0], [13.6, 104.0], [13.7, 104.0], [13.8, 105.0], [13.9, 105.0], [14.0, 106.0], [14.1, 106.0], [14.2, 107.0], [14.3, 109.0], [14.4, 110.0], [14.5, 110.0], [14.6, 111.0], [14.7, 112.0], [14.8, 112.0], [14.9, 113.0], [15.0, 113.0], [15.1, 114.0], [15.2, 115.0], [15.3, 115.0], [15.4, 116.0], [15.5, 117.0], [15.6, 117.0], [15.7, 118.0], [15.8, 119.0], [15.9, 119.0], [16.0, 120.0], [16.1, 121.0], [16.2, 121.0], [16.3, 122.0], [16.4, 123.0], [16.5, 124.0], [16.6, 125.0], [16.7, 126.0], [16.8, 126.0], [16.9, 127.0], [17.0, 127.0], [17.1, 128.0], [17.2, 130.0], [17.3, 132.0], [17.4, 133.0], [17.5, 134.0], [17.6, 134.0], [17.7, 136.0], [17.8, 137.0], [17.9, 138.0], [18.0, 140.0], [18.1, 141.0], [18.2, 143.0], [18.3, 144.0], [18.4, 145.0], [18.5, 146.0], [18.6, 146.0], [18.7, 147.0], [18.8, 148.0], [18.9, 149.0], [19.0, 150.0], [19.1, 151.0], [19.2, 152.0], [19.3, 153.0], [19.4, 154.0], [19.5, 155.0], [19.6, 156.0], [19.7, 157.0], [19.8, 158.0], [19.9, 160.0], [20.0, 161.0], [20.1, 162.0], [20.2, 163.0], [20.3, 165.0], [20.4, 165.0], [20.5, 166.0], [20.6, 167.0], [20.7, 167.0], [20.8, 168.0], [20.9, 169.0], [21.0, 169.0], [21.1, 170.0], [21.2, 172.0], [21.3, 172.0], [21.4, 173.0], [21.5, 174.0], [21.6, 174.0], [21.7, 175.0], [21.8, 175.0], [21.9, 176.0], [22.0, 177.0], [22.1, 178.0], [22.2, 178.0], [22.3, 179.0], [22.4, 180.0], [22.5, 180.0], [22.6, 181.0], [22.7, 182.0], [22.8, 182.0], [22.9, 183.0], [23.0, 183.0], [23.1, 184.0], [23.2, 185.0], [23.3, 185.0], [23.4, 185.0], [23.5, 186.0], [23.6, 187.0], [23.7, 188.0], [23.8, 189.0], [23.9, 190.0], [24.0, 190.0], [24.1, 191.0], [24.2, 192.0], [24.3, 192.0], [24.4, 193.0], [24.5, 194.0], [24.6, 195.0], [24.7, 196.0], [24.8, 197.0], [24.9, 198.0], [25.0, 199.0], [25.1, 199.0], [25.2, 200.0], [25.3, 200.0], [25.4, 201.0], [25.5, 202.0], [25.6, 202.0], [25.7, 202.0], [25.8, 203.0], [25.9, 203.0], [26.0, 204.0], [26.1, 205.0], [26.2, 205.0], [26.3, 206.0], [26.4, 206.0], [26.5, 207.0], [26.6, 207.0], [26.7, 208.0], [26.8, 209.0], [26.9, 210.0], [27.0, 210.0], [27.1, 211.0], [27.2, 211.0], [27.3, 211.0], [27.4, 212.0], [27.5, 213.0], [27.6, 213.0], [27.7, 214.0], [27.8, 215.0], [27.9, 216.0], [28.0, 216.0], [28.1, 217.0], [28.2, 217.0], [28.3, 218.0], [28.4, 219.0], [28.5, 219.0], [28.6, 220.0], [28.7, 220.0], [28.8, 221.0], [28.9, 222.0], [29.0, 223.0], [29.1, 224.0], [29.2, 225.0], [29.3, 226.0], [29.4, 227.0], [29.5, 227.0], [29.6, 228.0], [29.7, 229.0], [29.8, 230.0], [29.9, 231.0], [30.0, 231.0], [30.1, 232.0], [30.2, 233.0], [30.3, 234.0], [30.4, 236.0], [30.5, 237.0], [30.6, 239.0], [30.7, 239.0], [30.8, 240.0], [30.9, 242.0], [31.0, 242.0], [31.1, 243.0], [31.2, 244.0], [31.3, 245.0], [31.4, 246.0], [31.5, 247.0], [31.6, 248.0], [31.7, 249.0], [31.8, 250.0], [31.9, 251.0], [32.0, 252.0], [32.1, 253.0], [32.2, 254.0], [32.3, 255.0], [32.4, 255.0], [32.5, 257.0], [32.6, 259.0], [32.7, 260.0], [32.8, 261.0], [32.9, 261.0], [33.0, 262.0], [33.1, 262.0], [33.2, 263.0], [33.3, 264.0], [33.4, 265.0], [33.5, 266.0], [33.6, 266.0], [33.7, 267.0], [33.8, 268.0], [33.9, 268.0], [34.0, 269.0], [34.1, 269.0], [34.2, 269.0], [34.3, 270.0], [34.4, 271.0], [34.5, 271.0], [34.6, 272.0], [34.7, 273.0], [34.8, 274.0], [34.9, 274.0], [35.0, 275.0], [35.1, 276.0], [35.2, 279.0], [35.3, 279.0], [35.4, 280.0], [35.5, 280.0], [35.6, 281.0], [35.7, 281.0], [35.8, 282.0], [35.9, 282.0], [36.0, 283.0], [36.1, 283.0], [36.2, 284.0], [36.3, 284.0], [36.4, 286.0], [36.5, 287.0], [36.6, 288.0], [36.7, 289.0], [36.8, 291.0], [36.9, 293.0], [37.0, 295.0], [37.1, 296.0], [37.2, 297.0], [37.3, 298.0], [37.4, 299.0], [37.5, 300.0], [37.6, 301.0], [37.7, 302.0], [37.8, 303.0], [37.9, 305.0], [38.0, 307.0], [38.1, 307.0], [38.2, 308.0], [38.3, 309.0], [38.4, 311.0], [38.5, 313.0], [38.6, 314.0], [38.7, 316.0], [38.8, 318.0], [38.9, 319.0], [39.0, 320.0], [39.1, 323.0], [39.2, 325.0], [39.3, 327.0], [39.4, 329.0], [39.5, 330.0], [39.6, 331.0], [39.7, 332.0], [39.8, 333.0], [39.9, 335.0], [40.0, 336.0], [40.1, 337.0], [40.2, 337.0], [40.3, 338.0], [40.4, 338.0], [40.5, 339.0], [40.6, 340.0], [40.7, 341.0], [40.8, 342.0], [40.9, 342.0], [41.0, 343.0], [41.1, 343.0], [41.2, 344.0], [41.3, 345.0], [41.4, 346.0], [41.5, 347.0], [41.6, 347.0], [41.7, 348.0], [41.8, 349.0], [41.9, 349.0], [42.0, 350.0], [42.1, 351.0], [42.2, 352.0], [42.3, 352.0], [42.4, 353.0], [42.5, 354.0], [42.6, 355.0], [42.7, 356.0], [42.8, 356.0], [42.9, 357.0], [43.0, 358.0], [43.1, 358.0], [43.2, 359.0], [43.3, 360.0], [43.4, 361.0], [43.5, 361.0], [43.6, 362.0], [43.7, 363.0], [43.8, 363.0], [43.9, 365.0], [44.0, 366.0], [44.1, 367.0], [44.2, 368.0], [44.3, 369.0], [44.4, 370.0], [44.5, 371.0], [44.6, 371.0], [44.7, 372.0], [44.8, 372.0], [44.9, 372.0], [45.0, 372.0], [45.1, 373.0], [45.2, 373.0], [45.3, 373.0], [45.4, 373.0], [45.5, 374.0], [45.6, 374.0], [45.7, 375.0], [45.8, 375.0], [45.9, 376.0], [46.0, 377.0], [46.1, 378.0], [46.2, 379.0], [46.3, 379.0], [46.4, 380.0], [46.5, 380.0], [46.6, 381.0], [46.7, 381.0], [46.8, 382.0], [46.9, 382.0], [47.0, 382.0], [47.1, 383.0], [47.2, 383.0], [47.3, 384.0], [47.4, 384.0], [47.5, 384.0], [47.6, 385.0], [47.7, 385.0], [47.8, 386.0], [47.9, 386.0], [48.0, 386.0], [48.1, 387.0], [48.2, 387.0], [48.3, 388.0], [48.4, 388.0], [48.5, 389.0], [48.6, 389.0], [48.7, 390.0], [48.8, 390.0], [48.9, 390.0], [49.0, 391.0], [49.1, 391.0], [49.2, 392.0], [49.3, 392.0], [49.4, 393.0], [49.5, 394.0], [49.6, 394.0], [49.7, 395.0], [49.8, 395.0], [49.9, 396.0], [50.0, 396.0], [50.1, 396.0], [50.2, 397.0], [50.3, 397.0], [50.4, 397.0], [50.5, 398.0], [50.6, 398.0], [50.7, 398.0], [50.8, 398.0], [50.9, 399.0], [51.0, 399.0], [51.1, 399.0], [51.2, 400.0], [51.3, 400.0], [51.4, 400.0], [51.5, 401.0], [51.6, 401.0], [51.7, 401.0], [51.8, 401.0], [51.9, 402.0], [52.0, 402.0], [52.1, 402.0], [52.2, 403.0], [52.3, 403.0], [52.4, 404.0], [52.5, 404.0], [52.6, 405.0], [52.7, 405.0], [52.8, 406.0], [52.9, 406.0], [53.0, 406.0], [53.1, 407.0], [53.2, 407.0], [53.3, 407.0], [53.4, 407.0], [53.5, 407.0], [53.6, 408.0], [53.7, 408.0], [53.8, 408.0], [53.9, 408.0], [54.0, 408.0], [54.1, 409.0], [54.2, 409.0], [54.3, 409.0], [54.4, 409.0], [54.5, 409.0], [54.6, 410.0], [54.7, 410.0], [54.8, 410.0], [54.9, 410.0], [55.0, 410.0], [55.1, 411.0], [55.2, 411.0], [55.3, 411.0], [55.4, 411.0], [55.5, 412.0], [55.6, 412.0], [55.7, 412.0], [55.8, 413.0], [55.9, 413.0], [56.0, 413.0], [56.1, 414.0], [56.2, 414.0], [56.3, 414.0], [56.4, 415.0], [56.5, 415.0], [56.6, 415.0], [56.7, 415.0], [56.8, 416.0], [56.9, 416.0], [57.0, 416.0], [57.1, 416.0], [57.2, 416.0], [57.3, 417.0], [57.4, 417.0], [57.5, 417.0], [57.6, 417.0], [57.7, 418.0], [57.8, 418.0], [57.9, 418.0], [58.0, 419.0], [58.1, 419.0], [58.2, 419.0], [58.3, 419.0], [58.4, 420.0], [58.5, 420.0], [58.6, 420.0], [58.7, 420.0], [58.8, 421.0], [58.9, 421.0], [59.0, 421.0], [59.1, 421.0], [59.2, 422.0], [59.3, 422.0], [59.4, 422.0], [59.5, 422.0], [59.6, 422.0], [59.7, 422.0], [59.8, 423.0], [59.9, 423.0], [60.0, 423.0], [60.1, 423.0], [60.2, 423.0], [60.3, 423.0], [60.4, 424.0], [60.5, 424.0], [60.6, 424.0], [60.7, 424.0], [60.8, 424.0], [60.9, 425.0], [61.0, 425.0], [61.1, 425.0], [61.2, 425.0], [61.3, 426.0], [61.4, 426.0], [61.5, 426.0], [61.6, 427.0], [61.7, 427.0], [61.8, 427.0], [61.9, 428.0], [62.0, 429.0], [62.1, 429.0], [62.2, 430.0], [62.3, 430.0], [62.4, 431.0], [62.5, 431.0], [62.6, 432.0], [62.7, 432.0], [62.8, 432.0], [62.9, 433.0], [63.0, 433.0], [63.1, 433.0], [63.2, 434.0], [63.3, 434.0], [63.4, 434.0], [63.5, 435.0], [63.6, 435.0], [63.7, 435.0], [63.8, 436.0], [63.9, 436.0], [64.0, 436.0], [64.1, 437.0], [64.2, 437.0], [64.3, 438.0], [64.4, 438.0], [64.5, 439.0], [64.6, 439.0], [64.7, 440.0], [64.8, 440.0], [64.9, 440.0], [65.0, 441.0], [65.1, 441.0], [65.2, 441.0], [65.3, 442.0], [65.4, 442.0], [65.5, 443.0], [65.6, 443.0], [65.7, 443.0], [65.8, 444.0], [65.9, 444.0], [66.0, 445.0], [66.1, 445.0], [66.2, 445.0], [66.3, 446.0], [66.4, 446.0], [66.5, 447.0], [66.6, 447.0], [66.7, 448.0], [66.8, 448.0], [66.9, 449.0], [67.0, 449.0], [67.1, 450.0], [67.2, 450.0], [67.3, 451.0], [67.4, 451.0], [67.5, 451.0], [67.6, 452.0], [67.7, 452.0], [67.8, 452.0], [67.9, 452.0], [68.0, 453.0], [68.1, 453.0], [68.2, 453.0], [68.3, 453.0], [68.4, 454.0], [68.5, 454.0], [68.6, 455.0], [68.7, 455.0], [68.8, 455.0], [68.9, 456.0], [69.0, 456.0], [69.1, 456.0], [69.2, 457.0], [69.3, 457.0], [69.4, 458.0], [69.5, 459.0], [69.6, 460.0], [69.7, 461.0], [69.8, 461.0], [69.9, 463.0], [70.0, 464.0], [70.1, 465.0], [70.2, 466.0], [70.3, 467.0], [70.4, 468.0], [70.5, 469.0], [70.6, 469.0], [70.7, 470.0], [70.8, 472.0], [70.9, 473.0], [71.0, 474.0], [71.1, 476.0], [71.2, 477.0], [71.3, 477.0], [71.4, 478.0], [71.5, 479.0], [71.6, 480.0], [71.7, 481.0], [71.8, 482.0], [71.9, 483.0], [72.0, 484.0], [72.1, 484.0], [72.2, 485.0], [72.3, 486.0], [72.4, 488.0], [72.5, 489.0], [72.6, 493.0], [72.7, 495.0], [72.8, 500.0], [72.9, 502.0], [73.0, 504.0], [73.1, 509.0], [73.2, 511.0], [73.3, 512.0], [73.4, 513.0], [73.5, 515.0], [73.6, 515.0], [73.7, 516.0], [73.8, 517.0], [73.9, 521.0], [74.0, 528.0], [74.1, 528.0], [74.2, 530.0], [74.3, 535.0], [74.4, 537.0], [74.5, 540.0], [74.6, 541.0], [74.7, 543.0], [74.8, 561.0], [74.9, 564.0], [75.0, 565.0], [75.1, 566.0], [75.2, 568.0], [75.3, 569.0], [75.4, 570.0], [75.5, 572.0], [75.6, 576.0], [75.7, 587.0], [75.8, 589.0], [75.9, 590.0], [76.0, 591.0], [76.1, 591.0], [76.2, 592.0], [76.3, 593.0], [76.4, 595.0], [76.5, 596.0], [76.6, 596.0], [76.7, 598.0], [76.8, 600.0], [76.9, 601.0], [77.0, 603.0], [77.1, 605.0], [77.2, 607.0], [77.3, 608.0], [77.4, 609.0], [77.5, 614.0], [77.6, 616.0], [77.7, 618.0], [77.8, 621.0], [77.9, 627.0], [78.0, 630.0], [78.1, 634.0], [78.2, 637.0], [78.3, 645.0], [78.4, 647.0], [78.5, 648.0], [78.6, 649.0], [78.7, 652.0], [78.8, 654.0], [78.9, 654.0], [79.0, 656.0], [79.1, 657.0], [79.2, 660.0], [79.3, 661.0], [79.4, 669.0], [79.5, 675.0], [79.6, 676.0], [79.7, 678.0], [79.8, 680.0], [79.9, 684.0], [80.0, 686.0], [80.1, 688.0], [80.2, 690.0], [80.3, 694.0], [80.4, 702.0], [80.5, 704.0], [80.6, 708.0], [80.7, 710.0], [80.8, 712.0], [80.9, 712.0], [81.0, 713.0], [81.1, 714.0], [81.2, 714.0], [81.3, 715.0], [81.4, 716.0], [81.5, 717.0], [81.6, 718.0], [81.7, 719.0], [81.8, 719.0], [81.9, 720.0], [82.0, 721.0], [82.1, 721.0], [82.2, 722.0], [82.3, 723.0], [82.4, 724.0], [82.5, 724.0], [82.6, 725.0], [82.7, 726.0], [82.8, 727.0], [82.9, 728.0], [83.0, 728.0], [83.1, 729.0], [83.2, 731.0], [83.3, 733.0], [83.4, 739.0], [83.5, 743.0], [83.6, 745.0], [83.7, 746.0], [83.8, 749.0], [83.9, 754.0], [84.0, 758.0], [84.1, 762.0], [84.2, 764.0], [84.3, 765.0], [84.4, 766.0], [84.5, 768.0], [84.6, 772.0], [84.7, 777.0], [84.8, 778.0], [84.9, 779.0], [85.0, 781.0], [85.1, 782.0], [85.2, 783.0], [85.3, 784.0], [85.4, 785.0], [85.5, 785.0], [85.6, 786.0], [85.7, 788.0], [85.8, 789.0], [85.9, 790.0], [86.0, 792.0], [86.1, 794.0], [86.2, 796.0], [86.3, 797.0], [86.4, 805.0], [86.5, 810.0], [86.6, 817.0], [86.7, 819.0], [86.8, 821.0], [86.9, 822.0], [87.0, 823.0], [87.1, 825.0], [87.2, 837.0], [87.3, 843.0], [87.4, 850.0], [87.5, 853.0], [87.6, 858.0], [87.7, 869.0], [87.8, 887.0], [87.9, 894.0], [88.0, 900.0], [88.1, 927.0], [88.2, 930.0], [88.3, 932.0], [88.4, 933.0], [88.5, 938.0], [88.6, 943.0], [88.7, 944.0], [88.8, 947.0], [88.9, 953.0], [89.0, 962.0], [89.1, 978.0], [89.2, 981.0], [89.3, 983.0], [89.4, 985.0], [89.5, 986.0], [89.6, 987.0], [89.7, 988.0], [89.8, 989.0], [89.9, 992.0], [90.0, 995.0], [90.1, 997.0], [90.2, 1019.0], [90.3, 1093.0], [90.4, 1195.0], [90.5, 1310.0], [90.6, 1560.0], [90.7, 1799.0], [90.8, 1990.0], [90.9, 2151.0], [91.0, 2468.0], [91.1, 2659.0], [91.2, 3213.0], [91.3, 3550.0], [91.4, 3809.0], [91.5, 4466.0], [91.6, 4960.0], [91.7, 5118.0], [91.8, 5272.0], [91.9, 5617.0], [92.0, 6201.0], [92.1, 6841.0], [92.2, 7078.0], [92.3, 7425.0], [92.4, 7596.0], [92.5, 7749.0], [92.6, 7900.0], [92.7, 8029.0], [92.8, 8043.0], [92.9, 8109.0], [93.0, 8176.0], [93.1, 8181.0], [93.2, 8268.0], [93.3, 8383.0], [93.4, 8619.0], [93.5, 8790.0], [93.6, 8941.0], [93.7, 8948.0], [93.8, 8978.0], [93.9, 9048.0], [94.0, 9135.0], [94.1, 9150.0], [94.2, 9231.0], [94.3, 9258.0], [94.4, 9302.0], [94.5, 9368.0], [94.6, 9440.0], [94.7, 9486.0], [94.8, 9529.0], [94.9, 9616.0], [95.0, 9782.0], [95.1, 9893.0], [95.2, 9981.0], [95.3, 10060.0], [95.4, 10146.0], [95.5, 10204.0], [95.6, 10371.0], [95.7, 10429.0], [95.8, 10566.0], [95.9, 10672.0], [96.0, 11153.0], [96.1, 11522.0], [96.2, 12207.0], [96.3, 12926.0], [96.4, 13171.0], [96.5, 13525.0], [96.6, 13774.0], [96.7, 14083.0], [96.8, 14872.0], [96.9, 15056.0], [97.0, 15483.0], [97.1, 17478.0], [97.2, 18244.0], [97.3, 19414.0], [97.4, 20372.0], [97.5, 22499.0], [97.6, 24205.0], [97.7, 27674.0], [97.8, 31119.0], [97.9, 31872.0], [98.0, 32500.0], [98.1, 34437.0], [98.2, 36171.0], [98.3, 37324.0], [98.4, 38705.0], [98.5, 41329.0], [98.6, 44134.0], [98.7, 53360.0], [98.8, 63390.0], [98.9, 65353.0], [99.0, 70884.0], [99.1, 78514.0], [99.2, 94630.0], [99.3, 100457.0], [99.4, 100720.0], [99.5, 109528.0], [99.6, 128936.0], [99.7, 130995.0], [99.8, 131907.0], [99.9, 132985.0], [100.0, 247719.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 52275.0, "series": [{"data": [[0.0, 31444.0], [141600.0, 1.0], [132900.0, 9.0], [139300.0, 11.0], [66700.0, 2.0], [69900.0, 1.0], [76300.0, 2.0], [79500.0, 3.0], [85900.0, 1.0], [111500.0, 2.0], [127500.0, 44.0], [137000.0, 1.0], [100.0, 29278.0], [32900.0, 5.0], [134700.0, 12.0], [34500.0, 2.0], [36100.0, 3.0], [141100.0, 1.0], [37700.0, 18.0], [40900.0, 8.0], [42500.0, 1.0], [44100.0, 17.0], [45700.0, 2.0], [47300.0, 9.0], [48900.0, 2.0], [200.0, 29760.0], [52100.0, 2.0], [53700.0, 1.0], [56900.0, 2.0], [55300.0, 2.0], [58500.0, 2.0], [63300.0, 52.0], [64900.0, 1.0], [65800.0, 1.0], [69000.0, 1.0], [72200.0, 1.0], [300.0, 33033.0], [75400.0, 2.0], [81800.0, 1.0], [85000.0, 2.0], [94600.0, 1.0], [101000.0, 11.0], [400.0, 52275.0], [110600.0, 29.0], [500.0, 9713.0], [129800.0, 32.0], [132400.0, 19.0], [600.0, 8614.0], [700.0, 14471.0], [800.0, 3968.0], [900.0, 5161.0], [1000.0, 446.0], [1100.0, 246.0], [1200.0, 182.0], [1300.0, 206.0], [1400.0, 30.0], [1500.0, 100.0], [1600.0, 10.0], [1700.0, 155.0], [1800.0, 131.0], [1900.0, 119.0], [2000.0, 217.0], [136500.0, 7.0], [2100.0, 52.0], [2200.0, 88.0], [2300.0, 77.0], [2400.0, 50.0], [2500.0, 108.0], [2600.0, 151.0], [2700.0, 46.0], [2800.0, 38.0], [2900.0, 3.0], [3000.0, 50.0], [3100.0, 60.0], [3200.0, 124.0], [3300.0, 61.0], [3400.0, 35.0], [3500.0, 118.0], [3600.0, 81.0], [3700.0, 31.0], [3800.0, 68.0], [3900.0, 8.0], [4000.0, 68.0], [4200.0, 71.0], [68100.0, 1.0], [4600.0, 16.0], [4400.0, 47.0], [74500.0, 6.0], [77700.0, 2.0], [4800.0, 15.0], [5000.0, 172.0], [80900.0, 5.0], [5200.0, 60.0], [84100.0, 2.0], [5400.0, 79.0], [5600.0, 74.0], [5800.0, 8.0], [6000.0, 51.0], [100100.0, 41.0], [6200.0, 19.0], [6400.0, 103.0], [6600.0, 22.0], [6800.0, 133.0], [7000.0, 134.0], [7400.0, 155.0], [7200.0, 54.0], [7600.0, 162.0], [7800.0, 116.0], [8000.0, 496.0], [128900.0, 14.0], [8400.0, 27.0], [8800.0, 166.0], [9200.0, 528.0], [140600.0, 2.0], [9600.0, 172.0], [10000.0, 212.0], [10400.0, 288.0], [10800.0, 104.0], [11200.0, 63.0], [11600.0, 9.0], [12000.0, 85.0], [12400.0, 11.0], [13200.0, 86.0], [12800.0, 136.0], [13600.0, 91.0], [14000.0, 51.0], [14800.0, 53.0], [14400.0, 9.0], [15200.0, 49.0], [15600.0, 2.0], [16000.0, 31.0], [16800.0, 16.0], [18400.0, 8.0], [17600.0, 6.0], [19200.0, 30.0], [20000.0, 5.0], [20800.0, 3.0], [21600.0, 15.0], [22400.0, 61.0], [24000.0, 4.0], [25600.0, 1.0], [27200.0, 2.0], [28000.0, 23.0], [30400.0, 1.0], [31200.0, 55.0], [32000.0, 13.0], [131900.0, 27.0], [33600.0, 5.0], [36800.0, 11.0], [38400.0, 2.0], [43200.0, 1.0], [44800.0, 4.0], [46400.0, 1.0], [48000.0, 1.0], [52800.0, 2.0], [51200.0, 2.0], [54400.0, 2.0], [221500.0, 1.0], [56000.0, 3.0], [59200.0, 1.0], [57600.0, 1.0], [64000.0, 4.0], [67200.0, 2.0], [70400.0, 8.0], [80000.0, 5.0], [89600.0, 1.0], [99200.0, 1.0], [105600.0, 2.0], [132100.0, 7.0], [67100.0, 3.0], [73500.0, 1.0], [70300.0, 23.0], [86300.0, 1.0], [99100.0, 3.0], [127900.0, 21.0], [33100.0, 10.0], [34700.0, 24.0], [36300.0, 8.0], [37900.0, 2.0], [39500.0, 36.0], [41100.0, 20.0], [42700.0, 65.0], [44300.0, 5.0], [45900.0, 1.0], [49100.0, 3.0], [50700.0, 2.0], [210700.0, 1.0], [52300.0, 1.0], [53900.0, 3.0], [57100.0, 3.0], [58700.0, 2.0], [60300.0, 1.0], [61900.0, 2.0], [63500.0, 29.0], [65100.0, 10.0], [66200.0, 3.0], [69400.0, 5.0], [72600.0, 3.0], [75800.0, 2.0], [79000.0, 27.0], [82200.0, 1.0], [85400.0, 3.0], [91800.0, 1.0], [107800.0, 1.0], [131600.0, 20.0], [135700.0, 4.0], [68500.0, 2.0], [71700.0, 5.0], [84500.0, 3.0], [100500.0, 42.0], [129300.0, 15.0], [16900.0, 5.0], [17700.0, 40.0], [19300.0, 35.0], [18500.0, 8.0], [20100.0, 15.0], [20900.0, 6.0], [22500.0, 66.0], [21700.0, 1.0], [23300.0, 4.0], [24100.0, 18.0], [24900.0, 3.0], [26500.0, 4.0], [25700.0, 4.0], [27300.0, 3.0], [28100.0, 6.0], [30500.0, 8.0], [29700.0, 1.0], [31300.0, 15.0], [32100.0, 4.0], [131100.0, 1.0], [33800.0, 1.0], [35400.0, 17.0], [37000.0, 6.0], [38600.0, 7.0], [40200.0, 10.0], [156700.0, 1.0], [41800.0, 5.0], [45000.0, 2.0], [46600.0, 1.0], [48200.0, 8.0], [49800.0, 2.0], [53000.0, 2.0], [51400.0, 2.0], [54600.0, 1.0], [56200.0, 6.0], [57800.0, 2.0], [59400.0, 1.0], [61000.0, 1.0], [62600.0, 1.0], [64200.0, 17.0], [67600.0, 4.0], [70800.0, 25.0], [74000.0, 1.0], [83600.0, 1.0], [102800.0, 1.0], [128400.0, 2.0], [136800.0, 1.0], [207200.0, 1.0], [134500.0, 5.0], [67500.0, 6.0], [70700.0, 16.0], [77100.0, 3.0], [73900.0, 1.0], [83500.0, 4.0], [86700.0, 1.0], [89900.0, 1.0], [93100.0, 1.0], [102700.0, 1.0], [115500.0, 1.0], [128300.0, 4.0], [132200.0, 12.0], [136300.0, 6.0], [33300.0, 1.0], [36500.0, 27.0], [142700.0, 1.0], [34900.0, 4.0], [38100.0, 43.0], [39700.0, 9.0], [41300.0, 24.0], [42900.0, 8.0], [44500.0, 25.0], [46100.0, 2.0], [47700.0, 3.0], [50900.0, 2.0], [52500.0, 2.0], [58900.0, 15.0], [60500.0, 2.0], [62100.0, 2.0], [65300.0, 8.0], [66600.0, 4.0], [73000.0, 34.0], [69800.0, 1.0], [76200.0, 2.0], [85800.0, 2.0], [89000.0, 1.0], [92200.0, 1.0], [101800.0, 1.0], [98600.0, 1.0], [105000.0, 10.0], [121000.0, 1.0], [127400.0, 2.0], [130600.0, 52.0], [68900.0, 1.0], [65700.0, 1.0], [72100.0, 2.0], [75300.0, 5.0], [81700.0, 1.0], [78500.0, 1.0], [97700.0, 2.0], [129700.0, 16.0], [8500.0, 69.0], [8900.0, 657.0], [9300.0, 335.0], [9700.0, 132.0], [10100.0, 406.0], [10500.0, 211.0], [10900.0, 13.0], [11700.0, 40.0], [11300.0, 73.0], [12100.0, 59.0], [12500.0, 12.0], [13300.0, 64.0], [12900.0, 132.0], [13700.0, 136.0], [14100.0, 29.0], [14500.0, 34.0], [14900.0, 149.0], [15300.0, 59.0], [15700.0, 17.0], [16100.0, 1.0], [17000.0, 2.0], [17800.0, 9.0], [19400.0, 88.0], [18600.0, 1.0], [20200.0, 21.0], [21000.0, 5.0], [21800.0, 3.0], [23400.0, 44.0], [22600.0, 8.0], [24200.0, 57.0], [25000.0, 13.0], [25800.0, 2.0], [26600.0, 37.0], [27400.0, 4.0], [28200.0, 1.0], [29000.0, 2.0], [29800.0, 4.0], [30600.0, 7.0], [31400.0, 43.0], [32200.0, 2.0], [34000.0, 2.0], [35600.0, 14.0], [37200.0, 58.0], [40400.0, 7.0], [42000.0, 3.0], [43600.0, 3.0], [46800.0, 2.0], [45200.0, 2.0], [48400.0, 5.0], [50000.0, 1.0], [53200.0, 2.0], [56400.0, 2.0], [58000.0, 2.0], [61200.0, 1.0], [59600.0, 1.0], [64400.0, 20.0], [71200.0, 1.0], [77600.0, 2.0], [74400.0, 2.0], [80800.0, 3.0], [90400.0, 2.0], [93600.0, 1.0], [100000.0, 63.0], [210500.0, 1.0], [74300.0, 6.0], [80700.0, 1.0], [93500.0, 2.0], [90300.0, 1.0], [96700.0, 3.0], [109500.0, 52.0], [122300.0, 1.0], [131400.0, 63.0], [33500.0, 18.0], [36700.0, 37.0], [35100.0, 2.0], [38300.0, 6.0], [39900.0, 4.0], [41500.0, 2.0], [44700.0, 18.0], [43100.0, 1.0], [47900.0, 4.0], [51100.0, 8.0], [49500.0, 1.0], [54300.0, 1.0], [55900.0, 2.0], [57500.0, 11.0], [59100.0, 5.0], [65500.0, 1.0], [67000.0, 3.0], [70200.0, 4.0], [76600.0, 2.0], [83000.0, 1.0], [86200.0, 2.0], [105400.0, 2.0], [108600.0, 4.0], [118200.0, 1.0], [131000.0, 2.0], [127800.0, 19.0], [133200.0, 10.0], [139600.0, 2.0], [229200.0, 2.0], [69300.0, 4.0], [66100.0, 3.0], [72500.0, 3.0], [75700.0, 7.0], [78900.0, 19.0], [98100.0, 2.0], [101300.0, 6.0], [107700.0, 1.0], [130100.0, 5.0], [141400.0, 1.0], [17100.0, 9.0], [17900.0, 5.0], [18700.0, 1.0], [19500.0, 83.0], [20300.0, 21.0], [21100.0, 1.0], [21900.0, 14.0], [23500.0, 26.0], [22700.0, 2.0], [24300.0, 5.0], [25100.0, 5.0], [25900.0, 2.0], [27500.0, 9.0], [28300.0, 1.0], [29100.0, 15.0], [30700.0, 2.0], [31500.0, 16.0], [32300.0, 2.0], [132700.0, 7.0], [139100.0, 1.0], [34200.0, 48.0], [35800.0, 2.0], [37400.0, 20.0], [39000.0, 15.0], [40600.0, 6.0], [42200.0, 29.0], [48600.0, 13.0], [51800.0, 5.0], [53400.0, 15.0], [61400.0, 3.0], [63000.0, 3.0], [64600.0, 13.0], [68400.0, 2.0], [71600.0, 6.0], [74800.0, 1.0], [78000.0, 1.0], [81200.0, 1.0], [84400.0, 1.0], [87600.0, 2.0], [100400.0, 94.0], [103600.0, 20.0], [116400.0, 1.0], [129200.0, 25.0], [132000.0, 2.0], [68300.0, 10.0], [71500.0, 10.0], [74700.0, 2.0], [77900.0, 1.0], [81100.0, 1.0], [100300.0, 45.0], [129100.0, 2.0], [229800.0, 1.0], [35300.0, 89.0], [38500.0, 6.0], [36900.0, 6.0], [44900.0, 6.0], [43300.0, 2.0], [46500.0, 1.0], [48100.0, 2.0], [49700.0, 1.0], [52900.0, 2.0], [51300.0, 1.0], [56100.0, 2.0], [60900.0, 3.0], [64100.0, 32.0], [67400.0, 5.0], [70600.0, 15.0], [73800.0, 4.0], [80200.0, 4.0], [83400.0, 10.0], [86600.0, 3.0], [93000.0, 13.0], [99400.0, 2.0], [109000.0, 1.0], [125000.0, 1.0], [128200.0, 1.0], [135600.0, 17.0], [206000.0, 2.0], [139700.0, 2.0], [165300.0, 2.0], [229300.0, 25.0], [4100.0, 50.0], [66500.0, 3.0], [4300.0, 6.0], [4500.0, 73.0], [72900.0, 2.0], [69700.0, 1.0], [76100.0, 3.0], [4700.0, 5.0], [4900.0, 147.0], [5100.0, 242.0], [5300.0, 71.0], [82500.0, 3.0], [5500.0, 58.0], [5700.0, 62.0], [6100.0, 29.0], [5900.0, 17.0], [95300.0, 4.0], [101700.0, 1.0], [6300.0, 29.0], [98500.0, 2.0], [6500.0, 6.0], [6700.0, 42.0], [6900.0, 8.0], [7100.0, 47.0], [7300.0, 97.0], [7500.0, 135.0], [7700.0, 186.0], [7900.0, 224.0], [8100.0, 615.0], [8600.0, 243.0], [8200.0, 188.0], [9000.0, 227.0], [9400.0, 472.0], [10200.0, 125.0], [9800.0, 204.0], [10600.0, 194.0], [11000.0, 32.0], [11400.0, 61.0], [12200.0, 37.0], [11800.0, 21.0], [12600.0, 8.0], [13000.0, 102.0], [13400.0, 49.0], [13800.0, 108.0], [14600.0, 49.0], [15000.0, 83.0], [15400.0, 61.0], [15800.0, 7.0], [17200.0, 4.0], [18000.0, 23.0], [19600.0, 5.0], [20400.0, 1.0], [21200.0, 2.0], [22800.0, 1.0], [23600.0, 12.0], [24400.0, 7.0], [25200.0, 2.0], [26000.0, 3.0], [27600.0, 30.0], [28400.0, 8.0], [29200.0, 1.0], [30000.0, 1.0], [31600.0, 58.0], [30800.0, 5.0], [32400.0, 103.0], [34400.0, 45.0], [32800.0, 14.0], [141500.0, 22.0], [36000.0, 2.0], [37600.0, 46.0], [42400.0, 2.0], [44000.0, 43.0], [45600.0, 3.0], [47200.0, 1.0], [48800.0, 2.0], [50400.0, 5.0], [55200.0, 24.0], [60000.0, 1.0], [63200.0, 2.0], [61600.0, 2.0], [64800.0, 1.0], [65600.0, 8.0], [68800.0, 1.0], [72000.0, 2.0], [75200.0, 20.0], [78400.0, 1.0], [97600.0, 2.0], [94400.0, 4.0], [100800.0, 10.0], [104000.0, 2.0], [129600.0, 11.0], [131200.0, 16.0], [68700.0, 3.0], [71900.0, 1.0], [81500.0, 1.0], [78300.0, 3.0], [84700.0, 1.0], [87900.0, 51.0], [97500.0, 2.0], [100700.0, 119.0], [119900.0, 1.0], [133000.0, 18.0], [33900.0, 3.0], [35500.0, 25.0], [37100.0, 32.0], [38700.0, 27.0], [40300.0, 8.0], [41900.0, 3.0], [43500.0, 2.0], [48300.0, 4.0], [53100.0, 2.0], [51500.0, 2.0], [56300.0, 1.0], [61100.0, 6.0], [62700.0, 1.0], [64300.0, 2.0], [67800.0, 1.0], [71000.0, 2.0], [74200.0, 3.0], [77400.0, 9.0], [80600.0, 1.0], [96600.0, 1.0], [99800.0, 2.0], [106200.0, 4.0], [109400.0, 14.0], [134800.0, 2.0], [132500.0, 47.0], [247700.0, 3.0], [66900.0, 1.0], [73300.0, 4.0], [76500.0, 1.0], [79700.0, 2.0], [95700.0, 4.0], [108500.0, 1.0], [127700.0, 22.0], [130900.0, 11.0], [136600.0, 3.0], [16500.0, 5.0], [17300.0, 2.0], [18100.0, 41.0], [18900.0, 7.0], [19700.0, 14.0], [21300.0, 15.0], [20500.0, 14.0], [22100.0, 10.0], [22900.0, 2.0], [24500.0, 3.0], [23700.0, 5.0], [25300.0, 16.0], [26100.0, 1.0], [26900.0, 6.0], [27700.0, 6.0], [28500.0, 4.0], [29300.0, 10.0], [30100.0, 3.0], [31700.0, 22.0], [32500.0, 32.0], [33000.0, 2.0], [34600.0, 1.0], [36200.0, 3.0], [37800.0, 1.0], [39400.0, 3.0], [41000.0, 15.0], [42600.0, 10.0], [44200.0, 13.0], [45800.0, 2.0], [50600.0, 1.0], [52200.0, 2.0], [57000.0, 28.0], [55400.0, 5.0], [58600.0, 2.0], [63400.0, 57.0], [65000.0, 2.0], [69200.0, 2.0], [66000.0, 1.0], [72400.0, 2.0], [75600.0, 7.0], [78800.0, 1.0], [91600.0, 2.0], [101200.0, 68.0], [107600.0, 3.0], [130000.0, 5.0], [133600.0, 2.0], [131300.0, 92.0], [69100.0, 3.0], [65900.0, 2.0], [72300.0, 14.0], [78700.0, 1.0], [81900.0, 3.0], [85100.0, 1.0], [88300.0, 1.0], [94700.0, 4.0], [101100.0, 13.0], [129900.0, 8.0], [167400.0, 2.0], [34100.0, 2.0], [133100.0, 16.0], [35700.0, 1.0], [37300.0, 32.0], [38900.0, 3.0], [40500.0, 2.0], [43700.0, 18.0], [46900.0, 1.0], [50100.0, 3.0], [51700.0, 3.0], [54900.0, 2.0], [53300.0, 3.0], [56500.0, 2.0], [58100.0, 2.0], [59700.0, 3.0], [62900.0, 2.0], [64500.0, 1.0], [68200.0, 2.0], [71400.0, 2.0], [81000.0, 1.0], [87400.0, 2.0], [90600.0, 1.0], [100200.0, 22.0], [103400.0, 15.0], [106600.0, 2.0], [129000.0, 12.0], [211700.0, 1.0], [67300.0, 8.0], [70500.0, 2.0], [73700.0, 3.0], [76900.0, 5.0], [80100.0, 2.0], [83300.0, 2.0], [128100.0, 1.0], [8300.0, 205.0], [8700.0, 159.0], [139000.0, 38.0], [9100.0, 539.0], [145400.0, 1.0], [9500.0, 385.0], [9900.0, 342.0], [10300.0, 188.0], [10700.0, 40.0], [11100.0, 46.0], [11500.0, 28.0], [11900.0, 6.0], [12300.0, 24.0], [12700.0, 10.0], [13100.0, 49.0], [13500.0, 65.0], [14300.0, 11.0], [13900.0, 58.0], [222200.0, 1.0], [14700.0, 60.0], [15100.0, 87.0], [15500.0, 81.0], [15900.0, 11.0], [16600.0, 6.0], [17400.0, 22.0], [18200.0, 144.0], [19000.0, 35.0], [19800.0, 3.0], [21400.0, 19.0], [20600.0, 9.0], [22200.0, 19.0], [23800.0, 9.0], [24600.0, 1.0], [26200.0, 7.0], [27000.0, 53.0], [27800.0, 7.0], [28600.0, 1.0], [29400.0, 13.0], [30200.0, 2.0], [31000.0, 39.0], [31800.0, 94.0], [32600.0, 2.0], [34800.0, 17.0], [36400.0, 10.0], [38000.0, 5.0], [39600.0, 1.0], [41200.0, 21.0], [47600.0, 1.0], [52400.0, 4.0], [54000.0, 1.0], [57200.0, 4.0], [62000.0, 2.0], [65200.0, 5.0], [66400.0, 11.0], [69600.0, 5.0], [76000.0, 4.0], [79200.0, 1.0], [82400.0, 1.0], [85600.0, 1.0], [104800.0, 1.0], [132800.0, 1.0], [139200.0, 1.0], [66300.0, 5.0], [69500.0, 2.0], [72700.0, 3.0], [79100.0, 2.0], [82300.0, 1.0], [88700.0, 1.0], [91900.0, 1.0], [98300.0, 2.0], [95100.0, 1.0], [134600.0, 3.0], [132300.0, 120.0], [34300.0, 49.0], [35900.0, 5.0], [37500.0, 55.0], [40700.0, 5.0], [39100.0, 16.0], [42300.0, 11.0], [45500.0, 2.0], [47100.0, 1.0], [50300.0, 1.0], [53500.0, 4.0], [55100.0, 3.0], [58300.0, 3.0], [59900.0, 2.0], [63100.0, 2.0], [64700.0, 9.0], [68600.0, 5.0], [75000.0, 5.0], [81400.0, 2.0], [84600.0, 1.0], [91000.0, 1.0], [94200.0, 1.0], [97400.0, 8.0], [100600.0, 39.0], [129400.0, 42.0], [136400.0, 2.0], [67700.0, 11.0], [70900.0, 4.0], [74100.0, 6.0], [77300.0, 1.0], [80500.0, 2.0], [83700.0, 1.0], [90100.0, 1.0], [86900.0, 1.0], [96500.0, 2.0], [102900.0, 4.0], [109300.0, 3.0], [128500.0, 1.0], [131800.0, 38.0], [16700.0, 22.0], [18300.0, 26.0], [17500.0, 15.0], [19100.0, 16.0], [19900.0, 2.0], [21500.0, 25.0], [20700.0, 15.0], [22300.0, 1.0], [23100.0, 2.0], [23900.0, 1.0], [24700.0, 7.0], [26300.0, 1.0], [27100.0, 7.0], [27900.0, 42.0], [28700.0, 6.0], [31100.0, 11.0], [32700.0, 12.0], [31900.0, 49.0], [33400.0, 15.0], [135900.0, 1.0], [36600.0, 39.0], [35000.0, 12.0], [39800.0, 22.0], [41400.0, 4.0], [43000.0, 1.0], [44600.0, 5.0], [47800.0, 7.0], [49400.0, 4.0], [52600.0, 2.0], [57400.0, 2.0], [59000.0, 1.0], [60600.0, 4.0], [62200.0, 2.0], [65400.0, 3.0], [66800.0, 4.0], [73200.0, 4.0], [70000.0, 6.0], [76400.0, 3.0], [79600.0, 2.0], [82800.0, 1.0], [86000.0, 2.0], [92400.0, 1.0], [102000.0, 2.0], [124400.0, 3.0], [127600.0, 34.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 247700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 209.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 175872.0, "series": [{"data": [[0.0, 175872.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 42955.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 22519.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 209.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 85.42857142857146, "minX": 1.68287808E12, "maxY": 3000.0, "series": [{"data": [[1.6828782E12, 3000.0], [1.68287838E12, 2709.377101621791], [1.68287832E12, 3000.0], [1.68287844E12, 85.42857142857146], [1.68287814E12, 3000.0], [1.68287808E12, 3000.0], [1.68287826E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287844E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.0, "maxY": 167469.0, "series": [{"data": [[2.0, 69800.0], [4.0, 73288.0], [6.0, 74657.5], [7.0, 75058.0], [8.0, 81089.0], [9.0, 75054.0], [10.0, 75054.0], [11.0, 74324.0], [12.0, 75048.0], [13.0, 103486.0], [14.0, 73300.0], [15.0, 76341.0], [16.0, 76341.0], [17.0, 75332.0], [18.0, 75332.0], [19.0, 68593.0], [20.0, 74323.0], [21.0, 69599.0], [22.0, 73314.0], [23.0, 72307.0], [24.0, 65743.0], [25.0, 68381.0], [26.0, 67579.0], [27.0, 70289.0], [28.0, 70286.0], [29.0, 69280.0], [30.0, 62713.0], [31.0, 105628.0], [33.0, 65353.0], [32.0, 105627.0], [35.0, 67259.0], [34.0, 62625.0], [37.0, 59707.0], [36.0, 60696.0], [39.0, 66250.0], [38.0, 60536.0], [41.0, 65238.0], [40.0, 59685.0], [43.0, 100423.0], [42.0, 58674.0], [44.0, 100417.0], [48.0, 100415.0], [50.0, 100413.0], [55.0, 100256.0], [54.0, 100413.0], [63.0, 101466.28571428571], [62.0, 100658.0], [66.0, 100656.0], [65.0, 100655.5], [70.0, 100655.5], [69.0, 100657.5], [74.0, 100700.0], [72.0, 102068.5], [79.0, 100649.0], [83.0, 100640.0], [82.0, 100642.0], [81.0, 103477.0], [80.0, 100650.75], [86.0, 100635.0], [84.0, 100639.0], [91.0, 100626.0], [89.0, 100626.33333333333], [94.0, 100628.0], [92.0, 103455.0], [98.0, 103453.5], [103.0, 103450.0], [101.0, 103452.0], [100.0, 103451.5], [107.0, 103638.0], [111.0, 103636.85714285714], [114.0, 103636.0], [112.0, 103639.0], [119.0, 103635.0], [118.0, 103636.5], [116.0, 103635.5], [121.0, 103614.0], [120.0, 103623.0], [127.0, 100585.0], [135.0, 58344.0], [134.0, 102599.0], [133.0, 100584.83333333333], [132.0, 100586.0], [129.0, 100586.0], [128.0, 100586.0], [143.0, 56308.0], [142.0, 58039.0], [141.0, 58042.0], [140.0, 59050.0], [139.0, 58328.0], [138.0, 60059.0], [137.0, 57244.0], [136.0, 61069.0], [151.0, 52270.0], [150.0, 74002.0], [149.0, 54005.0], [148.0, 52195.0], [147.0, 51367.0], [146.0, 56021.0], [145.0, 58939.0], [144.0, 53383.0], [159.0, 84648.0], [158.0, 43366.0], [157.0, 43369.0], [156.0, 84575.0], [155.0, 51258.0], [154.0, 51260.0], [153.0, 85601.0], [152.0, 52268.0], [167.0, 40554.0], [166.0, 87473.0], [165.0, 87983.0], [164.0, 41590.0], [163.0, 41592.0], [162.0, 89010.0], [161.0, 42357.0], [160.0, 42360.0], [174.0, 38518.0], [173.0, 38520.0], [172.0, 85940.0], [171.0, 39528.0], [170.0, 39529.0], [169.0, 91963.0], [168.0, 40551.0], [182.0, 38167.0], [181.0, 38167.0], [180.0, 38167.0], [178.0, 41577.0], [191.0, 38163.0], [190.0, 61667.0], [189.0, 38165.0], [187.0, 38165.0], [185.0, 38166.0], [184.0, 38166.0], [199.0, 38153.0], [197.0, 38155.0], [196.0, 38159.0], [195.0, 38160.0], [194.0, 38161.0], [193.0, 38163.0], [192.0, 38163.0], [206.0, 38149.0], [204.0, 38149.0], [203.0, 38152.0], [202.0, 38153.0], [201.0, 38153.0], [215.0, 38126.0], [214.0, 38129.0], [213.0, 38130.0], [212.0, 38144.0], [211.0, 38146.0], [210.0, 38147.0], [209.0, 38147.0], [208.0, 38148.0], [223.0, 37229.5], [221.0, 38007.0], [220.0, 38008.0], [219.0, 38093.0], [218.0, 38096.0], [217.0, 38100.0], [216.0, 38126.0], [231.0, 37227.0], [230.0, 37228.0], [229.0, 37229.0], [228.0, 37228.5], [227.0, 37229.0], [226.0, 37230.0], [225.0, 37230.0], [239.0, 37226.0], [238.0, 37226.0], [237.0, 37226.0], [235.0, 37227.5], [233.0, 37227.5], [247.0, 37222.0], [246.0, 37222.0], [245.0, 44820.0], [243.0, 37223.0], [242.0, 44819.0], [241.0, 37225.0], [240.0, 37225.0], [254.0, 37220.0], [253.0, 41019.0], [251.0, 37220.0], [250.0, 37221.0], [248.0, 37222.0], [270.0, 37214.0], [271.0, 37213.0], [268.0, 37213.0], [259.0, 37218.0], [257.0, 37219.0], [256.0, 37219.0], [267.0, 37214.0], [266.0, 37215.0], [265.0, 37217.0], [264.0, 37217.0], [263.0, 37217.0], [261.0, 37217.5], [260.0, 37219.0], [275.0, 37202.0], [286.0, 37199.0], [287.0, 37200.0], [284.0, 37199.5], [282.0, 37200.0], [281.0, 37413.5], [279.0, 37201.0], [277.0, 37626.0], [276.0, 37202.0], [274.0, 37632.0], [273.0, 37208.0], [272.0, 37208.0], [301.0, 37604.0], [302.0, 44774.0], [300.0, 37179.0], [291.0, 37198.0], [290.0, 37198.0], [289.0, 37198.0], [288.0, 37198.0], [299.0, 37181.0], [298.0, 37608.0], [297.0, 37185.0], [296.0, 37187.0], [295.0, 44787.0], [293.0, 37615.0], [292.0, 68620.0], [318.0, 37165.0], [319.0, 37161.0], [317.0, 44761.0], [316.0, 37166.0], [315.0, 44764.0], [314.0, 37592.0], [313.0, 40967.5], [311.0, 37595.5], [304.0, 37176.0], [307.0, 37174.0], [306.0, 37176.0], [309.0, 37173.0], [308.0, 37172.0], [334.0, 44737.0], [335.0, 37565.0], [333.0, 37566.0], [332.0, 37143.0], [331.0, 44740.0], [330.0, 37143.0], [329.0, 37143.0], [328.0, 44741.0], [327.0, 37146.0], [321.0, 37584.5], [323.0, 37577.0], [322.0, 37154.0], [326.0, 37571.0], [325.0, 37574.0], [324.0, 44745.0], [350.0, 40907.5], [351.0, 44704.0], [348.0, 37534.0], [339.0, 44722.5], [337.0, 37124.0], [336.0, 37565.0], [347.0, 37109.0], [346.0, 37541.0], [345.0, 44714.0], [344.0, 37544.0], [343.0, 44718.0], [342.0, 37124.0], [341.0, 44721.0], [340.0, 37548.0], [365.0, 36578.0], [366.0, 43749.0], [364.0, 36580.0], [355.0, 44698.0], [354.0, 37526.0], [353.0, 44699.0], [352.0, 37531.0], [363.0, 36472.0], [362.0, 36473.0], [361.0, 86651.0], [360.0, 86905.0], [359.0, 44688.0], [358.0, 37519.0], [357.0, 37097.0], [356.0, 37522.0], [382.0, 36570.0], [383.0, 36569.0], [381.0, 36571.0], [380.0, 43743.5], [378.0, 43747.0], [377.0, 43747.0], [376.0, 40160.0], [374.0, 40161.0], [371.0, 36576.0], [370.0, 43750.0], [369.0, 36577.0], [368.0, 39950.0], [372.0, 36575.0], [398.0, 36541.0], [399.0, 43693.0], [397.0, 43715.0], [396.0, 43721.0], [395.0, 43726.0], [394.0, 43728.0], [393.0, 36555.0], [392.0, 36555.0], [391.0, 40142.0], [384.0, 43739.0], [386.0, 36560.0], [385.0, 43739.0], [389.0, 43728.0], [388.0, 40143.5], [414.0, 33624.0], [415.0, 85053.0], [413.0, 33626.0], [412.0, 35094.0], [411.0, 35096.0], [410.0, 35531.0], [409.0, 35531.0], [408.0, 42720.0], [407.0, 35549.0], [401.0, 36519.0], [400.0, 43691.0], [403.0, 36082.0], [402.0, 36517.0], [406.0, 35550.0], [405.0, 42724.0], [404.0, 36080.0], [430.0, 28152.0], [431.0, 64219.0], [429.0, 28154.0], [428.0, 29162.0], [427.0, 29164.0], [426.0, 30171.0], [425.0, 30172.0], [424.0, 31327.0], [423.0, 31329.0], [417.0, 32618.0], [416.0, 85052.0], [419.0, 31608.0], [418.0, 32615.0], [422.0, 84105.5], [420.0, 31606.0], [444.0, 27117.0], [446.0, 25985.0], [447.0, 25983.0], [445.0, 27115.0], [443.0, 64201.5], [441.0, 64201.0], [439.0, 64202.0], [433.0, 64219.0], [432.0, 64219.0], [435.0, 64216.0], [434.0, 64219.0], [438.0, 64213.0], [437.0, 64213.0], [436.0, 64216.0], [462.0, 24404.0], [463.0, 24401.0], [461.0, 24404.0], [460.0, 24404.0], [459.0, 24404.0], [458.0, 24405.0], [457.0, 24974.0], [456.0, 24976.0], [455.0, 57515.0], [449.0, 57523.0], [448.0, 57524.0], [451.0, 57521.0], [450.0, 57521.0], [454.0, 57517.0], [453.0, 57517.0], [452.0, 57518.0], [477.0, 23887.0], [478.0, 65192.0], [476.0, 23887.0], [475.0, 23888.0], [473.0, 65196.0], [472.0, 23889.0], [471.0, 23889.0], [469.0, 24392.0], [466.0, 24396.0], [465.0, 24398.0], [464.0, 24400.0], [493.0, 23449.0], [495.0, 64756.0], [492.0, 23450.0], [483.0, 65128.0], [481.0, 65129.0], [480.0, 58462.0], [491.0, 23449.0], [490.0, 30624.0], [489.0, 23379.0], [488.0, 23380.0], [487.0, 23814.0], [486.0, 65125.0], [485.0, 65127.0], [484.0, 65126.0], [510.0, 23440.0], [511.0, 23438.0], [509.0, 30616.0], [508.0, 64751.0], [507.0, 64752.0], [506.0, 23445.0], [505.0, 23445.0], [504.0, 23445.0], [503.0, 64754.0], [497.0, 23447.0], [496.0, 44103.0], [499.0, 23447.0], [498.0, 64755.0], [502.0, 23446.0], [501.0, 44101.0], [536.0, 23425.5], [541.0, 23405.0], [543.0, 130105.0], [528.0, 130144.0], [530.0, 23428.0], [529.0, 23428.0], [540.0, 23420.0], [539.0, 23422.0], [537.0, 23426.0], [527.0, 23430.0], [512.0, 23437.0], [514.0, 23436.0], [513.0, 23437.0], [516.0, 23435.0], [515.0, 23435.0], [518.0, 64740.0], [517.0, 23433.0], [526.0, 23430.0], [525.0, 23429.0], [524.0, 23430.0], [523.0, 23430.0], [522.0, 23431.0], [521.0, 23431.0], [520.0, 23432.0], [534.0, 23426.0], [533.0, 23426.0], [532.0, 23427.0], [531.0, 23427.0], [570.0, 22513.0], [561.0, 22515.0], [574.0, 22512.0], [575.0, 22513.0], [560.0, 22516.0], [573.0, 22513.333333333332], [568.0, 22515.0], [551.0, 22519.0], [550.0, 22518.0], [549.0, 22518.5], [547.0, 22520.0], [545.0, 22948.0], [544.0, 22950.0], [559.0, 22516.5], [557.0, 22517.0], [556.0, 22517.0], [555.0, 22518.0], [554.0, 22517.5], [552.0, 22518.0], [567.0, 22515.0], [565.0, 22516.0], [564.0, 22515.0], [602.0, 22502.0], [606.0, 22500.0], [607.0, 22501.0], [592.0, 22506.0], [595.0, 22504.0], [594.0, 22504.5], [597.0, 22504.0], [596.0, 22504.0], [605.0, 22500.0], [604.0, 22502.0], [603.0, 22502.0], [601.0, 22502.5], [583.0, 22509.0], [582.0, 22510.0], [581.0, 22510.5], [579.0, 22512.0], [578.0, 22512.0], [577.0, 22512.0], [576.0, 22513.0], [590.0, 22505.0], [589.0, 22507.0], [588.0, 22506.0], [587.0, 22507.0], [586.0, 22507.0], [584.0, 22509.0], [599.0, 22502.0], [598.0, 22504.0], [633.0, 22465.0], [637.0, 22464.0], [638.0, 22462.0], [625.0, 22467.0], [624.0, 22489.0], [627.0, 22468.0], [626.0, 22467.0], [636.0, 22463.0], [635.0, 22465.0], [634.0, 22465.0], [623.0, 22489.0], [608.0, 22500.0], [611.0, 22499.0], [610.0, 22499.5], [613.0, 22499.0], [612.0, 22498.0], [615.0, 22496.0], [614.0, 22496.0], [622.0, 22489.0], [621.0, 22490.0], [620.0, 22489.0], [618.0, 22490.5], [616.0, 22497.0], [631.0, 67791.0], [630.0, 22466.0], [629.0, 22466.0], [628.0, 22466.0], [666.0, 67777.0], [670.0, 67742.0], [671.0, 22414.0], [657.0, 22456.0], [656.0, 22456.0], [660.0, 67780.0], [659.0, 22455.0], [669.0, 22416.0], [668.0, 22421.0], [667.0, 22432.0], [664.0, 22450.0], [647.0, 22460.0], [646.0, 22459.0], [645.0, 22461.0], [644.0, 22461.0], [643.0, 22462.0], [641.0, 22461.0], [640.0, 22462.5], [655.0, 22456.0], [654.0, 22457.0], [653.0, 22458.0], [652.0, 22457.5], [650.0, 22458.0], [649.0, 22459.0], [648.0, 22458.0], [663.0, 22453.0], [662.0, 45116.5], [697.0, 55424.0], [701.0, 17343.0], [703.0, 64193.5], [689.0, 19373.0], [688.0, 19421.0], [691.0, 56006.0], [690.0, 56007.0], [700.0, 17345.0], [699.0, 18352.0], [698.0, 18354.0], [687.0, 19423.0], [674.0, 22409.5], [672.0, 22411.0], [677.0, 67726.0], [676.0, 45069.0], [679.0, 67722.0], [678.0, 67725.0], [686.0, 19858.0], [685.0, 56493.0], [684.0, 19859.0], [683.0, 21097.0], [682.0, 21099.0], [681.0, 21377.0], [680.0, 21379.0], [695.0, 55997.0], [694.0, 55996.0], [693.0, 64692.0], [692.0, 19372.0], [729.0, 17146.0], [734.0, 15092.0], [735.0, 15090.0], [720.0, 64179.0], [723.0, 64178.0], [722.0, 64179.0], [725.0, 64177.0], [724.0, 64178.0], [733.0, 47349.0], [731.0, 16098.0], [730.0, 16101.0], [728.0, 17148.0], [711.0, 64185.0], [709.0, 64185.0], [708.0, 64187.0], [707.0, 64188.0], [706.0, 64188.0], [705.0, 64192.0], [704.0, 64193.0], [719.0, 64181.0], [718.0, 64181.0], [717.0, 64182.0], [716.0, 64182.0], [715.0, 64183.0], [714.0, 64184.0], [713.0, 64184.0], [712.0, 64185.5], [727.0, 64165.0], [726.0, 64177.0], [766.0, 110667.0], [756.0, 14740.0], [767.0, 110667.0], [753.0, 14749.0], [752.0, 14753.0], [755.0, 14743.0], [754.0, 14746.0], [765.0, 71717.5], [763.0, 110668.5], [761.0, 110668.5], [743.0, 44133.0], [742.0, 44134.0], [740.0, 44135.0], [739.0, 44134.0], [738.0, 44134.0], [737.0, 44135.0], [736.0, 44135.0], [751.0, 14756.0], [750.0, 14762.0], [749.0, 44120.5], [747.0, 44122.0], [746.0, 44126.0], [745.0, 44127.0], [744.0, 44131.0], [759.0, 110669.0], [758.0, 111540.0], [757.0, 111541.0], [793.0, 110657.0], [798.0, 110649.0], [799.0, 13842.0], [784.0, 110661.0], [786.0, 110660.0], [785.0, 21027.0], [789.0, 13853.0], [788.0, 110661.0], [797.0, 32753.0], [796.0, 13849.0], [795.0, 62252.0], [792.0, 32756.0], [775.0, 13858.0], [774.0, 71715.5], [773.0, 62262.5], [771.0, 13859.0], [770.0, 110665.0], [768.0, 110667.0], [783.0, 110663.0], [782.0, 110663.0], [781.0, 62260.5], [779.0, 13857.0], [778.0, 62260.0], [776.0, 110665.0], [791.0, 60337.0], [790.0, 110659.0], [825.0, 13816.0], [830.0, 13808.0], [831.0, 13808.0], [816.0, 32729.0], [818.0, 13822.0], [817.0, 13822.0], [820.0, 13821.0], [819.0, 13821.0], [829.0, 13814.0], [828.0, 13814.5], [826.0, 13815.0], [824.0, 13816.0], [807.0, 110640.0], [806.0, 110641.0], [805.0, 13834.0], [804.0, 110644.0], [803.0, 13838.0], [802.0, 13839.0], [801.0, 13838.0], [800.0, 110646.0], [815.0, 13824.0], [814.0, 32737.0], [813.0, 13832.0], [812.0, 13832.0], [811.0, 32740.0], [810.0, 13833.0], [809.0, 13833.0], [808.0, 13833.0], [823.0, 13815.0], [821.0, 13821.0], [857.0, 12859.0], [862.0, 12857.0], [863.0, 12857.0], [849.0, 13744.0], [848.0, 13745.0], [851.0, 20912.0], [850.0, 13744.0], [861.0, 12858.0], [860.0, 12858.0], [859.0, 12858.0], [847.0, 13745.0], [834.0, 13807.0], [832.0, 13808.0], [836.0, 13806.0], [835.0, 13807.0], [839.0, 13805.0], [837.0, 13806.0], [846.0, 13745.0], [845.0, 13774.0], [844.0, 13774.0], [843.0, 13364.0], [842.0, 13366.0], [841.0, 13805.0], [855.0, 12859.0], [854.0, 12859.0], [853.0, 12476.0], [852.0, 12478.0], [892.0, 12846.0], [883.0, 12850.0], [894.0, 12845.5], [880.0, 12851.0], [882.0, 12851.0], [881.0, 12851.0], [891.0, 16433.0], [889.0, 12848.0], [888.0, 13045.5], [871.0, 12855.0], [870.0, 12856.0], [868.0, 12856.0], [866.0, 12856.0], [865.0, 12857.0], [878.0, 12852.0], [877.0, 12852.0], [876.0, 12852.0], [875.0, 12853.0], [874.0, 12853.0], [873.0, 12854.0], [886.0, 12848.0], [885.0, 12849.0], [884.0, 12849.0], [920.0, 13211.0], [925.0, 13204.0], [927.0, 12807.0], [914.0, 12838.0], [913.0, 12839.0], [924.0, 12810.0], [922.0, 12812.0], [921.0, 13209.0], [910.0, 12838.0], [897.0, 12844.0], [896.0, 12845.0], [900.0, 12843.0], [898.0, 12844.0], [903.0, 12841.0], [902.0, 12842.0], [909.0, 12840.0], [908.0, 12840.0], [907.0, 12840.0], [906.0, 16427.0], [905.0, 12841.0], [919.0, 13212.0], [918.0, 13214.0], [917.0, 12821.5], [915.0, 12838.0], [952.0, 12123.0], [957.0, 11239.0], [958.0, 11238.0], [944.0, 11747.0], [947.0, 12131.0], [945.0, 12132.0], [956.0, 11239.0], [954.0, 11239.0], [953.0, 12120.0], [943.0, 11749.0], [930.0, 13201.0], [929.0, 13005.5], [933.0, 12805.0], [932.0, 12806.0], [935.0, 12804.0], [934.0, 12805.0], [942.0, 12773.0], [941.0, 13185.0], [939.0, 13200.0], [938.0, 12803.0], [937.0, 13002.0], [951.0, 12124.0], [950.0, 12126.0], [949.0, 12126.0], [948.0, 12126.0], [985.0, 11227.0], [990.0, 11027.5], [991.0, 11226.0], [977.0, 10836.0], [976.0, 11232.0], [981.0, 11032.0], [979.0, 11231.5], [988.0, 10831.0], [987.0, 11228.0], [986.0, 11227.0], [984.0, 11229.0], [966.0, 11236.0], [965.0, 11236.5], [963.0, 11236.0], [962.0, 11236.0], [961.0, 11237.0], [960.0, 11238.0], [975.0, 11233.0], [974.0, 11233.5], [972.0, 11234.0], [971.0, 11235.0], [969.0, 11235.0], [968.0, 11235.0], [983.0, 11230.0], [982.0, 11229.0], [1018.0, 11192.0], [1022.0, 10788.0], [1023.0, 11180.0], [1009.0, 11011.5], [1011.0, 10803.0], [1010.0, 10803.0], [1021.0, 10789.0], [1020.0, 10793.0], [1019.0, 10794.0], [1017.0, 23647.5], [999.0, 10822.0], [998.0, 11215.0], [997.0, 10824.0], [996.0, 10825.0], [995.0, 11220.0], [994.0, 10828.0], [993.0, 10829.0], [992.0, 10829.0], [1007.0, 10818.0], [1006.0, 11213.0], [1005.0, 10819.0], [1004.0, 10819.0], [1002.0, 10820.0], [1000.0, 10822.0], [1015.0, 23652.0], [1013.0, 14388.0], [1086.0, 9255.0], [1060.0, 9263.0], [1064.0, 9263.5], [1062.0, 9264.0], [1066.0, 9263.0], [1080.0, 9257.5], [1078.0, 9257.666666666666], [1026.0, 10982.5], [1024.0, 10787.0], [1028.0, 10786.0], [1030.0, 10784.0], [1032.0, 11178.0], [1034.0, 11175.0], [1038.0, 10352.0], [1054.0, 9265.0], [1050.0, 10139.0], [1048.0, 9355.0], [1046.0, 9792.0], [1044.0, 9793.0], [1040.0, 10759.0], [1144.0, 8176.0], [1120.0, 9218.0], [1126.0, 9217.0], [1124.0, 9217.0], [1128.0, 9211.0], [1130.0, 9193.5], [1132.0, 9191.0], [1134.0, 9185.0], [1150.0, 8171.0], [1146.0, 20981.0], [1140.0, 9141.0], [1136.0, 8351.0], [1102.0, 9240.0], [1098.0, 9241.0], [1096.0, 9250.0], [1090.0, 9252.0], [1088.0, 9253.0], [1118.0, 9220.0], [1116.0, 9222.0], [1114.0, 9225.0], [1112.0, 9226.0], [1110.0, 9228.0], [1106.0, 9238.0], [1200.0, 8277.0], [1204.0, 53544.0], [1188.0, 7290.0], [1184.0, 8131.0], [1186.0, 20933.0], [1190.0, 53451.0], [1194.0, 35855.333333333336], [1212.0, 20164.0], [1208.0, 33350.5], [1166.0, 8165.0], [1162.0, 8167.0], [1160.0, 8168.0], [1158.0, 8169.0], [1156.0, 8169.5], [1154.0, 20979.0], [1180.0, 8137.0], [1178.0, 8142.0], [1176.0, 8145.0], [1174.0, 8151.0], [1172.0, 20966.0], [1170.0, 8163.0], [1276.0, 15045.0], [1278.0, 14115.0], [1250.0, 9795.0], [1254.0, 14123.0], [1262.0, 13668.333333333334], [1274.0, 34367.5], [1272.0, 14120.0], [1270.0, 8263.0], [1268.0, 28152.75], [1266.0, 15050.0], [1222.0, 17115.0], [1218.0, 53444.0], [1216.0, 39065.0], [1246.0, 11197.0], [1240.0, 44871.0], [1238.0, 50482.333333333336], [1234.0, 36540.5], [1232.0, 31227.75], [1332.0, 14104.0], [1340.0, 20130.0], [1316.0, 33451.0], [1314.0, 47610.5], [1320.0, 20232.0], [1318.0, 48986.0], [1326.0, 50827.5], [1324.0, 52542.0], [1342.0, 14983.0], [1334.0, 48835.5], [1330.0, 58929.0], [1328.0, 17119.5], [1294.0, 23517.0], [1290.0, 9785.0], [1280.0, 21780.5], [1310.0, 38756.0], [1308.0, 48243.0], [1306.0, 42379.0], [1304.0, 14112.0], [1302.0, 42919.333333333336], [1298.0, 45308.333333333336], [1296.0, 53424.0], [1356.0, 53296.0], [1386.0, 52415.0], [1384.0, 8628.0], [1382.0, 3103.0], [1380.0, 4013.0], [1378.0, 5021.0], [1376.0, 6255.0], [1358.0, 52416.0], [1352.0, 56126.0], [1350.0, 38946.0], [1348.0, 45561.0], [1346.0, 59178.0], [1344.0, 25783.0], [1374.0, 52378.0], [1372.0, 59112.0], [1370.0, 57488.0], [1368.0, 58797.0], [1366.0, 59131.0], [1364.0, 42956.5], [1362.0, 59134.0], [1470.0, 396.0], [1464.0, 396.0], [1410.0, 2788.666666666667], [1434.0, 398.0], [1432.0, 397.0], [1430.0, 397.5], [1478.0, 395.0], [1526.0, 1646.0], [1524.0, 386.0], [1480.0, 395.25], [1476.0, 395.0], [1474.0, 396.16666666666663], [1472.0, 396.0], [1496.0, 1025.5000000000002], [1492.0, 396.0], [1490.0, 395.5], [1488.0, 395.0], [1518.0, 391.0], [1508.0, 1151.1], [2040.0, 478.69230769230774], [2036.0, 479.0], [2044.0, 481.0], [2016.0, 480.15000000000003], [2018.0, 480.6], [2020.0, 479.22727272727275], [2022.0, 480.0], [2024.0, 478.0], [2026.0, 479.3333333333333], [2028.0, 479.76923076923083], [2030.0, 478.6], [2046.0, 478.1578947368421], [2042.0, 479.0], [2038.0, 477.66666666666663], [2034.0, 478.33333333333337], [2032.0, 478.5], [1988.0, 483.0], [1990.0, 482.5], [1992.0, 481.2], [1994.0, 480.0], [1996.0, 480.5], [1998.0, 482.5], [2014.0, 480.0], [2012.0, 480.0], [2010.0, 479.875], [2008.0, 481.2], [2006.0, 481.25], [2004.0, 481.0], [2000.0, 480.0], [2168.0, 2588.3749999999995], [2172.0, 5024.333333333333], [2120.0, 178.5], [2124.0, 178.0], [2104.0, 204.0], [2048.0, 479.0], [2052.0, 477.625], [2056.0, 477.0], [2060.0, 477.0], [2064.0, 477.0], [2068.0, 477.8], [2076.0, 477.0], [2096.0, 475.0], [2092.0, 476.0], [2088.0, 475.0], [2084.0, 476.0], [2080.0, 476.0], [2184.0, 499.0], [2176.0, 2065.5], [2680.0, 425.5], [2640.0, 429.16666666666663], [2684.0, 425.16666666666663], [2624.0, 433.0], [2632.0, 431.5], [2636.0, 430.0], [2644.0, 428.42857142857144], [2648.0, 428.1818181818182], [2652.0, 428.0], [2676.0, 425.62295081967204], [2672.0, 425.7142857142857], [2668.0, 428.0], [2664.0, 427.26666666666665], [2660.0, 427.1111111111111], [2656.0, 8342.5], [2588.0, 436.0], [2620.0, 431.5], [2616.0, 432.0], [2612.0, 434.0], [2608.0, 433.2727272727273], [2600.0, 433.25], [2596.0, 433.44444444444446], [2592.0, 434.7631578947369], [2812.0, 433.6071428571429], [2752.0, 4312.333333333333], [2756.0, 4088.0], [2772.0, 16941.3], [2808.0, 434.12500000000006], [2712.0, 73.5], [2708.0, 73.0], [2744.0, 31094.833333333332], [2736.0, 15869.0], [2720.0, 72.0], [2928.0, 436.3333333333333], [2932.0, 434.0], [2940.0, 434.25], [2936.0, 434.6666666666667], [2924.0, 435.6], [2920.0, 435.6666666666667], [2916.0, 438.0], [2912.0, 435.0], [2872.0, 442.0], [2832.0, 443.0], [2816.0, 433.0], [2952.0, 433.7142857142857], [2948.0, 433.6], [3000.0, 2516.204950295158], [2944.0, 435.0], [2960.0, 433.0], [2964.0, 433.25], [2968.0, 433.5], [2972.0, 432.0], [2992.0, 224.0], [2988.0, 226.5], [2984.0, 425.0], [2980.0, 431.875], [2169.0, 3630.0], [2121.0, 179.0], [2125.0, 32175.0], [2173.0, 501.0], [2049.0, 478.1666666666667], [2053.0, 478.0], [2057.0, 478.0], [2061.0, 477.5], [2065.0, 479.0], [2069.0, 476.8], [2073.0, 478.5], [2077.0, 476.5], [2093.0, 476.5], [2089.0, 475.0], [2085.0, 475.0], [2185.0, 3625.0], [2177.0, 500.5], [2673.0, 425.8], [2625.0, 430.7], [2629.0, 430.7272727272727], [2633.0, 430.07692307692304], [2641.0, 429.0], [2645.0, 428.8], [2649.0, 427.5], [2653.0, 428.0], [2677.0, 425.6666666666667], [2669.0, 426.1136363636363], [2665.0, 427.25], [2661.0, 426.3333333333333], [2657.0, 427.5714285714286], [2589.0, 436.0], [2617.0, 431.3333333333333], [2613.0, 431.0], [2605.0, 433.0], [2601.0, 433.0], [2593.0, 434.85714285714283], [2717.0, 72.0], [2805.0, 436.0], [2753.0, 4227.75], [2765.0, 10796.714285714284], [2769.0, 22086.0], [2773.0, 5731.0], [2713.0, 72.0], [2709.0, 73.0], [2749.0, 4344.0], [2745.0, 31093.571428571428], [2741.0, 31530.3], [2737.0, 5313.75], [2725.0, 70.8], [2721.0, 72.18181818181819], [2929.0, 436.42857142857144], [2941.0, 434.8], [2937.0, 434.5], [2933.0, 434.5], [2925.0, 435.30769230769226], [2921.0, 435.2857142857143], [2917.0, 436.6666666666667], [2829.0, 433.0], [2817.0, 29608.666666666668], [2869.0, 5704.0], [2953.0, 433.8], [2997.0, 217.0], [2945.0, 434.2], [2949.0, 433.5], [2957.0, 432.75], [2961.0, 433.25], [2965.0, 433.5], [2969.0, 434.0], [2973.0, 432.7647058823529], [2993.0, 224.5], [2989.0, 226.25], [2977.0, 432.6], [1073.0, 9260.0], [1083.0, 9256.333333333334], [1087.0, 9257.0], [1059.0, 9263.5], [1057.0, 9264.5], [1061.0, 9263.0], [1067.0, 9262.0], [1085.0, 9257.0], [1075.0, 9061.0], [1055.0, 9265.0], [1027.0, 11182.0], [1029.0, 11182.0], [1031.0, 10784.0], [1033.0, 36483.0], [1037.0, 10764.5], [1035.0, 10781.0], [1039.0, 10759.0], [1053.0, 10140.0], [1051.0, 10139.0], [1049.0, 9353.0], [1047.0, 9790.0], [1045.0, 10190.0], [1043.0, 11149.333333333334], [1071.0, 9261.0], [1069.0, 9261.0], [1143.0, 7979.0], [1127.0, 9212.0], [1147.0, 8172.0], [1151.0, 8171.0], [1123.0, 9217.5], [1121.0, 9218.0], [1131.0, 9190.0], [1133.0, 9191.0], [1135.0, 8350.0], [1149.0, 8171.5], [1145.0, 8174.0], [1141.0, 8177.0], [1139.0, 9143.0], [1137.0, 9143.0], [1103.0, 9239.0], [1101.0, 9240.0], [1099.0, 9240.0], [1097.0, 9242.0], [1095.0, 9251.5], [1093.0, 9251.5], [1091.0, 9252.0], [1089.0, 9253.0], [1117.0, 9221.0], [1113.0, 9227.0], [1109.0, 9235.5], [1107.0, 9237.0], [1209.0, 58959.0], [1213.0, 56463.0], [1185.0, 8125.0], [1187.0, 7292.0], [1189.0, 14138.0], [1193.0, 8279.0], [1195.0, 8278.0], [1199.0, 38324.666666666664], [1197.0, 36315.0], [1211.0, 28236.5], [1207.0, 20164.0], [1205.0, 14134.0], [1203.0, 44878.5], [1201.0, 20168.0], [1165.0, 7755.0], [1163.0, 8166.0], [1161.0, 8167.0], [1159.0, 8168.0], [1157.0, 8169.0], [1153.0, 8171.0], [1183.0, 14538.5], [1181.0, 8133.0], [1179.0, 8141.0], [1177.0, 8144.0], [1175.0, 8149.0], [1173.0, 8151.0], [1171.0, 8161.0], [1169.0, 7890.0], [1275.0, 8261.0], [1249.0, 16702.666666666668], [1253.0, 11543.0], [1257.0, 28783.666666666668], [1259.0, 46150.5], [1277.0, 14118.0], [1271.0, 33604.5], [1265.0, 12759.0], [1229.0, 15057.0], [1227.0, 39494.5], [1225.0, 24345.0], [1223.0, 8274.0], [1221.0, 15060.0], [1217.0, 43761.333333333336], [1245.0, 15056.0], [1243.0, 30132.666666666664], [1235.0, 23471.0], [1331.0, 13379.0], [1343.0, 53365.0], [1313.0, 9777.0], [1323.0, 33762.0], [1321.0, 20138.0], [1341.0, 8239.0], [1339.0, 41993.5], [1337.0, 36513.5], [1335.0, 37934.0], [1329.0, 50460.0], [1291.0, 38760.0], [1289.0, 33771.5], [1287.0, 16769.0], [1285.0, 33771.5], [1283.0, 16437.333333333332], [1311.0, 48193.5], [1307.0, 58936.0], [1303.0, 12752.0], [1299.0, 12752.0], [1355.0, 35304.0], [1379.0, 4016.0], [1383.0, 8917.0], [1385.0, 52415.0], [1381.0, 3104.0], [1377.0, 5023.0], [1359.0, 38622.0], [1357.0, 20014.0], [1351.0, 56134.0], [1349.0, 167469.0], [1345.0, 48180.0], [1375.0, 6257.0], [1373.0, 53360.0], [1371.0, 56287.0], [1369.0, 167426.0], [1367.0, 58793.0], [1365.0, 59131.0], [1361.0, 35528.0], [1465.0, 396.0], [1471.0, 1048.4545454545453], [1469.0, 396.0], [1431.0, 397.0], [1429.0, 397.5], [1427.0, 397.0], [1479.0, 2785.666666666667], [1487.0, 395.0], [1515.0, 393.5], [1483.0, 395.0], [1477.0, 395.0], [1475.0, 1591.6666666666665], [1473.0, 396.0], [1501.0, 396.0], [1499.0, 396.0], [1495.0, 396.0], [1491.0, 1112.2], [1489.0, 395.5], [1519.0, 385.0], [1517.0, 589.0], [1513.0, 393.0], [1511.0, 393.0], [2045.0, 478.6666666666667], [2047.0, 477.84615384615387], [2017.0, 480.5], [2019.0, 478.6666666666667], [2021.0, 478.85714285714283], [2023.0, 479.5], [2025.0, 478.5], [2027.0, 481.0], [2029.0, 479.4545454545455], [2031.0, 479.5454545454545], [2043.0, 478.3333333333333], [2041.0, 478.5], [2039.0, 478.25], [2037.0, 478.6666666666667], [2035.0, 479.0], [2033.0, 478.2068965517241], [2015.0, 479.5], [1987.0, 483.5], [1989.0, 482.7142857142857], [1991.0, 481.0], [1993.0, 480.0], [1995.0, 480.5], [1997.0, 481.75], [1999.0, 480.8], [2013.0, 480.3333333333334], [2011.0, 480.5], [2009.0, 480.2941176470589], [2007.0, 479.81818181818187], [2005.0, 481.5], [2003.0, 481.7142857142857], [2001.0, 481.0], [2170.0, 2782.5], [2150.0, 7290.0], [2118.0, 178.0], [2122.0, 179.0], [2126.0, 7299.0], [2174.0, 7285.0], [2166.0, 3104.9285714285716], [2058.0, 477.5714285714286], [2066.0, 476.59999999999997], [2078.0, 475.6666666666667], [2102.0, 209.0], [2094.0, 476.0], [2086.0, 475.6], [2190.0, 1613.75], [2186.0, 2021.0], [2182.0, 2064.5], [2178.0, 2555.0], [2638.0, 430.0], [2630.0, 3947.6666666666665], [2678.0, 426.0], [2634.0, 429.89655172413796], [2642.0, 429.0], [2646.0, 4385.125], [2650.0, 427.4285714285714], [2654.0, 428.0], [2674.0, 426.1351351351351], [2670.0, 426.21428571428567], [2666.0, 427.09999999999997], [2622.0, 431.75], [2610.0, 433.5], [2606.0, 433.4285714285714], [2594.0, 433.77777777777777], [2810.0, 436.0], [2754.0, 15027.5], [2758.0, 11643.0], [2766.0, 15353.142857142857], [2814.0, 433.3333333333333], [2718.0, 71.0], [2714.0, 72.0], [2750.0, 4615.571428571428], [2746.0, 5982.0], [2742.0, 31103.5], [2738.0, 31642.5], [2734.0, 42.0], [2722.0, 71.0], [2938.0, 434.2857142857143], [2942.0, 435.5], [2910.0, 436.6842105263158], [2886.0, 433.0], [2934.0, 435.1428571428571], [2926.0, 435.3333333333333], [2922.0, 435.0], [2914.0, 436.5], [2830.0, 434.30508474576277], [2818.0, 436.0], [2950.0, 433.9166666666667], [2958.0, 433.3333333333333], [2946.0, 433.6666666666667], [2954.0, 433.6666666666667], [2962.0, 433.2], [2966.0, 433.75], [2970.0, 433.6], [2998.0, 217.5], [2990.0, 225.6], [2982.0, 431.5], [2978.0, 433.0], [2167.0, 501.0], [2159.0, 51183.0], [2175.0, 2157.818181818182], [2123.0, 178.87500000000003], [2127.0, 51192.0], [2171.0, 7286.0], [2051.0, 477.4000000000001], [2055.0, 477.4615384615385], [2063.0, 477.25], [2067.0, 477.6666666666667], [2071.0, 477.0], [2075.0, 477.3333333333333], [2079.0, 476.8], [2103.0, 208.66666666666666], [2099.0, 212.33333333333334], [2095.0, 476.0], [2087.0, 476.3333333333333], [2183.0, 500.0], [2179.0, 2422.5], [2635.0, 429.8], [2631.0, 430.8], [2639.0, 429.49999999999994], [2643.0, 428.68181818181813], [2647.0, 428.69230769230774], [2651.0, 427.16666666666663], [2655.0, 428.07692307692315], [2683.0, 425.0], [2671.0, 425.88888888888886], [2667.0, 427.1764705882353], [2663.0, 427.0], [2659.0, 427.90909090909093], [2623.0, 433.0], [2619.0, 431.3333333333333], [2615.0, 430.0], [2611.0, 432.83333333333337], [2607.0, 433.0], [2603.0, 434.0], [2599.0, 433.0], [2815.0, 434.0], [2811.0, 433.875], [2763.0, 19201.0], [2755.0, 19209.0], [2759.0, 14163.0], [2767.0, 21124.909090909092], [2771.0, 23048.0], [2803.0, 1149.4078947368423], [2799.0, 5710.0], [2719.0, 72.06666666666665], [2715.0, 72.25], [2711.0, 73.0], [2747.0, 49862.0], [2743.0, 31094.9], [2739.0, 31637.0], [2735.0, 43.5], [2723.0, 71.0], [2927.0, 434.8888888888889], [2935.0, 434.8181818181818], [2939.0, 435.0], [2931.0, 434.5], [2923.0, 436.3333333333333], [2919.0, 436.0833333333333], [2915.0, 438.0], [2831.0, 5705.0], [2955.0, 434.0], [2947.0, 433.3333333333333], [2991.0, 225.66666666666666], [2951.0, 433.68749999999994], [2959.0, 432.8], [2963.0, 433.75], [2967.0, 433.5], [2971.0, 433.0], [2999.0, 218.00000000000003], [2995.0, 216.85714285714286], [2987.0, 392.0], [2983.0, 425.0], [2979.0, 432.5], [1.0, 74102.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2981.800314628143, 2705.1768499927234]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1411.2, "minX": 1.68287808E12, "maxY": 623126.2, "series": [{"data": [[1.6828782E12, 623126.2], [1.68287838E12, 159672.18333333332], [1.68287832E12, 580006.3333333334], [1.68287844E12, 2001.0166666666667], [1.68287814E12, 556243.2833333333], [1.68287808E12, 367095.6], [1.68287826E12, 599565.3666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6828782E12, 437371.2], [1.68287838E12, 112786.8], [1.68287832E12, 405913.2], [1.68287844E12, 1411.2], [1.68287814E12, 393078.0], [1.68287808E12, 258619.2], [1.68287826E12, 418126.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287844E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1391.132161881253, "minX": 1.68287808E12, "maxY": 85646.1607142857, "series": [{"data": [[1.6828782E12, 4121.722955854158], [1.68287838E12, 4400.194167534585], [1.68287832E12, 2806.130619922696], [1.68287844E12, 85646.1607142857], [1.68287814E12, 1892.0087580638258], [1.68287808E12, 1391.132161881253], [1.68287826E12, 1965.595937111471]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287844E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1391.1230349486807, "minX": 1.68287808E12, "maxY": 85646.1369047619, "series": [{"data": [[1.6828782E12, 4114.671919385801], [1.68287838E12, 4372.764543966665], [1.68287832E12, 2703.8189222151123], [1.68287844E12, 85646.1369047619], [1.68287814E12, 1885.6599521510607], [1.68287808E12, 1391.1230349486807], [1.68287826E12, 1905.7962740143596]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287844E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 82.80450175393007, "minX": 1.68287808E12, "maxY": 2396.326007677542, "series": [{"data": [[1.6828782E12, 2396.326007677542], [1.68287838E12, 941.7347120964147], [1.68287832E12, 998.6838580317063], [1.68287844E12, 1607.9047619047615], [1.68287814E12, 157.25979407869588], [1.68287808E12, 82.80450175393007], [1.68287826E12, 497.44106204627866]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287844E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.68287808E12, "maxY": 247719.0, "series": [{"data": [[1.6828782E12, 142753.0], [1.68287838E12, 167469.0], [1.68287832E12, 247719.0], [1.68287844E12, 105628.0], [1.68287814E12, 99857.0], [1.68287808E12, 39905.0], [1.68287826E12, 211720.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6828782E12, 780.0], [1.68287838E12, 11763.2], [1.68287832E12, 988.0], [1.68287844E12, 103635.1], [1.68287814E12, 9141.0], [1.68287808E12, 443.7000000000626], [1.68287826E12, 766.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6828782E12, 10811.110000000463], [1.68287838E12, 64219.0], [1.68287832E12, 127675.0], [1.68287844E12, 105627.31], [1.68287814E12, 19492.790000000034], [1.68287808E12, 31882.0], [1.68287826E12, 73096.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6828782E12, 805.0], [1.68287838E12, 31636.0], [1.68287832E12, 1262.9500000000007], [1.68287844E12, 103637.0], [1.68287814E12, 10344.20000000007], [1.68287808E12, 10093.95], [1.68287826E12, 793.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6828782E12, 10.0], [1.68287838E12, 21.0], [1.68287832E12, 15.0], [1.68287844E12, 40551.0], [1.68287814E12, 5.0], [1.68287808E12, 8.0], [1.68287826E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6828782E12, 452.0], [1.68287838E12, 422.0], [1.68287832E12, 442.0], [1.68287844E12, 100417.0], [1.68287814E12, 73.0], [1.68287808E12, 219.0], [1.68287826E12, 445.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287844E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 29.0, "minX": 1.0, "maxY": 133683.0, "series": [{"data": [[2.0, 57641.5], [3.0, 43369.0], [4.0, 54040.0], [5.0, 32920.5], [6.0, 31607.0], [7.0, 11013.5], [8.0, 12687.5], [10.0, 43207.5], [11.0, 15242.0], [13.0, 6441.0], [14.0, 10881.0], [15.0, 42641.0], [19.0, 72458.0], [20.0, 46848.5], [23.0, 37470.0], [27.0, 14747.5], [28.0, 35880.0], [30.0, 64182.0], [32.0, 24400.5], [35.0, 31239.0], [36.0, 7884.0], [45.0, 38161.0], [47.0, 100344.0], [48.0, 8166.5], [53.0, 71.0], [52.0, 37532.5], [56.0, 23436.5], [59.0, 7338.0], [61.0, 13496.0], [78.0, 109.0], [81.0, 100657.0], [86.0, 13636.0], [87.0, 9241.0], [91.0, 60362.0], [90.0, 11181.0], [92.0, 79022.0], [93.0, 13849.0], [99.0, 90.0], [105.0, 103.0], [111.0, 7440.0], [115.0, 133192.0], [119.0, 10373.0], [123.0, 18141.0], [131.0, 99.0], [130.0, 37222.5], [143.0, 111.0], [142.0, 307.0], [136.0, 22502.0], [175.0, 18261.0], [189.0, 151.0], [190.0, 8610.0], [188.0, 36303.0], [199.0, 34448.0], [204.0, 152.0], [211.0, 150.0], [217.0, 9300.0], [216.0, 157.0], [227.0, 1326.0], [231.0, 9980.0], [225.0, 31433.0], [245.0, 10142.0], [250.0, 29.0], [284.0, 357.0], [302.0, 347.0], [297.0, 211.0], [301.0, 194.0], [328.0, 113.0], [326.0, 9151.0], [337.0, 284.0], [386.0, 5124.0], [403.0, 220.0], [414.0, 30.0], [402.0, 9484.0], [404.0, 8321.0], [430.0, 350.0], [447.0, 347.0], [462.0, 375.0], [471.0, 184.0], [472.0, 713.0], [486.0, 282.0], [495.0, 452.0], [511.0, 90.0], [562.0, 7596.0], [567.0, 10192.0], [558.0, 8180.0], [604.0, 487.0], [582.0, 67.5], [600.0, 319.0], [599.0, 425.0], [630.0, 9712.0], [632.0, 429.0], [656.0, 241.0], [666.0, 344.0], [649.0, 436.0], [683.0, 373.0], [693.0, 67.0], [680.0, 349.0], [695.0, 343.0], [675.0, 483.0], [703.0, 7986.0], [714.0, 9527.0], [728.0, 786.0], [729.0, 387.0], [717.0, 468.0], [734.0, 434.0], [759.0, 8031.0], [765.0, 473.0], [764.0, 440.0], [758.0, 389.0], [743.0, 418.0], [752.0, 413.0], [737.0, 399.0], [741.0, 478.0], [793.0, 416.0], [785.0, 115.0], [792.0, 451.0], [789.0, 383.0], [786.0, 450.0], [796.0, 406.0], [798.0, 353.0], [775.0, 459.0], [794.0, 408.0], [795.0, 355.0], [773.0, 420.0], [781.0, 979.0], [783.0, 394.0], [774.0, 410.0], [805.0, 445.0], [802.0, 395.0], [808.0, 268.0], [812.0, 408.0], [804.0, 347.0], [803.0, 406.0], [824.0, 422.0], [816.0, 569.0], [825.0, 405.0], [830.0, 446.0], [807.0, 423.0], [819.0, 445.0], [800.0, 413.0], [815.0, 416.0], [818.0, 417.0], [813.0, 436.0], [846.0, 8976.0], [834.0, 48.0], [859.0, 76.0], [842.0, 417.0], [863.0, 370.0], [860.0, 352.0], [862.0, 390.0], [843.0, 428.0], [883.0, 55.0], [864.0, 399.0], [882.0, 736.0], [867.0, 541.0], [893.0, 399.0], [871.0, 400.0], [881.0, 464.0], [900.0, 9256.0], [927.0, 230.0], [904.0, 89.0], [914.0, 96.0], [899.0, 291.0], [905.0, 396.0], [924.0, 408.0], [910.0, 329.0], [908.0, 285.0], [941.0, 224.0], [977.0, 372.0], [1086.0, 32.0], [1044.0, 36.0], [1025.0, 89.0], [1075.0, 78.0], [1058.0, 484.0], [1051.0, 379.0], [1052.0, 384.0], [1121.0, 283.0], [1117.0, 50.0], [1096.0, 62.0], [1146.0, 231.0], [1164.0, 118.0], [1208.0, 188.0], [1191.0, 220.0], [1154.0, 725.0], [1246.0, 408.0], [1271.0, 821.0], [1286.0, 180.0], [1325.0, 87.0], [1295.0, 268.0], [1341.0, 218.0], [1296.0, 562.0], [1350.0, 230.0], [1344.0, 240.0], [1383.0, 317.0], [1368.0, 62.0], [1354.0, 595.0], [1448.0, 247.0], [1425.0, 178.0], [1461.0, 430.0], [1465.0, 595.0], [1427.0, 513.0], [1528.0, 299.0], [1485.0, 233.0], [1529.0, 34.0], [1478.0, 450.0], [1506.0, 386.0], [1505.0, 533.0], [1500.0, 589.0], [1523.0, 415.0], [1532.0, 647.0], [1484.0, 401.0], [1550.0, 75.0], [1560.0, 338.0], [1579.0, 382.0], [1555.0, 729.0], [1615.0, 460.0], [1637.0, 38.0], [1600.0, 457.0], [1606.0, 783.0], [1602.0, 609.0], [1614.0, 716.0], [1622.0, 718.0], [1640.0, 985.0], [1634.0, 477.0], [1722.0, 125.0], [1668.0, 65.0], [1689.0, 637.0], [1674.0, 394.0], [1715.0, 453.0], [1802.0, 393.0], [1894.0, 203.0], [1908.0, 362.0], [1884.0, 616.0], [1949.0, 127.0], [2015.0, 172.0], [2013.0, 284.0], [2011.0, 51.0], [2057.0, 211.0], [2078.0, 56.0], [2088.0, 198.0], [2149.0, 381.0], [2218.0, 274.0], [2224.0, 254.5], [2183.0, 47.0], [2402.0, 564.0], [2330.0, 703.0], [2342.0, 672.0], [2387.0, 842.0], [2386.0, 852.0], [2451.0, 636.0], [2454.0, 528.0], [2457.0, 978.0], [2681.0, 723.0], [1.0, 69800.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10.0, 15220.0], [47.0, 14469.0], [818.0, 83416.0], [812.0, 124452.0], [834.0, 15535.0], [1146.0, 42649.0], [297.0, 36357.0], [19.0, 133683.0], [1465.0, 64197.0], [92.0, 77162.0], [1614.0, 8508.0], [1689.0, 11446.5], [28.0, 66404.0], [486.0, 87927.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2681.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 133192.0, "series": [{"data": [[2.0, 57641.5], [3.0, 43369.0], [4.0, 54040.0], [5.0, 32920.5], [6.0, 31607.0], [7.0, 11013.5], [8.0, 12687.5], [10.0, 43207.5], [11.0, 15242.0], [13.0, 6441.0], [14.0, 10881.0], [15.0, 42641.0], [19.0, 72458.0], [20.0, 46848.5], [23.0, 37470.0], [27.0, 14747.5], [28.0, 35880.0], [30.0, 64182.0], [32.0, 24400.5], [35.0, 31239.0], [36.0, 7884.0], [45.0, 38161.0], [47.0, 100344.0], [48.0, 8166.5], [53.0, 71.0], [52.0, 37532.5], [56.0, 23436.5], [59.0, 7338.0], [61.0, 13496.0], [78.0, 109.0], [81.0, 100657.0], [86.0, 13636.0], [87.0, 9241.0], [91.0, 60362.0], [90.0, 11181.0], [92.0, 79022.0], [93.0, 13849.0], [99.0, 90.0], [105.0, 103.0], [111.0, 7440.0], [115.0, 133192.0], [119.0, 10373.0], [123.0, 18141.0], [131.0, 99.0], [130.0, 37222.5], [143.0, 111.0], [142.0, 307.0], [136.0, 22502.0], [175.0, 18261.0], [189.0, 151.0], [190.0, 8610.0], [188.0, 36303.0], [199.0, 34448.0], [204.0, 152.0], [211.0, 150.0], [217.0, 9300.0], [216.0, 157.0], [227.0, 1326.0], [231.0, 9980.0], [225.0, 31433.0], [245.0, 10142.0], [250.0, 29.0], [284.0, 357.0], [302.0, 347.0], [297.0, 211.0], [301.0, 194.0], [328.0, 113.0], [326.0, 9151.0], [337.0, 284.0], [386.0, 5124.0], [403.0, 220.0], [414.0, 30.0], [402.0, 9484.0], [404.0, 8321.0], [430.0, 350.0], [447.0, 347.0], [462.0, 375.0], [471.0, 184.0], [472.0, 713.0], [486.0, 282.0], [495.0, 452.0], [511.0, 90.0], [562.0, 7596.0], [567.0, 10192.0], [558.0, 8180.0], [604.0, 487.0], [582.0, 67.5], [600.0, 319.0], [599.0, 425.0], [630.0, 9712.0], [632.0, 429.0], [656.0, 241.0], [666.0, 344.0], [649.0, 436.0], [683.0, 373.0], [693.0, 67.0], [680.0, 349.0], [695.0, 343.0], [675.0, 483.0], [703.0, 7986.0], [714.0, 9527.0], [728.0, 786.0], [729.0, 387.0], [717.0, 468.0], [734.0, 434.0], [759.0, 8031.0], [765.0, 473.0], [764.0, 440.0], [758.0, 389.0], [743.0, 418.0], [752.0, 413.0], [737.0, 399.0], [741.0, 478.0], [793.0, 416.0], [785.0, 115.0], [792.0, 451.0], [789.0, 383.0], [786.0, 450.0], [796.0, 406.0], [798.0, 353.0], [775.0, 459.0], [794.0, 408.0], [795.0, 355.0], [773.0, 420.0], [781.0, 979.0], [783.0, 394.0], [774.0, 410.0], [805.0, 445.0], [802.0, 395.0], [808.0, 268.0], [812.0, 408.0], [804.0, 347.0], [803.0, 406.0], [824.0, 422.0], [816.0, 569.0], [825.0, 405.0], [830.0, 446.0], [807.0, 423.0], [819.0, 445.0], [800.0, 413.0], [815.0, 416.0], [818.0, 417.0], [813.0, 436.0], [846.0, 8976.0], [834.0, 48.0], [859.0, 76.0], [842.0, 417.0], [863.0, 370.0], [860.0, 352.0], [862.0, 390.0], [843.0, 428.0], [883.0, 55.0], [864.0, 399.0], [882.0, 736.0], [867.0, 541.0], [893.0, 399.0], [871.0, 400.0], [881.0, 464.0], [900.0, 9256.0], [927.0, 230.0], [904.0, 89.0], [914.0, 96.0], [899.0, 291.0], [905.0, 396.0], [924.0, 408.0], [910.0, 329.0], [908.0, 285.0], [941.0, 224.0], [977.0, 372.0], [1086.0, 32.0], [1044.0, 36.0], [1025.0, 89.0], [1075.0, 78.0], [1058.0, 484.0], [1051.0, 379.0], [1052.0, 384.0], [1121.0, 283.0], [1117.0, 50.0], [1096.0, 62.0], [1146.0, 231.0], [1164.0, 118.0], [1208.0, 188.0], [1191.0, 220.0], [1154.0, 725.0], [1246.0, 408.0], [1271.0, 821.0], [1286.0, 180.0], [1325.0, 87.0], [1295.0, 268.0], [1341.0, 218.0], [1296.0, 562.0], [1350.0, 230.0], [1344.0, 240.0], [1383.0, 317.0], [1368.0, 62.0], [1354.0, 595.0], [1448.0, 247.0], [1425.0, 178.0], [1461.0, 430.0], [1465.0, 595.0], [1427.0, 513.0], [1528.0, 299.0], [1485.0, 233.0], [1529.0, 34.0], [1478.0, 450.0], [1506.0, 386.0], [1505.0, 533.0], [1500.0, 589.0], [1523.0, 415.0], [1532.0, 647.0], [1484.0, 401.0], [1550.0, 75.0], [1560.0, 338.0], [1579.0, 382.0], [1555.0, 729.0], [1615.0, 460.0], [1637.0, 38.0], [1600.0, 457.0], [1606.0, 783.0], [1602.0, 609.0], [1614.0, 716.0], [1622.0, 718.0], [1640.0, 985.0], [1634.0, 477.0], [1722.0, 125.0], [1668.0, 65.0], [1689.0, 637.0], [1674.0, 394.0], [1715.0, 453.0], [1802.0, 393.0], [1894.0, 203.0], [1908.0, 362.0], [1884.0, 616.0], [1949.0, 127.0], [2015.0, 172.0], [2013.0, 284.0], [2011.0, 51.0], [2057.0, 211.0], [2078.0, 56.0], [2088.0, 198.0], [2149.0, 381.0], [2218.0, 274.0], [2224.0, 254.5], [2183.0, 47.0], [2402.0, 564.0], [2330.0, 703.0], [2342.0, 672.0], [2387.0, 842.0], [2386.0, 852.0], [2451.0, 636.0], [2454.0, 528.0], [2457.0, 978.0], [2681.0, 723.0], [1.0, 69800.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10.0, 0.0], [47.0, 0.0], [818.0, 0.0], [812.0, 0.0], [834.0, 0.0], [1146.0, 0.0], [297.0, 0.0], [19.0, 0.0], [1465.0, 0.0], [92.0, 0.0], [1614.0, 0.0], [1689.0, 0.0], [28.0, 0.0], [486.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2681.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 212.58333333333334, "minX": 1.68287808E12, "maxY": 866.6666666666666, "series": [{"data": [[1.6828782E12, 866.6666666666666], [1.68287838E12, 212.58333333333334], [1.68287832E12, 786.6666666666666], [1.68287814E12, 773.3333333333334], [1.68287808E12, 560.0], [1.68287826E12, 826.6666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287838E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.68287808E12, "maxY": 867.8, "series": [{"data": [[1.6828782E12, 867.8], [1.68287838E12, 223.78333333333333], [1.68287832E12, 805.3833333333333], [1.68287844E12, 2.8], [1.68287814E12, 779.9166666666666], [1.68287808E12, 513.1333333333333], [1.68287826E12, 829.6166666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6828782E12, 0.5333333333333333], [1.68287838E12, 0.25], [1.68287832E12, 0.9], [1.68287814E12, 0.31666666666666665], [1.68287826E12, 1.4833333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287844E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.68287808E12, "maxY": 867.8, "series": [{"data": [[1.6828782E12, 867.8], [1.68287838E12, 223.78333333333333], [1.68287832E12, 805.3833333333333], [1.68287844E12, 2.8], [1.68287814E12, 779.9166666666666], [1.68287808E12, 513.1333333333333], [1.68287826E12, 829.6166666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6828782E12, 0.5333333333333333], [1.68287838E12, 0.25], [1.68287832E12, 0.9], [1.68287814E12, 0.31666666666666665], [1.68287826E12, 1.4833333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287844E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.68287808E12, "maxY": 867.8, "series": [{"data": [[1.6828782E12, 867.8], [1.68287838E12, 223.78333333333333], [1.68287832E12, 805.3833333333333], [1.68287844E12, 2.8], [1.68287814E12, 779.9166666666666], [1.68287808E12, 513.1333333333333], [1.68287826E12, 829.6166666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6828782E12, 0.5333333333333333], [1.68287838E12, 0.25], [1.68287832E12, 0.9], [1.68287814E12, 0.31666666666666665], [1.68287826E12, 1.4833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68287844E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

