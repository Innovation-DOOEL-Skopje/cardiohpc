/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 239556.0, "series": [{"data": [[0.0, 6.0], [0.1, 19.0], [0.2, 21.0], [0.3, 23.0], [0.4, 23.0], [0.5, 25.0], [0.6, 26.0], [0.7, 27.0], [0.8, 28.0], [0.9, 29.0], [1.0, 30.0], [1.1, 30.0], [1.2, 31.0], [1.3, 32.0], [1.4, 32.0], [1.5, 33.0], [1.6, 34.0], [1.7, 34.0], [1.8, 35.0], [1.9, 35.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 37.0], [2.4, 37.0], [2.5, 38.0], [2.6, 38.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 40.0], [3.1, 40.0], [3.2, 41.0], [3.3, 41.0], [3.4, 41.0], [3.5, 42.0], [3.6, 42.0], [3.7, 43.0], [3.8, 43.0], [3.9, 43.0], [4.0, 44.0], [4.1, 44.0], [4.2, 44.0], [4.3, 45.0], [4.4, 45.0], [4.5, 46.0], [4.6, 46.0], [4.7, 46.0], [4.8, 47.0], [4.9, 47.0], [5.0, 47.0], [5.1, 48.0], [5.2, 48.0], [5.3, 48.0], [5.4, 49.0], [5.5, 49.0], [5.6, 49.0], [5.7, 50.0], [5.8, 50.0], [5.9, 51.0], [6.0, 51.0], [6.1, 51.0], [6.2, 51.0], [6.3, 52.0], [6.4, 52.0], [6.5, 52.0], [6.6, 52.0], [6.7, 53.0], [6.8, 53.0], [6.9, 53.0], [7.0, 54.0], [7.1, 54.0], [7.2, 54.0], [7.3, 55.0], [7.4, 55.0], [7.5, 55.0], [7.6, 55.0], [7.7, 55.0], [7.8, 56.0], [7.9, 56.0], [8.0, 56.0], [8.1, 56.0], [8.2, 56.0], [8.3, 57.0], [8.4, 57.0], [8.5, 57.0], [8.6, 57.0], [8.7, 57.0], [8.8, 58.0], [8.9, 58.0], [9.0, 58.0], [9.1, 58.0], [9.2, 59.0], [9.3, 59.0], [9.4, 59.0], [9.5, 59.0], [9.6, 60.0], [9.7, 60.0], [9.8, 60.0], [9.9, 60.0], [10.0, 61.0], [10.1, 61.0], [10.2, 61.0], [10.3, 61.0], [10.4, 62.0], [10.5, 62.0], [10.6, 62.0], [10.7, 63.0], [10.8, 63.0], [10.9, 63.0], [11.0, 63.0], [11.1, 64.0], [11.2, 64.0], [11.3, 64.0], [11.4, 65.0], [11.5, 65.0], [11.6, 65.0], [11.7, 65.0], [11.8, 66.0], [11.9, 66.0], [12.0, 66.0], [12.1, 66.0], [12.2, 67.0], [12.3, 67.0], [12.4, 67.0], [12.5, 67.0], [12.6, 68.0], [12.7, 68.0], [12.8, 68.0], [12.9, 69.0], [13.0, 69.0], [13.1, 69.0], [13.2, 70.0], [13.3, 70.0], [13.4, 70.0], [13.5, 70.0], [13.6, 71.0], [13.7, 71.0], [13.8, 71.0], [13.9, 71.0], [14.0, 72.0], [14.1, 72.0], [14.2, 72.0], [14.3, 72.0], [14.4, 73.0], [14.5, 73.0], [14.6, 73.0], [14.7, 73.0], [14.8, 74.0], [14.9, 74.0], [15.0, 74.0], [15.1, 75.0], [15.2, 75.0], [15.3, 75.0], [15.4, 75.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 77.0], [15.9, 77.0], [16.0, 77.0], [16.1, 77.0], [16.2, 78.0], [16.3, 78.0], [16.4, 78.0], [16.5, 78.0], [16.6, 78.0], [16.7, 79.0], [16.8, 79.0], [16.9, 79.0], [17.0, 79.0], [17.1, 80.0], [17.2, 80.0], [17.3, 80.0], [17.4, 80.0], [17.5, 81.0], [17.6, 81.0], [17.7, 81.0], [17.8, 82.0], [17.9, 82.0], [18.0, 82.0], [18.1, 82.0], [18.2, 83.0], [18.3, 83.0], [18.4, 83.0], [18.5, 83.0], [18.6, 84.0], [18.7, 84.0], [18.8, 84.0], [18.9, 85.0], [19.0, 85.0], [19.1, 85.0], [19.2, 86.0], [19.3, 86.0], [19.4, 87.0], [19.5, 87.0], [19.6, 87.0], [19.7, 88.0], [19.8, 88.0], [19.9, 88.0], [20.0, 88.0], [20.1, 89.0], [20.2, 89.0], [20.3, 89.0], [20.4, 90.0], [20.5, 90.0], [20.6, 90.0], [20.7, 90.0], [20.8, 91.0], [20.9, 91.0], [21.0, 91.0], [21.1, 91.0], [21.2, 92.0], [21.3, 92.0], [21.4, 93.0], [21.5, 93.0], [21.6, 93.0], [21.7, 94.0], [21.8, 94.0], [21.9, 95.0], [22.0, 95.0], [22.1, 96.0], [22.2, 96.0], [22.3, 97.0], [22.4, 97.0], [22.5, 97.0], [22.6, 98.0], [22.7, 98.0], [22.8, 98.0], [22.9, 99.0], [23.0, 99.0], [23.1, 100.0], [23.2, 101.0], [23.3, 101.0], [23.4, 102.0], [23.5, 103.0], [23.6, 103.0], [23.7, 104.0], [23.8, 104.0], [23.9, 105.0], [24.0, 105.0], [24.1, 106.0], [24.2, 106.0], [24.3, 107.0], [24.4, 107.0], [24.5, 108.0], [24.6, 108.0], [24.7, 109.0], [24.8, 110.0], [24.9, 111.0], [25.0, 111.0], [25.1, 112.0], [25.2, 112.0], [25.3, 113.0], [25.4, 113.0], [25.5, 114.0], [25.6, 114.0], [25.7, 115.0], [25.8, 115.0], [25.9, 116.0], [26.0, 116.0], [26.1, 116.0], [26.2, 117.0], [26.3, 117.0], [26.4, 118.0], [26.5, 118.0], [26.6, 119.0], [26.7, 120.0], [26.8, 121.0], [26.9, 121.0], [27.0, 122.0], [27.1, 122.0], [27.2, 123.0], [27.3, 124.0], [27.4, 125.0], [27.5, 125.0], [27.6, 126.0], [27.7, 126.0], [27.8, 127.0], [27.9, 127.0], [28.0, 128.0], [28.1, 128.0], [28.2, 128.0], [28.3, 129.0], [28.4, 129.0], [28.5, 130.0], [28.6, 130.0], [28.7, 131.0], [28.8, 132.0], [28.9, 132.0], [29.0, 133.0], [29.1, 133.0], [29.2, 134.0], [29.3, 135.0], [29.4, 135.0], [29.5, 136.0], [29.6, 137.0], [29.7, 137.0], [29.8, 138.0], [29.9, 139.0], [30.0, 140.0], [30.1, 140.0], [30.2, 141.0], [30.3, 142.0], [30.4, 143.0], [30.5, 144.0], [30.6, 146.0], [30.7, 147.0], [30.8, 148.0], [30.9, 148.0], [31.0, 149.0], [31.1, 150.0], [31.2, 150.0], [31.3, 151.0], [31.4, 152.0], [31.5, 153.0], [31.6, 154.0], [31.7, 154.0], [31.8, 155.0], [31.9, 155.0], [32.0, 157.0], [32.1, 158.0], [32.2, 161.0], [32.3, 162.0], [32.4, 163.0], [32.5, 164.0], [32.6, 165.0], [32.7, 166.0], [32.8, 166.0], [32.9, 167.0], [33.0, 168.0], [33.1, 169.0], [33.2, 169.0], [33.3, 170.0], [33.4, 171.0], [33.5, 172.0], [33.6, 173.0], [33.7, 175.0], [33.8, 176.0], [33.9, 177.0], [34.0, 177.0], [34.1, 178.0], [34.2, 179.0], [34.3, 179.0], [34.4, 179.0], [34.5, 180.0], [34.6, 180.0], [34.7, 181.0], [34.8, 182.0], [34.9, 182.0], [35.0, 183.0], [35.1, 184.0], [35.2, 185.0], [35.3, 185.0], [35.4, 186.0], [35.5, 187.0], [35.6, 189.0], [35.7, 190.0], [35.8, 192.0], [35.9, 193.0], [36.0, 193.0], [36.1, 194.0], [36.2, 195.0], [36.3, 197.0], [36.4, 198.0], [36.5, 199.0], [36.6, 200.0], [36.7, 200.0], [36.8, 201.0], [36.9, 201.0], [37.0, 202.0], [37.1, 204.0], [37.2, 205.0], [37.3, 206.0], [37.4, 207.0], [37.5, 208.0], [37.6, 209.0], [37.7, 210.0], [37.8, 210.0], [37.9, 211.0], [38.0, 211.0], [38.1, 212.0], [38.2, 212.0], [38.3, 213.0], [38.4, 214.0], [38.5, 215.0], [38.6, 216.0], [38.7, 217.0], [38.8, 218.0], [38.9, 218.0], [39.0, 219.0], [39.1, 220.0], [39.2, 220.0], [39.3, 221.0], [39.4, 222.0], [39.5, 222.0], [39.6, 223.0], [39.7, 223.0], [39.8, 224.0], [39.9, 224.0], [40.0, 225.0], [40.1, 226.0], [40.2, 227.0], [40.3, 227.0], [40.4, 228.0], [40.5, 229.0], [40.6, 229.0], [40.7, 230.0], [40.8, 230.0], [40.9, 230.0], [41.0, 230.0], [41.1, 231.0], [41.2, 231.0], [41.3, 231.0], [41.4, 232.0], [41.5, 232.0], [41.6, 232.0], [41.7, 233.0], [41.8, 233.0], [41.9, 234.0], [42.0, 234.0], [42.1, 235.0], [42.2, 236.0], [42.3, 236.0], [42.4, 237.0], [42.5, 238.0], [42.6, 238.0], [42.7, 239.0], [42.8, 240.0], [42.9, 240.0], [43.0, 241.0], [43.1, 241.0], [43.2, 241.0], [43.3, 242.0], [43.4, 242.0], [43.5, 242.0], [43.6, 242.0], [43.7, 243.0], [43.8, 243.0], [43.9, 243.0], [44.0, 244.0], [44.1, 244.0], [44.2, 244.0], [44.3, 245.0], [44.4, 245.0], [44.5, 246.0], [44.6, 246.0], [44.7, 246.0], [44.8, 247.0], [44.9, 247.0], [45.0, 247.0], [45.1, 248.0], [45.2, 248.0], [45.3, 249.0], [45.4, 249.0], [45.5, 249.0], [45.6, 250.0], [45.7, 250.0], [45.8, 250.0], [45.9, 251.0], [46.0, 251.0], [46.1, 251.0], [46.2, 252.0], [46.3, 252.0], [46.4, 252.0], [46.5, 252.0], [46.6, 253.0], [46.7, 253.0], [46.8, 253.0], [46.9, 253.0], [47.0, 254.0], [47.1, 254.0], [47.2, 255.0], [47.3, 255.0], [47.4, 255.0], [47.5, 256.0], [47.6, 256.0], [47.7, 256.0], [47.8, 257.0], [47.9, 257.0], [48.0, 257.0], [48.1, 257.0], [48.2, 258.0], [48.3, 258.0], [48.4, 258.0], [48.5, 258.0], [48.6, 258.0], [48.7, 259.0], [48.8, 259.0], [48.9, 259.0], [49.0, 260.0], [49.1, 260.0], [49.2, 261.0], [49.3, 261.0], [49.4, 262.0], [49.5, 262.0], [49.6, 263.0], [49.7, 263.0], [49.8, 263.0], [49.9, 264.0], [50.0, 264.0], [50.1, 264.0], [50.2, 265.0], [50.3, 265.0], [50.4, 265.0], [50.5, 266.0], [50.6, 266.0], [50.7, 266.0], [50.8, 267.0], [50.9, 267.0], [51.0, 268.0], [51.1, 268.0], [51.2, 269.0], [51.3, 269.0], [51.4, 270.0], [51.5, 270.0], [51.6, 271.0], [51.7, 271.0], [51.8, 271.0], [51.9, 272.0], [52.0, 272.0], [52.1, 272.0], [52.2, 273.0], [52.3, 273.0], [52.4, 273.0], [52.5, 273.0], [52.6, 274.0], [52.7, 274.0], [52.8, 274.0], [52.9, 275.0], [53.0, 275.0], [53.1, 275.0], [53.2, 276.0], [53.3, 276.0], [53.4, 276.0], [53.5, 277.0], [53.6, 277.0], [53.7, 278.0], [53.8, 278.0], [53.9, 278.0], [54.0, 278.0], [54.1, 279.0], [54.2, 279.0], [54.3, 279.0], [54.4, 279.0], [54.5, 279.0], [54.6, 280.0], [54.7, 280.0], [54.8, 280.0], [54.9, 280.0], [55.0, 281.0], [55.1, 281.0], [55.2, 281.0], [55.3, 281.0], [55.4, 281.0], [55.5, 282.0], [55.6, 282.0], [55.7, 282.0], [55.8, 282.0], [55.9, 283.0], [56.0, 283.0], [56.1, 283.0], [56.2, 283.0], [56.3, 283.0], [56.4, 284.0], [56.5, 284.0], [56.6, 284.0], [56.7, 284.0], [56.8, 284.0], [56.9, 285.0], [57.0, 285.0], [57.1, 285.0], [57.2, 285.0], [57.3, 285.0], [57.4, 286.0], [57.5, 286.0], [57.6, 286.0], [57.7, 286.0], [57.8, 286.0], [57.9, 286.0], [58.0, 286.0], [58.1, 287.0], [58.2, 287.0], [58.3, 287.0], [58.4, 287.0], [58.5, 287.0], [58.6, 287.0], [58.7, 288.0], [58.8, 288.0], [58.9, 288.0], [59.0, 288.0], [59.1, 288.0], [59.2, 288.0], [59.3, 289.0], [59.4, 289.0], [59.5, 289.0], [59.6, 289.0], [59.7, 289.0], [59.8, 289.0], [59.9, 290.0], [60.0, 290.0], [60.1, 290.0], [60.2, 290.0], [60.3, 291.0], [60.4, 291.0], [60.5, 291.0], [60.6, 291.0], [60.7, 291.0], [60.8, 292.0], [60.9, 292.0], [61.0, 292.0], [61.1, 292.0], [61.2, 292.0], [61.3, 292.0], [61.4, 293.0], [61.5, 293.0], [61.6, 293.0], [61.7, 293.0], [61.8, 293.0], [61.9, 293.0], [62.0, 293.0], [62.1, 294.0], [62.2, 294.0], [62.3, 294.0], [62.4, 294.0], [62.5, 294.0], [62.6, 294.0], [62.7, 294.0], [62.8, 295.0], [62.9, 295.0], [63.0, 295.0], [63.1, 295.0], [63.2, 295.0], [63.3, 295.0], [63.4, 296.0], [63.5, 296.0], [63.6, 296.0], [63.7, 296.0], [63.8, 296.0], [63.9, 297.0], [64.0, 297.0], [64.1, 297.0], [64.2, 298.0], [64.3, 298.0], [64.4, 298.0], [64.5, 299.0], [64.6, 299.0], [64.7, 299.0], [64.8, 300.0], [64.9, 300.0], [65.0, 300.0], [65.1, 300.0], [65.2, 300.0], [65.3, 301.0], [65.4, 301.0], [65.5, 301.0], [65.6, 301.0], [65.7, 301.0], [65.8, 302.0], [65.9, 302.0], [66.0, 302.0], [66.1, 302.0], [66.2, 303.0], [66.3, 303.0], [66.4, 303.0], [66.5, 303.0], [66.6, 304.0], [66.7, 304.0], [66.8, 305.0], [66.9, 305.0], [67.0, 305.0], [67.1, 306.0], [67.2, 306.0], [67.3, 306.0], [67.4, 307.0], [67.5, 307.0], [67.6, 307.0], [67.7, 307.0], [67.8, 308.0], [67.9, 308.0], [68.0, 308.0], [68.1, 308.0], [68.2, 309.0], [68.3, 309.0], [68.4, 309.0], [68.5, 309.0], [68.6, 309.0], [68.7, 310.0], [68.8, 310.0], [68.9, 310.0], [69.0, 310.0], [69.1, 311.0], [69.2, 311.0], [69.3, 311.0], [69.4, 311.0], [69.5, 312.0], [69.6, 312.0], [69.7, 312.0], [69.8, 313.0], [69.9, 313.0], [70.0, 313.0], [70.1, 314.0], [70.2, 314.0], [70.3, 314.0], [70.4, 314.0], [70.5, 314.0], [70.6, 314.0], [70.7, 315.0], [70.8, 315.0], [70.9, 315.0], [71.0, 315.0], [71.1, 315.0], [71.2, 316.0], [71.3, 316.0], [71.4, 316.0], [71.5, 316.0], [71.6, 316.0], [71.7, 317.0], [71.8, 317.0], [71.9, 318.0], [72.0, 318.0], [72.1, 318.0], [72.2, 318.0], [72.3, 318.0], [72.4, 319.0], [72.5, 319.0], [72.6, 319.0], [72.7, 320.0], [72.8, 320.0], [72.9, 321.0], [73.0, 321.0], [73.1, 322.0], [73.2, 322.0], [73.3, 323.0], [73.4, 324.0], [73.5, 324.0], [73.6, 324.0], [73.7, 325.0], [73.8, 325.0], [73.9, 326.0], [74.0, 326.0], [74.1, 327.0], [74.2, 327.0], [74.3, 328.0], [74.4, 328.0], [74.5, 328.0], [74.6, 328.0], [74.7, 329.0], [74.8, 329.0], [74.9, 329.0], [75.0, 329.0], [75.1, 330.0], [75.2, 330.0], [75.3, 330.0], [75.4, 331.0], [75.5, 332.0], [75.6, 332.0], [75.7, 334.0], [75.8, 335.0], [75.9, 336.0], [76.0, 337.0], [76.1, 338.0], [76.2, 339.0], [76.3, 341.0], [76.4, 342.0], [76.5, 343.0], [76.6, 344.0], [76.7, 345.0], [76.8, 346.0], [76.9, 347.0], [77.0, 349.0], [77.1, 352.0], [77.2, 356.0], [77.3, 358.0], [77.4, 359.0], [77.5, 360.0], [77.6, 369.0], [77.7, 375.0], [77.8, 383.0], [77.9, 385.0], [78.0, 385.0], [78.1, 386.0], [78.2, 398.0], [78.3, 401.0], [78.4, 402.0], [78.5, 404.0], [78.6, 418.0], [78.7, 418.0], [78.8, 420.0], [78.9, 424.0], [79.0, 426.0], [79.1, 431.0], [79.2, 432.0], [79.3, 433.0], [79.4, 434.0], [79.5, 440.0], [79.6, 441.0], [79.7, 441.0], [79.8, 442.0], [79.9, 442.0], [80.0, 443.0], [80.1, 446.0], [80.2, 447.0], [80.3, 448.0], [80.4, 454.0], [80.5, 463.0], [80.6, 464.0], [80.7, 465.0], [80.8, 471.0], [80.9, 472.0], [81.0, 474.0], [81.1, 476.0], [81.2, 477.0], [81.3, 480.0], [81.4, 486.0], [81.5, 489.0], [81.6, 496.0], [81.7, 497.0], [81.8, 498.0], [81.9, 502.0], [82.0, 503.0], [82.1, 503.0], [82.2, 504.0], [82.3, 504.0], [82.4, 505.0], [82.5, 507.0], [82.6, 512.0], [82.7, 516.0], [82.8, 519.0], [82.9, 521.0], [83.0, 523.0], [83.1, 524.0], [83.2, 525.0], [83.3, 526.0], [83.4, 529.0], [83.5, 532.0], [83.6, 533.0], [83.7, 533.0], [83.8, 534.0], [83.9, 536.0], [84.0, 538.0], [84.1, 539.0], [84.2, 540.0], [84.3, 540.0], [84.4, 541.0], [84.5, 544.0], [84.6, 545.0], [84.7, 546.0], [84.8, 547.0], [84.9, 547.0], [85.0, 548.0], [85.1, 548.0], [85.2, 548.0], [85.3, 549.0], [85.4, 549.0], [85.5, 550.0], [85.6, 551.0], [85.7, 551.0], [85.8, 553.0], [85.9, 555.0], [86.0, 557.0], [86.1, 562.0], [86.2, 570.0], [86.3, 578.0], [86.4, 595.0], [86.5, 601.0], [86.6, 602.0], [86.7, 604.0], [86.8, 641.0], [86.9, 657.0], [87.0, 658.0], [87.1, 697.0], [87.2, 699.0], [87.3, 701.0], [87.4, 703.0], [87.5, 704.0], [87.6, 707.0], [87.7, 709.0], [87.8, 817.0], [87.9, 993.0], [88.0, 1111.0], [88.1, 1267.0], [88.2, 1309.0], [88.3, 1453.0], [88.4, 1596.0], [88.5, 1868.0], [88.6, 2133.0], [88.7, 2236.0], [88.8, 2378.0], [88.9, 2722.0], [89.0, 2990.0], [89.1, 3239.0], [89.2, 3447.0], [89.3, 3641.0], [89.4, 4011.0], [89.5, 4150.0], [89.6, 4490.0], [89.7, 4882.0], [89.8, 5327.0], [89.9, 5631.0], [90.0, 5898.0], [90.1, 6159.0], [90.2, 6285.0], [90.3, 6945.0], [90.4, 7739.0], [90.5, 8033.0], [90.6, 8192.0], [90.7, 8756.0], [90.8, 8999.0], [90.9, 9055.0], [91.0, 9455.0], [91.1, 9566.0], [91.2, 9601.0], [91.3, 9641.0], [91.4, 9795.0], [91.5, 10030.0], [91.6, 10834.0], [91.7, 11071.0], [91.8, 11456.0], [91.9, 11874.0], [92.0, 12297.0], [92.1, 12311.0], [92.2, 12333.0], [92.3, 12419.0], [92.4, 13442.0], [92.5, 13648.0], [92.6, 14009.0], [92.7, 14076.0], [92.8, 14080.0], [92.9, 14210.0], [93.0, 14729.0], [93.1, 14854.0], [93.2, 14858.0], [93.3, 15142.0], [93.4, 15460.0], [93.5, 15693.0], [93.6, 15868.0], [93.7, 16001.0], [93.8, 16057.0], [93.9, 16119.0], [94.0, 16192.0], [94.1, 16249.0], [94.2, 16427.0], [94.3, 17241.0], [94.4, 18017.0], [94.5, 18603.0], [94.6, 18674.0], [94.7, 19319.0], [94.8, 19601.0], [94.9, 19611.0], [95.0, 19680.0], [95.1, 19707.0], [95.2, 19738.0], [95.3, 19767.0], [95.4, 19769.0], [95.5, 19929.0], [95.6, 19993.0], [95.7, 20025.0], [95.8, 20030.0], [95.9, 20577.0], [96.0, 22364.0], [96.1, 22579.0], [96.2, 24442.0], [96.3, 24993.0], [96.4, 25245.0], [96.5, 25344.0], [96.6, 26454.0], [96.7, 28445.0], [96.8, 30641.0], [96.9, 32535.0], [97.0, 33343.0], [97.1, 34336.0], [97.2, 36144.0], [97.3, 38226.0], [97.4, 42559.0], [97.5, 44395.0], [97.6, 45677.0], [97.7, 50273.0], [97.8, 56495.0], [97.9, 59908.0], [98.0, 63269.0], [98.1, 65762.0], [98.2, 68607.0], [98.3, 76183.0], [98.4, 85515.0], [98.5, 97622.0], [98.6, 100149.0], [98.7, 100207.0], [98.8, 100243.0], [98.9, 100325.0], [99.0, 100357.0], [99.1, 100408.0], [99.2, 101259.0], [99.3, 127385.0], [99.4, 129763.0], [99.5, 130818.0], [99.6, 132228.0], [99.7, 138707.0], [99.8, 149423.0], [99.9, 157481.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 45303.0, "series": [{"data": [[0.0, 36968.0], [132900.0, 14.0], [145700.0, 9.0], [152100.0, 3.0], [66700.0, 2.0], [73100.0, 3.0], [76300.0, 35.0], [85900.0, 5.0], [89100.0, 18.0], [92300.0, 2.0], [108300.0, 1.0], [130700.0, 4.0], [127500.0, 3.0], [100.0, 21762.0], [134700.0, 1.0], [32900.0, 8.0], [36100.0, 4.0], [147500.0, 1.0], [40900.0, 6.0], [42500.0, 30.0], [48900.0, 2.0], [200.0, 45303.0], [52100.0, 4.0], [53700.0, 5.0], [55300.0, 8.0], [56900.0, 2.0], [58500.0, 2.0], [60100.0, 4.0], [63300.0, 10.0], [64900.0, 2.0], [69000.0, 6.0], [65800.0, 1.0], [72200.0, 2.0], [300.0, 21561.0], [75400.0, 1.0], [78600.0, 3.0], [81800.0, 2.0], [97800.0, 1.0], [400.0, 5832.0], [500.0, 7366.0], [129800.0, 31.0], [600.0, 1298.0], [151600.0, 15.0], [700.0, 833.0], [800.0, 133.0], [209200.0, 1.0], [900.0, 79.0], [1000.0, 131.0], [1100.0, 139.0], [1200.0, 148.0], [1300.0, 165.0], [1400.0, 145.0], [1500.0, 79.0], [1600.0, 34.0], [1700.0, 51.0], [1800.0, 61.0], [1900.0, 71.0], [2000.0, 54.0], [2100.0, 151.0], [2200.0, 131.0], [2300.0, 76.0], [149300.0, 2.0], [2400.0, 68.0], [2500.0, 45.0], [2600.0, 14.0], [2800.0, 65.0], [2700.0, 52.0], [2900.0, 71.0], [3000.0, 23.0], [3100.0, 70.0], [3200.0, 126.0], [3300.0, 76.0], [3400.0, 33.0], [3500.0, 96.0], [3600.0, 110.0], [3700.0, 26.0], [3800.0, 44.0], [3900.0, 21.0], [4000.0, 134.0], [4200.0, 21.0], [68100.0, 2.0], [4400.0, 114.0], [4600.0, 21.0], [71300.0, 13.0], [74500.0, 2.0], [4800.0, 4.0], [5000.0, 64.0], [80900.0, 1.0], [5200.0, 43.0], [84100.0, 4.0], [5400.0, 40.0], [5600.0, 98.0], [87300.0, 3.0], [5800.0, 77.0], [6000.0, 32.0], [6200.0, 93.0], [100100.0, 204.0], [6400.0, 13.0], [6600.0, 7.0], [6800.0, 7.0], [106500.0, 1.0], [109700.0, 2.0], [7000.0, 41.0], [7200.0, 1.0], [7400.0, 17.0], [7600.0, 1.0], [7800.0, 55.0], [8000.0, 57.0], [8400.0, 12.0], [8800.0, 125.0], [147000.0, 95.0], [9600.0, 282.0], [10000.0, 56.0], [10400.0, 18.0], [10800.0, 20.0], [11200.0, 29.0], [11600.0, 26.0], [12000.0, 8.0], [12400.0, 72.0], [12800.0, 23.0], [13200.0, 10.0], [13600.0, 63.0], [14000.0, 431.0], [14400.0, 22.0], [14800.0, 378.0], [15200.0, 19.0], [15600.0, 60.0], [16000.0, 335.0], [16800.0, 2.0], [17600.0, 25.0], [18400.0, 7.0], [19200.0, 16.0], [20000.0, 307.0], [20800.0, 12.0], [22400.0, 77.0], [21600.0, 2.0], [23200.0, 4.0], [24000.0, 13.0], [24800.0, 18.0], [26400.0, 27.0], [25600.0, 1.0], [27200.0, 3.0], [28000.0, 3.0], [28800.0, 2.0], [31200.0, 37.0], [33600.0, 38.0], [35200.0, 4.0], [36800.0, 2.0], [38400.0, 1.0], [151100.0, 2.0], [170300.0, 28.0], [43200.0, 2.0], [44800.0, 2.0], [46400.0, 1.0], [49600.0, 13.0], [54400.0, 9.0], [56000.0, 1.0], [57600.0, 3.0], [62400.0, 30.0], [64000.0, 2.0], [67200.0, 8.0], [73600.0, 23.0], [83200.0, 3.0], [115200.0, 35.0], [128000.0, 1.0], [198400.0, 4.0], [132100.0, 1.0], [157700.0, 3.0], [67100.0, 2.0], [73500.0, 2.0], [79900.0, 2.0], [86300.0, 3.0], [95900.0, 2.0], [133900.0, 1.0], [34700.0, 27.0], [33100.0, 17.0], [36300.0, 1.0], [153100.0, 1.0], [37900.0, 3.0], [42700.0, 16.0], [44300.0, 34.0], [52300.0, 4.0], [53900.0, 2.0], [58700.0, 4.0], [60300.0, 3.0], [61900.0, 4.0], [63500.0, 34.0], [65100.0, 12.0], [66200.0, 1.0], [72600.0, 2.0], [75800.0, 2.0], [82200.0, 2.0], [130200.0, 2.0], [131600.0, 2.0], [144400.0, 1.0], [150800.0, 41.0], [148500.0, 1.0], [68500.0, 12.0], [74900.0, 2.0], [81300.0, 2.0], [78100.0, 2.0], [90900.0, 2.0], [94100.0, 1.0], [97300.0, 2.0], [100500.0, 10.0], [129300.0, 3.0], [133400.0, 16.0], [152600.0, 21.0], [18500.0, 48.0], [19300.0, 4.0], [20100.0, 73.0], [20900.0, 2.0], [22500.0, 19.0], [21700.0, 1.0], [24100.0, 50.0], [24900.0, 66.0], [25700.0, 10.0], [27300.0, 9.0], [30500.0, 40.0], [29700.0, 16.0], [31300.0, 9.0], [32100.0, 1.0], [33800.0, 11.0], [131100.0, 9.0], [35400.0, 24.0], [40200.0, 3.0], [41800.0, 7.0], [45000.0, 11.0], [43400.0, 1.0], [48200.0, 1.0], [49800.0, 62.0], [51400.0, 1.0], [54600.0, 6.0], [61000.0, 2.0], [64200.0, 1.0], [70800.0, 1.0], [77200.0, 3.0], [74000.0, 1.0], [80400.0, 1.0], [86800.0, 3.0], [90000.0, 1.0], [96400.0, 2.0], [143200.0, 2.0], [134500.0, 3.0], [198500.0, 4.0], [67500.0, 2.0], [73900.0, 2.0], [77100.0, 2.0], [89900.0, 2.0], [96300.0, 2.0], [99500.0, 2.0], [128300.0, 2.0], [132200.0, 27.0], [33300.0, 27.0], [34900.0, 2.0], [36500.0, 8.0], [38100.0, 8.0], [41300.0, 21.0], [44500.0, 58.0], [200300.0, 4.0], [50900.0, 2.0], [54100.0, 2.0], [63700.0, 2.0], [66600.0, 2.0], [69800.0, 3.0], [73000.0, 2.0], [76200.0, 5.0], [79400.0, 1.0], [85800.0, 2.0], [89000.0, 2.0], [95400.0, 1.0], [111400.0, 1.0], [127400.0, 1.0], [131700.0, 1.0], [144500.0, 5.0], [65700.0, 21.0], [68900.0, 1.0], [72100.0, 4.0], [75300.0, 1.0], [84900.0, 2.0], [91300.0, 1.0], [97700.0, 5.0], [100900.0, 2.0], [129700.0, 78.0], [8500.0, 69.0], [8900.0, 9.0], [9300.0, 9.0], [9700.0, 55.0], [148600.0, 1.0], [10100.0, 44.0], [10500.0, 19.0], [10900.0, 126.0], [11300.0, 8.0], [11700.0, 10.0], [12100.0, 14.0], [12500.0, 5.0], [13300.0, 9.0], [12900.0, 19.0], [13700.0, 13.0], [14100.0, 81.0], [14500.0, 4.0], [15300.0, 9.0], [14900.0, 1.0], [15700.0, 99.0], [16100.0, 256.0], [17800.0, 10.0], [19400.0, 28.0], [18600.0, 226.0], [20200.0, 33.0], [21800.0, 22.0], [23400.0, 5.0], [22600.0, 3.0], [24200.0, 16.0], [25000.0, 23.0], [25800.0, 2.0], [26600.0, 25.0], [28200.0, 40.0], [29000.0, 11.0], [30600.0, 86.0], [29800.0, 10.0], [31400.0, 1.0], [32200.0, 2.0], [35600.0, 9.0], [37200.0, 1.0], [38800.0, 2.0], [43600.0, 4.0], [45200.0, 4.0], [46800.0, 2.0], [51600.0, 2.0], [54800.0, 2.0], [56400.0, 58.0], [58000.0, 5.0], [59600.0, 2.0], [68000.0, 1.0], [74400.0, 2.0], [87200.0, 1.0], [93600.0, 1.0], [100000.0, 68.0], [109600.0, 23.0], [155200.0, 1.0], [71100.0, 4.0], [80700.0, 2.0], [83900.0, 1.0], [96700.0, 2.0], [106300.0, 2.0], [112700.0, 2.0], [122300.0, 18.0], [131400.0, 42.0], [150600.0, 1.0], [163400.0, 27.0], [33500.0, 7.0], [141900.0, 1.0], [36700.0, 5.0], [38300.0, 1.0], [43100.0, 1.0], [193100.0, 49.0], [47900.0, 2.0], [55900.0, 2.0], [57500.0, 65.0], [63900.0, 1.0], [67000.0, 2.0], [73400.0, 2.0], [70200.0, 1.0], [76600.0, 2.0], [79800.0, 1.0], [86200.0, 3.0], [127800.0, 9.0], [133200.0, 1.0], [150100.0, 1.0], [66100.0, 1.0], [72500.0, 3.0], [75700.0, 1.0], [85300.0, 3.0], [82100.0, 1.0], [88500.0, 7.0], [94900.0, 2.0], [98100.0, 1.0], [117300.0, 1.0], [126900.0, 1.0], [135000.0, 11.0], [17100.0, 40.0], [17900.0, 1.0], [18700.0, 51.0], [19500.0, 109.0], [20300.0, 3.0], [21100.0, 2.0], [21900.0, 14.0], [22700.0, 2.0], [23500.0, 4.0], [24300.0, 7.0], [25100.0, 84.0], [25900.0, 4.0], [26700.0, 4.0], [27500.0, 10.0], [28300.0, 5.0], [29100.0, 14.0], [29900.0, 2.0], [30700.0, 5.0], [31500.0, 7.0], [32300.0, 3.0], [37400.0, 9.0], [40600.0, 2.0], [39000.0, 2.0], [42200.0, 1.0], [43800.0, 2.0], [47000.0, 4.0], [45400.0, 4.0], [48600.0, 3.0], [50200.0, 8.0], [51800.0, 1.0], [63000.0, 3.0], [64600.0, 1.0], [81200.0, 3.0], [100400.0, 90.0], [129200.0, 5.0], [157600.0, 1.0], [155300.0, 5.0], [68300.0, 4.0], [71500.0, 2.0], [77900.0, 1.0], [93900.0, 12.0], [100300.0, 357.0], [113100.0, 3.0], [129100.0, 1.0], [153000.0, 2.0], [33700.0, 47.0], [131500.0, 33.0], [35300.0, 1.0], [38500.0, 1.0], [36900.0, 4.0], [40100.0, 1.0], [43300.0, 2.0], [176300.0, 2.0], [44900.0, 3.0], [48100.0, 4.0], [49700.0, 2.0], [51300.0, 2.0], [52900.0, 2.0], [56100.0, 2.0], [67400.0, 53.0], [77000.0, 2.0], [80200.0, 4.0], [89800.0, 1.0], [128200.0, 1.0], [142000.0, 2.0], [148400.0, 3.0], [133300.0, 33.0], [139700.0, 2.0], [146100.0, 2.0], [4300.0, 38.0], [4100.0, 56.0], [66500.0, 10.0], [4500.0, 92.0], [69700.0, 1.0], [4700.0, 19.0], [76100.0, 30.0], [4900.0, 11.0], [79300.0, 3.0], [5100.0, 26.0], [5300.0, 77.0], [88900.0, 2.0], [5500.0, 38.0], [5700.0, 12.0], [5900.0, 89.0], [6100.0, 119.0], [95300.0, 2.0], [6300.0, 71.0], [98500.0, 2.0], [6500.0, 18.0], [6700.0, 20.0], [6900.0, 46.0], [7100.0, 14.0], [114500.0, 2.0], [7300.0, 7.0], [7500.0, 21.0], [7700.0, 103.0], [7900.0, 13.0], [8100.0, 116.0], [130500.0, 1.0], [127300.0, 20.0], [8200.0, 10.0], [8600.0, 22.0], [9000.0, 221.0], [150200.0, 1.0], [9400.0, 83.0], [9800.0, 101.0], [10200.0, 8.0], [11000.0, 35.0], [11400.0, 32.0], [12200.0, 88.0], [11800.0, 118.0], [12600.0, 19.0], [13000.0, 9.0], [13400.0, 21.0], [13800.0, 4.0], [14200.0, 102.0], [14600.0, 3.0], [15000.0, 5.0], [15400.0, 143.0], [15800.0, 162.0], [16200.0, 230.0], [16400.0, 48.0], [17200.0, 137.0], [18000.0, 18.0], [18800.0, 4.0], [20400.0, 33.0], [19600.0, 469.0], [21200.0, 7.0], [22000.0, 11.0], [22800.0, 1.0], [24400.0, 55.0], [23600.0, 2.0], [25200.0, 151.0], [27600.0, 4.0], [26800.0, 9.0], [28400.0, 8.0], [30800.0, 8.0], [31600.0, 4.0], [32400.0, 4.0], [135100.0, 1.0], [32800.0, 69.0], [40800.0, 2.0], [42400.0, 2.0], [44000.0, 9.0], [45600.0, 50.0], [48800.0, 1.0], [52000.0, 1.0], [55200.0, 3.0], [53600.0, 2.0], [60000.0, 2.0], [63200.0, 89.0], [64800.0, 34.0], [68800.0, 8.0], [65600.0, 1.0], [72000.0, 2.0], [75200.0, 2.0], [78400.0, 2.0], [84800.0, 1.0], [88000.0, 2.0], [97600.0, 23.0], [107200.0, 2.0], [110400.0, 1.0], [129600.0, 6.0], [131200.0, 26.0], [137600.0, 2.0], [135300.0, 1.0], [167300.0, 11.0], [71900.0, 2.0], [75100.0, 2.0], [87900.0, 2.0], [91100.0, 1.0], [97500.0, 7.0], [94300.0, 2.0], [100700.0, 4.0], [129500.0, 29.0], [152200.0, 1.0], [33900.0, 5.0], [143500.0, 1.0], [37100.0, 3.0], [40300.0, 10.0], [41900.0, 4.0], [45100.0, 5.0], [49900.0, 9.0], [53100.0, 2.0], [56300.0, 11.0], [61100.0, 2.0], [239500.0, 1.0], [62700.0, 2.0], [64300.0, 3.0], [67800.0, 2.0], [74200.0, 2.0], [80600.0, 2.0], [83800.0, 3.0], [87000.0, 2.0], [96600.0, 2.0], [106200.0, 14.0], [128600.0, 15.0], [134800.0, 7.0], [154000.0, 2.0], [132500.0, 1.0], [151700.0, 1.0], [76500.0, 15.0], [79700.0, 4.0], [82900.0, 2.0], [89300.0, 17.0], [86100.0, 3.0], [95700.0, 5.0], [136600.0, 1.0], [149400.0, 37.0], [16500.0, 8.0], [17300.0, 5.0], [18100.0, 46.0], [18900.0, 12.0], [19700.0, 568.0], [20500.0, 7.0], [22100.0, 36.0], [22900.0, 4.0], [24500.0, 3.0], [25300.0, 171.0], [26100.0, 23.0], [26900.0, 6.0], [27700.0, 11.0], [28500.0, 5.0], [30100.0, 4.0], [30900.0, 1.0], [31700.0, 2.0], [32500.0, 3.0], [33000.0, 2.0], [36200.0, 48.0], [140700.0, 1.0], [147100.0, 2.0], [37800.0, 3.0], [153500.0, 4.0], [42600.0, 28.0], [44200.0, 4.0], [45800.0, 2.0], [49000.0, 4.0], [47400.0, 13.0], [52200.0, 2.0], [63400.0, 21.0], [61800.0, 1.0], [65000.0, 4.0], [66000.0, 4.0], [69200.0, 1.0], [72400.0, 4.0], [85200.0, 1.0], [101200.0, 100.0], [104400.0, 1.0], [130000.0, 20.0], [131300.0, 5.0], [69100.0, 2.0], [65900.0, 1.0], [81900.0, 2.0], [94700.0, 2.0], [97900.0, 2.0], [101100.0, 42.0], [129900.0, 3.0], [133100.0, 1.0], [35700.0, 9.0], [37300.0, 9.0], [38900.0, 23.0], [40500.0, 14.0], [42100.0, 1.0], [43700.0, 51.0], [45300.0, 3.0], [46900.0, 2.0], [51700.0, 5.0], [54900.0, 3.0], [56500.0, 35.0], [58100.0, 11.0], [68200.0, 1.0], [71400.0, 2.0], [77800.0, 4.0], [93800.0, 6.0], [97000.0, 1.0], [100200.0, 255.0], [129000.0, 1.0], [143600.0, 1.0], [134900.0, 2.0], [70500.0, 4.0], [83300.0, 2.0], [92900.0, 2.0], [99300.0, 1.0], [102500.0, 1.0], [8700.0, 66.0], [8300.0, 6.0], [132600.0, 21.0], [9100.0, 10.0], [9500.0, 306.0], [9900.0, 41.0], [10300.0, 7.0], [10700.0, 21.0], [11100.0, 104.0], [11500.0, 7.0], [11900.0, 58.0], [12300.0, 397.0], [12700.0, 15.0], [13100.0, 20.0], [13500.0, 115.0], [14300.0, 24.0], [13900.0, 78.0], [14700.0, 18.0], [15100.0, 125.0], [15500.0, 63.0], [15900.0, 20.0], [16300.0, 2.0], [17400.0, 21.0], [16600.0, 19.0], [18200.0, 26.0], [19800.0, 60.0], [20600.0, 18.0], [22200.0, 5.0], [23000.0, 7.0], [24600.0, 4.0], [25400.0, 2.0], [26200.0, 2.0], [28600.0, 2.0], [27800.0, 3.0], [29400.0, 6.0], [31000.0, 7.0], [32600.0, 8.0], [33200.0, 2.0], [34800.0, 51.0], [36400.0, 16.0], [38000.0, 6.0], [155900.0, 1.0], [42800.0, 2.0], [44400.0, 8.0], [46000.0, 4.0], [49200.0, 13.0], [50800.0, 2.0], [52400.0, 4.0], [55600.0, 4.0], [62000.0, 18.0], [65200.0, 1.0], [63600.0, 10.0], [66400.0, 17.0], [69600.0, 2.0], [72800.0, 2.0], [79200.0, 2.0], [92000.0, 1.0], [117600.0, 3.0], [130400.0, 2.0], [143300.0, 3.0], [66300.0, 13.0], [82300.0, 2.0], [85500.0, 3.0], [91900.0, 1.0], [98300.0, 1.0], [130300.0, 10.0], [134600.0, 11.0], [141000.0, 6.0], [34300.0, 16.0], [138700.0, 1.0], [145100.0, 2.0], [35900.0, 21.0], [37500.0, 9.0], [39100.0, 17.0], [43900.0, 5.0], [48700.0, 2.0], [51900.0, 2.0], [53500.0, 3.0], [55100.0, 2.0], [58300.0, 7.0], [59900.0, 9.0], [63100.0, 3.0], [64700.0, 8.0], [68600.0, 12.0], [71800.0, 2.0], [75000.0, 2.0], [81400.0, 1.0], [84600.0, 2.0], [94200.0, 1.0], [100600.0, 1.0], [129400.0, 26.0], [155600.0, 1.0], [134100.0, 26.0], [140500.0, 1.0], [67700.0, 2.0], [93300.0, 2.0], [131800.0, 18.0], [151000.0, 1.0], [157400.0, 59.0], [16700.0, 1.0], [17500.0, 8.0], [18300.0, 10.0], [19100.0, 21.0], [19900.0, 241.0], [21500.0, 4.0], [20700.0, 8.0], [22300.0, 77.0], [23100.0, 31.0], [23900.0, 5.0], [24700.0, 20.0], [26300.0, 6.0], [27900.0, 2.0], [28700.0, 7.0], [29500.0, 2.0], [31100.0, 17.0], [32700.0, 35.0], [33400.0, 37.0], [35000.0, 1.0], [38200.0, 46.0], [155100.0, 1.0], [39800.0, 3.0], [44600.0, 4.0], [47800.0, 2.0], [51000.0, 3.0], [57400.0, 6.0], [59000.0, 2.0], [65400.0, 1.0], [66800.0, 3.0], [73200.0, 2.0], [76400.0, 8.0], [79600.0, 2.0], [82800.0, 4.0], [86000.0, 3.0], [130800.0, 58.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 239500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 420.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 131436.0, "series": [{"data": [[0.0, 131436.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 10427.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 18263.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 420.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 196.00777202072535, "minX": 1.68287568E12, "maxY": 3000.0, "series": [{"data": [[1.6828761E12, 196.00777202072535], [1.68287592E12, 3000.0], [1.68287598E12, 2890.0896428571377], [1.6828758E12, 3000.0], [1.68287586E12, 3000.0], [1.68287568E12, 3000.0], [1.68287574E12, 3000.0], [1.68287604E12, 553.2702702702702]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828761E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 99.66666666666667, "minX": 1.0, "maxY": 170344.0, "series": [{"data": [[3.0, 100247.0], [6.0, 100244.0], [12.0, 100243.33333333333], [13.0, 100238.0], [15.0, 100232.5], [16.0, 100142.0], [17.0, 100295.0], [18.0, 100292.0], [19.0, 100285.0], [20.0, 100287.0], [23.0, 100279.66666666667], [26.0, 100275.33333333333], [27.0, 100274.0], [29.0, 100273.5], [31.0, 100270.0], [33.0, 100270.0], [35.0, 100265.5], [37.0, 100262.0], [39.0, 100260.0], [38.0, 100260.0], [41.0, 100254.0], [42.0, 100253.0], [44.0, 100249.0], [55.0, 100236.66666666667], [54.0, 100236.5], [57.0, 100237.5], [59.0, 100236.5], [58.0, 100236.0], [61.0, 100237.0], [60.0, 100236.0], [63.0, 100237.0], [67.0, 100235.0], [66.0, 100234.66666666667], [69.0, 100236.0], [75.0, 100234.5], [73.0, 100234.0], [72.0, 100234.66666666667], [79.0, 100233.5], [78.0, 100232.5], [83.0, 100231.0], [82.0, 100231.0], [81.0, 100233.0], [87.0, 100230.0], [86.0, 100229.0], [89.0, 100230.0], [94.0, 100229.0], [92.0, 100229.33333333333], [99.0, 100228.0], [96.0, 100228.66666666667], [101.0, 100228.66666666667], [100.0, 100228.0], [107.0, 100226.0], [105.0, 100226.0], [104.0, 100227.25], [111.0, 100225.0], [108.0, 100226.5], [113.0, 100224.0], [112.0, 100225.33333333333], [118.0, 100223.6], [123.0, 100222.0], [121.0, 100222.0], [120.0, 100223.5], [126.0, 100219.0], [125.0, 100222.0], [124.0, 100220.0], [131.0, 100213.0], [128.0, 100217.0], [137.0, 100214.0], [136.0, 100213.0], [146.0, 100213.5], [159.0, 100210.5], [158.0, 100211.0], [154.0, 100212.0], [167.0, 100210.0], [166.0, 100209.66666666667], [164.0, 100209.6], [163.0, 100210.0], [162.0, 100210.5], [161.0, 100211.33333333333], [175.0, 100208.33333333333], [172.0, 100209.0], [169.0, 100208.83333333334], [168.0, 100209.5], [183.0, 100205.0], [181.0, 100207.0], [180.0, 100207.0], [191.0, 100197.0], [190.0, 100198.0], [189.0, 100199.5], [187.0, 100203.0], [186.0, 100205.0], [185.0, 100205.5], [194.0, 100193.0], [193.0, 100194.0], [192.0, 100198.0], [214.0, 100187.0], [213.0, 100187.44444444444], [211.0, 100188.0], [223.0, 100185.0], [222.0, 100184.0], [221.0, 100186.5], [219.0, 100187.0], [216.0, 100187.0], [231.0, 100167.0], [230.0, 100170.0], [229.0, 100171.5], [227.0, 100176.0], [226.0, 100178.33333333333], [236.0, 100156.0], [235.0, 100159.5], [233.0, 100165.0], [232.0, 100166.0], [246.0, 100153.5], [245.0, 100152.0], [244.0, 100154.2], [243.0, 100154.0], [255.0, 100148.0], [254.0, 100149.0], [253.0, 100149.0], [269.0, 100139.0], [270.0, 100136.0], [268.0, 100141.0], [267.0, 100141.33333333333], [264.0, 100143.0], [263.0, 100146.0], [262.0, 100146.0], [261.0, 100146.5], [258.0, 100148.6], [257.0, 100148.0], [286.0, 100266.0], [287.0, 100266.0], [285.0, 100267.0], [284.0, 100271.66666666667], [282.0, 100273.0], [281.0, 100272.0], [278.0, 100274.33333333333], [276.0, 100273.75], [272.0, 100275.0], [301.0, 100177.0], [300.0, 100176.0], [296.0, 100243.0], [295.0, 100261.5], [293.0, 100263.0], [290.0, 100264.66666666667], [307.0, 100174.0], [316.0, 100169.0], [315.0, 100169.0], [313.0, 100170.5], [311.0, 100171.0], [310.0, 100172.0], [308.0, 100173.0], [306.0, 100176.0], [305.0, 100176.0], [334.0, 100149.33333333333], [335.0, 100148.0], [333.0, 100150.0], [323.0, 100166.0], [321.0, 100166.8], [331.0, 100150.0], [328.0, 100150.0], [327.0, 100151.0], [326.0, 100151.0], [325.0, 100165.0], [324.0, 100166.0], [350.0, 94341.0], [351.0, 93334.0], [349.0, 94344.0], [348.0, 95351.0], [347.0, 95353.0], [346.0, 96361.0], [345.0, 96362.0], [344.0, 97370.0], [343.0, 97373.0], [336.0, 100145.0], [339.0, 99391.0], [338.0, 100142.0], [342.0, 98380.0], [341.0, 97099.0], [340.0, 98105.0], [366.0, 86268.0], [367.0, 85259.0], [365.0, 86269.0], [364.0, 87277.0], [363.0, 85993.0], [362.0, 87002.0], [361.0, 87004.0], [360.0, 88010.0], [359.0, 88013.0], [353.0, 92325.0], [352.0, 93332.0], [355.0, 91316.0], [354.0, 92322.0], [358.0, 89021.0], [357.0, 89023.0], [356.0, 90030.0], [382.0, 78193.0], [383.0, 77185.0], [381.0, 78194.0], [380.0, 79202.0], [379.0, 79204.0], [378.0, 80211.0], [377.0, 80213.0], [376.0, 81221.0], [375.0, 79939.0], [369.0, 82966.0], [368.0, 83974.0], [371.0, 81955.0], [370.0, 82964.0], [374.0, 80945.0], [373.0, 79911.0], [372.0, 81954.0], [398.0, 68834.0], [399.0, 67830.0], [397.0, 68836.0], [396.0, 68808.0], [395.0, 71129.0], [394.0, 72136.0], [393.0, 72138.0], [392.0, 73148.0], [391.0, 70829.0], [385.0, 76175.0], [384.0, 77183.0], [387.0, 72847.0], [386.0, 76174.0], [390.0, 71836.0], [389.0, 71837.0], [388.0, 72844.0], [414.0, 62043.0], [415.0, 61035.0], [413.0, 62044.0], [412.0, 63051.0], [411.0, 63055.0], [410.0, 64061.0], [409.0, 64063.0], [408.0, 65070.0], [407.0, 65066.0], [401.0, 66816.0], [400.0, 67825.0], [403.0, 65807.0], [402.0, 66814.0], [406.0, 66074.0], [405.0, 66081.0], [404.0, 67090.0], [430.0, 53967.0], [431.0, 52960.0], [429.0, 53969.0], [428.0, 54976.0], [427.0, 54978.0], [426.0, 55986.0], [425.0, 55988.0], [424.0, 56996.0], [423.0, 56998.0], [417.0, 60026.0], [416.0, 61033.0], [419.0, 59017.0], [418.0, 60024.0], [422.0, 58005.0], [421.0, 58007.0], [420.0, 59015.0], [446.0, 45891.0], [447.0, 44886.0], [445.0, 45894.0], [444.0, 46901.0], [443.0, 46903.0], [442.0, 47910.0], [441.0, 47912.0], [440.0, 48919.0], [439.0, 48921.0], [433.0, 51950.0], [432.0, 52958.0], [435.0, 50941.0], [434.0, 51948.0], [438.0, 49929.0], [437.0, 49931.0], [436.0, 50940.0], [462.0, 37815.0], [463.0, 36808.0], [461.0, 37816.0], [460.0, 38825.0], [459.0, 38826.0], [458.0, 39834.0], [457.0, 39836.0], [456.0, 40844.0], [455.0, 40844.0], [449.0, 43875.0], [448.0, 44881.0], [451.0, 42864.0], [450.0, 43872.0], [454.0, 41853.0], [453.0, 41855.0], [452.0, 42862.0], [478.0, 29740.0], [479.0, 28734.0], [477.0, 29742.0], [476.0, 30749.0], [475.0, 30752.0], [474.0, 31760.0], [473.0, 31760.0], [472.0, 32768.0], [471.0, 32771.0], [465.0, 35798.0], [464.0, 36806.0], [467.0, 34789.0], [466.0, 35796.0], [470.0, 33777.0], [469.0, 33779.0], [468.0, 34787.0], [495.0, 32896.666666666664], [492.0, 22674.0], [483.0, 26714.0], [482.0, 27721.0], [481.0, 27723.0], [480.0, 28731.0], [491.0, 22677.0], [490.0, 23684.0], [489.0, 23685.0], [488.0, 24693.0], [487.0, 24695.0], [486.0, 25705.0], [485.0, 25705.0], [484.0, 26712.0], [510.0, 32888.0], [511.0, 32888.0], [509.0, 32890.5], [507.0, 32892.0], [506.0, 32893.0], [504.0, 32893.0], [503.0, 33630.0], [502.0, 32895.5], [499.0, 32895.0], [497.0, 32896.0], [537.0, 33130.0], [542.0, 33100.0], [543.0, 33099.0], [530.0, 33139.5], [528.0, 33139.5], [533.0, 33138.0], [532.0, 33139.0], [541.0, 33102.5], [539.0, 33127.0], [538.0, 33130.0], [536.0, 33132.0], [518.0, 33607.0], [516.0, 33609.0], [515.0, 33609.0], [514.0, 33610.0], [513.0, 33611.0], [512.0, 32882.0], [526.0, 33140.0], [525.0, 21642.0], [524.0, 21643.0], [523.0, 33595.0], [522.0, 33597.0], [520.0, 33605.5], [535.0, 33133.0], [534.0, 33137.0], [574.0, 32818.0], [575.0, 32700.0], [561.0, 32823.0], [573.0, 32820.0], [571.0, 32702.0], [570.0, 32821.0], [569.0, 32822.0], [559.0, 32823.5], [544.0, 33218.0], [548.0, 32821.0], [545.0, 33098.0], [551.0, 32939.0], [549.0, 32900.666666666664], [558.0, 32824.5], [555.0, 32930.0], [554.0, 32936.0], [553.0, 32817.0], [567.0, 32822.0], [566.0, 32822.5], [564.0, 32822.333333333336], [563.0, 32705.0], [600.0, 32804.0], [604.0, 32802.0], [605.0, 32801.0], [592.0, 32808.0], [603.0, 32801.0], [602.0, 36532.0], [601.0, 32803.5], [591.0, 32690.0], [578.0, 32816.0], [577.0, 32818.0], [580.0, 32816.0], [579.0, 32816.0], [582.0, 32696.0], [581.0, 32698.0], [590.0, 32810.0], [588.0, 32810.5], [586.0, 32811.0], [585.0, 32812.0], [584.0, 32814.5], [599.0, 32803.0], [597.0, 32804.0], [596.0, 34047.666666666664], [593.0, 32808.0], [633.0, 32771.0], [627.0, 32774.0], [635.0, 32769.0], [637.0, 34630.0], [625.0, 34640.5], [634.0, 36499.0], [632.0, 34637.5], [615.0, 36511.0], [614.0, 34648.5], [612.0, 32785.0], [611.0, 32787.0], [610.0, 32787.0], [609.0, 32789.0], [608.0, 32801.0], [623.0, 34640.5], [621.0, 32777.0], [620.0, 32777.0], [619.0, 32780.0], [618.0, 32780.0], [617.0, 32781.0], [616.0, 32782.0], [631.0, 32772.0], [630.0, 32772.0], [628.0, 36503.0], [664.0, 35983.0], [670.0, 35980.5], [671.0, 35977.0], [656.0, 36460.0], [658.0, 36459.0], [657.0, 36459.0], [669.0, 35981.0], [667.0, 35981.5], [665.0, 34118.0], [655.0, 36460.0], [641.0, 32759.0], [640.0, 35251.0], [645.0, 34000.0], [642.0, 32759.0], [647.0, 32756.0], [646.0, 32757.0], [654.0, 32732.0], [653.0, 32737.0], [652.0, 36467.0], [650.0, 36479.0], [649.0, 36481.0], [648.0, 36482.0], [662.0, 20641.0], [661.0, 20643.0], [660.0, 36444.0], [659.0, 36450.0], [697.0, 35474.0], [702.0, 35472.0], [703.0, 35471.0], [691.0, 35476.0], [689.0, 35476.0], [701.0, 35473.0], [700.0, 35473.0], [698.0, 35474.0], [696.0, 35474.0], [679.0, 35944.0], [678.0, 35944.5], [676.0, 35946.0], [675.0, 35970.0], [674.0, 35970.0], [673.0, 35973.0], [672.0, 35974.0], [687.0, 35652.0], [686.0, 35651.0], [685.0, 35654.0], [684.0, 35654.0], [683.0, 35654.0], [682.0, 35655.0], [681.0, 35657.0], [680.0, 35657.0], [693.0, 35475.0], [692.0, 35475.0], [732.0, 24256.0], [724.0, 13487.0], [734.0, 24256.5], [721.0, 15501.0], [720.0, 15503.0], [723.0, 14493.0], [722.0, 14498.0], [731.0, 22018.0], [729.0, 27988.0], [728.0, 12475.0], [711.0, 35445.0], [709.0, 35446.0], [708.0, 35446.0], [706.0, 35446.0], [705.0, 35447.0], [719.0, 16510.0], [718.0, 16511.0], [717.0, 17519.0], [716.0, 17520.0], [715.0, 18528.0], [714.0, 18531.0], [713.0, 19289.0], [712.0, 19291.0], [727.0, 12477.0], [726.0, 16334.0], [725.0, 13484.0], [760.0, 11991.0], [764.0, 11977.0], [767.0, 11983.0], [752.0, 11998.5], [754.0, 24052.0], [753.0, 11997.0], [763.0, 11987.0], [762.0, 11990.0], [761.0, 11990.0], [750.0, 12000.5], [737.0, 24254.0], [736.0, 24255.0], [739.0, 24252.0], [738.0, 24254.0], [741.0, 24245.0], [740.0, 24245.0], [743.0, 24239.0], [742.0, 24245.0], [748.0, 23487.0], [745.0, 24062.0], [744.0, 24238.0], [759.0, 11992.0], [758.0, 11993.0], [757.0, 11993.0], [756.0, 11995.0], [792.0, 11213.0], [796.0, 11211.0], [799.0, 11209.666666666666], [785.0, 11917.0], [784.0, 11922.0], [787.0, 11910.0], [786.0, 11913.0], [795.0, 11211.0], [794.0, 11206.0], [793.0, 11212.0], [783.0, 11924.0], [769.0, 11977.0], [768.0, 11979.0], [771.0, 11967.0], [770.0, 11972.0], [773.0, 11963.0], [772.0, 11964.0], [775.0, 11953.0], [774.0, 11959.0], [782.0, 11928.0], [781.0, 11923.0], [780.0, 11940.0], [779.0, 11941.0], [778.0, 11941.0], [777.0, 11947.0], [776.0, 11948.0], [791.0, 11466.0], [790.0, 11467.0], [789.0, 11902.0], [788.0, 11907.0], [824.0, 11129.0], [830.0, 11128.0], [831.0, 11127.333333333334], [817.0, 11182.0], [816.0, 11189.0], [829.0, 9839.0], [826.0, 10484.5], [825.0, 9840.0], [815.0, 11197.0], [801.0, 11210.0], [804.0, 11208.0], [802.0, 11209.5], [807.0, 11205.5], [806.0, 11200.0], [814.0, 11197.0], [813.0, 11198.0], [812.0, 11202.0], [811.0, 11205.0], [810.0, 11205.0], [809.0, 11205.0], [808.0, 11207.0], [821.0, 11128.0], [820.0, 11183.0], [819.0, 11184.0], [818.0, 11186.0], [847.0, 64198.0], [862.0, 170342.0], [838.0, 23182.0], [835.0, 10482.0], [834.0, 9837.0], [851.0, 90734.5], [849.0, 170342.0], [846.0, 11126.0], [845.0, 9837.0], [843.0, 90090.33333333333], [842.0, 170343.0], [840.0, 170344.0], [889.0, 9827.333333333334], [882.0, 11119.0], [892.0, 9826.0], [894.0, 10255.666666666666], [880.0, 9832.0], [890.0, 9826.0], [888.0, 11104.0], [871.0, 170342.0], [870.0, 170342.0], [869.0, 170342.0], [868.0, 170341.0], [866.0, 170343.0], [864.0, 170342.0], [879.0, 9832.0], [878.0, 10692.333333333334], [877.0, 9832.0], [874.0, 11123.0], [873.0, 11122.0], [872.0, 10479.0], [885.0, 9829.0], [884.0, 9830.0], [883.0, 9829.0], [926.0, 9797.0], [927.0, 9795.0], [925.0, 9808.5], [924.0, 9809.0], [922.0, 9809.0], [921.0, 9810.5], [910.0, 9813.0], [896.0, 10469.5], [899.0, 10467.0], [897.0, 9825.0], [902.0, 9816.0], [900.0, 11105.0], [908.0, 11477.0], [907.0, 9813.0], [906.0, 9815.0], [904.0, 10244.666666666666], [919.0, 9811.0], [918.0, 10237.333333333334], [915.0, 10242.0], [912.0, 10456.5], [953.0, 9766.0], [946.0, 9773.0], [957.0, 10194.0], [959.0, 19003.0], [945.0, 9777.0], [944.0, 9777.0], [954.0, 9766.0], [952.0, 16439.5], [935.0, 11060.0], [934.0, 11073.0], [933.0, 9784.0], [932.0, 9785.0], [931.0, 11076.0], [930.0, 9787.0], [928.0, 11076.0], [943.0, 9778.0], [942.0, 9778.0], [941.0, 10423.0], [940.0, 9778.0], [938.0, 9781.666666666666], [951.0, 9767.0], [949.0, 9769.0], [947.0, 11049.0], [990.0, 11012.0], [991.0, 11012.0], [989.0, 10374.0], [987.0, 11309.666666666666], [984.0, 10166.0], [967.0, 9756.0], [966.0, 9756.0], [965.0, 10436.666666666666], [962.0, 9762.0], [960.0, 11040.0], [981.0, 9737.5], [979.0, 14615.0], [976.0, 10383.0], [974.0, 9744.0], [973.0, 9744.0], [972.0, 9749.0], [971.0, 9750.0], [970.0, 9755.0], [969.0, 9754.0], [968.0, 11793.0], [1020.0, 16542.0], [1012.0, 11042.0], [1023.0, 9870.5], [1008.0, 8888.0], [1011.0, 8887.0], [1010.0, 9906.0], [1019.0, 10128.0], [1017.0, 10128.0], [1016.0, 22225.0], [998.0, 9730.0], [996.0, 9732.0], [995.0, 9732.0], [994.0, 9733.0], [993.0, 9734.5], [1007.0, 10959.0], [1006.0, 10962.0], [1005.0, 23033.0], [1004.0, 10966.0], [1003.0, 23038.0], [1002.0, 9716.0], [1001.0, 15020.0], [1015.0, 8882.0], [1014.0, 22226.0], [1013.0, 22229.0], [1080.0, 8822.0], [1084.0, 15485.5], [1056.0, 8836.0], [1058.0, 22179.0], [1062.0, 10873.0], [1064.0, 9479.0], [1068.0, 8826.0], [1066.0, 8830.0], [1086.0, 22154.0], [1082.0, 15486.0], [1078.0, 8822.5], [1076.0, 8824.0], [1074.0, 8824.0], [1024.0, 15522.5], [1030.0, 15521.5], [1036.0, 8847.0], [1054.0, 8837.0], [1052.0, 22182.0], [1050.0, 8839.0], [1048.0, 22188.0], [1044.0, 15518.0], [1144.0, 8750.0], [1140.0, 8753.5], [1148.0, 8744.0], [1120.0, 10064.0], [1124.0, 15444.0], [1126.0, 8769.0], [1128.0, 10042.0], [1130.0, 22105.0], [1132.0, 8760.0], [1134.0, 8758.0], [1150.0, 10021.0], [1146.0, 8746.0], [1142.0, 8754.0], [1136.0, 8754.0], [1102.0, 22140.0], [1100.0, 16489.0], [1098.0, 9438.5], [1092.0, 8802.0], [1090.0, 22152.0], [1088.0, 8809.0], [1118.0, 15449.0], [1116.0, 8779.0], [1114.0, 8781.0], [1108.0, 8791.0], [1104.0, 8792.0], [1204.0, 9166.0], [1202.0, 9948.0], [1212.0, 20234.0], [1186.0, 8708.0], [1188.0, 8701.0], [1194.0, 9988.0], [1196.0, 8697.5], [1214.0, 8160.0], [1210.0, 20236.0], [1208.0, 7911.5], [1206.0, 6893.0], [1200.0, 8682.0], [1152.0, 10019.0], [1154.0, 10017.0], [1156.0, 8737.0], [1160.0, 22077.0], [1162.0, 10005.0], [1164.0, 8726.0], [1182.0, 8713.0], [1180.0, 22058.0], [1178.0, 8716.0], [1176.0, 9736.5], [1172.0, 8721.0], [1170.0, 22064.0], [1168.0, 8724.0], [1272.0, 18209.0], [1254.0, 14108.5], [1278.0, 9998.0], [1250.0, 7025.0], [1248.0, 7028.0], [1252.0, 7027.0], [1256.0, 21941.0], [1258.0, 14107.5], [1260.0, 11592.0], [1276.0, 10000.0], [1270.0, 10796.0], [1216.0, 7157.0], [1224.0, 18218.5], [1228.0, 18218.0], [1226.0, 18218.0], [1230.0, 7031.0], [1242.0, 21944.0], [1240.0, 7553.0], [1236.0, 18216.0], [1234.0, 7555.0], [1232.0, 14488.0], [1262.0, 10798.0], [1338.0, 26455.0], [1312.0, 18176.5], [1316.0, 20039.5], [1320.0, 6987.0], [1326.0, 6986.5], [1340.0, 18170.0], [1332.0, 6986.0], [1330.0, 8475.0], [1328.0, 9270.0], [1310.0, 9969.0], [1280.0, 9998.0], [1282.0, 15967.0], [1286.0, 8506.5], [1284.0, 9996.0], [1288.0, 12608.0], [1290.0, 21921.0], [1292.0, 18189.0], [1294.0, 7001.0], [1308.0, 6997.0], [1306.0, 18184.0], [1304.0, 6997.0], [1302.0, 21915.0], [1298.0, 9979.0], [1376.0, 6937.0], [1402.0, 18109.0], [1378.0, 21852.0], [1382.0, 21850.5], [1386.0, 9908.0], [1390.0, 21842.0], [1406.0, 10429.333333333334], [1400.0, 9901.0], [1398.0, 11492.0], [1394.0, 9903.0], [1392.0, 10700.5], [1346.0, 6981.0], [1344.0, 6981.0], [1348.0, 6981.5], [1352.0, 19391.0], [1358.0, 15661.333333333334], [1372.0, 26422.0], [1370.0, 20003.5], [1368.0, 22282.5], [1362.0, 20011.0], [1458.0, 8088.5], [1470.0, 8085.0], [1444.0, 6603.0], [1446.0, 8092.0], [1448.0, 12599.5], [1452.0, 22580.0], [1454.0, 22579.0], [1468.0, 22575.0], [1466.0, 12566.666666666666], [1414.0, 9894.0], [1416.0, 9893.0], [1418.0, 9881.0], [1422.0, 9868.0], [1436.0, 5150.0], [1434.0, 5946.0], [1432.0, 21744.0], [1430.0, 24300.0], [1428.0, 9854.0], [1426.0, 11454.0], [1424.0, 24355.0], [1526.0, 5372.0], [1508.0, 22536.0], [1530.0, 7821.0], [1534.0, 7818.0], [1504.0, 5078.0], [1506.0, 22538.0], [1512.0, 12525.5], [1516.0, 7829.0], [1532.0, 9409.0], [1528.0, 5370.0], [1524.0, 13797.0], [1520.0, 19767.0], [1486.0, 5359.0], [1484.0, 8076.0], [1482.0, 8078.0], [1480.0, 5105.0], [1474.0, 5630.0], [1472.0, 16123.5], [1500.0, 5086.0], [1496.0, 8066.5], [1492.0, 5091.0], [1490.0, 8071.0], [1488.0, 5096.0], [1536.0, 7818.0], [1566.0, 7023.0], [1542.0, 7815.0], [1540.0, 22306.0], [1544.0, 12557.0], [1546.0, 22281.0], [1548.0, 3850.0], [1564.0, 11005.666666666666], [1562.0, 7026.0], [1560.0, 18966.0], [1558.0, 7028.0], [1630.0, 245.0], [1634.0, 244.0], [1632.0, 244.66666666666666], [1626.0, 243.5], [1696.0, 242.0], [1724.0, 240.0], [1698.0, 242.5], [1704.0, 240.0], [1706.0, 241.0], [1708.0, 242.0], [1710.0, 240.85714285714286], [1726.0, 241.0], [1722.0, 241.0], [1720.0, 240.0], [1718.0, 240.0], [1716.0, 240.0], [1714.0, 240.5], [1712.0, 240.0], [1692.0, 241.0], [1686.0, 243.0], [1684.0, 242.0], [1780.0, 216.5], [1784.0, 216.33333333333334], [1786.0, 216.0], [1760.0, 217.0], [1764.0, 217.0], [1762.0, 217.0], [1776.0, 217.0], [1734.0, 241.0], [1732.0, 241.0], [1736.0, 239.5], [1756.0, 217.2], [1752.0, 218.0], [1774.0, 216.0], [1772.0, 216.0], [1770.0, 216.75], [1828.0, 136.0], [1806.0, 168.16666666666666], [1838.0, 133.75], [1836.0, 134.0], [1832.0, 135.0], [1798.0, 169.0], [1794.0, 207.0], [1792.0, 207.5], [1820.0, 138.0], [1814.0, 168.0], [1812.0, 168.0], [1810.0, 168.5], [1808.0, 169.0], [1912.0, 276.0], [1904.0, 275.5], [1918.0, 276.0], [1890.0, 100.5], [1916.0, 275.0], [1856.0, 105.0], [1864.0, 101.0], [1886.0, 102.0], [1884.0, 100.66666666666667], [1882.0, 101.0], [1878.0, 101.0], [1876.0, 101.14285714285714], [1872.0, 101.0], [1896.0, 99.66666666666667], [1954.0, 7826.0], [1978.0, 16202.0], [1956.0, 7825.0], [1958.0, 16493.0], [1960.0, 7822.0], [1964.0, 7820.333333333333], [1966.0, 7819.0], [1980.0, 7807.0], [1974.0, 7812.0], [1972.0, 7814.0], [1968.0, 7816.0], [1920.0, 275.0], [1922.0, 276.0], [1926.0, 436.125], [1928.0, 276.0], [1934.0, 262.5], [1932.0, 403.6], [1948.0, 7828.0], [1946.0, 14312.0], [1944.0, 7829.0], [2020.0, 7771.0], [1984.0, 11453.666666666666], [1988.0, 19639.0], [1986.0, 7797.0], [2264.0, 7747.0], [2292.0, 340.3333333333333], [2308.0, 272.0], [2336.0, 263.0], [2332.0, 262.4], [2748.0, 458.0], [2776.0, 453.6666666666667], [2772.0, 453.5], [2752.0, 458.0], [2924.0, 253.4], [2916.0, 254.5], [2940.0, 251.85714285714286], [2892.0, 254.0], [2896.0, 254.0], [2900.0, 253.33333333333334], [2904.0, 253.0], [2908.0, 254.14285714285714], [2936.0, 251.75], [2932.0, 253.0], [2928.0, 252.41666666666669], [2920.0, 252.72727272727272], [2912.0, 253.0], [2816.0, 447.75], [2820.0, 448.0], [2824.0, 446.84615384615387], [2828.0, 448.0], [2832.0, 450.0689655172414], [2836.0, 466.76470588235287], [2840.0, 475.74999999999994], [2844.0, 488.75000000000006], [2864.0, 549.1], [2860.0, 543.7142857142857], [2856.0, 502.0], [2852.0, 521.6666666666666], [2848.0, 459.87500000000006], [2948.0, 254.0], [2992.0, 6509.0], [3000.0, 3677.6694061370767], [2944.0, 251.0], [2952.0, 250.54545454545453], [2956.0, 250.0], [2960.0, 251.0], [2964.0, 249.2], [2968.0, 247.0], [2988.0, 19487.0], [2984.0, 221.0], [2980.0, 222.0], [2301.0, 340.3333333333333], [2261.0, 7749.0], [2297.0, 341.2], [2293.0, 340.7142857142857], [2289.0, 11237.927601809957], [2225.0, 20164.5], [2345.0, 262.0], [2309.0, 273.5], [2325.0, 272.0], [2341.0, 262.3333333333333], [2337.0, 263.0], [2757.0, 457.5], [2773.0, 453.0], [2749.0, 458.0], [2761.0, 455.0], [2753.0, 458.0], [2925.0, 252.2], [2893.0, 256.0], [2897.0, 254.0], [2901.0, 253.33333333333334], [2909.0, 253.66666666666666], [2941.0, 250.0], [2937.0, 251.0], [2933.0, 251.5], [2929.0, 251.74999999999997], [2921.0, 252.66666666666666], [2913.0, 254.0], [2817.0, 447.875], [2821.0, 447.1515151515151], [2825.0, 447.03846153846155], [2829.0, 461.62500000000006], [2833.0, 469.3333333333333], [2837.0, 492.4], [2841.0, 485.0], [2845.0, 468.3], [2865.0, 530.75], [2861.0, 561.0], [2857.0, 563.0], [2853.0, 464.3333333333333], [2849.0, 452.7333333333334], [2949.0, 251.0], [2945.0, 252.0], [2953.0, 250.0], [2957.0, 249.2], [2969.0, 247.0], [2993.0, 6508.909090909091], [2985.0, 139.33333333333331], [2981.0, 221.0], [2977.0, 228.0], [1075.0, 15496.0], [1061.0, 9479.0], [1087.0, 8810.0], [1057.0, 10114.0], [1065.0, 15505.5], [1071.0, 16135.0], [1069.0, 8825.5], [1085.0, 8810.0], [1079.0, 8822.0], [1073.0, 22169.0], [1055.0, 22181.0], [1027.0, 10209.333333333334], [1031.0, 10887.0], [1035.0, 14186.6], [1039.0, 15519.5], [1037.0, 8848.0], [1053.0, 22182.0], [1049.0, 8844.0], [1047.0, 22189.0], [1045.0, 10884.0], [1043.0, 22190.0], [1041.0, 15518.5], [1149.0, 8744.0], [1151.0, 8743.0], [1121.0, 8774.0], [1123.0, 22116.0], [1125.0, 8771.0], [1127.0, 8767.0], [1129.0, 8763.0], [1133.0, 8758.0], [1135.0, 8756.0], [1147.0, 10021.0], [1145.0, 8752.0], [1143.0, 8751.0], [1141.0, 10030.0], [1139.0, 10793.0], [1137.0, 8755.0], [1103.0, 22138.0], [1101.0, 8795.0], [1097.0, 15473.0], [1095.0, 8801.0], [1093.0, 8802.0], [1091.0, 10080.0], [1089.0, 22151.0], [1119.0, 8775.0], [1115.0, 22124.0], [1113.0, 8786.0], [1111.0, 9426.0], [1109.0, 8790.5], [1107.0, 10831.0], [1105.0, 8791.0], [1213.0, 8162.0], [1215.0, 8157.0], [1187.0, 22051.0], [1191.0, 15372.0], [1189.0, 22045.0], [1193.0, 8698.0], [1195.0, 8698.0], [1199.0, 15366.5], [1197.0, 10733.0], [1211.0, 20234.0], [1207.0, 6892.0], [1203.0, 9168.0], [1201.0, 9949.0], [1183.0, 8709.0], [1153.0, 22084.0], [1155.0, 8738.0], [1157.0, 8734.0], [1159.0, 8733.0], [1161.0, 10022.0], [1163.0, 8729.0], [1167.0, 9363.0], [1165.0, 8726.0], [1179.0, 8714.0], [1177.0, 8718.0], [1175.0, 8717.0], [1173.0, 22063.0], [1171.0, 8720.0], [1169.0, 22067.0], [1273.0, 20073.5], [1251.0, 18213.0], [1257.0, 18212.0], [1259.0, 18213.0], [1275.0, 13265.666666666666], [1267.0, 14105.5], [1265.0, 10796.5], [1247.0, 14486.0], [1217.0, 7155.0], [1221.0, 20083.5], [1219.0, 12626.0], [1223.0, 18219.0], [1229.0, 18217.5], [1245.0, 20078.5], [1243.0, 12621.0], [1239.0, 10932.0], [1235.0, 7030.0], [1263.0, 10001.0], [1335.0, 6984.0], [1343.0, 20033.5], [1313.0, 6991.0], [1315.0, 6988.0], [1319.0, 12582.0], [1323.0, 12581.0], [1321.0, 6986.0], [1325.0, 6986.0], [1341.0, 6983.5], [1337.0, 6982.5], [1333.0, 6985.5], [1283.0, 21935.0], [1289.0, 18201.0], [1291.0, 22197.0], [1293.0, 7002.0], [1295.0, 9979.0], [1309.0, 9974.0], [1307.0, 9975.0], [1305.0, 7522.0], [1303.0, 18185.0], [1301.0, 12591.5], [1299.0, 9284.0], [1297.0, 7001.0], [1397.0, 9902.5], [1381.0, 21851.0], [1407.0, 9899.0], [1379.0, 21851.5], [1385.0, 17153.0], [1383.0, 9908.0], [1387.0, 18116.0], [1389.0, 14010.5], [1403.0, 9900.0], [1401.0, 9900.0], [1395.0, 18113.0], [1393.0, 21842.0], [1375.0, 17158.5], [1349.0, 9955.0], [1355.0, 14418.0], [1357.0, 7486.0], [1373.0, 18136.0], [1371.0, 21866.0], [1367.0, 21281.0], [1365.0, 21870.0], [1363.0, 24420.0], [1361.0, 14041.5], [1461.0, 5109.5], [1467.0, 5109.0], [1445.0, 5115.0], [1447.0, 8092.0], [1449.0, 24585.0], [1453.0, 8089.5], [1455.0, 8090.0], [1469.0, 8085.0], [1463.0, 6598.5], [1459.0, 8088.0], [1457.0, 8088.0], [1439.0, 16302.0], [1411.0, 9895.0], [1409.0, 9898.0], [1413.0, 9894.0], [1415.0, 9893.0], [1417.0, 9892.0], [1421.0, 16633.5], [1419.0, 9880.0], [1423.0, 9865.0], [1435.0, 5151.0], [1433.0, 5949.0], [1431.0, 18019.0], [1429.0, 24339.0], [1427.0, 9863.0], [1425.0, 11454.0], [1527.0, 7825.0], [1505.0, 9646.0], [1509.0, 6558.0], [1511.0, 24540.0], [1515.0, 6817.0], [1513.0, 8045.0], [1519.0, 12571.5], [1531.0, 7820.0], [1529.0, 7821.0], [1525.0, 22318.0], [1523.0, 7828.0], [1521.0, 7397.5], [1483.0, 5101.0], [1481.0, 5100.0], [1479.0, 11919.333333333334], [1477.0, 8083.0], [1475.0, 5105.0], [1473.0, 5631.0], [1503.0, 5080.5], [1501.0, 8063.0], [1499.0, 10680.5], [1497.0, 8066.0], [1493.0, 5091.0], [1489.0, 5091.0], [1545.0, 5356.0], [1571.0, 6998.333333333333], [1569.0, 8589.0], [1567.0, 8598.0], [1539.0, 7817.0], [1537.0, 7385.5], [1543.0, 13922.5], [1547.0, 3852.0], [1551.0, 20243.5], [1549.0, 21520.0], [1565.0, 18963.0], [1559.0, 11537.333333333334], [1555.0, 12998.0], [1553.0, 7029.0], [1615.0, 2569.5], [1633.0, 244.0], [1629.0, 244.0], [1627.0, 244.0], [1625.0, 243.5], [1621.0, 244.0], [1619.0, 245.33333333333334], [1697.0, 242.0], [1727.0, 240.0], [1701.0, 242.0], [1707.0, 241.5], [1709.0, 241.41666666666674], [1711.0, 240.5], [1725.0, 240.57142857142858], [1723.0, 241.0], [1721.0, 240.0], [1719.0, 240.0], [1717.0, 241.0], [1715.0, 240.6], [1695.0, 242.0], [1693.0, 242.0], [1691.0, 242.33333333333334], [1689.0, 242.0], [1687.0, 243.0], [1777.0, 217.0], [1769.0, 217.5], [1765.0, 217.6], [1781.0, 216.0], [1757.0, 217.5], [1731.0, 240.2], [1729.0, 240.0], [1735.0, 240.0], [1753.0, 218.0], [1751.0, 218.5], [1773.0, 216.0], [1803.0, 169.0], [1831.0, 136.5], [1829.0, 136.0], [1825.0, 136.75], [1799.0, 170.0], [1793.0, 207.0], [1821.0, 138.16666666666666], [1813.0, 169.0], [1871.0, 101.0], [1917.0, 275.3333333333333], [1889.0, 100.0], [1913.0, 264.0], [1887.0, 101.0], [1861.0, 102.5], [1859.0, 104.12500000000001], [1865.0, 101.8], [1867.0, 102.0], [1885.0, 101.25], [1879.0, 101.0], [1877.0, 101.0], [1873.0, 102.0], [1895.0, 100.33333333333333], [1893.0, 101.0], [1891.0, 100.0], [1979.0, 7806.0], [1981.0, 7805.0], [1957.0, 20775.0], [1959.0, 16492.0], [1961.0, 7821.0], [1967.0, 7820.0], [1977.0, 7812.0], [1975.0, 7814.0], [1971.0, 7815.333333333333], [1951.0, 7826.5], [1921.0, 275.0], [1923.0, 275.0], [1927.0, 276.0], [1949.0, 7829.0], [1947.0, 7827.0], [1943.0, 7828.5], [1941.0, 261.0], [1939.0, 260.0], [1989.0, 26496.0], [2035.0, 16933.0], [2029.0, 7771.0], [2003.0, 7773.0], [1987.0, 7793.0], [1985.0, 7804.0], [2262.0, 7748.0], [2298.0, 341.0], [2294.0, 341.0], [2290.0, 1684.5454545454545], [2310.0, 275.0], [2342.0, 263.0], [2338.0, 262.0], [2814.0, 447.984375], [2774.0, 453.0], [2754.0, 457.0], [2918.0, 252.7], [2894.0, 253.0], [2898.0, 255.0], [2906.0, 252.4], [2910.0, 254.0], [2942.0, 252.66666666666666], [2938.0, 253.0], [2934.0, 252.6], [2926.0, 252.75], [2922.0, 253.0769230769231], [2914.0, 253.56250000000003], [2818.0, 447.85714285714283], [2822.0, 446.8695652173913], [2826.0, 447.0], [2830.0, 447.0], [2834.0, 467.625], [2838.0, 472.409090909091], [2842.0, 492.40000000000003], [2846.0, 493.4166666666667], [2862.0, 549.4], [2858.0, 521.6666666666666], [2854.0, 478.2857142857143], [2850.0, 445.16666666666663], [2950.0, 252.0], [2946.0, 251.85714285714286], [2954.0, 249.0], [2962.0, 249.85714285714286], [2966.0, 247.33333333333334], [2970.0, 230.33333333333334], [2974.0, 230.0], [2994.0, 6335.5], [2990.0, 6510.0], [2986.0, 4691.75], [2982.0, 222.12500000000003], [2295.0, 341.0], [2263.0, 14222.5], [2291.0, 1313.4210526315792], [2347.0, 262.0], [2327.0, 273.33333333333337], [2815.0, 447.70000000000005], [2751.0, 458.0], [2775.0, 454.0], [2755.0, 458.0], [2915.0, 254.5], [2919.0, 251.0], [2935.0, 252.25], [2943.0, 251.5], [2899.0, 252.0], [2903.0, 253.5], [2907.0, 253.42857142857142], [2911.0, 254.6], [2927.0, 252.55555555555554], [2923.0, 253.45454545454544], [2867.0, 561.6666666666666], [2819.0, 447.90000000000003], [2823.0, 446.75], [2827.0, 446.875], [2831.0, 447.3333333333333], [2835.0, 446.0], [2839.0, 563.0], [2843.0, 456.6363636363637], [2847.0, 445.0], [2863.0, 560.0], [2859.0, 522.3333333333334], [2855.0, 464.83333333333337], [2851.0, 511.0], [2951.0, 251.0], [2947.0, 249.5], [2959.0, 250.0], [2967.0, 247.25], [2975.0, 229.8], [2987.0, 22350.5], [2979.0, 223.42857142857144], [1.0, 100256.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2972.848211727474, 4033.8250158832807]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2797.2, "minX": 1.68287568E12, "maxY": 477505.0, "series": [{"data": [[1.6828761E12, 4645.85], [1.68287592E12, 368788.5833333333], [1.68287598E12, 267377.7], [1.6828758E12, 477505.0], [1.68287586E12, 382071.2], [1.68287568E12, 53022.73333333333], [1.68287574E12, 371950.6666666667], [1.68287604E12, 3708.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6828761E12, 3242.4], [1.68287592E12, 256914.0], [1.68287598E12, 187924.8], [1.6828758E12, 331396.8], [1.68287586E12, 264020.4], [1.68287568E12, 37321.2], [1.68287574E12, 261441.6], [1.68287604E12, 2797.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828761E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1596.602520819264, "minX": 1.68287568E12, "maxY": 98601.8834196891, "series": [{"data": [[1.6828761E12, 98601.8834196891], [1.68287592E12, 5357.402737939994], [1.68287598E12, 2438.4065178571386], [1.6828758E12, 3692.8496149476036], [1.68287586E12, 4826.03619952493], [1.68287568E12, 1596.602520819264], [1.68287574E12, 2318.1806323094734], [1.68287604E12, 38097.78078078078]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828761E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1596.5779878460512, "minX": 1.68287568E12, "maxY": 98601.86787564767, "series": [{"data": [[1.6828761E12, 98601.86787564767], [1.68287592E12, 5159.766069100432], [1.68287598E12, 2225.4512500000023], [1.6828758E12, 3413.5850523923627], [1.68287586E12, 4550.448677751413], [1.68287568E12, 1596.5779878460512], [1.68287574E12, 2318.1675234545673], [1.68287604E12, 38097.76276276277]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828761E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.02402402402402405, "minX": 1.68287568E12, "maxY": 2944.9557878068135, "series": [{"data": [[1.6828761E12, 0.1398963730569948], [1.68287592E12, 1705.0167861799061], [1.68287598E12, 721.1997767857152], [1.6828758E12, 385.6378487564712], [1.68287586E12, 2944.9557878068135], [1.68287568E12, 163.2736889489085], [1.68287574E12, 239.08835625240923], [1.68287604E12, 0.02402402402402405]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828761E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.68287568E12, "maxY": 239556.0, "series": [{"data": [[1.6828761E12, 100295.0], [1.68287592E12, 239556.0], [1.68287598E12, 200367.0], [1.6828758E12, 129546.0], [1.68287586E12, 163450.0], [1.68287568E12, 13584.0], [1.68287574E12, 71508.0], [1.68287604E12, 73148.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6828761E12, 100264.3], [1.68287592E12, 9025.0], [1.68287598E12, 2468.9000000000015], [1.6828758E12, 14256.0], [1.68287586E12, 476.0], [1.68287568E12, 9576.0], [1.68287574E12, 373.0], [1.68287604E12, 59016.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6828761E12, 100285.26], [1.68287592E12, 54458.990000000005], [1.68287598E12, 26455.0], [1.6828758E12, 100355.96], [1.68287586E12, 149432.99], [1.68287568E12, 12423.080000000007], [1.68287574E12, 56503.0], [1.68287604E12, 72603.96000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6828761E12, 100273.65], [1.68287592E12, 14857.95], [1.68287598E12, 9748.800000000003], [1.6828758E12, 19631.0], [1.68287586E12, 13457.150000000041], [1.68287568E12, 9637.0], [1.68287574E12, 19907.0], [1.68287604E12, 66814.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6828761E12, 76174.0], [1.68287592E12, 20.0], [1.68287598E12, 21.0], [1.6828758E12, 9.0], [1.68287586E12, 21.0], [1.68287568E12, 6.0], [1.68287574E12, 11.0], [1.68287604E12, 16510.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6828761E12, 100209.0], [1.68287592E12, 331.0], [1.68287598E12, 314.0], [1.6828758E12, 85.0], [1.68287586E12, 292.0], [1.68287568E12, 145.0], [1.68287574E12, 263.0], [1.68287604E12, 33597.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828761E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 170342.0, "series": [{"data": [[2.0, 55169.5], [3.0, 3755.0], [4.0, 15040.5], [5.0, 32548.5], [6.0, 66040.0], [8.0, 72244.5], [9.0, 62856.0], [10.0, 4659.5], [11.0, 20235.0], [14.0, 5617.0], [16.0, 88204.0], [17.0, 1593.0], [19.0, 24255.0], [20.0, 7199.0], [22.0, 11970.0], [23.0, 1447.5], [24.0, 817.5], [28.0, 3525.0], [29.0, 77.0], [30.0, 15107.0], [34.0, 35445.0], [37.0, 42720.0], [36.0, 9896.5], [39.0, 61.0], [45.0, 275.0], [46.0, 27.0], [47.0, 1159.0], [51.0, 33467.0], [53.0, 33127.0], [57.0, 44536.0], [56.0, 7820.5], [67.0, 57593.0], [65.0, 10085.0], [70.0, 227.0], [68.0, 100176.0], [76.0, 5903.0], [79.0, 8071.0], [77.0, 8753.0], [82.0, 10556.0], [90.0, 3229.0], [88.0, 1111.0], [93.0, 106.0], [106.0, 3239.0], [114.0, 6160.0], [133.0, 4486.0], [129.0, 115.0], [134.0, 32818.0], [157.0, 128.0], [164.0, 226.5], [170.0, 14290.0], [171.0, 254.0], [174.0, 9756.5], [179.0, 13217.0], [183.0, 11554.0], [198.0, 129.0], [207.0, 250.0], [209.0, 11125.0], [254.0, 100211.0], [270.0, 244.0], [279.0, 262.0], [332.0, 20020.0], [325.0, 239.0], [337.0, 47.0], [367.0, 277.0], [380.0, 233.0], [383.0, 243.0], [382.0, 71.0], [370.0, 242.0], [409.0, 287.0], [415.0, 270.0], [406.0, 7740.0], [419.0, 249.0], [428.0, 43.0], [435.0, 9611.0], [460.0, 310.0], [473.0, 294.0], [489.0, 135.0], [484.0, 299.0], [494.0, 235.0], [487.0, 215.0], [488.0, 252.0], [492.0, 262.0], [511.0, 304.0], [509.0, 271.0], [508.0, 289.0], [540.0, 300.0], [538.0, 201.0], [536.0, 283.0], [518.0, 289.0], [542.0, 6258.5], [543.0, 283.0], [528.0, 298.0], [529.0, 276.0], [534.0, 163.5], [524.0, 100.0], [527.0, 242.0], [516.0, 243.0], [530.0, 280.0], [539.0, 273.0], [533.0, 287.0], [532.0, 298.0], [535.0, 318.0], [551.0, 316.0], [553.0, 88.0], [563.0, 279.0], [564.0, 290.0], [552.0, 255.0], [559.0, 326.0], [562.0, 201.0], [550.0, 265.0], [547.0, 324.0], [574.0, 329.0], [577.0, 221.0], [600.0, 45.0], [585.0, 343.0], [603.0, 297.0], [606.0, 464.0], [599.0, 301.0], [588.0, 319.0], [584.0, 274.0], [581.0, 190.0], [602.0, 306.0], [632.0, 279.0], [630.0, 20027.0], [620.0, 312.0], [613.0, 260.0], [667.0, 263.0], [656.0, 297.0], [644.0, 284.0], [696.0, 63.0], [679.0, 14079.0], [733.0, 117.0], [707.0, 147.0], [729.0, 117.0], [747.0, 43.0], [763.0, 165.0], [798.0, 19605.0], [779.0, 9009.0], [811.0, 68.0], [825.0, 315.0], [846.0, 315.0], [892.0, 12295.0], [889.0, 39.0], [876.0, 79.0], [879.0, 426.0], [883.0, 471.0], [919.0, 86.0], [916.0, 85.0], [939.0, 473.0], [931.0, 221.0], [955.0, 265.0], [969.0, 91.0], [970.0, 301.0], [989.0, 446.0], [1005.0, 287.0], [1013.0, 48.0], [1007.0, 515.0], [1019.0, 282.0], [1063.0, 60.0], [1076.0, 181.0], [1071.0, 249.0], [1067.0, 285.0], [1068.0, 274.0], [1066.0, 397.0], [1043.0, 231.0], [1072.0, 175.0], [1064.0, 296.0], [1050.0, 272.0], [1028.0, 422.0], [1051.0, 302.0], [1052.0, 257.0], [1085.0, 258.0], [1058.0, 525.0], [1083.0, 56.0], [1081.0, 77.0], [1077.0, 260.0], [1143.0, 130.0], [1120.0, 19496.0], [1112.0, 85.0], [1109.0, 412.0], [1119.0, 541.0], [1191.0, 230.0], [1175.0, 418.0], [1153.0, 440.0], [1274.0, 119.0], [1229.0, 249.0], [1252.0, 15130.0], [1394.0, 67.0], [1367.0, 329.0], [1376.0, 503.0], [1475.0, 58.0], [1564.0, 71.0], [1561.0, 103.0], [1574.0, 281.0], [1608.0, 180.0], [1634.0, 265.0], [1615.0, 64.0], [1639.0, 88.0], [1621.0, 288.0], [1606.0, 530.0], [1710.0, 81.0], [1719.0, 39.0], [1895.0, 547.0], [1977.0, 503.0], [1986.0, 599.0], [2101.0, 248.0], [2062.0, 53.0], [2050.0, 339.0], [2180.0, 334.0], [2350.0, 547.0], [1.0, 8654.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[538.0, 89185.0], [524.0, 24308.5], [539.0, 167308.0], [527.0, 10426.0], [551.0, 71305.0], [550.0, 19582.0], [547.0, 54641.0], [552.0, 106283.0], [585.0, 24777.0], [37.0, 122349.0], [696.0, 41838.5], [679.0, 45096.0], [46.0, 14499.0], [763.0, 16164.0], [3.0, 117623.0], [1085.0, 76327.0], [1067.0, 31364.0], [1028.0, 26131.0], [67.0, 57575.0], [1058.0, 59908.0], [1252.0, 70411.0], [5.0, 71308.5], [1367.0, 43692.0], [1574.0, 89899.0], [6.0, 44445.0], [1606.0, 44395.0], [1986.0, 97622.0], [2062.0, 19318.5], [2180.0, 95788.0], [9.0, 43965.0], [10.0, 28282.5], [179.0, 71900.5], [209.0, 170342.0], [14.0, 23916.0], [382.0, 109689.0], [428.0, 76197.0], [473.0, 84135.5], [509.0, 29059.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2350.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100211.0, "series": [{"data": [[2.0, 55169.5], [3.0, 3755.0], [4.0, 15040.5], [5.0, 32548.5], [6.0, 66040.0], [8.0, 72244.5], [9.0, 62856.0], [10.0, 4659.5], [11.0, 20235.0], [14.0, 5617.0], [16.0, 88204.0], [17.0, 1593.0], [19.0, 24255.0], [20.0, 7199.0], [22.0, 11970.0], [23.0, 1447.5], [24.0, 817.5], [28.0, 3525.0], [29.0, 77.0], [30.0, 15107.0], [34.0, 35445.0], [37.0, 42720.0], [36.0, 9896.5], [39.0, 61.0], [45.0, 275.0], [46.0, 27.0], [47.0, 1159.0], [51.0, 33467.0], [53.0, 33127.0], [57.0, 44536.0], [56.0, 7820.5], [67.0, 57593.0], [65.0, 10085.0], [70.0, 227.0], [68.0, 100176.0], [76.0, 5903.0], [79.0, 8071.0], [77.0, 8753.0], [82.0, 10556.0], [90.0, 3229.0], [88.0, 1111.0], [93.0, 106.0], [106.0, 3239.0], [114.0, 6160.0], [133.0, 4486.0], [129.0, 115.0], [134.0, 32818.0], [157.0, 128.0], [164.0, 226.5], [170.0, 14290.0], [171.0, 254.0], [174.0, 9756.5], [179.0, 13217.0], [183.0, 11554.0], [198.0, 129.0], [207.0, 250.0], [209.0, 11125.0], [254.0, 100211.0], [270.0, 244.0], [279.0, 262.0], [332.0, 20020.0], [325.0, 239.0], [337.0, 47.0], [367.0, 277.0], [380.0, 232.5], [383.0, 243.0], [382.0, 71.0], [370.0, 242.0], [409.0, 287.0], [415.0, 270.0], [406.0, 7740.0], [419.0, 249.0], [428.0, 43.0], [435.0, 9611.0], [460.0, 310.0], [473.0, 294.0], [489.0, 135.0], [484.0, 299.0], [494.0, 235.0], [487.0, 215.0], [488.0, 252.0], [492.0, 262.0], [511.0, 304.0], [509.0, 271.0], [508.0, 289.0], [540.0, 300.0], [538.0, 201.0], [536.0, 283.0], [518.0, 289.0], [542.0, 6258.5], [543.0, 283.0], [528.0, 298.0], [529.0, 276.0], [534.0, 163.5], [524.0, 100.0], [527.0, 242.0], [516.0, 243.0], [530.0, 280.0], [539.0, 273.0], [533.0, 287.0], [532.0, 298.0], [535.0, 318.0], [551.0, 316.0], [553.0, 88.0], [563.0, 279.0], [564.0, 290.0], [552.0, 255.0], [559.0, 326.0], [562.0, 201.0], [550.0, 265.0], [547.0, 324.0], [574.0, 329.0], [577.0, 221.0], [600.0, 45.0], [585.0, 343.0], [603.0, 297.0], [606.0, 464.0], [599.0, 301.0], [588.0, 319.0], [584.0, 274.0], [581.0, 190.0], [602.0, 306.0], [632.0, 279.0], [630.0, 20027.0], [620.0, 312.0], [613.0, 260.0], [667.0, 263.0], [656.0, 297.0], [644.0, 284.0], [696.0, 63.0], [679.0, 14079.0], [733.0, 117.0], [707.0, 142.0], [729.0, 117.0], [747.0, 43.0], [763.0, 165.0], [798.0, 19605.0], [779.0, 9009.0], [811.0, 68.0], [825.0, 315.0], [846.0, 315.0], [892.0, 12295.0], [889.0, 39.0], [876.0, 79.0], [879.0, 426.0], [883.0, 471.0], [919.0, 86.0], [916.0, 85.0], [939.0, 473.0], [931.0, 221.0], [955.0, 265.0], [969.0, 91.0], [970.0, 301.0], [989.0, 446.0], [1005.0, 287.0], [1013.0, 48.0], [1007.0, 515.0], [1019.0, 282.0], [1063.0, 60.0], [1076.0, 181.0], [1071.0, 249.0], [1067.0, 285.0], [1068.0, 274.0], [1066.0, 397.0], [1043.0, 231.0], [1072.0, 175.0], [1064.0, 296.0], [1050.0, 272.0], [1028.0, 422.0], [1051.0, 302.0], [1052.0, 257.0], [1085.0, 258.0], [1058.0, 525.0], [1083.0, 56.0], [1081.0, 77.0], [1077.0, 260.0], [1143.0, 130.0], [1120.0, 19496.0], [1112.0, 85.0], [1109.0, 412.0], [1119.0, 541.0], [1191.0, 230.0], [1175.0, 418.0], [1153.0, 440.0], [1274.0, 119.0], [1229.0, 249.0], [1252.0, 15130.0], [1394.0, 67.0], [1367.0, 329.0], [1376.0, 503.0], [1475.0, 58.0], [1564.0, 71.0], [1561.0, 103.0], [1574.0, 281.0], [1608.0, 180.0], [1634.0, 265.0], [1615.0, 64.0], [1639.0, 88.0], [1621.0, 288.0], [1606.0, 530.0], [1710.0, 81.0], [1719.0, 39.0], [1895.0, 547.0], [1977.0, 503.0], [1986.0, 599.0], [2101.0, 248.0], [2062.0, 53.0], [2050.0, 339.0], [2180.0, 334.0], [2350.0, 547.0], [1.0, 8653.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[538.0, 0.0], [524.0, 0.0], [539.0, 0.0], [527.0, 0.0], [551.0, 0.0], [550.0, 0.0], [547.0, 0.0], [552.0, 0.0], [585.0, 0.0], [37.0, 0.0], [696.0, 0.0], [679.0, 0.0], [46.0, 0.0], [763.0, 0.0], [3.0, 0.0], [1085.0, 0.0], [1067.0, 0.0], [1028.0, 0.0], [67.0, 0.0], [1058.0, 0.0], [1252.0, 0.0], [5.0, 0.0], [1367.0, 0.0], [1574.0, 0.0], [6.0, 0.0], [1606.0, 0.0], [1986.0, 0.0], [2062.0, 0.0], [2180.0, 0.0], [9.0, 0.0], [10.0, 0.0], [179.0, 0.0], [209.0, 0.0], [14.0, 0.0], [382.0, 0.0], [428.0, 0.0], [473.0, 0.0], [509.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2350.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 124.0, "minX": 1.68287568E12, "maxY": 658.6, "series": [{"data": [[1.68287592E12, 489.5], [1.68287598E12, 379.56666666666666], [1.6828758E12, 658.6], [1.68287586E12, 507.3], [1.68287568E12, 124.0], [1.68287574E12, 516.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68287598E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.68287568E12, "maxY": 657.5333333333333, "series": [{"data": [[1.6828761E12, 6.433333333333334], [1.68287592E12, 509.75], [1.68287598E12, 372.8666666666667], [1.6828758E12, 657.5333333333333], [1.68287586E12, 523.85], [1.68287568E12, 74.05], [1.68287574E12, 518.7333333333333], [1.68287604E12, 5.55]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68287592E12, 1.5833333333333333], [1.68287598E12, 0.4666666666666667], [1.6828758E12, 2.55], [1.68287586E12, 2.4]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6828761E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.68287568E12, "maxY": 657.5333333333333, "series": [{"data": [[1.6828761E12, 6.433333333333334], [1.68287592E12, 509.75], [1.68287598E12, 372.8666666666667], [1.6828758E12, 657.5333333333333], [1.68287586E12, 523.85], [1.68287568E12, 74.05], [1.68287574E12, 518.7333333333333], [1.68287604E12, 5.55]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68287592E12, 1.5833333333333333], [1.68287598E12, 0.4666666666666667], [1.6828758E12, 2.55], [1.68287586E12, 2.4]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828761E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.68287568E12, "maxY": 657.5333333333333, "series": [{"data": [[1.6828761E12, 6.433333333333334], [1.68287592E12, 509.75], [1.68287598E12, 372.8666666666667], [1.6828758E12, 657.5333333333333], [1.68287586E12, 523.85], [1.68287568E12, 74.05], [1.68287574E12, 518.7333333333333], [1.68287604E12, 5.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68287592E12, 1.5833333333333333], [1.68287598E12, 0.4666666666666667], [1.6828758E12, 2.55], [1.68287586E12, 2.4]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6828761E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

