/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 193700.0, "series": [{"data": [[0.0, 9.0], [0.1, 20.0], [0.2, 22.0], [0.3, 25.0], [0.4, 26.0], [0.5, 28.0], [0.6, 30.0], [0.7, 31.0], [0.8, 31.0], [0.9, 32.0], [1.0, 33.0], [1.1, 34.0], [1.2, 35.0], [1.3, 36.0], [1.4, 37.0], [1.5, 39.0], [1.6, 41.0], [1.7, 44.0], [1.8, 45.0], [1.9, 46.0], [2.0, 48.0], [2.1, 50.0], [2.2, 50.0], [2.3, 51.0], [2.4, 52.0], [2.5, 52.0], [2.6, 53.0], [2.7, 54.0], [2.8, 55.0], [2.9, 56.0], [3.0, 56.0], [3.1, 56.0], [3.2, 57.0], [3.3, 57.0], [3.4, 58.0], [3.5, 58.0], [3.6, 59.0], [3.7, 59.0], [3.8, 60.0], [3.9, 60.0], [4.0, 60.0], [4.1, 61.0], [4.2, 62.0], [4.3, 63.0], [4.4, 63.0], [4.5, 64.0], [4.6, 64.0], [4.7, 64.0], [4.8, 65.0], [4.9, 65.0], [5.0, 65.0], [5.1, 65.0], [5.2, 66.0], [5.3, 66.0], [5.4, 66.0], [5.5, 66.0], [5.6, 67.0], [5.7, 67.0], [5.8, 68.0], [5.9, 68.0], [6.0, 68.0], [6.1, 68.0], [6.2, 69.0], [6.3, 69.0], [6.4, 69.0], [6.5, 70.0], [6.6, 70.0], [6.7, 70.0], [6.8, 71.0], [6.9, 71.0], [7.0, 72.0], [7.1, 72.0], [7.2, 72.0], [7.3, 73.0], [7.4, 73.0], [7.5, 73.0], [7.6, 73.0], [7.7, 73.0], [7.8, 74.0], [7.9, 74.0], [8.0, 74.0], [8.1, 74.0], [8.2, 74.0], [8.3, 75.0], [8.4, 75.0], [8.5, 75.0], [8.6, 75.0], [8.7, 75.0], [8.8, 76.0], [8.9, 76.0], [9.0, 76.0], [9.1, 76.0], [9.2, 76.0], [9.3, 76.0], [9.4, 76.0], [9.5, 77.0], [9.6, 77.0], [9.7, 77.0], [9.8, 77.0], [9.9, 77.0], [10.0, 77.0], [10.1, 77.0], [10.2, 77.0], [10.3, 77.0], [10.4, 78.0], [10.5, 78.0], [10.6, 78.0], [10.7, 78.0], [10.8, 78.0], [10.9, 78.0], [11.0, 78.0], [11.1, 78.0], [11.2, 78.0], [11.3, 78.0], [11.4, 79.0], [11.5, 79.0], [11.6, 79.0], [11.7, 79.0], [11.8, 79.0], [11.9, 79.0], [12.0, 79.0], [12.1, 79.0], [12.2, 80.0], [12.3, 80.0], [12.4, 80.0], [12.5, 80.0], [12.6, 80.0], [12.7, 80.0], [12.8, 81.0], [12.9, 81.0], [13.0, 81.0], [13.1, 81.0], [13.2, 81.0], [13.3, 81.0], [13.4, 81.0], [13.5, 81.0], [13.6, 81.0], [13.7, 82.0], [13.8, 82.0], [13.9, 82.0], [14.0, 82.0], [14.1, 82.0], [14.2, 82.0], [14.3, 82.0], [14.4, 82.0], [14.5, 82.0], [14.6, 82.0], [14.7, 82.0], [14.8, 82.0], [14.9, 82.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 83.0], [15.4, 83.0], [15.5, 83.0], [15.6, 83.0], [15.7, 83.0], [15.8, 83.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 84.0], [16.6, 84.0], [16.7, 84.0], [16.8, 84.0], [16.9, 84.0], [17.0, 84.0], [17.1, 84.0], [17.2, 84.0], [17.3, 84.0], [17.4, 84.0], [17.5, 84.0], [17.6, 85.0], [17.7, 85.0], [17.8, 85.0], [17.9, 85.0], [18.0, 85.0], [18.1, 85.0], [18.2, 85.0], [18.3, 85.0], [18.4, 85.0], [18.5, 86.0], [18.6, 86.0], [18.7, 86.0], [18.8, 86.0], [18.9, 86.0], [19.0, 86.0], [19.1, 86.0], [19.2, 86.0], [19.3, 86.0], [19.4, 86.0], [19.5, 86.0], [19.6, 87.0], [19.7, 87.0], [19.8, 87.0], [19.9, 87.0], [20.0, 87.0], [20.1, 87.0], [20.2, 87.0], [20.3, 87.0], [20.4, 87.0], [20.5, 87.0], [20.6, 87.0], [20.7, 87.0], [20.8, 88.0], [20.9, 88.0], [21.0, 88.0], [21.1, 88.0], [21.2, 88.0], [21.3, 88.0], [21.4, 88.0], [21.5, 89.0], [21.6, 89.0], [21.7, 89.0], [21.8, 89.0], [21.9, 89.0], [22.0, 89.0], [22.1, 89.0], [22.2, 89.0], [22.3, 89.0], [22.4, 89.0], [22.5, 90.0], [22.6, 90.0], [22.7, 90.0], [22.8, 90.0], [22.9, 90.0], [23.0, 90.0], [23.1, 90.0], [23.2, 90.0], [23.3, 90.0], [23.4, 91.0], [23.5, 91.0], [23.6, 91.0], [23.7, 91.0], [23.8, 91.0], [23.9, 91.0], [24.0, 91.0], [24.1, 91.0], [24.2, 91.0], [24.3, 91.0], [24.4, 91.0], [24.5, 92.0], [24.6, 92.0], [24.7, 92.0], [24.8, 92.0], [24.9, 92.0], [25.0, 92.0], [25.1, 92.0], [25.2, 92.0], [25.3, 92.0], [25.4, 92.0], [25.5, 92.0], [25.6, 93.0], [25.7, 93.0], [25.8, 93.0], [25.9, 93.0], [26.0, 93.0], [26.1, 93.0], [26.2, 93.0], [26.3, 93.0], [26.4, 94.0], [26.5, 94.0], [26.6, 94.0], [26.7, 94.0], [26.8, 94.0], [26.9, 94.0], [27.0, 94.0], [27.1, 94.0], [27.2, 95.0], [27.3, 95.0], [27.4, 95.0], [27.5, 95.0], [27.6, 95.0], [27.7, 95.0], [27.8, 95.0], [27.9, 95.0], [28.0, 95.0], [28.1, 95.0], [28.2, 95.0], [28.3, 95.0], [28.4, 95.0], [28.5, 96.0], [28.6, 96.0], [28.7, 96.0], [28.8, 96.0], [28.9, 96.0], [29.0, 96.0], [29.1, 96.0], [29.2, 96.0], [29.3, 96.0], [29.4, 96.0], [29.5, 97.0], [29.6, 97.0], [29.7, 97.0], [29.8, 97.0], [29.9, 97.0], [30.0, 97.0], [30.1, 97.0], [30.2, 97.0], [30.3, 97.0], [30.4, 98.0], [30.5, 98.0], [30.6, 98.0], [30.7, 98.0], [30.8, 98.0], [30.9, 98.0], [31.0, 98.0], [31.1, 98.0], [31.2, 98.0], [31.3, 99.0], [31.4, 99.0], [31.5, 99.0], [31.6, 99.0], [31.7, 99.0], [31.8, 99.0], [31.9, 99.0], [32.0, 100.0], [32.1, 100.0], [32.2, 100.0], [32.3, 100.0], [32.4, 100.0], [32.5, 100.0], [32.6, 100.0], [32.7, 101.0], [32.8, 101.0], [32.9, 101.0], [33.0, 101.0], [33.1, 101.0], [33.2, 101.0], [33.3, 102.0], [33.4, 102.0], [33.5, 102.0], [33.6, 102.0], [33.7, 102.0], [33.8, 103.0], [33.9, 103.0], [34.0, 103.0], [34.1, 103.0], [34.2, 103.0], [34.3, 104.0], [34.4, 104.0], [34.5, 104.0], [34.6, 104.0], [34.7, 104.0], [34.8, 104.0], [34.9, 105.0], [35.0, 105.0], [35.1, 105.0], [35.2, 105.0], [35.3, 105.0], [35.4, 105.0], [35.5, 105.0], [35.6, 105.0], [35.7, 106.0], [35.8, 106.0], [35.9, 106.0], [36.0, 106.0], [36.1, 106.0], [36.2, 106.0], [36.3, 107.0], [36.4, 107.0], [36.5, 107.0], [36.6, 107.0], [36.7, 108.0], [36.8, 108.0], [36.9, 108.0], [37.0, 108.0], [37.1, 109.0], [37.2, 109.0], [37.3, 109.0], [37.4, 109.0], [37.5, 109.0], [37.6, 109.0], [37.7, 110.0], [37.8, 110.0], [37.9, 110.0], [38.0, 110.0], [38.1, 110.0], [38.2, 110.0], [38.3, 110.0], [38.4, 110.0], [38.5, 110.0], [38.6, 111.0], [38.7, 111.0], [38.8, 111.0], [38.9, 111.0], [39.0, 111.0], [39.1, 112.0], [39.2, 112.0], [39.3, 112.0], [39.4, 112.0], [39.5, 113.0], [39.6, 113.0], [39.7, 113.0], [39.8, 113.0], [39.9, 114.0], [40.0, 114.0], [40.1, 115.0], [40.2, 115.0], [40.3, 115.0], [40.4, 116.0], [40.5, 117.0], [40.6, 117.0], [40.7, 117.0], [40.8, 117.0], [40.9, 118.0], [41.0, 118.0], [41.1, 118.0], [41.2, 119.0], [41.3, 119.0], [41.4, 119.0], [41.5, 119.0], [41.6, 120.0], [41.7, 120.0], [41.8, 121.0], [41.9, 121.0], [42.0, 122.0], [42.1, 122.0], [42.2, 122.0], [42.3, 122.0], [42.4, 123.0], [42.5, 123.0], [42.6, 123.0], [42.7, 123.0], [42.8, 124.0], [42.9, 124.0], [43.0, 124.0], [43.1, 124.0], [43.2, 125.0], [43.3, 125.0], [43.4, 126.0], [43.5, 126.0], [43.6, 127.0], [43.7, 128.0], [43.8, 129.0], [43.9, 129.0], [44.0, 130.0], [44.1, 130.0], [44.2, 131.0], [44.3, 131.0], [44.4, 132.0], [44.5, 132.0], [44.6, 133.0], [44.7, 133.0], [44.8, 134.0], [44.9, 134.0], [45.0, 135.0], [45.1, 135.0], [45.2, 135.0], [45.3, 136.0], [45.4, 137.0], [45.5, 137.0], [45.6, 138.0], [45.7, 139.0], [45.8, 139.0], [45.9, 140.0], [46.0, 140.0], [46.1, 140.0], [46.2, 141.0], [46.3, 141.0], [46.4, 141.0], [46.5, 141.0], [46.6, 142.0], [46.7, 142.0], [46.8, 143.0], [46.9, 144.0], [47.0, 145.0], [47.1, 145.0], [47.2, 146.0], [47.3, 146.0], [47.4, 147.0], [47.5, 147.0], [47.6, 148.0], [47.7, 149.0], [47.8, 149.0], [47.9, 149.0], [48.0, 150.0], [48.1, 151.0], [48.2, 152.0], [48.3, 153.0], [48.4, 153.0], [48.5, 154.0], [48.6, 155.0], [48.7, 156.0], [48.8, 156.0], [48.9, 157.0], [49.0, 157.0], [49.1, 158.0], [49.2, 159.0], [49.3, 161.0], [49.4, 162.0], [49.5, 163.0], [49.6, 165.0], [49.7, 169.0], [49.8, 170.0], [49.9, 171.0], [50.0, 171.0], [50.1, 173.0], [50.2, 176.0], [50.3, 178.0], [50.4, 179.0], [50.5, 182.0], [50.6, 185.0], [50.7, 203.0], [50.8, 229.0], [50.9, 257.0], [51.0, 313.0], [51.1, 342.0], [51.2, 383.0], [51.3, 410.0], [51.4, 532.0], [51.5, 561.0], [51.6, 587.0], [51.7, 609.0], [51.8, 667.0], [51.9, 676.0], [52.0, 687.0], [52.1, 703.0], [52.2, 721.0], [52.3, 836.0], [52.4, 894.0], [52.5, 905.0], [52.6, 984.0], [52.7, 1051.0], [52.8, 1082.0], [52.9, 1131.0], [53.0, 1164.0], [53.1, 1193.0], [53.2, 1222.0], [53.3, 1231.0], [53.4, 1246.0], [53.5, 1265.0], [53.6, 1279.0], [53.7, 1292.0], [53.8, 1405.0], [53.9, 1443.0], [54.0, 1543.0], [54.1, 1627.0], [54.2, 1642.0], [54.3, 1665.0], [54.4, 1701.0], [54.5, 1716.0], [54.6, 1724.0], [54.7, 1738.0], [54.8, 1756.0], [54.9, 1772.0], [55.0, 1822.0], [55.1, 1873.0], [55.2, 1911.0], [55.3, 1972.0], [55.4, 2005.0], [55.5, 2021.0], [55.6, 2041.0], [55.7, 2075.0], [55.8, 2119.0], [55.9, 2134.0], [56.0, 2214.0], [56.1, 2251.0], [56.2, 2300.0], [56.3, 2336.0], [56.4, 2476.0], [56.5, 2544.0], [56.6, 2589.0], [56.7, 2630.0], [56.8, 2669.0], [56.9, 2678.0], [57.0, 2705.0], [57.1, 2723.0], [57.2, 2747.0], [57.3, 2756.0], [57.4, 2788.0], [57.5, 2907.0], [57.6, 2964.0], [57.7, 2992.0], [57.8, 3015.0], [57.9, 3089.0], [58.0, 3148.0], [58.1, 3233.0], [58.2, 3324.0], [58.3, 3341.0], [58.4, 3345.0], [58.5, 3364.0], [58.6, 3420.0], [58.7, 3485.0], [58.8, 3521.0], [58.9, 3665.0], [59.0, 3693.0], [59.1, 3731.0], [59.2, 3777.0], [59.3, 3846.0], [59.4, 3857.0], [59.5, 3909.0], [59.6, 3930.0], [59.7, 3964.0], [59.8, 4009.0], [59.9, 4056.0], [60.0, 4137.0], [60.1, 4234.0], [60.2, 4294.0], [60.3, 4327.0], [60.4, 4338.0], [60.5, 4363.0], [60.6, 4411.0], [60.7, 4613.0], [60.8, 4649.0], [60.9, 4732.0], [61.0, 4747.0], [61.1, 4781.0], [61.2, 4803.0], [61.3, 4933.0], [61.4, 5023.0], [61.5, 5025.0], [61.6, 5061.0], [61.7, 5115.0], [61.8, 5134.0], [61.9, 5173.0], [62.0, 5225.0], [62.1, 5309.0], [62.2, 5405.0], [62.3, 5604.0], [62.4, 5700.0], [62.5, 5745.0], [62.6, 5851.0], [62.7, 5927.0], [62.8, 5976.0], [62.9, 6125.0], [63.0, 6212.0], [63.1, 6245.0], [63.2, 6322.0], [63.3, 6395.0], [63.4, 6423.0], [63.5, 6438.0], [63.6, 6603.0], [63.7, 6671.0], [63.8, 6765.0], [63.9, 6889.0], [64.0, 6933.0], [64.1, 7072.0], [64.2, 7187.0], [64.3, 7266.0], [64.4, 7328.0], [64.5, 7363.0], [64.6, 7420.0], [64.7, 7488.0], [64.8, 7614.0], [64.9, 7703.0], [65.0, 7761.0], [65.1, 7872.0], [65.2, 7965.0], [65.3, 8001.0], [65.4, 8156.0], [65.5, 8407.0], [65.6, 8551.0], [65.7, 8585.0], [65.8, 8718.0], [65.9, 8876.0], [66.0, 9093.0], [66.1, 9269.0], [66.2, 9348.0], [66.3, 9399.0], [66.4, 9452.0], [66.5, 9457.0], [66.6, 9472.0], [66.7, 9476.0], [66.8, 9504.0], [66.9, 9536.0], [67.0, 9774.0], [67.1, 9854.0], [67.2, 10011.0], [67.3, 10106.0], [67.4, 10381.0], [67.5, 10445.0], [67.6, 10455.0], [67.7, 10490.0], [67.8, 10552.0], [67.9, 10596.0], [68.0, 10603.0], [68.1, 10695.0], [68.2, 10848.0], [68.3, 11065.0], [68.4, 11137.0], [68.5, 11175.0], [68.6, 11181.0], [68.7, 11206.0], [68.8, 11219.0], [68.9, 11241.0], [69.0, 11332.0], [69.1, 11362.0], [69.2, 11381.0], [69.3, 11437.0], [69.4, 11472.0], [69.5, 11507.0], [69.6, 11620.0], [69.7, 11734.0], [69.8, 11772.0], [69.9, 11829.0], [70.0, 11881.0], [70.1, 11882.0], [70.2, 11898.0], [70.3, 11934.0], [70.4, 12001.0], [70.5, 12015.0], [70.6, 12019.0], [70.7, 12083.0], [70.8, 12263.0], [70.9, 12528.0], [71.0, 12571.0], [71.1, 12783.0], [71.2, 13072.0], [71.3, 13177.0], [71.4, 13297.0], [71.5, 13314.0], [71.6, 13335.0], [71.7, 13338.0], [71.8, 13358.0], [71.9, 13450.0], [72.0, 13645.0], [72.1, 13670.0], [72.2, 13672.0], [72.3, 13679.0], [72.4, 13755.0], [72.5, 14105.0], [72.6, 14477.0], [72.7, 14566.0], [72.8, 14572.0], [72.9, 14611.0], [73.0, 14622.0], [73.1, 14671.0], [73.2, 14691.0], [73.3, 14702.0], [73.4, 14705.0], [73.5, 14724.0], [73.6, 14730.0], [73.7, 14731.0], [73.8, 14733.0], [73.9, 14783.0], [74.0, 14868.0], [74.1, 14876.0], [74.2, 14920.0], [74.3, 15033.0], [74.4, 15129.0], [74.5, 15143.0], [74.6, 15200.0], [74.7, 15302.0], [74.8, 15485.0], [74.9, 15565.0], [75.0, 15589.0], [75.1, 15590.0], [75.2, 15624.0], [75.3, 15843.0], [75.4, 15898.0], [75.5, 15904.0], [75.6, 16073.0], [75.7, 16202.0], [75.8, 16241.0], [75.9, 16357.0], [76.0, 16434.0], [76.1, 16438.0], [76.2, 16440.0], [76.3, 16564.0], [76.4, 16565.0], [76.5, 16566.0], [76.6, 16620.0], [76.7, 16651.0], [76.8, 16661.0], [76.9, 16729.0], [77.0, 16740.0], [77.1, 16758.0], [77.2, 16802.0], [77.3, 16833.0], [77.4, 16886.0], [77.5, 16887.0], [77.6, 16909.0], [77.7, 16923.0], [77.8, 16930.0], [77.9, 16955.0], [78.0, 16957.0], [78.1, 17001.0], [78.2, 17005.0], [78.3, 17007.0], [78.4, 17177.0], [78.5, 17220.0], [78.6, 17286.0], [78.7, 17386.0], [78.8, 17681.0], [78.9, 17796.0], [79.0, 17809.0], [79.1, 17889.0], [79.2, 17902.0], [79.3, 17974.0], [79.4, 18030.0], [79.5, 18072.0], [79.6, 18216.0], [79.7, 18229.0], [79.8, 18248.0], [79.9, 18264.0], [80.0, 18311.0], [80.1, 18422.0], [80.2, 18517.0], [80.3, 18549.0], [80.4, 18553.0], [80.5, 18672.0], [80.6, 18710.0], [80.7, 18805.0], [80.8, 18855.0], [80.9, 18890.0], [81.0, 18924.0], [81.1, 18943.0], [81.2, 18945.0], [81.3, 19056.0], [81.4, 19262.0], [81.5, 19429.0], [81.6, 19516.0], [81.7, 19526.0], [81.8, 19561.0], [81.9, 19841.0], [82.0, 19983.0], [82.1, 20096.0], [82.2, 20346.0], [82.3, 20509.0], [82.4, 20583.0], [82.5, 20740.0], [82.6, 20909.0], [82.7, 20950.0], [82.8, 21092.0], [82.9, 21144.0], [83.0, 21269.0], [83.1, 21363.0], [83.2, 21390.0], [83.3, 21402.0], [83.4, 21617.0], [83.5, 21726.0], [83.6, 21824.0], [83.7, 21924.0], [83.8, 21932.0], [83.9, 21936.0], [84.0, 21977.0], [84.1, 21978.0], [84.2, 21979.0], [84.3, 21984.0], [84.4, 22027.0], [84.5, 22052.0], [84.6, 22401.0], [84.7, 23018.0], [84.8, 23194.0], [84.9, 23316.0], [85.0, 23359.0], [85.1, 23364.0], [85.2, 23372.0], [85.3, 23376.0], [85.4, 23480.0], [85.5, 23731.0], [85.6, 23990.0], [85.7, 24051.0], [85.8, 24416.0], [85.9, 24457.0], [86.0, 24470.0], [86.1, 24577.0], [86.2, 24622.0], [86.3, 24814.0], [86.4, 24842.0], [86.5, 25016.0], [86.6, 25070.0], [86.7, 25132.0], [86.8, 25136.0], [86.9, 25168.0], [87.0, 25170.0], [87.1, 25232.0], [87.2, 25313.0], [87.3, 25604.0], [87.4, 25760.0], [87.5, 25862.0], [87.6, 25870.0], [87.7, 25906.0], [87.8, 25917.0], [87.9, 25983.0], [88.0, 26187.0], [88.1, 26604.0], [88.2, 26652.0], [88.3, 26662.0], [88.4, 26664.0], [88.5, 26694.0], [88.6, 26745.0], [88.7, 26782.0], [88.8, 26813.0], [88.9, 26815.0], [89.0, 27040.0], [89.1, 27043.0], [89.2, 27091.0], [89.3, 27322.0], [89.4, 27866.0], [89.5, 28265.0], [89.6, 28793.0], [89.7, 29789.0], [89.8, 30478.0], [89.9, 30812.0], [90.0, 32345.0], [90.1, 32561.0], [90.2, 32940.0], [90.3, 33382.0], [90.4, 33908.0], [90.5, 34383.0], [90.6, 34926.0], [90.7, 35527.0], [90.8, 35833.0], [90.9, 36233.0], [91.0, 36493.0], [91.1, 37747.0], [91.2, 38930.0], [91.3, 39321.0], [91.4, 39937.0], [91.5, 40168.0], [91.6, 40868.0], [91.7, 42028.0], [91.8, 43404.0], [91.9, 44596.0], [92.0, 45235.0], [92.1, 45992.0], [92.2, 46979.0], [92.3, 49093.0], [92.4, 50141.0], [92.5, 50165.0], [92.6, 50166.0], [92.7, 51942.0], [92.8, 54333.0], [92.9, 55953.0], [93.0, 57592.0], [93.1, 58613.0], [93.2, 60766.0], [93.3, 63234.0], [93.4, 63460.0], [93.5, 63785.0], [93.6, 63954.0], [93.7, 64086.0], [93.8, 64313.0], [93.9, 64632.0], [94.0, 64981.0], [94.1, 65029.0], [94.2, 66360.0], [94.3, 67336.0], [94.4, 67355.0], [94.5, 67485.0], [94.6, 67568.0], [94.7, 69023.0], [94.8, 70974.0], [94.9, 73076.0], [95.0, 75474.0], [95.1, 76911.0], [95.2, 80702.0], [95.3, 83500.0], [95.4, 83578.0], [95.5, 85629.0], [95.6, 85730.0], [95.7, 90005.0], [95.8, 90863.0], [95.9, 94400.0], [96.0, 96745.0], [96.1, 99999.0], [96.2, 100033.0], [96.3, 100065.0], [96.4, 100074.0], [96.5, 100083.0], [96.6, 100094.0], [96.7, 100097.0], [96.8, 100102.0], [96.9, 100108.0], [97.0, 100119.0], [97.1, 100133.0], [97.2, 100140.0], [97.3, 100162.0], [97.4, 100199.0], [97.5, 100304.0], [97.6, 100305.0], [97.7, 100316.0], [97.8, 100322.0], [97.9, 100352.0], [98.0, 100386.0], [98.1, 101097.0], [98.2, 101144.0], [98.3, 101179.0], [98.4, 101294.0], [98.5, 102091.0], [98.6, 105588.0], [98.7, 117605.0], [98.8, 127405.0], [98.9, 127504.0], [99.0, 127740.0], [99.1, 127820.0], [99.2, 128237.0], [99.3, 128862.0], [99.4, 129247.0], [99.5, 129810.0], [99.6, 130107.0], [99.7, 130832.0], [99.8, 130871.0], [99.9, 131966.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10387.0, "series": [{"data": [[0.0, 10387.0], [192800.0, 1.0], [193700.0, 1.0], [68300.0, 6.0], [71500.0, 3.0], [69900.0, 1.0], [73100.0, 1.0], [82700.0, 2.0], [100300.0, 180.0], [127500.0, 31.0], [130700.0, 4.0], [100.0, 6084.0], [33700.0, 14.0], [32900.0, 4.0], [35300.0, 2.0], [36100.0, 3.0], [37700.0, 4.0], [38500.0, 2.0], [36900.0, 4.0], [40100.0, 18.0], [40900.0, 5.0], [39300.0, 2.0], [41700.0, 1.0], [44900.0, 2.0], [44100.0, 2.0], [43300.0, 7.0], [46500.0, 1.0], [45700.0, 2.0], [49700.0, 2.0], [200.0, 105.0], [52900.0, 3.0], [56900.0, 8.0], [57700.0, 3.0], [60900.0, 2.0], [61700.0, 2.0], [64100.0, 2.0], [64900.0, 7.0], [65800.0, 1.0], [67400.0, 22.0], [69000.0, 1.0], [70600.0, 7.0], [300.0, 83.0], [75400.0, 3.0], [73800.0, 1.0], [78600.0, 2.0], [83400.0, 4.0], [85000.0, 6.0], [93000.0, 2.0], [94600.0, 2.0], [96200.0, 1.0], [101000.0, 20.0], [400.0, 34.0], [112200.0, 1.0], [500.0, 97.0], [129800.0, 35.0], [128200.0, 35.0], [600.0, 132.0], [700.0, 75.0], [800.0, 54.0], [900.0, 63.0], [1000.0, 60.0], [1100.0, 101.0], [1200.0, 197.0], [1300.0, 12.0], [1400.0, 50.0], [1500.0, 33.0], [1600.0, 114.0], [1700.0, 174.0], [1800.0, 79.0], [1900.0, 62.0], [2000.0, 133.0], [2100.0, 69.0], [2200.0, 71.0], [2300.0, 57.0], [2400.0, 14.0], [2500.0, 73.0], [2600.0, 104.0], [2800.0, 22.0], [2700.0, 149.0], [2900.0, 80.0], [3000.0, 62.0], [3100.0, 35.0], [3300.0, 133.0], [3200.0, 43.0], [3400.0, 53.0], [3500.0, 38.0], [3700.0, 60.0], [3600.0, 61.0], [3800.0, 74.0], [3900.0, 109.0], [4000.0, 66.0], [4100.0, 24.0], [4200.0, 44.0], [4300.0, 119.0], [4600.0, 61.0], [4500.0, 7.0], [72900.0, 1.0], [4400.0, 26.0], [4700.0, 111.0], [4800.0, 27.0], [76100.0, 7.0], [5100.0, 97.0], [4900.0, 25.0], [5000.0, 98.0], [5300.0, 27.0], [5200.0, 40.0], [85700.0, 8.0], [84100.0, 2.0], [5600.0, 32.0], [5400.0, 27.0], [5500.0, 17.0], [5800.0, 31.0], [5700.0, 55.0], [6100.0, 35.0], [96900.0, 4.0], [5900.0, 56.0], [6000.0, 10.0], [6300.0, 56.0], [6200.0, 65.0], [100100.0, 215.0], [6400.0, 66.0], [6500.0, 15.0], [6600.0, 39.0], [6800.0, 29.0], [6700.0, 36.0], [6900.0, 49.0], [7000.0, 14.0], [114500.0, 1.0], [7100.0, 31.0], [7300.0, 71.0], [7400.0, 48.0], [7200.0, 52.0], [7500.0, 17.0], [7600.0, 22.0], [7800.0, 13.0], [7700.0, 70.0], [7900.0, 62.0], [8000.0, 25.0], [8100.0, 19.0], [8400.0, 18.0], [8200.0, 14.0], [8600.0, 7.0], [8800.0, 12.0], [9200.0, 35.0], [9000.0, 33.0], [9400.0, 161.0], [9600.0, 3.0], [9800.0, 32.0], [10000.0, 31.0], [10200.0, 8.0], [10400.0, 99.0], [10600.0, 52.0], [169400.0, 18.0], [10800.0, 22.0], [11000.0, 40.0], [11200.0, 97.0], [11400.0, 88.0], [11600.0, 39.0], [12000.0, 116.0], [12200.0, 21.0], [11800.0, 105.0], [12400.0, 14.0], [12600.0, 21.0], [13200.0, 28.0], [12800.0, 11.0], [13000.0, 36.0], [13400.0, 23.0], [13600.0, 122.0], [13800.0, 4.0], [14000.0, 8.0], [14200.0, 2.0], [14600.0, 113.0], [14400.0, 37.0], [14800.0, 70.0], [15000.0, 14.0], [15200.0, 31.0], [15600.0, 30.0], [15800.0, 69.0], [15400.0, 28.0], [16000.0, 25.0], [16200.0, 40.0], [16800.0, 150.0], [16400.0, 96.0], [17200.0, 65.0], [18000.0, 53.0], [18400.0, 16.0], [17600.0, 26.0], [19200.0, 17.0], [18800.0, 82.0], [20000.0, 20.0], [19600.0, 4.0], [20400.0, 23.0], [21200.0, 31.0], [20800.0, 18.0], [22000.0, 53.0], [21600.0, 19.0], [22400.0, 5.0], [23200.0, 28.0], [22800.0, 4.0], [24400.0, 73.0], [24000.0, 30.0], [23600.0, 14.0], [25200.0, 18.0], [24800.0, 61.0], [26000.0, 26.0], [26400.0, 6.0], [25600.0, 7.0], [26800.0, 72.0], [27200.0, 1.0], [27600.0, 1.0], [28400.0, 2.0], [28000.0, 7.0], [28800.0, 9.0], [29600.0, 3.0], [29200.0, 3.0], [30400.0, 18.0], [30000.0, 2.0], [30800.0, 7.0], [31600.0, 1.0], [32000.0, 2.0], [32400.0, 6.0], [33600.0, 7.0], [32800.0, 11.0], [131900.0, 9.0], [36800.0, 1.0], [35200.0, 1.0], [36000.0, 4.0], [38400.0, 2.0], [37600.0, 3.0], [40800.0, 12.0], [40000.0, 5.0], [39200.0, 2.0], [41600.0, 1.0], [44800.0, 11.0], [44000.0, 2.0], [43200.0, 5.0], [46400.0, 3.0], [48800.0, 6.0], [48000.0, 2.0], [52800.0, 2.0], [55200.0, 8.0], [56800.0, 7.0], [56000.0, 1.0], [60000.0, 12.0], [63200.0, 21.0], [64000.0, 58.0], [64800.0, 16.0], [67200.0, 6.0], [68800.0, 5.0], [72000.0, 2.0], [83200.0, 1.0], [92800.0, 2.0], [91200.0, 2.0], [96000.0, 5.0], [94400.0, 1.0], [104000.0, 1.0], [113600.0, 1.0], [121600.0, 1.0], [67100.0, 1.0], [68700.0, 2.0], [71900.0, 4.0], [70300.0, 1.0], [76700.0, 4.0], [78300.0, 1.0], [83100.0, 1.0], [87900.0, 1.0], [95900.0, 8.0], [97500.0, 1.0], [99100.0, 1.0], [105500.0, 28.0], [129500.0, 7.0], [34700.0, 7.0], [33900.0, 4.0], [133900.0, 1.0], [36300.0, 4.0], [35500.0, 11.0], [38700.0, 7.0], [37900.0, 4.0], [39500.0, 7.0], [40300.0, 2.0], [41900.0, 2.0], [41100.0, 3.0], [44300.0, 1.0], [45900.0, 2.0], [45100.0, 2.0], [53100.0, 2.0], [51500.0, 3.0], [53900.0, 4.0], [54700.0, 2.0], [57900.0, 6.0], [58700.0, 2.0], [62700.0, 3.0], [61900.0, 2.0], [63500.0, 3.0], [65100.0, 11.0], [64300.0, 12.0], [66200.0, 4.0], [67800.0, 4.0], [72600.0, 3.0], [71000.0, 2.0], [74200.0, 2.0], [79000.0, 1.0], [80600.0, 1.0], [82200.0, 1.0], [83800.0, 1.0], [87000.0, 3.0], [91800.0, 2.0], [90200.0, 2.0], [95000.0, 1.0], [112600.0, 1.0], [66900.0, 3.0], [68500.0, 1.0], [73300.0, 7.0], [70100.0, 1.0], [76500.0, 2.0], [74900.0, 3.0], [81300.0, 1.0], [79700.0, 3.0], [89300.0, 1.0], [86100.0, 2.0], [94100.0, 1.0], [98900.0, 5.0], [116500.0, 1.0], [127700.0, 43.0], [16500.0, 113.0], [17300.0, 29.0], [16900.0, 168.0], [18100.0, 13.0], [17700.0, 42.0], [19300.0, 25.0], [18900.0, 112.0], [18500.0, 93.0], [20100.0, 5.0], [19700.0, 9.0], [20900.0, 52.0], [21300.0, 81.0], [20500.0, 46.0], [21700.0, 42.0], [22100.0, 6.0], [22900.0, 14.0], [23300.0, 154.0], [24500.0, 29.0], [23700.0, 11.0], [24100.0, 5.0], [25300.0, 39.0], [24900.0, 5.0], [26500.0, 11.0], [26100.0, 2.0], [25700.0, 42.0], [27300.0, 11.0], [28100.0, 4.0], [27700.0, 1.0], [29700.0, 3.0], [30100.0, 1.0], [30900.0, 2.0], [31300.0, 2.0], [31700.0, 1.0], [32500.0, 40.0], [32100.0, 7.0], [33000.0, 2.0], [34600.0, 3.0], [33800.0, 3.0], [36200.0, 39.0], [37800.0, 7.0], [37000.0, 7.0], [38600.0, 2.0], [39400.0, 9.0], [40200.0, 6.0], [41800.0, 3.0], [42600.0, 1.0], [41000.0, 2.0], [45000.0, 9.0], [43400.0, 4.0], [46600.0, 19.0], [45800.0, 3.0], [47400.0, 2.0], [49000.0, 3.0], [50600.0, 2.0], [49800.0, 8.0], [53800.0, 2.0], [56200.0, 2.0], [58600.0, 9.0], [57800.0, 16.0], [62600.0, 1.0], [63400.0, 30.0], [65000.0, 38.0], [64200.0, 1.0], [67600.0, 2.0], [69200.0, 1.0], [70800.0, 2.0], [74000.0, 1.0], [80400.0, 2.0], [82000.0, 4.0], [83600.0, 2.0], [90000.0, 3.0], [93200.0, 2.0], [98000.0, 4.0], [96400.0, 2.0], [101200.0, 45.0], [131300.0, 26.0], [67500.0, 21.0], [69100.0, 1.0], [65900.0, 2.0], [73900.0, 6.0], [75500.0, 2.0], [78700.0, 1.0], [81900.0, 7.0], [83500.0, 39.0], [85100.0, 2.0], [89900.0, 9.0], [93100.0, 2.0], [96300.0, 1.0], [97900.0, 2.0], [101100.0, 70.0], [113900.0, 1.0], [33300.0, 27.0], [35700.0, 13.0], [34900.0, 37.0], [36500.0, 5.0], [38900.0, 9.0], [37300.0, 1.0], [40500.0, 11.0], [39700.0, 4.0], [41300.0, 5.0], [168300.0, 5.0], [42100.0, 2.0], [44500.0, 7.0], [43700.0, 11.0], [46900.0, 4.0], [45300.0, 2.0], [48500.0, 1.0], [50900.0, 2.0], [49300.0, 2.0], [50100.0, 90.0], [51700.0, 5.0], [54100.0, 2.0], [53300.0, 2.0], [54900.0, 4.0], [55700.0, 2.0], [58900.0, 2.0], [60500.0, 2.0], [59700.0, 2.0], [62900.0, 2.0], [63700.0, 31.0], [64500.0, 2.0], [68200.0, 1.0], [73000.0, 3.0], [69800.0, 1.0], [71400.0, 1.0], [74600.0, 4.0], [79400.0, 2.0], [84200.0, 1.0], [93800.0, 2.0], [92200.0, 2.0], [97000.0, 3.0], [95400.0, 2.0], [100200.0, 27.0], [122600.0, 1.0], [127400.0, 32.0], [134000.0, 1.0], [138100.0, 1.0], [67300.0, 66.0], [68900.0, 2.0], [70500.0, 6.0], [76900.0, 7.0], [81700.0, 2.0], [80100.0, 1.0], [89700.0, 4.0], [99300.0, 2.0], [118500.0, 1.0], [129700.0, 12.0], [8500.0, 73.0], [8300.0, 5.0], [8700.0, 24.0], [9100.0, 18.0], [9300.0, 44.0], [9700.0, 21.0], [9500.0, 44.0], [10100.0, 9.0], [9900.0, 29.0], [10300.0, 22.0], [10500.0, 77.0], [10700.0, 14.0], [11100.0, 107.0], [10900.0, 4.0], [11300.0, 76.0], [11500.0, 28.0], [11700.0, 60.0], [11900.0, 59.0], [12100.0, 9.0], [12700.0, 11.0], [12500.0, 40.0], [12300.0, 5.0], [13100.0, 21.0], [13300.0, 148.0], [12900.0, 2.0], [13700.0, 31.0], [13500.0, 5.0], [14300.0, 9.0], [14100.0, 6.0], [13900.0, 12.0], [14500.0, 69.0], [14700.0, 221.0], [14900.0, 56.0], [15100.0, 85.0], [15300.0, 13.0], [15700.0, 1.0], [15500.0, 114.0], [16100.0, 24.0], [16300.0, 41.0], [15900.0, 21.0], [17000.0, 80.0], [16600.0, 97.0], [17400.0, 10.0], [18200.0, 139.0], [17800.0, 78.0], [19400.0, 9.0], [19000.0, 22.0], [18600.0, 58.0], [19800.0, 20.0], [20200.0, 5.0], [21000.0, 36.0], [21400.0, 13.0], [20600.0, 10.0], [21800.0, 47.0], [22200.0, 2.0], [23400.0, 16.0], [23000.0, 19.0], [24200.0, 14.0], [23800.0, 14.0], [25000.0, 71.0], [24600.0, 41.0], [25400.0, 6.0], [26600.0, 140.0], [26200.0, 6.0], [25800.0, 78.0], [27400.0, 2.0], [27000.0, 91.0], [28200.0, 10.0], [27800.0, 28.0], [28600.0, 16.0], [29000.0, 8.0], [30600.0, 2.0], [31000.0, 2.0], [31400.0, 6.0], [32600.0, 1.0], [34800.0, 9.0], [33200.0, 9.0], [34000.0, 3.0], [35600.0, 3.0], [36400.0, 3.0], [38800.0, 5.0], [38000.0, 1.0], [40400.0, 3.0], [39600.0, 2.0], [42000.0, 4.0], [41200.0, 1.0], [43600.0, 1.0], [45200.0, 29.0], [46000.0, 1.0], [46800.0, 4.0], [48400.0, 1.0], [47600.0, 3.0], [50800.0, 4.0], [50000.0, 1.0], [52400.0, 7.0], [54800.0, 3.0], [57200.0, 2.0], [59600.0, 2.0], [63600.0, 1.0], [64400.0, 3.0], [65200.0, 2.0], [69600.0, 1.0], [68000.0, 7.0], [76000.0, 2.0], [77600.0, 1.0], [80800.0, 2.0], [85600.0, 32.0], [84000.0, 2.0], [88800.0, 1.0], [92000.0, 4.0], [95200.0, 2.0], [100000.0, 210.0], [98400.0, 2.0], [103200.0, 1.0], [109600.0, 18.0], [117600.0, 18.0], [130400.0, 16.0], [128800.0, 27.0], [127200.0, 1.0], [66300.0, 5.0], [67900.0, 1.0], [69500.0, 1.0], [71100.0, 8.0], [77500.0, 2.0], [75900.0, 11.0], [80700.0, 8.0], [79100.0, 2.0], [85500.0, 5.0], [88700.0, 2.0], [87100.0, 1.0], [91900.0, 8.0], [96700.0, 2.0], [98300.0, 2.0], [99900.0, 2.0], [130300.0, 3.0], [128700.0, 11.0], [34300.0, 15.0], [36700.0, 3.0], [35900.0, 2.0], [39900.0, 15.0], [39100.0, 14.0], [41500.0, 1.0], [43100.0, 9.0], [44700.0, 2.0], [46300.0, 2.0], [48700.0, 2.0], [49500.0, 2.0], [51900.0, 7.0], [55100.0, 1.0], [54300.0, 6.0], [55900.0, 4.0], [56700.0, 11.0], [58300.0, 4.0], [57500.0, 2.0], [59900.0, 3.0], [60700.0, 2.0], [62300.0, 2.0], [63900.0, 27.0], [64700.0, 6.0], [67000.0, 4.0], [75000.0, 1.0], [78200.0, 1.0], [81400.0, 1.0], [83000.0, 2.0], [94200.0, 2.0], [97400.0, 1.0], [99000.0, 1.0], [111800.0, 1.0], [127800.0, 9.0], [69300.0, 1.0], [70900.0, 9.0], [75700.0, 2.0], [80500.0, 3.0], [83700.0, 1.0], [90100.0, 28.0], [86900.0, 1.0], [94900.0, 3.0], [96500.0, 1.0], [101300.0, 5.0], [130100.0, 1.0], [128500.0, 7.0], [17100.0, 30.0], [16700.0, 73.0], [17900.0, 49.0], [18300.0, 31.0], [19100.0, 5.0], [18700.0, 33.0], [19900.0, 46.0], [20300.0, 19.0], [19500.0, 93.0], [21100.0, 29.0], [20700.0, 29.0], [21500.0, 9.0], [21900.0, 218.0], [22300.0, 11.0], [23100.0, 17.0], [22700.0, 13.0], [23500.0, 10.0], [23900.0, 25.0], [24300.0, 1.0], [25100.0, 133.0], [24700.0, 8.0], [25500.0, 1.0], [25900.0, 78.0], [26300.0, 4.0], [26700.0, 59.0], [27500.0, 1.0], [27100.0, 25.0], [27900.0, 15.0], [28700.0, 8.0], [29100.0, 4.0], [29900.0, 5.0], [30300.0, 7.0], [30700.0, 27.0], [32300.0, 6.0], [32700.0, 3.0], [31900.0, 1.0], [34200.0, 15.0], [36600.0, 2.0], [35800.0, 19.0], [35000.0, 1.0], [37400.0, 2.0], [39800.0, 5.0], [39000.0, 8.0], [40600.0, 1.0], [41400.0, 2.0], [43000.0, 5.0], [42200.0, 2.0], [43800.0, 6.0], [47000.0, 7.0], [47800.0, 4.0], [51000.0, 2.0], [52600.0, 5.0], [51800.0, 2.0], [55000.0, 3.0], [55800.0, 2.0], [61400.0, 1.0], [63000.0, 1.0], [63800.0, 2.0], [64600.0, 25.0], [66800.0, 5.0], [68400.0, 1.0], [70000.0, 3.0], [71600.0, 2.0], [73200.0, 4.0], [86000.0, 2.0], [89200.0, 1.0], [90800.0, 2.0], [95600.0, 3.0], [97200.0, 2.0], [102000.0, 15.0], [111600.0, 1.0], [130800.0, 44.0], [129200.0, 22.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 193700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 256.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16693.0, "series": [{"data": [[0.0, 16693.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 841.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14718.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 256.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 73.6965517241379, "minX": 1.68302562E12, "maxY": 3000.0, "series": [{"data": [[1.68302586E12, 3000.0], [1.68302568E12, 3000.0], [1.68302574E12, 3000.0], [1.68302604E12, 73.6965517241379], [1.68302562E12, 3000.0], [1.68302592E12, 2108.938707369423], [1.68302598E12, 205.0], [1.6830258E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302604E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 25.0, "minX": 4.0, "maxY": 113671.0, "series": [{"data": [[4.0, 100110.5], [7.0, 100109.4], [8.0, 100110.0], [11.0, 100108.33333333333], [14.0, 100107.5], [15.0, 100106.0], [16.0, 100105.0], [18.0, 100105.0], [19.0, 100104.0], [22.0, 100101.0], [25.0, 100097.66666666667], [26.0, 99315.0], [27.0, 99313.0], [28.0, 98304.0], [29.0, 98303.0], [30.0, 97295.0], [31.0, 96283.0], [33.0, 95273.0], [32.0, 95276.0], [35.0, 94264.0], [34.0, 94267.0], [37.0, 93254.0], [36.0, 93256.0], [39.0, 92244.0], [38.0, 92247.0], [41.0, 91235.0], [40.0, 91237.0], [43.0, 90224.0], [42.0, 90226.0], [45.0, 87195.0], [44.0, 89218.0], [47.0, 86185.0], [46.0, 86187.0], [48.0, 85178.0], [51.0, 95122.66666666667], [55.0, 100094.0], [54.0, 100095.66666666667], [57.0, 100095.0], [61.0, 100094.0], [60.0, 100093.33333333333], [62.0, 100094.0], [66.0, 100090.0], [65.0, 100091.0], [64.0, 100091.0], [71.0, 100017.0], [70.0, 100018.0], [69.0, 100018.0], [68.0, 100087.5], [75.0, 100016.66666666667], [74.0, 100016.0], [79.0, 98991.0], [78.0, 99998.0], [77.0, 84168.0], [76.0, 100133.0], [83.0, 96058.0], [82.0, 97067.0], [81.0, 97068.0], [80.0, 98077.0], [87.0, 100097.0], [84.0, 96056.0], [90.0, 100097.0], [89.0, 100097.0], [93.0, 100097.0], [99.0, 100095.0], [98.0, 100096.0], [96.0, 100096.16666666666], [103.0, 100090.0], [102.0, 100090.5], [100.0, 100090.0], [107.0, 100088.66666666667], [104.0, 100090.0], [111.0, 100085.0], [110.0, 100085.0], [109.0, 100088.0], [115.0, 100084.0], [112.0, 100085.0], [118.0, 100083.0], [117.0, 100083.5], [123.0, 100082.0], [121.0, 100082.0], [127.0, 95051.0], [126.0, 100079.0], [124.0, 100081.0], [135.0, 100096.5], [133.0, 100097.0], [132.0, 100098.0], [130.0, 100098.0], [129.0, 100099.0], [128.0, 80128.0], [143.0, 100016.0], [141.0, 100086.0], [140.0, 100088.0], [139.0, 100095.75], [151.0, 96418.0], [150.0, 96420.0], [149.0, 97427.0], [148.0, 96076.0], [147.0, 98437.0], [146.0, 98439.0], [145.0, 79119.0], [144.0, 79120.0], [159.0, 72050.0], [158.0, 72054.0], [157.0, 73061.0], [156.0, 73062.0], [155.0, 74071.0], [154.0, 94400.0], [153.0, 95408.0], [152.0, 95411.0], [167.0, 83844.0], [166.0, 86989.0], [165.0, 87997.0], [164.0, 69023.0], [163.0, 70033.0], [162.0, 85524.0], [161.0, 80419.0], [160.0, 80421.0], [175.0, 63974.0], [174.0, 63974.0], [173.0, 64981.0], [172.0, 64984.0], [171.0, 65992.0], [170.0, 65995.0], [169.0, 67003.0], [168.0, 67004.0], [183.0, 59933.0], [182.0, 59937.0], [181.0, 60944.0], [180.0, 60945.0], [179.0, 61953.0], [178.0, 61954.0], [177.0, 62963.0], [176.0, 62966.0], [191.0, 55894.0], [190.0, 55896.0], [189.0, 56904.0], [188.0, 56906.0], [187.0, 57914.0], [186.0, 57916.0], [185.0, 58923.0], [184.0, 58926.0], [199.0, 51855.0], [198.0, 51858.0], [197.0, 52866.0], [196.0, 52867.0], [195.0, 53874.0], [194.0, 53876.0], [193.0, 54884.0], [192.0, 54886.0], [207.0, 47815.0], [206.0, 47818.0], [205.0, 48826.0], [204.0, 48827.0], [203.0, 49835.0], [202.0, 49838.0], [201.0, 50845.0], [200.0, 50850.0], [215.0, 43776.0], [214.0, 43779.0], [213.0, 44786.0], [212.0, 44788.0], [211.0, 45796.0], [210.0, 45798.0], [209.0, 46806.0], [208.0, 46808.0], [223.0, 54938.0], [222.0, 54939.0], [221.0, 55948.0], [220.0, 55950.0], [219.0, 56957.0], [218.0, 56960.0], [217.0, 57967.0], [216.0, 57969.0], [231.0, 50899.0], [230.0, 50900.0], [229.0, 51909.0], [228.0, 51910.0], [227.0, 52917.0], [226.0, 52920.0], [225.0, 53928.0], [224.0, 53930.0], [239.0, 46860.0], [238.0, 46862.0], [237.0, 47870.0], [236.0, 47871.0], [235.0, 48879.0], [234.0, 48882.0], [233.0, 49889.0], [232.0, 49890.0], [247.0, 43147.0], [246.0, 43799.0], [245.0, 43801.0], [244.0, 44811.0], [243.0, 44812.0], [242.0, 33231.0], [241.0, 45850.0], [240.0, 45852.0], [255.0, 24252.0], [254.0, 40116.0], [253.0, 40117.0], [252.0, 41126.0], [251.0, 41127.0], [250.0, 42136.0], [249.0, 42138.0], [248.0, 43146.0], [270.0, 18247.0], [271.0, 18245.0], [269.0, 18248.0], [259.0, 22233.0], [258.0, 23241.0], [257.0, 23243.0], [256.0, 24250.0], [267.0, 18249.0], [266.0, 19202.0], [265.0, 19204.0], [264.0, 20212.0], [263.0, 20214.0], [262.0, 21221.0], [261.0, 21223.0], [260.0, 22231.0], [286.0, 33372.0], [287.0, 18229.0], [285.0, 18231.0], [284.0, 18232.0], [283.0, 18234.0], [282.0, 18234.5], [280.0, 33379.0], [279.0, 18238.0], [273.0, 18243.0], [272.0, 18244.0], [275.0, 18242.0], [274.0, 18243.0], [278.0, 33382.0], [276.0, 18240.0], [302.0, 25778.5], [303.0, 18203.0], [300.0, 18210.0], [290.0, 18228.0], [289.0, 33371.0], [288.0, 33371.0], [299.0, 18211.0], [298.0, 18212.0], [297.0, 18215.0], [296.0, 18214.0], [295.0, 18218.0], [294.0, 18220.0], [293.0, 18222.0], [292.0, 18223.5], [318.0, 17719.0], [319.0, 17717.0], [317.0, 32909.0], [316.0, 32998.0], [315.0, 33239.0], [314.0, 33244.0], [313.0, 33245.0], [312.0, 33246.5], [310.0, 33317.0], [305.0, 25771.5], [307.0, 33330.0], [306.0, 18193.0], [309.0, 33322.0], [308.0, 33328.0], [334.0, 32572.0], [335.0, 32570.0], [333.0, 32573.0], [332.0, 17430.0], [331.0, 32573.0], [330.0, 32574.0], [329.0, 20620.0], [328.0, 32576.0], [327.0, 26666.5], [323.0, 17435.0], [322.0, 17436.0], [321.0, 17437.0], [320.0, 32580.0], [325.0, 32579.0], [350.0, 26581.5], [351.0, 32557.0], [348.0, 20604.0], [338.0, 17423.0], [337.0, 20746.0], [336.0, 17425.0], [347.0, 32561.0], [346.0, 32561.0], [345.0, 24990.5], [343.0, 32563.0], [342.0, 20609.0], [341.0, 32565.0], [340.0, 24994.5], [366.0, 32545.0], [367.0, 32544.0], [365.0, 32546.0], [364.0, 20594.0], [363.0, 32551.0], [362.0, 32551.0], [361.0, 17408.0], [360.0, 32552.0], [359.0, 17409.0], [353.0, 32556.0], [352.0, 32557.0], [355.0, 32554.0], [354.0, 32554.0], [358.0, 32553.0], [357.0, 32554.0], [356.0, 32554.0], [382.0, 20578.0], [383.0, 20711.0], [381.0, 20580.0], [380.0, 20581.0], [379.0, 20581.0], [378.0, 17393.0], [377.0, 17393.0], [376.0, 20583.0], [375.0, 32540.0], [369.0, 32544.0], [368.0, 20589.0], [371.0, 32542.0], [370.0, 20588.0], [374.0, 20586.0], [373.0, 17399.0], [372.0, 17399.0], [398.0, 20700.0], [399.0, 20566.0], [397.0, 18972.5], [396.0, 20801.0], [394.0, 20570.0], [393.0, 20571.0], [392.0, 19044.0], [390.0, 20706.0], [387.0, 17386.0], [386.0, 20709.0], [385.0, 20577.0], [384.0, 20577.0], [389.0, 26552.0], [414.0, 17345.0], [415.0, 20534.0], [413.0, 20535.0], [412.0, 17348.0], [411.0, 20537.0], [410.0, 17349.0], [409.0, 17350.0], [408.0, 20539.0], [407.0, 20629.0], [402.0, 20563.0], [400.0, 20564.0], [406.0, 20563.0], [405.0, 20563.0], [430.0, 20510.0], [431.0, 20509.0], [429.0, 17327.0], [428.0, 20516.0], [427.0, 20516.0], [426.0, 17330.0], [425.0, 32475.0], [424.0, 23975.166666666664], [418.0, 20526.0], [417.0, 18939.0], [445.0, 20628.0], [447.0, 20561.5], [444.0, 20629.0], [435.0, 20508.0], [434.0, 20509.0], [433.0, 20509.0], [443.0, 20498.0], [442.0, 20505.0], [441.0, 32460.0], [440.0, 20506.0], [439.0, 26485.0], [438.0, 20507.0], [436.0, 20508.0], [462.0, 20443.0], [463.0, 20430.0], [461.0, 20510.5], [451.0, 23481.75], [459.0, 20469.0], [457.0, 20470.0], [456.0, 20487.0], [455.0, 20488.0], [454.0, 20489.0], [453.0, 20556.5], [478.0, 23389.0], [479.0, 23386.0], [477.0, 23393.0], [476.0, 23393.0], [475.0, 23393.5], [473.0, 23393.0], [472.0, 14916.0], [471.0, 14918.0], [465.0, 20415.0], [464.0, 20426.0], [467.0, 17151.0], [466.0, 20414.0], [470.0, 16138.0], [469.0, 16140.0], [468.0, 17149.0], [494.0, 23367.0], [495.0, 23366.0], [493.0, 23367.0], [492.0, 23369.0], [491.0, 20515.0], [489.0, 23373.0], [488.0, 23372.0], [487.0, 23375.0], [481.0, 23384.0], [480.0, 23384.0], [483.0, 23381.0], [482.0, 23382.0], [486.0, 23377.0], [485.0, 23377.0], [484.0, 23380.0], [510.0, 15194.0], [511.0, 11880.0], [509.0, 15194.0], [508.0, 15197.0], [507.0, 15200.0], [506.0, 15205.0], [504.0, 15206.0], [503.0, 12972.0], [497.0, 23362.0], [496.0, 23364.0], [499.0, 23346.0], [498.0, 23357.0], [502.0, 12973.0], [501.0, 14190.0], [500.0, 14193.0], [540.0, 12005.0], [542.0, 12370.0], [538.0, 11268.0], [518.0, 12003.0], [516.0, 14092.0], [514.0, 14094.0], [512.0, 11878.0], [532.0, 11605.0], [530.0, 11695.0], [528.0, 13858.0], [526.0, 10718.0], [524.0, 25903.0], [522.0, 13961.0], [520.0, 14048.0], [574.0, 12281.5], [568.0, 13456.0], [566.0, 28763.0], [564.0, 11245.0], [562.0, 13458.0], [560.0, 13327.0], [558.0, 13462.0], [552.0, 13465.0], [550.0, 11255.0], [548.0, 11256.0], [546.0, 11258.0], [544.0, 28781.0], [602.0, 12277.5], [598.0, 13450.0], [596.0, 11238.0], [588.0, 13451.0], [578.0, 11241.0], [638.0, 12287.5], [632.0, 12312.0], [628.0, 11184.0], [626.0, 11186.0], [624.0, 11189.0], [622.0, 11191.0], [620.0, 12322.625], [612.0, 12028.571428571428], [610.0, 11757.5], [668.0, 11108.5], [670.0, 13416.0], [666.0, 11111.0], [664.0, 13330.0], [662.0, 13331.0], [660.0, 13332.0], [658.0, 11123.0], [656.0, 12254.0], [654.0, 13206.0], [642.0, 11925.166666666668], [640.0, 11181.0], [646.0, 13362.0], [644.0, 13363.0], [652.0, 11133.0], [650.0, 11146.0], [648.0, 11149.5], [700.0, 10784.333333333334], [696.0, 10652.0], [678.0, 11099.0], [672.0, 10280.0], [694.0, 11065.0], [692.0, 10247.0], [690.0, 13291.0], [688.0, 12518.0], [684.0, 13300.0], [682.0, 11091.0], [680.0, 11097.0], [732.0, 9428.0], [734.0, 9427.0], [730.0, 11209.0], [728.0, 11213.0], [726.0, 8406.0], [724.0, 9416.0], [720.0, 13072.0], [718.0, 11020.0], [708.0, 11053.0], [704.0, 11055.0], [714.0, 11036.0], [712.0, 11040.0], [760.0, 9409.0], [764.0, 8782.5], [766.0, 9405.0], [762.0, 11291.0], [758.0, 23357.0], [756.0, 8160.0], [750.0, 9416.0], [738.0, 11204.0], [736.0, 11206.0], [746.0, 23364.0], [744.0, 8168.0], [796.0, 23324.0], [798.0, 11156.0], [794.0, 10567.333333333334], [774.0, 11175.0], [772.0, 11177.0], [770.0, 11179.0], [768.0, 23345.0], [788.0, 8132.0], [786.0, 11166.0], [784.0, 9388.0], [782.0, 23334.0], [780.0, 23335.0], [778.0, 8139.0], [826.0, 9316.5], [824.0, 8063.0], [822.0, 9343.0], [818.0, 10261.5], [806.0, 11153.0], [802.0, 9374.0], [800.0, 11155.0], [860.0, 6242.0], [848.0, 23214.0], [862.0, 16714.5], [850.0, 9250.0], [852.0, 6896.0], [858.0, 6245.0], [856.0, 7497.0], [846.0, 9901.666666666666], [834.0, 11080.0], [832.0, 9908.0], [838.0, 11071.0], [836.0, 11080.0], [842.0, 11057.0], [840.0, 9281.0], [892.0, 7468.0], [894.0, 6214.5], [880.0, 7479.0], [882.0, 7477.0], [890.0, 6219.0], [864.0, 7494.0], [866.0, 7491.0], [868.0, 7490.0], [870.0, 7488.0], [878.0, 7481.0], [876.0, 6231.0], [874.0, 6232.0], [872.0, 7486.0], [884.0, 6223.0], [922.0, 7390.5], [926.0, 7385.0], [914.0, 6191.0], [916.0, 7421.0], [924.0, 7387.0], [920.0, 7391.0], [902.0, 6208.0], [898.0, 6210.0], [910.0, 7452.0], [908.0, 7453.0], [906.0, 7456.0], [904.0, 6204.0], [918.0, 7391.0], [956.0, 24955.0], [958.0, 5126.0], [944.0, 24437.0], [948.0, 5134.0], [954.0, 19984.0], [952.0, 5133.0], [934.0, 7370.0], [930.0, 7372.0], [928.0, 7374.0], [942.0, 6098.0], [938.0, 6102.0], [936.0, 6104.0], [988.0, 12695.5], [990.0, 5074.0], [976.0, 6359.0], [978.0, 6358.0], [986.0, 24791.0], [984.0, 5105.333333333333], [966.0, 5121.0], [964.0, 24814.0], [962.0, 5124.0], [960.0, 23465.0], [974.0, 5113.0], [972.0, 5114.0], [970.0, 5115.0], [968.0, 5117.0], [980.0, 5106.0], [1018.0, 24716.0], [1022.0, 24973.0], [1008.0, 24991.0], [1010.0, 20225.0], [1020.0, 24981.0], [1016.0, 10393.333333333334], [998.0, 19347.0], [994.0, 25023.0], [992.0, 24761.0], [1006.0, 5035.0], [1004.0, 5040.0], [1002.0, 5061.0], [1012.0, 23367.0], [1072.0, 18845.0], [1080.0, 23211.0], [1056.0, 5309.0], [1060.0, 4051.0], [1084.0, 5201.0], [1076.0, 23214.0], [1024.0, 23337.0], [1028.0, 4671.0], [1036.0, 24684.0], [1052.0, 23754.0], [1048.0, 6018.0], [1044.0, 23765.0], [1040.0, 5975.0], [1064.0, 23731.0], [1092.0, 6375.0], [1148.0, 6238.0], [1120.0, 5172.0], [1144.0, 5158.0], [1088.0, 6379.0], [1096.0, 5189.0], [1100.0, 23480.0], [1116.0, 5175.0], [1112.0, 6308.0], [1108.0, 5178.0], [1104.0, 5181.0], [1128.0, 23170.0], [1124.0, 5164.0], [1208.0, 5088.0], [1184.0, 6304.0], [1188.0, 5113.0], [1192.0, 5109.0], [1204.0, 5093.0], [1200.0, 5687.0], [1164.0, 6212.0], [1160.0, 5136.0], [1172.0, 5130.0], [1196.0, 6284.0], [1264.0, 22975.0], [1248.0, 6212.0], [1252.0, 23030.0], [1268.0, 6149.0], [1216.0, 5621.0], [1220.0, 5078.0], [1224.0, 6256.0], [1228.0, 23079.0], [1244.0, 5037.0], [1240.0, 14050.0], [1236.0, 6237.0], [1232.0, 5058.0], [1260.0, 6190.0], [1256.0, 23018.0], [1336.0, 2974.5], [1340.0, 2971.0], [1312.0, 2031.0], [1320.0, 2985.0], [1332.0, 2976.5], [1328.0, 6003.0], [1288.0, 23251.0], [1280.0, 22963.0], [1304.0, 4937.0], [1300.0, 6125.0], [1296.0, 4944.0], [1324.0, 2984.0], [1396.0, 5168.25], [1404.0, 4378.0], [1376.0, 2927.0], [1384.0, 2910.0], [1392.0, 5923.0], [1352.0, 2962.0], [1348.0, 5985.0], [1344.0, 2969.0], [1372.0, 5956.0], [1368.0, 2948.0], [1364.0, 5972.5], [1360.0, 2954.0], [1388.0, 5924.0], [1460.0, 4910.0], [1468.0, 5329.0], [1440.0, 4060.0], [1448.0, 4056.0], [1464.0, 4036.0], [1456.0, 5345.0], [1420.0, 4338.666666666667], [1416.0, 4341.0], [1412.0, 4343.0], [1408.0, 4352.0], [1436.0, 4065.0], [1432.0, 4327.0], [1428.0, 4329.0], [1424.0, 4330.0], [1452.0, 4054.0], [1524.0, 4744.0], [1532.0, 4399.0], [1504.0, 6464.0], [1508.0, 6461.0], [1512.0, 16753.0], [1528.0, 4403.0], [1520.0, 4745.0], [1480.0, 4021.0], [1476.0, 6615.0], [1472.0, 6618.0], [1500.0, 6469.0], [1496.0, 3943.0], [1492.0, 6597.0], [1488.0, 6603.0], [1516.0, 4411.0], [1588.0, 4641.0], [1596.0, 15328.0], [1568.0, 4675.0], [1572.0, 4335.0], [1576.0, 4330.0], [1592.0, 4623.0], [1584.0, 4314.0], [1548.0, 4557.5], [1544.0, 4391.0], [1540.0, 4393.0], [1536.0, 4735.0], [1564.0, 4339.0], [1556.0, 4695.0], [1552.0, 4711.0], [1580.0, 4663.0], [1612.0, 3521.0], [1660.0, 2705.0], [1632.0, 2721.0], [1648.0, 3108.5], [1608.0, 3537.0], [1604.0, 2950.0], [1628.0, 3510.0], [1624.0, 3513.0], [1620.0, 2732.0], [1616.0, 3518.0], [1644.0, 3110.5], [1716.0, 2611.0], [1696.0, 3429.0], [1700.0, 3425.0], [1720.0, 2603.0], [1712.0, 2623.0], [1672.0, 2700.0], [1664.0, 3488.0], [1692.0, 2661.0], [1684.0, 3063.0], [1680.0, 2698.5], [1708.0, 3419.0], [1788.0, 4824.0], [1768.0, 113671.0], [1772.0, 1270.0], [1764.0, 1279.0], [1784.0, 112234.0], [1780.0, 10470.0], [1776.0, 1262.5], [1740.0, 13549.0], [1736.0, 2935.5], [1732.0, 3332.0], [1728.0, 3334.0], [1756.0, 1287.0], [1752.0, 1290.0], [1748.0, 1294.0], [1744.0, 1295.0], [1840.0, 5712.75], [1852.0, 4784.0], [1848.0, 4785.333333333333], [1824.0, 4448.0], [1828.0, 6983.0], [1836.0, 4788.0], [1792.0, 4819.0], [1796.0, 4814.0], [1800.0, 4812.0], [1820.0, 4797.0], [1816.0, 4799.0], [1812.0, 5900.5], [1808.0, 4779.0], [1860.0, 4774.0], [1912.0, 4734.0], [1916.0, 6910.0], [1888.0, 6936.0], [1892.0, 6934.0], [1856.0, 4774.0], [1884.0, 4744.0], [1880.0, 6940.0], [1876.0, 4749.0], [1972.0, 5272.0], [1980.0, 5980.0], [1960.0, 4333.0], [1952.0, 4336.0], [1956.0, 7420.0], [1964.0, 5278.0], [1920.0, 4709.0], [1924.0, 4704.0], [1928.0, 6827.0], [1932.0, 4627.0], [1948.0, 4340.0], [1944.0, 4341.0], [1940.0, 9035.0], [1936.0, 6815.0], [2036.0, 4259.0], [2044.0, 5186.5], [2016.0, 6838.0], [2020.0, 4269.0], [2024.0, 5215.0], [2040.0, 6807.0], [1996.0, 5257.0], [1992.0, 5656.666666666667], [1988.0, 4312.0], [1984.0, 5858.0], [2012.0, 6854.0], [2008.0, 5241.0], [2004.0, 6319.5], [2000.0, 7391.0], [2152.0, 96.0], [2048.0, 4220.0], [2080.0, 87.0], [2288.0, 3668.0], [2240.0, 4752.0], [2248.0, 4747.0], [2264.0, 3691.0], [2272.0, 3684.0], [2200.0, 3711.0], [2192.0, 81.0], [2176.0, 83.0], [2232.0, 3639.0], [2224.0, 3674.0], [2216.0, 3693.0], [2208.0, 3702.0], [2408.0, 2700.0], [2384.0, 2632.0], [2392.0, 2737.0], [2416.0, 3505.0], [2400.0, 3502.5], [2328.0, 3310.0], [2320.0, 3351.0], [2312.0, 3357.0], [2304.0, 3318.0], [2360.0, 3313.5], [2336.0, 3344.0], [2440.0, 3364.0], [2432.0, 2212.0], [2480.0, 2825.0], [2472.0, 1642.0], [2464.0, 3326.0], [2624.0, 107.0], [2680.0, 1271.0], [2648.0, 1295.0], [2672.0, 1275.0], [2664.0, 1283.0], [2584.0, 217.0], [2616.0, 108.0], [2792.0, 2307.0], [2760.0, 2329.0], [2808.0, 2556.0], [2752.0, 2341.0], [2768.0, 2323.0], [2776.0, 2411.0], [2712.0, 3207.0], [2704.0, 1176.0], [2696.0, 1225.0], [2688.0, 1235.0], [2736.0, 2833.0], [2728.0, 2998.0], [2720.0, 3017.0], [2840.0, 1248.0], [2912.0, 96.0], [2928.0, 87.0], [2920.0, 95.0], [2832.0, 107.0], [2816.0, 2255.0], [2864.0, 1199.0], [2856.0, 1226.0], [2848.0, 1243.0], [2960.0, 109.0], [3000.0, 12668.005826755745], [2952.0, 82.0], [2976.0, 3869.0], [2169.0, 85.42857142857143], [2113.0, 78.0], [2073.0, 89.66666666666667], [2057.0, 93.33333333333333], [2049.0, 5168.0], [2297.0, 3653.0], [2289.0, 3665.0], [2241.0, 4752.0], [2249.0, 4745.0], [2257.0, 3699.0], [2265.0, 3691.0], [2281.0, 3676.5], [2273.0, 3683.0], [2177.0, 82.33333333333333], [2185.0, 82.0], [2193.0, 81.25], [2201.0, 3708.0], [2233.0, 145.0], [2225.0, 5810.0], [2217.0, 5830.0], [2209.0, 3702.0], [2401.0, 4376.0], [2409.0, 4364.0], [2369.0, 3312.5], [2385.0, 2741.0], [2393.0, 2734.0], [2305.0, 3255.0], [2313.0, 3357.0], [2321.0, 3240.0], [2329.0, 3346.0], [2345.0, 3342.0], [2337.0, 3232.0], [2449.0, 1684.0], [2529.0, 88.33333333333333], [2521.0, 90.0], [2513.0, 91.0], [2441.0, 1686.0], [2433.0, 2212.0], [2489.0, 94.0], [2473.0, 3293.0], [2465.0, 1659.0], [2633.0, 106.0], [2625.0, 107.0], [2641.0, 105.08333333333333], [2649.0, 1294.0], [2681.0, 1269.0], [2673.0, 1275.0], [2617.0, 108.0], [2601.0, 110.0], [2809.0, 2551.0], [2753.0, 2340.0], [2761.0, 2609.0], [2769.0, 2322.0], [2777.0, 2316.0], [2801.0, 2434.0], [2793.0, 2302.0], [2785.0, 2450.0], [2713.0, 3024.0], [2705.0, 1170.0], [2697.0, 1224.0], [2689.0, 1231.0], [2745.0, 2629.0], [2737.0, 2791.0], [2729.0, 2998.0], [2721.0, 3015.0], [2921.0, 94.5], [2913.0, 96.0], [2889.0, 98.0], [2905.0, 96.5], [2841.0, 1246.0], [2865.0, 1198.0], [2857.0, 1224.0], [2849.0, 1241.0], [2945.0, 82.875], [2953.0, 25.0], [2969.0, 108.0], [2985.0, 102.0], [1073.0, 3698.0], [1085.0, 14350.5], [1061.0, 18401.0], [1057.0, 19251.0], [1081.0, 23502.0], [1025.0, 4997.0], [1029.0, 4668.0], [1033.0, 16437.0], [1037.0, 24417.0], [1053.0, 19258.0], [1049.0, 4062.0], [1041.0, 4073.0], [1065.0, 23992.0], [1137.0, 23168.0], [1145.0, 6339.0], [1121.0, 6353.0], [1125.0, 5164.0], [1149.0, 5157.0], [1141.0, 5484.285714285714], [1093.0, 5192.0], [1097.0, 23196.0], [1101.0, 5181.0], [1117.0, 6254.0], [1113.0, 6358.0], [1129.0, 5164.0], [1209.0, 5087.0], [1213.0, 5675.0], [1185.0, 5115.0], [1189.0, 5112.0], [1193.0, 22850.0], [1205.0, 23097.0], [1201.0, 6276.0], [1165.0, 23429.0], [1161.0, 6216.0], [1157.0, 5728.5], [1153.0, 6337.0], [1173.0, 14132.5], [1169.0, 5523.666666666667], [1197.0, 5099.0], [1273.0, 14701.5], [1249.0, 5027.0], [1253.0, 23024.0], [1257.0, 23017.0], [1277.0, 13962.5], [1269.0, 23263.0], [1265.0, 4968.0], [1217.0, 5081.0], [1221.0, 23084.0], [1225.0, 5074.0], [1229.0, 6252.0], [1245.0, 23043.0], [1241.0, 6226.0], [1237.0, 23347.0], [1233.0, 5057.0], [1261.0, 6154.0], [1333.0, 5996.0], [1341.0, 2969.0], [1313.0, 836.0], [1317.0, 132.0], [1321.0, 2985.0], [1337.0, 2974.0], [1329.0, 2982.0], [1293.0, 11047.0], [1289.0, 23250.0], [1285.0, 14693.5], [1281.0, 2714.0], [1309.0, 5524.0], [1305.0, 4936.0], [1301.0, 6123.0], [1297.0, 6127.0], [1325.0, 2984.0], [1401.0, 5881.666666666667], [1405.0, 4364.0], [1377.0, 5946.0], [1381.0, 5944.0], [1357.0, 4468.0], [1353.0, 2961.0], [1349.0, 2964.0], [1345.0, 2967.0], [1373.0, 2933.0], [1369.0, 2947.0], [1365.0, 2949.0], [1361.0, 2953.0], [1389.0, 5923.0], [1385.0, 5929.0], [1457.0, 6637.0], [1461.0, 6634.0], [1445.0, 4055.5], [1469.0, 4031.0], [1441.0, 4060.0], [1421.0, 4336.0], [1417.0, 4340.0], [1413.0, 4342.0], [1409.0, 4349.0], [1433.0, 4067.0], [1429.0, 4329.0], [1425.0, 4330.0], [1453.0, 6640.0], [1449.0, 6643.0], [1529.0, 4403.0], [1505.0, 6462.0], [1509.0, 17366.0], [1513.0, 4750.0], [1533.0, 4399.0], [1525.0, 4742.0], [1521.0, 4409.0], [1477.0, 6614.0], [1481.0, 6609.0], [1485.0, 5312.5], [1501.0, 3879.0], [1497.0, 6529.0], [1493.0, 6597.0], [1489.0, 6603.0], [1593.0, 4618.0], [1569.0, 4673.0], [1573.0, 4670.0], [1577.0, 4328.0], [1597.0, 14275.0], [1589.0, 4640.0], [1585.0, 4312.0], [1537.0, 4397.0], [1545.0, 4559.0], [1541.0, 4730.0], [1549.0, 4726.0], [1561.0, 4513.0], [1553.0, 4709.0], [1653.0, 2715.0], [1637.0, 2718.0], [1641.0, 3503.0], [1657.0, 3499.5], [1649.0, 3501.0], [1613.0, 3521.0], [1609.0, 2751.0], [1629.0, 2724.0], [1625.0, 2728.0], [1621.0, 3515.0], [1645.0, 2717.0], [1721.0, 2603.0], [1697.0, 3427.0], [1701.0, 3421.0], [1705.0, 2633.0], [1725.0, 3337.5], [1717.0, 3393.0], [1713.0, 3400.0], [1665.0, 2702.0], [1677.0, 3485.0], [1689.0, 3185.3333333333335], [1685.0, 2667.0], [1781.0, 10468.0], [1789.0, 4822.0], [1761.0, 1283.0], [1765.0, 1279.0], [1769.0, 1275.0], [1785.0, 4827.0], [1777.0, 11265.0], [1729.0, 3333.0], [1733.0, 3330.0], [1737.0, 3328.0], [1741.0, 13546.0], [1757.0, 1287.0], [1753.0, 1289.0], [1749.0, 1292.0], [1745.0, 1295.0], [1849.0, 4442.0], [1825.0, 4448.0], [1837.0, 4445.0], [1853.0, 4783.0], [1845.0, 58146.0], [1841.0, 6982.0], [1797.0, 4813.0], [1801.0, 4809.0], [1805.0, 4799.0], [1821.0, 4794.0], [1813.0, 4803.0], [1809.0, 4804.0], [1865.0, 5870.0], [1917.0, 6911.0], [1901.0, 4739.0], [1909.0, 5103.333333333333], [1861.0, 4775.0], [1869.0, 4773.0], [1885.0, 4743.5], [1881.0, 6939.0], [1877.0, 4748.0], [1873.0, 4768.0], [1977.0, 5269.5], [1973.0, 4322.0], [1957.0, 4333.0], [1961.0, 4330.0], [1965.0, 4328.0], [1981.0, 4317.0], [1969.0, 4326.5], [1921.0, 6903.0], [1925.0, 6897.0], [1933.0, 6818.0], [1949.0, 4339.0], [1945.0, 7426.0], [1941.0, 8026.0], [1937.0, 9581.0], [2037.0, 4496.0], [2017.0, 4270.0], [2021.0, 4269.0], [2025.0, 5214.0], [2045.0, 4236.0], [1997.0, 4307.0], [1989.0, 4312.0], [1985.0, 4316.0], [2013.0, 6853.0], [2154.0, 95.0], [2114.0, 79.0], [2074.0, 90.0], [2050.0, 4217.0], [2106.0, 79.0], [2098.0, 80.33333333333333], [2130.0, 105.66666666666667], [2122.0, 77.0], [2298.0, 3646.0], [2250.0, 4745.0], [2242.0, 4751.0], [2266.0, 3691.0], [2282.0, 3786.0], [2274.0, 3682.0], [2202.0, 5845.0], [2194.0, 80.0], [2186.0, 82.0], [2234.0, 5225.0], [2226.0, 3673.0], [2218.0, 5828.0], [2210.0, 3702.0], [2378.0, 2750.0], [2418.0, 2671.0], [2386.0, 2741.0], [2394.0, 2620.0], [2322.0, 3350.0], [2314.0, 3245.0], [2306.0, 3365.0], [2362.0, 3341.0], [2450.0, 1685.0], [2514.0, 91.0], [2538.0, 87.0], [2458.0, 1666.0], [2442.0, 1686.0], [2434.0, 2209.0], [2490.0, 94.0], [2474.0, 1622.0], [2522.0, 90.0], [2674.0, 1273.0], [2626.0, 107.0], [2650.0, 1293.0], [2682.0, 1269.0], [2666.0, 1281.0], [2658.0, 1287.0], [2578.0, 164.0], [2618.0, 108.0], [2794.0, 2300.0], [2754.0, 2620.0], [2770.0, 2322.0], [2810.0, 2247.0], [2786.0, 2309.0], [2714.0, 3021.0], [2698.0, 1223.0], [2690.0, 1231.0], [2746.0, 2347.0], [2738.0, 2633.0], [2722.0, 3014.0], [2818.0, 2112.0], [2922.0, 95.0], [2906.0, 96.0], [2914.0, 96.0], [2874.0, 99.0], [2866.0, 1197.0], [2858.0, 1210.0], [2850.0, 1239.0], [2946.0, 83.0], [2954.0, 136.0], [2986.0, 1357.0], [2171.0, 85.0], [2155.0, 95.0], [2115.0, 78.0], [2075.0, 88.0], [2067.0, 92.25], [2107.0, 79.0], [2099.0, 80.0], [2123.0, 77.0], [2299.0, 3636.0], [2251.0, 4363.0], [2259.0, 3697.5], [2267.0, 3687.0], [2275.0, 3682.0], [2179.0, 83.0], [2187.0, 81.0], [2195.0, 76.0], [2203.0, 3708.0], [2235.0, 5225.0], [2227.0, 5809.0], [2211.0, 3700.0], [2419.0, 2669.0], [2379.0, 2747.0], [2371.0, 5003.0], [2387.0, 2740.0], [2395.0, 2729.0], [2411.0, 4363.0], [2403.0, 3485.5], [2307.0, 3250.0], [2315.0, 3244.0], [2323.0, 3349.0], [2363.0, 3304.0], [2451.0, 2795.0], [2459.0, 1666.0], [2539.0, 86.57142857142857], [2499.0, 92.0], [2515.0, 90.0], [2443.0, 1686.0], [2435.0, 2206.0], [2475.0, 1235.0], [2467.0, 3315.0], [2523.0, 90.0], [2675.0, 1273.0], [2627.0, 106.33333333333333], [2643.0, 1298.0], [2651.0, 1292.0], [2683.0, 1266.0], [2667.0, 1280.0], [2659.0, 1287.0], [2587.0, 2218.3333333333335], [2579.0, 163.08108108108115], [2619.0, 107.5], [2611.0, 108.66666666666667], [2795.0, 2299.0], [2755.0, 2339.0], [2763.0, 2469.0], [2771.0, 2321.0], [2779.0, 2314.5], [2811.0, 2244.0], [2699.0, 1223.0], [2691.0, 1231.0], [2747.0, 2343.0], [2739.0, 2349.0], [2723.0, 3013.0], [2915.0, 96.0], [2843.0, 1246.0], [2891.0, 96.5], [2907.0, 95.0], [2923.0, 95.0], [2819.0, 1203.0], [2875.0, 98.5], [2867.0, 1197.0], [2859.0, 1204.0], [2851.0, 1234.0], [2947.0, 83.0], [2987.0, 101.0], [2955.0, 137.0], [2963.0, 109.0], [2971.0, 107.0], [2979.0, 103.33333333333333], [539.0, 13580.0], [543.0, 13342.0], [537.0, 12373.5], [519.0, 14065.0], [517.0, 14083.0], [515.0, 26391.0], [513.0, 26402.0], [533.0, 11581.0], [531.0, 11662.0], [529.0, 11726.0], [527.0, 25850.0], [525.0, 10719.0], [523.0, 25912.0], [521.0, 14011.0], [573.0, 11242.0], [575.0, 11241.0], [571.0, 11242.5], [569.0, 12349.0], [565.0, 11243.0], [563.0, 11245.0], [561.0, 13327.0], [559.0, 11248.0], [547.0, 11257.0], [545.0, 13339.0], [551.0, 19176.0], [549.0, 11256.0], [557.0, 12291.5], [555.0, 12290.5], [553.0, 10431.0], [607.0, 11238.0], [603.0, 12344.0], [601.0, 11955.90909090909], [599.0, 12278.0], [577.0, 11241.0], [625.0, 13267.0], [637.0, 11182.0], [631.0, 11184.0], [629.0, 11184.0], [627.0, 13264.0], [623.0, 13401.0], [621.0, 13441.0], [615.0, 19156.0], [611.0, 11237.0], [669.0, 13187.0], [671.0, 11103.0], [665.0, 11119.0], [645.0, 13363.0], [643.0, 11153.0], [663.0, 11121.0], [661.0, 13198.0], [659.0, 13201.0], [657.0, 11124.0], [655.0, 13337.0], [653.0, 10310.0], [651.0, 13214.0], [701.0, 13270.0], [703.0, 10646.0], [697.0, 11064.0], [679.0, 13309.0], [677.0, 13310.5], [675.0, 12139.0], [673.0, 11102.0], [693.0, 13277.0], [691.0, 11069.0], [689.0, 11081.0], [685.0, 11089.0], [683.0, 13300.0], [681.0, 13175.0], [733.0, 23373.0], [735.0, 9425.0], [731.0, 8176.0], [729.0, 11211.0], [727.0, 8403.0], [725.0, 9413.0], [723.0, 9830.5], [721.0, 13203.0], [719.0, 10196.0], [707.0, 10780.666666666666], [711.0, 11041.5], [709.0, 11043.0], [717.0, 11035.5], [715.0, 13247.0], [713.0, 11039.0], [765.0, 8154.0], [767.0, 9401.0], [761.0, 11190.0], [743.0, 16394.0], [741.0, 10608.666666666666], [737.0, 11205.0], [759.0, 23356.0], [757.0, 19302.0], [753.0, 11193.0], [751.0, 9414.0], [749.0, 9679.5], [747.0, 9418.0], [745.0, 8167.0], [797.0, 11158.0], [799.0, 11156.0], [795.0, 23324.0], [775.0, 9394.0], [773.0, 11175.0], [771.0, 9399.0], [769.0, 11181.0], [791.0, 9559.666666666666], [787.0, 23330.0], [785.0, 9385.0], [783.0, 11168.0], [781.0, 9389.0], [779.0, 9391.0], [777.0, 16366.0], [829.0, 9315.0], [827.0, 23261.0], [823.0, 9317.0], [821.0, 23289.0], [819.0, 23315.0], [817.0, 12288.333333333332], [815.0, 14196.0], [801.0, 23320.0], [807.0, 9372.0], [805.0, 11153.0], [803.0, 9373.0], [857.0, 7811.0], [863.0, 6241.0], [851.0, 6900.0], [859.0, 7496.0], [855.0, 7498.0], [853.0, 7499.0], [847.0, 17138.0], [841.0, 9276.0], [839.0, 9288.0], [837.0, 23245.0], [835.0, 11080.0], [833.0, 9301.0], [889.0, 6846.0], [895.0, 6213.0], [881.0, 25918.0], [891.0, 6218.0], [879.0, 7481.0], [865.0, 6240.0], [867.0, 7489.0], [869.0, 7488.0], [871.0, 6234.0], [877.0, 6229.0], [873.0, 7485.0], [887.0, 7473.0], [885.0, 7474.0], [883.0, 7476.0], [925.0, 7386.0], [927.0, 7382.0], [913.0, 7451.5], [915.0, 6168.0], [917.0, 7392.0], [923.0, 6137.0], [903.0, 6206.0], [901.0, 7461.0], [899.0, 6209.0], [897.0, 7463.0], [911.0, 7452.0], [909.0, 6201.0], [907.0, 6202.0], [905.0, 7456.0], [919.0, 7391.0], [953.0, 5132.0], [959.0, 5126.0], [945.0, 6073.0], [947.0, 5721.0], [957.0, 5128.0], [935.0, 7368.0], [933.0, 6744.0], [931.0, 7371.0], [929.0, 7373.0], [943.0, 6098.0], [941.0, 6725.0], [939.0, 6099.0], [937.0, 6103.0], [951.0, 5758.0], [949.0, 7084.0], [985.0, 19953.0], [991.0, 25029.0], [977.0, 20303.0], [989.0, 25033.0], [967.0, 24809.0], [965.0, 24815.0], [963.0, 5124.0], [961.0, 5125.0], [975.0, 6362.0], [973.0, 5114.0], [971.0, 5115.0], [969.0, 5115.0], [981.0, 15577.0], [1021.0, 5017.0], [1023.0, 4999.0], [1009.0, 24723.0], [1011.0, 5027.0], [1019.0, 14870.5], [999.0, 5062.0], [997.0, 24888.0], [995.0, 5064.0], [993.0, 5067.0], [1007.0, 5033.0], [1005.0, 6291.0], [1003.0, 20238.0], [1001.0, 16016.0], [1013.0, 5026.0], [1082.0, 5202.0], [1086.0, 5200.0], [1058.0, 4053.0], [1062.0, 18904.0], [1078.0, 14075.5], [1074.0, 3697.0], [1054.0, 4060.0], [1026.0, 4996.0], [1034.0, 4922.0], [1030.0, 24883.0], [1038.0, 24417.0], [1050.0, 4063.0], [1046.0, 14675.5], [1066.0, 18888.0], [1142.0, 5160.0], [1138.0, 5161.0], [1150.0, 5156.0], [1122.0, 5172.0], [1146.0, 5157.0], [1118.0, 5173.0], [1094.0, 5191.0], [1098.0, 6371.0], [1114.0, 5176.0], [1110.0, 5769.5], [1130.0, 6343.0], [1126.0, 23170.0], [1206.0, 5091.0], [1210.0, 5086.0], [1214.0, 6264.0], [1186.0, 5115.0], [1190.0, 23118.0], [1194.0, 6185.0], [1202.0, 6175.0], [1166.0, 23430.0], [1162.0, 6316.0], [1158.0, 6218.0], [1154.0, 6219.0], [1182.0, 5488.333333333333], [1174.0, 6310.0], [1198.0, 6277.0], [1270.0, 6145.0], [1274.0, 22968.0], [1278.0, 22965.0], [1254.0, 23024.0], [1266.0, 22975.0], [1246.0, 23040.0], [1218.0, 6260.0], [1222.0, 6259.0], [1226.0, 23080.0], [1230.0, 23069.0], [1242.0, 5040.0], [1238.0, 5048.0], [1234.0, 23064.0], [1262.0, 22976.0], [1258.0, 5010.0], [1330.0, 2979.0], [1342.0, 5990.0], [1314.0, 834.0], [1318.0, 2986.0], [1338.0, 2972.0], [1294.0, 23246.0], [1290.0, 22957.0], [1286.0, 12836.5], [1282.0, 4954.0], [1310.0, 6114.0], [1306.0, 6117.0], [1302.0, 4940.0], [1326.0, 2983.0], [1398.0, 5884.5], [1394.0, 5923.0], [1406.0, 4361.0], [1378.0, 2924.0], [1382.0, 5943.0], [1402.0, 5881.0], [1358.0, 2955.0], [1354.0, 5981.0], [1350.0, 2963.0], [1346.0, 2965.0], [1374.0, 2934.0], [1366.0, 5970.0], [1362.0, 2953.0], [1386.0, 5927.0], [1466.0, 4035.5], [1470.0, 6619.0], [1442.0, 6645.0], [1446.0, 6643.0], [1462.0, 4039.0], [1422.0, 4336.0], [1414.0, 4342.0], [1410.0, 4346.0], [1438.0, 4064.5], [1434.0, 4065.0], [1430.0, 4328.0], [1426.0, 4330.0], [1454.0, 4052.0], [1530.0, 4402.0], [1534.0, 4735.0], [1510.0, 17334.0], [1514.0, 4412.0], [1526.0, 4741.0], [1486.0, 6606.0], [1482.0, 4021.0], [1478.0, 6614.0], [1474.0, 5321.0], [1502.0, 3878.0], [1498.0, 6528.0], [1494.0, 6596.0], [1490.0, 6601.0], [1518.0, 4579.0], [1594.0, 4615.0], [1598.0, 14274.0], [1570.0, 4336.0], [1574.0, 4331.0], [1590.0, 4638.0], [1550.0, 4386.0], [1546.0, 4729.0], [1542.0, 4393.0], [1538.0, 4731.0], [1566.0, 4340.0], [1558.0, 4683.0], [1554.0, 4372.0], [1582.0, 4657.5], [1654.0, 3500.0], [1634.0, 2719.0], [1662.0, 3097.0], [1658.0, 2706.0], [1614.0, 2734.0], [1610.0, 2751.0], [1606.0, 3538.0], [1630.0, 3509.0], [1622.0, 3514.0], [1618.0, 3125.0], [1646.0, 3501.0], [1638.0, 3112.0], [1718.0, 2606.0], [1722.0, 2587.0], [1726.0, 3336.0], [1702.0, 3420.0], [1714.0, 3397.0], [1678.0, 3261.2857142857147], [1674.0, 2700.5], [1694.0, 3038.0], [1686.0, 3449.0], [1706.0, 3419.0], [1790.0, 4820.0], [1778.0, 11262.0], [1770.0, 1271.0], [1774.0, 1269.0], [1762.0, 1283.0], [1766.0, 1278.0], [1782.0, 4829.0], [1742.0, 12535.0], [1738.0, 3327.0], [1734.0, 3329.0], [1758.0, 1285.0], [1754.0, 1289.0], [1750.0, 1291.0], [1850.0, 4784.0], [1826.0, 6984.0], [1838.0, 4788.0], [1854.0, 4782.0], [1794.0, 4816.0], [1806.0, 4798.0], [1818.0, 4798.0], [1814.0, 4457.0], [1918.0, 6909.0], [1890.0, 4741.5], [1894.0, 6933.0], [1902.0, 4738.0], [1914.0, 5464.0], [1910.0, 5834.5], [1862.0, 4774.5], [1866.0, 4431.0], [1870.0, 4771.0], [1882.0, 4745.0], [1878.0, 4747.0], [1874.0, 6960.5], [1970.0, 4325.0], [1982.0, 4316.0], [1958.0, 4334.0], [1962.0, 7415.0], [1966.0, 4328.0], [1922.0, 6902.0], [1926.0, 4702.0], [1930.0, 4633.5], [1934.0, 6817.0], [1950.0, 4338.0], [1942.0, 8024.0], [1938.0, 9578.0], [2038.0, 7345.0], [2026.0, 4265.0], [2046.0, 4234.0], [2042.0, 4239.0], [2034.0, 5909.5], [1994.0, 4311.0], [1986.0, 5262.0], [2014.0, 5234.0], [2010.0, 4764.5], [2006.0, 4775.5], [2002.0, 4303.5], [2076.0, 87.0], [2116.0, 78.0], [2156.0, 92.5], [2052.0, 7038.5], [2108.0, 79.0], [2124.0, 78.0], [2292.0, 3720.5], [2284.0, 3671.5], [2244.0, 4750.5], [2252.0, 4362.0], [2260.0, 3696.0], [2268.0, 3687.0], [2300.0, 3746.0], [2276.0, 3679.0], [2204.0, 3706.0], [2196.0, 5851.0], [2188.0, 81.5], [2236.0, 4755.0], [2228.0, 3650.0], [2220.0, 4500.0], [2212.0, 5835.0], [2372.0, 4417.0], [2412.0, 2675.0], [2380.0, 2745.0], [2388.0, 4406.0], [2396.0, 4394.0], [2420.0, 2270.0], [2316.0, 3355.0], [2364.0, 3340.0], [2340.0, 3305.3333333333335], [2516.0, 90.0], [2460.0, 2220.3333333333335], [2452.0, 1683.0], [2436.0, 2206.0], [2476.0, 1233.0], [2676.0, 1272.0], [2684.0, 1259.0], [2628.0, 106.0], [2652.0, 1291.0], [2668.0, 1279.0], [2660.0, 1286.0], [2588.0, 2217.0], [2580.0, 2259.0], [2612.0, 108.33333333333333], [2604.0, 109.5], [2796.0, 2297.0], [2812.0, 2261.0], [2756.0, 2338.0], [2764.0, 2328.0], [2772.0, 2320.0], [2804.0, 2293.0], [2788.0, 2448.5], [2716.0, 3020.0], [2708.0, 3229.6666666666665], [2700.0, 1222.0], [2692.0, 1230.0], [2748.0, 2343.0], [2740.0, 2348.0], [2732.0, 2996.3333333333335], [2724.0, 3008.0], [2844.0, 1245.0], [2924.0, 94.33333333333333], [2836.0, 106.45454545454545], [2820.0, 1195.0], [2868.0, 1189.0], [2860.0, 1201.0], [2852.0, 1230.0], [2988.0, 3863.0], [2980.0, 103.0], [2077.0, 88.0], [2157.0, 92.5], [2117.0, 78.4], [2085.0, 85.4], [2125.0, 76.8], [2293.0, 3664.0], [2285.0, 3671.0], [2245.0, 4749.0], [2261.0, 3693.0], [2269.0, 3686.0], [2301.0, 3605.0], [2237.0, 4754.0], [2189.0, 81.33333333333334], [2197.0, 2764.0], [2205.0, 2756.0], [2229.0, 3645.0], [2221.0, 3686.0], [2213.0, 3698.0], [2421.0, 2268.0], [2429.0, 103.0], [2381.0, 2635.0], [2397.0, 4393.0], [2413.0, 2674.0], [2405.0, 2652.0], [2365.0, 3318.0], [2309.0, 3360.0], [2317.0, 3355.0], [2325.0, 3347.0], [2333.0, 3344.0], [2509.0, 91.0], [2517.0, 90.0], [2461.0, 1664.0], [2453.0, 3348.0], [2437.0, 3366.0], [2477.0, 2826.0], [2469.0, 2482.0], [2669.0, 1278.0], [2685.0, 1256.0], [2637.0, 106.0], [2653.0, 1289.0], [2661.0, 1285.0], [2581.0, 2258.0], [2621.0, 108.0], [2605.0, 109.0], [2805.0, 2291.0], [2757.0, 2336.0], [2773.0, 2318.0], [2813.0, 1978.0], [2797.0, 2297.0], [2789.0, 2308.0], [2717.0, 3018.0], [2709.0, 3227.0], [2701.0, 1218.0], [2693.0, 1229.0], [2749.0, 2342.0], [2741.0, 2349.0], [2845.0, 1243.0], [2885.0, 98.0], [2901.0, 96.0], [2917.0, 95.0], [2821.0, 1196.0], [2877.0, 99.0], [2869.0, 105.0], [2861.0, 1200.0], [2949.0, 82.71428571428571], [2957.0, 134.0], [2965.0, 1990.5], [2973.0, 644.2857142857143], [2989.0, 98.0], [1035.0, 24879.0], [1087.0, 5198.0], [1079.0, 5205.0], [1075.0, 5206.0], [1055.0, 4058.0], [1027.0, 4995.0], [1031.0, 24616.0], [1039.0, 24417.0], [1051.0, 23755.0], [1047.0, 23762.0], [1043.0, 4698.5], [1071.0, 19381.0], [1067.0, 23722.0], [1063.0, 18331.0], [1147.0, 6338.0], [1151.0, 6337.0], [1123.0, 5167.0], [1127.0, 5163.0], [1143.0, 5159.0], [1139.0, 5161.0], [1119.0, 6355.0], [1091.0, 5735.0], [1095.0, 6372.0], [1099.0, 23195.0], [1103.0, 5771.5], [1115.0, 5175.0], [1107.0, 11181.333333333332], [1131.0, 5161.0], [1203.0, 23102.0], [1211.0, 5083.0], [1187.0, 23413.0], [1191.0, 23410.0], [1207.0, 6270.0], [1163.0, 5134.0], [1159.0, 5137.0], [1155.0, 5138.0], [1183.0, 6309.0], [1179.0, 12567.2], [1171.0, 5129.0], [1195.0, 23111.0], [1275.0, 22967.0], [1279.0, 22964.0], [1251.0, 14029.5], [1255.0, 6195.0], [1259.0, 5007.0], [1271.0, 6146.0], [1267.0, 23266.0], [1247.0, 23039.0], [1219.0, 6260.0], [1223.0, 5076.0], [1227.0, 23079.0], [1231.0, 23068.0], [1243.0, 5036.0], [1235.0, 23063.0], [1263.0, 23268.0], [1339.0, 5992.0], [1343.0, 5989.0], [1319.0, 6007.0], [1323.0, 2985.5], [1335.0, 2974.0], [1295.0, 23245.0], [1287.0, 6135.0], [1311.0, 2034.0], [1307.0, 4932.0], [1303.0, 6122.0], [1299.0, 14094.0], [1327.0, 2982.0], [1403.0, 4379.0], [1383.0, 2921.0], [1407.0, 4362.0], [1379.0, 5944.0], [1395.0, 5923.0], [1359.0, 2955.0], [1355.0, 5980.0], [1351.0, 2963.0], [1347.0, 2965.0], [1375.0, 2930.0], [1371.0, 5961.0], [1367.0, 5969.0], [1387.0, 5927.0], [1423.0, 4335.0], [1471.0, 4032.0], [1443.0, 4056.0], [1463.0, 4038.0], [1415.0, 4341.0], [1411.0, 4345.0], [1439.0, 4063.0], [1435.0, 4066.0], [1431.0, 4327.0], [1427.0, 4331.0], [1451.0, 5349.0], [1531.0, 4737.0], [1535.0, 4735.0], [1507.0, 3873.5], [1511.0, 16754.0], [1527.0, 4742.0], [1523.0, 4408.5], [1503.0, 6466.0], [1475.0, 6615.0], [1479.0, 6612.0], [1483.0, 6607.0], [1487.0, 6604.0], [1499.0, 3880.0], [1495.0, 4008.0], [1491.0, 4011.0], [1519.0, 4408.0], [1515.0, 4411.0], [1595.0, 15328.0], [1599.0, 2754.0], [1571.0, 4672.0], [1575.0, 4665.0], [1591.0, 4633.0], [1587.0, 4308.5], [1567.0, 4338.0], [1539.0, 4730.0], [1551.0, 4715.0], [1563.0, 4679.5], [1559.0, 4346.0], [1555.0, 4707.0], [1583.0, 4322.0], [1579.0, 4328.5], [1651.0, 3107.5], [1659.0, 2705.0], [1663.0, 2704.0], [1635.0, 3505.0], [1639.0, 2719.5], [1655.0, 3107.5], [1615.0, 2733.0], [1611.0, 3536.0], [1607.0, 3538.0], [1603.0, 2755.0], [1631.0, 2723.0], [1627.0, 3116.5], [1623.0, 3512.0], [1619.0, 2732.0], [1643.0, 2718.0], [1723.0, 2583.0], [1727.0, 3334.0], [1699.0, 3032.0], [1703.0, 3419.0], [1719.0, 3391.0], [1715.0, 3397.0], [1695.0, 2645.0], [1675.0, 3093.0], [1683.0, 3062.0], [1711.0, 3221.25], [1707.0, 2633.0], [1787.0, 4826.5], [1791.0, 4818.0], [1763.0, 1280.0], [1767.0, 1278.0], [1771.0, 1271.0], [1783.0, 4829.0], [1779.0, 112652.0], [1759.0, 1284.0], [1731.0, 3332.0], [1739.0, 3318.0], [1743.0, 12532.0], [1751.0, 1290.0], [1747.0, 1294.0], [1851.0, 4784.0], [1827.0, 6983.0], [1855.0, 4781.0], [1835.0, 4788.0], [1831.0, 4788.0], [1839.0, 4787.0], [1843.0, 5883.0], [1823.0, 4792.0], [1799.0, 4813.333333333333], [1803.0, 4809.0], [1807.0, 4798.0], [1819.0, 4626.5], [1815.0, 4799.0], [1811.0, 4804.0], [1915.0, 6912.0], [1919.0, 6905.0], [1891.0, 4740.0], [1899.0, 6933.0], [1903.0, 6933.0], [1907.0, 6054.4], [1887.0, 5840.0], [1863.0, 4431.0], [1867.0, 6967.0], [1871.0, 4768.0], [1879.0, 6940.0], [1971.0, 4324.0], [1955.0, 5363.666666666667], [1959.0, 4332.0], [1963.0, 7415.0], [1967.0, 5276.0], [1975.0, 4795.5], [1951.0, 4336.0], [1923.0, 6901.0], [1927.0, 6833.0], [1931.0, 111694.0], [1935.0, 6817.0], [1947.0, 4340.0], [1943.0, 4342.0], [1939.0, 9036.0], [2039.0, 4242.0], [2047.0, 5174.0], [2019.0, 4270.5], [2023.0, 5810.0], [2027.0, 5212.0], [1999.0, 4306.0], [1995.0, 4310.0], [1987.0, 4313.0], [2015.0, 6838.0], [2011.0, 5238.0], [2007.0, 4292.0], [2078.0, 86.0], [2166.0, 88.33333333333333], [2174.0, 84.0], [2070.0, 90.66666666666667], [2110.0, 79.0], [2286.0, 3669.0], [2294.0, 3661.0], [2302.0, 3716.0], [2246.0, 4748.0], [2254.0, 3700.0], [2262.0, 3692.0], [2278.0, 3678.0], [2206.0, 5842.0], [2198.0, 3713.0], [2190.0, 81.5], [2182.0, 82.0], [2238.0, 4753.0], [2230.0, 3645.0], [2222.0, 5815.0], [2214.0, 5834.0], [2422.0, 104.0], [2382.0, 2743.0], [2398.0, 2725.0], [2430.0, 2214.0], [2414.0, 2673.0], [2406.0, 2705.0], [2334.0, 3288.5], [2318.0, 3244.0], [2310.0, 3358.0], [2366.0, 3340.0], [2358.0, 3341.0], [2454.0, 3347.0], [2438.0, 1700.0], [2478.0, 2826.0], [2470.0, 3311.0], [2526.0, 89.5], [2518.0, 90.0], [2678.0, 1272.0], [2686.0, 1249.0], [2638.0, 106.0], [2646.0, 1296.0], [2654.0, 1289.0], [2670.0, 1276.0], [2590.0, 112.0], [2582.0, 219.0], [2614.0, 108.0], [2606.0, 109.0], [2806.0, 2282.0], [2790.0, 2308.0], [2758.0, 2333.0], [2766.0, 2466.0], [2782.0, 2408.0], [2814.0, 1978.0], [2710.0, 3226.0], [2702.0, 1183.0], [2694.0, 1228.0], [2734.0, 2993.0], [2726.0, 3004.0], [2918.0, 95.0], [2910.0, 95.5], [2838.0, 1253.5], [2822.0, 1191.0], [2878.0, 98.0], [2862.0, 1200.0], [2854.0, 1227.5], [2958.0, 134.0], [2974.0, 105.0], [2167.0, 87.0], [2063.0, 92.625], [2103.0, 79.3], [2127.0, 106.0], [2279.0, 3678.0], [2303.0, 3320.0], [2247.0, 4748.0], [2255.0, 3699.0], [2295.0, 3659.0], [2183.0, 82.0], [2191.0, 81.33333333333333], [2199.0, 3712.0], [2207.0, 3704.0], [2231.0, 5778.0], [2223.0, 3676.0], [2215.0, 3694.0], [2407.0, 4367.0], [2431.0, 3879.0], [2375.0, 3861.6666666666665], [2383.0, 2742.0], [2391.0, 2738.3333333333335], [2335.0, 3344.0], [2311.0, 3358.0], [2319.0, 3242.0], [2343.0, 3342.0], [2463.0, 2496.0], [2511.0, 90.8], [2455.0, 1679.0], [2447.0, 2517.0], [2439.0, 1699.0], [2487.0, 94.0], [2471.0, 3309.0], [2519.0, 90.0], [2679.0, 1271.0], [2687.0, 1242.0], [2631.0, 106.0], [2647.0, 1296.0], [2655.0, 1288.0], [2671.0, 1276.0], [2663.0, 1283.0], [2591.0, 111.0], [2583.0, 2222.0], [2799.0, 2437.0], [2807.0, 2557.0], [2815.0, 2258.0], [2759.0, 2331.0], [2783.0, 2310.0], [2719.0, 3018.0], [2711.0, 3220.0], [2703.0, 1182.0], [2695.0, 1227.0], [2751.0, 2341.0], [2743.0, 2347.0], [2735.0, 2991.0], [2727.0, 3002.0], [2847.0, 1242.5], [2895.0, 96.0], [2911.0, 95.75], [2919.0, 95.0], [2839.0, 1249.0], [2823.0, 114.0], [2871.0, 100.0], [2863.0, 1199.0], [2855.0, 1227.0], [2959.0, 119.0], [2983.0, 1984.5], [2975.0, 105.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2861.7834379229726, 12765.25821336288]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1001.5833333333334, "minX": 1.68302562E12, "maxY": 89130.58333333333, "series": [{"data": [[1.68302586E12, 79406.81666666667], [1.68302568E12, 81645.4], [1.68302574E12, 81921.1], [1.68302604E12, 1749.7833333333333], [1.68302562E12, 7722.866666666667], [1.68302592E12, 46874.21666666667], [1.68302598E12, 1456.7666666666667], [1.6830258E12, 89130.58333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302586E12, 56964.0], [1.68302568E12, 56669.416666666664], [1.68302574E12, 54287.5], [1.68302604E12, 1220.4166666666667], [1.68302562E12, 5546.583333333333], [1.68302592E12, 35291.083333333336], [1.68302598E12, 1001.5833333333334], [1.6830258E12, 60473.75]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302604E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4910.709038874316, "minX": 1.68302562E12, "maxY": 98148.53793103449, "series": [{"data": [[1.68302586E12, 10533.30033978433], [1.68302568E12, 11446.268634686348], [1.68302574E12, 21050.00060725667], [1.68302604E12, 98148.53793103449], [1.68302562E12, 8917.550834597876], [1.68302592E12, 4910.709038874316], [1.68302598E12, 55892.39495798319], [1.6830258E12, 11034.055639719003]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302604E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4910.69902217982, "minX": 1.68302562E12, "maxY": 98148.51034482758, "series": [{"data": [[1.68302586E12, 10520.175949180108], [1.68302568E12, 11274.079261992638], [1.68302574E12, 19712.817215727995], [1.68302604E12, 98148.51034482758], [1.68302562E12, 8917.496206373295], [1.68302592E12, 4910.69902217982], [1.68302598E12, 55892.369747899174], [1.6830258E12, 10785.136482578211]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302604E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.2827586206896553, "minX": 1.68302562E12, "maxY": 8294.350778129725, "series": [{"data": [[1.68302586E12, 2025.7984931304513], [1.68302568E12, 1272.5966051660523], [1.68302574E12, 3987.868073478044], [1.68302604E12, 0.2827586206896553], [1.68302562E12, 151.51593323216989], [1.68302592E12, 9.412592415931305], [1.68302598E12, 0.3445378151260504], [1.6830258E12, 8294.350778129725]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302604E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.68302562E12, "maxY": 193700.0, "series": [{"data": [[1.68302586E12, 193700.0], [1.68302568E12, 68364.0], [1.68302574E12, 121600.0], [1.68302604E12, 100133.0], [1.68302562E12, 18136.0], [1.68302592E12, 113671.0], [1.68302598E12, 98439.0], [1.6830258E12, 169421.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302586E12, 30749.0], [1.68302568E12, 26811.0], [1.68302574E12, 80886.0], [1.68302604E12, 100106.4], [1.68302562E12, 15545.0], [1.68302592E12, 14058.199999999999], [1.68302598E12, 85524.0], [1.6830258E12, 23644.800000000305]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302586E12, 100317.0], [1.68302568E12, 67291.0], [1.68302574E12, 101267.0], [1.68302604E12, 100122.88], [1.68302562E12, 16583.0], [1.68302592E12, 32557.120000000003], [1.68302598E12, 98438.6], [1.6830258E12, 130855.14]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302586E12, 68716.29999999999], [1.68302568E12, 44963.19999999994], [1.68302574E12, 100120.0], [1.68302604E12, 100109.0], [1.68302562E12, 15624.0], [1.68302592E12, 23056.699999999997], [1.68302598E12, 96076.0], [1.6830258E12, 127502.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302586E12, 21.0], [1.68302568E12, 10.0], [1.68302574E12, 9.0], [1.68302604E12, 79119.0], [1.68302562E12, 18.0], [1.68302592E12, 23.0], [1.68302598E12, 20212.0], [1.6830258E12, 11.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302586E12, 116.0], [1.68302568E12, 147.0], [1.68302574E12, 11882.0], [1.68302604E12, 100090.0], [1.68302562E12, 9472.0], [1.68302592E12, 2341.0], [1.68302598E12, 53874.0], [1.6830258E12, 111.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302604E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 22.0, "minX": 1.0, "maxY": 117608.0, "series": [{"data": [[2.0, 54797.5], [3.0, 27641.5], [4.0, 37747.0], [5.0, 17763.5], [6.0, 11356.5], [7.0, 12282.0], [8.0, 32875.0], [9.0, 2758.0], [10.0, 9551.5], [11.0, 36999.0], [12.0, 60013.0], [13.0, 22.0], [14.0, 4759.5], [15.0, 49320.0], [17.0, 4751.0], [18.0, 8415.0], [19.0, 49.0], [20.0, 3615.5], [21.0, 5385.5], [22.0, 15684.0], [25.0, 100107.0], [28.0, 51656.5], [29.0, 17736.5], [30.0, 4816.0], [31.0, 2630.0], [32.0, 3018.0], [34.0, 16197.0], [35.0, 1289.0], [39.0, 32130.0], [40.0, 16682.0], [45.0, 84.0], [44.0, 100088.5], [46.0, 18250.0], [47.0, 1700.0], [52.0, 100379.5], [56.0, 24834.5], [58.0, 104.0], [59.0, 8761.5], [61.0, 118.0], [63.0, 15566.0], [62.0, 18881.5], [64.0, 3761.5], [73.0, 80.0], [79.0, 39567.0], [81.0, 2322.0], [85.0, 76.0], [84.0, 4628.0], [90.0, 85.0], [91.0, 1046.0], [89.0, 105.0], [88.0, 2984.5], [92.0, 4995.5], [95.0, 7385.0], [99.0, 93.0], [97.0, 102.0], [103.0, 119.0], [101.0, 2711.0], [106.0, 91.0], [107.0, 110.0], [104.0, 110.0], [108.0, 93.5], [110.0, 127.0], [111.0, 984.0], [109.0, 94.0], [112.0, 90.0], [113.0, 63793.0], [114.0, 78.0], [115.0, 87.5], [116.0, 92.0], [118.0, 118.0], [117.0, 96.0], [119.0, 3355.0], [123.0, 9474.0], [120.0, 77.0], [121.0, 92.0], [127.0, 21977.0], [125.0, 11080.0], [130.0, 88.0], [134.0, 110.0], [131.0, 96.0], [132.0, 4788.0], [143.0, 15349.0], [150.0, 12019.0], [148.0, 10025.5], [159.0, 7355.0], [154.0, 46.0], [153.0, 9903.0], [165.0, 106.0], [174.0, 21869.0], [189.0, 16925.0], [190.0, 11242.0], [197.0, 147.0], [199.0, 85.0], [206.0, 84.0], [203.0, 12281.5], [205.0, 702.0], [201.0, 94.0], [213.0, 11900.0], [210.0, 99.0], [211.0, 147.0], [212.0, 89.0], [220.0, 109.0], [221.0, 82.0], [216.0, 113.5], [218.0, 102.5], [217.0, 12015.0], [231.0, 139.0], [234.0, 99.0], [236.0, 5085.0], [238.0, 96.0], [246.0, 90.5], [244.0, 21401.0], [243.0, 149.0], [252.0, 18945.0], [253.0, 139.0], [269.0, 89.0], [273.0, 5024.0], [284.0, 18550.0], [303.0, 3855.0], [299.0, 87.0], [319.0, 100139.0], [311.0, 109.0], [326.0, 26574.0], [323.0, 152.0], [327.0, 141.0], [332.0, 13672.0], [350.0, 97.0], [348.0, 106.0], [355.0, 90.0], [364.0, 14728.5], [377.0, 340.0], [381.0, 379.0], [436.0, 16802.0], [515.0, 204.0], [527.0, 11882.0], [536.0, 104.0], [546.0, 17005.0], [646.0, 131.0], [871.0, 25169.0], [1022.0, 16565.0], [1.0, 45283.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[527.0, 109637.0], [32.0, 15296.0], [34.0, 105587.0], [35.0, 11934.0], [174.0, 20034.0], [12.0, 75996.5], [14.0, 28678.5], [246.0, 27864.5], [244.0, 15143.0], [4.0, 19841.0], [22.0, 117608.0], [377.0, 67561.0], [110.0, 9213.0], [109.0, 88733.0], [7.0, 75474.0], [118.0, 14462.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1022.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100379.5, "series": [{"data": [[2.0, 54797.5], [3.0, 27641.0], [4.0, 37747.0], [5.0, 17763.5], [6.0, 11356.5], [7.0, 12282.0], [8.0, 32875.0], [9.0, 2758.0], [10.0, 9551.5], [11.0, 36999.0], [12.0, 60013.0], [13.0, 22.0], [14.0, 4759.0], [15.0, 49320.0], [17.0, 4751.0], [18.0, 8415.0], [19.0, 49.0], [20.0, 3615.0], [21.0, 5385.5], [22.0, 15684.0], [25.0, 100107.0], [28.0, 51656.5], [29.0, 17736.5], [30.0, 4816.0], [31.0, 2630.0], [32.0, 3018.0], [34.0, 16197.0], [35.0, 1289.0], [39.0, 32130.0], [40.0, 16682.0], [45.0, 84.0], [44.0, 100088.5], [46.0, 18250.0], [47.0, 1700.0], [52.0, 100379.5], [56.0, 24834.5], [58.0, 104.0], [59.0, 8761.5], [61.0, 118.0], [63.0, 15566.0], [62.0, 18881.5], [64.0, 3761.5], [73.0, 80.0], [79.0, 39567.0], [81.0, 2322.0], [85.0, 76.0], [84.0, 4628.0], [90.0, 85.0], [91.0, 1046.0], [89.0, 105.0], [88.0, 2984.5], [92.0, 4995.5], [95.0, 7385.0], [99.0, 93.0], [97.0, 102.0], [103.0, 119.0], [101.0, 2711.0], [106.0, 91.0], [107.0, 110.0], [104.0, 110.0], [108.0, 93.5], [110.0, 127.0], [111.0, 984.0], [109.0, 94.0], [112.0, 90.0], [113.0, 63793.0], [114.0, 78.0], [115.0, 87.5], [116.0, 92.0], [118.0, 118.0], [117.0, 96.0], [119.0, 3355.0], [123.0, 9474.0], [120.0, 77.0], [121.0, 92.0], [127.0, 21977.0], [125.0, 11080.0], [130.0, 88.0], [134.0, 110.0], [131.0, 96.0], [132.0, 4788.0], [143.0, 15349.0], [150.0, 12019.0], [148.0, 10025.5], [159.0, 7355.0], [154.0, 46.0], [153.0, 9903.0], [165.0, 106.0], [174.0, 21869.0], [189.0, 16925.0], [190.0, 11242.0], [197.0, 147.0], [199.0, 85.0], [206.0, 84.0], [203.0, 12281.5], [205.0, 702.0], [201.0, 94.0], [213.0, 11900.0], [210.0, 99.0], [211.0, 147.0], [212.0, 89.0], [220.0, 109.0], [221.0, 82.0], [216.0, 113.5], [218.0, 102.5], [217.0, 12015.0], [231.0, 139.0], [234.0, 99.0], [236.0, 5085.0], [238.0, 96.0], [246.0, 90.5], [244.0, 21401.0], [243.0, 149.0], [252.0, 18945.0], [253.0, 139.0], [269.0, 89.0], [273.0, 5023.0], [284.0, 18550.0], [303.0, 3855.0], [299.0, 87.0], [319.0, 100139.0], [311.0, 109.0], [326.0, 26574.0], [323.0, 152.0], [327.0, 141.0], [332.0, 13672.0], [350.0, 97.0], [348.0, 106.0], [355.0, 90.0], [364.0, 14728.5], [377.0, 340.0], [381.0, 379.0], [436.0, 16802.0], [515.0, 204.0], [527.0, 11882.0], [536.0, 104.0], [546.0, 17005.0], [646.0, 131.0], [871.0, 25169.0], [1022.0, 16565.0], [1.0, 45283.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[527.0, 0.0], [32.0, 0.0], [34.0, 0.0], [35.0, 0.0], [174.0, 0.0], [12.0, 0.0], [14.0, 0.0], [246.0, 0.0], [244.0, 0.0], [4.0, 0.0], [22.0, 0.0], [377.0, 0.0], [110.0, 0.0], [109.0, 0.0], [7.0, 0.0], [118.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1022.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 45.0, "minX": 1.68302562E12, "maxY": 120.6, "series": [{"data": [[1.68302586E12, 100.8], [1.68302568E12, 120.6], [1.68302574E12, 82.8], [1.68302562E12, 45.0], [1.68302592E12, 73.8], [1.6830258E12, 118.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302592E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68302562E12, "maxY": 119.75, "series": [{"data": [[1.68302586E12, 112.8], [1.68302568E12, 112.21666666666667], [1.68302574E12, 107.5], [1.68302604E12, 2.4166666666666665], [1.68302562E12, 10.983333333333333], [1.68302592E12, 69.88333333333334], [1.68302598E12, 1.9833333333333334], [1.6830258E12, 119.75]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68302586E12, 0.016666666666666666], [1.68302568E12, 0.7], [1.68302574E12, 2.283333333333333], [1.6830258E12, 1.2666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302604E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68302562E12, "maxY": 119.75, "series": [{"data": [[1.68302586E12, 112.8], [1.68302568E12, 112.21666666666667], [1.68302574E12, 107.5], [1.68302604E12, 2.4166666666666665], [1.68302562E12, 10.983333333333333], [1.68302592E12, 69.88333333333334], [1.68302598E12, 1.9833333333333334], [1.6830258E12, 119.75]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68302586E12, 0.016666666666666666], [1.68302568E12, 0.7], [1.68302574E12, 2.283333333333333], [1.6830258E12, 1.2666666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302604E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68302562E12, "maxY": 119.75, "series": [{"data": [[1.68302586E12, 112.8], [1.68302568E12, 112.21666666666667], [1.68302574E12, 107.5], [1.68302604E12, 2.4166666666666665], [1.68302562E12, 10.983333333333333], [1.68302592E12, 69.88333333333334], [1.68302598E12, 1.9833333333333334], [1.6830258E12, 119.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68302586E12, 0.016666666666666666], [1.68302568E12, 0.7], [1.68302574E12, 2.283333333333333], [1.6830258E12, 1.2666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302604E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

