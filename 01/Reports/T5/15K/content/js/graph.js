/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 182922.0, "series": [{"data": [[0.0, 12.0], [0.1, 31.0], [0.2, 33.0], [0.3, 34.0], [0.4, 37.0], [0.5, 38.0], [0.6, 39.0], [0.7, 40.0], [0.8, 41.0], [0.9, 42.0], [1.0, 44.0], [1.1, 46.0], [1.2, 49.0], [1.3, 51.0], [1.4, 52.0], [1.5, 52.0], [1.6, 53.0], [1.7, 54.0], [1.8, 55.0], [1.9, 56.0], [2.0, 56.0], [2.1, 56.0], [2.2, 57.0], [2.3, 57.0], [2.4, 58.0], [2.5, 59.0], [2.6, 59.0], [2.7, 60.0], [2.8, 61.0], [2.9, 61.0], [3.0, 63.0], [3.1, 64.0], [3.2, 65.0], [3.3, 65.0], [3.4, 66.0], [3.5, 66.0], [3.6, 67.0], [3.7, 67.0], [3.8, 67.0], [3.9, 68.0], [4.0, 68.0], [4.1, 69.0], [4.2, 70.0], [4.3, 71.0], [4.4, 72.0], [4.5, 72.0], [4.6, 73.0], [4.7, 73.0], [4.8, 73.0], [4.9, 74.0], [5.0, 74.0], [5.1, 74.0], [5.2, 75.0], [5.3, 75.0], [5.4, 76.0], [5.5, 77.0], [5.6, 77.0], [5.7, 78.0], [5.8, 78.0], [5.9, 78.0], [6.0, 78.0], [6.1, 79.0], [6.2, 79.0], [6.3, 79.0], [6.4, 79.0], [6.5, 79.0], [6.6, 80.0], [6.7, 80.0], [6.8, 80.0], [6.9, 80.0], [7.0, 80.0], [7.1, 80.0], [7.2, 80.0], [7.3, 81.0], [7.4, 81.0], [7.5, 81.0], [7.6, 81.0], [7.7, 81.0], [7.8, 81.0], [7.9, 81.0], [8.0, 82.0], [8.1, 82.0], [8.2, 82.0], [8.3, 82.0], [8.4, 82.0], [8.5, 82.0], [8.6, 83.0], [8.7, 83.0], [8.8, 83.0], [8.9, 83.0], [9.0, 83.0], [9.1, 84.0], [9.2, 84.0], [9.3, 84.0], [9.4, 84.0], [9.5, 84.0], [9.6, 85.0], [9.7, 85.0], [9.8, 85.0], [9.9, 85.0], [10.0, 85.0], [10.1, 85.0], [10.2, 86.0], [10.3, 86.0], [10.4, 86.0], [10.5, 86.0], [10.6, 86.0], [10.7, 86.0], [10.8, 86.0], [10.9, 86.0], [11.0, 87.0], [11.1, 87.0], [11.2, 87.0], [11.3, 87.0], [11.4, 87.0], [11.5, 87.0], [11.6, 87.0], [11.7, 87.0], [11.8, 87.0], [11.9, 87.0], [12.0, 87.0], [12.1, 88.0], [12.2, 88.0], [12.3, 88.0], [12.4, 88.0], [12.5, 88.0], [12.6, 88.0], [12.7, 88.0], [12.8, 88.0], [12.9, 88.0], [13.0, 89.0], [13.1, 89.0], [13.2, 89.0], [13.3, 89.0], [13.4, 89.0], [13.5, 89.0], [13.6, 89.0], [13.7, 89.0], [13.8, 89.0], [13.9, 89.0], [14.0, 90.0], [14.1, 90.0], [14.2, 90.0], [14.3, 90.0], [14.4, 90.0], [14.5, 90.0], [14.6, 90.0], [14.7, 90.0], [14.8, 90.0], [14.9, 90.0], [15.0, 90.0], [15.1, 91.0], [15.2, 91.0], [15.3, 91.0], [15.4, 91.0], [15.5, 91.0], [15.6, 91.0], [15.7, 91.0], [15.8, 91.0], [15.9, 91.0], [16.0, 91.0], [16.1, 91.0], [16.2, 92.0], [16.3, 92.0], [16.4, 92.0], [16.5, 92.0], [16.6, 92.0], [16.7, 92.0], [16.8, 92.0], [16.9, 92.0], [17.0, 92.0], [17.1, 92.0], [17.2, 92.0], [17.3, 92.0], [17.4, 93.0], [17.5, 93.0], [17.6, 93.0], [17.7, 93.0], [17.8, 93.0], [17.9, 93.0], [18.0, 93.0], [18.1, 93.0], [18.2, 93.0], [18.3, 93.0], [18.4, 93.0], [18.5, 93.0], [18.6, 94.0], [18.7, 94.0], [18.8, 94.0], [18.9, 94.0], [19.0, 94.0], [19.1, 94.0], [19.2, 94.0], [19.3, 94.0], [19.4, 94.0], [19.5, 94.0], [19.6, 95.0], [19.7, 95.0], [19.8, 95.0], [19.9, 95.0], [20.0, 95.0], [20.1, 95.0], [20.2, 95.0], [20.3, 95.0], [20.4, 95.0], [20.5, 95.0], [20.6, 96.0], [20.7, 96.0], [20.8, 96.0], [20.9, 96.0], [21.0, 96.0], [21.1, 96.0], [21.2, 96.0], [21.3, 96.0], [21.4, 96.0], [21.5, 96.0], [21.6, 96.0], [21.7, 97.0], [21.8, 97.0], [21.9, 97.0], [22.0, 97.0], [22.1, 97.0], [22.2, 97.0], [22.3, 97.0], [22.4, 97.0], [22.5, 97.0], [22.6, 97.0], [22.7, 97.0], [22.8, 97.0], [22.9, 98.0], [23.0, 98.0], [23.1, 98.0], [23.2, 98.0], [23.3, 98.0], [23.4, 98.0], [23.5, 98.0], [23.6, 98.0], [23.7, 98.0], [23.8, 98.0], [23.9, 99.0], [24.0, 99.0], [24.1, 99.0], [24.2, 99.0], [24.3, 99.0], [24.4, 99.0], [24.5, 99.0], [24.6, 99.0], [24.7, 99.0], [24.8, 99.0], [24.9, 100.0], [25.0, 100.0], [25.1, 100.0], [25.2, 100.0], [25.3, 100.0], [25.4, 100.0], [25.5, 100.0], [25.6, 100.0], [25.7, 101.0], [25.8, 101.0], [25.9, 101.0], [26.0, 101.0], [26.1, 101.0], [26.2, 101.0], [26.3, 101.0], [26.4, 101.0], [26.5, 101.0], [26.6, 101.0], [26.7, 101.0], [26.8, 101.0], [26.9, 101.0], [27.0, 101.0], [27.1, 102.0], [27.2, 102.0], [27.3, 102.0], [27.4, 102.0], [27.5, 102.0], [27.6, 102.0], [27.7, 102.0], [27.8, 102.0], [27.9, 102.0], [28.0, 102.0], [28.1, 102.0], [28.2, 103.0], [28.3, 103.0], [28.4, 103.0], [28.5, 103.0], [28.6, 103.0], [28.7, 103.0], [28.8, 103.0], [28.9, 103.0], [29.0, 103.0], [29.1, 104.0], [29.2, 104.0], [29.3, 104.0], [29.4, 104.0], [29.5, 104.0], [29.6, 104.0], [29.7, 104.0], [29.8, 104.0], [29.9, 104.0], [30.0, 105.0], [30.1, 105.0], [30.2, 105.0], [30.3, 105.0], [30.4, 105.0], [30.5, 105.0], [30.6, 105.0], [30.7, 106.0], [30.8, 106.0], [30.9, 106.0], [31.0, 106.0], [31.1, 106.0], [31.2, 106.0], [31.3, 106.0], [31.4, 106.0], [31.5, 107.0], [31.6, 107.0], [31.7, 107.0], [31.8, 107.0], [31.9, 107.0], [32.0, 107.0], [32.1, 107.0], [32.2, 107.0], [32.3, 107.0], [32.4, 108.0], [32.5, 108.0], [32.6, 108.0], [32.7, 108.0], [32.8, 108.0], [32.9, 108.0], [33.0, 108.0], [33.1, 108.0], [33.2, 109.0], [33.3, 109.0], [33.4, 109.0], [33.5, 109.0], [33.6, 109.0], [33.7, 110.0], [33.8, 110.0], [33.9, 110.0], [34.0, 110.0], [34.1, 110.0], [34.2, 111.0], [34.3, 111.0], [34.4, 111.0], [34.5, 111.0], [34.6, 111.0], [34.7, 111.0], [34.8, 112.0], [34.9, 112.0], [35.0, 112.0], [35.1, 112.0], [35.2, 112.0], [35.3, 112.0], [35.4, 112.0], [35.5, 113.0], [35.6, 113.0], [35.7, 113.0], [35.8, 113.0], [35.9, 113.0], [36.0, 114.0], [36.1, 114.0], [36.2, 114.0], [36.3, 114.0], [36.4, 114.0], [36.5, 115.0], [36.6, 115.0], [36.7, 115.0], [36.8, 115.0], [36.9, 115.0], [37.0, 115.0], [37.1, 116.0], [37.2, 116.0], [37.3, 116.0], [37.4, 116.0], [37.5, 116.0], [37.6, 116.0], [37.7, 116.0], [37.8, 117.0], [37.9, 117.0], [38.0, 117.0], [38.1, 117.0], [38.2, 117.0], [38.3, 117.0], [38.4, 117.0], [38.5, 118.0], [38.6, 118.0], [38.7, 118.0], [38.8, 118.0], [38.9, 118.0], [39.0, 118.0], [39.1, 118.0], [39.2, 118.0], [39.3, 119.0], [39.4, 119.0], [39.5, 119.0], [39.6, 119.0], [39.7, 119.0], [39.8, 120.0], [39.9, 120.0], [40.0, 120.0], [40.1, 120.0], [40.2, 120.0], [40.3, 121.0], [40.4, 121.0], [40.5, 121.0], [40.6, 121.0], [40.7, 121.0], [40.8, 122.0], [40.9, 122.0], [41.0, 122.0], [41.1, 122.0], [41.2, 123.0], [41.3, 123.0], [41.4, 123.0], [41.5, 123.0], [41.6, 123.0], [41.7, 123.0], [41.8, 124.0], [41.9, 124.0], [42.0, 124.0], [42.1, 124.0], [42.2, 124.0], [42.3, 124.0], [42.4, 125.0], [42.5, 125.0], [42.6, 125.0], [42.7, 125.0], [42.8, 126.0], [42.9, 126.0], [43.0, 126.0], [43.1, 126.0], [43.2, 127.0], [43.3, 127.0], [43.4, 127.0], [43.5, 127.0], [43.6, 128.0], [43.7, 128.0], [43.8, 128.0], [43.9, 129.0], [44.0, 129.0], [44.1, 129.0], [44.2, 130.0], [44.3, 130.0], [44.4, 130.0], [44.5, 131.0], [44.6, 131.0], [44.7, 131.0], [44.8, 132.0], [44.9, 132.0], [45.0, 133.0], [45.1, 133.0], [45.2, 134.0], [45.3, 135.0], [45.4, 136.0], [45.5, 137.0], [45.6, 138.0], [45.7, 138.0], [45.8, 139.0], [45.9, 139.0], [46.0, 140.0], [46.1, 140.0], [46.2, 141.0], [46.3, 141.0], [46.4, 143.0], [46.5, 143.0], [46.6, 144.0], [46.7, 145.0], [46.8, 145.0], [46.9, 146.0], [47.0, 148.0], [47.1, 149.0], [47.2, 150.0], [47.3, 151.0], [47.4, 151.0], [47.5, 152.0], [47.6, 152.0], [47.7, 152.0], [47.8, 153.0], [47.9, 154.0], [48.0, 154.0], [48.1, 155.0], [48.2, 156.0], [48.3, 157.0], [48.4, 158.0], [48.5, 158.0], [48.6, 160.0], [48.7, 161.0], [48.8, 162.0], [48.9, 163.0], [49.0, 164.0], [49.1, 166.0], [49.2, 167.0], [49.3, 169.0], [49.4, 170.0], [49.5, 171.0], [49.6, 172.0], [49.7, 175.0], [49.8, 177.0], [49.9, 178.0], [50.0, 179.0], [50.1, 180.0], [50.2, 181.0], [50.3, 181.0], [50.4, 184.0], [50.5, 185.0], [50.6, 186.0], [50.7, 187.0], [50.8, 188.0], [50.9, 189.0], [51.0, 192.0], [51.1, 195.0], [51.2, 200.0], [51.3, 200.0], [51.4, 201.0], [51.5, 204.0], [51.6, 205.0], [51.7, 209.0], [51.8, 211.0], [51.9, 213.0], [52.0, 215.0], [52.1, 216.0], [52.2, 218.0], [52.3, 220.0], [52.4, 223.0], [52.5, 224.0], [52.6, 229.0], [52.7, 231.0], [52.8, 233.0], [52.9, 252.0], [53.0, 260.0], [53.1, 277.0], [53.2, 283.0], [53.3, 291.0], [53.4, 316.0], [53.5, 320.0], [53.6, 321.0], [53.7, 332.0], [53.8, 357.0], [53.9, 372.0], [54.0, 394.0], [54.1, 405.0], [54.2, 468.0], [54.3, 571.0], [54.4, 575.0], [54.5, 581.0], [54.6, 604.0], [54.7, 656.0], [54.8, 777.0], [54.9, 844.0], [55.0, 1020.0], [55.1, 1051.0], [55.2, 1138.0], [55.3, 1200.0], [55.4, 1254.0], [55.5, 1282.0], [55.6, 1320.0], [55.7, 1321.0], [55.8, 1343.0], [55.9, 1366.0], [56.0, 1411.0], [56.1, 1426.0], [56.2, 1502.0], [56.3, 1535.0], [56.4, 1544.0], [56.5, 1664.0], [56.6, 1805.0], [56.7, 1807.0], [56.8, 2017.0], [56.9, 2112.0], [57.0, 2253.0], [57.1, 2434.0], [57.2, 2651.0], [57.3, 2898.0], [57.4, 2994.0], [57.5, 3140.0], [57.6, 3261.0], [57.7, 3385.0], [57.8, 3548.0], [57.9, 3609.0], [58.0, 3642.0], [58.1, 3792.0], [58.2, 3973.0], [58.3, 4096.0], [58.4, 4203.0], [58.5, 4323.0], [58.6, 4415.0], [58.7, 4441.0], [58.8, 4468.0], [58.9, 4583.0], [59.0, 4675.0], [59.1, 4877.0], [59.2, 5078.0], [59.3, 5138.0], [59.4, 5214.0], [59.5, 5411.0], [59.6, 5456.0], [59.7, 5557.0], [59.8, 5594.0], [59.9, 5711.0], [60.0, 5776.0], [60.1, 6004.0], [60.2, 6028.0], [60.3, 6096.0], [60.4, 6179.0], [60.5, 6277.0], [60.6, 6307.0], [60.7, 6405.0], [60.8, 6471.0], [60.9, 6631.0], [61.0, 6770.0], [61.1, 6864.0], [61.2, 6891.0], [61.3, 6946.0], [61.4, 7009.0], [61.5, 7054.0], [61.6, 7116.0], [61.7, 7157.0], [61.8, 7184.0], [61.9, 7391.0], [62.0, 7440.0], [62.1, 7549.0], [62.2, 7779.0], [62.3, 7984.0], [62.4, 8012.0], [62.5, 8013.0], [62.6, 8059.0], [62.7, 8135.0], [62.8, 8143.0], [62.9, 8161.0], [63.0, 8216.0], [63.1, 8364.0], [63.2, 8367.0], [63.3, 8416.0], [63.4, 8467.0], [63.5, 8534.0], [63.6, 8583.0], [63.7, 8642.0], [63.8, 8678.0], [63.9, 8711.0], [64.0, 8816.0], [64.1, 8834.0], [64.2, 8891.0], [64.3, 8906.0], [64.4, 8913.0], [64.5, 8950.0], [64.6, 9007.0], [64.7, 9015.0], [64.8, 9021.0], [64.9, 9040.0], [65.0, 9099.0], [65.1, 9115.0], [65.2, 9165.0], [65.3, 9233.0], [65.4, 9254.0], [65.5, 9277.0], [65.6, 9279.0], [65.7, 9281.0], [65.8, 9287.0], [65.9, 9326.0], [66.0, 9340.0], [66.1, 9345.0], [66.2, 9346.0], [66.3, 9351.0], [66.4, 9361.0], [66.5, 9401.0], [66.6, 9459.0], [66.7, 9498.0], [66.8, 9515.0], [66.9, 9525.0], [67.0, 9636.0], [67.1, 9665.0], [67.2, 9667.0], [67.3, 9784.0], [67.4, 9882.0], [67.5, 9947.0], [67.6, 9992.0], [67.7, 10000.0], [67.8, 10015.0], [67.9, 10042.0], [68.0, 10076.0], [68.1, 10123.0], [68.2, 10187.0], [68.3, 10232.0], [68.4, 10254.0], [68.5, 10266.0], [68.6, 10268.0], [68.7, 10271.0], [68.8, 10294.0], [68.9, 10297.0], [69.0, 10298.0], [69.1, 10331.0], [69.2, 10366.0], [69.3, 10424.0], [69.4, 10469.0], [69.5, 10498.0], [69.6, 10540.0], [69.7, 10545.0], [69.8, 10552.0], [69.9, 10566.0], [70.0, 10575.0], [70.1, 10585.0], [70.2, 10587.0], [70.3, 10602.0], [70.4, 10635.0], [70.5, 10693.0], [70.6, 10789.0], [70.7, 10880.0], [70.8, 11091.0], [70.9, 11212.0], [71.0, 11273.0], [71.1, 11307.0], [71.2, 11322.0], [71.3, 11422.0], [71.4, 11491.0], [71.5, 11493.0], [71.6, 11501.0], [71.7, 11548.0], [71.8, 11613.0], [71.9, 11682.0], [72.0, 11720.0], [72.1, 11751.0], [72.2, 11766.0], [72.3, 11783.0], [72.4, 11795.0], [72.5, 11801.0], [72.6, 11815.0], [72.7, 11848.0], [72.8, 11883.0], [72.9, 11937.0], [73.0, 11980.0], [73.1, 12019.0], [73.2, 12030.0], [73.3, 12073.0], [73.4, 12074.0], [73.5, 12113.0], [73.6, 12148.0], [73.7, 12157.0], [73.8, 12169.0], [73.9, 12202.0], [74.0, 12212.0], [74.1, 12214.0], [74.2, 12235.0], [74.3, 12253.0], [74.4, 12269.0], [74.5, 12322.0], [74.6, 12342.0], [74.7, 12352.0], [74.8, 12374.0], [74.9, 12399.0], [75.0, 12447.0], [75.1, 12482.0], [75.2, 12520.0], [75.3, 12551.0], [75.4, 12616.0], [75.5, 12677.0], [75.6, 12748.0], [75.7, 12836.0], [75.8, 12888.0], [75.9, 12951.0], [76.0, 13024.0], [76.1, 13067.0], [76.2, 13069.0], [76.3, 13073.0], [76.4, 13075.0], [76.5, 13091.0], [76.6, 13095.0], [76.7, 13151.0], [76.8, 13176.0], [76.9, 13204.0], [77.0, 13238.0], [77.1, 13281.0], [77.2, 13309.0], [77.3, 13330.0], [77.4, 13354.0], [77.5, 13420.0], [77.6, 13541.0], [77.7, 13582.0], [77.8, 13731.0], [77.9, 13948.0], [78.0, 14013.0], [78.1, 14030.0], [78.2, 14037.0], [78.3, 14038.0], [78.4, 14061.0], [78.5, 14080.0], [78.6, 14092.0], [78.7, 14118.0], [78.8, 14171.0], [78.9, 14220.0], [79.0, 14249.0], [79.1, 14281.0], [79.2, 14325.0], [79.3, 14349.0], [79.4, 14369.0], [79.5, 14381.0], [79.6, 14386.0], [79.7, 14396.0], [79.8, 14427.0], [79.9, 14452.0], [80.0, 14493.0], [80.1, 14565.0], [80.2, 14592.0], [80.3, 14668.0], [80.4, 14731.0], [80.5, 14820.0], [80.6, 14905.0], [80.7, 15051.0], [80.8, 15178.0], [80.9, 15195.0], [81.0, 15286.0], [81.1, 15316.0], [81.2, 15340.0], [81.3, 15348.0], [81.4, 15408.0], [81.5, 15421.0], [81.6, 15496.0], [81.7, 15530.0], [81.8, 15536.0], [81.9, 15621.0], [82.0, 15699.0], [82.1, 15770.0], [82.2, 15785.0], [82.3, 15788.0], [82.4, 15819.0], [82.5, 15863.0], [82.6, 15895.0], [82.7, 15979.0], [82.8, 16030.0], [82.9, 16048.0], [83.0, 16064.0], [83.1, 16075.0], [83.2, 16078.0], [83.3, 16091.0], [83.4, 16119.0], [83.5, 16127.0], [83.6, 16152.0], [83.7, 16180.0], [83.8, 16191.0], [83.9, 16218.0], [84.0, 16286.0], [84.1, 16320.0], [84.2, 16413.0], [84.3, 16604.0], [84.4, 16668.0], [84.5, 16758.0], [84.6, 16824.0], [84.7, 16839.0], [84.8, 16997.0], [84.9, 17087.0], [85.0, 17272.0], [85.1, 17275.0], [85.2, 17322.0], [85.3, 17333.0], [85.4, 17349.0], [85.5, 17363.0], [85.6, 17414.0], [85.7, 17464.0], [85.8, 17491.0], [85.9, 17534.0], [86.0, 17557.0], [86.1, 17585.0], [86.2, 17624.0], [86.3, 17639.0], [86.4, 17667.0], [86.5, 17699.0], [86.6, 17738.0], [86.7, 17813.0], [86.8, 17846.0], [86.9, 17979.0], [87.0, 18097.0], [87.1, 18151.0], [87.2, 18168.0], [87.3, 18252.0], [87.4, 18289.0], [87.5, 18378.0], [87.6, 18405.0], [87.7, 18444.0], [87.8, 18500.0], [87.9, 18581.0], [88.0, 18647.0], [88.1, 18652.0], [88.2, 18696.0], [88.3, 18738.0], [88.4, 18771.0], [88.5, 18812.0], [88.6, 18832.0], [88.7, 18840.0], [88.8, 18907.0], [88.9, 18933.0], [89.0, 18960.0], [89.1, 19032.0], [89.2, 19139.0], [89.3, 19231.0], [89.4, 19349.0], [89.5, 19380.0], [89.6, 19399.0], [89.7, 19465.0], [89.8, 19496.0], [89.9, 19549.0], [90.0, 19588.0], [90.1, 19600.0], [90.2, 19637.0], [90.3, 19689.0], [90.4, 19840.0], [90.5, 19953.0], [90.6, 20119.0], [90.7, 20200.0], [90.8, 20330.0], [90.9, 20373.0], [91.0, 20461.0], [91.1, 20987.0], [91.2, 21110.0], [91.3, 21350.0], [91.4, 21514.0], [91.5, 21638.0], [91.6, 21714.0], [91.7, 21821.0], [91.8, 21990.0], [91.9, 22048.0], [92.0, 22130.0], [92.1, 22293.0], [92.2, 22441.0], [92.3, 22890.0], [92.4, 23433.0], [92.5, 24039.0], [92.6, 24752.0], [92.7, 25016.0], [92.8, 25545.0], [92.9, 25748.0], [93.0, 25913.0], [93.1, 26563.0], [93.2, 26977.0], [93.3, 27004.0], [93.4, 27028.0], [93.5, 27520.0], [93.6, 27791.0], [93.7, 28867.0], [93.8, 29326.0], [93.9, 30544.0], [94.0, 30677.0], [94.1, 30821.0], [94.2, 31017.0], [94.3, 32273.0], [94.4, 33957.0], [94.5, 36256.0], [94.6, 37657.0], [94.7, 39722.0], [94.8, 43259.0], [94.9, 43741.0], [95.0, 45766.0], [95.1, 48672.0], [95.2, 49353.0], [95.3, 49425.0], [95.4, 49674.0], [95.5, 50684.0], [95.6, 54106.0], [95.7, 55262.0], [95.8, 56602.0], [95.9, 57352.0], [96.0, 58151.0], [96.1, 59301.0], [96.2, 59310.0], [96.3, 60762.0], [96.4, 62598.0], [96.5, 65636.0], [96.6, 69030.0], [96.7, 74929.0], [96.8, 76183.0], [96.9, 78088.0], [97.0, 78093.0], [97.1, 78265.0], [97.2, 79711.0], [97.3, 80041.0], [97.4, 81332.0], [97.5, 86401.0], [97.6, 87083.0], [97.7, 93660.0], [97.8, 94287.0], [97.9, 98499.0], [98.0, 100058.0], [98.1, 100096.0], [98.2, 100108.0], [98.3, 100114.0], [98.4, 100120.0], [98.5, 100124.0], [98.6, 100131.0], [98.7, 100140.0], [98.8, 100146.0], [98.9, 102178.0], [99.0, 127613.0], [99.1, 129057.0], [99.2, 131084.0], [99.3, 136118.0], [99.4, 136704.0], [99.5, 139387.0], [99.6, 142845.0], [99.7, 144023.0], [99.8, 149991.0], [99.9, 150002.0], [100.0, 182922.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9896.0, "series": [{"data": [[0.0, 9301.0], [180000.0, 2.0], [136100.0, 25.0], [139300.0, 13.0], [66700.0, 1.0], [73100.0, 3.0], [81100.0, 2.0], [87500.0, 1.0], [89100.0, 2.0], [127500.0, 3.0], [129100.0, 4.0], [100.0, 9896.0], [33700.0, 3.0], [131500.0, 6.0], [36900.0, 2.0], [39300.0, 1.0], [41700.0, 4.0], [44100.0, 2.0], [44900.0, 2.0], [43300.0, 18.0], [45700.0, 3.0], [48900.0, 2.0], [47300.0, 1.0], [49700.0, 16.0], [200.0, 795.0], [51300.0, 1.0], [52100.0, 1.0], [56900.0, 5.0], [58500.0, 3.0], [57700.0, 5.0], [59300.0, 56.0], [60900.0, 4.0], [61700.0, 1.0], [62500.0, 1.0], [64900.0, 4.0], [64100.0, 1.0], [67400.0, 2.0], [69000.0, 1.0], [300.0, 295.0], [80200.0, 3.0], [81800.0, 1.0], [85000.0, 2.0], [83400.0, 2.0], [96200.0, 1.0], [400.0, 55.0], [500.0, 126.0], [600.0, 67.0], [700.0, 33.0], [800.0, 33.0], [900.0, 3.0], [1000.0, 71.0], [1100.0, 59.0], [1200.0, 92.0], [1300.0, 165.0], [1400.0, 83.0], [1500.0, 96.0], [1600.0, 27.0], [1700.0, 22.0], [1800.0, 76.0], [1900.0, 3.0], [2000.0, 32.0], [2100.0, 34.0], [2300.0, 11.0], [2200.0, 14.0], [2400.0, 26.0], [2500.0, 23.0], [2600.0, 19.0], [2700.0, 16.0], [2800.0, 15.0], [2900.0, 37.0], [3000.0, 9.0], [3100.0, 58.0], [3300.0, 29.0], [3200.0, 22.0], [3400.0, 27.0], [3500.0, 34.0], [3600.0, 58.0], [3700.0, 35.0], [3800.0, 13.0], [3900.0, 33.0], [4000.0, 25.0], [4300.0, 31.0], [4100.0, 26.0], [66500.0, 1.0], [4200.0, 26.0], [4400.0, 113.0], [71300.0, 2.0], [4600.0, 29.0], [4500.0, 32.0], [69700.0, 2.0], [4700.0, 33.0], [4800.0, 7.0], [76100.0, 5.0], [5000.0, 29.0], [4900.0, 14.0], [79300.0, 4.0], [5100.0, 63.0], [5300.0, 11.0], [5200.0, 24.0], [5400.0, 57.0], [5600.0, 30.0], [5500.0, 64.0], [5700.0, 45.0], [5800.0, 10.0], [93700.0, 6.0], [5900.0, 21.0], [6000.0, 82.0], [6100.0, 42.0], [6300.0, 44.0], [6200.0, 61.0], [100100.0, 285.0], [6500.0, 17.0], [6400.0, 57.0], [6600.0, 31.0], [6800.0, 83.0], [6900.0, 64.0], [6700.0, 9.0], [7000.0, 64.0], [7100.0, 90.0], [7400.0, 42.0], [7200.0, 19.0], [7300.0, 25.0], [7500.0, 30.0], [7600.0, 1.0], [7700.0, 41.0], [7800.0, 12.0], [7900.0, 45.0], [128900.0, 1.0], [8000.0, 104.0], [8100.0, 128.0], [8400.0, 73.0], [8600.0, 102.0], [137400.0, 2.0], [8200.0, 13.0], [8800.0, 103.0], [9000.0, 164.0], [9200.0, 219.0], [9400.0, 81.0], [9600.0, 97.0], [10200.0, 285.0], [10000.0, 134.0], [9800.0, 34.0], [10400.0, 87.0], [10600.0, 89.0], [10800.0, 35.0], [11200.0, 74.0], [11000.0, 36.0], [11400.0, 122.0], [11600.0, 80.0], [11800.0, 126.0], [12200.0, 215.0], [12000.0, 170.0], [12600.0, 66.0], [12400.0, 94.0], [13000.0, 267.0], [13200.0, 108.0], [12800.0, 66.0], [13400.0, 36.0], [13600.0, 33.0], [13800.0, 20.0], [14000.0, 254.0], [14200.0, 102.0], [14600.0, 62.0], [14800.0, 36.0], [14400.0, 110.0], [15000.0, 13.0], [15200.0, 36.0], [15800.0, 90.0], [15400.0, 99.0], [15600.0, 42.0], [16000.0, 227.0], [16200.0, 56.0], [16800.0, 68.0], [17200.0, 65.0], [16400.0, 32.0], [17600.0, 137.0], [18400.0, 72.0], [18000.0, 33.0], [18800.0, 112.0], [19200.0, 30.0], [20400.0, 37.0], [19600.0, 81.0], [21200.0, 14.0], [20800.0, 1.0], [22000.0, 55.0], [22400.0, 15.0], [21600.0, 48.0], [22800.0, 16.0], [23200.0, 1.0], [23600.0, 3.0], [24400.0, 3.0], [24000.0, 31.0], [24800.0, 8.0], [25200.0, 4.0], [25600.0, 14.0], [26400.0, 2.0], [27200.0, 6.0], [27600.0, 9.0], [26800.0, 1.0], [29200.0, 14.0], [29600.0, 1.0], [28800.0, 9.0], [30400.0, 3.0], [30800.0, 33.0], [31200.0, 12.0], [31600.0, 2.0], [32000.0, 1.0], [32400.0, 7.0], [135100.0, 1.0], [33600.0, 3.0], [36000.0, 2.0], [38400.0, 3.0], [37600.0, 22.0], [147900.0, 4.0], [40000.0, 1.0], [40800.0, 2.0], [43200.0, 2.0], [44000.0, 2.0], [48800.0, 2.0], [49600.0, 28.0], [51200.0, 1.0], [52800.0, 3.0], [55200.0, 21.0], [54400.0, 1.0], [56800.0, 2.0], [58400.0, 4.0], [65600.0, 2.0], [67200.0, 1.0], [72000.0, 4.0], [76800.0, 1.0], [75200.0, 1.0], [80000.0, 30.0], [81600.0, 1.0], [89600.0, 2.0], [86400.0, 7.0], [99200.0, 1.0], [129600.0, 1.0], [131200.0, 11.0], [144000.0, 18.0], [67100.0, 1.0], [73500.0, 3.0], [71900.0, 1.0], [76700.0, 1.0], [75100.0, 4.0], [78300.0, 22.0], [81500.0, 1.0], [86300.0, 19.0], [92700.0, 4.0], [91100.0, 2.0], [94300.0, 4.0], [136200.0, 12.0], [142600.0, 1.0], [33900.0, 20.0], [137100.0, 5.0], [36300.0, 2.0], [37900.0, 1.0], [38700.0, 1.0], [149900.0, 58.0], [40300.0, 2.0], [42700.0, 5.0], [43500.0, 7.0], [45100.0, 4.0], [45900.0, 1.0], [46700.0, 2.0], [53100.0, 2.0], [54700.0, 2.0], [56300.0, 3.0], [59500.0, 1.0], [61900.0, 3.0], [65100.0, 3.0], [71000.0, 1.0], [75800.0, 2.0], [79000.0, 2.0], [87000.0, 8.0], [88600.0, 2.0], [96600.0, 1.0], [98200.0, 1.0], [128600.0, 4.0], [131600.0, 3.0], [134800.0, 2.0], [66900.0, 1.0], [76500.0, 1.0], [74900.0, 17.0], [79700.0, 4.0], [81300.0, 3.0], [78100.0, 5.0], [89300.0, 1.0], [94100.0, 8.0], [97300.0, 1.0], [102100.0, 23.0], [139800.0, 7.0], [16900.0, 20.0], [17300.0, 170.0], [16500.0, 15.0], [17700.0, 68.0], [18100.0, 86.0], [19300.0, 102.0], [18900.0, 116.0], [18500.0, 50.0], [20100.0, 38.0], [19700.0, 23.0], [20900.0, 12.0], [21300.0, 12.0], [21700.0, 43.0], [22100.0, 43.0], [22500.0, 7.0], [22900.0, 10.0], [23300.0, 6.0], [24500.0, 3.0], [24100.0, 8.0], [23700.0, 1.0], [24900.0, 9.0], [26500.0, 26.0], [25700.0, 39.0], [27300.0, 4.0], [26900.0, 38.0], [28500.0, 7.0], [27700.0, 14.0], [29300.0, 15.0], [28900.0, 10.0], [30500.0, 14.0], [29700.0, 1.0], [31300.0, 6.0], [31700.0, 1.0], [30900.0, 12.0], [32500.0, 2.0], [33800.0, 8.0], [34600.0, 2.0], [35400.0, 2.0], [36200.0, 8.0], [143900.0, 3.0], [38600.0, 7.0], [43400.0, 2.0], [45000.0, 13.0], [45800.0, 1.0], [47400.0, 2.0], [50600.0, 2.0], [49800.0, 2.0], [53800.0, 6.0], [54600.0, 5.0], [56200.0, 8.0], [57000.0, 1.0], [57800.0, 13.0], [61000.0, 5.0], [61800.0, 3.0], [65000.0, 2.0], [67600.0, 2.0], [66000.0, 1.0], [72400.0, 2.0], [77200.0, 7.0], [75600.0, 1.0], [80400.0, 6.0], [86800.0, 22.0], [93200.0, 2.0], [96400.0, 6.0], [94800.0, 1.0], [140000.0, 6.0], [65900.0, 1.0], [77100.0, 5.0], [75500.0, 1.0], [73900.0, 3.0], [80300.0, 13.0], [86700.0, 2.0], [97900.0, 1.0], [94700.0, 1.0], [99500.0, 1.0], [135400.0, 1.0], [33300.0, 1.0], [145900.0, 3.0], [37300.0, 2.0], [38100.0, 4.0], [39700.0, 6.0], [42900.0, 2.0], [41300.0, 1.0], [43700.0, 3.0], [47700.0, 7.0], [48500.0, 1.0], [49300.0, 32.0], [50900.0, 2.0], [54100.0, 12.0], [57300.0, 14.0], [56500.0, 1.0], [58100.0, 9.0], [59700.0, 3.0], [61300.0, 1.0], [62900.0, 4.0], [64500.0, 2.0], [66600.0, 1.0], [76200.0, 5.0], [74600.0, 1.0], [85800.0, 1.0], [82600.0, 1.0], [90600.0, 2.0], [93800.0, 1.0], [92200.0, 2.0], [95400.0, 2.0], [100200.0, 2.0], [129000.0, 16.0], [137200.0, 3.0], [150000.0, 40.0], [138100.0, 2.0], [182900.0, 1.0], [67300.0, 2.0], [70500.0, 1.0], [72100.0, 2.0], [80100.0, 6.0], [88100.0, 2.0], [96100.0, 1.0], [128100.0, 1.0], [8500.0, 58.0], [132600.0, 2.0], [8700.0, 23.0], [8300.0, 88.0], [9100.0, 98.0], [8900.0, 131.0], [9700.0, 37.0], [9300.0, 237.0], [9500.0, 107.0], [9900.0, 97.0], [10100.0, 73.0], [10300.0, 99.0], [10700.0, 29.0], [10500.0, 297.0], [10900.0, 11.0], [11100.0, 16.0], [11300.0, 72.0], [11700.0, 201.0], [11500.0, 57.0], [12100.0, 157.0], [11900.0, 75.0], [12300.0, 163.0], [12500.0, 73.0], [12700.0, 56.0], [13300.0, 116.0], [13100.0, 74.0], [12900.0, 46.0], [13500.0, 49.0], [13700.0, 7.0], [14300.0, 225.0], [13900.0, 31.0], [14100.0, 85.0], [14700.0, 48.0], [14500.0, 68.0], [14900.0, 36.0], [15100.0, 72.0], [15300.0, 128.0], [15700.0, 137.0], [15500.0, 104.0], [16100.0, 203.0], [16300.0, 58.0], [15900.0, 43.0], [16600.0, 52.0], [17400.0, 86.0], [17000.0, 38.0], [18200.0, 69.0], [17800.0, 47.0], [19400.0, 74.0], [18600.0, 105.0], [19000.0, 23.0], [20200.0, 21.0], [19800.0, 35.0], [20600.0, 2.0], [21000.0, 11.0], [21400.0, 12.0], [22200.0, 17.0], [21800.0, 18.0], [23400.0, 3.0], [22600.0, 2.0], [23000.0, 8.0], [24200.0, 3.0], [23800.0, 8.0], [25400.0, 7.0], [25000.0, 20.0], [24600.0, 4.0], [26600.0, 5.0], [25800.0, 14.0], [26200.0, 5.0], [27400.0, 5.0], [27000.0, 65.0], [28600.0, 5.0], [27800.0, 16.0], [29400.0, 7.0], [30600.0, 33.0], [29800.0, 1.0], [31000.0, 6.0], [31400.0, 3.0], [32600.0, 2.0], [32200.0, 9.0], [33200.0, 2.0], [34000.0, 4.0], [136700.0, 13.0], [139900.0, 14.0], [36400.0, 2.0], [35600.0, 2.0], [37200.0, 10.0], [38000.0, 3.0], [39600.0, 1.0], [43600.0, 9.0], [45200.0, 8.0], [46000.0, 2.0], [47600.0, 1.0], [49200.0, 13.0], [50000.0, 1.0], [50800.0, 2.0], [51600.0, 2.0], [54800.0, 7.0], [54000.0, 2.0], [58000.0, 7.0], [58800.0, 2.0], [60400.0, 3.0], [59600.0, 5.0], [62000.0, 1.0], [62800.0, 3.0], [65200.0, 4.0], [66400.0, 3.0], [68000.0, 2.0], [76000.0, 6.0], [77600.0, 1.0], [80800.0, 1.0], [79200.0, 2.0], [93600.0, 5.0], [95200.0, 3.0], [96800.0, 1.0], [100000.0, 78.0], [98400.0, 1.0], [139200.0, 10.0], [165700.0, 1.0], [66300.0, 2.0], [67900.0, 1.0], [69500.0, 1.0], [82300.0, 3.0], [83900.0, 2.0], [87100.0, 3.0], [95100.0, 2.0], [128700.0, 14.0], [166600.0, 1.0], [34300.0, 3.0], [33500.0, 1.0], [35100.0, 1.0], [39900.0, 1.0], [39100.0, 1.0], [40700.0, 6.0], [41500.0, 7.0], [43100.0, 1.0], [44700.0, 2.0], [47100.0, 8.0], [48700.0, 5.0], [49500.0, 15.0], [52700.0, 2.0], [53500.0, 3.0], [55100.0, 6.0], [56700.0, 20.0], [58300.0, 14.0], [59900.0, 2.0], [60700.0, 7.0], [61500.0, 15.0], [63900.0, 6.0], [64700.0, 1.0], [67000.0, 6.0], [76600.0, 3.0], [75000.0, 6.0], [79800.0, 8.0], [78200.0, 14.0], [81400.0, 1.0], [91000.0, 2.0], [94200.0, 13.0], [95800.0, 2.0], [97400.0, 1.0], [99000.0, 1.0], [131000.0, 23.0], [136400.0, 1.0], [142800.0, 23.0], [67700.0, 3.0], [66100.0, 3.0], [70900.0, 1.0], [77300.0, 3.0], [74100.0, 1.0], [86900.0, 2.0], [90100.0, 2.0], [91700.0, 3.0], [96500.0, 1.0], [135000.0, 5.0], [16700.0, 52.0], [17100.0, 14.0], [18300.0, 68.0], [17500.0, 126.0], [17900.0, 38.0], [19100.0, 37.0], [18700.0, 105.0], [19500.0, 112.0], [20300.0, 79.0], [19900.0, 48.0], [20700.0, 2.0], [21500.0, 39.0], [21100.0, 40.0], [22300.0, 24.0], [21900.0, 25.0], [23100.0, 6.0], [23500.0, 3.0], [22700.0, 10.0], [24300.0, 2.0], [23900.0, 3.0], [25500.0, 7.0], [25100.0, 13.0], [24700.0, 13.0], [25900.0, 17.0], [26300.0, 1.0], [27500.0, 20.0], [27100.0, 11.0], [26700.0, 1.0], [28300.0, 1.0], [27900.0, 4.0], [29500.0, 8.0], [28700.0, 2.0], [29100.0, 2.0], [30700.0, 22.0], [31100.0, 1.0], [31500.0, 4.0], [31900.0, 1.0], [34200.0, 1.0], [33400.0, 1.0], [35000.0, 2.0], [36600.0, 2.0], [38200.0, 1.0], [41400.0, 1.0], [47000.0, 1.0], [47800.0, 1.0], [48600.0, 18.0], [49400.0, 25.0], [52600.0, 3.0], [51800.0, 2.0], [53400.0, 3.0], [55000.0, 2.0], [56600.0, 3.0], [55800.0, 7.0], [58200.0, 8.0], [59800.0, 5.0], [64600.0, 3.0], [63800.0, 2.0], [65400.0, 2.0], [68400.0, 1.0], [71600.0, 2.0], [70000.0, 2.0], [79600.0, 3.0], [78000.0, 70.0], [81200.0, 2.0], [87600.0, 3.0], [94000.0, 12.0], [127600.0, 30.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 182900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 732.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 20342.0, "series": [{"data": [[0.0, 20342.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 732.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16426.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 163.85538461538442, "minX": 1.68302676E12, "maxY": 3000.0, "series": [{"data": [[1.68302682E12, 3000.0], [1.68302712E12, 385.5083333333333], [1.68302718E12, 163.85538461538442], [1.683027E12, 3000.0], [1.68302706E12, 2560.9837985023782], [1.68302688E12, 3000.0], [1.68302694E12, 3000.0], [1.68302676E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302718E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 37.333333333333336, "minX": 1.0, "maxY": 100210.0, "series": [{"data": [[2.0, 100209.0], [7.0, 100188.0], [8.0, 100188.0], [9.0, 100187.0], [10.0, 100187.0], [12.0, 100186.0], [15.0, 100186.0], [17.0, 100182.0], [18.0, 100180.0], [19.0, 100178.0], [20.0, 100159.0], [21.0, 100143.0], [22.0, 100135.0], [23.0, 100131.0], [25.0, 100131.0], [26.0, 100129.0], [27.0, 100125.0], [28.0, 100124.0], [33.0, 100116.0], [37.0, 100115.0], [36.0, 100120.16666666666], [39.0, 100115.0], [41.0, 100114.0], [43.0, 100114.0], [42.0, 100119.0], [45.0, 100109.5], [47.0, 100108.0], [49.0, 100107.0], [48.0, 100108.0], [51.0, 100106.5], [52.0, 97305.0], [54.0, 100124.0], [59.0, 100123.0], [61.0, 100123.0], [60.0, 100123.0], [63.0, 100122.5], [62.0, 100123.0], [64.0, 100123.0], [70.0, 100120.5], [68.0, 100121.0], [75.0, 100114.0], [73.0, 100115.0], [72.0, 100116.0], [78.0, 100112.0], [77.0, 100114.0], [83.0, 100109.0], [82.0, 100111.75], [87.0, 100024.0], [85.0, 100061.0], [84.0, 100108.0], [91.0, 100143.0], [89.0, 100020.0], [88.0, 100022.0], [95.0, 100142.0], [94.0, 100142.0], [97.0, 100142.0], [102.0, 100142.0], [100.0, 100142.0], [107.0, 100141.14285714286], [111.0, 100139.0], [110.0, 100140.0], [109.0, 100141.0], [108.0, 100141.0], [115.0, 100130.0], [114.0, 100133.0], [113.0, 100134.0], [112.0, 100135.0], [117.0, 100129.0], [122.0, 100029.0], [121.0, 100128.33333333333], [120.0, 100128.0], [127.0, 100015.4], [134.0, 100122.0], [132.0, 100122.0], [129.0, 96418.0], [128.0, 96419.0], [141.0, 100121.5], [138.0, 100121.0], [137.0, 100122.0], [150.0, 100118.0], [149.0, 100118.0], [148.0, 100119.0], [147.0, 100119.0], [146.0, 100119.0], [145.0, 100120.0], [144.0, 100121.33333333333], [159.0, 100115.0], [158.0, 100115.0], [156.0, 100115.0], [155.0, 100116.0], [154.0, 100116.0], [153.0, 100117.0], [152.0, 100118.0], [167.0, 100113.0], [165.0, 100113.0], [164.0, 100114.0], [163.0, 100114.0], [162.0, 100114.0], [161.0, 100115.0], [160.0, 100115.0], [175.0, 100109.0], [174.0, 100109.0], [173.0, 100109.66666666667], [170.0, 100110.0], [169.0, 100113.0], [183.0, 100103.0], [182.0, 100103.0], [181.0, 100104.0], [180.0, 100104.0], [179.0, 100107.0], [178.0, 100108.0], [176.0, 100109.0], [191.0, 100102.0], [190.0, 100102.0], [186.0, 100102.5], [185.0, 100103.0], [199.0, 100095.0], [198.0, 100096.0], [196.0, 100096.0], [195.0, 100096.0], [194.0, 100100.0], [193.0, 100101.0], [192.0, 100101.0], [207.0, 100083.0], [206.0, 100083.0], [204.0, 100090.0], [203.0, 100090.33333333333], [200.0, 100093.0], [215.0, 100079.0], [214.0, 100082.0], [211.0, 100083.0], [209.0, 100083.0], [222.0, 100044.0], [221.0, 100045.0], [219.0, 100045.0], [218.0, 100064.0], [217.0, 100075.0], [216.0, 100079.0], [231.0, 100043.0], [229.0, 100043.5], [224.0, 100044.0], [239.0, 100018.0], [238.0, 100019.33333333333], [235.0, 100029.0], [234.0, 100030.0], [232.0, 100043.0], [247.0, 100148.0], [244.0, 100149.0], [243.0, 99506.0], [242.0, 95412.0], [241.0, 100015.0], [240.0, 100017.0], [255.0, 100145.0], [254.0, 100145.0], [253.0, 100146.0], [251.0, 100147.0], [250.0, 100148.5], [248.0, 100148.0], [271.0, 100126.0], [270.0, 100128.66666666667], [257.0, 100144.0], [256.0, 100144.0], [267.0, 100138.0], [266.0, 100140.0], [264.0, 100140.0], [263.0, 100141.0], [262.0, 100141.0], [261.0, 100142.0], [260.0, 100142.66666666667], [286.0, 93218.0], [287.0, 93216.0], [285.0, 94225.0], [284.0, 94228.0], [283.0, 95235.0], [282.0, 95239.0], [281.0, 96245.0], [280.0, 95470.0], [279.0, 96477.0], [273.0, 100108.0], [272.0, 100109.0], [275.0, 99275.0], [274.0, 98499.0], [278.0, 96479.0], [277.0, 97489.0], [276.0, 98267.0], [302.0, 80265.0], [303.0, 80264.0], [301.0, 81273.0], [300.0, 81274.0], [299.0, 87157.0], [298.0, 87159.0], [297.0, 88168.0], [296.0, 88169.0], [295.0, 89176.0], [289.0, 92206.0], [288.0, 92209.0], [291.0, 91196.0], [290.0, 91197.0], [294.0, 89179.0], [293.0, 90186.0], [292.0, 90188.0], [318.0, 72188.0], [319.0, 75128.0], [317.0, 73196.0], [316.0, 78072.0], [315.0, 79081.0], [314.0, 79082.0], [313.0, 80090.0], [312.0, 80092.0], [311.0, 81101.0], [305.0, 79253.0], [304.0, 79257.0], [307.0, 81185.0], [306.0, 78245.0], [310.0, 80325.0], [309.0, 81333.0], [308.0, 80178.0], [334.0, 64113.0], [335.0, 67053.0], [333.0, 65120.0], [332.0, 65121.0], [331.0, 66130.0], [330.0, 71006.0], [329.0, 72013.0], [328.0, 67012.0], [327.0, 68020.0], [321.0, 75274.0], [320.0, 74120.0], [323.0, 75042.0], [322.0, 73111.0], [326.0, 68022.0], [325.0, 69030.0], [324.0, 72102.0], [350.0, 60908.0], [351.0, 60906.0], [349.0, 61916.0], [348.0, 61918.0], [347.0, 62926.0], [346.0, 62927.0], [345.0, 63937.0], [344.0, 63938.0], [343.0, 64945.0], [337.0, 67198.0], [336.0, 66044.0], [339.0, 66189.0], [338.0, 66192.0], [342.0, 64947.0], [341.0, 65955.0], [340.0, 65181.0], [366.0, 52831.0], [367.0, 52829.0], [365.0, 53839.0], [364.0, 53840.0], [363.0, 54848.0], [362.0, 54851.0], [361.0, 55857.0], [360.0, 55859.0], [359.0, 56868.0], [353.0, 59896.0], [352.0, 59898.0], [355.0, 58886.0], [354.0, 58889.0], [358.0, 56869.0], [357.0, 57879.0], [356.0, 57879.0], [382.0, 44753.0], [383.0, 44751.0], [381.0, 45761.0], [380.0, 45763.0], [379.0, 46770.0], [378.0, 46772.0], [377.0, 47781.0], [376.0, 47782.0], [375.0, 48790.0], [369.0, 51823.5], [371.0, 50810.0], [370.0, 50812.0], [374.0, 48793.0], [373.0, 49800.0], [372.0, 49802.0], [398.0, 36676.0], [399.0, 36673.0], [397.0, 37682.0], [396.0, 37685.0], [395.0, 38692.0], [394.0, 38695.0], [393.0, 39703.0], [392.0, 39704.0], [391.0, 40711.0], [385.0, 43741.0], [384.0, 43743.0], [387.0, 42730.0], [386.0, 42733.0], [390.0, 40715.0], [389.0, 41721.0], [388.0, 41723.0], [414.0, 29562.0], [415.0, 29560.0], [413.0, 30570.0], [412.0, 30784.0], [411.0, 31579.0], [410.0, 31582.0], [409.0, 32589.0], [408.0, 32591.0], [407.0, 33599.0], [401.0, 35664.0], [400.0, 35665.0], [403.0, 34653.0], [402.0, 34656.0], [406.0, 33601.0], [405.0, 33644.0], [404.0, 33646.0], [430.0, 21485.0], [431.0, 21484.0], [429.0, 22492.0], [428.0, 22497.0], [427.0, 23502.0], [426.0, 23504.0], [425.0, 24512.0], [424.0, 24514.0], [423.0, 25522.0], [417.0, 28551.0], [416.0, 28554.0], [419.0, 27541.0], [418.0, 27543.0], [422.0, 25524.0], [421.0, 26531.0], [420.0, 26534.0], [446.0, 14419.0], [447.0, 14418.0], [445.0, 15427.0], [444.0, 15430.0], [443.0, 16438.0], [442.0, 16440.0], [441.0, 17447.0], [440.0, 17449.0], [439.0, 18457.0], [433.0, 20475.0], [432.0, 20475.0], [435.0, 19462.0], [434.0, 19465.0], [438.0, 18459.0], [437.0, 18453.0], [436.0, 18455.0], [462.0, 6459.0], [463.0, 6458.0], [461.0, 6466.0], [460.0, 9452.0], [458.0, 12649.0], [457.0, 6473.0], [456.0, 12441.0], [455.0, 12443.0], [449.0, 6484.0], [448.0, 6488.0], [451.0, 6483.0], [450.0, 6484.0], [454.0, 6477.0], [453.0, 6481.0], [452.0, 6481.0], [478.0, 13343.0], [479.0, 13342.0], [477.0, 12393.0], [467.0, 12416.0], [466.0, 6450.0], [465.0, 6454.0], [464.0, 6455.0], [475.0, 12398.0], [474.0, 12398.0], [473.0, 12401.0], [472.0, 12406.0], [471.0, 6440.0], [470.0, 9428.0], [468.0, 12415.0], [494.0, 12282.0], [495.0, 12175.0], [492.0, 12181.0], [483.0, 12196.0], [482.0, 12198.5], [481.0, 12199.0], [491.0, 12183.0], [490.0, 12182.0], [489.0, 12185.0], [488.0, 12190.0], [487.0, 12191.0], [486.0, 12192.0], [485.0, 12196.0], [484.0, 12196.0], [509.0, 12367.0], [511.0, 12367.0], [508.0, 12226.0], [499.0, 12169.0], [496.0, 12384.0], [505.0, 12156.0], [504.0, 12156.0], [503.0, 12158.0], [502.0, 12163.0], [501.0, 12163.0], [500.0, 12168.0], [540.0, 12254.0], [542.0, 12358.0], [530.0, 12763.0], [528.0, 12658.0], [538.0, 12362.0], [536.0, 12255.0], [516.0, 12377.5], [526.0, 12388.0], [524.0, 12258.0], [522.0, 12569.333333333334], [534.0, 12255.5], [548.0, 12116.0], [570.0, 12349.0], [562.0, 12326.0], [572.0, 12229.5], [546.0, 12329.0], [544.0, 12332.0], [558.0, 12351.0], [556.0, 12339.5], [552.0, 12352.0], [566.0, 12336.5], [600.0, 12129.0], [592.0, 12289.0], [604.0, 12257.0], [602.0, 12286.0], [582.0, 12057.0], [580.0, 12294.0], [576.0, 12323.0], [590.0, 12286.0], [586.0, 12268.0], [596.0, 12199.666666666666], [634.0, 12176.0], [636.0, 12081.0], [628.0, 12196.0], [624.0, 12175.0], [608.0, 12253.0], [610.0, 12241.0], [612.0, 12215.0], [622.0, 12208.0], [620.0, 12236.0], [616.0, 12002.0], [630.0, 12176.0], [626.0, 12173.0], [646.0, 12168.0], [666.0, 12136.0], [644.0, 12145.0], [654.0, 12165.0], [652.0, 11929.0], [650.0, 12142.0], [662.0, 12161.0], [656.0, 12163.0], [696.0, 11945.0], [692.0, 12080.0], [700.0, 12045.0], [698.0, 12070.0], [676.0, 12143.0], [674.0, 12122.0], [672.0, 12154.0], [686.0, 12094.0], [684.0, 12095.0], [682.0, 12095.0], [680.0, 12097.0], [694.0, 12076.0], [728.0, 11997.0], [732.0, 11751.0], [720.0, 11995.0], [730.0, 11752.0], [706.0, 12020.0], [716.0, 12023.0], [714.0, 12031.5], [712.0, 11948.333333333334], [724.0, 11974.0], [722.0, 12018.0], [762.0, 12702.0], [760.0, 11960.6], [742.0, 11957.0], [740.0, 11969.142857142857], [750.0, 12070.0], [744.0, 11982.0], [796.0, 11832.0], [792.0, 12640.0], [786.0, 11861.0], [784.0, 11637.0], [788.0, 12242.0], [798.0, 12630.0], [794.0, 12636.0], [768.0, 11923.0], [770.0, 11896.0], [772.0, 11876.0], [774.0, 11871.0], [782.0, 12659.0], [780.0, 12660.0], [778.0, 12668.0], [776.0, 11892.0], [790.0, 11840.0], [826.0, 11798.666666666666], [830.0, 11798.0], [816.0, 12598.0], [818.0, 11816.0], [828.0, 11800.0], [800.0, 12625.0], [802.0, 11818.0], [804.0, 12617.0], [814.0, 12213.0], [812.0, 11592.0], [810.0, 11838.0], [808.0, 12615.0], [822.0, 12588.0], [820.0, 11788.0], [856.0, 12517.0], [862.0, 12509.0], [848.0, 12544.0], [850.0, 12529.0], [858.0, 12513.0], [832.0, 11765.0], [834.0, 11788.0], [836.0, 11782.0], [838.0, 11780.0], [840.0, 11778.0], [852.0, 12525.0], [892.0, 10078.0], [888.0, 12100.0], [882.0, 12397.0], [880.0, 12464.0], [884.0, 12393.0], [894.0, 9067.0], [890.0, 11088.0], [864.0, 12504.0], [866.0, 12493.0], [870.0, 11715.0], [878.0, 12466.0], [874.0, 12474.0], [872.0, 12488.0], [886.0, 12355.5], [920.0, 14873.0], [914.0, 11558.5], [926.0, 14871.0], [912.0, 14873.0], [902.0, 14374.0], [900.0, 15538.0], [896.0, 14337.0], [906.0, 14604.5], [904.0, 14335.0], [916.0, 16200.0], [954.0, 14850.0], [958.0, 16177.0], [944.0, 16319.0], [956.0, 13960.5], [952.0, 14699.666666666666], [930.0, 14331.0], [932.0, 14537.0], [934.0, 12527.0], [938.0, 14315.0], [936.0, 14314.0], [950.0, 12521.0], [948.0, 14852.0], [946.0, 14493.333333333334], [966.0, 13416.0], [986.0, 13813.333333333334], [974.0, 13605.0], [968.0, 14849.0], [980.0, 13580.0], [978.0, 13658.5], [976.0, 14824.0], [996.0, 13576.0], [1016.0, 14225.0], [1020.0, 14378.75], [1006.0, 13544.0], [998.0, 14277.0], [1004.0, 13352.5], [1002.0, 13547.0], [1000.0, 12461.0], [1012.0, 14245.0], [1010.0, 15179.0], [1008.0, 13000.5], [1080.0, 13428.0], [1056.0, 14187.0], [1072.0, 14699.0], [1024.0, 14763.0], [1028.0, 14204.0], [1044.0, 13296.5], [1068.0, 14164.0], [1144.0, 12252.0], [1120.0, 15948.0], [1124.0, 14077.0], [1128.0, 13372.0], [1148.0, 14572.0], [1140.0, 13148.5], [1136.0, 14584.0], [1088.0, 18128.0], [1092.0, 15983.0], [1096.0, 14647.0], [1100.0, 14098.0], [1116.0, 14087.0], [1108.0, 12304.0], [1104.0, 14095.0], [1132.0, 15933.0], [1200.0, 13238.0], [1208.0, 13229.0], [1184.0, 13681.166666666666], [1188.0, 14968.0], [1204.0, 13234.0], [1156.0, 14023.0], [1160.0, 12220.0], [1176.0, 15834.0], [1172.0, 13976.0], [1168.0, 12189.0], [1196.0, 13948.0], [1192.0, 14490.0], [1220.0, 13916.0], [1276.0, 12761.0], [1252.0, 13782.0], [1256.0, 14300.0], [1260.0, 12999.0], [1216.0, 13921.0], [1244.0, 13788.0], [1240.0, 14396.0], [1236.0, 12107.0], [1284.0, 12931.0], [1292.0, 12887.0], [1300.0, 14425.8], [1280.0, 13651.0], [1460.0, 12019.538461538461], [1444.0, 14082.0], [1468.0, 14161.25], [1464.0, 12953.75], [1456.0, 12986.4], [1416.0, 7994.0], [1428.0, 12841.0], [1424.0, 12604.625], [1528.0, 182.0], [1476.0, 12914.0], [1484.0, 12707.0], [1488.0, 14076.5], [1548.0, 181.0], [1568.0, 185.5], [1572.0, 184.66666666666666], [1584.0, 184.0], [1536.0, 182.0], [1564.0, 183.57142857142858], [1560.0, 184.75], [1556.0, 185.5], [1552.0, 185.0], [1580.0, 181.5], [1576.0, 182.25], [1608.0, 107.0], [1660.0, 218.0], [1656.0, 218.0], [1600.0, 124.0], [1604.0, 126.33333333333333], [1640.0, 221.0], [1672.0, 90.0], [1716.0, 202.5], [1664.0, 92.5], [1676.0, 216.0], [1688.0, 216.0], [1684.0, 146.2857142857143], [1680.0, 155.0], [1788.0, 109.0], [1780.0, 9729.0], [1728.0, 156.0], [1852.0, 97.25], [1796.0, 107.0], [1912.0, 123.0], [1916.0, 123.5], [1888.0, 126.0], [1896.0, 125.0], [1908.0, 124.0], [1868.0, 96.46153846153847], [1864.0, 96.0], [1856.0, 97.25], [1880.0, 128.0], [1872.0, 130.0], [1952.0, 7138.0], [1980.0, 12345.0], [1964.0, 13255.0], [1976.0, 5112.0], [1972.0, 12760.0], [1968.0, 12762.0], [1924.0, 122.0], [1992.0, 12309.0], [2016.0, 11664.0], [1988.0, 12032.0], [1984.0, 11320.0], [2020.0, 12528.5], [2004.0, 11307.0], [2000.0, 11240.5], [2152.0, 11894.0], [2168.0, 10301.0], [2112.0, 12045.0], [2120.0, 11407.0], [2128.0, 11913.0], [2144.0, 11278.0], [2104.0, 12213.0], [2048.0, 11724.0], [2056.0, 11687.333333333334], [2072.0, 11613.0], [2096.0, 11461.666666666666], [2088.0, 11612.0], [2080.0, 11781.6], [2184.0, 11589.5], [2240.0, 15159.0], [2296.0, 10139.0], [2288.0, 11044.75], [2176.0, 11870.0], [2192.0, 12089.5], [2224.0, 11281.0], [2216.0, 10227.0], [2208.0, 10807.0], [2424.0, 31017.0], [2368.0, 15203.0], [2376.0, 15192.0], [2384.0, 9954.75], [2392.0, 15089.0], [2416.0, 10863.0], [2408.0, 1233.0], [2312.0, 11790.25], [2320.0, 10451.0], [2328.0, 15852.0], [2360.0, 15111.666666666666], [2352.0, 3559.0], [2344.0, 15820.0], [2336.0, 10735.0], [2504.0, 10040.0], [2512.0, 10029.0], [2496.0, 10314.0], [2456.0, 10636.0], [2448.0, 10094.0], [2488.0, 11016.75], [2624.0, 12653.400000000001], [2616.0, 10279.8], [2608.0, 10557.0], [2808.0, 12204.5], [2752.0, 10540.0], [2760.0, 9968.0], [2776.0, 10214.4], [2800.0, 10460.0], [2792.0, 10053.0], [2704.0, 13800.333333333334], [2712.0, 10546.0], [2744.0, 10086.333333333334], [2736.0, 10404.5], [2728.0, 10544.0], [2720.0, 10270.0], [2896.0, 106.0], [2904.0, 105.0], [2928.0, 84.0], [2856.0, 118.0], [2968.0, 94.0], [3000.0, 8948.005445329423], [2161.0, 11813.5], [2169.0, 10855.0], [2121.0, 12028.0], [2129.0, 11911.5], [2137.0, 11378.666666666666], [2153.0, 11271.0], [2145.0, 11277.0], [2049.0, 11925.0], [2065.0, 11613.0], [2097.0, 12217.0], [2089.0, 12188.333333333334], [2081.0, 12166.0], [2289.0, 11089.5], [2241.0, 11146.0], [2249.0, 12937.5], [2257.0, 15132.0], [2265.0, 11724.0], [2177.0, 11241.0], [2185.0, 11236.5], [2193.0, 11223.0], [2217.0, 10774.0], [2409.0, 221.0], [2377.0, 15192.0], [2393.0, 9353.0], [2417.0, 10863.0], [2401.0, 9893.5], [2313.0, 16191.0], [2361.0, 9481.0], [2353.0, 14905.0], [2345.0, 15819.0], [2337.0, 15842.0], [2513.0, 13006.0], [2449.0, 10638.0], [2441.0, 10646.0], [2433.0, 17344.666666666668], [2489.0, 10066.0], [2681.0, 10270.0], [2617.0, 10741.300000000001], [2801.0, 20435.25], [2785.0, 13743.5], [2753.0, 10540.0], [2761.0, 10236.0], [2809.0, 30801.0], [2793.0, 10465.0], [2689.0, 10547.0], [2697.0, 10477.0], [2705.0, 10067.0], [2745.0, 10230.0], [2737.0, 10179.666666666666], [2729.0, 10133.0], [2721.0, 10224.166666666668], [2881.0, 107.0], [2937.0, 78.0], [2889.0, 106.0], [2905.0, 105.0], [2929.0, 84.0], [2833.0, 103.08333333333334], [2849.0, 99.0], [1081.0, 12341.0], [1057.0, 12397.0], [1061.0, 15118.0], [1065.0, 14320.0], [1085.0, 16393.0], [1077.0, 15090.5], [1073.0, 13457.0], [1025.0, 14763.0], [1029.0, 13501.0], [1033.0, 11427.5], [1037.0, 15403.5], [1053.0, 8638.0], [1045.0, 14191.0], [1041.0, 15125.5], [1069.0, 13460.0], [1137.0, 14584.0], [1149.0, 15898.0], [1121.0, 15946.0], [1145.0, 15907.0], [1093.0, 14656.0], [1097.0, 14647.0], [1117.0, 13382.0], [1113.0, 14126.0], [1109.0, 14094.0], [1133.0, 12274.0], [1129.0, 14074.0], [1209.0, 12140.0], [1185.0, 12168.0], [1189.0, 13251.0], [1193.0, 13246.0], [1213.0, 13576.0], [1205.0, 13937.0], [1201.0, 13235.0], [1153.0, 15137.0], [1157.0, 13319.0], [1161.0, 13297.0], [1165.0, 13101.0], [1173.0, 12184.0], [1169.0, 13979.0], [1197.0, 14487.0], [1273.0, 12980.0], [1257.0, 14300.0], [1261.0, 12997.0], [1277.0, 12952.0], [1269.0, 12995.5], [1265.0, 14633.0], [1229.0, 13560.0], [1225.0, 12665.5], [1221.0, 12123.0], [1217.0, 12130.0], [1245.0, 11996.0], [1241.0, 12066.0], [1237.0, 14425.0], [1233.0, 13548.0], [1289.0, 12888.0], [1281.0, 12943.0], [1285.0, 12918.0], [1293.0, 12887.0], [1461.0, 14785.0], [1469.0, 13163.428571428569], [1457.0, 10766.5], [1421.0, 11754.0], [1413.0, 11039.0], [1437.0, 12841.0], [1433.0, 12842.0], [1521.0, 183.0], [1481.0, 13598.0], [1525.0, 186.0], [1473.0, 7990.0], [1477.0, 11271.666666666666], [1489.0, 14077.0], [1485.0, 14077.0], [1589.0, 181.11111111111111], [1569.0, 181.0], [1537.0, 186.0], [1549.0, 181.0], [1565.0, 182.0], [1557.0, 183.39999999999998], [1573.0, 185.0], [1613.0, 98.0], [1657.0, 218.0], [1617.0, 225.5], [1601.0, 124.0], [1605.0, 122.0], [1673.0, 94.0], [1717.0, 203.0], [1669.0, 94.0], [1693.0, 216.0], [1689.0, 1643.2857142857142], [1685.0, 113.5], [1785.0, 109.0], [1765.0, 146.0], [1773.0, 145.33333333333334], [1781.0, 9727.0], [1777.0, 145.375], [1849.0, 97.0], [1797.0, 107.5], [1813.0, 106.0], [1809.0, 106.5], [1909.0, 124.0], [1897.0, 125.0], [1917.0, 123.0], [1913.0, 123.0], [1869.0, 97.0], [1865.0, 96.66666666666667], [1861.0, 97.0], [1857.0, 97.5], [1885.0, 127.0], [1873.0, 130.0], [1977.0, 11730.0], [1981.0, 11723.0], [1953.0, 6127.0], [1957.0, 12468.0], [1961.0, 12463.0], [1973.0, 12759.0], [1921.0, 122.0], [1945.0, 68.0], [1941.0, 74.0], [1997.0, 10763.0], [1985.0, 11320.0], [2021.0, 11463.0], [2017.0, 12286.0], [2001.0, 11711.0], [2074.0, 12235.0], [2170.0, 11878.0], [2122.0, 11916.0], [2130.0, 11289.0], [2066.0, 12235.0], [2098.0, 10915.5], [2090.0, 12185.642857142857], [2082.0, 11894.666666666666], [2194.0, 11219.0], [2250.0, 10730.0], [2290.0, 10896.0], [2274.0, 11100.0], [2178.0, 10838.0], [2186.0, 10280.0], [2202.0, 11426.5], [2234.0, 11164.0], [2226.0, 15180.0], [2218.0, 11173.0], [2210.0, 11000.0], [2418.0, 10113.0], [2370.0, 15044.5], [2386.0, 9367.5], [2394.0, 9975.0], [2426.0, 12466.333333333334], [2410.0, 219.0], [2402.0, 9959.0], [2314.0, 11078.0], [2322.0, 10760.0], [2330.0, 16008.5], [2362.0, 15215.0], [2354.0, 14903.0], [2346.0, 15818.0], [2338.0, 16156.0], [2514.0, 10295.0], [2498.0, 22532.5], [2434.0, 10104.0], [2490.0, 13024.0], [2482.0, 10071.0], [2674.0, 20455.5], [2626.0, 10552.5], [2618.0, 10280.5], [2754.0, 10540.0], [2802.0, 13981.0], [2762.0, 30873.0], [2770.0, 10222.42857142857], [2786.0, 10476.0], [2706.0, 10338.625], [2730.0, 10268.454545454546], [2882.0, 107.0], [2914.0, 105.0], [2962.0, 95.0], [2171.0, 11876.0], [2123.0, 11915.0], [2131.0, 12394.0], [2139.0, 11592.5], [2155.0, 11818.5], [2147.0, 11829.5], [2059.0, 11212.0], [2051.0, 11615.0], [2107.0, 11636.0], [2091.0, 11596.0], [2083.0, 12235.0], [2243.0, 12951.0], [2299.0, 11049.75], [2251.0, 10173.0], [2259.0, 10935.0], [2267.0, 10144.0], [2187.0, 12343.0], [2195.0, 11841.0], [2203.0, 11214.0], [2227.0, 11167.0], [2211.0, 10232.0], [2419.0, 31019.0], [2411.0, 10984.0], [2379.0, 15191.0], [2427.0, 10656.0], [2387.0, 15100.0], [2395.0, 9974.0], [2403.0, 15064.0], [2307.0, 16194.0], [2315.0, 10454.0], [2323.0, 10447.0], [2331.0, 15849.0], [2363.0, 15214.0], [2347.0, 16128.0], [2339.0, 15840.0], [2515.0, 14097.0], [2459.0, 12803.0], [2451.0, 22034.0], [2443.0, 20552.0], [2483.0, 10338.0], [2475.0, 12050.5], [2563.0, 10560.0], [2611.0, 10418.0], [2787.0, 10199.0], [2803.0, 30805.0], [2811.0, 20347.0], [2763.0, 10513.0], [2707.0, 10268.0], [2715.0, 10272.5], [2747.0, 10356.333333333334], [2731.0, 10323.4], [2723.0, 10319.090909090908], [2939.0, 77.5], [2883.0, 107.0], [2899.0, 106.0], [2907.0, 105.0], [2931.0, 83.71428571428571], [2915.0, 105.0], [2875.0, 108.0], [2859.0, 118.0], [2971.0, 94.0], [541.0, 12148.0], [543.0, 12146.0], [537.0, 12267.0], [519.0, 12153.333333333334], [517.0, 12390.0], [513.0, 12273.0], [525.0, 12388.0], [533.0, 12387.0], [569.0, 12336.5], [563.0, 12325.0], [573.0, 12323.0], [575.0, 12322.0], [561.0, 12349.5], [551.0, 12351.0], [549.0, 12352.0], [547.0, 12353.0], [545.0, 12355.0], [559.0, 12351.0], [557.0, 12351.0], [567.0, 12112.0], [565.0, 12113.0], [603.0, 12048.0], [605.0, 12018.0], [607.0, 12229.0], [593.0, 12263.0], [601.0, 12286.0], [579.0, 12198.333333333334], [591.0, 13069.0], [585.0, 12280.5], [599.0, 12051.0], [615.0, 12120.0], [639.0, 12088.0], [625.0, 12172.0], [635.0, 11939.0], [623.0, 12201.0], [609.0, 12216.0], [611.0, 12240.0], [613.0, 12214.0], [621.0, 12210.0], [619.0, 12107.0], [617.0, 12238.0], [631.0, 12151.0], [629.0, 12159.0], [627.0, 11960.0], [665.0, 12136.0], [657.0, 12139.0], [671.0, 12130.0], [669.0, 12406.666666666666], [655.0, 12164.0], [643.0, 11938.0], [641.0, 12174.5], [645.0, 12144.0], [647.0, 12169.0], [653.0, 12166.0], [651.0, 12141.0], [649.0, 12169.0], [661.0, 12043.5], [659.0, 12151.0], [697.0, 11834.0], [701.0, 12045.0], [703.0, 11810.0], [689.0, 12355.333333333334], [691.0, 12110.5], [699.0, 12047.0], [679.0, 12393.5], [677.0, 12100.0], [675.0, 12119.0], [673.0, 11915.0], [685.0, 12119.0], [683.0, 12120.0], [681.0, 12121.0], [693.0, 12053.0], [729.0, 11753.0], [723.0, 11779.0], [717.0, 12023.0], [705.0, 12032.0], [711.0, 12044.0], [709.0, 12044.0], [715.0, 11800.0], [727.0, 11867.0], [725.0, 11973.0], [721.0, 11932.666666666666], [765.0, 12166.666666666666], [761.0, 11730.0], [767.0, 11923.0], [743.0, 11957.0], [741.0, 11985.0], [739.0, 11963.0], [755.0, 12347.5], [753.0, 12214.333333333334], [795.0, 11859.0], [799.0, 11849.0], [789.0, 11866.0], [797.0, 11856.0], [793.0, 12636.0], [783.0, 12653.0], [769.0, 11685.0], [771.0, 11893.0], [773.0, 11873.0], [775.0, 11871.0], [779.0, 11888.0], [777.0, 12668.0], [791.0, 11865.0], [829.0, 11773.0], [831.0, 11790.0], [817.0, 12594.0], [819.0, 12592.0], [827.0, 11808.0], [815.0, 11822.0], [801.0, 11844.0], [803.0, 12618.0], [807.0, 12616.0], [805.0, 11815.0], [811.0, 11830.0], [809.0, 12615.0], [823.0, 11809.0], [821.0, 12588.0], [857.0, 11741.0], [863.0, 12505.0], [849.0, 12539.0], [859.0, 12512.0], [847.0, 12544.0], [833.0, 11765.0], [835.0, 12559.0], [837.0, 11756.0], [845.0, 12350.0], [841.0, 11752.0], [855.0, 12130.5], [853.0, 12522.0], [851.0, 12526.0], [891.0, 10080.0], [895.0, 14338.0], [883.0, 12394.0], [893.0, 9069.0], [889.0, 11091.0], [879.0, 12465.0], [865.0, 12495.0], [869.0, 12104.0], [867.0, 12493.0], [871.0, 12490.0], [877.0, 12472.0], [875.0, 12473.0], [873.0, 12482.0], [887.0, 12101.0], [923.0, 14333.0], [927.0, 16198.0], [921.0, 13915.333333333334], [903.0, 13634.0], [899.0, 13711.5], [909.0, 14915.5], [917.0, 14458.666666666666], [915.0, 14916.0], [959.0, 13416.5], [945.0, 14519.0], [957.0, 13608.0], [943.0, 13611.0], [929.0, 14370.0], [933.0, 14871.0], [935.0, 14853.0], [947.0, 8764.0], [991.0, 13655.0], [979.0, 16150.0], [989.0, 14226.666666666666], [961.0, 14850.5], [975.0, 14288.0], [973.0, 13684.5], [971.0, 13549.5], [983.0, 14820.5], [981.0, 14283.0], [1023.0, 13873.5], [1011.0, 12455.0], [1021.0, 16092.0], [995.0, 15213.5], [993.0, 11774.5], [997.0, 14279.0], [999.0, 14278.0], [1005.0, 13545.0], [1001.0, 14789.0], [1015.0, 13330.5], [1013.0, 12436.0], [1078.0, 12367.0], [1082.0, 14668.0], [1086.0, 14119.0], [1058.0, 12397.0], [1074.0, 13456.0], [1050.0, 14214.333333333334], [1026.0, 16070.0], [1030.0, 14742.0], [1038.0, 14739.0], [1034.0, 12411.0], [1046.0, 14729.0], [1042.0, 13489.0], [1070.0, 16029.0], [1066.0, 13463.0], [1062.0, 14722.0], [1146.0, 12249.0], [1150.0, 13328.0], [1126.0, 14074.0], [1130.0, 14073.0], [1142.0, 14043.0], [1138.0, 15911.0], [1118.0, 15949.0], [1090.0, 14658.0], [1094.0, 14116.0], [1098.0, 12309.0], [1114.0, 14357.5], [1110.0, 14089.0], [1134.0, 14054.0], [1202.0, 12148.0], [1214.0, 17937.0], [1190.0, 12163.0], [1206.0, 14475.0], [1178.0, 13073.5], [1154.0, 13323.0], [1158.0, 15885.0], [1166.0, 12193.0], [1162.0, 13295.0], [1174.0, 13269.0], [1170.0, 13276.0], [1198.0, 13240.0], [1194.0, 12159.0], [1274.0, 12954.0], [1270.0, 12985.0], [1250.0, 14406.0], [1258.0, 15618.0], [1278.0, 12951.0], [1266.0, 12997.0], [1230.0, 13900.0], [1226.0, 12121.0], [1222.0, 15779.0], [1218.0, 13919.0], [1242.0, 12029.0], [1238.0, 13157.0], [1234.0, 14438.0], [1282.0, 12942.0], [1286.0, 11822.0], [1294.0, 15455.0], [1290.0, 12887.0], [1470.0, 13541.0], [1462.0, 13559.75], [1446.0, 15409.0], [1450.0, 13487.333333333334], [1454.0, 15408.0], [1466.0, 14362.8], [1458.0, 14081.0], [1422.0, 13748.666666666666], [1434.0, 13254.0], [1510.0, 184.0], [1486.0, 13807.0], [1598.0, 133.0], [1570.0, 186.0], [1542.0, 181.0], [1550.0, 183.0], [1562.0, 182.5], [1554.0, 181.0], [1574.0, 183.0], [1654.0, 94.0], [1606.0, 126.0], [1610.0, 234.0], [1646.0, 221.0], [1634.0, 93.0], [1718.0, 202.0], [1694.0, 216.0], [1722.0, 156.66666666666666], [1698.0, 117.8], [1666.0, 217.0], [1674.0, 94.0], [1686.0, 3673.0], [1682.0, 94.25], [1774.0, 145.0], [1782.0, 8717.0], [1778.0, 146.0], [1730.0, 155.0], [1850.0, 97.0], [1854.0, 97.5], [1806.0, 108.0], [1814.0, 106.14285714285717], [1810.0, 106.0], [1914.0, 123.0], [1898.0, 125.0], [1902.0, 124.0], [1918.0, 124.0], [1910.0, 124.0], [1906.0, 124.0], [1866.0, 96.0], [1862.0, 96.0], [1858.0, 97.0], [1982.0, 11320.0], [1954.0, 6125.0], [1958.0, 13263.0], [1962.0, 12152.0], [1966.0, 12146.5], [1978.0, 12351.0], [1974.0, 12121.0], [1970.0, 12450.5], [1926.0, 121.0], [1950.0, 37.333333333333336], [1946.0, 69.0], [2002.0, 12332.0], [2164.0, 11013.333333333334], [2156.0, 10860.0], [2116.0, 11631.5], [2132.0, 11909.0], [2172.0, 11253.0], [2060.0, 12236.0], [2068.0, 12235.0], [2084.0, 12234.0], [2204.0, 10811.0], [2196.0, 10816.0], [2292.0, 10895.5], [2244.0, 11761.0], [2252.0, 15140.0], [2300.0, 4270.0], [2284.0, 11099.0], [2236.0, 12271.0], [2228.0, 12273.0], [2220.0, 13733.0], [2212.0, 11188.0], [2420.0, 10112.0], [2372.0, 14885.0], [2380.0, 9990.0], [2388.0, 9364.0], [2428.0, 31012.0], [2404.0, 10434.0], [2308.0, 13960.6], [2316.0, 11075.0], [2324.0, 16171.0], [2332.0, 10427.0], [2364.0, 14898.0], [2356.0, 12904.0], [2348.0, 15810.0], [2340.0, 15839.0], [2500.0, 12351.0], [2508.0, 11800.5], [2436.0, 10649.0], [2476.0, 30990.0], [2628.0, 10551.5], [2700.0, 10270.8], [2788.0, 9930.0], [2804.0, 30804.0], [2756.0, 10539.5], [2812.0, 30798.0], [2692.0, 10270.0], [2708.0, 10271.8], [2716.0, 10324.4], [2748.0, 10264.0], [2732.0, 10404.5], [2724.0, 10133.5], [2900.0, 106.0], [2940.0, 76.0], [2908.0, 104.5], [2820.0, 104.0], [2828.0, 103.0], [2844.0, 102.0], [2860.0, 118.2], [2852.0, 67.0], [2964.0, 94.0], [2948.0, 75.33333333333333], [2173.0, 11874.0], [2117.0, 12043.0], [2125.0, 11915.5], [2141.0, 12144.5], [2061.0, 11614.0], [2069.0, 12720.0], [2101.0, 12007.666666666666], [2085.0, 12044.25], [2285.0, 11099.0], [2245.0, 15148.0], [2253.0, 15139.0], [2301.0, 4267.0], [2181.0, 10971.333333333334], [2189.0, 11586.0], [2197.0, 12325.0], [2237.0, 12910.8], [2213.0, 11187.0], [2413.0, 10983.0], [2421.0, 10380.0], [2373.0, 15199.0], [2389.0, 9985.0], [2397.0, 9973.0], [2405.0, 2246.0], [2317.0, 16188.0], [2333.0, 10426.0], [2365.0, 15211.0], [2357.0, 15217.0], [2349.0, 15809.0], [2341.0, 16145.0], [2501.0, 10042.0], [2461.0, 11576.5], [2509.0, 10038.0], [2493.0, 12395.666666666666], [2485.0, 10616.0], [2477.0, 10621.0], [2469.0, 14475.333333333334], [2661.0, 10004.0], [2685.0, 10270.0], [2669.0, 10549.0], [2621.0, 10553.0], [2613.0, 10279.0], [2629.0, 10274.0], [2701.0, 17059.0], [2757.0, 9993.0], [2773.0, 10213.0], [2813.0, 106.0], [2693.0, 10183.333333333334], [2709.0, 10268.5], [2749.0, 10264.0], [2733.0, 10404.5], [2725.0, 10269.857142857143], [2933.0, 83.0], [2901.0, 105.75], [2885.0, 107.0], [2893.0, 106.0], [2821.0, 104.5], [2829.0, 103.0], [2837.0, 102.0], [2845.0, 101.0], [2877.0, 108.0], [2973.0, 93.0], [2949.0, 75.2], [1083.0, 14660.0], [1087.0, 14119.0], [1059.0, 14186.0], [1067.0, 14704.0], [1079.0, 14690.0], [1075.0, 13455.0], [1055.0, 13719.333333333334], [1031.0, 12413.0], [1035.0, 12412.0], [1039.0, 13497.0], [1051.0, 16055.0], [1047.0, 18200.0], [1071.0, 13459.0], [1147.0, 15902.0], [1151.0, 13327.0], [1127.0, 13993.0], [1123.0, 11573.0], [1143.0, 13147.5], [1119.0, 14619.0], [1091.0, 15984.0], [1095.0, 12326.0], [1103.0, 14677.5], [1099.0, 12307.0], [1115.0, 14627.0], [1107.0, 14300.0], [1135.0, 13344.0], [1131.0, 12283.0], [1211.0, 13579.0], [1215.0, 13219.0], [1191.0, 13248.0], [1195.0, 13949.0], [1207.0, 13231.0], [1203.0, 13235.0], [1175.0, 15836.0], [1155.0, 13322.0], [1159.0, 13309.0], [1163.0, 13293.0], [1167.0, 15846.0], [1171.0, 15844.0], [1199.0, 13942.0], [1271.0, 12985.0], [1251.0, 11993.0], [1255.0, 13906.666666666666], [1279.0, 11862.0], [1259.0, 14275.0], [1263.0, 12453.5], [1267.0, 14238.0], [1231.0, 13197.0], [1227.0, 12121.0], [1223.0, 13913.0], [1219.0, 13916.0], [1247.0, 14988.5], [1243.0, 12011.0], [1239.0, 13859.0], [1235.0, 13196.0], [1283.0, 12939.0], [1295.0, 11797.0], [1291.0, 14173.0], [1287.0, 15467.0], [1467.0, 11035.5], [1451.0, 13460.0], [1455.0, 12743.0], [1463.0, 13124.999999999998], [1419.0, 14084.0], [1439.0, 14082.0], [1535.0, 186.0], [1491.0, 7984.5], [1483.0, 11748.0], [1543.0, 183.0], [1599.0, 130.22222222222223], [1571.0, 182.5], [1575.0, 179.0], [1567.0, 184.0], [1563.0, 182.875], [1559.0, 184.33333333333334], [1555.0, 185.5], [1579.0, 183.66666666666666], [1607.0, 119.0], [1655.0, 133.66666666666666], [1611.0, 233.0], [1635.0, 157.0], [1671.0, 92.5], [1727.0, 156.0], [1719.0, 140.37499999999997], [1699.0, 216.0], [1695.0, 215.0], [1675.0, 94.33333333333333], [1691.0, 182.27272727272728], [1687.0, 218.0], [1683.0, 90.5], [1783.0, 8715.0], [1771.0, 144.0], [1775.0, 145.33333333333334], [1787.0, 109.0], [1779.0, 144.99999999999997], [1807.0, 106.5], [1803.0, 107.0], [1851.0, 97.5], [1907.0, 124.0], [1919.0, 123.33333333333333], [1895.0, 126.5], [1903.0, 124.0], [1911.0, 123.0], [1871.0, 96.0], [1867.0, 97.0], [1863.0, 96.0], [1859.0, 97.0], [1883.0, 127.66666666666667], [1979.0, 12350.0], [1983.0, 11320.0], [1955.0, 12158.0], [1959.0, 11751.0], [1963.0, 12771.0], [1967.0, 13247.0], [1975.0, 5114.0], [1971.0, 12140.0], [1935.0, 77.44444444444444], [1951.0, 7141.0], [1947.0, 38.0], [1943.0, 69.0], [1999.0, 12092.4], [1987.0, 12343.0], [2047.0, 11615.0], [2015.0, 11827.0], [2011.0, 11859.5], [2007.0, 11709.0], [2003.0, 12331.0], [2158.0, 10582.0], [2174.0, 11249.0], [2126.0, 11291.0], [2134.0, 11837.5], [2150.0, 12057.666666666666], [2054.0, 11615.0], [2062.0, 11530.0], [2070.0, 12027.666666666666], [2078.0, 11211.0], [2086.0, 11869.333333333334], [2286.0, 11068.666666666666], [2302.0, 10460.0], [2254.0, 11749.0], [2294.0, 10694.0], [2190.0, 11849.0], [2198.0, 11839.0], [2206.0, 10810.0], [2238.0, 15176.0], [2222.0, 12976.5], [2214.0, 10784.0], [2422.0, 10658.0], [2414.0, 10981.0], [2374.0, 15197.0], [2390.0, 9358.0], [2398.0, 12527.5], [2430.0, 13083.0], [2406.0, 2244.0], [2326.0, 13455.5], [2334.0, 10425.0], [2366.0, 15208.0], [2350.0, 15807.0], [2446.0, 13073.0], [2462.0, 10356.0], [2438.0, 11459.333333333334], [2494.0, 10045.0], [2486.0, 12105.5], [2478.0, 10340.0], [2470.0, 30992.0], [2678.0, 10271.0], [2686.0, 10274.5], [2670.0, 30909.0], [2702.0, 10350.714285714284], [2790.0, 11337.5], [2806.0, 10304.5], [2694.0, 10090.666666666666], [2710.0, 10214.4], [2718.0, 10475.0], [2750.0, 10541.0], [2734.0, 10404.666666666666], [2726.0, 10544.0], [2902.0, 105.0], [2830.0, 103.0], [2846.0, 100.0], [2878.0, 108.0], [2854.0, 119.0], [2974.0, 93.0], [2950.0, 131.0], [2159.0, 11883.0], [2175.0, 12356.0], [2119.0, 11418.5], [2143.0, 11831.5], [2167.0, 11175.333333333334], [2151.0, 11273.0], [2111.0, 11774.0], [2079.0, 11613.0], [2103.0, 12145.5], [2095.0, 12218.0], [2087.0, 11923.0], [2279.0, 10698.0], [2247.0, 15144.5], [2255.0, 15138.0], [2295.0, 11376.666666666666], [2239.0, 12255.0], [2207.0, 11212.0], [2231.0, 13171.0], [2215.0, 11807.0], [2407.0, 1236.0], [2431.0, 10105.0], [2375.0, 10081.0], [2391.0, 10464.0], [2399.0, 9348.0], [2367.0, 15204.0], [2319.0, 10252.0], [2327.0, 11056.0], [2351.0, 3562.0], [2343.0, 15824.0], [2455.0, 11716.25], [2463.0, 14159.0], [2511.0, 10031.0], [2503.0, 10042.0], [2447.0, 10457.333333333334], [2439.0, 10102.0], [2495.0, 14116.0], [2479.0, 13048.0], [2471.0, 14156.0], [2623.0, 10344.25], [2615.0, 10010.0], [2655.0, 10272.0], [2759.0, 10241.5], [2815.0, 104.0], [2783.0, 10397.0], [2799.0, 17065.666666666668], [2751.0, 10263.0], [2695.0, 10546.0], [2727.0, 10178.0], [2887.0, 107.0], [2943.0, 76.0], [2903.0, 105.0], [2911.0, 104.0], [2935.0, 82.5], [2919.0, 103.55555555555556], [2879.0, 107.0], [2975.0, 93.0], [1.0, 100210.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2881.0646666666626, 9859.8986133333]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1010.0, "minX": 1.68302676E12, "maxY": 105545.78333333334, "series": [{"data": [[1.68302682E12, 70156.76666666666], [1.68302712E12, 1470.75], [1.68302718E12, 3915.9333333333334], [1.683027E12, 83574.85], [1.68302706E12, 84411.23333333334], [1.68302688E12, 86359.45], [1.68302694E12, 105545.78333333334], [1.68302676E12, 1332.1833333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302682E12, 51779.333333333336], [1.68302712E12, 1010.0], [1.68302718E12, 2735.4166666666665], [1.683027E12, 60069.75], [1.68302706E12, 61820.416666666664], [1.68302688E12, 62653.666666666664], [1.68302694E12, 74487.5], [1.68302676E12, 1068.9166666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302718E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4550.070866141731, "minX": 1.68302676E12, "maxY": 97706.56307692308, "series": [{"data": [[1.68302682E12, 8688.880689206757], [1.68302712E12, 43282.80000000001], [1.68302718E12, 97706.56307692308], [1.683027E12, 7313.223062911576], [1.68302706E12, 5529.857181756314], [1.68302688E12, 13329.911875335829], [1.68302694E12, 9799.620112994373], [1.68302676E12, 4550.070866141731]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302718E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4548.039370078741, "minX": 1.68302676E12, "maxY": 97706.5507692308, "series": [{"data": [[1.68302682E12, 8688.861833550069], [1.68302712E12, 43282.74166666664], [1.68302718E12, 97706.5507692308], [1.683027E12, 7313.215496707304], [1.68302706E12, 5529.8477876106], [1.68302688E12, 13329.898576034413], [1.68302694E12, 9799.612090395483], [1.68302676E12, 4548.039370078741]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302718E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.11692307692307699, "minX": 1.68302676E12, "maxY": 6089.033898305089, "series": [{"data": [[1.68302682E12, 16.34118985695712], [1.68302712E12, 0.20000000000000012], [1.68302718E12, 0.11692307692307699], [1.683027E12, 493.8612862547282], [1.68302706E12, 2.527433628318584], [1.68302688E12, 2189.742342826435], [1.68302694E12, 6089.033898305089], [1.68302676E12, 46.81889763779526]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302718E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.68302676E12, "maxY": 182922.0, "series": [{"data": [[1.68302682E12, 62075.0], [1.68302712E12, 72013.0], [1.68302718E12, 100210.0], [1.683027E12, 182922.0], [1.68302706E12, 31019.0], [1.68302688E12, 100160.0], [1.68302694E12, 150010.0], [1.68302676E12, 5428.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302682E12, 19397.4], [1.68302712E12, 65877.6], [1.68302718E12, 100144.4], [1.683027E12, 14575.4], [1.68302706E12, 12942.400000000001], [1.68302688E12, 27013.0], [1.68302694E12, 16150.0], [1.68302676E12, 5412.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302682E12, 49518.47], [1.68302712E12, 71801.53], [1.68302718E12, 100188.0], [1.683027E12, 72026.62], [1.68302706E12, 21228.54], [1.68302688E12, 100101.0], [1.68302694E12, 149965.49], [1.68302676E12, 5425.48]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302682E12, 30640.699999999997], [1.68302712E12, 67050.95], [1.68302718E12, 100182.0], [1.683027E12, 24063.49999999982], [1.68302706E12, 14809.999999999995], [1.68302688E12, 78092.0], [1.68302694E12, 68952.29999999881], [1.68302676E12, 5416.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302682E12, 20.0], [1.68302712E12, 15427.0], [1.68302718E12, 69030.0], [1.683027E12, 30.0], [1.68302706E12, 22.0], [1.68302688E12, 12.0], [1.68302694E12, 15.0], [1.68302676E12, 2930.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302682E12, 142.0], [1.68302712E12, 43237.0], [1.68302718E12, 100114.0], [1.683027E12, 663.0], [1.68302706E12, 2414.0], [1.68302688E12, 1486.5], [1.68302694E12, 118.0], [1.68302676E12, 4441.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302718E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 1.0, "maxY": 149995.0, "series": [{"data": [[2.0, 54849.5], [3.0, 3887.0], [4.0, 59356.5], [5.0, 7235.5], [6.0, 5971.0], [7.0, 10983.0], [9.0, 10803.5], [10.0, 9230.0], [12.0, 7414.5], [13.0, 1020.0], [15.0, 8679.5], [16.0, 12786.5], [17.0, 10196.0], [19.0, 33816.5], [22.0, 121.0], [25.0, 6650.0], [29.0, 11311.0], [30.0, 5407.0], [34.0, 6323.0], [37.0, 11407.0], [38.0, 100116.0], [40.0, 173.0], [42.0, 2395.0], [47.0, 10367.5], [48.0, 122.5], [50.0, 56287.0], [51.0, 58150.0], [53.0, 12898.0], [54.0, 14886.0], [57.0, 16055.0], [58.0, 114.0], [67.0, 16312.0], [68.0, 88.0], [73.0, 83.0], [76.0, 1413.5], [80.0, 108.0], [81.0, 124.0], [86.0, 18825.0], [87.0, 134.0], [89.0, 6011.0], [91.0, 96.0], [90.0, 6049.0], [94.0, 3165.5], [97.0, 2264.0], [103.0, 112.0], [102.0, 149995.0], [101.0, 9341.0], [104.0, 121.0], [111.0, 13149.0], [114.0, 98.0], [119.0, 100.0], [116.0, 92.0], [123.0, 161.0], [121.0, 5138.0], [125.0, 101.0], [127.0, 82.0], [124.0, 121.0], [126.0, 102.5], [129.0, 96.0], [130.0, 15127.5], [128.0, 111.5], [131.0, 153.0], [132.0, 113.0], [136.0, 11382.0], [141.0, 190.0], [138.0, 90.0], [144.0, 100109.0], [153.0, 15055.0], [159.0, 135.5], [156.0, 12286.5], [164.0, 105.0], [174.0, 16004.0], [176.0, 14465.0], [186.0, 7958.0], [185.0, 133.0], [191.0, 110.0], [189.0, 97.0], [194.0, 11282.5], [202.0, 99.5], [205.0, 116.0], [213.0, 9385.0], [214.0, 84.0], [210.0, 107.0], [223.0, 139.0], [231.0, 9939.0], [224.0, 93.0], [229.0, 90.0], [226.0, 91.0], [236.0, 18428.0], [238.0, 108.0], [237.0, 98.0], [247.0, 6392.5], [240.0, 94.0], [243.0, 91.0], [244.0, 103.0], [246.0, 93.0], [255.0, 107.0], [254.0, 107.0], [250.0, 102.0], [248.0, 107.0], [249.0, 116.0], [251.0, 106.0], [264.0, 17073.5], [260.0, 8366.0], [279.0, 205.0], [278.0, 4913.5], [273.0, 11322.0], [282.0, 8147.5], [285.0, 12095.0], [310.0, 100.0], [319.0, 130.0], [317.0, 110.0], [327.0, 17655.0], [342.0, 17274.0], [338.0, 116.0], [363.0, 101.0], [359.0, 104.0], [366.0, 8688.5], [382.0, 125.5], [373.0, 101.0], [375.0, 168.0], [378.0, 101.0], [380.0, 12213.0], [389.0, 16826.0], [399.0, 10296.0], [395.0, 10279.0], [392.0, 14009.5], [412.0, 11510.0], [408.0, 8976.5], [413.0, 7984.0], [419.0, 19464.0], [425.0, 14382.0], [447.0, 10567.0], [478.0, 19875.5], [471.0, 15340.0], [466.0, 9345.0], [480.0, 92.0], [492.0, 168.0], [484.0, 783.5], [498.0, 15419.0], [536.0, 18651.5], [519.0, 13095.0], [762.0, 15787.0], [1.0, 1104.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 762.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 1.0, "maxY": 149995.0, "series": [{"data": [[2.0, 54849.5], [3.0, 3887.0], [4.0, 59356.5], [5.0, 7235.5], [6.0, 5971.0], [7.0, 10983.0], [9.0, 10803.5], [10.0, 9230.0], [12.0, 7414.5], [13.0, 1020.0], [15.0, 8679.5], [16.0, 12786.5], [17.0, 10196.0], [19.0, 33816.0], [22.0, 121.0], [25.0, 6650.0], [29.0, 11311.0], [30.0, 5407.0], [34.0, 6323.0], [37.0, 11407.0], [38.0, 100116.0], [40.0, 173.0], [42.0, 2395.0], [47.0, 10367.5], [48.0, 122.5], [50.0, 56287.0], [51.0, 58150.0], [53.0, 12898.0], [54.0, 14886.0], [57.0, 16055.0], [58.0, 114.0], [67.0, 16312.0], [68.0, 88.0], [73.0, 83.0], [76.0, 1413.5], [80.0, 108.0], [81.0, 124.0], [86.0, 18825.0], [87.0, 134.0], [89.0, 6011.0], [91.0, 96.0], [90.0, 6049.0], [94.0, 3165.5], [97.0, 2260.5], [103.0, 112.0], [102.0, 149995.0], [101.0, 9341.0], [104.0, 121.0], [111.0, 13148.5], [114.0, 98.0], [119.0, 100.0], [116.0, 92.0], [123.0, 161.0], [121.0, 5138.0], [125.0, 101.0], [127.0, 82.0], [124.0, 121.0], [126.0, 102.5], [129.0, 96.0], [130.0, 15127.5], [128.0, 111.5], [131.0, 153.0], [132.0, 112.5], [136.0, 11382.0], [141.0, 190.0], [138.0, 90.0], [144.0, 100109.0], [153.0, 15055.0], [159.0, 135.5], [156.0, 12286.5], [164.0, 105.0], [174.0, 16003.5], [176.0, 14465.0], [186.0, 7958.0], [185.0, 133.0], [191.0, 110.0], [189.0, 97.0], [194.0, 11282.0], [202.0, 99.5], [205.0, 116.0], [213.0, 9385.0], [214.0, 84.0], [210.0, 107.0], [223.0, 139.0], [231.0, 9939.0], [224.0, 93.0], [229.0, 90.0], [226.0, 91.0], [236.0, 18428.0], [238.0, 108.0], [237.0, 98.0], [247.0, 6392.5], [240.0, 94.0], [243.0, 91.0], [244.0, 103.0], [246.0, 93.0], [255.0, 107.0], [254.0, 107.0], [250.0, 102.0], [248.0, 107.0], [249.0, 116.0], [251.0, 106.0], [264.0, 17073.5], [260.0, 8366.0], [279.0, 205.0], [278.0, 4913.5], [273.0, 11322.0], [282.0, 8147.5], [285.0, 12095.0], [310.0, 100.0], [319.0, 130.0], [317.0, 110.0], [327.0, 17655.0], [342.0, 17274.0], [338.0, 116.0], [363.0, 101.0], [359.0, 104.0], [366.0, 8688.5], [382.0, 125.5], [373.0, 101.0], [375.0, 168.0], [378.0, 101.0], [380.0, 12213.0], [389.0, 16826.0], [399.0, 10296.0], [395.0, 10279.0], [392.0, 14009.5], [412.0, 11510.0], [408.0, 8976.5], [413.0, 7984.0], [419.0, 19464.0], [425.0, 14382.0], [447.0, 10567.0], [478.0, 19875.5], [471.0, 15340.0], [466.0, 9345.0], [480.0, 92.0], [492.0, 168.0], [484.0, 783.5], [498.0, 15419.0], [536.0, 18651.5], [519.0, 13095.0], [762.0, 15787.0], [1.0, 1104.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 762.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 14.583333333333334, "minX": 1.68302676E12, "maxY": 135.41666666666666, "series": [{"data": [[1.68302682E12, 118.75], [1.683027E12, 106.25], [1.68302706E12, 129.16666666666666], [1.68302688E12, 120.83333333333333], [1.68302694E12, 135.41666666666666], [1.68302676E12, 14.583333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302706E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68302676E12, "maxY": 147.5, "series": [{"data": [[1.68302682E12, 102.53333333333333], [1.68302712E12, 2.0], [1.68302718E12, 5.416666666666667], [1.683027E12, 118.95], [1.68302706E12, 122.41666666666667], [1.68302688E12, 124.06666666666666], [1.68302694E12, 147.5], [1.68302676E12, 2.1166666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302718E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68302676E12, "maxY": 147.5, "series": [{"data": [[1.68302682E12, 102.53333333333333], [1.68302712E12, 2.0], [1.68302718E12, 5.416666666666667], [1.683027E12, 118.95], [1.68302706E12, 122.41666666666667], [1.68302688E12, 124.06666666666666], [1.68302694E12, 147.5], [1.68302676E12, 2.1166666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302718E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68302676E12, "maxY": 147.5, "series": [{"data": [[1.68302682E12, 102.53333333333333], [1.68302712E12, 2.0], [1.68302718E12, 5.416666666666667], [1.683027E12, 118.95], [1.68302706E12, 122.41666666666667], [1.68302688E12, 124.06666666666666], [1.68302694E12, 147.5], [1.68302676E12, 2.1166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302718E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

