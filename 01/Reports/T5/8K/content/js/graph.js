/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "maxY": 143734.0, "series": [{"data": [[0.0, 13.0], [0.1, 24.0], [0.2, 27.0], [0.3, 30.0], [0.4, 33.0], [0.5, 35.0], [0.6, 36.0], [0.7, 38.0], [0.8, 40.0], [0.9, 42.0], [1.0, 43.0], [1.1, 45.0], [1.2, 47.0], [1.3, 48.0], [1.4, 50.0], [1.5, 52.0], [1.6, 53.0], [1.7, 54.0], [1.8, 55.0], [1.9, 55.0], [2.0, 56.0], [2.1, 57.0], [2.2, 59.0], [2.3, 61.0], [2.4, 61.0], [2.5, 63.0], [2.6, 63.0], [2.7, 63.0], [2.8, 63.0], [2.9, 64.0], [3.0, 64.0], [3.1, 64.0], [3.2, 65.0], [3.3, 65.0], [3.4, 66.0], [3.5, 66.0], [3.6, 67.0], [3.7, 67.0], [3.8, 68.0], [3.9, 70.0], [4.0, 71.0], [4.1, 72.0], [4.2, 72.0], [4.3, 73.0], [4.4, 74.0], [4.5, 74.0], [4.6, 74.0], [4.7, 75.0], [4.8, 75.0], [4.9, 75.0], [5.0, 75.0], [5.1, 76.0], [5.2, 76.0], [5.3, 76.0], [5.4, 77.0], [5.5, 77.0], [5.6, 78.0], [5.7, 78.0], [5.8, 79.0], [5.9, 80.0], [6.0, 81.0], [6.1, 82.0], [6.2, 82.0], [6.3, 83.0], [6.4, 83.0], [6.5, 86.0], [6.6, 89.0], [6.7, 92.0], [6.8, 94.0], [6.9, 95.0], [7.0, 97.0], [7.1, 100.0], [7.2, 111.0], [7.3, 120.0], [7.4, 144.0], [7.5, 168.0], [7.6, 199.0], [7.7, 200.0], [7.8, 212.0], [7.9, 335.0], [8.0, 525.0], [8.1, 722.0], [8.2, 817.0], [8.3, 820.0], [8.4, 843.0], [8.5, 920.0], [8.6, 1131.0], [8.7, 1141.0], [8.8, 1147.0], [8.9, 1150.0], [9.0, 1156.0], [9.1, 1159.0], [9.2, 1164.0], [9.3, 1169.0], [9.4, 1173.0], [9.5, 1177.0], [9.6, 1185.0], [9.7, 1191.0], [9.8, 1194.0], [9.9, 1200.0], [10.0, 1204.0], [10.1, 1208.0], [10.2, 1212.0], [10.3, 1214.0], [10.4, 1216.0], [10.5, 1221.0], [10.6, 1223.0], [10.7, 1225.0], [10.8, 1227.0], [10.9, 1229.0], [11.0, 1232.0], [11.1, 1235.0], [11.2, 1239.0], [11.3, 1241.0], [11.4, 1245.0], [11.5, 1248.0], [11.6, 1250.0], [11.7, 1252.0], [11.8, 1257.0], [11.9, 1261.0], [12.0, 1267.0], [12.1, 1271.0], [12.2, 1276.0], [12.3, 1286.0], [12.4, 1290.0], [12.5, 1297.0], [12.6, 1303.0], [12.7, 1307.0], [12.8, 1311.0], [12.9, 1325.0], [13.0, 1334.0], [13.1, 1342.0], [13.2, 1347.0], [13.3, 1355.0], [13.4, 1367.0], [13.5, 1374.0], [13.6, 1384.0], [13.7, 1389.0], [13.8, 1406.0], [13.9, 1425.0], [14.0, 1445.0], [14.1, 1467.0], [14.2, 1476.0], [14.3, 1489.0], [14.4, 1518.0], [14.5, 1547.0], [14.6, 1571.0], [14.7, 1595.0], [14.8, 1600.0], [14.9, 1607.0], [15.0, 1611.0], [15.1, 1617.0], [15.2, 1625.0], [15.3, 1656.0], [15.4, 1665.0], [15.5, 1670.0], [15.6, 1685.0], [15.7, 1705.0], [15.8, 1714.0], [15.9, 1735.0], [16.0, 1739.0], [16.1, 1754.0], [16.2, 1761.0], [16.3, 1777.0], [16.4, 1795.0], [16.5, 1800.0], [16.6, 1807.0], [16.7, 1813.0], [16.8, 1824.0], [16.9, 1830.0], [17.0, 1846.0], [17.1, 1859.0], [17.2, 1876.0], [17.3, 1877.0], [17.4, 1887.0], [17.5, 1907.0], [17.6, 1922.0], [17.7, 1932.0], [17.8, 1990.0], [17.9, 2016.0], [18.0, 2033.0], [18.1, 2040.0], [18.2, 2052.0], [18.3, 2066.0], [18.4, 2105.0], [18.5, 2135.0], [18.6, 2177.0], [18.7, 2204.0], [18.8, 2228.0], [18.9, 2246.0], [19.0, 2258.0], [19.1, 2273.0], [19.2, 2293.0], [19.3, 2310.0], [19.4, 2322.0], [19.5, 2330.0], [19.6, 2337.0], [19.7, 2342.0], [19.8, 2348.0], [19.9, 2355.0], [20.0, 2364.0], [20.1, 2372.0], [20.2, 2379.0], [20.3, 2385.0], [20.4, 2397.0], [20.5, 2403.0], [20.6, 2411.0], [20.7, 2421.0], [20.8, 2436.0], [20.9, 2443.0], [21.0, 2452.0], [21.1, 2460.0], [21.2, 2468.0], [21.3, 2473.0], [21.4, 2480.0], [21.5, 2492.0], [21.6, 2500.0], [21.7, 2512.0], [21.8, 2526.0], [21.9, 2542.0], [22.0, 2559.0], [22.1, 2590.0], [22.2, 2608.0], [22.3, 2648.0], [22.4, 2666.0], [22.5, 2681.0], [22.6, 2722.0], [22.7, 2740.0], [22.8, 2752.0], [22.9, 2760.0], [23.0, 2771.0], [23.1, 2777.0], [23.2, 2786.0], [23.3, 2796.0], [23.4, 2818.0], [23.5, 2852.0], [23.6, 2879.0], [23.7, 2918.0], [23.8, 2931.0], [23.9, 2944.0], [24.0, 2954.0], [24.1, 2980.0], [24.2, 2996.0], [24.3, 3006.0], [24.4, 3012.0], [24.5, 3026.0], [24.6, 3034.0], [24.7, 3042.0], [24.8, 3052.0], [24.9, 3059.0], [25.0, 3072.0], [25.1, 3090.0], [25.2, 3096.0], [25.3, 3099.0], [25.4, 3115.0], [25.5, 3122.0], [25.6, 3130.0], [25.7, 3135.0], [25.8, 3163.0], [25.9, 3165.0], [26.0, 3175.0], [26.1, 3207.0], [26.2, 3239.0], [26.3, 3251.0], [26.4, 3261.0], [26.5, 3271.0], [26.6, 3280.0], [26.7, 3289.0], [26.8, 3302.0], [26.9, 3311.0], [27.0, 3317.0], [27.1, 3327.0], [27.2, 3341.0], [27.3, 3349.0], [27.4, 3372.0], [27.5, 3395.0], [27.6, 3447.0], [27.7, 3467.0], [27.8, 3488.0], [27.9, 3502.0], [28.0, 3530.0], [28.1, 3545.0], [28.2, 3548.0], [28.3, 3556.0], [28.4, 3561.0], [28.5, 3581.0], [28.6, 3598.0], [28.7, 3610.0], [28.8, 3617.0], [28.9, 3632.0], [29.0, 3644.0], [29.1, 3652.0], [29.2, 3661.0], [29.3, 3682.0], [29.4, 3704.0], [29.5, 3723.0], [29.6, 3741.0], [29.7, 3767.0], [29.8, 3773.0], [29.9, 3788.0], [30.0, 3792.0], [30.1, 3808.0], [30.2, 3823.0], [30.3, 3837.0], [30.4, 3850.0], [30.5, 3854.0], [30.6, 3858.0], [30.7, 3864.0], [30.8, 3882.0], [30.9, 3895.0], [31.0, 3904.0], [31.1, 3907.0], [31.2, 3917.0], [31.3, 3932.0], [31.4, 3950.0], [31.5, 3981.0], [31.6, 4053.0], [31.7, 4121.0], [31.8, 4167.0], [31.9, 4201.0], [32.0, 4210.0], [32.1, 4220.0], [32.2, 4237.0], [32.3, 4246.0], [32.4, 4258.0], [32.5, 4264.0], [32.6, 4272.0], [32.7, 4288.0], [32.8, 4302.0], [32.9, 4316.0], [33.0, 4331.0], [33.1, 4354.0], [33.2, 4371.0], [33.3, 4385.0], [33.4, 4395.0], [33.5, 4402.0], [33.6, 4415.0], [33.7, 4426.0], [33.8, 4438.0], [33.9, 4454.0], [34.0, 4467.0], [34.1, 4479.0], [34.2, 4492.0], [34.3, 4508.0], [34.4, 4510.0], [34.5, 4516.0], [34.6, 4546.0], [34.7, 4551.0], [34.8, 4565.0], [34.9, 4578.0], [35.0, 4590.0], [35.1, 4612.0], [35.2, 4624.0], [35.3, 4652.0], [35.4, 4659.0], [35.5, 4672.0], [35.6, 4697.0], [35.7, 4713.0], [35.8, 4731.0], [35.9, 4743.0], [36.0, 4751.0], [36.1, 4759.0], [36.2, 4773.0], [36.3, 4790.0], [36.4, 4817.0], [36.5, 4856.0], [36.6, 4933.0], [36.7, 4994.0], [36.8, 5021.0], [36.9, 5057.0], [37.0, 5084.0], [37.1, 5116.0], [37.2, 5157.0], [37.3, 5175.0], [37.4, 5236.0], [37.5, 5254.0], [37.6, 5276.0], [37.7, 5294.0], [37.8, 5313.0], [37.9, 5329.0], [38.0, 5342.0], [38.1, 5370.0], [38.2, 5413.0], [38.3, 5431.0], [38.4, 5475.0], [38.5, 5517.0], [38.6, 5562.0], [38.7, 5581.0], [38.8, 5600.0], [38.9, 5625.0], [39.0, 5669.0], [39.1, 5690.0], [39.2, 5717.0], [39.3, 5722.0], [39.4, 5761.0], [39.5, 5828.0], [39.6, 5852.0], [39.7, 5942.0], [39.8, 5964.0], [39.9, 6009.0], [40.0, 6040.0], [40.1, 6058.0], [40.2, 6081.0], [40.3, 6098.0], [40.4, 6108.0], [40.5, 6148.0], [40.6, 6182.0], [40.7, 6202.0], [40.8, 6234.0], [40.9, 6272.0], [41.0, 6294.0], [41.1, 6315.0], [41.2, 6326.0], [41.3, 6346.0], [41.4, 6358.0], [41.5, 6380.0], [41.6, 6406.0], [41.7, 6429.0], [41.8, 6436.0], [41.9, 6440.0], [42.0, 6450.0], [42.1, 6452.0], [42.2, 6453.0], [42.3, 6456.0], [42.4, 6462.0], [42.5, 6471.0], [42.6, 6481.0], [42.7, 6494.0], [42.8, 6524.0], [42.9, 6557.0], [43.0, 6608.0], [43.1, 6636.0], [43.2, 6718.0], [43.3, 6744.0], [43.4, 6801.0], [43.5, 6849.0], [43.6, 6916.0], [43.7, 6997.0], [43.8, 7017.0], [43.9, 7037.0], [44.0, 7044.0], [44.1, 7088.0], [44.2, 7122.0], [44.3, 7163.0], [44.4, 7260.0], [44.5, 7343.0], [44.6, 7441.0], [44.7, 7459.0], [44.8, 7487.0], [44.9, 7575.0], [45.0, 7577.0], [45.1, 7578.0], [45.2, 7636.0], [45.3, 7683.0], [45.4, 7722.0], [45.5, 7747.0], [45.6, 7778.0], [45.7, 7828.0], [45.8, 7884.0], [45.9, 7912.0], [46.0, 7963.0], [46.1, 8017.0], [46.2, 8040.0], [46.3, 8062.0], [46.4, 8091.0], [46.5, 8166.0], [46.6, 8283.0], [46.7, 8327.0], [46.8, 8362.0], [46.9, 8372.0], [47.0, 8387.0], [47.1, 8411.0], [47.2, 8452.0], [47.3, 8503.0], [47.4, 8535.0], [47.5, 8572.0], [47.6, 8605.0], [47.7, 8639.0], [47.8, 8656.0], [47.9, 8694.0], [48.0, 8721.0], [48.1, 8724.0], [48.2, 8771.0], [48.3, 8795.0], [48.4, 8821.0], [48.5, 8846.0], [48.6, 8856.0], [48.7, 8867.0], [48.8, 8881.0], [48.9, 8895.0], [49.0, 8912.0], [49.1, 8932.0], [49.2, 8948.0], [49.3, 8954.0], [49.4, 8965.0], [49.5, 8980.0], [49.6, 8995.0], [49.7, 9008.0], [49.8, 9031.0], [49.9, 9039.0], [50.0, 9058.0], [50.1, 9067.0], [50.2, 9083.0], [50.3, 9128.0], [50.4, 9150.0], [50.5, 9177.0], [50.6, 9201.0], [50.7, 9215.0], [50.8, 9231.0], [50.9, 9266.0], [51.0, 9275.0], [51.1, 9294.0], [51.2, 9298.0], [51.3, 9303.0], [51.4, 9311.0], [51.5, 9318.0], [51.6, 9330.0], [51.7, 9345.0], [51.8, 9357.0], [51.9, 9367.0], [52.0, 9377.0], [52.1, 9419.0], [52.2, 9459.0], [52.3, 9490.0], [52.4, 9504.0], [52.5, 9514.0], [52.6, 9525.0], [52.7, 9535.0], [52.8, 9540.0], [52.9, 9553.0], [53.0, 9557.0], [53.1, 9564.0], [53.2, 9568.0], [53.3, 9571.0], [53.4, 9577.0], [53.5, 9587.0], [53.6, 9600.0], [53.7, 9609.0], [53.8, 9611.0], [53.9, 9615.0], [54.0, 9617.0], [54.1, 9624.0], [54.2, 9632.0], [54.3, 9644.0], [54.4, 9660.0], [54.5, 9691.0], [54.6, 9739.0], [54.7, 9765.0], [54.8, 9790.0], [54.9, 9807.0], [55.0, 9822.0], [55.1, 9840.0], [55.2, 9856.0], [55.3, 9880.0], [55.4, 9924.0], [55.5, 9963.0], [55.6, 9998.0], [55.7, 10014.0], [55.8, 10037.0], [55.9, 10060.0], [56.0, 10079.0], [56.1, 10089.0], [56.2, 10106.0], [56.3, 10118.0], [56.4, 10124.0], [56.5, 10135.0], [56.6, 10152.0], [56.7, 10161.0], [56.8, 10166.0], [56.9, 10168.0], [57.0, 10173.0], [57.1, 10185.0], [57.2, 10208.0], [57.3, 10230.0], [57.4, 10243.0], [57.5, 10246.0], [57.6, 10257.0], [57.7, 10266.0], [57.8, 10273.0], [57.9, 10288.0], [58.0, 10306.0], [58.1, 10316.0], [58.2, 10329.0], [58.3, 10356.0], [58.4, 10395.0], [58.5, 10426.0], [58.6, 10456.0], [58.7, 10500.0], [58.8, 10597.0], [58.9, 10636.0], [59.0, 10637.0], [59.1, 10685.0], [59.2, 10720.0], [59.3, 10747.0], [59.4, 10765.0], [59.5, 10786.0], [59.6, 10813.0], [59.7, 10858.0], [59.8, 10917.0], [59.9, 10987.0], [60.0, 11030.0], [60.1, 11058.0], [60.2, 11087.0], [60.3, 11104.0], [60.4, 11126.0], [60.5, 11147.0], [60.6, 11159.0], [60.7, 11180.0], [60.8, 11195.0], [60.9, 11217.0], [61.0, 11266.0], [61.1, 11287.0], [61.2, 11325.0], [61.3, 11350.0], [61.4, 11365.0], [61.5, 11385.0], [61.6, 11421.0], [61.7, 11448.0], [61.8, 11477.0], [61.9, 11516.0], [62.0, 11561.0], [62.1, 11597.0], [62.2, 11623.0], [62.3, 11684.0], [62.4, 11721.0], [62.5, 11763.0], [62.6, 11793.0], [62.7, 11827.0], [62.8, 11849.0], [62.9, 11890.0], [63.0, 11924.0], [63.1, 11948.0], [63.2, 11957.0], [63.3, 11995.0], [63.4, 12040.0], [63.5, 12079.0], [63.6, 12092.0], [63.7, 12137.0], [63.8, 12160.0], [63.9, 12192.0], [64.0, 12199.0], [64.1, 12213.0], [64.2, 12253.0], [64.3, 12267.0], [64.4, 12275.0], [64.5, 12281.0], [64.6, 12294.0], [64.7, 12329.0], [64.8, 12358.0], [64.9, 12378.0], [65.0, 12397.0], [65.1, 12406.0], [65.2, 12423.0], [65.3, 12441.0], [65.4, 12462.0], [65.5, 12482.0], [65.6, 12507.0], [65.7, 12563.0], [65.8, 12682.0], [65.9, 12743.0], [66.0, 12780.0], [66.1, 12803.0], [66.2, 12817.0], [66.3, 12835.0], [66.4, 12877.0], [66.5, 12901.0], [66.6, 12920.0], [66.7, 12929.0], [66.8, 12953.0], [66.9, 12960.0], [67.0, 12984.0], [67.1, 13005.0], [67.2, 13017.0], [67.3, 13033.0], [67.4, 13055.0], [67.5, 13074.0], [67.6, 13087.0], [67.7, 13104.0], [67.8, 13114.0], [67.9, 13131.0], [68.0, 13151.0], [68.1, 13172.0], [68.2, 13184.0], [68.3, 13193.0], [68.4, 13227.0], [68.5, 13249.0], [68.6, 13262.0], [68.7, 13296.0], [68.8, 13329.0], [68.9, 13390.0], [69.0, 13522.0], [69.1, 13589.0], [69.2, 13602.0], [69.3, 13626.0], [69.4, 13682.0], [69.5, 13700.0], [69.6, 13702.0], [69.7, 13715.0], [69.8, 13760.0], [69.9, 13828.0], [70.0, 13895.0], [70.1, 13937.0], [70.2, 13963.0], [70.3, 14001.0], [70.4, 14009.0], [70.5, 14084.0], [70.6, 14106.0], [70.7, 14113.0], [70.8, 14164.0], [70.9, 14188.0], [71.0, 14230.0], [71.1, 14239.0], [71.2, 14268.0], [71.3, 14296.0], [71.4, 14403.0], [71.5, 14434.0], [71.6, 14461.0], [71.7, 14476.0], [71.8, 14479.0], [71.9, 14495.0], [72.0, 14514.0], [72.1, 14524.0], [72.2, 14543.0], [72.3, 14566.0], [72.4, 14612.0], [72.5, 14654.0], [72.6, 14669.0], [72.7, 14697.0], [72.8, 14723.0], [72.9, 14754.0], [73.0, 14793.0], [73.1, 14847.0], [73.2, 14863.0], [73.3, 14923.0], [73.4, 15034.0], [73.5, 15159.0], [73.6, 15227.0], [73.7, 15266.0], [73.8, 15324.0], [73.9, 15380.0], [74.0, 15465.0], [74.1, 15506.0], [74.2, 15555.0], [74.3, 15580.0], [74.4, 15599.0], [74.5, 15623.0], [74.6, 15680.0], [74.7, 15701.0], [74.8, 15728.0], [74.9, 15772.0], [75.0, 15804.0], [75.1, 15842.0], [75.2, 15857.0], [75.3, 15886.0], [75.4, 15898.0], [75.5, 15912.0], [75.6, 15947.0], [75.7, 15953.0], [75.8, 15964.0], [75.9, 15993.0], [76.0, 16032.0], [76.1, 16064.0], [76.2, 16101.0], [76.3, 16131.0], [76.4, 16171.0], [76.5, 16208.0], [76.6, 16242.0], [76.7, 16267.0], [76.8, 16302.0], [76.9, 16315.0], [77.0, 16316.0], [77.1, 16328.0], [77.2, 16342.0], [77.3, 16359.0], [77.4, 16378.0], [77.5, 16394.0], [77.6, 16425.0], [77.7, 16455.0], [77.8, 16466.0], [77.9, 16468.0], [78.0, 16475.0], [78.1, 16485.0], [78.2, 16527.0], [78.3, 16565.0], [78.4, 16583.0], [78.5, 16607.0], [78.6, 16642.0], [78.7, 16693.0], [78.8, 16725.0], [78.9, 16768.0], [79.0, 16798.0], [79.1, 16843.0], [79.2, 16878.0], [79.3, 16917.0], [79.4, 16958.0], [79.5, 17003.0], [79.6, 17027.0], [79.7, 17040.0], [79.8, 17060.0], [79.9, 17091.0], [80.0, 17095.0], [80.1, 17148.0], [80.2, 17182.0], [80.3, 17206.0], [80.4, 17221.0], [80.5, 17257.0], [80.6, 17304.0], [80.7, 17319.0], [80.8, 17340.0], [80.9, 17354.0], [81.0, 17365.0], [81.1, 17389.0], [81.2, 17415.0], [81.3, 17440.0], [81.4, 17441.0], [81.5, 17483.0], [81.6, 17541.0], [81.7, 17577.0], [81.8, 17651.0], [81.9, 17663.0], [82.0, 17704.0], [82.1, 17720.0], [82.2, 17735.0], [82.3, 17754.0], [82.4, 17762.0], [82.5, 17775.0], [82.6, 17794.0], [82.7, 17805.0], [82.8, 17817.0], [82.9, 17838.0], [83.0, 17854.0], [83.1, 17869.0], [83.2, 17900.0], [83.3, 17919.0], [83.4, 17946.0], [83.5, 17968.0], [83.6, 18009.0], [83.7, 18077.0], [83.8, 18127.0], [83.9, 18150.0], [84.0, 18207.0], [84.1, 18242.0], [84.2, 18292.0], [84.3, 18309.0], [84.4, 18337.0], [84.5, 18377.0], [84.6, 18389.0], [84.7, 18416.0], [84.8, 18436.0], [84.9, 18479.0], [85.0, 18507.0], [85.1, 18540.0], [85.2, 18598.0], [85.3, 18625.0], [85.4, 18682.0], [85.5, 18794.0], [85.6, 18853.0], [85.7, 18897.0], [85.8, 18955.0], [85.9, 19019.0], [86.0, 19040.0], [86.1, 19133.0], [86.2, 19210.0], [86.3, 19261.0], [86.4, 19301.0], [86.5, 19375.0], [86.6, 19462.0], [86.7, 19526.0], [86.8, 19533.0], [86.9, 19555.0], [87.0, 19577.0], [87.1, 19628.0], [87.2, 19671.0], [87.3, 19767.0], [87.4, 19911.0], [87.5, 20042.0], [87.6, 20250.0], [87.7, 20305.0], [87.8, 20343.0], [87.9, 20415.0], [88.0, 20656.0], [88.1, 20697.0], [88.2, 20739.0], [88.3, 20795.0], [88.4, 20868.0], [88.5, 20955.0], [88.6, 21071.0], [88.7, 21107.0], [88.8, 21203.0], [88.9, 21358.0], [89.0, 21505.0], [89.1, 21576.0], [89.2, 21605.0], [89.3, 22033.0], [89.4, 22300.0], [89.5, 22411.0], [89.6, 22539.0], [89.7, 22714.0], [89.8, 22854.0], [89.9, 22896.0], [90.0, 23023.0], [90.1, 23186.0], [90.2, 23512.0], [90.3, 23648.0], [90.4, 23854.0], [90.5, 24047.0], [90.6, 24561.0], [90.7, 24853.0], [90.8, 25377.0], [90.9, 26355.0], [91.0, 26662.0], [91.1, 27043.0], [91.2, 27109.0], [91.3, 27159.0], [91.4, 27231.0], [91.5, 27268.0], [91.6, 27305.0], [91.7, 27326.0], [91.8, 27771.0], [91.9, 27860.0], [92.0, 28407.0], [92.1, 28691.0], [92.2, 28927.0], [92.3, 29027.0], [92.4, 29295.0], [92.5, 30311.0], [92.6, 31403.0], [92.7, 32184.0], [92.8, 32708.0], [92.9, 33176.0], [93.0, 33678.0], [93.1, 34866.0], [93.2, 35889.0], [93.3, 36859.0], [93.4, 37111.0], [93.5, 37291.0], [93.6, 37349.0], [93.7, 37773.0], [93.8, 38061.0], [93.9, 39385.0], [94.0, 40258.0], [94.1, 40365.0], [94.2, 40723.0], [94.3, 41272.0], [94.4, 41539.0], [94.5, 41620.0], [94.6, 43757.0], [94.7, 44658.0], [94.8, 45189.0], [94.9, 45474.0], [95.0, 45889.0], [95.1, 46234.0], [95.2, 46632.0], [95.3, 48286.0], [95.4, 50476.0], [95.5, 51632.0], [95.6, 53699.0], [95.7, 53983.0], [95.8, 55942.0], [95.9, 57941.0], [96.0, 58458.0], [96.1, 60888.0], [96.2, 61179.0], [96.3, 62824.0], [96.4, 63172.0], [96.5, 63175.0], [96.6, 63205.0], [96.7, 63938.0], [96.8, 63942.0], [96.9, 65615.0], [97.0, 66638.0], [97.1, 66707.0], [97.2, 66709.0], [97.3, 66776.0], [97.4, 67512.0], [97.5, 67632.0], [97.6, 69682.0], [97.7, 71300.0], [97.8, 73396.0], [97.9, 73758.0], [98.0, 74042.0], [98.1, 74168.0], [98.2, 74305.0], [98.3, 75283.0], [98.4, 75853.0], [98.5, 77841.0], [98.6, 77887.0], [98.7, 79728.0], [98.8, 80028.0], [98.9, 80074.0], [99.0, 80711.0], [99.1, 117650.0], [99.2, 128427.0], [99.3, 137324.0], [99.4, 137578.0], [99.5, 137623.0], [99.6, 138750.0], [99.7, 139238.0], [99.8, 139410.0], [99.9, 139576.0], [100.0, 143734.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1419.0, "series": [{"data": [[0.0, 1419.0], [139300.0, 10.0], [66700.0, 57.0], [71500.0, 2.0], [74700.0, 3.0], [76300.0, 4.0], [100.0, 130.0], [33700.0, 6.0], [36100.0, 2.0], [35300.0, 8.0], [37700.0, 7.0], [36900.0, 3.0], [39300.0, 3.0], [40900.0, 8.0], [40100.0, 7.0], [44100.0, 1.0], [44900.0, 4.0], [43300.0, 1.0], [45700.0, 6.0], [46500.0, 1.0], [48900.0, 3.0], [47300.0, 1.0], [48100.0, 1.0], [50500.0, 4.0], [51300.0, 3.0], [200.0, 38.0], [53700.0, 1.0], [54500.0, 1.0], [56900.0, 1.0], [60900.0, 3.0], [67400.0, 11.0], [65800.0, 6.0], [300.0, 10.0], [75400.0, 4.0], [73800.0, 5.0], [400.0, 2.0], [500.0, 21.0], [600.0, 3.0], [700.0, 21.0], [800.0, 67.0], [900.0, 12.0], [1100.0, 271.0], [1200.0, 535.0], [1300.0, 251.0], [1400.0, 115.0], [1500.0, 82.0], [1600.0, 183.0], [1700.0, 167.0], [1800.0, 198.0], [1900.0, 68.0], [2000.0, 115.0], [2100.0, 56.0], [2300.0, 241.0], [2200.0, 115.0], [2400.0, 235.0], [2500.0, 111.0], [2600.0, 77.0], [2700.0, 167.0], [2800.0, 56.0], [2900.0, 118.0], [3000.0, 219.0], [3100.0, 156.0], [3200.0, 145.0], [3300.0, 142.0], [3400.0, 74.0], [3500.0, 152.0], [3600.0, 155.0], [3700.0, 134.0], [3800.0, 178.0], [3900.0, 120.0], [4000.0, 20.0], [4200.0, 181.0], [4100.0, 53.0], [4300.0, 133.0], [4400.0, 160.0], [4500.0, 159.0], [4600.0, 116.0], [69700.0, 10.0], [71300.0, 2.0], [4700.0, 149.0], [76100.0, 2.0], [4800.0, 41.0], [5000.0, 68.0], [4900.0, 33.0], [5100.0, 57.0], [5300.0, 93.0], [5200.0, 77.0], [5500.0, 70.0], [5400.0, 55.0], [5600.0, 68.0], [5700.0, 65.0], [5800.0, 40.0], [5900.0, 47.0], [6000.0, 94.0], [6100.0, 67.0], [6200.0, 71.0], [6300.0, 110.0], [6400.0, 232.0], [6500.0, 50.0], [6600.0, 36.0], [6900.0, 30.0], [6700.0, 48.0], [6800.0, 33.0], [7000.0, 88.0], [7100.0, 39.0], [7300.0, 20.0], [7400.0, 54.0], [7200.0, 19.0], [7500.0, 76.0], [7600.0, 39.0], [7800.0, 36.0], [7700.0, 59.0], [7900.0, 47.0], [8100.0, 19.0], [8000.0, 70.0], [8200.0, 23.0], [8400.0, 49.0], [8600.0, 69.0], [137400.0, 6.0], [8800.0, 117.0], [9000.0, 123.0], [9200.0, 130.0], [9600.0, 190.0], [9400.0, 66.0], [10200.0, 161.0], [9800.0, 103.0], [10000.0, 98.0], [10600.0, 66.0], [10400.0, 57.0], [10800.0, 47.0], [11200.0, 62.0], [11000.0, 74.0], [11400.0, 70.0], [11600.0, 36.0], [11800.0, 61.0], [12000.0, 61.0], [12200.0, 116.0], [12400.0, 108.0], [12600.0, 19.0], [13200.0, 80.0], [13000.0, 118.0], [12800.0, 85.0], [13600.0, 57.0], [13800.0, 34.0], [13400.0, 13.0], [14200.0, 81.0], [14000.0, 57.0], [14600.0, 71.0], [14400.0, 112.0], [14800.0, 57.0], [15200.0, 42.0], [15000.0, 22.0], [15600.0, 53.0], [15800.0, 90.0], [15400.0, 29.0], [16200.0, 74.0], [16000.0, 51.0], [16400.0, 125.0], [16800.0, 53.0], [17200.0, 60.0], [18000.0, 33.0], [17600.0, 54.0], [18400.0, 68.0], [18800.0, 40.0], [19200.0, 46.0], [19600.0, 34.0], [20400.0, 15.0], [20000.0, 18.0], [20800.0, 26.0], [21200.0, 13.0], [22000.0, 4.0], [22400.0, 12.0], [21600.0, 19.0], [22800.0, 39.0], [23200.0, 3.0], [24000.0, 13.0], [23600.0, 8.0], [24400.0, 5.0], [25200.0, 4.0], [24800.0, 3.0], [26400.0, 9.0], [25600.0, 1.0], [26800.0, 5.0], [27200.0, 52.0], [27600.0, 3.0], [28400.0, 4.0], [29200.0, 12.0], [28800.0, 15.0], [30000.0, 1.0], [31600.0, 1.0], [30800.0, 6.0], [32000.0, 2.0], [32400.0, 2.0], [33600.0, 5.0], [36800.0, 6.0], [38400.0, 1.0], [37600.0, 2.0], [39200.0, 2.0], [41600.0, 4.0], [42400.0, 1.0], [44000.0, 2.0], [44800.0, 2.0], [46400.0, 1.0], [45600.0, 3.0], [48800.0, 2.0], [47200.0, 1.0], [49600.0, 2.0], [50400.0, 2.0], [52000.0, 2.0], [51200.0, 1.0], [53600.0, 4.0], [56800.0, 2.0], [57600.0, 1.0], [58400.0, 8.0], [60800.0, 5.0], [63200.0, 6.0], [64800.0, 1.0], [65600.0, 2.0], [72000.0, 2.0], [73600.0, 1.0], [75200.0, 4.0], [80000.0, 41.0], [86400.0, 1.0], [137600.0, 15.0], [138500.0, 1.0], [73500.0, 1.0], [79900.0, 1.0], [139400.0, 3.0], [34700.0, 1.0], [33100.0, 23.0], [33900.0, 1.0], [36300.0, 3.0], [35500.0, 4.0], [37100.0, 2.0], [37900.0, 2.0], [40300.0, 27.0], [39500.0, 1.0], [41100.0, 3.0], [41900.0, 2.0], [43500.0, 1.0], [45100.0, 6.0], [45900.0, 1.0], [48300.0, 2.0], [50700.0, 3.0], [52300.0, 2.0], [54700.0, 1.0], [53900.0, 10.0], [57900.0, 11.0], [61100.0, 8.0], [61900.0, 1.0], [62700.0, 1.0], [64300.0, 2.0], [66200.0, 2.0], [69400.0, 4.0], [67800.0, 1.0], [72600.0, 4.0], [75800.0, 14.0], [74200.0, 8.0], [138900.0, 10.0], [71700.0, 2.0], [73300.0, 4.0], [79700.0, 10.0], [16500.0, 70.0], [16900.0, 46.0], [17300.0, 121.0], [18100.0, 50.0], [17700.0, 138.0], [18900.0, 35.0], [19300.0, 32.0], [18500.0, 45.0], [19700.0, 19.0], [20100.0, 5.0], [20900.0, 14.0], [21300.0, 14.0], [20500.0, 3.0], [22500.0, 16.0], [22100.0, 14.0], [22900.0, 14.0], [23300.0, 4.0], [23700.0, 7.0], [24500.0, 9.0], [25300.0, 1.0], [24900.0, 1.0], [26500.0, 2.0], [26100.0, 8.0], [25700.0, 1.0], [26900.0, 11.0], [27300.0, 25.0], [27700.0, 20.0], [28100.0, 1.0], [28500.0, 8.0], [28900.0, 21.0], [29300.0, 12.0], [30500.0, 2.0], [30100.0, 1.0], [31300.0, 4.0], [32100.0, 1.0], [32500.0, 1.0], [33800.0, 3.0], [137500.0, 21.0], [33000.0, 1.0], [35400.0, 2.0], [37800.0, 6.0], [37000.0, 16.0], [39400.0, 5.0], [40200.0, 1.0], [45800.0, 5.0], [46600.0, 1.0], [47400.0, 5.0], [48200.0, 7.0], [50600.0, 1.0], [54600.0, 3.0], [53800.0, 9.0], [57000.0, 3.0], [57800.0, 3.0], [58600.0, 6.0], [61000.0, 8.0], [63400.0, 10.0], [67600.0, 19.0], [74000.0, 14.0], [80400.0, 11.0], [86800.0, 1.0], [128400.0, 12.0], [67500.0, 14.0], [72300.0, 2.0], [77100.0, 1.0], [73900.0, 3.0], [138600.0, 10.0], [33300.0, 1.0], [34100.0, 1.0], [139500.0, 22.0], [38900.0, 3.0], [37300.0, 27.0], [38100.0, 1.0], [39700.0, 1.0], [41300.0, 1.0], [44500.0, 3.0], [43700.0, 3.0], [45300.0, 4.0], [46900.0, 1.0], [47700.0, 1.0], [48500.0, 1.0], [52500.0, 2.0], [51700.0, 3.0], [54100.0, 1.0], [57300.0, 1.0], [56500.0, 2.0], [58900.0, 2.0], [58100.0, 3.0], [61300.0, 3.0], [62100.0, 2.0], [62900.0, 2.0], [63700.0, 2.0], [65300.0, 1.0], [66600.0, 13.0], [69800.0, 3.0], [76200.0, 1.0], [77800.0, 29.0], [143600.0, 1.0], [141300.0, 2.0], [68900.0, 1.0], [70500.0, 2.0], [73700.0, 11.0], [75300.0, 4.0], [86500.0, 2.0], [8300.0, 84.0], [8700.0, 85.0], [8500.0, 57.0], [139000.0, 1.0], [8900.0, 145.0], [9100.0, 70.0], [9500.0, 246.0], [9700.0, 60.0], [9300.0, 164.0], [10100.0, 212.0], [9900.0, 59.0], [10700.0, 84.0], [10300.0, 88.0], [10500.0, 23.0], [10900.0, 28.0], [11100.0, 107.0], [11500.0, 55.0], [11700.0, 60.0], [11300.0, 80.0], [11900.0, 81.0], [12100.0, 83.0], [12500.0, 27.0], [12300.0, 86.0], [12700.0, 55.0], [12900.0, 117.0], [13300.0, 39.0], [13100.0, 132.0], [13500.0, 43.0], [13700.0, 78.0], [13900.0, 46.0], [14300.0, 12.0], [14100.0, 75.0], [14700.0, 61.0], [14500.0, 86.0], [15100.0, 22.0], [15300.0, 36.0], [14900.0, 10.0], [15700.0, 63.0], [15500.0, 64.0], [16100.0, 49.0], [16300.0, 144.0], [15900.0, 103.0], [17400.0, 85.0], [17000.0, 104.0], [16600.0, 51.0], [18200.0, 51.0], [17800.0, 106.0], [19000.0, 41.0], [18600.0, 40.0], [19400.0, 21.0], [20200.0, 21.0], [19800.0, 15.0], [20600.0, 41.0], [21000.0, 30.0], [21400.0, 9.0], [21800.0, 2.0], [22200.0, 2.0], [23000.0, 8.0], [23400.0, 9.0], [22600.0, 11.0], [23800.0, 16.0], [25000.0, 12.0], [24600.0, 12.0], [25800.0, 6.0], [26600.0, 8.0], [26200.0, 1.0], [27000.0, 20.0], [27800.0, 29.0], [28600.0, 9.0], [28200.0, 1.0], [29000.0, 9.0], [30200.0, 2.0], [31400.0, 15.0], [31000.0, 1.0], [32600.0, 6.0], [33200.0, 1.0], [34800.0, 8.0], [36400.0, 1.0], [37200.0, 20.0], [38800.0, 4.0], [38000.0, 11.0], [40400.0, 9.0], [42800.0, 4.0], [41200.0, 8.0], [44400.0, 5.0], [43600.0, 3.0], [45200.0, 9.0], [48400.0, 3.0], [51600.0, 3.0], [54000.0, 7.0], [54800.0, 2.0], [57200.0, 2.0], [58800.0, 1.0], [61200.0, 1.0], [62800.0, 3.0], [64400.0, 2.0], [69600.0, 6.0], [71200.0, 2.0], [117600.0, 19.0], [139200.0, 12.0], [72700.0, 2.0], [74300.0, 21.0], [80700.0, 12.0], [33500.0, 8.0], [138700.0, 7.0], [34300.0, 1.0], [35100.0, 1.0], [36700.0, 3.0], [38300.0, 3.0], [37500.0, 4.0], [39900.0, 3.0], [40700.0, 7.0], [41500.0, 30.0], [42300.0, 2.0], [44700.0, 4.0], [43900.0, 1.0], [46300.0, 1.0], [45500.0, 4.0], [47900.0, 2.0], [51100.0, 2.0], [50300.0, 3.0], [53500.0, 2.0], [54300.0, 2.0], [55900.0, 2.0], [58300.0, 2.0], [59900.0, 2.0], [60700.0, 2.0], [61500.0, 3.0], [63100.0, 52.0], [64700.0, 2.0], [63900.0, 37.0], [67000.0, 2.0], [73400.0, 6.0], [139600.0, 12.0], [137300.0, 21.0], [143700.0, 2.0], [67700.0, 1.0], [66100.0, 5.0], [72500.0, 2.0], [75700.0, 2.0], [74100.0, 23.0], [16700.0, 54.0], [17100.0, 48.0], [18300.0, 83.0], [17900.0, 75.0], [17500.0, 31.0], [19100.0, 16.0], [18700.0, 23.0], [19500.0, 79.0], [20300.0, 40.0], [19900.0, 15.0], [20700.0, 30.0], [21100.0, 26.0], [21500.0, 42.0], [21900.0, 2.0], [22300.0, 19.0], [22700.0, 8.0], [23100.0, 17.0], [23500.0, 18.0], [24300.0, 4.0], [23900.0, 5.0], [25100.0, 1.0], [24700.0, 4.0], [26300.0, 5.0], [27100.0, 29.0], [26700.0, 2.0], [27900.0, 2.0], [29100.0, 4.0], [29900.0, 2.0], [30300.0, 3.0], [31500.0, 2.0], [31100.0, 2.0], [32300.0, 5.0], [31900.0, 3.0], [32700.0, 6.0], [33400.0, 2.0], [139100.0, 4.0], [34200.0, 1.0], [35800.0, 3.0], [36600.0, 5.0], [37400.0, 4.0], [39800.0, 2.0], [41400.0, 7.0], [44600.0, 12.0], [43800.0, 1.0], [46200.0, 35.0], [45400.0, 9.0], [47800.0, 5.0], [51000.0, 3.0], [53400.0, 4.0], [55000.0, 1.0], [58200.0, 4.0], [57400.0, 1.0], [61400.0, 6.0], [60600.0, 2.0], [68400.0, 2.0], [76400.0, 1.0], [74800.0, 1.0], [79600.0, 7.0], [103600.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 143700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 63.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 17208.0, "series": [{"data": [[0.0, 1599.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1297.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 17208.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 63.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 365.0714285714287, "minX": 1.6830234E12, "maxY": 3000.0, "series": [{"data": [[1.68302346E12, 3000.0], [1.68302364E12, 2396.0201452330753], [1.68302352E12, 3000.0], [1.6830237E12, 365.0714285714287], [1.6830234E12, 3000.0], [1.68302358E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830237E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1122.0, "minX": 1.0, "maxY": 128428.0, "series": [{"data": [[2.0, 128427.0], [3.0, 128426.0], [4.0, 128423.0], [5.0, 128422.0], [6.0, 128422.0], [7.0, 128420.0], [8.0, 128417.0], [9.0, 128417.0], [10.0, 128413.0], [11.0, 128412.0], [12.0, 128410.0], [13.0, 3909.0], [15.0, 3907.5], [16.0, 3902.0], [17.0, 3895.0], [18.0, 3884.0], [19.0, 3881.0], [20.0, 3875.0], [21.0, 3866.0], [24.0, 3654.0], [25.0, 3653.6666666666665], [27.0, 3653.0], [29.0, 3652.0], [30.0, 3647.0], [31.0, 3645.0], [33.0, 3644.0], [32.0, 3644.0], [35.0, 3642.0], [34.0, 3642.0], [37.0, 3639.0], [36.0, 3641.0], [39.0, 3636.0], [38.0, 3637.0], [41.0, 3635.0], [40.0, 3635.0], [43.0, 3628.0], [42.0, 3634.0], [45.0, 3625.0], [44.0, 3625.0], [47.0, 3620.0], [46.0, 3623.0], [49.0, 3617.0], [51.0, 3615.0], [50.0, 3615.0], [53.0, 3610.0], [52.0, 3613.0], [55.0, 3607.0], [54.0, 3609.0], [57.0, 3599.0], [56.0, 3604.0], [59.0, 3598.0], [58.0, 3598.0], [61.0, 3592.0], [60.0, 3593.0], [63.0, 4520.0], [62.0, 3579.0], [66.0, 3123.0], [65.0, 3124.0], [64.0, 4517.0], [70.0, 3119.0], [69.0, 4514.0], [68.0, 4589.0], [75.0, 4292.8], [79.0, 4163.75], [82.0, 3118.0], [81.0, 4510.0], [80.0, 3118.0], [84.0, 4509.0], [99.0, 3932.2857142857138], [97.0, 4508.0], [103.0, 4459.0], [102.0, 4460.0], [101.0, 4610.0], [100.0, 4612.0], [107.0, 4456.0], [106.0, 4458.0], [105.0, 4459.0], [104.0, 4459.0], [111.0, 4602.0], [110.0, 4454.0], [109.0, 4456.0], [108.0, 4455.0], [115.0, 4449.0], [114.0, 4598.0], [113.0, 3058.0], [112.0, 4454.0], [119.0, 4445.0], [118.0, 4595.0], [117.0, 3056.0], [116.0, 4449.0], [123.0, 4441.0], [122.0, 4442.0], [121.0, 3050.0], [120.0, 4446.0], [127.0, 4587.0], [126.0, 3046.0], [125.0, 4514.0], [135.0, 4578.0], [134.0, 4580.0], [133.0, 4433.0], [132.0, 4433.0], [131.0, 4582.0], [130.0, 4435.0], [129.0, 4584.0], [128.0, 4438.0], [143.0, 4398.0], [142.0, 4564.0], [141.0, 4424.0], [140.0, 4500.5], [138.0, 4428.0], [137.0, 4428.0], [136.0, 4429.0], [151.0, 4392.0], [148.0, 4393.0], [147.0, 4396.0], [146.0, 4545.0], [145.0, 4398.0], [159.0, 4526.0], [158.0, 4379.0], [157.0, 4381.0], [156.0, 4384.0], [155.0, 4531.0], [154.0, 4383.0], [153.0, 4385.0], [152.0, 4389.0], [167.0, 4510.0], [165.0, 4512.0], [164.0, 4442.0], [162.0, 4518.0], [161.0, 4372.0], [160.0, 4374.0], [175.0, 4345.0], [174.0, 4493.0], [173.0, 4494.0], [172.0, 4500.0], [171.0, 4503.0], [170.0, 4503.0], [169.0, 4359.0], [168.0, 4507.0], [183.0, 4469.0], [182.0, 4472.0], [181.0, 4328.0], [180.0, 4477.0], [179.0, 4484.0], [178.0, 4337.0], [177.0, 4488.0], [176.0, 4491.0], [190.0, 4123.0], [189.0, 4124.0], [188.0, 4126.0], [187.0, 4126.0], [186.0, 4466.0], [184.0, 4468.0], [199.0, 3807.0], [197.0, 3808.0], [196.0, 4111.0], [195.0, 4112.0], [194.0, 4122.0], [193.0, 4116.0], [192.0, 4044.0], [207.0, 3661.0], [206.0, 3806.0], [203.0, 3806.0], [201.0, 3808.0], [200.0, 4551.0], [214.0, 4083.25], [210.0, 4127.0], [209.0, 3806.0], [223.0, 4050.0], [220.0, 3615.0], [219.0, 4547.0], [218.0, 4549.0], [217.0, 3674.6666666666665], [229.0, 4537.0], [228.0, 3696.0], [227.0, 3700.0], [225.0, 3615.0], [239.0, 3603.0], [238.0, 3790.0], [237.0, 3790.0], [236.0, 3943.6666666666665], [235.0, 3604.0], [232.0, 3631.0], [245.0, 4514.0], [244.0, 4266.666666666667], [241.0, 3772.0], [240.0, 3789.0], [253.0, 4510.0], [252.0, 4511.0], [251.0, 3767.0], [250.0, 3581.0], [249.0, 4513.0], [248.0, 3672.3333333333335], [270.0, 4490.0], [271.0, 3645.0], [269.0, 3560.0], [268.0, 4492.0], [267.0, 3749.0], [266.0, 3566.0], [265.0, 3565.0], [263.0, 3656.0], [257.0, 3879.0], [256.0, 3658.0], [259.0, 3756.0], [258.0, 3563.0], [262.0, 4500.0], [261.0, 3609.0], [285.0, 3640.0], [287.0, 4060.5], [284.0, 3739.0], [275.0, 3555.0], [272.0, 3559.0], [283.0, 3741.0], [282.0, 3691.5], [281.0, 4486.0], [279.0, 3643.0], [278.0, 4487.0], [276.0, 3644.0], [300.0, 3634.0], [302.0, 4105.5], [303.0, 3729.0], [301.0, 3634.0], [298.0, 4478.0], [297.0, 4479.0], [295.0, 3735.0], [289.0, 3738.5], [291.0, 3551.0], [290.0, 3545.0], [294.0, 3736.0], [293.0, 3549.0], [292.0, 3550.0], [318.0, 3505.0], [319.0, 3590.0], [317.0, 3692.0], [316.0, 3593.0], [315.0, 3507.0], [314.0, 3593.0], [313.0, 3594.0], [312.0, 3694.0], [311.0, 3698.0], [304.0, 3723.0], [307.0, 3985.5], [305.0, 4467.0], [310.0, 4442.0], [309.0, 4450.0], [308.0, 4451.0], [334.0, 3494.0], [335.0, 3487.0], [333.0, 3488.0], [332.0, 3588.5], [330.0, 3582.0], [329.0, 3682.0], [328.0, 3684.0], [327.0, 3586.5], [321.0, 3590.0], [320.0, 3503.0], [323.0, 3501.0], [322.0, 3502.0], [325.0, 3683.0], [324.0, 3584.0], [350.0, 4051.0], [349.0, 3485.0], [348.0, 3489.0], [345.0, 3788.8], [344.0, 4052.0], [341.0, 3680.0], [340.0, 3493.0], [339.0, 3494.0], [366.0, 3512.5], [367.0, 3556.0], [364.0, 4401.0], [355.0, 4422.0], [353.0, 3579.0], [363.0, 3471.0], [362.0, 3672.0], [361.0, 4417.0], [360.0, 3674.0], [359.0, 3581.5], [357.0, 3490.0], [356.0, 3814.0], [370.0, 3468.0], [382.0, 3553.0], [383.0, 3603.0], [380.0, 3654.0], [379.0, 3521.8], [375.0, 3654.0], [374.0, 3654.0], [372.0, 3555.5], [369.0, 3555.0], [368.0, 4400.0], [399.0, 3739.75], [391.0, 3464.0], [390.0, 3465.0], [389.0, 3465.0], [387.0, 3509.0], [385.0, 4025.0], [407.0, 3575.25], [406.0, 3548.0], [405.0, 3647.0], [401.0, 3550.0], [400.0, 3650.0], [430.0, 3449.0], [431.0, 3360.0], [429.0, 3498.0], [419.0, 3613.1666666666665], [417.0, 3674.5], [427.0, 3362.0], [426.0, 3450.0], [425.0, 3357.0], [424.0, 4302.0], [423.0, 3376.0], [422.0, 3483.0], [421.0, 3544.0], [420.0, 3546.0], [446.0, 3273.0], [447.0, 4203.0], [445.0, 3273.0], [444.0, 3280.0], [443.0, 3367.0], [442.0, 3282.0], [441.0, 3751.0], [439.0, 3474.0], [435.0, 3731.6666666666665], [432.0, 3447.0], [438.0, 3400.0], [437.0, 3450.5], [462.0, 3313.0], [463.0, 3411.0], [461.0, 3317.0], [451.0, 3261.0], [450.0, 3355.0], [449.0, 3271.0], [448.0, 3359.0], [459.0, 3325.0], [458.0, 3239.0], [457.0, 3426.0], [456.0, 3242.0], [455.0, 3345.0], [454.0, 3262.0], [453.0, 3263.0], [452.0, 4197.0], [478.0, 1186.0], [479.0, 1184.0], [477.0, 1190.5], [467.0, 1914.0], [466.0, 4101.0], [464.0, 3309.0], [475.0, 1190.0], [474.0, 1192.0], [473.0, 1196.0], [472.0, 1199.0], [471.0, 1199.0], [469.0, 1200.0], [468.0, 1913.0], [494.0, 1232.0], [495.0, 1231.0], [493.0, 1236.0], [492.0, 1237.0], [491.0, 1239.0], [490.0, 1240.0], [489.0, 1241.0], [488.0, 1241.0], [487.0, 1245.0], [481.0, 1181.0], [480.0, 1183.0], [483.0, 1522.0], [482.0, 1524.0], [486.0, 1517.0], [485.0, 1520.0], [484.0, 1521.0], [510.0, 1212.0], [511.0, 1209.0], [508.0, 1212.0], [499.0, 1228.0], [498.0, 1229.0], [497.0, 1230.0], [496.0, 1230.0], [507.0, 1214.0], [506.0, 1216.0], [505.0, 1217.0], [503.0, 1221.0], [502.0, 1222.0], [501.0, 1226.0], [500.0, 1226.0], [538.0, 1150.0], [542.0, 1144.0], [536.0, 1158.0], [518.0, 1203.0], [512.0, 1208.0], [534.0, 1160.0], [532.0, 1163.0], [530.0, 1184.0], [528.0, 1188.0], [526.0, 1193.0], [524.0, 1193.0], [522.0, 1196.0], [520.0, 1201.0], [572.0, 1795.0], [574.0, 1794.0], [570.0, 1798.5], [568.0, 1803.6666666666667], [564.0, 1807.0], [562.0, 1809.0], [560.0, 1811.0], [558.0, 1814.0], [546.0, 1131.0], [544.0, 1135.0], [550.0, 1829.0], [548.0, 1124.0], [556.0, 1816.0], [554.0, 1826.0], [552.0, 1828.0], [602.0, 1152.0], [604.0, 1148.0], [600.0, 1153.0], [582.0, 1777.0], [580.0, 1786.0], [576.0, 1791.0], [598.0, 1156.0], [596.0, 1159.0], [594.0, 1741.0], [592.0, 1752.0], [590.0, 1754.0], [586.0, 1763.0], [584.0, 1774.0], [636.0, 1314.0], [638.0, 1313.0], [634.0, 1320.0], [632.0, 1325.0], [628.0, 1326.0], [626.0, 1328.0], [624.0, 1328.0], [622.0, 1329.0], [610.0, 1138.0], [608.0, 1141.0], [614.0, 1131.0], [612.0, 1136.0], [620.0, 1330.0], [616.0, 1334.0], [668.0, 1261.5], [670.0, 1256.0], [666.0, 1261.0], [664.0, 1265.0], [662.0, 1267.0], [660.0, 1270.0], [658.0, 1275.0], [654.0, 1281.0], [642.0, 1302.0], [640.0, 1305.0], [646.0, 1291.0], [644.0, 1301.0], [652.0, 1286.0], [650.0, 1288.0], [648.0, 1290.0], [678.0, 1214.0], [702.0, 1918.0], [698.0, 1922.0], [676.0, 1229.0], [674.0, 1250.0], [672.0, 1251.0], [694.0, 1926.0], [692.0, 1929.0], [690.0, 1930.0], [686.0, 1934.0], [684.0, 1935.0], [682.0, 1123.0], [680.0, 1201.0], [732.0, 1194.0], [734.0, 1190.0], [730.0, 1194.5], [728.0, 1858.3333333333333], [724.0, 1860.0], [722.0, 1863.0], [720.0, 1866.0], [718.0, 1882.0], [706.0, 1916.0], [704.0, 1916.0], [710.0, 1906.0], [708.0, 1907.0], [716.0, 1884.0], [714.0, 1887.0], [712.0, 1888.0], [762.0, 1274.0], [764.0, 1272.0], [760.0, 1278.0], [758.0, 1280.0], [756.0, 1282.0], [754.0, 1288.0], [748.0, 1147.0], [746.0, 1171.0], [738.0, 1173.0], [736.0, 1176.0], [796.0, 1241.0], [798.0, 1237.0], [792.0, 1245.0], [772.0, 1265.0], [770.0, 1268.0], [768.0, 1271.0], [790.0, 1247.0], [788.0, 1249.0], [786.0, 1252.0], [784.0, 1254.0], [782.0, 1255.0], [780.0, 1257.0], [778.0, 1259.0], [776.0, 1262.0], [826.0, 1290.0], [828.0, 1287.5], [824.0, 1291.0], [806.0, 1203.0], [804.0, 1215.0], [802.0, 1221.0], [800.0, 1226.0], [822.0, 1292.0], [820.0, 1293.0], [816.0, 1135.0], [814.0, 1150.0], [812.0, 1163.0], [810.0, 1174.0], [808.0, 1195.0], [858.0, 1256.0], [860.0, 1252.0], [856.0, 1258.0], [834.0, 1278.0], [832.0, 1282.0], [854.0, 1258.0], [852.0, 1261.5], [848.0, 1264.0], [846.0, 1265.0], [844.0, 1268.0], [842.0, 1271.0], [840.0, 1274.0], [870.0, 1214.0], [894.0, 1232.0], [890.0, 1236.0], [884.0, 1243.0], [880.0, 1149.0], [878.0, 1172.0], [876.0, 1175.0], [874.0, 1181.0], [872.0, 1203.0], [868.0, 1250.0], [864.0, 1251.0], [924.0, 1208.0], [920.0, 1213.0], [918.0, 1213.0], [912.0, 1221.0], [910.0, 1223.0], [904.0, 1225.0], [900.0, 1225.0], [898.0, 1227.0], [956.0, 2061.0], [958.0, 2059.0], [952.0, 2064.0], [934.0, 1177.5], [932.0, 1190.0], [930.0, 1190.0], [928.0, 1191.0], [950.0, 1122.0], [948.0, 1122.0], [946.0, 1150.0], [944.0, 1155.0], [942.0, 1156.0], [940.0, 1167.0], [938.0, 1169.0], [936.0, 1172.0], [988.0, 2027.0], [990.0, 2026.0], [986.0, 2029.0], [984.0, 2031.0], [982.0, 2032.0], [980.0, 2033.0], [978.0, 2036.0], [976.0, 2036.0], [974.0, 2038.0], [962.0, 2054.0], [960.0, 2056.0], [966.0, 2049.0], [964.0, 2052.0], [972.0, 2040.0], [970.0, 2043.0], [968.0, 2047.0], [1020.0, 1352.0], [1022.0, 1350.0], [1008.0, 1154.0], [1010.0, 1153.0], [1016.0, 1147.0], [998.0, 1163.0], [996.0, 1989.0], [994.0, 1990.0], [992.0, 2013.0], [1014.0, 1148.0], [1006.0, 1156.0], [1002.0, 1159.0], [1000.0, 1161.0], [1080.0, 1244.0], [1084.0, 1149.0], [1056.0, 1308.0], [1060.0, 1298.0], [1064.0, 1295.0], [1076.0, 1257.0], [1072.0, 1280.0], [1036.0, 1337.0], [1028.0, 1343.0], [1024.0, 1348.0], [1044.0, 1326.0], [1040.0, 1333.25], [1068.0, 1290.0], [1144.0, 1174.0], [1148.0, 1160.0], [1120.0, 1217.0], [1124.0, 1215.0], [1136.0, 1194.0], [1100.0, 1240.0], [1096.0, 1243.0], [1092.0, 1247.0], [1116.0, 1222.0], [1112.0, 1226.0], [1108.0, 1232.0], [1104.0, 1238.0], [1128.0, 1207.5], [1200.0, 1191.0], [1208.0, 1174.0], [1184.0, 1218.0], [1188.0, 1213.0], [1212.0, 1164.0], [1204.0, 1179.0], [1152.0, 1252.0], [1160.0, 1245.0], [1180.0, 1222.0], [1176.0, 1228.0], [1172.0, 1233.0], [1168.0, 1237.0], [1196.0, 1196.0], [1192.0, 1204.0], [1272.0, 1170.0], [1276.0, 1161.0], [1248.0, 1226.0], [1252.0, 1214.0], [1256.0, 1210.0], [1264.0, 1191.0], [1228.0, 1249.0], [1220.0, 1251.0], [1216.0, 1149.0], [1244.0, 1230.5], [1240.0, 1246.0], [1260.0, 1209.0], [1336.0, 2070.0], [1312.0, 2751.0], [1316.0, 2559.0], [1340.0, 2533.0], [1332.0, 2074.0], [1328.0, 2548.0], [1280.0, 1156.5], [1292.0, 2795.0], [1308.0, 2769.0], [1304.0, 2776.0], [1300.0, 2783.0], [1296.0, 2788.0], [1324.0, 2078.0], [1396.0, 2472.0], [1376.0, 2028.0], [1380.0, 2496.0], [1400.0, 2458.0], [1344.0, 2542.0], [1348.0, 2528.0], [1352.0, 2051.0], [1356.0, 2529.0], [1372.0, 2032.0], [1368.0, 2036.0], [1364.0, 2039.0], [1360.0, 2044.0], [1388.0, 2500.0], [1384.0, 2493.0], [1460.0, 2341.3333333333335], [1468.0, 2332.0], [1440.0, 2356.0], [1444.0, 2362.0], [1456.0, 2339.0], [1420.0, 2398.0], [1416.0, 2403.0], [1408.0, 2408.0], [1436.0, 2371.0], [1432.0, 2366.0], [1428.0, 2382.0], [1424.0, 2404.0], [1452.0, 2355.0], [1448.0, 2357.0], [1524.0, 1817.0], [1532.0, 1807.0], [1504.0, 2008.0], [1508.0, 1885.0], [1512.0, 1865.0], [1520.0, 1824.0], [1484.0, 2286.0], [1480.0, 2284.0], [1476.0, 2312.0], [1472.0, 2326.0], [1500.0, 2037.0], [1496.0, 63467.0], [1492.0, 63473.0], [1488.0, 63478.0], [1516.0, 1828.0], [1592.0, 2542.0], [1584.0, 2563.0], [1568.0, 2608.0], [1536.0, 1799.0], [1540.0, 1763.0], [1544.0, 1694.0], [1548.0, 1238.0], [1564.0, 1223.0], [1552.0, 1234.5], [1580.0, 2580.0], [1576.0, 2595.0], [1656.0, 66144.0], [1660.0, 3293.0], [1632.0, 3346.0], [1640.0, 66178.0], [1652.0, 3318.0], [1648.0, 3329.0], [1612.0, 2439.0], [1608.0, 2444.0], [1604.0, 2468.0], [1600.0, 2468.0], [1628.0, 2802.5], [1624.0, 3355.0], [1620.0, 2419.0], [1616.0, 2433.0], [1644.0, 3331.0], [1720.0, 2708.0], [1700.0, 3323.0], [1704.0, 2734.0], [1724.0, 3264.0], [1716.0, 3295.0], [1712.0, 2723.0], [1668.0, 2774.0], [1672.0, 2770.0], [1676.0, 2766.0], [1692.0, 2753.0], [1688.0, 3335.0], [1684.0, 2760.0], [1680.0, 2763.0], [1708.0, 2727.0], [1784.0, 3841.0], [1760.0, 3047.0], [1764.0, 3870.0], [1768.0, 3864.0], [1780.0, 3850.0], [1776.0, 4070.0], [1740.0, 3065.0], [1736.0, 3691.25], [1732.0, 3902.0], [1728.0, 2667.0], [1748.0, 3059.0], [1744.0, 3479.0], [1772.0, 3853.0], [1800.0, 3824.0], [1848.0, 3952.0], [1840.0, 3778.0], [1836.0, 3779.0], [1828.0, 3789.0], [1792.0, 3832.0], [1804.0, 3822.0], [1820.0, 3791.0], [1816.0, 2961.0], [1808.0, 2977.0], [1912.0, 2483.0], [1916.0, 3281.0], [1868.0, 2851.0], [1864.0, 3268.0], [1860.0, 3914.5], [1900.0, 67646.0], [1888.0, 2503.0], [1880.0, 2513.0], [1876.0, 3316.0], [1976.0, 35344.0], [1980.0, 67512.0], [1960.0, 2403.0], [1952.0, 3239.0], [1956.0, 3235.0], [1964.0, 3200.0], [1972.0, 34947.5], [1968.0, 3185.0], [1924.0, 3274.0], [1920.0, 3276.0], [1928.0, 3272.0], [1932.0, 3264.0], [1940.0, 3259.0], [1936.0, 3261.0], [2040.0, 5119.0], [2044.0, 5114.0], [2024.0, 4567.0], [2016.0, 4576.0], [2020.0, 4570.0], [2028.0, 4564.0], [2032.0, 4560.0], [1984.0, 67504.0], [1988.0, 67499.0], [1992.0, 2343.0], [1996.0, 3141.0], [2012.0, 4578.0], [2008.0, 67463.0], [2004.0, 3130.0], [2152.0, 4406.0], [2160.0, 4413.0], [2112.0, 4454.0], [2168.0, 4300.0], [2048.0, 4547.0], [2056.0, 35921.0], [2064.0, 4529.0], [2072.0, 4509.0], [2104.0, 5037.0], [2096.0, 5046.0], [2088.0, 5056.0], [2080.0, 4498.0], [2288.0, 5475.0], [2280.0, 4305.0], [2248.0, 4484.0], [2240.0, 4761.5], [2264.0, 4746.0], [2296.0, 4122.0], [2184.0, 4289.0], [2192.0, 4388.0], [2200.0, 4360.0], [2224.0, 4232.0], [2208.0, 4345.0], [2416.0, 2736.0], [2424.0, 2171.0], [2368.0, 2263.0], [2376.0, 2258.0], [2384.0, 2248.0], [2392.0, 2239.0], [2408.0, 2222.0], [2400.0, 2228.0], [2304.0, 5443.0], [2312.0, 5431.0], [2320.0, 4221.0], [2360.0, 4145.0], [2336.0, 5428.0], [2536.0, 1828.0], [2504.0, 1659.0], [2496.0, 2337.0], [2512.0, 73757.625], [2520.0, 1845.0], [2528.0, 1835.0], [2432.0, 2204.0], [2488.0, 2379.0], [2472.0, 2445.0], [2464.0, 2037.3333333333333], [2672.0, 1356.0], [2656.0, 1684.0], [2624.0, 1563.5], [2640.0, 1706.5], [2648.0, 1705.0], [2680.0, 1500.5], [2664.0, 1665.0], [2584.0, 2124.0], [2576.0, 2829.0], [2568.0, 1752.0], [2560.0, 1763.0], [2616.0, 1422.0], [2600.0, 1426.0], [2592.0, 2110.0], [2792.0, 3837.5], [2800.0, 3605.0], [2752.0, 1419.0], [2760.0, 2237.0], [2768.0, 2634.0], [2776.0, 3865.0], [2784.0, 3852.0], [2704.0, 1961.0], [2688.0, 2518.0], [2744.0, 1438.0], [2736.0, 1446.0], [2728.0, 1455.0], [2912.0, 3482.0], [2888.0, 3500.0], [2936.0, 3589.0], [2920.0, 3864.0], [2816.0, 18771.0], [2872.0, 3906.0], [2864.0, 3945.5], [2856.0, 3919.0], [2848.0, 3130.0], [2944.0, 3849.0], [3000.0, 14421.325315939654], [2952.0, 3789.0], [2960.0, 10801.5], [2992.0, 3298.0], [2984.0, 10754.5], [2976.0, 3354.0], [2153.0, 4856.0], [2073.0, 66721.0], [2113.0, 5020.0], [2121.0, 4317.0], [2161.0, 4413.0], [2065.0, 35920.0], [2049.0, 5105.0], [2105.0, 4470.0], [2097.0, 5044.0], [2081.0, 4497.0], [2289.0, 4250.0], [2257.0, 4256.5], [2265.0, 4746.0], [2297.0, 4674.0], [2281.0, 4583.285714285715], [2273.0, 4524.5], [2177.0, 4396.25], [2185.0, 4288.0], [2193.0, 4375.0], [2201.0, 4259.0], [2233.0, 4670.25], [2209.0, 4357.0], [2409.0, 2220.0], [2425.0, 2167.0], [2369.0, 2264.0], [2377.0, 2255.0], [2385.0, 2246.0], [2393.0, 2237.0], [2401.0, 2757.0], [2321.0, 4571.6], [2313.0, 4220.0], [2305.0, 4667.0], [2361.0, 5355.0], [2353.0, 5367.0], [2345.0, 4202.5], [2337.0, 4324.5], [2545.0, 1808.0], [2497.0, 1670.0], [2513.0, 1850.0], [2553.0, 1793.0], [2537.0, 1816.0], [2529.0, 1832.0], [2433.0, 2203.0], [2489.0, 2358.0], [2481.0, 1956.3333333333333], [2473.0, 1800.0], [2465.0, 1815.0], [2681.0, 1635.0], [2673.0, 1356.0], [2625.0, 1414.0], [2633.0, 1558.5], [2641.0, 1556.5], [2649.0, 1705.5], [2665.0, 1665.0], [2657.0, 1681.0], [2585.0, 2122.0], [2577.0, 2826.0], [2561.0, 1764.0], [2617.0, 1720.0], [2609.0, 1500.0], [2593.0, 2108.0], [2793.0, 3829.0], [2785.0, 3852.0], [2753.0, 1415.0], [2761.0, 1405.0], [2769.0, 1390.0], [2777.0, 1375.0], [2809.0, 3679.3333333333335], [2801.0, 3601.0], [2713.0, 1476.5], [2705.0, 1959.0], [2697.0, 1579.0], [2689.0, 1613.0], [2745.0, 1433.0], [2737.0, 1445.0], [2729.0, 1453.0], [2721.0, 2706.5], [2929.0, 10682.0], [2881.0, 3702.5], [2937.0, 3932.0], [2897.0, 3618.25], [2921.0, 3462.0], [2817.0, 18410.0], [2841.0, 3680.6666666666665], [2873.0, 3505.0], [2849.0, 3130.0], [2953.0, 3858.0], [2945.0, 3427.0], [2969.0, 3796.5], [2985.0, 3309.0], [2977.0, 3754.0], [1081.0, 1242.0], [1057.0, 1303.0], [1061.0, 1298.0], [1065.0, 1295.0], [1085.0, 1256.0], [1077.0, 1257.0], [1073.0, 1273.0], [1053.0, 1310.0], [1029.0, 1342.0], [1033.0, 1339.5], [1045.0, 1325.0], [1041.0, 1330.0], [1069.0, 1289.0], [1145.0, 1166.0], [1121.0, 1216.0], [1125.0, 1212.0], [1129.0, 1205.0], [1149.0, 1158.0], [1141.0, 1182.0], [1137.0, 1192.0], [1089.0, 1251.0], [1093.0, 1249.0], [1097.0, 1242.0], [1101.0, 1240.0], [1113.0, 1225.0], [1109.0, 1231.0], [1105.0, 1234.0], [1133.0, 1202.0], [1205.0, 1178.0], [1213.0, 1159.0], [1185.0, 1217.0], [1193.0, 1200.0], [1209.0, 1170.0], [1165.0, 1240.0], [1161.0, 1245.0], [1157.0, 1248.5], [1181.0, 1222.0], [1177.0, 1226.0], [1173.0, 1232.0], [1169.0, 1235.0], [1197.0, 1194.0], [1265.0, 1185.0], [1277.0, 1158.0], [1273.0, 1168.0], [1269.0, 1175.0], [1229.0, 1247.0], [1225.0, 1250.0], [1217.0, 1140.0], [1245.0, 1231.0], [1241.0, 1245.0], [1237.0, 1247.0], [1261.0, 1209.0], [1337.0, 2064.0], [1341.0, 2062.0], [1313.0, 2584.0], [1317.0, 2567.0], [1281.0, 1155.0], [1285.0, 1142.5], [1289.0, 2799.0], [1293.0, 2792.0], [1309.0, 2764.0], [1305.0, 2773.0], [1301.0, 2782.0], [1297.0, 2788.0], [1325.0, 2550.0], [1321.0, 2081.5], [1401.0, 2425.0], [1405.0, 2176.0], [1377.0, 2509.0], [1381.0, 2022.0], [1345.0, 2059.0], [1349.0, 2055.0], [1353.0, 2522.0], [1357.0, 2046.0], [1373.0, 2514.0], [1369.0, 2034.0], [1365.0, 2521.0], [1361.0, 2527.0], [1389.0, 2498.0], [1385.0, 2493.0], [1461.0, 2341.0], [1469.0, 2332.0], [1441.0, 2355.0], [1445.0, 2350.0], [1465.0, 2337.0], [1457.0, 2347.0], [1421.0, 2397.0], [1413.0, 2412.0], [1409.0, 2418.0], [1437.0, 2359.0], [1433.0, 2365.0], [1429.0, 2380.0], [1425.0, 2403.0], [1453.0, 2343.0], [1529.0, 1812.0], [1533.0, 1804.0], [1505.0, 2008.0], [1509.0, 1884.0], [1525.0, 1817.0], [1473.0, 2321.0], [1477.0, 2304.0], [1481.0, 2284.0], [1485.0, 2277.0], [1501.0, 2034.0], [1497.0, 63467.0], [1493.0, 63471.0], [1489.0, 63479.0], [1517.0, 1827.0], [1513.0, 1857.0], [1585.0, 2561.0], [1593.0, 2537.0], [1597.0, 2469.0], [1569.0, 2608.0], [1573.0, 1902.5], [1589.0, 2553.0], [1537.0, 1793.0], [1541.0, 1759.0], [1549.0, 1237.0], [1545.0, 1687.0], [1565.0, 2610.0], [1561.0, 1225.0], [1557.0, 2618.0], [1581.0, 2578.0], [1577.0, 2594.0], [1657.0, 3306.0], [1633.0, 3344.0], [1637.0, 2790.5], [1641.0, 2236.0], [1661.0, 3289.0], [1653.0, 3310.0], [1649.0, 66165.0], [1605.0, 2467.5], [1609.0, 2445.0], [1613.0, 2439.0], [1629.0, 2249.0], [1625.0, 3354.0], [1621.0, 2414.0], [1617.0, 2431.0], [1645.0, 3331.0], [1721.0, 3286.0], [1697.0, 3038.0], [1701.0, 2739.0], [1705.0, 3311.0], [1725.0, 2683.0], [1717.0, 3294.0], [1713.0, 2722.0], [1665.0, 3287.0], [1673.0, 2769.0], [1677.0, 2765.0], [1693.0, 2752.0], [1689.0, 2755.0], [1685.0, 2759.0], [1681.0, 3341.0], [1781.0, 3849.0], [1789.0, 3834.0], [1761.0, 3045.0], [1765.0, 3033.0], [1769.0, 3027.0], [1785.0, 3838.0], [1741.0, 3064.0], [1729.0, 3904.0], [1757.0, 3887.0], [1749.0, 3892.0], [1745.0, 3895.0], [1841.0, 3771.0], [1849.0, 2900.0], [1853.0, 3951.0], [1845.0, 3845.5], [1793.0, 3830.0], [1801.0, 3823.0], [1805.0, 4036.0], [1817.0, 3794.0], [1809.0, 3812.0], [1909.0, 2891.0], [1917.0, 67627.0], [1889.0, 2502.0], [1897.0, 3302.0], [1905.0, 2490.0], [1869.0, 2850.0], [1865.0, 3267.0], [1861.0, 3271.0], [1857.0, 3815.0], [1881.0, 3313.0], [1877.0, 3316.0], [1873.0, 2916.5], [1901.0, 3297.0], [1973.0, 2372.0], [1981.0, 67511.0], [1957.0, 3234.0], [1961.0, 67551.0], [1965.0, 2394.0], [1969.0, 67531.0], [1921.0, 67623.0], [1929.0, 3272.0], [1933.0, 67610.0], [1945.0, 2991.0], [1937.0, 3260.0], [2045.0, 4548.0], [2017.0, 4574.0], [2021.0, 4570.0], [2025.0, 4565.0], [2029.0, 66776.0], [2041.0, 4551.0], [2037.0, 4558.0], [1985.0, 67500.0], [1989.0, 3149.0], [1993.0, 67491.0], [1997.0, 3140.0], [2013.0, 66790.0], [2009.0, 4581.0], [2005.0, 67476.0], [2001.0, 2329.5], [2154.0, 4404.0], [2122.0, 4318.0], [2114.0, 5019.0], [2138.0, 4641.5], [2170.0, 4348.5], [2146.0, 4413.333333333333], [2050.0, 4536.0], [2066.0, 4527.0], [2074.0, 4508.0], [2098.0, 4476.0], [2090.0, 35593.5], [2082.0, 4496.0], [2282.0, 4718.0], [2242.0, 4316.0], [2258.0, 4758.0], [2266.0, 4745.0], [2290.0, 4701.0], [2274.0, 4525.0], [2178.0, 4844.0], [2186.0, 4835.0], [2194.0, 4383.0], [2202.0, 4348.0], [2226.0, 4561.5], [2218.0, 4233.0], [2210.0, 4350.5], [2418.0, 2192.5], [2426.0, 2164.0], [2370.0, 2263.0], [2378.0, 2253.0], [2386.0, 2245.0], [2410.0, 2217.0], [2306.0, 4663.0], [2330.0, 4220.0], [2362.0, 5351.0], [2354.0, 4761.0], [2554.0, 1793.0], [2498.0, 2313.0], [2514.0, 1849.0], [2522.0, 1846.0], [2530.0, 1832.0], [2434.0, 2201.0], [2490.0, 1708.0], [2482.0, 1740.0], [2658.0, 1668.0], [2626.0, 1713.0], [2682.0, 2536.0], [2666.0, 1660.0], [2586.0, 2120.0], [2578.0, 2171.0], [2618.0, 1421.0], [2594.0, 2105.0], [2810.0, 3941.0], [2794.0, 3612.0], [2754.0, 1415.0], [2762.0, 1401.0], [2770.0, 1389.0], [2778.0, 1372.0], [2786.0, 1364.0], [2714.0, 1475.0], [2706.0, 1957.0], [2746.0, 3917.0], [2738.0, 1444.0], [2730.0, 1453.0], [2722.0, 1461.0], [2914.0, 3681.5], [2938.0, 3453.0], [2882.0, 3501.0], [2898.0, 3898.0], [2818.0, 3559.0], [2834.0, 3656.25], [2842.0, 3547.0], [2874.0, 11129.5], [2858.0, 3956.0], [2946.0, 3395.0], [2954.0, 3378.0], [2994.0, 3736.5], [2962.0, 3772.5], [2970.0, 3756.0], [2986.0, 3707.0], [2978.0, 3750.0], [2163.0, 4407.5], [2115.0, 4451.0], [2131.0, 4416.0], [2139.0, 4415.0], [2171.0, 4410.0], [2075.0, 4506.0], [2067.0, 4522.0], [2051.0, 5103.0], [2107.0, 35858.5], [2099.0, 4476.0], [2083.0, 4495.0], [2283.0, 4718.0], [2243.0, 4762.0], [2259.0, 4550.285714285715], [2291.0, 4248.0], [2179.0, 4391.0], [2187.0, 4379.0], [2195.0, 4379.0], [2219.0, 4426.25], [2211.0, 4339.0], [2419.0, 2192.0], [2427.0, 2672.0], [2371.0, 2262.0], [2379.0, 2252.0], [2387.0, 2245.0], [2395.0, 2237.0], [2411.0, 2744.0], [2403.0, 2226.5], [2331.0, 4657.0], [2323.0, 4433.0], [2315.0, 4660.0], [2363.0, 4118.0], [2355.0, 5363.0], [2347.0, 4206.0], [2547.0, 2355.5], [2555.0, 2886.0], [2499.0, 1669.0], [2515.0, 1849.0], [2523.0, 1843.0], [2539.0, 2360.5], [2531.0, 1831.0], [2491.0, 1704.0], [2483.0, 1741.0], [2475.0, 1799.5], [2683.0, 2529.0], [2675.0, 1652.5], [2627.0, 1712.0], [2635.0, 1708.0], [2643.0, 1555.5], [2651.0, 1700.5], [2587.0, 2119.0], [2579.0, 2167.0], [2571.0, 1751.3333333333333], [2563.0, 2308.5], [2603.0, 1426.0], [2787.0, 1356.0], [2715.0, 1474.0], [2763.0, 1399.0], [2771.0, 1387.0], [2779.0, 8990.0], [2803.0, 3599.0], [2707.0, 1481.0], [2699.0, 2030.0], [2691.0, 1605.5], [2747.0, 1428.0], [2739.0, 1444.0], [2723.0, 1461.0], [2931.0, 3457.0], [2891.0, 3901.0], [2899.0, 3496.0], [2907.0, 3618.3333333333335], [2939.0, 3853.0], [2923.0, 3862.0], [2915.0, 3481.0], [2819.0, 3559.0], [2827.0, 18406.0], [2835.0, 4033.0], [2843.0, 4011.0], [2859.0, 3507.0], [2851.0, 10955.5], [2947.0, 3794.0], [2955.0, 3779.0], [2963.0, 3373.0], [2995.0, 3296.0], [2979.0, 3747.0], [541.0, 1146.0], [543.0, 1137.0], [539.0, 1147.0], [537.0, 1149.0], [535.0, 1159.0], [533.0, 1161.0], [531.0, 1172.0], [529.0, 1185.0], [527.0, 1192.0], [515.0, 1203.5], [513.0, 1204.0], [523.0, 1195.0], [521.0, 1196.0], [551.0, 1828.0], [573.0, 1795.0], [575.0, 1792.0], [571.0, 1798.0], [549.0, 1831.0], [547.0, 1128.0], [545.0, 1132.0], [565.0, 1804.0], [563.0, 1807.0], [559.0, 1812.0], [557.0, 1815.0], [555.0, 1824.0], [553.0, 1826.0], [605.0, 1147.0], [607.0, 1143.0], [603.0, 1150.0], [601.0, 1152.0], [599.0, 1155.0], [597.0, 1156.0], [595.0, 1159.0], [593.0, 1751.0], [591.0, 1753.0], [577.0, 1790.0], [581.0, 1784.0], [579.0, 1787.5], [589.0, 1758.5], [587.0, 1761.0], [585.0, 1765.0], [633.0, 1323.0], [637.0, 1314.0], [639.0, 1311.0], [635.0, 1317.0], [631.0, 1325.0], [625.0, 1328.0], [621.0, 1329.0], [611.0, 1136.0], [609.0, 1139.0], [615.0, 1128.0], [613.0, 1135.0], [619.0, 1330.0], [617.0, 1331.0], [669.0, 1259.0], [671.0, 1254.0], [665.0, 1264.0], [647.0, 1290.0], [645.0, 1300.0], [643.0, 1302.0], [641.0, 1303.0], [663.0, 1267.0], [661.0, 1269.0], [659.0, 1274.0], [657.0, 1276.5], [655.0, 1278.0], [653.0, 1282.0], [651.0, 1286.0], [649.0, 1290.0], [701.0, 1919.0], [703.0, 1916.0], [697.0, 1922.0], [679.0, 1213.0], [677.0, 1215.0], [675.0, 1240.0], [673.0, 1250.0], [695.0, 1923.0], [693.0, 1927.0], [689.0, 1932.0], [687.0, 1932.0], [685.0, 1934.0], [683.0, 1936.0], [681.0, 1126.0], [735.0, 1188.0], [733.0, 1190.0], [725.0, 1859.0], [721.0, 1864.0], [719.0, 1881.0], [717.0, 1882.0], [715.0, 1887.0], [711.0, 1888.0], [707.0, 1914.0], [763.0, 1273.0], [767.0, 1271.3333333333333], [761.0, 1276.0], [743.0, 1171.6], [737.0, 1175.0], [759.0, 1280.0], [757.0, 1281.0], [755.0, 1283.0], [753.0, 1288.0], [751.0, 1289.0], [749.0, 1144.0], [747.0, 1168.0], [745.0, 1171.0], [797.0, 1238.0], [799.0, 1228.0], [795.0, 1241.0], [793.0, 1244.0], [791.0, 1246.0], [789.0, 1248.0], [787.0, 1250.0], [785.0, 1252.0], [783.0, 1254.0], [771.0, 1265.0], [769.0, 1269.0], [775.0, 1262.0], [773.0, 1264.0], [781.0, 1257.0], [779.0, 1258.0], [777.0, 1260.0], [807.0, 1195.0], [829.0, 1286.0], [831.0, 1285.5], [825.0, 1290.0], [805.0, 1208.0], [803.0, 1216.0], [801.0, 1221.0], [821.0, 1294.0], [817.0, 1295.0], [815.0, 1136.0], [813.0, 1162.0], [811.0, 1173.0], [809.0, 1191.0], [839.0, 1275.0], [863.0, 1251.0], [859.0, 1255.0], [837.0, 1275.0], [835.0, 1278.0], [833.0, 1280.0], [853.0, 1259.0], [851.0, 1262.0], [849.0, 1262.0], [847.0, 1264.0], [845.0, 1267.0], [843.0, 1268.0], [841.0, 1274.0], [893.0, 1233.0], [895.0, 1230.0], [891.0, 1234.0], [889.0, 1239.25], [885.0, 1240.0], [883.0, 1146.0], [881.0, 1147.0], [877.0, 1171.0], [869.0, 1214.0], [865.0, 1250.0], [875.0, 1180.0], [873.0, 1182.0], [925.0, 1193.0], [927.0, 1193.5], [923.0, 1212.3333333333333], [903.0, 1226.0], [901.0, 1226.0], [899.0, 1227.0], [897.0, 1229.0], [919.0, 1213.0], [915.0, 1214.0], [913.0, 1215.0], [911.0, 1223.0], [909.0, 1223.0], [907.0, 1224.0], [905.0, 1225.0], [957.0, 2060.0], [959.0, 2057.0], [955.0, 2062.5], [953.0, 2062.0], [951.0, 2064.0], [949.0, 1122.0], [947.0, 1125.0], [945.0, 1152.0], [943.0, 1157.0], [935.0, 1177.0], [931.0, 1189.0], [941.0, 1159.0], [939.0, 1166.0], [937.0, 1169.0], [987.0, 2028.0], [991.0, 2014.0], [985.0, 2030.0], [967.0, 2048.0], [965.0, 2052.0], [963.0, 2053.0], [961.0, 2055.0], [981.0, 2032.0], [979.0, 2035.0], [977.0, 2035.0], [975.0, 2036.0], [973.0, 2039.0], [971.0, 2040.0], [969.0, 2045.0], [1021.0, 1352.0], [1009.0, 1153.0], [1023.0, 1349.0], [1013.0, 1150.0], [1011.0, 1151.0], [1019.0, 1249.0], [1017.0, 1353.0], [1007.0, 1156.0], [995.0, 1990.0], [993.0, 2010.0], [999.0, 1162.0], [997.0, 1164.0], [1005.0, 1157.0], [1003.0, 1159.0], [1001.0, 1161.0], [1015.0, 1148.0], [1074.0, 1271.0], [1086.0, 1254.0], [1058.0, 1302.0], [1062.0, 1297.0], [1066.0, 1294.0], [1078.0, 1255.0], [1034.0, 1338.0], [1030.0, 1341.0], [1026.0, 1345.0], [1054.0, 1309.0], [1050.0, 1315.0], [1046.0, 1321.0], [1042.0, 1330.0], [1070.0, 1289.0], [1142.0, 1176.0], [1138.0, 1192.0], [1150.0, 1153.0], [1122.0, 1216.0], [1126.0, 1210.0], [1146.0, 1164.0], [1102.0, 1240.0], [1098.0, 1240.0], [1094.0, 1247.0], [1090.0, 1250.0], [1118.0, 1220.0], [1114.0, 1224.0], [1110.0, 1229.0], [1134.0, 1202.0], [1210.0, 1168.0], [1214.0, 1154.0], [1186.0, 1215.0], [1190.0, 1211.5], [1206.0, 1176.0], [1202.0, 1189.0], [1182.0, 1221.0], [1154.0, 1250.0], [1158.0, 1248.0], [1166.0, 1238.0], [1162.0, 1244.0], [1178.0, 1225.0], [1174.0, 1230.0], [1170.0, 1235.0], [1274.0, 1166.0], [1278.0, 1158.0], [1250.0, 1216.0], [1254.0, 1210.5], [1258.0, 1210.5], [1270.0, 1174.0], [1266.0, 1185.0], [1218.0, 1135.0], [1246.0, 1229.0], [1238.0, 1246.0], [1234.0, 1246.8], [1262.0, 1208.0], [1338.0, 2535.0], [1342.0, 2532.0], [1314.0, 2534.0], [1322.0, 2079.0], [1318.0, 2566.0], [1334.0, 2550.5], [1330.0, 2076.5], [1310.0, 2761.0], [1282.0, 1153.0], [1290.0, 2798.0], [1286.0, 1141.0], [1294.0, 2792.0], [1306.0, 2773.0], [1302.0, 2782.0], [1298.0, 2786.0], [1326.0, 2077.0], [1394.0, 2169.3333333333335], [1402.0, 1942.0], [1406.0, 2411.0], [1378.0, 2498.0], [1398.0, 2223.5], [1374.0, 2030.0], [1346.0, 2529.0], [1350.0, 2527.0], [1354.0, 2520.0], [1358.0, 2528.0], [1370.0, 2034.0], [1366.0, 2037.0], [1362.0, 2514.0], [1390.0, 2497.0], [1382.0, 2495.0], [1462.0, 2331.0], [1466.0, 2335.0], [1446.0, 2347.0], [1442.0, 2355.0], [1422.0, 2407.0], [1418.0, 2409.0], [1414.0, 2418.0], [1410.0, 2418.0], [1438.0, 2359.0], [1434.0, 2374.0], [1430.0, 2369.0], [1426.0, 2402.0], [1450.0, 2351.5], [1526.0, 1816.0], [1522.0, 1820.0], [1534.0, 1802.0], [1506.0, 2005.0], [1514.0, 1850.0], [1530.0, 1809.0], [1482.0, 2282.0], [1478.0, 2302.0], [1474.0, 2305.0], [1502.0, 2032.0], [1498.0, 2044.0], [1490.0, 63477.0], [1518.0, 1825.0], [1590.0, 2549.0], [1594.0, 2471.0], [1598.0, 2469.0], [1574.0, 2596.0], [1570.0, 2604.0], [1586.0, 2555.0], [1566.0, 1221.0], [1538.0, 1787.0], [1542.0, 1727.0], [1550.0, 1235.0], [1562.0, 2613.0], [1558.0, 1229.0], [1554.0, 1233.0], [1582.0, 2570.0], [1578.0, 2589.0], [1650.0, 3326.0], [1662.0, 3289.0], [1634.0, 3343.0], [1642.0, 3339.0], [1654.0, 3309.0], [1614.0, 2436.0], [1610.0, 2443.0], [1606.0, 2465.0], [1630.0, 66187.0], [1622.0, 2408.0], [1618.0, 2431.0], [1646.0, 3330.0], [1722.0, 3282.0], [1726.0, 2681.0], [1698.0, 3327.0], [1702.0, 3316.0], [1706.0, 2731.0], [1718.0, 3292.0], [1714.0, 2718.0], [1694.0, 3329.0], [1666.0, 3285.0], [1670.0, 2772.0], [1674.0, 3347.0], [1678.0, 3343.0], [1690.0, 3334.0], [1686.0, 2759.0], [1682.0, 3340.0], [1710.0, 3015.0], [1778.0, 3434.0], [1786.0, 3835.0], [1790.0, 3833.0], [1762.0, 3877.0], [1766.0, 4085.0], [1782.0, 3007.0], [1742.0, 3062.0], [1738.0, 3591.5], [1730.0, 3904.0], [1758.0, 3886.0], [1754.0, 3612.6666666666665], [1774.0, 3435.5], [1854.0, 3950.0], [1842.0, 3955.0], [1826.0, 2955.0], [1822.0, 3899.5], [1798.0, 3405.5], [1802.0, 3513.5], [1806.0, 2980.0], [1818.0, 2957.0], [1814.0, 2975.3333333333335], [1858.0, 3702.0], [1918.0, 67625.0], [1866.0, 3261.0], [1862.0, 3272.0], [1894.0, 2767.6666666666665], [1890.0, 3302.0], [1886.0, 3312.0], [1882.0, 2512.0], [1878.0, 3315.0], [1874.0, 3317.0], [1982.0, 2361.0], [1954.0, 35411.5], [1958.0, 3217.0], [1962.0, 3202.0], [1966.0, 2391.0], [1978.0, 2764.5], [1974.0, 67520.0], [1970.0, 2379.0], [1922.0, 3276.0], [1926.0, 2872.0], [1934.0, 3262.0], [1950.0, 24422.0], [1946.0, 35431.5], [1938.0, 67606.0], [2042.0, 5117.0], [2018.0, 4572.0], [2022.0, 4569.0], [2026.0, 4564.0], [2030.0, 4562.0], [2038.0, 4557.0], [1990.0, 3146.0], [1994.0, 3142.0], [2006.0, 2326.0], [2148.0, 4641.5], [2060.0, 4718.666666666667], [2172.0, 4297.0], [2140.0, 4486.5], [2156.0, 4403.0], [2052.0, 4534.0], [2068.0, 5079.0], [2076.0, 4504.0], [2108.0, 4462.0], [2100.0, 5043.0], [2092.0, 35875.0], [2084.0, 4494.0], [2196.0, 4378.0], [2292.0, 4685.0], [2300.0, 4187.333333333333], [2260.0, 4758.0], [2268.0, 4519.0], [2188.0, 4390.0], [2204.0, 4573.0], [2236.0, 4478.0], [2228.0, 4780.5], [2220.0, 4783.0], [2212.0, 4346.0], [2428.0, 2142.0], [2372.0, 2263.0], [2380.0, 2251.0], [2396.0, 2233.0], [2420.0, 2188.0], [2404.0, 2754.0], [2308.0, 4441.5], [2324.0, 4108.0], [2364.0, 5320.0], [2356.0, 4588.0], [2340.0, 4218.0], [2516.0, 2944.0], [2500.0, 2313.0], [2524.0, 1842.0], [2540.0, 1812.0], [2532.0, 1830.0], [2492.0, 2348.0], [2476.0, 1796.0], [2588.0, 2114.0], [2636.0, 1708.0], [2652.0, 1687.0], [2668.0, 1659.0], [2580.0, 2127.0], [2572.0, 2842.0], [2620.0, 1714.0], [2596.0, 2104.0], [2796.0, 3611.0], [2764.0, 3883.0], [2812.0, 3739.5], [2756.0, 2654.5], [2772.0, 3872.0], [2804.0, 3598.0], [2788.0, 1355.0], [2716.0, 3958.0], [2708.0, 1479.0], [2700.0, 1576.0], [2692.0, 1603.0], [2748.0, 9044.0], [2740.0, 1442.0], [2732.0, 2696.0], [2724.0, 3947.0], [2924.0, 3460.0], [2916.0, 3877.0], [2892.0, 3600.5], [2900.0, 3091.0], [2940.0, 3852.0], [2820.0, 3558.0], [2828.0, 3558.0], [2836.0, 3555.0], [2844.0, 3533.0], [2876.0, 3303.5], [2852.0, 3329.5], [2988.0, 3744.0], [2948.0, 3392.0], [2964.0, 3773.0], [2996.0, 3689.0], [2980.0, 3739.0], [2061.0, 5097.0], [2173.0, 4408.0], [2157.0, 4304.0], [2077.0, 5070.0], [2053.0, 4533.0], [2109.0, 5026.0], [2101.0, 5041.0], [2085.0, 5061.0], [2277.0, 4744.0], [2293.0, 4246.0], [2245.0, 4540.5], [2261.0, 4306.0], [2285.0, 4443.0], [2237.0, 4226.0], [2181.0, 4404.0], [2189.0, 4390.0], [2197.0, 4817.0], [2205.0, 4358.0], [2213.0, 4233.0], [2429.0, 2487.0], [2373.0, 2260.0], [2381.0, 2250.0], [2389.0, 2242.0], [2397.0, 2233.0], [2421.0, 2182.0], [2413.0, 2478.5], [2405.0, 2226.0], [2333.0, 4657.0], [2365.0, 4096.0], [2357.0, 4136.0], [2341.0, 4359.0], [2549.0, 1801.0], [2541.0, 1812.0], [2501.0, 1662.0], [2517.0, 2943.0], [2525.0, 1842.0], [2557.0, 1772.5], [2533.0, 1829.0], [2461.0, 1878.0], [2493.0, 1695.0], [2485.0, 2062.0], [2477.0, 1756.0], [2685.0, 1625.5], [2629.0, 1561.5], [2637.0, 1409.0], [2653.0, 1687.0], [2677.0, 1501.5], [2669.0, 1658.5], [2661.0, 1667.3333333333333], [2589.0, 2115.0], [2581.0, 2126.0], [2573.0, 1741.0], [2565.0, 2853.5], [2605.0, 1426.0], [2597.0, 2007.0], [2805.0, 3546.0], [2765.0, 3883.0], [2773.0, 3868.0], [2781.0, 1370.0], [2813.0, 3538.0], [2789.0, 3842.0], [2717.0, 1468.0], [2709.0, 1477.0], [2701.0, 1274.0], [2693.0, 1604.0], [2749.0, 1425.0], [2741.0, 3926.0], [2725.0, 1459.0], [2933.0, 8674.333333333334], [2893.0, 3098.0], [2901.0, 18337.0], [2909.0, 3884.0], [2917.0, 3471.0], [2829.0, 8666.0], [2837.0, 3550.0], [2869.0, 8455.333333333334], [2861.0, 3106.0], [2957.0, 3616.5], [2965.0, 2970.0], [2973.0, 3833.0], [2989.0, 3704.0], [2981.0, 3812.0], [1083.0, 1150.0], [1087.0, 1251.0], [1059.0, 1301.0], [1063.0, 1297.0], [1067.0, 1292.0], [1079.0, 1253.0], [1075.0, 1260.0], [1027.0, 1345.0], [1031.0, 1340.0], [1035.0, 1337.0], [1051.0, 1311.0], [1047.0, 1320.0], [1043.0, 1327.0], [1071.0, 1286.0], [1147.0, 1160.0], [1151.0, 1144.0], [1123.0, 1215.0], [1131.0, 1205.0], [1143.0, 1174.0], [1139.0, 1186.0], [1119.0, 1219.0], [1091.0, 1249.0], [1095.0, 1244.0], [1103.0, 1239.0], [1115.0, 1223.0], [1111.0, 1227.0], [1107.0, 1231.5], [1135.0, 1201.0], [1211.0, 1168.0], [1215.0, 1154.0], [1191.0, 1205.0], [1187.0, 1213.0], [1195.0, 1199.0], [1207.0, 1173.0], [1203.0, 1182.0], [1167.0, 1238.0], [1163.0, 1241.0], [1159.0, 1246.0], [1155.0, 1248.0], [1183.0, 1218.0], [1179.0, 1224.0], [1175.0, 1229.0], [1171.0, 1234.0], [1199.0, 1193.0], [1267.0, 1178.0], [1275.0, 1163.0], [1259.0, 1210.0], [1251.0, 1214.0], [1271.0, 1173.0], [1227.0, 1249.0], [1223.0, 1250.0], [1219.0, 32331.0], [1247.0, 1229.0], [1243.0, 1231.0], [1239.0, 1246.0], [1235.0, 1246.0], [1263.0, 1204.0], [1335.0, 2070.0], [1331.0, 2074.0], [1343.0, 2531.0], [1315.0, 2560.0], [1319.0, 2554.0], [1339.0, 2063.0], [1311.0, 2758.0], [1283.0, 1145.0], [1287.0, 2800.0], [1291.0, 2796.0], [1295.0, 2790.0], [1307.0, 2771.0], [1303.0, 2777.0], [1299.0, 2785.0], [1327.0, 2078.0], [1323.0, 2550.0], [1399.0, 2469.0], [1395.0, 2005.0], [1407.0, 2421.0], [1379.0, 2499.0], [1383.0, 2493.0], [1403.0, 2424.0], [1375.0, 2512.0], [1347.0, 2057.0], [1351.0, 2525.0], [1355.0, 2047.0], [1359.0, 2517.0], [1371.0, 2034.0], [1367.0, 2520.0], [1363.0, 2039.0], [1391.0, 2485.0], [1387.0, 2492.0], [1467.0, 2335.0], [1471.0, 2329.0], [1443.0, 2364.0], [1451.0, 2345.0], [1447.0, 2347.0], [1463.0, 2340.0], [1423.0, 2405.0], [1419.0, 2402.0], [1415.0, 2404.0], [1411.0, 2417.0], [1439.0, 2359.0], [1435.0, 2372.0], [1431.0, 2378.0], [1427.0, 2378.0], [1455.0, 2347.5], [1523.0, 1819.0], [1531.0, 1808.0], [1507.0, 1885.0], [1527.0, 1813.0], [1503.0, 2016.0], [1475.0, 2304.0], [1479.0, 2300.0], [1483.0, 2291.0], [1487.0, 2268.0], [1499.0, 2043.0], [1495.0, 63471.5], [1491.0, 63476.0], [1515.0, 1844.0], [1511.0, 1884.0], [1539.0, 1783.0], [1571.0, 2603.0], [1591.0, 2544.0], [1587.0, 2554.0], [1567.0, 1219.0], [1543.0, 1717.0], [1563.0, 1224.0], [1559.0, 1227.0], [1555.0, 1230.0], [1583.0, 2570.0], [1579.0, 2590.0], [1659.0, 2753.5], [1663.0, 66125.0], [1635.0, 3342.0], [1639.0, 2789.5], [1643.0, 3334.0], [1655.0, 2206.0], [1651.0, 3327.0], [1631.0, 3349.0], [1607.0, 2464.0], [1611.0, 2441.0], [1615.0, 2434.0], [1627.0, 2252.0], [1623.0, 2252.0], [1619.0, 2427.0], [1647.0, 3329.0], [1723.0, 2698.0], [1727.0, 3252.0], [1699.0, 2746.0], [1703.0, 3315.0], [1719.0, 3289.0], [1715.0, 2718.0], [1695.0, 2749.0], [1671.0, 2771.0], [1667.0, 3280.0], [1675.0, 3346.0], [1679.0, 2765.0], [1691.0, 3331.0], [1687.0, 2757.0], [1683.0, 2761.0], [1711.0, 3303.0], [1707.0, 2728.0], [1787.0, 3000.0], [1791.0, 3833.0], [1763.0, 3041.0], [1767.0, 3867.0], [1783.0, 3007.0], [1779.0, 3850.0], [1731.0, 3067.0], [1759.0, 3883.0], [1755.0, 3056.0], [1751.0, 3892.0], [1747.0, 3896.0], [1775.0, 3853.0], [1771.0, 3856.0], [1851.0, 3842.0], [1855.0, 3946.0], [1831.0, 2954.0], [1827.0, 3372.5], [1847.0, 3953.0], [1843.0, 2901.0], [1823.0, 3791.0], [1795.0, 3411.5], [1803.0, 3822.0], [1807.0, 3814.0], [1819.0, 4009.0], [1815.0, 3809.0], [1811.0, 3501.5], [1839.0, 3646.3333333333335], [1835.0, 3231.3333333333335], [1911.0, 3289.5], [1907.0, 24206.0], [1919.0, 3276.0], [1895.0, 2901.0], [1899.0, 2499.0], [1915.0, 46183.0], [1867.0, 2855.0], [1863.0, 3270.0], [1887.0, 67654.0], [1879.0, 3315.0], [1875.0, 3316.0], [1903.0, 35470.5], [1923.0, 67621.0], [1983.0, 3161.0], [1955.0, 3235.0], [1959.0, 67555.0], [1963.0, 3201.0], [1967.0, 2384.0], [1951.0, 3239.0], [1927.0, 3273.0], [1931.0, 67611.0], [1947.0, 67588.0], [1943.0, 2456.0], [1939.0, 3259.0], [2047.0, 4830.0], [2043.0, 4550.0], [2019.0, 66784.0], [2023.0, 4569.0], [2027.0, 4564.0], [2031.0, 4562.0], [2039.0, 4553.0], [2035.0, 4746.666666666667], [2015.0, 4576.0], [1987.0, 34924.0], [1991.0, 2342.0], [1995.0, 3141.0], [1999.0, 3135.0], [2011.0, 4578.0], [2007.0, 67475.0], [2003.0, 67641.0], [2054.0, 4532.0], [2150.0, 4641.5], [2110.0, 5025.0], [2062.0, 5097.0], [2070.0, 4510.0], [2078.0, 4501.0], [2102.0, 5041.0], [2094.0, 4765.0], [2086.0, 5057.0], [2294.0, 4684.0], [2246.0, 4760.0], [2254.0, 5531.0], [2262.0, 4200.0], [2286.0, 4264.0], [2238.0, 4310.0], [2190.0, 4376.0], [2198.0, 4264.0], [2206.0, 4345.0], [2230.0, 4328.0], [2222.0, 4303.0], [2422.0, 2179.0], [2430.0, 2206.0], [2374.0, 2260.0], [2382.0, 2249.0], [2390.0, 2768.0], [2398.0, 2231.0], [2414.0, 2213.0], [2406.0, 2754.0], [2366.0, 2265.0], [2334.0, 4456.4], [2358.0, 4147.0], [2350.0, 4320.333333333333], [2550.0, 2894.0], [2502.0, 2307.0], [2518.0, 1848.0], [2526.0, 1840.0], [2558.0, 1768.0], [2542.0, 1809.0], [2534.0, 1829.0], [2494.0, 2338.0], [2462.0, 1877.25], [2486.0, 2381.0], [2470.0, 1814.5], [2662.0, 1667.0], [2678.0, 1651.0], [2630.0, 1709.0], [2654.0, 1386.0], [2686.0, 2528.0], [2670.0, 1658.0], [2590.0, 2112.0], [2574.0, 2833.0], [2566.0, 13642.0], [2622.0, 1564.5], [2614.0, 1544.6], [2814.0, 3537.0], [2758.0, 1408.0], [2766.0, 1393.0], [2782.0, 2613.5], [2806.0, 3546.0], [2798.0, 3610.0], [2790.0, 3840.0], [2718.0, 1467.0], [2710.0, 1476.0], [2702.0, 1568.0], [2694.0, 1581.0], [2750.0, 3910.0], [2742.0, 3925.0], [2734.0, 2693.0], [2726.0, 1459.0], [2926.0, 3898.5], [2918.0, 3871.0], [2902.0, 3086.0], [2830.0, 3843.6], [2838.0, 3949.0], [2846.0, 3332.0], [2870.0, 3944.5], [2854.0, 3530.5], [2950.0, 11016.0], [2958.0, 3377.0], [2966.0, 3371.0], [2982.0, 3330.0], [2159.0, 4402.0], [2119.0, 4420.5], [2143.0, 4381.666666666667], [2167.0, 4402.5], [2151.0, 4406.0], [2079.0, 4500.0], [2071.0, 4510.0], [2063.0, 4530.0], [2111.0, 4458.0], [2103.0, 4474.0], [2095.0, 5046.0], [2087.0, 4490.0], [2287.0, 4275.0], [2295.0, 4243.0], [2303.0, 4158.333333333333], [2263.0, 4295.0], [2183.0, 4401.5], [2191.0, 4277.0], [2199.0, 4361.0], [2223.0, 4331.0], [2423.0, 2177.0], [2431.0, 2206.0], [2375.0, 2258.0], [2383.0, 2248.0], [2399.0, 2230.0], [2415.0, 2740.0], [2407.0, 2223.0], [2311.0, 4165.5], [2367.0, 2265.0], [2359.0, 4133.0], [2351.0, 5369.0], [2343.0, 4432.5], [2543.0, 1809.0], [2551.0, 1795.0], [2559.0, 1768.0], [2503.0, 1661.0], [2519.0, 1847.0], [2527.0, 2931.0], [2495.0, 1693.0], [2463.0, 1877.0], [2487.0, 1736.0], [2479.0, 1742.0], [2471.0, 1815.0], [2671.0, 2561.0], [2687.0, 1622.0], [2631.0, 1709.0], [2647.0, 1605.0], [2655.0, 1684.0], [2663.0, 1667.0], [2591.0, 2110.0], [2583.0, 2126.0], [2575.0, 2831.0], [2567.0, 1756.0], [2615.0, 1424.0], [2607.0, 1426.0], [2599.0, 2005.5], [2719.0, 1465.0], [2815.0, 3534.0], [2775.0, 3868.0], [2799.0, 3606.0], [2711.0, 1476.0], [2703.0, 2451.0], [2695.0, 1580.0], [2751.0, 1420.0], [2735.0, 1447.0], [2727.0, 1458.0], [2927.0, 3860.0], [2943.0, 8692.0], [2887.0, 3501.25], [2903.0, 18335.0], [2911.0, 3922.5], [2919.0, 3469.0], [2879.0, 3688.3333333333335], [2871.0, 3906.0], [2863.0, 3506.0], [2855.0, 3118.0], [2951.0, 3390.0], [2967.0, 3358.0], [2975.0, 3755.6666666666665], [2991.0, 3740.5], [1.0, 128428.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2777.0306937075384, 12990.956116427815]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6127.333333333333, "minX": 1.6830234E12, "maxY": 52689.816666666666, "series": [{"data": [[1.68302346E12, 45798.166666666664], [1.68302364E12, 46236.48333333333], [1.68302352E12, 52689.816666666666], [1.6830237E12, 7635.85], [1.6830234E12, 24780.683333333334], [1.68302358E12, 44478.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302346E12, 33708.75], [1.68302364E12, 35863.416666666664], [1.68302352E12, 38826.083333333336], [1.6830237E12, 6127.333333333333], [1.6830234E12, 19602.416666666668], [1.68302358E12, 35080.666666666664]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830237E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 5066.449175824177, "minX": 1.6830234E12, "maxY": 18103.37063629615, "series": [{"data": [[1.68302346E12, 18103.37063629615], [1.68302364E12, 5253.393534785658], [1.68302352E12, 16394.797583081585], [1.6830237E12, 5066.449175824177], [1.6830234E12, 13530.639759553458], [1.68302358E12, 13259.988963531692]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830237E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 5066.376373626372, "minX": 1.6830234E12, "maxY": 17869.277296360484, "series": [{"data": [[1.68302346E12, 17869.277296360484], [1.68302364E12, 5115.15975638324], [1.68302352E12, 15867.657531290457], [1.6830237E12, 5066.376373626372], [1.6830234E12, 13530.566766852728], [1.68302358E12, 13259.977687140161]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830237E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 5.881064834693013, "minX": 1.6830234E12, "maxY": 5854.88584376349, "series": [{"data": [[1.68302346E12, 3369.1591978212386], [1.68302364E12, 1699.5296322323748], [1.68302352E12, 5854.88584376349], [1.6830237E12, 2098.061813186813], [1.6830234E12, 5.881064834693013], [1.68302358E12, 5350.333253358922]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830237E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.6830234E12, "maxY": 143734.0, "series": [{"data": [[1.68302346E12, 86854.0], [1.68302364E12, 71300.0], [1.68302352E12, 139262.0], [1.6830237E12, 128428.0], [1.6830234E12, 48962.0], [1.68302358E12, 143734.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302346E12, 45211.4], [1.68302364E12, 6909.600000000005], [1.68302352E12, 37852.40000000001], [1.6830237E12, 4508.0], [1.6830234E12, 26480.0], [1.68302358E12, 17208.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302346E12, 66711.0], [1.68302364E12, 67506.66], [1.68302352E12, 80489.0], [1.6830237E12, 128419.13], [1.6830234E12, 29316.699999999993], [1.68302358E12, 139409.31]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302346E12, 61075.799999999996], [1.68302364E12, 14088.9], [1.68302352E12, 74025.3], [1.6830237E12, 4548.1], [1.6830234E12, 27322.0], [1.68302358E12, 36147.29999999971]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302346E12, 32.0], [1.68302364E12, 18.0], [1.68302352E12, 13.0], [1.6830237E12, 1123.0], [1.6830234E12, 17.0], [1.68302358E12, 1128.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302346E12, 16327.0], [1.68302364E12, 3106.0], [1.68302352E12, 10318.0], [1.6830237E12, 3550.5], [1.6830234E12, 12253.0], [1.68302358E12, 8662.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830237E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 57.0, "minX": 1.0, "maxY": 117650.0, "series": [{"data": [[2.0, 27035.5], [3.0, 4054.5], [4.0, 36456.5], [5.0, 11823.5], [6.0, 10248.0], [7.0, 12522.5], [8.0, 11079.0], [9.0, 3870.5], [10.0, 46393.5], [12.0, 22700.5], [13.0, 4275.0], [14.0, 24623.5], [15.0, 27293.0], [16.0, 5904.0], [19.0, 6630.5], [20.0, 18636.5], [21.0, 2664.0], [23.0, 4250.0], [24.0, 11843.0], [25.0, 7033.5], [29.0, 2267.0], [30.0, 8878.5], [31.0, 103.0], [33.0, 1681.0], [35.0, 14696.0], [34.0, 57.0], [37.0, 7747.0], [38.0, 1251.0], [40.0, 12037.5], [42.0, 3781.0], [45.0, 4220.0], [46.0, 1877.0], [49.0, 17321.0], [48.0, 9345.5], [50.0, 8981.0], [52.0, 2467.0], [54.0, 9606.5], [55.0, 1658.0], [58.0, 7771.5], [59.0, 1655.0], [61.0, 3674.0], [63.0, 3891.5], [67.0, 1240.0], [66.0, 74.0], [70.0, 4366.0], [71.0, 75.0], [68.0, 1219.5], [72.0, 8619.5], [74.0, 1708.0], [73.0, 1830.0], [76.0, 2330.0], [77.0, 4356.0], [79.0, 4590.0], [81.0, 1382.0], [84.0, 10267.0], [87.0, 7253.0], [86.0, 1734.0], [88.0, 1262.0], [101.0, 1303.0], [106.0, 6347.0], [107.0, 4567.0], [113.0, 5676.0], [114.0, 2478.5], [119.0, 3254.5], [123.0, 13935.5], [124.0, 10234.0], [128.0, 9508.5], [133.0, 17340.0], [130.0, 4274.5], [134.0, 79.0], [137.0, 15596.0], [138.0, 568.5], [140.0, 5628.5], [142.0, 3209.5], [146.0, 721.0], [150.0, 6098.5], [154.0, 6433.0], [156.0, 3315.5], [153.0, 2939.0], [161.0, 9698.0], [162.0, 27157.0], [163.0, 6279.0], [165.0, 4428.0], [172.0, 10043.5], [170.0, 14522.0], [187.0, 75.0], [185.0, 2404.0], [194.0, 3546.0], [205.0, 4759.0], [202.0, 4714.5], [203.0, 5979.0], [214.0, 14230.0], [209.0, 3316.0], [216.0, 1762.5], [229.0, 10363.0], [237.0, 9885.0], [234.0, 9946.0], [240.0, 3385.5], [250.0, 4393.0], [251.0, 3646.0], [264.0, 19029.5], [271.0, 13194.0], [282.0, 10126.0], [295.0, 12440.0], [291.0, 9870.0], [303.0, 7008.0], [319.0, 11448.0], [313.0, 18773.0], [332.0, 18469.5], [321.0, 12901.0], [336.0, 13046.0], [370.0, 17214.5], [375.0, 15674.5], [388.0, 8841.5], [431.0, 18307.0], [452.0, 14523.0], [473.0, 12963.0], [554.0, 19532.5], [569.0, 7576.0], [598.0, 16468.0], [1.0, 1213.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 27858.0], [4.0, 28679.5], [8.0, 28676.0], [137.0, 27852.0], [9.0, 26661.0], [73.0, 73758.0], [86.0, 117650.0], [375.0, 27867.0], [54.0, 103672.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 598.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 46393.5, "series": [{"data": [[2.0, 27035.5], [3.0, 4054.5], [4.0, 36456.5], [5.0, 11823.5], [6.0, 10248.0], [7.0, 12522.5], [8.0, 11079.0], [9.0, 3870.5], [10.0, 46393.5], [12.0, 22700.5], [13.0, 4275.0], [14.0, 24623.5], [15.0, 27293.0], [16.0, 5904.0], [19.0, 6630.5], [20.0, 18636.5], [21.0, 2661.0], [23.0, 4250.0], [24.0, 11843.0], [25.0, 7033.5], [29.0, 2267.0], [30.0, 8878.5], [31.0, 103.0], [33.0, 1681.0], [35.0, 14696.0], [34.0, 57.0], [37.0, 7747.0], [38.0, 1251.0], [40.0, 12037.5], [42.0, 3781.0], [45.0, 4220.0], [46.0, 1877.0], [49.0, 17321.0], [48.0, 9345.5], [50.0, 8981.0], [52.0, 2467.0], [54.0, 9606.5], [55.0, 1658.0], [58.0, 7771.5], [59.0, 1655.0], [61.0, 3674.0], [63.0, 3891.5], [67.0, 1240.0], [66.0, 74.0], [70.0, 4366.0], [71.0, 75.0], [68.0, 1219.5], [72.0, 8619.5], [74.0, 1708.0], [73.0, 1830.0], [76.0, 2330.0], [77.0, 4356.0], [79.0, 4590.0], [81.0, 1381.0], [84.0, 10267.0], [87.0, 7253.0], [86.0, 1734.0], [88.0, 1262.0], [101.0, 1303.0], [106.0, 6347.0], [107.0, 4567.0], [113.0, 5676.0], [114.0, 2478.5], [119.0, 3254.5], [123.0, 13935.5], [124.0, 10234.0], [128.0, 9508.0], [133.0, 17340.0], [130.0, 4274.5], [134.0, 79.0], [137.0, 15596.0], [138.0, 568.5], [140.0, 5628.5], [142.0, 3209.5], [146.0, 721.0], [150.0, 6098.5], [154.0, 6432.5], [156.0, 3315.5], [153.0, 2939.0], [161.0, 9698.0], [162.0, 27157.0], [163.0, 6279.0], [165.0, 4428.0], [172.0, 10043.5], [170.0, 14522.0], [187.0, 75.0], [185.0, 2404.0], [194.0, 3546.0], [205.0, 4759.0], [202.0, 4714.5], [203.0, 5979.0], [214.0, 14230.0], [209.0, 3316.0], [216.0, 1762.5], [229.0, 10363.0], [237.0, 9885.0], [234.0, 9946.0], [240.0, 3385.5], [250.0, 4393.0], [251.0, 3646.0], [264.0, 19029.5], [271.0, 13194.0], [282.0, 10126.0], [295.0, 12440.0], [291.0, 9870.0], [303.0, 7008.0], [319.0, 11448.0], [313.0, 18773.0], [332.0, 18469.5], [321.0, 12901.0], [336.0, 13046.0], [370.0, 17214.5], [375.0, 15674.5], [388.0, 8841.5], [431.0, 18307.0], [452.0, 14523.0], [473.0, 12963.0], [554.0, 19532.5], [569.0, 7576.0], [598.0, 16468.0], [1.0, 1213.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 0.0], [4.0, 0.0], [8.0, 0.0], [137.0, 0.0], [9.0, 0.0], [73.0, 0.0], [86.0, 0.0], [375.0, 0.0], [54.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 598.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.166666666666666, "minX": 1.6830234E12, "maxY": 70.35, "series": [{"data": [[1.68302346E12, 70.35], [1.68302364E12, 65.88333333333334], [1.68302352E12, 68.11666666666666], [1.6830237E12, 11.166666666666666], [1.6830234E12, 62.53333333333333], [1.68302358E12, 58.06666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830237E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.6830234E12, "maxY": 76.88333333333334, "series": [{"data": [[1.68302346E12, 66.75], [1.68302364E12, 71.01666666666667], [1.68302352E12, 76.88333333333334], [1.6830237E12, 12.133333333333333], [1.6830234E12, 38.81666666666667], [1.68302358E12, 69.46666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68302346E12, 0.5666666666666667], [1.68302364E12, 0.13333333333333333], [1.68302352E12, 0.35]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830237E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.6830234E12, "maxY": 76.88333333333334, "series": [{"data": [[1.68302346E12, 66.75], [1.68302364E12, 71.01666666666667], [1.68302352E12, 76.88333333333334], [1.6830237E12, 12.133333333333333], [1.6830234E12, 38.81666666666667], [1.68302358E12, 69.46666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68302346E12, 0.5666666666666667], [1.68302364E12, 0.13333333333333333], [1.68302352E12, 0.35]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830237E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.6830234E12, "maxY": 76.88333333333334, "series": [{"data": [[1.68302346E12, 66.75], [1.68302364E12, 71.01666666666667], [1.68302352E12, 76.88333333333334], [1.6830237E12, 12.133333333333333], [1.6830234E12, 38.81666666666667], [1.68302358E12, 69.46666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68302346E12, 0.5666666666666667], [1.68302364E12, 0.13333333333333333], [1.68302352E12, 0.35]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6830237E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

