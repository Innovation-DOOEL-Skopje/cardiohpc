/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 168435.0, "series": [{"data": [[0.0, 15.0], [0.1, 22.0], [0.2, 29.0], [0.3, 32.0], [0.4, 32.0], [0.5, 33.0], [0.6, 35.0], [0.7, 36.0], [0.8, 37.0], [0.9, 37.0], [1.0, 38.0], [1.1, 39.0], [1.2, 39.0], [1.3, 40.0], [1.4, 40.0], [1.5, 40.0], [1.6, 41.0], [1.7, 42.0], [1.8, 42.0], [1.9, 42.0], [2.0, 43.0], [2.1, 44.0], [2.2, 44.0], [2.3, 45.0], [2.4, 46.0], [2.5, 46.0], [2.6, 46.0], [2.7, 46.0], [2.8, 47.0], [2.9, 47.0], [3.0, 47.0], [3.1, 48.0], [3.2, 48.0], [3.3, 49.0], [3.4, 50.0], [3.5, 50.0], [3.6, 50.0], [3.7, 51.0], [3.8, 51.0], [3.9, 52.0], [4.0, 52.0], [4.1, 52.0], [4.2, 53.0], [4.3, 53.0], [4.4, 54.0], [4.5, 54.0], [4.6, 55.0], [4.7, 55.0], [4.8, 55.0], [4.9, 55.0], [5.0, 56.0], [5.1, 56.0], [5.2, 56.0], [5.3, 57.0], [5.4, 57.0], [5.5, 58.0], [5.6, 58.0], [5.7, 58.0], [5.8, 59.0], [5.9, 59.0], [6.0, 59.0], [6.1, 60.0], [6.2, 60.0], [6.3, 60.0], [6.4, 60.0], [6.5, 61.0], [6.6, 61.0], [6.7, 61.0], [6.8, 61.0], [6.9, 62.0], [7.0, 62.0], [7.1, 62.0], [7.2, 63.0], [7.3, 63.0], [7.4, 63.0], [7.5, 64.0], [7.6, 64.0], [7.7, 65.0], [7.8, 65.0], [7.9, 65.0], [8.0, 65.0], [8.1, 66.0], [8.2, 66.0], [8.3, 66.0], [8.4, 66.0], [8.5, 67.0], [8.6, 67.0], [8.7, 67.0], [8.8, 67.0], [8.9, 68.0], [9.0, 68.0], [9.1, 68.0], [9.2, 68.0], [9.3, 69.0], [9.4, 69.0], [9.5, 69.0], [9.6, 69.0], [9.7, 70.0], [9.8, 70.0], [9.9, 70.0], [10.0, 70.0], [10.1, 70.0], [10.2, 70.0], [10.3, 70.0], [10.4, 71.0], [10.5, 71.0], [10.6, 71.0], [10.7, 71.0], [10.8, 72.0], [10.9, 72.0], [11.0, 72.0], [11.1, 72.0], [11.2, 72.0], [11.3, 73.0], [11.4, 73.0], [11.5, 73.0], [11.6, 73.0], [11.7, 73.0], [11.8, 74.0], [11.9, 74.0], [12.0, 74.0], [12.1, 74.0], [12.2, 75.0], [12.3, 75.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 76.0], [12.8, 76.0], [12.9, 76.0], [13.0, 76.0], [13.1, 76.0], [13.2, 76.0], [13.3, 76.0], [13.4, 77.0], [13.5, 77.0], [13.6, 77.0], [13.7, 77.0], [13.8, 77.0], [13.9, 77.0], [14.0, 77.0], [14.1, 78.0], [14.2, 78.0], [14.3, 78.0], [14.4, 78.0], [14.5, 78.0], [14.6, 78.0], [14.7, 78.0], [14.8, 78.0], [14.9, 79.0], [15.0, 79.0], [15.1, 79.0], [15.2, 79.0], [15.3, 79.0], [15.4, 79.0], [15.5, 79.0], [15.6, 80.0], [15.7, 80.0], [15.8, 80.0], [15.9, 80.0], [16.0, 80.0], [16.1, 80.0], [16.2, 81.0], [16.3, 81.0], [16.4, 81.0], [16.5, 81.0], [16.6, 81.0], [16.7, 81.0], [16.8, 82.0], [16.9, 82.0], [17.0, 82.0], [17.1, 82.0], [17.2, 82.0], [17.3, 83.0], [17.4, 83.0], [17.5, 83.0], [17.6, 83.0], [17.7, 83.0], [17.8, 84.0], [17.9, 84.0], [18.0, 84.0], [18.1, 84.0], [18.2, 85.0], [18.3, 85.0], [18.4, 85.0], [18.5, 86.0], [18.6, 86.0], [18.7, 86.0], [18.8, 87.0], [18.9, 87.0], [19.0, 87.0], [19.1, 88.0], [19.2, 88.0], [19.3, 88.0], [19.4, 88.0], [19.5, 89.0], [19.6, 89.0], [19.7, 89.0], [19.8, 89.0], [19.9, 90.0], [20.0, 90.0], [20.1, 90.0], [20.2, 90.0], [20.3, 90.0], [20.4, 91.0], [20.5, 91.0], [20.6, 91.0], [20.7, 92.0], [20.8, 92.0], [20.9, 92.0], [21.0, 93.0], [21.1, 93.0], [21.2, 94.0], [21.3, 94.0], [21.4, 94.0], [21.5, 95.0], [21.6, 95.0], [21.7, 95.0], [21.8, 95.0], [21.9, 96.0], [22.0, 96.0], [22.1, 96.0], [22.2, 97.0], [22.3, 97.0], [22.4, 97.0], [22.5, 97.0], [22.6, 97.0], [22.7, 97.0], [22.8, 98.0], [22.9, 98.0], [23.0, 98.0], [23.1, 98.0], [23.2, 99.0], [23.3, 99.0], [23.4, 100.0], [23.5, 100.0], [23.6, 101.0], [23.7, 101.0], [23.8, 102.0], [23.9, 104.0], [24.0, 105.0], [24.1, 105.0], [24.2, 106.0], [24.3, 107.0], [24.4, 110.0], [24.5, 111.0], [24.6, 112.0], [24.7, 113.0], [24.8, 113.0], [24.9, 115.0], [25.0, 120.0], [25.1, 121.0], [25.2, 124.0], [25.3, 125.0], [25.4, 126.0], [25.5, 127.0], [25.6, 129.0], [25.7, 130.0], [25.8, 130.0], [25.9, 131.0], [26.0, 131.0], [26.1, 132.0], [26.2, 133.0], [26.3, 133.0], [26.4, 134.0], [26.5, 134.0], [26.6, 137.0], [26.7, 140.0], [26.8, 144.0], [26.9, 146.0], [27.0, 150.0], [27.1, 152.0], [27.2, 154.0], [27.3, 157.0], [27.4, 162.0], [27.5, 189.0], [27.6, 191.0], [27.7, 206.0], [27.8, 216.0], [27.9, 268.0], [28.0, 300.0], [28.1, 350.0], [28.2, 376.0], [28.3, 404.0], [28.4, 478.0], [28.5, 605.0], [28.6, 633.0], [28.7, 638.0], [28.8, 678.0], [28.9, 726.0], [29.0, 764.0], [29.1, 991.0], [29.2, 1014.0], [29.3, 1042.0], [29.4, 1077.0], [29.5, 1134.0], [29.6, 1322.0], [29.7, 1552.0], [29.8, 1751.0], [29.9, 1795.0], [30.0, 1817.0], [30.1, 1940.0], [30.2, 2120.0], [30.3, 2139.0], [30.4, 2166.0], [30.5, 2210.0], [30.6, 2255.0], [30.7, 2295.0], [30.8, 2330.0], [30.9, 2346.0], [31.0, 2364.0], [31.1, 2371.0], [31.2, 2403.0], [31.3, 2417.0], [31.4, 2437.0], [31.5, 2459.0], [31.6, 2534.0], [31.7, 2557.0], [31.8, 2589.0], [31.9, 2623.0], [32.0, 2644.0], [32.1, 2755.0], [32.2, 2801.0], [32.3, 2871.0], [32.4, 2921.0], [32.5, 2965.0], [32.6, 2976.0], [32.7, 2996.0], [32.8, 3025.0], [32.9, 3080.0], [33.0, 3117.0], [33.1, 3132.0], [33.2, 3150.0], [33.3, 3335.0], [33.4, 3485.0], [33.5, 3546.0], [33.6, 3579.0], [33.7, 3601.0], [33.8, 3782.0], [33.9, 3893.0], [34.0, 3947.0], [34.1, 4072.0], [34.2, 4164.0], [34.3, 4227.0], [34.4, 4252.0], [34.5, 4283.0], [34.6, 4292.0], [34.7, 4314.0], [34.8, 4339.0], [34.9, 4399.0], [35.0, 4456.0], [35.1, 4491.0], [35.2, 4582.0], [35.3, 4697.0], [35.4, 4771.0], [35.5, 4784.0], [35.6, 4857.0], [35.7, 4893.0], [35.8, 4919.0], [35.9, 4947.0], [36.0, 4970.0], [36.1, 5016.0], [36.2, 5030.0], [36.3, 5131.0], [36.4, 5203.0], [36.5, 5214.0], [36.6, 5253.0], [36.7, 5275.0], [36.8, 5286.0], [36.9, 5317.0], [37.0, 5343.0], [37.1, 5362.0], [37.2, 5378.0], [37.3, 5414.0], [37.4, 5421.0], [37.5, 5425.0], [37.6, 5435.0], [37.7, 5439.0], [37.8, 5441.0], [37.9, 5459.0], [38.0, 5481.0], [38.1, 5503.0], [38.2, 5528.0], [38.3, 5646.0], [38.4, 5680.0], [38.5, 5709.0], [38.6, 5777.0], [38.7, 5877.0], [38.8, 5886.0], [38.9, 5892.0], [39.0, 5902.0], [39.1, 5914.0], [39.2, 5915.0], [39.3, 5918.0], [39.4, 5923.0], [39.5, 5932.0], [39.6, 5942.0], [39.7, 5969.0], [39.8, 5987.0], [39.9, 5996.0], [40.0, 6036.0], [40.1, 6052.0], [40.2, 6079.0], [40.3, 6111.0], [40.4, 6114.0], [40.5, 6188.0], [40.6, 6227.0], [40.7, 6242.0], [40.8, 6288.0], [40.9, 6322.0], [41.0, 6353.0], [41.1, 6383.0], [41.2, 6395.0], [41.3, 6447.0], [41.4, 6515.0], [41.5, 6570.0], [41.6, 6605.0], [41.7, 6635.0], [41.8, 6666.0], [41.9, 6684.0], [42.0, 6708.0], [42.1, 6831.0], [42.2, 6953.0], [42.3, 7058.0], [42.4, 7173.0], [42.5, 7205.0], [42.6, 7293.0], [42.7, 7417.0], [42.8, 7447.0], [42.9, 7449.0], [43.0, 7457.0], [43.1, 7561.0], [43.2, 7691.0], [43.3, 7723.0], [43.4, 7766.0], [43.5, 7826.0], [43.6, 7843.0], [43.7, 7888.0], [43.8, 7897.0], [43.9, 7898.0], [44.0, 7901.0], [44.1, 7906.0], [44.2, 7936.0], [44.3, 7954.0], [44.4, 7974.0], [44.5, 7996.0], [44.6, 8005.0], [44.7, 8020.0], [44.8, 8032.0], [44.9, 8047.0], [45.0, 8059.0], [45.1, 8072.0], [45.2, 8077.0], [45.3, 8086.0], [45.4, 8090.0], [45.5, 8109.0], [45.6, 8128.0], [45.7, 8152.0], [45.8, 8178.0], [45.9, 8238.0], [46.0, 8262.0], [46.1, 8271.0], [46.2, 8288.0], [46.3, 8319.0], [46.4, 8390.0], [46.5, 8431.0], [46.6, 8453.0], [46.7, 8465.0], [46.8, 8480.0], [46.9, 8500.0], [47.0, 8534.0], [47.1, 8573.0], [47.2, 8596.0], [47.3, 8649.0], [47.4, 8774.0], [47.5, 8827.0], [47.6, 8858.0], [47.7, 8899.0], [47.8, 8917.0], [47.9, 8954.0], [48.0, 8976.0], [48.1, 9016.0], [48.2, 9063.0], [48.3, 9077.0], [48.4, 9131.0], [48.5, 9167.0], [48.6, 9197.0], [48.7, 9227.0], [48.8, 9304.0], [48.9, 9378.0], [49.0, 9378.0], [49.1, 9382.0], [49.2, 9392.0], [49.3, 9411.0], [49.4, 9425.0], [49.5, 9480.0], [49.6, 9483.0], [49.7, 9484.0], [49.8, 9485.0], [49.9, 9491.0], [50.0, 9496.0], [50.1, 9520.0], [50.2, 9554.0], [50.3, 9575.0], [50.4, 9577.0], [50.5, 9579.0], [50.6, 9585.0], [50.7, 9596.0], [50.8, 9602.0], [50.9, 9616.0], [51.0, 9637.0], [51.1, 9668.0], [51.2, 9691.0], [51.3, 9717.0], [51.4, 9749.0], [51.5, 9764.0], [51.6, 9772.0], [51.7, 9773.0], [51.8, 9775.0], [51.9, 9790.0], [52.0, 9810.0], [52.1, 9825.0], [52.2, 9833.0], [52.3, 9844.0], [52.4, 9868.0], [52.5, 9908.0], [52.6, 9923.0], [52.7, 9925.0], [52.8, 9936.0], [52.9, 9938.0], [53.0, 9940.0], [53.1, 9950.0], [53.2, 9967.0], [53.3, 10024.0], [53.4, 10035.0], [53.5, 10037.0], [53.6, 10041.0], [53.7, 10053.0], [53.8, 10075.0], [53.9, 10098.0], [54.0, 10144.0], [54.1, 10176.0], [54.2, 10247.0], [54.3, 10262.0], [54.4, 10282.0], [54.5, 10282.0], [54.6, 10297.0], [54.7, 10352.0], [54.8, 10366.0], [54.9, 10382.0], [55.0, 10383.0], [55.1, 10388.0], [55.2, 10394.0], [55.3, 10397.0], [55.4, 10417.0], [55.5, 10434.0], [55.6, 10437.0], [55.7, 10456.0], [55.8, 10481.0], [55.9, 10504.0], [56.0, 10516.0], [56.1, 10520.0], [56.2, 10545.0], [56.3, 10547.0], [56.4, 10557.0], [56.5, 10568.0], [56.6, 10589.0], [56.7, 10610.0], [56.8, 10633.0], [56.9, 10647.0], [57.0, 10648.0], [57.1, 10659.0], [57.2, 10677.0], [57.3, 10690.0], [57.4, 10698.0], [57.5, 10707.0], [57.6, 10715.0], [57.7, 10744.0], [57.8, 10771.0], [57.9, 10806.0], [58.0, 10832.0], [58.1, 10843.0], [58.2, 10865.0], [58.3, 10868.0], [58.4, 10873.0], [58.5, 10886.0], [58.6, 10918.0], [58.7, 10920.0], [58.8, 10952.0], [58.9, 10983.0], [59.0, 11005.0], [59.1, 11009.0], [59.2, 11014.0], [59.3, 11041.0], [59.4, 11070.0], [59.5, 11078.0], [59.6, 11084.0], [59.7, 11101.0], [59.8, 11102.0], [59.9, 11103.0], [60.0, 11105.0], [60.1, 11107.0], [60.2, 11119.0], [60.3, 11142.0], [60.4, 11143.0], [60.5, 11147.0], [60.6, 11158.0], [60.7, 11162.0], [60.8, 11173.0], [60.9, 11191.0], [61.0, 11205.0], [61.1, 11224.0], [61.2, 11227.0], [61.3, 11237.0], [61.4, 11240.0], [61.5, 11241.0], [61.6, 11243.0], [61.7, 11246.0], [61.8, 11254.0], [61.9, 11267.0], [62.0, 11279.0], [62.1, 11316.0], [62.2, 11375.0], [62.3, 11401.0], [62.4, 11451.0], [62.5, 11479.0], [62.6, 11516.0], [62.7, 11540.0], [62.8, 11556.0], [62.9, 11572.0], [63.0, 11605.0], [63.1, 11629.0], [63.2, 11637.0], [63.3, 11639.0], [63.4, 11647.0], [63.5, 11656.0], [63.6, 11657.0], [63.7, 11666.0], [63.8, 11674.0], [63.9, 11687.0], [64.0, 11689.0], [64.1, 11692.0], [64.2, 11696.0], [64.3, 11709.0], [64.4, 11719.0], [64.5, 11724.0], [64.6, 11730.0], [64.7, 11738.0], [64.8, 11747.0], [64.9, 11752.0], [65.0, 11759.0], [65.1, 11775.0], [65.2, 11800.0], [65.3, 11825.0], [65.4, 11840.0], [65.5, 11855.0], [65.6, 11899.0], [65.7, 11908.0], [65.8, 11919.0], [65.9, 11926.0], [66.0, 11939.0], [66.1, 11940.0], [66.2, 11942.0], [66.3, 11960.0], [66.4, 11970.0], [66.5, 11979.0], [66.6, 12059.0], [66.7, 12074.0], [66.8, 12075.0], [66.9, 12083.0], [67.0, 12090.0], [67.1, 12129.0], [67.2, 12130.0], [67.3, 12132.0], [67.4, 12185.0], [67.5, 12223.0], [67.6, 12259.0], [67.7, 12267.0], [67.8, 12275.0], [67.9, 12293.0], [68.0, 12301.0], [68.1, 12346.0], [68.2, 12367.0], [68.3, 12389.0], [68.4, 12405.0], [68.5, 12413.0], [68.6, 12426.0], [68.7, 12440.0], [68.8, 12477.0], [68.9, 12540.0], [69.0, 12573.0], [69.1, 12596.0], [69.2, 12613.0], [69.3, 12636.0], [69.4, 12637.0], [69.5, 12641.0], [69.6, 12688.0], [69.7, 12692.0], [69.8, 12702.0], [69.9, 12751.0], [70.0, 12811.0], [70.1, 12828.0], [70.2, 12842.0], [70.3, 12867.0], [70.4, 12870.0], [70.5, 12888.0], [70.6, 12912.0], [70.7, 12914.0], [70.8, 12940.0], [70.9, 12972.0], [71.0, 12979.0], [71.1, 12980.0], [71.2, 12981.0], [71.3, 13012.0], [71.4, 13025.0], [71.5, 13037.0], [71.6, 13043.0], [71.7, 13045.0], [71.8, 13049.0], [71.9, 13057.0], [72.0, 13066.0], [72.1, 13088.0], [72.2, 13116.0], [72.3, 13145.0], [72.4, 13178.0], [72.5, 13207.0], [72.6, 13209.0], [72.7, 13217.0], [72.8, 13228.0], [72.9, 13230.0], [73.0, 13231.0], [73.1, 13233.0], [73.2, 13238.0], [73.3, 13261.0], [73.4, 13295.0], [73.5, 13318.0], [73.6, 13327.0], [73.7, 13330.0], [73.8, 13332.0], [73.9, 13369.0], [74.0, 13370.0], [74.1, 13371.0], [74.2, 13388.0], [74.3, 13392.0], [74.4, 13393.0], [74.5, 13409.0], [74.6, 13445.0], [74.7, 13483.0], [74.8, 13500.0], [74.9, 13547.0], [75.0, 13565.0], [75.1, 13638.0], [75.2, 13679.0], [75.3, 13698.0], [75.4, 13711.0], [75.5, 13743.0], [75.6, 13766.0], [75.7, 13788.0], [75.8, 13817.0], [75.9, 13845.0], [76.0, 13883.0], [76.1, 13922.0], [76.2, 13925.0], [76.3, 13937.0], [76.4, 13939.0], [76.5, 13953.0], [76.6, 13961.0], [76.7, 13964.0], [76.8, 13979.0], [76.9, 13991.0], [77.0, 13999.0], [77.1, 14003.0], [77.2, 14013.0], [77.3, 14029.0], [77.4, 14044.0], [77.5, 14061.0], [77.6, 14083.0], [77.7, 14102.0], [77.8, 14131.0], [77.9, 14135.0], [78.0, 14136.0], [78.1, 14144.0], [78.2, 14151.0], [78.3, 14156.0], [78.4, 14161.0], [78.5, 14187.0], [78.6, 14189.0], [78.7, 14191.0], [78.8, 14193.0], [78.9, 14214.0], [79.0, 14223.0], [79.1, 14256.0], [79.2, 14265.0], [79.3, 14267.0], [79.4, 14268.0], [79.5, 14273.0], [79.6, 14310.0], [79.7, 14335.0], [79.8, 14349.0], [79.9, 14375.0], [80.0, 14390.0], [80.1, 14421.0], [80.2, 14453.0], [80.3, 14455.0], [80.4, 14457.0], [80.5, 14464.0], [80.6, 14466.0], [80.7, 14468.0], [80.8, 14475.0], [80.9, 14498.0], [81.0, 14522.0], [81.1, 14546.0], [81.2, 14560.0], [81.3, 14620.0], [81.4, 14654.0], [81.5, 14710.0], [81.6, 14734.0], [81.7, 14781.0], [81.8, 14810.0], [81.9, 14851.0], [82.0, 14870.0], [82.1, 14897.0], [82.2, 14936.0], [82.3, 14967.0], [82.4, 15001.0], [82.5, 15038.0], [82.6, 15065.0], [82.7, 15160.0], [82.8, 15170.0], [82.9, 15232.0], [83.0, 15281.0], [83.1, 15289.0], [83.2, 15291.0], [83.3, 15294.0], [83.4, 15314.0], [83.5, 15322.0], [83.6, 15337.0], [83.7, 15363.0], [83.8, 15421.0], [83.9, 15548.0], [84.0, 15560.0], [84.1, 15571.0], [84.2, 15592.0], [84.3, 15631.0], [84.4, 15688.0], [84.5, 15843.0], [84.6, 15915.0], [84.7, 15970.0], [84.8, 16058.0], [84.9, 16078.0], [85.0, 16127.0], [85.1, 16145.0], [85.2, 16174.0], [85.3, 16189.0], [85.4, 16191.0], [85.5, 16263.0], [85.6, 16421.0], [85.7, 16644.0], [85.8, 16715.0], [85.9, 16758.0], [86.0, 16802.0], [86.1, 16808.0], [86.2, 16811.0], [86.3, 16839.0], [86.4, 16951.0], [86.5, 17161.0], [86.6, 17313.0], [86.7, 17370.0], [86.8, 17427.0], [86.9, 17513.0], [87.0, 17543.0], [87.1, 17546.0], [87.2, 17617.0], [87.3, 17724.0], [87.4, 17765.0], [87.5, 17852.0], [87.6, 17912.0], [87.7, 17946.0], [87.8, 17988.0], [87.9, 18052.0], [88.0, 18221.0], [88.1, 18404.0], [88.2, 18486.0], [88.3, 18498.0], [88.4, 18522.0], [88.5, 18548.0], [88.6, 18565.0], [88.7, 18632.0], [88.8, 18675.0], [88.9, 18702.0], [89.0, 18724.0], [89.1, 18765.0], [89.2, 18818.0], [89.3, 18851.0], [89.4, 18874.0], [89.5, 18977.0], [89.6, 19138.0], [89.7, 19208.0], [89.8, 19448.0], [89.9, 19518.0], [90.0, 20060.0], [90.1, 20676.0], [90.2, 20808.0], [90.3, 21059.0], [90.4, 21300.0], [90.5, 21568.0], [90.6, 21866.0], [90.7, 21904.0], [90.8, 22211.0], [90.9, 22853.0], [91.0, 23101.0], [91.1, 23171.0], [91.2, 23753.0], [91.3, 23852.0], [91.4, 24034.0], [91.5, 24062.0], [91.6, 24077.0], [91.7, 24144.0], [91.8, 24516.0], [91.9, 24597.0], [92.0, 25477.0], [92.1, 26082.0], [92.2, 26389.0], [92.3, 26635.0], [92.4, 26833.0], [92.5, 27140.0], [92.6, 28272.0], [92.7, 28361.0], [92.8, 28749.0], [92.9, 29576.0], [93.0, 30373.0], [93.1, 31425.0], [93.2, 31460.0], [93.3, 32705.0], [93.4, 33432.0], [93.5, 34768.0], [93.6, 34974.0], [93.7, 35010.0], [93.8, 35712.0], [93.9, 37576.0], [94.0, 38545.0], [94.1, 40725.0], [94.2, 41393.0], [94.3, 42050.0], [94.4, 42147.0], [94.5, 43427.0], [94.6, 44961.0], [94.7, 45479.0], [94.8, 45760.0], [94.9, 45923.0], [95.0, 47391.0], [95.1, 47457.0], [95.2, 48481.0], [95.3, 48964.0], [95.4, 50629.0], [95.5, 51210.0], [95.6, 51812.0], [95.7, 52196.0], [95.8, 52462.0], [95.9, 53340.0], [96.0, 58038.0], [96.1, 63840.0], [96.2, 65259.0], [96.3, 71869.0], [96.4, 74383.0], [96.5, 76595.0], [96.6, 77248.0], [96.7, 77268.0], [96.8, 77315.0], [96.9, 78758.0], [97.0, 80914.0], [97.1, 87963.0], [97.2, 89955.0], [97.3, 99808.0], [97.4, 100035.0], [97.5, 100060.0], [97.6, 100066.0], [97.7, 100079.0], [97.8, 100085.0], [97.9, 100092.0], [98.0, 100100.0], [98.1, 100116.0], [98.2, 103714.0], [98.3, 109670.0], [98.4, 127757.0], [98.5, 130065.0], [98.6, 130222.0], [98.7, 134685.0], [98.8, 135025.0], [98.9, 141210.0], [99.0, 141617.0], [99.1, 141646.0], [99.2, 143409.0], [99.3, 147486.0], [99.4, 147585.0], [99.5, 148673.0], [99.6, 149692.0], [99.7, 150765.0], [99.8, 153923.0], [99.9, 168428.0], [100.0, 168435.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5262.0, "series": [{"data": [[0.0, 5262.0], [138400.0, 2.0], [141600.0, 34.0], [66700.0, 2.0], [92300.0, 1.0], [93900.0, 1.0], [95500.0, 1.0], [97100.0, 1.0], [143400.0, 4.0], [100.0, 968.0], [34500.0, 3.0], [134700.0, 21.0], [35300.0, 2.0], [144300.0, 2.0], [38500.0, 6.0], [147500.0, 10.0], [150700.0, 9.0], [153900.0, 3.0], [41700.0, 4.0], [44900.0, 20.0], [46500.0, 1.0], [45700.0, 19.0], [47300.0, 20.0], [48900.0, 31.0], [200.0, 70.0], [52100.0, 1.0], [53700.0, 1.0], [55300.0, 2.0], [59300.0, 1.0], [64100.0, 2.0], [65800.0, 1.0], [72200.0, 1.0], [300.0, 63.0], [77000.0, 2.0], [75400.0, 13.0], [400.0, 29.0], [500.0, 17.0], [600.0, 84.0], [161200.0, 4.0], [700.0, 34.0], [800.0, 10.0], [900.0, 25.0], [1000.0, 64.0], [1100.0, 28.0], [1200.0, 5.0], [1300.0, 14.0], [1400.0, 4.0], [1500.0, 13.0], [1600.0, 11.0], [1700.0, 32.0], [1800.0, 30.0], [1900.0, 14.0], [2000.0, 4.0], [2100.0, 78.0], [133300.0, 2.0], [2300.0, 109.0], [2200.0, 49.0], [2400.0, 86.0], [149300.0, 1.0], [152500.0, 7.0], [2500.0, 55.0], [2600.0, 57.0], [2700.0, 25.0], [2800.0, 34.0], [2900.0, 85.0], [3000.0, 55.0], [3100.0, 59.0], [3300.0, 15.0], [3200.0, 13.0], [3400.0, 15.0], [3500.0, 65.0], [3600.0, 18.0], [3700.0, 7.0], [3800.0, 23.0], [3900.0, 30.0], [4000.0, 24.0], [4200.0, 82.0], [4300.0, 57.0], [4100.0, 31.0], [4400.0, 52.0], [4500.0, 19.0], [4600.0, 20.0], [72900.0, 2.0], [4800.0, 48.0], [77700.0, 4.0], [4700.0, 50.0], [5100.0, 27.0], [5000.0, 52.0], [4900.0, 67.0], [80900.0, 2.0], [5300.0, 81.0], [5200.0, 107.0], [5400.0, 193.0], [5500.0, 33.0], [5600.0, 51.0], [5800.0, 71.0], [5700.0, 37.0], [6100.0, 63.0], [5900.0, 219.0], [6000.0, 82.0], [6300.0, 92.0], [6200.0, 57.0], [100100.0, 36.0], [6500.0, 49.0], [6600.0, 83.0], [6400.0, 35.0], [6700.0, 27.0], [6800.0, 17.0], [6900.0, 26.0], [7000.0, 11.0], [7100.0, 34.0], [7400.0, 79.0], [7300.0, 20.0], [7200.0, 29.0], [7600.0, 26.0], [7500.0, 17.0], [7700.0, 55.0], [7800.0, 111.0], [7900.0, 124.0], [8000.0, 210.0], [8100.0, 85.0], [8400.0, 102.0], [8600.0, 31.0], [8200.0, 96.0], [134200.0, 1.0], [8800.0, 60.0], [9000.0, 60.0], [9200.0, 40.0], [9400.0, 170.0], [9600.0, 111.0], [9800.0, 118.0], [10200.0, 110.0], [10000.0, 142.0], [10600.0, 180.0], [10400.0, 131.0], [10800.0, 145.0], [11200.0, 244.0], [11000.0, 157.0], [11600.0, 281.0], [11400.0, 61.0], [12000.0, 116.0], [11800.0, 94.0], [12200.0, 127.0], [12400.0, 111.0], [12600.0, 141.0], [13000.0, 204.0], [12800.0, 135.0], [13200.0, 223.0], [13800.0, 66.0], [13600.0, 51.0], [13400.0, 66.0], [14200.0, 163.0], [14000.0, 153.0], [14400.0, 196.0], [14600.0, 40.0], [14800.0, 77.0], [15000.0, 50.0], [15200.0, 113.0], [15600.0, 36.0], [15800.0, 12.0], [15400.0, 25.0], [16000.0, 51.0], [16200.0, 19.0], [17200.0, 13.0], [16800.0, 83.0], [16400.0, 5.0], [18400.0, 49.0], [18000.0, 21.0], [17600.0, 24.0], [18800.0, 59.0], [19200.0, 12.0], [20000.0, 13.0], [19600.0, 3.0], [20400.0, 2.0], [20800.0, 9.0], [21200.0, 12.0], [21600.0, 5.0], [22400.0, 2.0], [23200.0, 7.0], [22800.0, 7.0], [24400.0, 7.0], [24000.0, 59.0], [24800.0, 2.0], [25200.0, 1.0], [26400.0, 3.0], [26000.0, 12.0], [26800.0, 6.0], [27600.0, 1.0], [28400.0, 2.0], [28000.0, 2.0], [28800.0, 8.0], [29600.0, 2.0], [30000.0, 3.0], [30800.0, 3.0], [31200.0, 8.0], [32000.0, 3.0], [33600.0, 6.0], [36000.0, 1.0], [141500.0, 6.0], [144700.0, 2.0], [37600.0, 1.0], [38400.0, 19.0], [46400.0, 2.0], [45600.0, 8.0], [51200.0, 19.0], [52800.0, 1.0], [53600.0, 2.0], [54400.0, 2.0], [58400.0, 2.0], [60000.0, 2.0], [91200.0, 2.0], [94400.0, 1.0], [105600.0, 6.0], [147200.0, 1.0], [150400.0, 5.0], [138500.0, 1.0], [135300.0, 1.0], [76700.0, 1.0], [87900.0, 16.0], [89500.0, 11.0], [33100.0, 4.0], [34700.0, 11.0], [137100.0, 1.0], [36300.0, 1.0], [37100.0, 3.0], [38700.0, 2.0], [149900.0, 1.0], [42700.0, 6.0], [44300.0, 2.0], [43500.0, 2.0], [45900.0, 11.0], [47500.0, 10.0], [57100.0, 2.0], [55500.0, 1.0], [56300.0, 1.0], [62700.0, 2.0], [74200.0, 2.0], [99800.0, 2.0], [130200.0, 22.0], [141200.0, 3.0], [147600.0, 7.0], [150800.0, 2.0], [135700.0, 3.0], [148500.0, 4.0], [151700.0, 4.0], [68500.0, 1.0], [76500.0, 2.0], [81300.0, 1.0], [90900.0, 1.0], [103700.0, 11.0], [110100.0, 1.0], [127700.0, 17.0], [149400.0, 3.0], [16900.0, 22.0], [17300.0, 31.0], [16500.0, 1.0], [18100.0, 17.0], [17700.0, 37.0], [18900.0, 16.0], [18500.0, 85.0], [19300.0, 2.0], [19700.0, 7.0], [20100.0, 2.0], [21300.0, 17.0], [20900.0, 12.0], [22100.0, 8.0], [23300.0, 1.0], [22900.0, 6.0], [23700.0, 22.0], [24100.0, 21.0], [24500.0, 26.0], [25300.0, 3.0], [26500.0, 14.0], [26100.0, 7.0], [25700.0, 3.0], [26900.0, 17.0], [27300.0, 5.0], [28500.0, 6.0], [27700.0, 1.0], [28900.0, 1.0], [29300.0, 3.0], [29700.0, 8.0], [30100.0, 1.0], [32500.0, 3.0], [32100.0, 7.0], [33800.0, 2.0], [34600.0, 4.0], [36200.0, 1.0], [37000.0, 2.0], [45000.0, 3.0], [43400.0, 2.0], [45800.0, 2.0], [47400.0, 19.0], [49000.0, 6.0], [50600.0, 2.0], [52200.0, 17.0], [61800.0, 2.0], [74000.0, 2.0], [75600.0, 1.0], [77200.0, 45.0], [78800.0, 2.0], [85200.0, 2.0], [86800.0, 2.0], [130000.0, 9.0], [133600.0, 3.0], [146400.0, 2.0], [149600.0, 9.0], [81900.0, 2.0], [78700.0, 9.0], [86700.0, 2.0], [89900.0, 4.0], [97900.0, 2.0], [129900.0, 16.0], [154600.0, 10.0], [33300.0, 13.0], [34900.0, 29.0], [35700.0, 9.0], [36500.0, 2.0], [139500.0, 2.0], [37300.0, 1.0], [40500.0, 2.0], [42100.0, 24.0], [41300.0, 12.0], [47700.0, 1.0], [50900.0, 1.0], [49300.0, 4.0], [51700.0, 4.0], [53300.0, 8.0], [58100.0, 2.0], [65300.0, 1.0], [79400.0, 6.0], [85800.0, 2.0], [98600.0, 1.0], [143600.0, 6.0], [65700.0, 2.0], [72100.0, 2.0], [76900.0, 8.0], [78500.0, 2.0], [83300.0, 1.0], [96100.0, 2.0], [102500.0, 1.0], [8300.0, 42.0], [8700.0, 24.0], [8500.0, 68.0], [8900.0, 79.0], [9100.0, 64.0], [145400.0, 4.0], [9300.0, 107.0], [9500.0, 161.0], [9700.0, 166.0], [148600.0, 14.0], [151800.0, 1.0], [9900.0, 176.0], [10100.0, 46.0], [10700.0, 103.0], [10500.0, 166.0], [10300.0, 158.0], [10900.0, 96.0], [11100.0, 296.0], [11500.0, 98.0], [11700.0, 212.0], [11300.0, 54.0], [11900.0, 206.0], [12100.0, 88.0], [12500.0, 63.0], [12300.0, 77.0], [12700.0, 49.0], [12900.0, 154.0], [13100.0, 71.0], [13300.0, 234.0], [13500.0, 66.0], [13700.0, 92.0], [14300.0, 108.0], [13900.0, 225.0], [14100.0, 260.0], [14500.0, 85.0], [14700.0, 67.0], [14900.0, 64.0], [15300.0, 93.0], [15100.0, 52.0], [15500.0, 83.0], [15700.0, 16.0], [16100.0, 96.0], [16300.0, 18.0], [15900.0, 54.0], [16600.0, 35.0], [17000.0, 4.0], [17400.0, 36.0], [18200.0, 15.0], [17800.0, 24.0], [19000.0, 11.0], [18600.0, 45.0], [19400.0, 29.0], [21400.0, 6.0], [21000.0, 7.0], [20600.0, 20.0], [21800.0, 36.0], [22200.0, 4.0], [23000.0, 13.0], [23800.0, 14.0], [24200.0, 1.0], [25000.0, 6.0], [25400.0, 5.0], [26600.0, 19.0], [26200.0, 1.0], [25800.0, 5.0], [27400.0, 3.0], [27000.0, 1.0], [27800.0, 2.0], [28600.0, 7.0], [28200.0, 13.0], [29400.0, 6.0], [29000.0, 2.0], [29800.0, 4.0], [31400.0, 28.0], [31000.0, 5.0], [32200.0, 3.0], [32600.0, 5.0], [34800.0, 2.0], [35600.0, 1.0], [143100.0, 2.0], [37200.0, 2.0], [38800.0, 1.0], [149500.0, 1.0], [39600.0, 1.0], [42000.0, 22.0], [44400.0, 10.0], [46800.0, 1.0], [48400.0, 2.0], [47600.0, 6.0], [51600.0, 2.0], [52400.0, 11.0], [53200.0, 8.0], [58000.0, 2.0], [59600.0, 2.0], [65200.0, 2.0], [64400.0, 8.0], [74400.0, 4.0], [77600.0, 3.0], [100000.0, 153.0], [109600.0, 5.0], [117600.0, 5.0], [143300.0, 3.0], [146500.0, 2.0], [149700.0, 3.0], [71100.0, 2.0], [74300.0, 3.0], [79100.0, 4.0], [95100.0, 2.0], [99900.0, 2.0], [109500.0, 10.0], [134600.0, 14.0], [137800.0, 4.0], [147400.0, 18.0], [150600.0, 4.0], [153800.0, 3.0], [33500.0, 1.0], [135500.0, 1.0], [37500.0, 2.0], [151500.0, 2.0], [154700.0, 2.0], [40700.0, 18.0], [161100.0, 2.0], [43900.0, 1.0], [45500.0, 6.0], [51100.0, 13.0], [55900.0, 2.0], [59100.0, 2.0], [63100.0, 2.0], [64700.0, 2.0], [68600.0, 3.0], [70200.0, 1.0], [71800.0, 6.0], [76600.0, 5.0], [79800.0, 2.0], [78200.0, 8.0], [89400.0, 2.0], [91000.0, 1.0], [136400.0, 2.0], [142800.0, 1.0], [152400.0, 2.0], [168400.0, 25.0], [67700.0, 2.0], [66100.0, 1.0], [70900.0, 2.0], [74100.0, 10.0], [77300.0, 8.0], [82100.0, 2.0], [90100.0, 2.0], [94900.0, 2.0], [135000.0, 1.0], [141400.0, 4.0], [144600.0, 1.0], [17100.0, 16.0], [16700.0, 44.0], [18300.0, 7.0], [17900.0, 60.0], [17500.0, 68.0], [18700.0, 67.0], [19100.0, 25.0], [19500.0, 10.0], [20300.0, 1.0], [21500.0, 7.0], [20700.0, 14.0], [21100.0, 4.0], [21900.0, 14.0], [22300.0, 12.0], [23100.0, 30.0], [23900.0, 14.0], [24300.0, 4.0], [25500.0, 9.0], [24700.0, 4.0], [26300.0, 7.0], [25900.0, 2.0], [26700.0, 4.0], [27100.0, 6.0], [27500.0, 2.0], [28300.0, 18.0], [28700.0, 2.0], [29500.0, 5.0], [30300.0, 3.0], [31500.0, 1.0], [32700.0, 3.0], [33400.0, 5.0], [139100.0, 5.0], [35000.0, 25.0], [142300.0, 12.0], [37400.0, 1.0], [148700.0, 3.0], [39800.0, 6.0], [43000.0, 1.0], [42200.0, 1.0], [41400.0, 8.0], [43800.0, 2.0], [45400.0, 8.0], [49400.0, 3.0], [52600.0, 2.0], [51800.0, 27.0], [54200.0, 3.0], [57400.0, 3.0], [59000.0, 3.0], [64600.0, 1.0], [63800.0, 10.0], [76400.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 168400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15779.0, "series": [{"data": [[0.0, 6392.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 286.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15779.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 43.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1716.3837142857153, "minX": 1.68302376E12, "maxY": 3000.0, "series": [{"data": [[1.68302376E12, 3000.0], [1.68302394E12, 3000.0], [1.68302382E12, 3000.0], [1.683024E12, 3000.0], [1.68302388E12, 3000.0], [1.68302406E12, 1716.3837142857153]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302406E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.0, "maxY": 25455.0, "series": [{"data": [[2.0, 11013.0], [3.0, 11011.0], [4.0, 10997.0], [5.0, 10983.0], [6.0, 10984.0], [7.0, 10980.0], [8.0, 10952.0], [9.0, 10915.0], [10.0, 10801.0], [11.0, 10744.0], [12.0, 10742.0], [13.0, 10740.0], [14.0, 10737.0], [15.0, 10736.0], [16.0, 10734.0], [17.0, 10731.0], [18.0, 10729.0], [19.0, 10728.0], [20.0, 10728.0], [21.0, 10724.0], [22.0, 10721.0], [23.0, 10720.0], [24.0, 10717.0], [25.0, 10717.0], [26.0, 10713.0], [27.0, 10713.0], [28.0, 10709.0], [29.0, 10706.0], [30.0, 10707.0], [31.0, 10700.0], [33.0, 10696.0], [32.0, 10700.0], [34.0, 10690.0], [37.0, 13533.5], [38.0, 12608.0], [41.0, 10513.0], [40.0, 11210.666666666666], [43.0, 12606.0], [42.0, 10514.0], [44.0, 12132.0], [47.0, 12133.0], [46.0, 12484.5], [49.0, 14456.0], [48.0, 12132.0], [50.0, 10506.0], [55.0, 12599.0], [54.0, 10504.75], [57.0, 10504.0], [59.0, 10501.0], [58.0, 12125.0], [61.0, 10499.0], [60.0, 14446.0], [63.0, 10491.0], [62.0, 12585.0], [66.0, 12109.0], [64.0, 10490.0], [71.0, 11028.333333333334], [69.0, 12501.0], [74.0, 12344.5], [72.0, 10487.0], [78.0, 12338.0], [82.0, 12574.0], [81.0, 12102.0], [87.0, 14417.0], [86.0, 12567.0], [85.0, 12573.0], [84.0, 13500.0], [91.0, 12407.666666666666], [90.0, 12565.0], [95.0, 12550.0], [94.0, 12089.0], [93.0, 12564.0], [92.0, 12565.0], [99.0, 12073.0], [98.0, 12073.0], [97.0, 12549.0], [96.0, 14400.0], [103.0, 14395.0], [100.0, 12545.0], [107.0, 12540.0], [106.0, 12541.0], [105.0, 14393.0], [104.0, 14395.0], [111.0, 12066.0], [110.0, 12066.0], [108.0, 12540.0], [113.0, 12538.0], [119.0, 14389.0], [124.0, 12537.0], [135.0, 13220.0], [134.0, 12704.5], [132.0, 12537.0], [128.0, 13462.5], [142.0, 11828.2], [141.0, 12059.0], [151.0, 14298.0], [150.0, 14303.0], [149.0, 14309.0], [148.0, 12200.9], [146.0, 10436.0], [159.0, 12436.0], [158.0, 11963.0], [157.0, 11962.0], [156.0, 11964.0], [155.0, 12441.0], [154.0, 14292.0], [153.0, 12444.0], [152.0, 10352.0], [167.0, 11952.0], [166.0, 11952.0], [165.0, 13122.0], [163.0, 12434.0], [162.0, 14285.0], [161.0, 11962.0], [160.0, 11962.0], [175.0, 11941.0], [174.0, 14266.0], [173.0, 11943.0], [172.0, 11942.0], [171.0, 11136.5], [169.0, 14272.0], [168.0, 14274.0], [183.0, 12387.0], [182.0, 11915.0], [181.0, 12389.0], [179.0, 11921.0], [178.0, 11925.0], [177.0, 13101.5], [191.0, 14215.0], [190.0, 11899.0], [189.0, 11899.0], [188.0, 11901.0], [187.0, 11905.0], [186.0, 13307.5], [184.0, 12384.0], [199.0, 12348.0], [198.0, 11876.0], [197.0, 13039.5], [195.0, 14202.0], [194.0, 14208.0], [193.0, 14213.0], [192.0, 14215.0], [206.0, 12327.0], [205.0, 12337.0], [204.0, 13261.5], [202.0, 12340.0], [201.0, 14193.0], [200.0, 11874.0], [215.0, 12287.0], [214.0, 11820.0], [213.0, 14146.0], [212.0, 11823.0], [211.0, 12301.0], [210.0, 12301.0], [209.0, 12311.0], [208.0, 13249.5], [223.0, 11801.0], [222.0, 12280.0], [221.0, 14132.0], [220.0, 11808.0], [219.0, 12282.0], [218.0, 14133.0], [217.0, 12283.0], [216.0, 14135.0], [231.0, 12256.0], [230.0, 12261.0], [229.0, 14113.0], [228.0, 12265.0], [227.0, 14119.0], [225.0, 12271.0], [224.0, 11800.0], [239.0, 11755.0], [238.0, 11757.0], [237.0, 12235.0], [236.0, 12244.0], [235.0, 12245.0], [234.0, 11773.0], [233.0, 14104.0], [232.0, 12254.0], [247.0, 11744.0], [246.0, 14069.0], [245.0, 11746.0], [244.0, 11751.0], [243.0, 11751.0], [242.0, 10134.0], [241.0, 11755.0], [240.0, 12229.0], [254.0, 10111.0], [253.0, 11736.0], [252.0, 11738.0], [251.0, 14064.0], [249.0, 11742.0], [248.0, 12217.0], [270.0, 10072.5], [268.0, 10073.0], [259.0, 11724.0], [258.0, 11725.0], [257.0, 12201.0], [256.0, 12892.5], [267.0, 11696.0], [266.0, 14022.0], [265.0, 14026.0], [264.0, 11703.0], [263.0, 10098.0], [262.0, 10098.0], [261.0, 14045.0], [260.0, 11722.0], [286.0, 14675.0], [287.0, 12478.0], [285.0, 11053.0], [284.0, 12478.0], [282.0, 13978.0], [281.0, 11656.0], [280.0, 11664.0], [279.0, 13991.0], [273.0, 10069.0], [272.0, 10070.0], [275.0, 10067.0], [274.0, 10068.0], [278.0, 11673.0], [277.0, 10057.0], [276.0, 10063.0], [303.0, 11763.0], [300.0, 11955.666666666666], [299.0, 12476.0], [298.0, 12477.0], [297.0, 14199.0], [294.0, 11764.5], [293.0, 12477.0], [290.0, 12478.0], [318.0, 14170.0], [317.0, 11691.0], [315.0, 10979.5], [313.0, 11693.0], [311.0, 12978.0], [308.0, 12475.0], [307.0, 11693.5], [304.0, 14197.0], [323.0, 12442.0], [334.0, 12437.0], [333.0, 12517.0], [329.0, 10877.0], [328.0, 14161.0], [327.0, 14161.0], [326.0, 14162.0], [325.0, 12520.0], [322.0, 14395.5], [320.0, 13304.0], [351.0, 14157.0], [350.0, 13008.666666666666], [348.0, 13296.0], [346.0, 12435.0], [344.0, 14158.0], [342.0, 13469.0], [337.0, 12436.0], [336.0, 14159.0], [364.0, 11005.0], [363.0, 11005.0], [362.0, 12579.0], [360.0, 11008.0], [358.0, 14154.333333333334], [357.0, 14155.0], [354.0, 14155.5], [352.0, 10872.0], [383.0, 14148.0], [381.0, 14148.0], [379.0, 11000.0], [378.0, 12428.0], [377.0, 12480.333333333334], [373.0, 12527.0], [370.0, 14150.5], [369.0, 11648.0], [368.0, 14389.0], [398.0, 12422.5], [399.0, 14143.0], [396.0, 14143.5], [386.0, 11645.0], [395.0, 14146.0], [393.0, 14145.0], [392.0, 12503.5], [390.0, 12419.0], [389.0, 13524.0], [388.0, 13081.0], [414.0, 12518.5], [415.0, 14329.5], [413.0, 10808.0], [410.0, 10946.0], [409.0, 12373.0], [408.0, 14570.0], [407.0, 13671.5], [400.0, 14580.0], [403.0, 12382.0], [402.0, 12382.0], [401.0, 10959.0], [431.0, 12367.0], [429.0, 14089.0], [426.0, 12625.333333333334], [424.0, 12368.0], [422.0, 12368.0], [421.0, 14566.0], [419.0, 13675.0], [416.0, 10945.0], [444.0, 14558.0], [443.0, 10936.0], [442.0, 14083.5], [440.0, 12362.0], [439.0, 14399.0], [437.0, 14087.0], [435.0, 13464.5], [433.0, 12956.5], [432.0, 14089.0], [460.0, 10765.0], [463.0, 10765.0], [462.0, 12645.0], [461.0, 12681.666666666666], [456.0, 10767.0], [455.0, 14057.0], [454.0, 11340.333333333334], [451.0, 12337.0], [450.0, 10777.0], [449.0, 14556.0], [448.0, 12864.25], [477.0, 14467.0], [478.0, 12276.0], [476.0, 14497.0], [465.0, 11614.5], [475.0, 10810.5], [473.0, 14501.0], [472.0, 10742.0], [471.0, 12324.0], [470.0, 12643.5], [469.0, 14048.0], [468.0, 14285.0], [495.0, 14468.0], [494.0, 12657.5], [492.0, 14469.0], [491.0, 13134.5], [489.0, 13218.0], [486.0, 12276.0], [485.0, 12276.0], [484.0, 12465.333333333334], [511.0, 10704.0], [509.0, 12940.0], [507.0, 14464.0], [506.0, 14460.5], [504.0, 10843.0], [502.0, 12417.0], [500.0, 12609.75], [498.0, 15755.0], [542.0, 14455.0], [538.0, 14884.0], [532.0, 10836.0], [530.0, 13983.0], [522.0, 13985.0], [518.0, 10839.0], [516.0, 10703.0], [512.0, 15751.0], [568.0, 14400.0], [564.0, 13370.333333333334], [560.0, 14397.0], [556.0, 14853.0], [552.0, 13220.5], [550.0, 13774.333333333334], [548.0, 15744.0], [544.0, 14457.0], [604.0, 10682.0], [606.0, 10679.0], [602.0, 10547.0], [600.0, 10550.0], [598.0, 10720.0], [596.0, 15634.0], [594.0, 15011.5], [592.0, 10609.0], [590.0, 15657.5], [580.0, 13769.5], [588.0, 11954.333333333334], [586.0, 14370.0], [612.0, 14685.0], [634.0, 14638.0], [638.0, 14598.0], [632.0, 14639.0], [630.0, 13629.666666666666], [626.0, 14648.0], [622.0, 14650.5], [620.0, 15517.0], [618.0, 13575.666666666666], [610.0, 14687.0], [608.0, 15551.0], [668.0, 14499.0], [670.0, 14929.0], [666.0, 15369.0], [664.0, 14513.0], [662.0, 10339.0], [660.0, 14535.0], [658.0, 15397.0], [656.0, 14116.0], [654.0, 14548.0], [642.0, 10531.0], [640.0, 10409.0], [646.0, 15416.0], [644.0, 15421.0], [650.0, 14551.0], [648.0, 14552.0], [700.0, 11810.0], [702.0, 14434.0], [688.0, 14462.0], [690.0, 14033.0], [692.0, 14459.0], [698.0, 11814.0], [696.0, 15306.0], [678.0, 15348.0], [676.0, 15351.0], [672.0, 15353.0], [686.0, 14474.0], [684.0, 15335.0], [682.0, 10426.0], [680.0, 15341.0], [694.0, 15312.0], [728.0, 13972.0], [732.0, 14395.0], [720.0, 10364.0], [722.0, 13980.0], [730.0, 10347.0], [704.0, 10245.0], [708.0, 11090.5], [706.0, 14428.0], [718.0, 12003.0], [714.0, 15281.0], [712.0, 10374.0], [726.0, 10217.0], [764.0, 14553.5], [766.0, 10122.0], [752.0, 13944.0], [754.0, 10312.0], [756.0, 12767.5], [762.0, 10152.0], [760.0, 13918.0], [742.0, 13956.0], [740.0, 14385.0], [738.0, 13962.0], [736.0, 14247.666666666666], [748.0, 13945.0], [744.0, 10191.0], [758.0, 15213.0], [794.0, 14244.5], [798.0, 14238.0], [784.0, 14266.0], [786.0, 10216.0], [788.0, 14259.0], [796.0, 14243.0], [792.0, 14247.0], [774.0, 15144.0], [772.0, 10233.0], [770.0, 12214.0], [768.0, 10258.0], [782.0, 14268.0], [780.0, 10083.0], [778.0, 10091.0], [776.0, 14280.0], [790.0, 10207.0], [806.0, 14215.5], [818.0, 3503.0], [830.0, 8469.0], [828.0, 9946.0], [814.0, 5122.0], [800.0, 15098.0], [802.0, 10049.0], [804.0, 15093.0], [812.0, 6133.0], [810.0, 7143.0], [808.0, 12119.5], [822.0, 9948.0], [820.0, 9857.0], [816.0, 4025.0], [860.0, 11230.0], [862.0, 9937.0], [858.0, 11229.0], [844.0, 11639.0], [832.0, 11234.0], [842.0, 8465.0], [840.0, 10015.333333333334], [870.0, 10047.5], [892.0, 11569.0], [890.0, 8395.0], [886.0, 8458.0], [868.0, 10616.125], [866.0, 9938.0], [864.0, 10583.5], [872.0, 9198.0], [924.0, 11158.0], [920.0, 11565.5], [918.0, 10569.5], [958.0, 9685.0], [956.0, 10706.285714285714], [954.0, 9890.0], [946.0, 14627.0], [938.0, 11556.5], [936.0, 14629.0], [990.0, 10343.333333333332], [986.0, 8284.0], [960.0, 14620.0], [964.0, 11751.0], [982.0, 11256.0], [976.0, 10695.75], [1018.0, 13003.5], [1012.0, 10955.0], [1016.0, 8109.0], [998.0, 11338.0], [996.0, 8222.0], [992.0, 11399.0], [1014.0, 11618.0], [1080.0, 11331.5], [1084.0, 8009.0], [1072.0, 10780.0], [1032.0, 14429.0], [1048.0, 8099.0], [1044.0, 10454.5], [1040.0, 8103.0], [1064.0, 9746.0], [1060.0, 11482.0], [1056.0, 11540.0], [1144.0, 11075.0], [1148.0, 11414.333333333334], [1140.0, 10692.0], [1124.0, 11123.0], [1116.0, 11127.0], [1112.0, 9706.5], [1104.0, 7975.0], [1200.0, 10493.0], [1208.0, 14017.0], [1212.0, 9166.0], [1184.0, 11207.0], [1188.0, 14061.0], [1204.0, 10478.0], [1152.0, 11023.0], [1156.0, 9561.0], [1160.0, 14131.0], [1172.0, 10538.0], [1168.0, 14096.0], [1196.0, 9206.0], [1192.0, 12627.5], [1220.0, 10797.5], [1272.0, 11080.0], [1264.0, 9753.0], [1228.0, 12096.0], [1216.0, 14010.0], [1244.0, 10354.0], [1240.0, 13919.5], [1236.0, 13961.0], [1256.0, 8130.0], [1252.0, 1140.0], [1312.0, 11039.0], [1320.0, 24094.0], [1328.0, 11048.0], [1292.0, 17588.5], [1280.0, 9745.0], [1308.0, 11040.0], [1324.0, 24080.0], [1316.0, 11037.0], [1400.0, 25410.0], [1404.0, 10862.0], [1376.0, 10920.0], [1380.0, 12320.0], [1384.0, 23970.0], [1392.0, 10889.0], [1356.0, 24075.0], [1352.0, 10336.5], [1368.0, 11002.0], [1388.0, 7931.0], [1460.0, 12196.0], [1456.0, 7820.0], [1468.0, 9419.0], [1440.0, 10800.0], [1444.0, 10836.5], [1464.0, 12189.0], [1412.0, 9519.0], [1416.0, 23915.0], [1420.0, 9503.0], [1436.0, 10805.0], [1432.0, 18053.5], [1428.0, 23886.0], [1424.0, 10824.0], [1452.0, 12203.0], [1448.0, 12206.0], [1524.0, 22933.0], [1520.0, 9816.0], [1532.0, 22905.0], [1504.0, 9835.0], [1508.0, 22949.0], [1528.0, 8375.0], [1472.0, 7785.0], [1476.0, 25244.0], [1480.0, 9865.0], [1484.0, 8447.0], [1500.0, 9839.0], [1496.0, 9852.0], [1492.0, 8441.0], [1516.0, 22944.0], [1512.0, 9120.5], [1548.0, 9753.0], [1588.0, 8072.5], [1544.0, 9763.0], [1540.0, 15862.0], [1536.0, 21430.0], [1580.0, 8426.666666666666], [1576.0, 8295.0], [1572.0, 8319.0], [1568.0, 22081.0], [1564.0, 8288.0], [1560.0, 21364.0], [1556.0, 8305.0], [1552.0, 9725.0], [1652.0, 11778.666666666666], [1640.0, 8180.0], [1660.0, 20318.0], [1632.0, 8192.0], [1636.0, 7973.5], [1648.0, 8168.0], [1604.0, 19131.0], [1600.0, 8274.0], [1628.0, 8453.5], [1620.0, 8260.0], [1644.0, 8176.0], [1712.0, 7691.0], [1704.0, 7695.0], [1724.0, 7686.0], [1696.0, 8672.5], [1664.0, 8162.0], [1672.0, 8563.0], [1668.0, 8565.0], [1676.0, 7719.0], [1688.0, 7707.0], [1684.0, 7709.0], [1680.0, 8560.0], [1708.0, 9202.0], [1700.0, 8545.0], [1736.0, 18962.0], [1788.0, 8582.0], [1780.0, 13475.0], [1740.0, 8086.0], [1732.0, 18974.0], [1728.0, 15212.0], [1768.0, 18916.0], [1756.0, 7636.0], [1752.0, 8078.0], [1744.0, 8489.0], [1852.0, 18754.0], [1824.0, 7561.0], [1848.0, 8447.5], [1796.0, 8049.0], [1792.0, 8043.0], [1816.0, 9075.0], [1808.0, 13992.5], [1908.0, 8891.0], [1912.0, 8078.333333333333], [1888.0, 8245.0], [1896.0, 8567.5], [1900.0, 18681.0], [1856.0, 8203.0], [1864.0, 18735.0], [1868.0, 7433.0], [1884.0, 7843.0], [1880.0, 8917.0], [1876.0, 8921.0], [1872.0, 7860.0], [1976.0, 6671.0], [1956.0, 7591.0], [1960.0, 7916.0], [1964.0, 6687.0], [1980.0, 6672.0], [1968.0, 6687.5], [1924.0, 8857.5], [1928.0, 7344.0], [1948.0, 7273.0], [1944.0, 9995.0], [1940.0, 7279.0], [1936.0, 7289.0], [2032.0, 13015.0], [2040.0, 6618.0], [2028.0, 5286.0], [2036.0, 5278.0], [1996.0, 4778.0], [1992.0, 4781.0], [1988.0, 11863.5], [1984.0, 17517.0], [2008.0, 14359.0], [2144.0, 10509.0], [2168.0, 7793.5], [2160.0, 6078.666666666667], [2112.0, 5899.5], [2128.0, 9110.0], [2064.0, 11400.0], [2104.0, 5903.5], [2088.0, 9758.0], [2080.0, 14277.0], [2296.0, 5682.0], [2240.0, 11536.5], [2256.0, 5055.0], [2264.0, 13430.5], [2280.0, 12754.0], [2272.0, 6386.0], [2176.0, 12898.0], [2192.0, 9029.0], [2200.0, 9641.0], [2224.0, 10106.5], [2208.0, 5787.0], [2424.0, 10241.0], [2376.0, 9908.0], [2384.0, 10295.0], [2392.0, 9878.0], [2400.0, 9874.0], [2320.0, 6237.0], [2312.0, 11108.0], [2304.0, 7492.333333333333], [2352.0, 10418.0], [2336.0, 11659.0], [2552.0, 8121.5], [2496.0, 10592.0], [2504.0, 10566.5], [2512.0, 10526.0], [2520.0, 10122.5], [2544.0, 9320.666666666666], [2528.0, 10029.0], [2456.0, 8871.5], [2448.0, 9817.0], [2440.0, 10633.0], [2432.0, 6801.0], [2480.0, 6776.0], [2472.0, 6777.0], [2656.0, 5641.0], [2664.0, 5051.0], [2624.0, 8273.0], [2632.0, 8265.0], [2640.0, 8239.0], [2648.0, 6520.0], [2560.0, 10772.0], [2584.0, 9599.0], [2616.0, 8624.0], [2608.0, 10712.0], [2600.0, 10381.0], [2592.0, 9585.0], [2712.0, 14129.0], [2752.0, 5363.0], [2760.0, 4873.0], [2768.0, 9618.5], [2688.0, 9580.5], [2744.0, 11037.333333333334], [2736.0, 4968.0], [2728.0, 5418.0], [2720.0, 4793.0], [2936.0, 3576.0], [2880.0, 12827.0], [2888.0, 4006.0], [2896.0, 3893.0], [2928.0, 3578.0], [2920.0, 4781.0], [2912.0, 76.0], [2872.0, 7515.357142857142], [2864.0, 4645.0], [2856.0, 5214.0], [2944.0, 4771.0], [3000.0, 13323.736027074148], [2952.0, 9921.0], [2960.0, 9960.5], [2968.0, 3533.5], [2992.0, 4683.0], [2984.0, 3523.0], [2145.0, 6542.0], [2161.0, 5183.0], [2169.0, 14201.0], [2129.0, 9108.0], [2073.0, 5923.5], [2065.0, 9162.0], [2057.0, 9166.0], [2049.0, 6614.0], [2089.0, 9142.0], [2289.0, 8911.0], [2249.0, 9523.5], [2257.0, 11188.0], [2265.0, 8949.0], [2297.0, 14039.0], [2281.0, 14051.0], [2273.0, 8939.0], [2193.0, 12857.0], [2185.0, 9063.0], [2233.0, 10099.5], [2225.0, 6431.0], [2209.0, 5105.0], [2401.0, 9737.0], [2417.0, 10194.0], [2425.0, 10985.0], [2377.0, 10701.0], [2385.0, 9892.0], [2393.0, 9878.0], [2329.0, 8546.5], [2321.0, 13845.0], [2313.0, 11105.0], [2305.0, 8900.0], [2361.0, 10112.75], [2353.0, 9780.0], [2345.0, 8043.5], [2545.0, 10471.0], [2537.0, 6654.0], [2497.0, 10934.0], [2513.0, 10537.0], [2521.0, 10510.0], [2553.0, 10431.0], [2529.0, 6659.0], [2457.0, 10620.0], [2449.0, 10611.0], [2433.0, 10639.0], [2489.0, 10601.0], [2481.0, 6775.0], [2657.0, 4866.0], [2673.0, 5251.0], [2681.0, 11102.0], [2625.0, 8262.0], [2633.0, 8261.0], [2649.0, 6688.0], [2561.0, 6592.0], [2569.0, 9888.666666666666], [2577.0, 10013.0], [2585.0, 10405.0], [2617.0, 8269.0], [2601.0, 10388.0], [2785.0, 4948.5], [2793.0, 13906.0], [2753.0, 4914.0], [2761.0, 4866.0], [2769.0, 5282.0], [2777.0, 9611.5], [2705.0, 5461.0], [2697.0, 9578.5], [2745.0, 14047.0], [2737.0, 4967.0], [2729.0, 4976.0], [2721.0, 14092.0], [2881.0, 3711.0], [2889.0, 4004.0], [2897.0, 12686.0], [2921.0, 10060.0], [2873.0, 12835.0], [2865.0, 6568.8], [2953.0, 3567.0], [2945.0, 3572.0], [2961.0, 3542.0], [2969.0, 3528.0], [2993.0, 4084.0], [2985.0, 3522.0], [2977.0, 3925.3333333333335], [1037.0, 10575.5], [1061.0, 11481.0], [1081.0, 9562.0], [1077.0, 11187.0], [1033.0, 10872.0], [1053.0, 8818.0], [1049.0, 12420.0], [1045.0, 14426.0], [1069.0, 11188.0], [1057.0, 8072.0], [1137.0, 11264.5], [1145.0, 9372.0], [1093.0, 11269.0], [1129.0, 9991.333333333334], [1125.0, 11848.75], [1113.0, 6117.0], [1109.0, 11150.0], [1209.0, 9168.0], [1185.0, 7740.0], [1189.0, 9213.0], [1193.0, 14056.0], [1213.0, 14013.0], [1205.0, 9184.0], [1201.0, 9191.0], [1157.0, 9288.0], [1153.0, 11020.0], [1161.0, 14129.0], [1181.0, 11663.5], [1177.0, 11665.0], [1173.0, 7768.0], [1169.0, 10539.0], [1197.0, 9205.0], [1221.0, 9157.0], [1269.0, 10416.5], [1257.0, 9757.0], [1249.0, 13021.5], [1217.0, 9160.0], [1245.0, 13911.0], [1241.0, 13919.0], [1237.0, 9106.0], [1233.0, 11141.0], [1261.0, 11089.0], [1253.0, 126.0], [1317.0, 11037.0], [1281.0, 9745.0], [1297.0, 12540.0], [1325.0, 8046.0], [1313.0, 11039.0], [1393.0, 12304.0], [1385.0, 25433.0], [1401.0, 10872.0], [1397.0, 18144.5], [1357.0, 11004.0], [1349.0, 10559.333333333334], [1345.0, 11006.0], [1373.0, 9585.0], [1369.0, 23993.0], [1361.0, 13927.666666666666], [1389.0, 23965.0], [1461.0, 12195.0], [1469.0, 23823.0], [1445.0, 12211.0], [1449.0, 9453.0], [1465.0, 9430.0], [1421.0, 9503.0], [1417.0, 9508.0], [1413.0, 10853.0], [1409.0, 9376.5], [1433.0, 7846.0], [1429.0, 9479.0], [1425.0, 10823.0], [1453.0, 12203.0], [1529.0, 22909.0], [1505.0, 8417.0], [1509.0, 9830.0], [1513.0, 9826.0], [1533.0, 9787.0], [1525.0, 9804.0], [1521.0, 9815.0], [1473.0, 9411.0], [1477.0, 10710.0], [1485.0, 21517.0], [1497.0, 9849.0], [1493.0, 9856.0], [1489.0, 9859.0], [1517.0, 9824.0], [1541.0, 9767.0], [1589.0, 8288.0], [1549.0, 21396.0], [1545.0, 9762.0], [1537.0, 8358.0], [1577.0, 8293.0], [1573.0, 8707.0], [1561.0, 21362.0], [1557.0, 8306.0], [1553.0, 9725.0], [1653.0, 8171.0], [1633.0, 8192.0], [1637.0, 8178.0], [1657.0, 8164.0], [1649.0, 7733.0], [1609.0, 8270.0], [1613.0, 8264.25], [1629.0, 7770.0], [1621.0, 8255.0], [1645.0, 8169.0], [1641.0, 7216.0], [1721.0, 7907.5], [1725.0, 18978.0], [1665.0, 7723.0], [1669.0, 7721.0], [1673.0, 19013.0], [1689.0, 8680.5], [1681.0, 19008.0], [1709.0, 7692.0], [1701.0, 9209.0], [1781.0, 7827.0], [1789.0, 8046.333333333333], [1761.0, 8270.0], [1765.0, 14029.0], [1777.0, 8051.0], [1741.0, 8090.0], [1737.0, 8095.0], [1729.0, 8526.0], [1757.0, 9143.0], [1753.0, 8060.5], [1749.0, 8486.0], [1745.0, 8084.0], [1773.0, 8584.5], [1769.0, 8056.0], [1853.0, 7886.0], [1825.0, 10053.5], [1849.0, 7911.0], [1845.0, 11114.266666666666], [1801.0, 13662.0], [1821.0, 7994.0], [1813.0, 8563.0], [1913.0, 8209.0], [1905.0, 8114.6], [1889.0, 8905.0], [1897.0, 8900.0], [1917.0, 13144.5], [1909.0, 8214.0], [1857.0, 8290.0], [1861.0, 7444.0], [1865.0, 18735.0], [1869.0, 8934.0], [1885.0, 18697.0], [1877.0, 7849.0], [1873.0, 8923.0], [1973.0, 6681.5], [1977.0, 6676.0], [1953.0, 6854.0], [1957.0, 7921.0], [1961.0, 6694.0], [1965.0, 7096.0], [1969.0, 6680.0], [1921.0, 8527.5], [1925.0, 8856.0], [1929.0, 18631.0], [1933.0, 6868.5], [1949.0, 7268.0], [1941.0, 6435.0], [1937.0, 7286.0], [2033.0, 5282.0], [1997.0, 3266.0], [2017.0, 11455.5], [2025.0, 9504.75], [2029.0, 9024.5], [2037.0, 13008.0], [1993.0, 6835.0], [1989.0, 7059.0], [2013.0, 13389.0], [2009.0, 14358.0], [2005.0, 10418.0], [2001.0, 8716.333333333334], [2114.0, 6570.0], [2130.0, 6551.0], [2050.0, 8337.5], [2090.0, 6586.0], [2290.0, 5460.0], [2250.0, 8967.0], [2258.0, 8954.0], [2298.0, 8908.0], [2282.0, 5020.0], [2274.0, 11174.0], [2234.0, 5083.0], [2218.0, 8990.0], [2210.0, 6447.0], [2410.0, 10896.0], [2386.0, 10685.0], [2394.0, 9878.0], [2426.0, 9837.0], [2402.0, 10665.0], [2322.0, 13845.0], [2314.0, 4970.0], [2306.0, 6342.0], [2362.0, 9778.0], [2346.0, 7709.0], [2338.0, 10210.0], [2538.0, 10835.0], [2498.0, 10580.0], [2506.0, 10169.0], [2522.0, 10521.0], [2554.0, 10614.0], [2530.0, 6658.0], [2458.0, 10961.0], [2442.0, 10230.5], [2434.0, 10626.0], [2490.0, 10600.0], [2466.0, 10410.75], [2682.0, 5029.0], [2666.0, 4863.0], [2626.0, 8272.0], [2634.0, 8262.0], [2642.0, 8408.0], [2650.0, 5648.0], [2658.0, 5495.0], [2562.0, 10770.0], [2570.0, 10411.0], [2578.0, 10414.0], [2618.0, 8280.0], [2610.0, 10709.0], [2602.0, 10370.0], [2594.0, 10732.0], [2706.0, 7993.666666666666], [2714.0, 5237.0], [2794.0, 4794.0], [2754.0, 5325.0], [2778.0, 13945.0], [2698.0, 5463.0], [2690.0, 5152.0], [2746.0, 5375.0], [2738.0, 4967.0], [2730.0, 4974.0], [2722.0, 5422.0], [2938.0, 3576.0], [2890.0, 12670.0], [2898.0, 3887.0], [2866.0, 5702.818181818182], [2850.0, 5215.0], [2954.0, 4747.0], [2946.0, 3571.0], [2970.0, 10008.0], [2986.0, 4721.0], [2163.0, 8249.0], [2115.0, 5227.0], [2123.0, 6530.0], [2139.0, 12520.666666666666], [2155.0, 14214.0], [2147.0, 5870.5], [2067.0, 9119.0], [2051.0, 11404.0], [2099.0, 9190.2], [2083.0, 5245.0], [2299.0, 5007.0], [2243.0, 8971.0], [2251.0, 6403.0], [2259.0, 6396.0], [2267.0, 10066.5], [2283.0, 8917.0], [2275.0, 11173.0], [2179.0, 10703.888888888889], [2235.0, 5082.0], [2227.0, 12666.5], [2219.0, 11555.0], [2211.0, 9001.0], [2411.0, 9862.0], [2403.0, 9868.0], [2427.0, 10642.0], [2371.0, 10704.0], [2387.0, 9889.0], [2419.0, 10261.5], [2331.0, 13836.0], [2315.0, 4970.0], [2363.0, 9912.0], [2355.0, 10313.0], [2347.0, 10603.0], [2339.0, 11657.0], [2539.0, 6654.5], [2555.0, 10784.0], [2499.0, 10565.0], [2507.0, 10560.0], [2523.0, 10520.0], [2451.0, 10622.0], [2443.0, 10632.0], [2435.0, 10638.0], [2491.0, 10612.0], [2483.0, 9809.0], [2475.0, 10604.0], [2683.0, 5027.0], [2627.0, 8269.0], [2635.0, 8261.0], [2643.0, 8579.0], [2563.0, 10428.0], [2571.0, 10423.0], [2579.0, 9604.0], [2619.0, 8268.0], [2611.0, 10347.0], [2755.0, 4692.0], [2787.0, 9283.0], [2763.0, 9621.5], [2771.0, 5061.0], [2779.0, 5273.0], [2795.0, 4792.0], [2715.0, 5015.0], [2747.0, 14044.0], [2731.0, 4784.0], [2939.0, 3575.0], [2883.0, 8346.0], [2931.0, 7813.333333333333], [2891.0, 12794.0], [2923.0, 4178.5], [2915.0, 75.0], [2867.0, 13881.5], [2971.0, 3527.0], [2995.0, 7259.5], [2987.0, 3522.0], [519.0, 15750.0], [543.0, 14582.333333333334], [539.0, 12445.8], [535.0, 13199.6], [523.0, 14886.0], [521.0, 12641.5], [517.0, 14224.0], [515.0, 10703.0], [513.0, 15750.0], [571.0, 15017.5], [569.0, 15665.0], [549.0, 10723.0], [567.0, 13252.0], [565.0, 12221.0], [561.0, 10799.0], [559.0, 12223.0], [557.0, 14851.0], [555.0, 10737.5], [553.0, 10831.0], [605.0, 15592.0], [607.0, 14727.0], [603.0, 10683.0], [601.0, 14309.0], [599.0, 14312.0], [597.0, 14772.0], [595.0, 15654.0], [591.0, 10745.0], [583.0, 15227.5], [581.0, 15660.0], [579.0, 15661.0], [585.0, 15658.0], [639.0, 14597.0], [637.0, 14744.0], [631.0, 15504.0], [629.0, 14648.0], [627.0, 15510.0], [625.0, 14649.0], [623.0, 15509.0], [619.0, 14256.0], [615.0, 13049.0], [613.0, 14258.0], [609.0, 14687.0], [667.0, 14501.0], [665.0, 15376.0], [647.0, 15415.0], [645.0, 14131.0], [643.0, 15426.0], [641.0, 14580.0], [663.0, 15377.0], [661.0, 10342.0], [659.0, 10349.0], [657.0, 10489.0], [655.0, 14546.0], [653.0, 13299.666666666666], [649.0, 15413.0], [697.0, 10390.0], [703.0, 10384.5], [689.0, 15323.0], [691.0, 14461.0], [693.0, 10407.0], [699.0, 10388.0], [679.0, 15342.0], [677.0, 11743.666666666666], [675.0, 15351.0], [673.0, 15352.0], [687.0, 15325.0], [685.0, 14473.0], [683.0, 14047.0], [681.0, 15339.0], [695.0, 15310.0], [729.0, 15261.0], [733.0, 13967.0], [721.0, 15271.0], [731.0, 14396.0], [719.0, 10366.0], [705.0, 14004.0], [711.0, 12676.5], [709.0, 10377.0], [715.0, 14416.0], [713.0, 13992.0], [727.0, 15262.0], [725.0, 12743.0], [723.0, 10220.0], [761.0, 13912.0], [767.0, 10259.0], [753.0, 13942.0], [757.0, 13932.0], [765.0, 10262.0], [743.0, 13951.0], [741.0, 15247.0], [739.0, 10202.0], [737.0, 15250.0], [751.0, 14587.5], [749.0, 10323.0], [747.0, 14161.0], [745.0, 13949.0], [759.0, 15212.0], [797.0, 15103.0], [799.0, 10053.0], [785.0, 10218.0], [787.0, 15127.0], [789.0, 11633.0], [795.0, 14243.0], [775.0, 10094.0], [773.0, 10096.0], [771.0, 10256.0], [783.0, 10082.0], [781.0, 10083.0], [779.0, 10085.0], [777.0, 10093.0], [791.0, 10201.0], [825.0, 11040.0], [831.0, 10806.333333333334], [801.0, 14235.0], [803.0, 14234.0], [813.0, 5124.0], [811.0, 6135.0], [809.0, 7146.0], [821.0, 11241.0], [817.0, 3505.0], [861.0, 9523.0], [863.0, 9938.0], [857.0, 11230.0], [851.0, 8463.0], [833.0, 11643.0], [837.0, 11035.333333333334], [835.0, 14791.0], [843.0, 11231.0], [891.0, 11570.0], [889.0, 10384.5], [885.0, 10235.166666666666], [881.0, 11226.0], [877.0, 10792.4], [867.0, 11433.0], [925.0, 10467.666666666666], [915.0, 12173.2], [913.0, 14716.0], [911.0, 9775.0], [909.0, 11160.5], [897.0, 10052.5], [953.0, 10207.4], [959.0, 11473.0], [933.0, 11625.0], [929.0, 10631.583333333332], [947.0, 11479.0], [945.0, 11479.0], [941.0, 11479.0], [991.0, 8283.0], [977.0, 9762.0], [985.0, 8284.0], [975.0, 9763.0], [961.0, 9771.0], [963.0, 11406.0], [983.0, 8284.0], [979.0, 10386.25], [1019.0, 11573.0], [1021.0, 11573.0], [1023.0, 9658.0], [1011.0, 11291.5], [995.0, 9607.0], [993.0, 8223.0], [1007.0, 10987.5], [1005.0, 12766.5], [1003.0, 10738.0], [1015.0, 14436.0], [1013.0, 9637.0], [1082.0, 8011.0], [1086.0, 8009.0], [1074.0, 14337.0], [1054.0, 11256.0], [1050.0, 10864.0], [1042.0, 11278.0], [1070.0, 11478.0], [1142.0, 11097.5], [1150.0, 9347.0], [1102.0, 11368.0], [1098.0, 10197.666666666666], [1094.0, 11175.0], [1090.0, 10607.75], [1134.0, 11121.0], [1126.0, 11117.0], [1114.0, 11148.0], [1202.0, 10481.0], [1186.0, 9217.0], [1190.0, 14058.0], [1206.0, 10473.0], [1178.0, 9241.0], [1154.0, 11014.0], [1158.0, 14133.0], [1166.0, 12919.666666666666], [1162.0, 14129.0], [1174.0, 9244.0], [1170.0, 9247.0], [1198.0, 10496.0], [1194.0, 10499.0], [1274.0, 24151.0], [1254.0, 124.0], [1230.0, 12095.333333333334], [1218.0, 14008.0], [1238.0, 13925.0], [1234.0, 9152.0], [1262.0, 17623.5], [1258.0, 9755.0], [1250.0, 13906.0], [1294.0, 24124.0], [1334.0, 10340.0], [1314.0, 9557.5], [1330.0, 11048.5], [1286.0, 9187.333333333334], [1310.0, 24110.0], [1306.0, 19754.333333333332], [1298.0, 11045.0], [1326.0, 9674.0], [1322.0, 17557.5], [1318.0, 9702.0], [1402.0, 12287.0], [1406.0, 10900.5], [1378.0, 9919.0], [1382.0, 8754.0], [1386.0, 9563.0], [1398.0, 23948.0], [1394.0, 9546.0], [1358.0, 9669.0], [1374.0, 9585.0], [1370.0, 23993.0], [1362.0, 10336.0], [1390.0, 10891.0], [1418.0, 12258.0], [1466.0, 10763.0], [1442.0, 11508.0], [1458.0, 23852.0], [1438.0, 18047.5], [1422.0, 12249.0], [1434.0, 7845.0], [1430.0, 9476.0], [1426.0, 7856.0], [1454.0, 12202.0], [1446.0, 9461.0], [1478.0, 23777.0], [1530.0, 9789.0], [1506.0, 21488.0], [1526.0, 9795.0], [1502.0, 10099.5], [1482.0, 9865.0], [1486.0, 8446.0], [1498.0, 9846.0], [1494.0, 9853.0], [1490.0, 10121.5], [1514.0, 21481.0], [1510.0, 9829.0], [1550.0, 22850.0], [1570.0, 7653.5], [1590.0, 8287.0], [1586.0, 7941.75], [1546.0, 22876.0], [1542.0, 10290.0], [1538.0, 9771.0], [1566.0, 9697.5], [1558.0, 9717.0], [1554.0, 9724.0], [1654.0, 7732.0], [1658.0, 7728.0], [1634.0, 8192.0], [1638.0, 8178.0], [1610.0, 8271.0], [1602.0, 7838.0], [1630.0, 7762.0], [1626.0, 7787.0], [1618.0, 8007.428571428572], [1646.0, 8169.0], [1642.0, 9246.0], [1714.0, 8659.5], [1722.0, 7687.0], [1694.0, 11915.333333333334], [1678.0, 8356.0], [1690.0, 8144.0], [1686.0, 14108.5], [1682.0, 8152.0], [1710.0, 7693.0], [1706.0, 8448.5], [1702.0, 18993.0], [1730.0, 8524.0], [1738.0, 8093.0], [1786.0, 8050.0], [1742.0, 8083.0], [1766.0, 8470.0], [1762.0, 8069.0], [1758.0, 8478.0], [1754.0, 8481.0], [1750.0, 18933.0], [1746.0, 9154.0], [1854.0, 8293.0], [1826.0, 9068.0], [1830.0, 8708.666666666666], [1850.0, 8970.0], [1822.0, 7561.0], [1810.0, 7591.0], [1918.0, 7798.0], [1890.0, 8239.0], [1894.0, 8570.5], [1898.0, 7829.0], [1914.0, 18659.0], [1906.0, 7826.0], [1858.0, 7446.0], [1866.0, 8195.0], [1886.0, 7842.0], [1882.0, 7843.0], [1878.0, 8254.0], [1978.0, 6675.0], [1970.0, 6685.0], [1954.0, 6850.0], [1958.0, 7919.0], [1966.0, 6690.0], [1982.0, 6667.5], [1974.0, 6680.0], [1922.0, 7352.0], [1926.0, 18640.0], [1930.0, 7292.0], [1950.0, 7930.0], [1946.0, 7276.0], [1942.0, 7278.0], [1938.0, 7284.0], [2046.0, 8730.333333333334], [2018.0, 5288.0], [2022.0, 5287.0], [2026.0, 8743.666666666666], [2038.0, 5275.0], [2034.0, 14313.0], [1998.0, 4774.0], [1994.0, 4779.0], [1986.0, 18163.0], [2010.0, 14357.0], [2002.0, 14551.0], [2164.0, 9072.0], [2116.0, 5225.0], [2124.0, 5219.0], [2132.0, 7154.5], [2148.0, 5199.0], [2060.0, 11401.0], [2052.0, 13001.0], [2068.0, 5253.0], [2076.0, 9044.0], [2108.0, 8411.5], [2100.0, 5241.0], [2084.0, 6992.333333333333], [2140.0, 9100.0], [2284.0, 5016.0], [2300.0, 11138.0], [2244.0, 11205.0], [2260.0, 5052.0], [2268.0, 14076.0], [2292.0, 10028.0], [2276.0, 8928.0], [2188.0, 5604.666666666667], [2204.0, 9665.571428571428], [2236.0, 5082.0], [2220.0, 7711.0], [2212.0, 11227.0], [2412.0, 9861.0], [2372.0, 10704.0], [2380.0, 10425.666666666666], [2388.0, 9889.0], [2396.0, 9877.0], [2420.0, 10650.0], [2404.0, 9868.0], [2332.0, 13835.0], [2324.0, 13843.0], [2316.0, 6311.0], [2308.0, 6947.5], [2348.0, 10602.0], [2340.0, 8758.0], [2548.0, 9299.666666666666], [2500.0, 10576.0], [2508.0, 10558.0], [2516.0, 10525.0], [2556.0, 10783.0], [2540.0, 10493.0], [2452.0, 10390.0], [2444.0, 9825.0], [2436.0, 9830.0], [2492.0, 9805.0], [2484.0, 6775.0], [2684.0, 14138.0], [2636.0, 8247.0], [2644.0, 6695.0], [2652.0, 5647.0], [2668.0, 5344.666666666667], [2572.0, 10763.0], [2580.0, 10751.0], [2588.0, 10402.0], [2620.0, 8267.0], [2612.0, 10676.0], [2596.0, 10379.0], [2788.0, 13908.0], [2716.0, 14225.0], [2756.0, 4879.0], [2764.0, 5286.0], [2772.0, 4839.0], [2780.0, 4830.0], [2796.0, 4789.0], [2708.0, 14129.0], [2700.0, 14133.0], [2748.0, 5373.0], [2732.0, 5414.0], [2724.0, 5422.0], [2940.0, 3575.0], [2884.0, 4010.0], [2916.0, 75.0], [2876.0, 3870.0], [2868.0, 7745.333333333334], [2860.0, 5214.0], [2948.0, 9988.0], [2996.0, 4682.0], [2956.0, 3547.0], [2964.0, 3539.3333333333335], [2988.0, 3522.0], [2980.0, 4724.0], [2149.0, 5193.0], [2117.0, 6568.0], [2165.0, 6515.0], [2157.0, 5721.0], [2061.0, 11621.333333333334], [2053.0, 9168.0], [2101.0, 6576.0], [2093.0, 5242.0], [2285.0, 8915.0], [2253.0, 11523.5], [2301.0, 6344.0], [2245.0, 7266.0], [2261.0, 6395.0], [2277.0, 11160.0], [2189.0, 14178.0], [2181.0, 9067.0], [2237.0, 6422.0], [2213.0, 14122.0], [2429.0, 9835.0], [2373.0, 6878.0], [2389.0, 9880.0], [2397.0, 9875.0], [2421.0, 10988.0], [2405.0, 9868.0], [2333.0, 6147.0], [2325.0, 12395.0], [2317.0, 6297.0], [2309.0, 8895.0], [2357.0, 9915.0], [2349.0, 10424.0], [2341.0, 11647.0], [2533.0, 6657.0], [2501.0, 10564.0], [2509.0, 10569.0], [2517.0, 9730.0], [2453.0, 10623.0], [2445.0, 10615.0], [2437.0, 10635.0], [2493.0, 9804.0], [2485.0, 10602.0], [2469.0, 10345.333333333334], [2677.0, 7418.0], [2629.0, 8269.0], [2645.0, 6350.0], [2653.0, 5646.0], [2565.0, 10421.5], [2573.0, 10407.0], [2589.0, 9864.666666666666], [2621.0, 8263.0], [2605.0, 10597.333333333334], [2597.0, 9584.0], [2789.0, 13907.0], [2765.0, 5286.0], [2797.0, 4789.0], [2757.0, 5321.0], [2773.0, 5281.0], [2781.0, 13939.0], [2717.0, 5430.0], [2709.0, 5018.0], [2693.0, 5024.0], [2749.0, 4930.0], [2741.0, 8298.333333333334], [2725.0, 9535.5], [2885.0, 4010.0], [2933.0, 4176.0], [2909.0, 76.0], [2925.0, 3579.0], [2917.0, 75.0], [2877.0, 3721.0], [2869.0, 6020.625], [2949.0, 3569.0], [2965.0, 9890.0], [2997.0, 4680.0], [2989.0, 4684.0], [2981.0, 4124.0], [1075.0, 11331.5], [1083.0, 11476.0], [1055.0, 8077.0], [1031.0, 9987.5], [1035.0, 12853.5], [1039.0, 8103.0], [1051.0, 8083.0], [1071.0, 9600.5], [1067.0, 10130.333333333334], [1059.0, 10993.0], [1143.0, 7915.0], [1151.0, 10341.0], [1139.0, 9979.285714285716], [1103.0, 11440.0], [1095.0, 11450.0], [1123.0, 9425.0], [1115.0, 11434.0], [1107.0, 7975.0], [1211.0, 9167.0], [1215.0, 9809.5], [1187.0, 9216.0], [1195.0, 7730.0], [1207.0, 14029.0], [1203.0, 11176.0], [1183.0, 11226.0], [1159.0, 14134.0], [1167.0, 9256.0], [1163.0, 11268.0], [1179.0, 14088.0], [1175.0, 11230.0], [1171.0, 9246.0], [1199.0, 11192.0], [1231.0, 11142.0], [1275.0, 13607.0], [1251.0, 1142.0], [1267.0, 9752.0], [1227.0, 9155.0], [1223.0, 9801.5], [1243.0, 12138.5], [1235.0, 13963.0], [1263.0, 9753.0], [1259.0, 24160.0], [1255.0, 8228.0], [1287.0, 9718.0], [1343.0, 20475.5], [1335.0, 16874.5], [1331.0, 9673.0], [1283.0, 9918.666666666666], [1311.0, 9704.0], [1307.0, 8077.0], [1303.0, 10375.25], [1299.0, 8081.0], [1323.0, 9684.0], [1319.0, 9688.0], [1315.0, 9703.0], [1399.0, 9541.0], [1403.0, 9527.0], [1407.0, 10860.0], [1383.0, 23973.0], [1379.0, 9570.0], [1387.0, 9562.0], [1395.0, 9545.0], [1351.0, 10203.8], [1375.0, 25455.0], [1367.0, 11776.000000000002], [1363.0, 24074.0], [1391.0, 10890.0], [1467.0, 10755.0], [1471.0, 11721.0], [1447.0, 23863.0], [1451.0, 9453.0], [1463.0, 24581.0], [1459.0, 23852.0], [1423.0, 10827.0], [1419.0, 10839.0], [1415.0, 9365.0], [1411.0, 10186.5], [1439.0, 9468.0], [1435.0, 10806.0], [1427.0, 10818.0], [1455.0, 12199.0], [1531.0, 9787.0], [1535.0, 16344.5], [1507.0, 10357.0], [1515.0, 21480.0], [1527.0, 8376.0], [1523.0, 9106.0], [1503.0, 9837.0], [1475.0, 16579.0], [1483.0, 9156.5], [1479.0, 9866.0], [1487.0, 9861.0], [1499.0, 8429.0], [1491.0, 9857.0], [1519.0, 9109.0], [1551.0, 8314.0], [1587.0, 8076.0], [1547.0, 9752.0], [1543.0, 9764.0], [1575.0, 8298.0], [1571.0, 8177.0], [1563.0, 10229.0], [1559.0, 9711.0], [1555.0, 22842.0], [1655.0, 7731.0], [1659.0, 7725.0], [1663.0, 11990.333333333334], [1639.0, 8175.0], [1631.0, 7762.0], [1603.0, 8277.0], [1611.0, 9295.3], [1623.0, 8255.0], [1619.0, 8269.0], [1647.0, 7737.0], [1643.0, 7738.0], [1679.0, 19011.0], [1719.0, 8767.6], [1703.0, 8136.0], [1723.0, 8120.0], [1691.0, 7704.0], [1667.0, 13790.5], [1671.0, 8142.5], [1675.0, 8473.0], [1683.0, 9218.0], [1711.0, 9199.0], [1707.0, 7694.0], [1699.0, 8630.333333333334], [1787.0, 8252.25], [1767.0, 8467.0], [1791.0, 13473.0], [1763.0, 7629.0], [1743.0, 18777.0], [1739.0, 8092.0], [1735.0, 8606.333333333334], [1731.0, 9189.0], [1759.0, 8476.0], [1755.0, 8480.0], [1747.0, 18937.0], [1771.0, 8051.0], [1851.0, 18755.0], [1827.0, 18853.0], [1847.0, 8982.0], [1807.0, 11502.666666666666], [1803.0, 8566.5], [1799.0, 10099.5], [1815.0, 9076.0], [1907.0, 8228.0], [1915.0, 7800.0], [1919.0, 18646.0], [1899.0, 18683.0], [1887.0, 8246.0], [1859.0, 8289.0], [1863.0, 8416.5], [1867.0, 8278.0], [1871.0, 8397.5], [1883.0, 8247.0], [1875.0, 8257.0], [1975.0, 6673.0], [1979.0, 6666.0], [1983.0, 6660.0], [1959.0, 7252.0], [1963.0, 6694.0], [1971.0, 6683.0], [1951.0, 17715.0], [1927.0, 8855.0], [1931.0, 7291.0], [1935.0, 12847.5], [1947.0, 12499.5], [1943.0, 17726.0], [1939.0, 7280.0], [2035.0, 9181.0], [2047.0, 6615.0], [2031.0, 5285.0], [2043.0, 7318.666666666667], [1995.0, 14564.0], [1991.0, 12283.0], [2011.0, 14356.0], [2007.0, 6632.0], [2003.0, 14548.0], [2158.0, 9083.0], [2166.0, 6515.0], [2118.0, 9122.0], [2126.0, 5885.5], [2150.0, 14222.0], [2110.0, 6572.0], [2078.0, 9150.0], [2102.0, 6576.0], [2086.0, 9759.0], [2134.0, 5203.0], [2294.0, 6353.0], [2286.0, 11149.0], [2246.0, 11204.0], [2254.0, 11191.0], [2262.0, 6394.0], [2270.0, 10060.5], [2278.0, 6370.0], [2238.0, 8972.0], [2190.0, 9030.0], [2198.0, 14156.0], [2206.0, 12699.0], [2230.0, 14114.0], [2222.0, 9847.333333333334], [2414.0, 9860.0], [2382.0, 10689.0], [2422.0, 10633.0], [2430.0, 10232.0], [2374.0, 9910.0], [2390.0, 9879.0], [2334.0, 12532.0], [2326.0, 13842.0], [2318.0, 8802.0], [2358.0, 10709.0], [2542.0, 10491.0], [2502.0, 9768.0], [2518.0, 10523.0], [2558.0, 8684.5], [2462.0, 10497.25], [2446.0, 10628.0], [2438.0, 9830.0], [2494.0, 10610.0], [2486.0, 10784.0], [2478.0, 8867.5], [2470.0, 10617.0], [2686.0, 5247.0], [2670.0, 4938.0], [2630.0, 8256.0], [2638.0, 8243.0], [2646.0, 6691.0], [2654.0, 5645.0], [2678.0, 5471.0], [2662.0, 5115.25], [2566.0, 10414.0], [2574.0, 10759.0], [2590.0, 10390.0], [2606.0, 10714.0], [2598.0, 10388.0], [2790.0, 5238.0], [2766.0, 4654.0], [2774.0, 4838.0], [2782.0, 5268.0], [2718.0, 4985.0], [2702.0, 5168.666666666667], [2694.0, 5255.666666666667], [2726.0, 5421.0], [2926.0, 3579.0], [2942.0, 7350.5], [2894.0, 12566.333333333334], [2910.0, 76.0], [2918.0, 10063.0], [2878.0, 12831.0], [2846.0, 4584.0], [2870.0, 6858.8], [2990.0, 3485.0], [2950.0, 3569.0], [2958.0, 4145.5], [2966.0, 10014.0], [2974.0, 4325.666666666667], [2998.0, 3482.0], [2079.0, 6591.0], [2119.0, 9120.0], [2127.0, 5212.0], [2135.0, 5874.5], [2071.0, 8597.333333333334], [2063.0, 5937.5], [2055.0, 11082.5], [2095.0, 7436.666666666667], [2247.0, 14100.0], [2279.0, 8925.0], [2255.0, 8954.0], [2271.0, 6386.0], [2191.0, 12860.0], [2183.0, 11088.333333333334], [2231.0, 6831.666666666667], [2223.0, 14120.0], [2407.0, 8744.0], [2431.0, 9834.0], [2375.0, 10443.0], [2399.0, 9875.0], [2415.0, 10660.0], [2335.0, 8767.0], [2327.0, 10943.0], [2319.0, 8793.0], [2311.0, 5646.5], [2367.0, 10308.0], [2351.0, 10555.0], [2343.0, 9162.5], [2447.0, 10624.0], [2535.0, 10376.25], [2455.0, 10608.0], [2551.0, 10444.0], [2559.0, 9626.0], [2511.0, 6708.0], [2439.0, 10634.0], [2495.0, 6769.0], [2487.0, 10601.0], [2479.0, 9455.25], [2471.0, 6778.0], [2671.0, 14142.0], [2631.0, 8608.0], [2639.0, 8583.0], [2655.0, 5645.0], [2663.0, 5493.0], [2623.0, 8268.5], [2575.0, 10417.0], [2583.0, 8854.333333333334], [2591.0, 9588.0], [2615.0, 8271.0], [2607.0, 10712.0], [2719.0, 4982.0], [2791.0, 4795.0], [2775.0, 5276.0], [2759.0, 9432.5], [2783.0, 5266.0], [2711.0, 9573.5], [2695.0, 5024.0], [2751.0, 14037.5], [2735.0, 10981.333333333334], [2727.0, 4977.0], [2887.0, 12675.5], [2943.0, 10053.0], [2895.0, 12565.0], [2911.0, 76.11111111111111], [2919.0, 10062.0], [2847.0, 4773.0], [2871.0, 9437.25], [2951.0, 10048.0], [2983.0, 3524.0], [1.0, 11014.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2800.3259555555546, 12945.861022222196]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3518.1666666666665, "minX": 1.68302376E12, "maxY": 63749.21666666667, "series": [{"data": [[1.68302376E12, 4403.8], [1.68302394E12, 47535.8], [1.68302382E12, 47776.01666666667], [1.683024E12, 57093.11666666667], [1.68302388E12, 63749.21666666667], [1.68302406E12, 36905.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302376E12, 3518.1666666666665], [1.68302394E12, 33868.666666666664], [1.68302382E12, 35484.666666666664], [1.683024E12, 41165.916666666664], [1.68302388E12, 45517.333333333336], [1.68302406E12, 29458.333333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302406E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6853.7368421052615, "minX": 1.68302376E12, "maxY": 16856.092867756335, "series": [{"data": [[1.68302376E12, 6853.7368421052615], [1.68302394E12, 16856.092867756335], [1.68302382E12, 13452.057637571164], [1.683024E12, 8940.86526272743], [1.68302388E12, 15862.385874563135], [1.68302406E12, 9618.476857142836]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302406E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6853.4377990430585, "minX": 1.68302376E12, "maxY": 16454.02897473995, "series": [{"data": [[1.68302376E12, 6853.4377990430585], [1.68302394E12, 16454.02897473995], [1.68302382E12, 13452.036527514185], [1.683024E12, 8940.848292782664], [1.68302388E12, 15325.449696523836], [1.68302406E12, 9618.467714285702]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302406E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.2860000000000002, "minX": 1.68302376E12, "maxY": 11100.942298167385, "series": [{"data": [[1.68302376E12, 18.36363636363635], [1.68302394E12, 11100.942298167385], [1.68302382E12, 864.281783681212], [1.683024E12, 662.1081578409346], [1.68302388E12, 2439.3093617803956], [1.68302406E12, 0.2860000000000002]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302406E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.68302376E12, "maxY": 168435.0, "series": [{"data": [[1.68302376E12, 12438.0], [1.68302394E12, 161202.0], [1.68302382E12, 55986.0], [1.683024E12, 168435.0], [1.68302388E12, 100117.0], [1.68302406E12, 25455.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302376E12, 9601.1], [1.68302394E12, 47477.5], [1.68302382E12, 29862.5], [1.683024E12, 14453.0], [1.68302388E12, 31269.0], [1.68302406E12, 14297.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302376E12, 11828.330000000002], [1.68302394E12, 151339.75], [1.68302382E12, 49437.66], [1.683024E12, 77284.72], [1.68302388E12, 100092.0], [1.68302406E12, 23914.709999999992]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302376E12, 9709.599999999999], [1.68302394E12, 141616.75], [1.68302382E12, 41389.15], [1.683024E12, 16175.0], [1.68302388E12, 79311.15000000004], [1.68302406E12, 15309.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302376E12, 78.0], [1.68302394E12, 24.0], [1.68302382E12, 21.0], [1.683024E12, 16.0], [1.68302388E12, 15.0], [1.68302406E12, 75.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302376E12, 7768.0], [1.68302394E12, 100.0], [1.68302382E12, 11738.5], [1.683024E12, 10080.0], [1.68302388E12, 10678.5], [1.68302406E12, 9832.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302406E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 59.0, "minX": 1.0, "maxY": 133662.0, "series": [{"data": [[2.0, 41786.0], [3.0, 36438.0], [4.0, 37420.5], [5.0, 1689.0], [6.0, 10427.0], [7.0, 10611.0], [8.0, 6398.5], [9.0, 9646.0], [10.0, 11004.0], [11.0, 9131.5], [12.0, 7685.5], [13.0, 3324.0], [14.0, 13560.0], [16.0, 11737.5], [17.0, 9362.0], [18.0, 13373.5], [19.0, 4477.0], [20.0, 12020.0], [21.0, 6394.0], [22.0, 46194.5], [23.0, 4324.0], [25.0, 1817.0], [26.0, 12565.5], [28.0, 15033.0], [29.0, 68.0], [30.0, 90.0], [31.0, 8269.0], [32.0, 15472.0], [35.0, 11848.0], [36.0, 75.5], [38.0, 7428.0], [40.0, 3949.5], [41.0, 81.0], [43.0, 18715.0], [45.0, 3599.0], [47.0, 4702.5], [46.0, 12869.0], [52.0, 11141.5], [54.0, 75477.0], [58.0, 2771.5], [59.0, 5463.0], [61.0, 59.0], [62.0, 7174.0], [66.0, 2602.0], [69.0, 65.0], [68.0, 10412.5], [70.0, 11029.5], [75.0, 97.0], [72.0, 3002.0], [74.0, 2875.5], [79.0, 6576.5], [80.0, 80.5], [82.0, 79.0], [85.0, 76.0], [91.0, 80.0], [89.0, 71.0], [90.0, 9832.5], [93.0, 17988.0], [92.0, 100065.0], [98.0, 2362.0], [99.0, 70.0], [101.0, 29859.0], [100.0, 79.0], [102.0, 5466.5], [104.0, 5307.5], [110.0, 96.0], [111.0, 11737.0], [112.0, 100082.0], [114.0, 97.0], [123.0, 3131.0], [122.0, 76.0], [124.0, 984.0], [126.0, 3578.5], [131.0, 17369.0], [134.0, 4166.0], [138.0, 100.5], [150.0, 78.0], [147.0, 81.0], [149.0, 75.0], [148.0, 100.5], [151.0, 97.0], [154.0, 10853.5], [155.0, 70.0], [163.0, 8912.0], [167.0, 8489.0], [164.0, 7897.0], [175.0, 113.0], [196.0, 10520.5], [200.0, 66.5], [206.0, 93.0], [210.0, 6287.5], [220.0, 131.0], [219.0, 78.0], [227.0, 6228.0], [237.0, 13173.0], [244.0, 94.0], [254.0, 13448.0], [266.0, 19134.5], [261.0, 11572.0], [270.0, 12082.0], [282.0, 11009.0], [283.0, 14455.0], [272.0, 12117.0], [302.0, 14808.0], [299.0, 96.0], [289.0, 10659.0], [309.0, 9783.0], [317.0, 8949.0], [358.0, 8259.0], [382.0, 11157.0], [398.0, 16806.0], [394.0, 13998.0], [414.0, 11689.0], [417.0, 11959.0], [437.0, 13679.0], [479.0, 10449.0], [466.0, 13392.0], [480.0, 12704.0], [491.0, 14092.0], [586.0, 10282.0], [618.0, 14268.0], [733.0, 798.0], [1.0, 12817.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 15843.0], [299.0, 102586.0], [155.0, 117695.0], [98.0, 133662.0], [15.0, 109599.0], [61.0, 105668.0], [124.0, 103714.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 733.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100082.0, "series": [{"data": [[2.0, 41786.0], [3.0, 36438.0], [4.0, 37420.5], [5.0, 1689.0], [6.0, 10427.0], [7.0, 10611.0], [8.0, 6398.5], [9.0, 9646.0], [10.0, 11004.0], [11.0, 9131.5], [12.0, 7685.5], [13.0, 3324.0], [14.0, 13560.0], [16.0, 11737.5], [17.0, 9362.0], [18.0, 13373.5], [19.0, 4477.0], [20.0, 12020.0], [21.0, 6394.0], [22.0, 46194.5], [23.0, 4324.0], [25.0, 1817.0], [26.0, 12565.5], [28.0, 15033.0], [29.0, 68.0], [30.0, 90.0], [31.0, 8269.0], [32.0, 15471.5], [35.0, 11848.0], [36.0, 75.5], [38.0, 7428.0], [40.0, 3949.5], [41.0, 81.0], [43.0, 18715.0], [45.0, 3599.0], [47.0, 4702.5], [46.0, 12869.0], [52.0, 11141.5], [54.0, 75477.0], [58.0, 2771.5], [59.0, 5463.0], [61.0, 59.0], [62.0, 7174.0], [66.0, 2602.0], [69.0, 65.0], [68.0, 10412.5], [70.0, 11029.5], [75.0, 97.0], [72.0, 3002.0], [74.0, 2875.5], [79.0, 6576.5], [80.0, 80.5], [82.0, 79.0], [85.0, 76.0], [91.0, 80.0], [89.0, 71.0], [90.0, 9832.5], [93.0, 17988.0], [92.0, 100065.0], [98.0, 2362.0], [99.0, 70.0], [101.0, 29858.0], [100.0, 79.0], [102.0, 5466.5], [104.0, 5307.5], [110.0, 96.0], [111.0, 11737.0], [112.0, 100082.0], [114.0, 97.0], [123.0, 3131.0], [122.0, 76.0], [124.0, 984.0], [126.0, 3578.5], [131.0, 17369.0], [134.0, 4166.0], [138.0, 100.5], [150.0, 78.0], [147.0, 81.0], [149.0, 75.0], [148.0, 100.5], [151.0, 97.0], [154.0, 10853.5], [155.0, 70.0], [163.0, 8912.0], [167.0, 8489.0], [164.0, 7897.0], [175.0, 113.0], [196.0, 10520.5], [200.0, 66.5], [206.0, 93.0], [210.0, 6287.5], [220.0, 131.0], [219.0, 78.0], [227.0, 6228.0], [237.0, 13173.0], [244.0, 94.0], [254.0, 13448.0], [266.0, 19134.5], [261.0, 11572.0], [270.0, 12082.0], [282.0, 11009.0], [283.0, 14455.0], [272.0, 12117.0], [302.0, 14808.0], [299.0, 96.0], [289.0, 10659.0], [309.0, 9783.0], [317.0, 8949.0], [358.0, 8259.0], [382.0, 11157.0], [398.0, 16806.0], [394.0, 13998.0], [414.0, 11689.0], [417.0, 11959.0], [437.0, 13679.0], [479.0, 10449.0], [466.0, 13392.0], [480.0, 12704.0], [491.0, 14092.0], [586.0, 10282.0], [618.0, 14268.0], [733.0, 798.0], [1.0, 12817.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0], [299.0, 0.0], [155.0, 0.0], [98.0, 0.0], [15.0, 0.0], [61.0, 0.0], [124.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 733.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.68302376E12, "maxY": 78.75, "series": [{"data": [[1.68302376E12, 25.0], [1.68302394E12, 68.75], [1.68302382E12, 78.75], [1.683024E12, 77.5], [1.68302388E12, 73.75], [1.68302406E12, 51.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302406E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.68302376E12, "maxY": 90.13333333333334, "series": [{"data": [[1.68302376E12, 6.966666666666667], [1.68302394E12, 67.06666666666666], [1.68302382E12, 70.26666666666667], [1.683024E12, 81.51666666666667], [1.68302388E12, 90.13333333333334], [1.68302406E12, 58.333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68302394E12, 0.23333333333333334], [1.68302388E12, 0.48333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302406E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.68302376E12, "maxY": 90.13333333333334, "series": [{"data": [[1.68302376E12, 6.966666666666667], [1.68302394E12, 67.06666666666666], [1.68302382E12, 70.26666666666667], [1.683024E12, 81.51666666666667], [1.68302388E12, 90.13333333333334], [1.68302406E12, 58.333333333333336]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68302394E12, 0.23333333333333334], [1.68302388E12, 0.48333333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302406E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.68302376E12, "maxY": 90.13333333333334, "series": [{"data": [[1.68302376E12, 6.966666666666667], [1.68302394E12, 67.06666666666666], [1.68302382E12, 70.26666666666667], [1.683024E12, 81.51666666666667], [1.68302388E12, 90.13333333333334], [1.68302406E12, 58.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68302394E12, 0.23333333333333334], [1.68302388E12, 0.48333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302406E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

