/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 199488.0, "series": [{"data": [[0.0, 12.0], [0.1, 23.0], [0.2, 26.0], [0.3, 31.0], [0.4, 33.0], [0.5, 34.0], [0.6, 35.0], [0.7, 36.0], [0.8, 38.0], [0.9, 38.0], [1.0, 40.0], [1.1, 41.0], [1.2, 42.0], [1.3, 43.0], [1.4, 44.0], [1.5, 45.0], [1.6, 46.0], [1.7, 48.0], [1.8, 49.0], [1.9, 51.0], [2.0, 52.0], [2.1, 53.0], [2.2, 54.0], [2.3, 54.0], [2.4, 54.0], [2.5, 55.0], [2.6, 55.0], [2.7, 56.0], [2.8, 56.0], [2.9, 56.0], [3.0, 57.0], [3.1, 57.0], [3.2, 57.0], [3.3, 57.0], [3.4, 58.0], [3.5, 58.0], [3.6, 59.0], [3.7, 59.0], [3.8, 59.0], [3.9, 60.0], [4.0, 60.0], [4.1, 60.0], [4.2, 60.0], [4.3, 61.0], [4.4, 62.0], [4.5, 63.0], [4.6, 63.0], [4.7, 63.0], [4.8, 64.0], [4.9, 64.0], [5.0, 64.0], [5.1, 64.0], [5.2, 64.0], [5.3, 65.0], [5.4, 65.0], [5.5, 65.0], [5.6, 65.0], [5.7, 65.0], [5.8, 65.0], [5.9, 66.0], [6.0, 66.0], [6.1, 66.0], [6.2, 67.0], [6.3, 67.0], [6.4, 67.0], [6.5, 67.0], [6.6, 68.0], [6.7, 68.0], [6.8, 68.0], [6.9, 69.0], [7.0, 69.0], [7.1, 69.0], [7.2, 70.0], [7.3, 70.0], [7.4, 70.0], [7.5, 70.0], [7.6, 71.0], [7.7, 71.0], [7.8, 71.0], [7.9, 72.0], [8.0, 72.0], [8.1, 72.0], [8.2, 73.0], [8.3, 73.0], [8.4, 73.0], [8.5, 73.0], [8.6, 73.0], [8.7, 74.0], [8.8, 74.0], [8.9, 74.0], [9.0, 74.0], [9.1, 74.0], [9.2, 74.0], [9.3, 74.0], [9.4, 75.0], [9.5, 75.0], [9.6, 75.0], [9.7, 75.0], [9.8, 75.0], [9.9, 75.0], [10.0, 75.0], [10.1, 75.0], [10.2, 76.0], [10.3, 76.0], [10.4, 76.0], [10.5, 76.0], [10.6, 76.0], [10.7, 76.0], [10.8, 76.0], [10.9, 77.0], [11.0, 77.0], [11.1, 77.0], [11.2, 77.0], [11.3, 77.0], [11.4, 77.0], [11.5, 77.0], [11.6, 77.0], [11.7, 77.0], [11.8, 77.0], [11.9, 77.0], [12.0, 78.0], [12.1, 78.0], [12.2, 78.0], [12.3, 78.0], [12.4, 78.0], [12.5, 78.0], [12.6, 78.0], [12.7, 78.0], [12.8, 79.0], [12.9, 79.0], [13.0, 79.0], [13.1, 79.0], [13.2, 79.0], [13.3, 79.0], [13.4, 79.0], [13.5, 79.0], [13.6, 79.0], [13.7, 79.0], [13.8, 80.0], [13.9, 80.0], [14.0, 80.0], [14.1, 80.0], [14.2, 80.0], [14.3, 80.0], [14.4, 80.0], [14.5, 80.0], [14.6, 80.0], [14.7, 80.0], [14.8, 80.0], [14.9, 80.0], [15.0, 81.0], [15.1, 81.0], [15.2, 81.0], [15.3, 81.0], [15.4, 81.0], [15.5, 81.0], [15.6, 81.0], [15.7, 81.0], [15.8, 81.0], [15.9, 81.0], [16.0, 81.0], [16.1, 81.0], [16.2, 82.0], [16.3, 82.0], [16.4, 82.0], [16.5, 82.0], [16.6, 82.0], [16.7, 82.0], [16.8, 82.0], [16.9, 82.0], [17.0, 82.0], [17.1, 82.0], [17.2, 83.0], [17.3, 83.0], [17.4, 83.0], [17.5, 83.0], [17.6, 83.0], [17.7, 83.0], [17.8, 83.0], [17.9, 83.0], [18.0, 83.0], [18.1, 83.0], [18.2, 83.0], [18.3, 83.0], [18.4, 84.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 84.0], [18.9, 84.0], [19.0, 84.0], [19.1, 84.0], [19.2, 84.0], [19.3, 84.0], [19.4, 84.0], [19.5, 84.0], [19.6, 84.0], [19.7, 85.0], [19.8, 85.0], [19.9, 85.0], [20.0, 85.0], [20.1, 85.0], [20.2, 85.0], [20.3, 85.0], [20.4, 85.0], [20.5, 85.0], [20.6, 85.0], [20.7, 85.0], [20.8, 85.0], [20.9, 86.0], [21.0, 86.0], [21.1, 86.0], [21.2, 86.0], [21.3, 86.0], [21.4, 86.0], [21.5, 86.0], [21.6, 86.0], [21.7, 86.0], [21.8, 86.0], [21.9, 86.0], [22.0, 87.0], [22.1, 87.0], [22.2, 87.0], [22.3, 87.0], [22.4, 87.0], [22.5, 87.0], [22.6, 87.0], [22.7, 87.0], [22.8, 88.0], [22.9, 88.0], [23.0, 88.0], [23.1, 88.0], [23.2, 88.0], [23.3, 88.0], [23.4, 88.0], [23.5, 88.0], [23.6, 88.0], [23.7, 88.0], [23.8, 88.0], [23.9, 88.0], [24.0, 89.0], [24.1, 89.0], [24.2, 89.0], [24.3, 89.0], [24.4, 89.0], [24.5, 89.0], [24.6, 89.0], [24.7, 89.0], [24.8, 89.0], [24.9, 89.0], [25.0, 90.0], [25.1, 90.0], [25.2, 90.0], [25.3, 90.0], [25.4, 90.0], [25.5, 90.0], [25.6, 90.0], [25.7, 91.0], [25.8, 91.0], [25.9, 91.0], [26.0, 91.0], [26.1, 91.0], [26.2, 91.0], [26.3, 91.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 92.0], [27.0, 92.0], [27.1, 92.0], [27.2, 93.0], [27.3, 93.0], [27.4, 93.0], [27.5, 93.0], [27.6, 93.0], [27.7, 93.0], [27.8, 93.0], [27.9, 94.0], [28.0, 94.0], [28.1, 94.0], [28.2, 94.0], [28.3, 94.0], [28.4, 94.0], [28.5, 95.0], [28.6, 95.0], [28.7, 95.0], [28.8, 95.0], [28.9, 95.0], [29.0, 95.0], [29.1, 95.0], [29.2, 95.0], [29.3, 95.0], [29.4, 96.0], [29.5, 96.0], [29.6, 96.0], [29.7, 96.0], [29.8, 96.0], [29.9, 96.0], [30.0, 96.0], [30.1, 96.0], [30.2, 96.0], [30.3, 96.0], [30.4, 97.0], [30.5, 97.0], [30.6, 97.0], [30.7, 97.0], [30.8, 97.0], [30.9, 97.0], [31.0, 97.0], [31.1, 97.0], [31.2, 97.0], [31.3, 97.0], [31.4, 97.0], [31.5, 98.0], [31.6, 98.0], [31.7, 98.0], [31.8, 98.0], [31.9, 98.0], [32.0, 98.0], [32.1, 98.0], [32.2, 98.0], [32.3, 98.0], [32.4, 98.0], [32.5, 98.0], [32.6, 99.0], [32.7, 99.0], [32.8, 99.0], [32.9, 99.0], [33.0, 99.0], [33.1, 99.0], [33.2, 99.0], [33.3, 99.0], [33.4, 100.0], [33.5, 100.0], [33.6, 100.0], [33.7, 100.0], [33.8, 100.0], [33.9, 100.0], [34.0, 100.0], [34.1, 100.0], [34.2, 100.0], [34.3, 101.0], [34.4, 101.0], [34.5, 101.0], [34.6, 101.0], [34.7, 101.0], [34.8, 101.0], [34.9, 101.0], [35.0, 101.0], [35.1, 102.0], [35.2, 102.0], [35.3, 102.0], [35.4, 102.0], [35.5, 102.0], [35.6, 103.0], [35.7, 103.0], [35.8, 103.0], [35.9, 103.0], [36.0, 103.0], [36.1, 104.0], [36.2, 104.0], [36.3, 104.0], [36.4, 104.0], [36.5, 104.0], [36.6, 105.0], [36.7, 105.0], [36.8, 105.0], [36.9, 105.0], [37.0, 105.0], [37.1, 106.0], [37.2, 106.0], [37.3, 106.0], [37.4, 106.0], [37.5, 106.0], [37.6, 106.0], [37.7, 106.0], [37.8, 107.0], [37.9, 107.0], [38.0, 107.0], [38.1, 107.0], [38.2, 107.0], [38.3, 108.0], [38.4, 108.0], [38.5, 108.0], [38.6, 108.0], [38.7, 108.0], [38.8, 109.0], [38.9, 109.0], [39.0, 109.0], [39.1, 110.0], [39.2, 110.0], [39.3, 110.0], [39.4, 110.0], [39.5, 111.0], [39.6, 111.0], [39.7, 112.0], [39.8, 112.0], [39.9, 113.0], [40.0, 113.0], [40.1, 113.0], [40.2, 113.0], [40.3, 114.0], [40.4, 114.0], [40.5, 114.0], [40.6, 114.0], [40.7, 115.0], [40.8, 115.0], [40.9, 115.0], [41.0, 115.0], [41.1, 116.0], [41.2, 116.0], [41.3, 117.0], [41.4, 118.0], [41.5, 119.0], [41.6, 119.0], [41.7, 120.0], [41.8, 120.0], [41.9, 121.0], [42.0, 121.0], [42.1, 121.0], [42.2, 122.0], [42.3, 122.0], [42.4, 123.0], [42.5, 124.0], [42.6, 124.0], [42.7, 125.0], [42.8, 126.0], [42.9, 127.0], [43.0, 128.0], [43.1, 129.0], [43.2, 130.0], [43.3, 130.0], [43.4, 130.0], [43.5, 131.0], [43.6, 131.0], [43.7, 132.0], [43.8, 133.0], [43.9, 135.0], [44.0, 136.0], [44.1, 138.0], [44.2, 140.0], [44.3, 140.0], [44.4, 141.0], [44.5, 143.0], [44.6, 144.0], [44.7, 144.0], [44.8, 145.0], [44.9, 146.0], [45.0, 148.0], [45.1, 150.0], [45.2, 152.0], [45.3, 153.0], [45.4, 159.0], [45.5, 161.0], [45.6, 169.0], [45.7, 171.0], [45.8, 177.0], [45.9, 180.0], [46.0, 195.0], [46.1, 238.0], [46.2, 251.0], [46.3, 268.0], [46.4, 300.0], [46.5, 324.0], [46.6, 353.0], [46.7, 379.0], [46.8, 420.0], [46.9, 494.0], [47.0, 565.0], [47.1, 669.0], [47.2, 762.0], [47.3, 788.0], [47.4, 849.0], [47.5, 916.0], [47.6, 927.0], [47.7, 931.0], [47.8, 977.0], [47.9, 1014.0], [48.0, 1077.0], [48.1, 1098.0], [48.2, 1115.0], [48.3, 1140.0], [48.4, 1160.0], [48.5, 1172.0], [48.6, 1197.0], [48.7, 1211.0], [48.8, 1223.0], [48.9, 1244.0], [49.0, 1266.0], [49.1, 1271.0], [49.2, 1278.0], [49.3, 1289.0], [49.4, 1302.0], [49.5, 1316.0], [49.6, 1334.0], [49.7, 1419.0], [49.8, 1424.0], [49.9, 1474.0], [50.0, 1498.0], [50.1, 1547.0], [50.2, 1595.0], [50.3, 1597.0], [50.4, 1609.0], [50.5, 1626.0], [50.6, 1686.0], [50.7, 1709.0], [50.8, 1781.0], [50.9, 1792.0], [51.0, 1808.0], [51.1, 1848.0], [51.2, 1961.0], [51.3, 1996.0], [51.4, 2073.0], [51.5, 2099.0], [51.6, 2204.0], [51.7, 2312.0], [51.8, 2395.0], [51.9, 2469.0], [52.0, 2562.0], [52.1, 2620.0], [52.2, 2744.0], [52.3, 2799.0], [52.4, 2834.0], [52.5, 2864.0], [52.6, 2920.0], [52.7, 3003.0], [52.8, 3023.0], [52.9, 3077.0], [53.0, 3107.0], [53.1, 3156.0], [53.2, 3240.0], [53.3, 3379.0], [53.4, 3431.0], [53.5, 3482.0], [53.6, 3531.0], [53.7, 3554.0], [53.8, 3577.0], [53.9, 3630.0], [54.0, 3791.0], [54.1, 3877.0], [54.2, 3972.0], [54.3, 4039.0], [54.4, 4064.0], [54.5, 4095.0], [54.6, 4188.0], [54.7, 4194.0], [54.8, 4207.0], [54.9, 4280.0], [55.0, 4334.0], [55.1, 4344.0], [55.2, 4443.0], [55.3, 4491.0], [55.4, 4564.0], [55.5, 4639.0], [55.6, 4677.0], [55.7, 4684.0], [55.8, 4705.0], [55.9, 4715.0], [56.0, 4799.0], [56.1, 4823.0], [56.2, 4873.0], [56.3, 4949.0], [56.4, 5017.0], [56.5, 5105.0], [56.6, 5272.0], [56.7, 5337.0], [56.8, 5434.0], [56.9, 5507.0], [57.0, 5533.0], [57.1, 5639.0], [57.2, 5755.0], [57.3, 5789.0], [57.4, 5848.0], [57.5, 5940.0], [57.6, 5970.0], [57.7, 6013.0], [57.8, 6017.0], [57.9, 6043.0], [58.0, 6093.0], [58.1, 6166.0], [58.2, 6184.0], [58.3, 6308.0], [58.4, 6509.0], [58.5, 6605.0], [58.6, 6667.0], [58.7, 6672.0], [58.8, 6754.0], [58.9, 6847.0], [59.0, 6902.0], [59.1, 6926.0], [59.2, 7028.0], [59.3, 7121.0], [59.4, 7179.0], [59.5, 7182.0], [59.6, 7193.0], [59.7, 7222.0], [59.8, 7226.0], [59.9, 7232.0], [60.0, 7245.0], [60.1, 7295.0], [60.2, 7392.0], [60.3, 7549.0], [60.4, 7586.0], [60.5, 7742.0], [60.6, 7795.0], [60.7, 7899.0], [60.8, 7987.0], [60.9, 8030.0], [61.0, 8204.0], [61.1, 8329.0], [61.2, 8496.0], [61.3, 8604.0], [61.4, 8724.0], [61.5, 8764.0], [61.6, 8808.0], [61.7, 8845.0], [61.8, 8897.0], [61.9, 8964.0], [62.0, 9055.0], [62.1, 9083.0], [62.2, 9098.0], [62.3, 9188.0], [62.4, 9197.0], [62.5, 9337.0], [62.6, 9359.0], [62.7, 9365.0], [62.8, 9369.0], [62.9, 9378.0], [63.0, 9509.0], [63.1, 9575.0], [63.2, 9631.0], [63.3, 9705.0], [63.4, 9765.0], [63.5, 9812.0], [63.6, 9868.0], [63.7, 9950.0], [63.8, 10008.0], [63.9, 10076.0], [64.0, 10142.0], [64.1, 10181.0], [64.2, 10244.0], [64.3, 10277.0], [64.4, 10299.0], [64.5, 10338.0], [64.6, 10349.0], [64.7, 10390.0], [64.8, 10401.0], [64.9, 10405.0], [65.0, 10409.0], [65.1, 10428.0], [65.2, 10468.0], [65.3, 10514.0], [65.4, 10518.0], [65.5, 10530.0], [65.6, 10543.0], [65.7, 10583.0], [65.8, 10627.0], [65.9, 10653.0], [66.0, 10708.0], [66.1, 10776.0], [66.2, 10799.0], [66.3, 10822.0], [66.4, 10856.0], [66.5, 10903.0], [66.6, 10907.0], [66.7, 10925.0], [66.8, 11003.0], [66.9, 11148.0], [67.0, 11159.0], [67.1, 11181.0], [67.2, 11193.0], [67.3, 11203.0], [67.4, 11211.0], [67.5, 11231.0], [67.6, 11258.0], [67.7, 11260.0], [67.8, 11262.0], [67.9, 11347.0], [68.0, 11377.0], [68.1, 11450.0], [68.2, 11519.0], [68.3, 11677.0], [68.4, 11811.0], [68.5, 11955.0], [68.6, 11957.0], [68.7, 11973.0], [68.8, 11982.0], [68.9, 12028.0], [69.0, 12056.0], [69.1, 12098.0], [69.2, 12100.0], [69.3, 12123.0], [69.4, 12153.0], [69.5, 12254.0], [69.6, 12284.0], [69.7, 12398.0], [69.8, 12497.0], [69.9, 12584.0], [70.0, 12636.0], [70.1, 12690.0], [70.2, 12692.0], [70.3, 12741.0], [70.4, 12818.0], [70.5, 12820.0], [70.6, 12829.0], [70.7, 12831.0], [70.8, 12836.0], [70.9, 12849.0], [71.0, 12852.0], [71.1, 12889.0], [71.2, 12987.0], [71.3, 12989.0], [71.4, 12991.0], [71.5, 13095.0], [71.6, 13114.0], [71.7, 13141.0], [71.8, 13205.0], [71.9, 13306.0], [72.0, 13333.0], [72.1, 13411.0], [72.2, 13461.0], [72.3, 13462.0], [72.4, 13464.0], [72.5, 13471.0], [72.6, 13472.0], [72.7, 13491.0], [72.8, 13610.0], [72.9, 13641.0], [73.0, 13699.0], [73.1, 13752.0], [73.2, 13754.0], [73.3, 13759.0], [73.4, 13775.0], [73.5, 13798.0], [73.6, 13890.0], [73.7, 13907.0], [73.8, 13911.0], [73.9, 13916.0], [74.0, 13952.0], [74.1, 13964.0], [74.2, 13964.0], [74.3, 13967.0], [74.4, 13968.0], [74.5, 14021.0], [74.6, 14115.0], [74.7, 14350.0], [74.8, 14370.0], [74.9, 14395.0], [75.0, 14416.0], [75.1, 14429.0], [75.2, 14430.0], [75.3, 14601.0], [75.4, 14863.0], [75.5, 14886.0], [75.6, 15046.0], [75.7, 15084.0], [75.8, 15127.0], [75.9, 15220.0], [76.0, 15236.0], [76.1, 15237.0], [76.2, 15284.0], [76.3, 15291.0], [76.4, 15326.0], [76.5, 15334.0], [76.6, 15370.0], [76.7, 15401.0], [76.8, 15403.0], [76.9, 15443.0], [77.0, 15539.0], [77.1, 15701.0], [77.2, 15775.0], [77.3, 15810.0], [77.4, 15831.0], [77.5, 15858.0], [77.6, 15892.0], [77.7, 15916.0], [77.8, 15953.0], [77.9, 15976.0], [78.0, 15991.0], [78.1, 16011.0], [78.2, 16036.0], [78.3, 16058.0], [78.4, 16060.0], [78.5, 16090.0], [78.6, 16119.0], [78.7, 16165.0], [78.8, 16181.0], [78.9, 16185.0], [79.0, 16208.0], [79.1, 16280.0], [79.2, 16422.0], [79.3, 16521.0], [79.4, 16712.0], [79.5, 16809.0], [79.6, 16866.0], [79.7, 16939.0], [79.8, 17035.0], [79.9, 17101.0], [80.0, 17126.0], [80.1, 17127.0], [80.2, 17133.0], [80.3, 17243.0], [80.4, 17263.0], [80.5, 17280.0], [80.6, 17309.0], [80.7, 17325.0], [80.8, 17385.0], [80.9, 17444.0], [81.0, 17467.0], [81.1, 17489.0], [81.2, 17520.0], [81.3, 17549.0], [81.4, 17577.0], [81.5, 17579.0], [81.6, 17582.0], [81.7, 17632.0], [81.8, 17655.0], [81.9, 17796.0], [82.0, 17827.0], [82.1, 17857.0], [82.2, 17889.0], [82.3, 17911.0], [82.4, 17923.0], [82.5, 17925.0], [82.6, 17968.0], [82.7, 18017.0], [82.8, 18053.0], [82.9, 18096.0], [83.0, 18136.0], [83.1, 18150.0], [83.2, 18183.0], [83.3, 18218.0], [83.4, 18373.0], [83.5, 18565.0], [83.6, 18585.0], [83.7, 18638.0], [83.8, 18737.0], [83.9, 18919.0], [84.0, 18931.0], [84.1, 18976.0], [84.2, 19009.0], [84.3, 19100.0], [84.4, 19101.0], [84.5, 19103.0], [84.6, 19107.0], [84.7, 19213.0], [84.8, 19230.0], [84.9, 19340.0], [85.0, 19499.0], [85.1, 19523.0], [85.2, 19554.0], [85.3, 19662.0], [85.4, 19663.0], [85.5, 19664.0], [85.6, 19724.0], [85.7, 19766.0], [85.8, 20004.0], [85.9, 20048.0], [86.0, 20107.0], [86.1, 20279.0], [86.2, 20363.0], [86.3, 20401.0], [86.4, 20805.0], [86.5, 21283.0], [86.6, 21284.0], [86.7, 21287.0], [86.8, 21461.0], [86.9, 21521.0], [87.0, 21657.0], [87.1, 21691.0], [87.2, 21715.0], [87.3, 21875.0], [87.4, 22118.0], [87.5, 22216.0], [87.6, 22582.0], [87.7, 22836.0], [87.8, 22844.0], [87.9, 22937.0], [88.0, 23086.0], [88.1, 23174.0], [88.2, 23216.0], [88.3, 23298.0], [88.4, 23381.0], [88.5, 23396.0], [88.6, 23404.0], [88.7, 23911.0], [88.8, 24370.0], [88.9, 24389.0], [89.0, 24608.0], [89.1, 24834.0], [89.2, 25056.0], [89.3, 25213.0], [89.4, 25955.0], [89.5, 26440.0], [89.6, 26529.0], [89.7, 26762.0], [89.8, 28606.0], [89.9, 29661.0], [90.0, 29663.0], [90.1, 32259.0], [90.2, 32436.0], [90.3, 32684.0], [90.4, 32974.0], [90.5, 33020.0], [90.6, 33320.0], [90.7, 33383.0], [90.8, 34038.0], [90.9, 34047.0], [91.0, 34109.0], [91.1, 34335.0], [91.2, 34339.0], [91.3, 34341.0], [91.4, 34673.0], [91.5, 35331.0], [91.6, 35955.0], [91.7, 37803.0], [91.8, 38892.0], [91.9, 39206.0], [92.0, 40145.0], [92.1, 42648.0], [92.2, 43066.0], [92.3, 43341.0], [92.4, 44300.0], [92.5, 44738.0], [92.6, 44746.0], [92.7, 45195.0], [92.8, 46699.0], [92.9, 48601.0], [93.0, 50494.0], [93.1, 52055.0], [93.2, 52087.0], [93.3, 53179.0], [93.4, 58656.0], [93.5, 60693.0], [93.6, 63981.0], [93.7, 64025.0], [93.8, 64166.0], [93.9, 64182.0], [94.0, 64693.0], [94.1, 64722.0], [94.2, 65132.0], [94.3, 65141.0], [94.4, 65906.0], [94.5, 67986.0], [94.6, 68609.0], [94.7, 70745.0], [94.8, 72605.0], [94.9, 74620.0], [95.0, 75709.0], [95.1, 80169.0], [95.2, 82272.0], [95.3, 82328.0], [95.4, 83719.0], [95.5, 88801.0], [95.6, 92896.0], [95.7, 95921.0], [95.8, 99962.0], [95.9, 100020.0], [96.0, 100034.0], [96.1, 100053.0], [96.2, 100061.0], [96.3, 100066.0], [96.4, 100075.0], [96.5, 100078.0], [96.6, 100081.0], [96.7, 100084.0], [96.8, 100087.0], [96.9, 100089.0], [97.0, 100092.0], [97.1, 100094.0], [97.2, 100097.0], [97.3, 100102.0], [97.4, 100110.0], [97.5, 100115.0], [97.6, 100132.0], [97.7, 100171.0], [97.8, 100176.0], [97.9, 101033.0], [98.0, 101107.0], [98.1, 119323.0], [98.2, 121319.0], [98.3, 128205.0], [98.4, 128243.0], [98.5, 128273.0], [98.6, 130174.0], [98.7, 131818.0], [98.8, 132190.0], [98.9, 132298.0], [99.0, 132625.0], [99.1, 132896.0], [99.2, 132953.0], [99.3, 133007.0], [99.4, 137620.0], [99.5, 137627.0], [99.6, 139499.0], [99.7, 147326.0], [99.8, 147372.0], [99.9, 148053.0], [100.0, 199488.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10043.0, "series": [{"data": [[0.0, 10043.0], [135200.0, 1.0], [148000.0, 9.0], [132900.0, 52.0], [148900.0, 1.0], [168100.0, 7.0], [68300.0, 4.0], [66700.0, 2.0], [73100.0, 2.0], [69900.0, 1.0], [71500.0, 2.0], [74700.0, 19.0], [81100.0, 2.0], [85900.0, 6.0], [82700.0, 1.0], [84300.0, 1.0], [95500.0, 1.0], [100300.0, 6.0], [169000.0, 1.0], [100.0, 3805.0], [32900.0, 26.0], [33700.0, 3.0], [137900.0, 13.0], [35300.0, 27.0], [36100.0, 2.0], [39300.0, 1.0], [40100.0, 6.0], [42500.0, 2.0], [43300.0, 17.0], [44100.0, 2.0], [50500.0, 1.0], [200.0, 114.0], [52100.0, 14.0], [52900.0, 3.0], [60900.0, 3.0], [61700.0, 2.0], [64900.0, 6.0], [64100.0, 66.0], [65800.0, 13.0], [69000.0, 1.0], [67400.0, 1.0], [70600.0, 1.0], [300.0, 110.0], [73800.0, 1.0], [80200.0, 1.0], [78600.0, 1.0], [81800.0, 1.0], [85000.0, 1.0], [89800.0, 2.0], [94600.0, 1.0], [97800.0, 1.0], [101000.0, 35.0], [400.0, 42.0], [500.0, 36.0], [128200.0, 68.0], [600.0, 36.0], [700.0, 51.0], [800.0, 42.0], [900.0, 121.0], [1000.0, 80.0], [1100.0, 155.0], [1200.0, 228.0], [1300.0, 92.0], [1400.0, 95.0], [1500.0, 89.0], [1600.0, 107.0], [1700.0, 75.0], [1800.0, 70.0], [1900.0, 54.0], [2000.0, 53.0], [2100.0, 28.0], [2200.0, 30.0], [2300.0, 34.0], [2400.0, 37.0], [149300.0, 1.0], [2500.0, 27.0], [162100.0, 2.0], [2600.0, 47.0], [2800.0, 84.0], [2700.0, 39.0], [2900.0, 34.0], [3000.0, 80.0], [3100.0, 46.0], [3200.0, 42.0], [3300.0, 16.0], [3400.0, 73.0], [3500.0, 86.0], [3600.0, 27.0], [3700.0, 23.0], [3800.0, 36.0], [3900.0, 33.0], [4000.0, 86.0], [4100.0, 79.0], [4200.0, 48.0], [4300.0, 77.0], [66500.0, 3.0], [68100.0, 3.0], [4400.0, 48.0], [4500.0, 37.0], [71300.0, 5.0], [4600.0, 95.0], [69700.0, 3.0], [4700.0, 65.0], [4800.0, 62.0], [74500.0, 15.0], [80900.0, 1.0], [4900.0, 50.0], [5100.0, 23.0], [5000.0, 28.0], [79300.0, 1.0], [5300.0, 49.0], [5200.0, 19.0], [5500.0, 68.0], [5600.0, 6.0], [5400.0, 28.0], [88900.0, 2.0], [5700.0, 60.0], [5800.0, 28.0], [5900.0, 77.0], [6000.0, 103.0], [6100.0, 76.0], [96900.0, 3.0], [100100.0, 172.0], [6200.0, 11.0], [6300.0, 21.0], [6400.0, 4.0], [6500.0, 34.0], [6600.0, 73.0], [6700.0, 36.0], [6800.0, 40.0], [6900.0, 58.0], [7000.0, 30.0], [7100.0, 97.0], [7400.0, 17.0], [7300.0, 30.0], [7200.0, 154.0], [7500.0, 42.0], [7600.0, 16.0], [119300.0, 32.0], [7800.0, 23.0], [7700.0, 49.0], [7900.0, 45.0], [8100.0, 13.0], [127300.0, 19.0], [130500.0, 1.0], [8000.0, 28.0], [8600.0, 23.0], [8200.0, 27.0], [8400.0, 13.0], [9000.0, 77.0], [8800.0, 69.0], [9200.0, 14.0], [9600.0, 37.0], [9400.0, 9.0], [10000.0, 58.0], [9800.0, 62.0], [10200.0, 76.0], [10400.0, 139.0], [10600.0, 77.0], [11200.0, 175.0], [10800.0, 78.0], [11000.0, 17.0], [11600.0, 14.0], [11400.0, 42.0], [12000.0, 103.0], [12200.0, 56.0], [11800.0, 14.0], [12600.0, 86.0], [12400.0, 30.0], [13200.0, 40.0], [12800.0, 238.0], [13000.0, 23.0], [13800.0, 37.0], [13600.0, 65.0], [13400.0, 199.0], [14200.0, 2.0], [14000.0, 30.0], [14800.0, 48.0], [14400.0, 98.0], [14600.0, 7.0], [15000.0, 56.0], [15200.0, 137.0], [15800.0, 111.0], [15400.0, 99.0], [15600.0, 15.0], [16000.0, 151.0], [16200.0, 39.0], [16400.0, 33.0], [16800.0, 37.0], [17200.0, 109.0], [18000.0, 74.0], [17600.0, 62.0], [18400.0, 21.0], [19200.0, 50.0], [18800.0, 17.0], [19600.0, 102.0], [20400.0, 19.0], [20000.0, 60.0], [20800.0, 16.0], [21200.0, 73.0], [22000.0, 23.0], [21600.0, 51.0], [22400.0, 19.0], [23200.0, 41.0], [22800.0, 48.0], [24400.0, 2.0], [23600.0, 2.0], [24000.0, 8.0], [24800.0, 7.0], [25200.0, 12.0], [26400.0, 33.0], [25600.0, 2.0], [27200.0, 3.0], [29200.0, 4.0], [28800.0, 8.0], [29600.0, 41.0], [30000.0, 2.0], [30400.0, 1.0], [30800.0, 2.0], [31200.0, 2.0], [32400.0, 45.0], [34400.0, 2.0], [32800.0, 18.0], [36000.0, 3.0], [36800.0, 2.0], [35200.0, 2.0], [144700.0, 2.0], [147900.0, 5.0], [39200.0, 27.0], [40000.0, 3.0], [42400.0, 2.0], [43200.0, 3.0], [44000.0, 2.0], [46400.0, 3.0], [47200.0, 3.0], [48800.0, 1.0], [48000.0, 2.0], [50400.0, 4.0], [49600.0, 4.0], [52000.0, 51.0], [54400.0, 2.0], [53600.0, 4.0], [58400.0, 2.0], [57600.0, 2.0], [63200.0, 2.0], [64000.0, 24.0], [67200.0, 3.0], [65600.0, 1.0], [68800.0, 1.0], [72000.0, 1.0], [76800.0, 1.0], [80000.0, 2.0], [81600.0, 1.0], [84800.0, 2.0], [92800.0, 3.0], [91200.0, 13.0], [96000.0, 2.0], [105600.0, 10.0], [137600.0, 33.0], [163200.0, 10.0], [132100.0, 29.0], [68700.0, 1.0], [70300.0, 9.0], [83100.0, 2.0], [87900.0, 1.0], [97500.0, 2.0], [94300.0, 1.0], [95900.0, 3.0], [127900.0, 1.0], [133000.0, 28.0], [139400.0, 1.0], [149000.0, 1.0], [137100.0, 1.0], [33900.0, 2.0], [35500.0, 3.0], [36300.0, 2.0], [38700.0, 11.0], [41100.0, 2.0], [43500.0, 1.0], [44300.0, 20.0], [46700.0, 4.0], [45100.0, 5.0], [47500.0, 2.0], [49900.0, 1.0], [53100.0, 2.0], [61900.0, 2.0], [62700.0, 2.0], [65100.0, 46.0], [71000.0, 1.0], [72600.0, 3.0], [74200.0, 1.0], [80600.0, 2.0], [82200.0, 36.0], [83800.0, 2.0], [91800.0, 2.0], [98200.0, 2.0], [96600.0, 1.0], [95000.0, 2.0], [138900.0, 2.0], [68500.0, 9.0], [70100.0, 2.0], [71700.0, 3.0], [74900.0, 2.0], [78100.0, 2.0], [79700.0, 2.0], [82900.0, 2.0], [87700.0, 1.0], [90900.0, 2.0], [95700.0, 5.0], [121300.0, 1.0], [146200.0, 1.0], [16900.0, 48.0], [16500.0, 16.0], [17300.0, 81.0], [18100.0, 107.0], [17700.0, 35.0], [18900.0, 91.0], [19300.0, 37.0], [18500.0, 51.0], [19700.0, 37.0], [20100.0, 17.0], [20500.0, 1.0], [20900.0, 14.0], [21300.0, 18.0], [22100.0, 31.0], [22500.0, 25.0], [21700.0, 47.0], [23300.0, 78.0], [22900.0, 40.0], [24100.0, 1.0], [24500.0, 18.0], [24900.0, 18.0], [25300.0, 7.0], [26500.0, 26.0], [26100.0, 10.0], [26900.0, 5.0], [28900.0, 1.0], [29300.0, 5.0], [30500.0, 2.0], [29700.0, 1.0], [31300.0, 7.0], [33000.0, 36.0], [34600.0, 1.0], [35400.0, 8.0], [37800.0, 7.0], [42600.0, 14.0], [41800.0, 4.0], [41000.0, 6.0], [44200.0, 5.0], [45000.0, 4.0], [45800.0, 3.0], [46600.0, 5.0], [48200.0, 4.0], [47400.0, 1.0], [50600.0, 2.0], [52200.0, 1.0], [54600.0, 2.0], [55400.0, 2.0], [58600.0, 18.0], [59400.0, 2.0], [61000.0, 1.0], [64200.0, 2.0], [65000.0, 7.0], [67600.0, 1.0], [66000.0, 2.0], [70800.0, 2.0], [75600.0, 1.0], [78800.0, 4.0], [80400.0, 2.0], [86800.0, 2.0], [94800.0, 5.0], [98000.0, 1.0], [130000.0, 4.0], [131300.0, 1.0], [147300.0, 53.0], [65900.0, 5.0], [67500.0, 1.0], [69100.0, 1.0], [72300.0, 2.0], [70700.0, 3.0], [77100.0, 1.0], [80300.0, 3.0], [81900.0, 2.0], [78700.0, 1.0], [85100.0, 1.0], [86700.0, 1.0], [89900.0, 1.0], [101100.0, 18.0], [132200.0, 30.0], [199400.0, 1.0], [34100.0, 25.0], [33300.0, 50.0], [36500.0, 2.0], [35700.0, 1.0], [139500.0, 17.0], [34900.0, 6.0], [38900.0, 1.0], [37300.0, 5.0], [42100.0, 2.0], [44500.0, 6.0], [46100.0, 6.0], [45300.0, 3.0], [48500.0, 1.0], [50900.0, 8.0], [53300.0, 1.0], [62900.0, 2.0], [64500.0, 12.0], [65300.0, 1.0], [63700.0, 2.0], [66600.0, 1.0], [69800.0, 1.0], [73000.0, 2.0], [74600.0, 6.0], [77800.0, 1.0], [79400.0, 2.0], [84200.0, 1.0], [85800.0, 2.0], [93800.0, 3.0], [97000.0, 2.0], [101800.0, 1.0], [111400.0, 1.0], [137200.0, 4.0], [143600.0, 2.0], [146800.0, 2.0], [131700.0, 1.0], [68900.0, 2.0], [67300.0, 1.0], [65700.0, 2.0], [72100.0, 1.0], [70500.0, 1.0], [73700.0, 1.0], [80100.0, 1.0], [78500.0, 1.0], [81700.0, 1.0], [88100.0, 1.0], [92900.0, 3.0], [99300.0, 1.0], [128100.0, 4.0], [8700.0, 66.0], [132600.0, 28.0], [8300.0, 26.0], [8500.0, 25.0], [8900.0, 40.0], [9100.0, 67.0], [9700.0, 50.0], [9500.0, 49.0], [9300.0, 147.0], [10100.0, 57.0], [9900.0, 35.0], [10500.0, 151.0], [10300.0, 111.0], [10700.0, 65.0], [11100.0, 132.0], [10900.0, 101.0], [11700.0, 22.0], [11300.0, 48.0], [11500.0, 29.0], [12100.0, 77.0], [11900.0, 116.0], [12300.0, 28.0], [12500.0, 46.0], [12700.0, 26.0], [13100.0, 76.0], [12900.0, 93.0], [13300.0, 49.0], [13700.0, 151.0], [13500.0, 23.0], [14300.0, 87.0], [13900.0, 260.0], [14100.0, 16.0], [14500.0, 10.0], [14700.0, 10.0], [14900.0, 13.0], [15100.0, 44.0], [15300.0, 90.0], [15500.0, 20.0], [15700.0, 50.0], [16300.0, 21.0], [15900.0, 131.0], [16100.0, 124.0], [17400.0, 89.0], [17000.0, 38.0], [16600.0, 1.0], [17800.0, 91.0], [18200.0, 30.0], [19000.0, 30.0], [18600.0, 45.0], [19400.0, 23.0], [19800.0, 7.0], [20200.0, 36.0], [21400.0, 16.0], [22200.0, 3.0], [21800.0, 8.0], [23000.0, 16.0], [22600.0, 6.0], [23400.0, 29.0], [23800.0, 2.0], [24200.0, 7.0], [25000.0, 36.0], [24600.0, 32.0], [25400.0, 2.0], [26600.0, 1.0], [26200.0, 3.0], [28600.0, 2.0], [28200.0, 3.0], [29000.0, 4.0], [30200.0, 4.0], [31800.0, 3.0], [32600.0, 4.0], [32200.0, 4.0], [34000.0, 58.0], [146300.0, 1.0], [37200.0, 2.0], [38800.0, 5.0], [38000.0, 2.0], [39600.0, 1.0], [41200.0, 2.0], [43600.0, 3.0], [45200.0, 3.0], [48400.0, 1.0], [50000.0, 2.0], [50800.0, 1.0], [49200.0, 3.0], [52400.0, 1.0], [51600.0, 2.0], [56400.0, 2.0], [55600.0, 2.0], [59600.0, 2.0], [64400.0, 3.0], [63600.0, 1.0], [68000.0, 3.0], [71200.0, 5.0], [74400.0, 1.0], [80800.0, 2.0], [88800.0, 1.0], [87200.0, 1.0], [96800.0, 1.0], [100000.0, 439.0], [119200.0, 5.0], [127200.0, 1.0], [128800.0, 3.0], [132800.0, 4.0], [67900.0, 1.0], [66300.0, 1.0], [72700.0, 1.0], [74300.0, 1.0], [79100.0, 4.0], [80700.0, 2.0], [82300.0, 26.0], [91900.0, 2.0], [96700.0, 2.0], [99900.0, 3.0], [130300.0, 1.0], [137800.0, 6.0], [132300.0, 26.0], [33500.0, 4.0], [34300.0, 98.0], [35100.0, 1.0], [35900.0, 9.0], [38300.0, 5.0], [40700.0, 2.0], [39100.0, 20.0], [42300.0, 3.0], [44700.0, 54.0], [43100.0, 2.0], [46300.0, 2.0], [47900.0, 3.0], [51100.0, 2.0], [49500.0, 2.0], [59100.0, 2.0], [59900.0, 2.0], [61500.0, 3.0], [62300.0, 2.0], [63100.0, 2.0], [65500.0, 6.0], [63900.0, 11.0], [64700.0, 34.0], [67000.0, 2.0], [68600.0, 13.0], [71800.0, 1.0], [75000.0, 3.0], [79800.0, 3.0], [91000.0, 1.0], [94200.0, 2.0], [95800.0, 3.0], [99000.0, 1.0], [149200.0, 4.0], [66100.0, 1.0], [69300.0, 2.0], [67700.0, 5.0], [70900.0, 2.0], [75700.0, 2.0], [83700.0, 1.0], [86900.0, 1.0], [98100.0, 2.0], [94900.0, 2.0], [130100.0, 43.0], [131800.0, 3.0], [17100.0, 92.0], [16700.0, 45.0], [17900.0, 112.0], [17500.0, 159.0], [18300.0, 14.0], [19100.0, 106.0], [18700.0, 12.0], [20300.0, 40.0], [19900.0, 13.0], [19500.0, 73.0], [21100.0, 5.0], [21500.0, 36.0], [20700.0, 4.0], [23100.0, 47.0], [23500.0, 4.0], [24300.0, 42.0], [23900.0, 10.0], [25100.0, 1.0], [24700.0, 1.0], [25500.0, 7.0], [25900.0, 3.0], [26300.0, 8.0], [27100.0, 14.0], [26700.0, 11.0], [30300.0, 1.0], [32700.0, 2.0], [32300.0, 10.0], [34200.0, 6.0], [132700.0, 5.0], [139100.0, 6.0], [35000.0, 9.0], [38200.0, 6.0], [39800.0, 1.0], [40600.0, 1.0], [43000.0, 43.0], [44600.0, 4.0], [45400.0, 4.0], [46200.0, 2.0], [47800.0, 7.0], [48600.0, 12.0], [49400.0, 2.0], [52600.0, 2.0], [53400.0, 2.0], [56600.0, 2.0], [57400.0, 2.0], [59000.0, 1.0], [61400.0, 1.0], [60600.0, 10.0], [63000.0, 1.0], [65400.0, 1.0], [64600.0, 7.0], [66800.0, 1.0], [70000.0, 1.0], [71600.0, 3.0], [74800.0, 1.0], [81200.0, 2.0], [79600.0, 2.0], [86000.0, 5.0], [90800.0, 2.0], [94000.0, 2.0], [97200.0, 5.0], [98800.0, 1.0], [127600.0, 1.0], [129200.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 199400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15034.0, "series": [{"data": [[0.0, 14115.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 935.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15034.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 9.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 173.66569767441868, "minX": 1.6830252E12, "maxY": 3000.0, "series": [{"data": [[1.68302538E12, 3000.0], [1.6830252E12, 3000.0], [1.68302556E12, 697.6855524079318], [1.68302526E12, 3000.0], [1.68302562E12, 173.66569767441868], [1.68302544E12, 3000.0], [1.6830255E12, 2618.2212800323064], [1.68302532E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302562E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 32.0, "minX": 2.0, "maxY": 149258.0, "series": [{"data": [[2.0, 100123.0], [3.0, 100120.0], [6.0, 100120.33333333333], [7.0, 100117.0], [8.0, 100116.0], [12.0, 100108.33333333333], [15.0, 100108.0], [19.0, 100109.0], [20.0, 100107.28571428572], [21.0, 100104.0], [22.0, 100104.0], [25.0, 100102.33333333333], [27.0, 100099.5], [28.0, 100098.0], [30.0, 100097.0], [33.0, 100090.33333333333], [35.0, 100089.0], [39.0, 100089.33333333333], [40.0, 100089.0], [43.0, 100085.0], [42.0, 100089.0], [45.0, 100083.0], [47.0, 100083.33333333333], [51.0, 100083.0], [50.0, 100082.5], [53.0, 100083.0], [55.0, 100082.0], [54.0, 100081.0], [56.0, 100081.0], [59.0, 100081.0], [63.0, 100080.0], [62.0, 100079.5], [66.0, 100064.0], [65.0, 100074.5], [69.0, 100060.0], [68.0, 100063.0], [74.0, 100095.0], [73.0, 100046.75], [78.0, 100092.0], [83.0, 100091.0], [82.0, 100092.25], [81.0, 100092.0], [90.0, 100088.0], [95.0, 100087.5], [94.0, 100087.0], [92.0, 100088.5], [96.0, 100086.0], [101.0, 100085.0], [100.0, 100085.33333333333], [107.0, 100084.33333333333], [105.0, 100085.0], [104.0, 100085.5], [110.0, 100081.0], [109.0, 100083.0], [108.0, 100083.0], [114.0, 100080.0], [112.0, 100080.5], [118.0, 100073.5], [116.0, 100076.0], [122.0, 100069.0], [120.0, 100071.0], [125.0, 100067.0], [124.0, 100068.0], [134.0, 100102.0], [133.0, 99962.0], [132.0, 100063.0], [131.0, 100064.0], [130.0, 100065.8], [143.0, 100085.0], [142.0, 100086.0], [140.0, 100087.0], [139.0, 100086.0], [138.0, 100089.0], [137.0, 100089.0], [150.0, 100082.0], [149.0, 100082.5], [148.0, 100083.0], [146.0, 100083.66666666667], [157.0, 100076.5], [154.0, 100079.0], [153.0, 100081.0], [167.0, 100076.0], [166.0, 100076.0], [165.0, 100076.0], [164.0, 100076.0], [175.0, 100074.0], [174.0, 100075.2], [173.0, 100075.0], [171.0, 100075.0], [170.0, 100075.0], [183.0, 100066.5], [182.0, 100066.0], [179.0, 100068.0], [178.0, 100068.0], [177.0, 100073.0], [176.0, 100074.0], [191.0, 100065.0], [190.0, 100065.5], [189.0, 100065.0], [188.0, 100065.5], [187.0, 100066.0], [199.0, 100058.0], [198.0, 100059.0], [196.0, 100063.5], [194.0, 100064.0], [193.0, 100064.5], [207.0, 100022.0], [205.0, 100022.0], [204.0, 96931.0], [203.0, 100039.0], [202.0, 100054.0], [200.0, 100056.0], [213.0, 100021.0], [212.0, 100021.0], [209.0, 100021.0], [220.0, 100019.66666666667], [218.0, 100021.0], [217.0, 100020.5], [230.0, 100114.0], [229.0, 100115.0], [228.0, 100115.0], [227.0, 100115.0], [239.0, 100112.0], [238.0, 100112.5], [237.0, 100113.0], [236.0, 100113.0], [233.0, 100113.0], [232.0, 100114.0], [246.0, 100107.0], [245.0, 100108.0], [244.0, 100108.0], [243.0, 100109.0], [242.0, 100110.0], [241.0, 100111.0], [254.0, 100094.0], [253.0, 100099.0], [252.0, 100103.0], [249.0, 100104.0], [259.0, 100094.5], [271.0, 100087.0], [269.0, 100089.5], [267.0, 100090.0], [264.0, 100090.0], [263.0, 100092.0], [262.0, 100093.0], [261.0, 100093.0], [258.0, 100094.0], [257.0, 100094.0], [284.0, 98682.33333333333], [286.0, 100060.0], [287.0, 100060.0], [285.0, 100061.0], [281.0, 100064.0], [280.0, 100064.0], [279.0, 100063.0], [275.0, 100085.0], [272.0, 100085.0], [278.0, 100074.0], [277.0, 100079.0], [276.0, 100079.0], [302.0, 92992.0], [303.0, 91984.0], [301.0, 92993.0], [300.0, 94002.0], [299.0, 94004.0], [298.0, 95011.0], [297.0, 95013.0], [296.0, 96020.0], [295.0, 96023.0], [289.0, 94913.0], [288.0, 95921.0], [291.0, 98042.0], [290.0, 94912.0], [294.0, 97030.0], [293.0, 95987.0], [292.0, 96995.0], [318.0, 80319.0], [319.0, 79311.0], [317.0, 83871.0], [316.0, 84879.0], [315.0, 85927.0], [314.0, 86933.0], [313.0, 85891.0], [312.0, 86898.0], [311.0, 87969.0], [305.0, 90974.0], [304.0, 91982.0], [307.0, 89965.0], [306.0, 90972.0], [310.0, 88977.0], [309.0, 88955.0], [308.0, 85824.0], [334.0, 72699.0], [335.0, 71691.0], [333.0, 76839.0], [332.0, 77847.0], [331.0, 73710.0], [330.0, 78856.0], [329.0, 78858.0], [328.0, 79866.0], [327.0, 79868.0], [321.0, 78759.0], [320.0, 79766.0], [323.0, 81887.0], [322.0, 82919.0], [326.0, 80876.0], [325.0, 79833.0], [324.0, 80841.0], [350.0, 64620.0], [351.0, 63613.0], [349.0, 64166.0], [348.0, 65174.0], [347.0, 69770.0], [346.0, 66640.0], [345.0, 70780.0], [344.0, 71788.0], [343.0, 70745.0], [337.0, 70681.0], [336.0, 71690.0], [339.0, 73810.0], [338.0, 74817.0], [342.0, 71753.0], [341.0, 71755.0], [340.0, 72763.0], [366.0, 61706.0], [367.0, 60698.0], [365.0, 61708.0], [364.0, 62716.0], [363.0, 62718.0], [362.0, 63726.0], [361.0, 63728.0], [360.0, 64735.0], [359.0, 64737.0], [353.0, 66741.0], [352.0, 67749.0], [355.0, 65731.0], [354.0, 66763.0], [358.0, 65745.0], [357.0, 64678.0], [356.0, 64684.0], [382.0, 53630.0], [383.0, 52623.0], [381.0, 53633.0], [380.0, 54639.0], [379.0, 54642.0], [378.0, 55649.0], [377.0, 55651.0], [376.0, 56660.0], [375.0, 56662.0], [369.0, 59688.0], [368.0, 60696.0], [371.0, 58679.0], [370.0, 59686.0], [374.0, 57669.0], [373.0, 57670.0], [372.0, 58678.0], [398.0, 46200.0], [399.0, 45191.0], [397.0, 46202.0], [396.0, 47210.0], [395.0, 47212.0], [394.0, 48220.0], [393.0, 48222.0], [392.0, 49229.0], [391.0, 49231.0], [385.0, 51612.0], [384.0, 52620.0], [387.0, 50603.0], [386.0, 51611.0], [390.0, 49591.0], [389.0, 49593.0], [388.0, 50601.0], [414.0, 38096.0], [415.0, 38093.0], [413.0, 39103.0], [412.0, 39105.0], [411.0, 53388.0], [410.0, 40142.0], [409.0, 40145.0], [408.0, 41152.0], [407.0, 41155.0], [401.0, 44183.0], [400.0, 45190.0], [403.0, 43173.0], [402.0, 44181.0], [406.0, 42161.0], [405.0, 42163.0], [404.0, 43171.0], [430.0, 30282.0], [431.0, 30279.0], [429.0, 31291.0], [428.0, 31292.0], [427.0, 32299.0], [426.0, 32301.0], [425.0, 33309.0], [424.0, 33311.0], [423.0, 34318.0], [417.0, 37348.0], [416.0, 37350.0], [419.0, 36338.0], [418.0, 36339.0], [422.0, 34322.0], [421.0, 35329.0], [420.0, 35332.0], [445.0, 33731.0], [447.0, 33392.5], [444.0, 33731.0], [435.0, 28260.0], [434.0, 28262.0], [433.0, 29269.0], [432.0, 29272.0], [443.0, 33962.0], [442.0, 33964.0], [441.0, 25233.0], [440.0, 25234.0], [439.0, 26242.0], [438.0, 26244.0], [437.0, 27253.0], [461.0, 33377.0], [462.0, 33376.0], [460.0, 33380.0], [451.0, 33389.0], [450.0, 33392.0], [449.0, 33392.0], [448.0, 33392.0], [459.0, 33380.0], [458.0, 33383.0], [457.0, 33384.0], [455.0, 33385.0], [454.0, 33386.0], [453.0, 33387.5], [467.0, 33371.0], [477.0, 33348.0], [479.0, 33346.5], [476.0, 33351.0], [466.0, 33371.0], [465.0, 33374.0], [464.0, 33375.0], [474.0, 33353.0], [473.0, 33359.0], [471.0, 33361.0], [470.0, 33369.0], [469.0, 33369.0], [468.0, 33371.0], [493.0, 33022.0], [494.0, 33021.0], [492.0, 33022.0], [483.0, 33336.0], [482.0, 33341.0], [481.0, 33342.0], [480.0, 33343.0], [491.0, 23577.0], [490.0, 23579.0], [489.0, 33308.5], [487.0, 33314.0], [486.0, 33314.0], [485.0, 33319.0], [484.0, 33320.0], [510.0, 33002.0], [511.0, 33002.0], [509.0, 33004.0], [508.0, 33005.0], [506.0, 33008.0], [505.0, 33008.0], [504.0, 33010.0], [503.0, 33011.0], [499.0, 33020.0], [498.0, 33020.25], [502.0, 33011.0], [501.0, 33013.0], [500.0, 33019.0], [518.0, 32995.0], [540.0, 32692.0], [536.0, 32936.0], [516.0, 32997.0], [514.0, 32997.0], [512.0, 33000.0], [534.0, 32957.0], [532.0, 32967.0], [528.0, 32982.0], [526.0, 32986.0], [524.0, 32987.0], [522.0, 32988.5], [520.0, 32990.0], [572.0, 35236.0], [574.0, 20480.0], [570.0, 35340.0], [568.0, 35343.0], [566.0, 35345.0], [564.0, 35348.0], [562.0, 35353.0], [560.0, 35355.0], [558.0, 35356.0], [546.0, 22530.0], [544.0, 32682.0], [550.0, 35524.0], [548.0, 21456.0], [556.0, 35425.0], [554.0, 35429.0], [552.0, 35433.0], [604.0, 32435.0], [606.0, 32432.0], [602.0, 32438.0], [600.0, 32442.0], [598.0, 32443.0], [596.0, 32444.0], [592.0, 32451.0], [590.0, 32452.0], [578.0, 32464.0], [576.0, 32466.0], [582.0, 32460.0], [580.0, 32463.0], [588.0, 32452.0], [586.0, 32457.5], [584.0, 32457.0], [636.0, 17038.0], [638.0, 26162.0], [634.0, 18048.0], [632.0, 19055.0], [630.0, 20085.0], [628.0, 32259.0], [626.0, 32385.0], [624.0, 32391.0], [622.0, 32397.0], [610.0, 32428.0], [608.0, 32431.0], [614.0, 32422.0], [612.0, 32425.0], [620.0, 32404.0], [618.0, 32407.0], [616.0, 32410.0], [668.0, 29749.0], [670.0, 25242.0], [666.0, 16902.0], [664.0, 16912.0], [662.0, 16923.0], [660.0, 26109.0], [658.0, 16957.0], [656.0, 16962.0], [654.0, 26144.0], [640.0, 16982.0], [646.0, 16977.0], [644.0, 16980.0], [652.0, 26146.0], [650.0, 16973.0], [698.0, 16023.0], [700.0, 16022.0], [696.0, 16025.0], [678.0, 16048.0], [676.0, 16051.0], [674.0, 16051.0], [672.0, 15510.0], [694.0, 16026.0], [692.0, 16030.0], [688.0, 16036.0], [686.0, 16037.0], [684.0, 16040.0], [680.0, 16044.0], [730.0, 12478.0], [732.0, 15566.0], [724.0, 9390.0], [720.0, 15957.0], [722.0, 9392.0], [710.0, 16006.0], [708.0, 16011.0], [704.0, 16016.0], [718.0, 15976.0], [716.0, 15984.0], [714.0, 15997.0], [712.0, 16004.0], [726.0, 15625.5], [764.0, 9800.0], [752.0, 15539.0], [754.0, 15653.0], [756.0, 15649.0], [766.0, 15635.0], [762.0, 15523.0], [760.0, 9803.0], [736.0, 15564.5], [740.0, 9387.0], [742.0, 15543.0], [750.0, 15656.0], [748.0, 11615.0], [744.0, 15659.0], [794.0, 13803.0], [796.0, 19864.0], [788.0, 14042.0], [784.0, 15464.0], [786.0, 13905.0], [792.0, 14463.0], [774.0, 13935.0], [772.0, 13937.0], [770.0, 9782.0], [768.0, 15512.0], [782.0, 15584.0], [780.0, 15586.0], [778.0, 15607.0], [776.0, 14075.0], [790.0, 13892.0], [826.0, 13706.0], [824.0, 13778.0], [830.0, 13630.0], [816.0, 15317.0], [818.0, 13783.0], [828.0, 13773.0], [800.0, 13655.0], [802.0, 13654.0], [804.0, 13794.0], [814.0, 9482.0], [812.0, 13645.0], [810.0, 9487.0], [808.0, 13792.0], [822.0, 15311.0], [820.0, 13782.0], [858.0, 13679.0], [856.0, 24343.0], [862.0, 15164.0], [848.0, 15173.0], [850.0, 13684.5], [860.0, 11596.0], [832.0, 24364.5], [834.0, 24361.0], [836.0, 13768.0], [838.0, 13767.0], [846.0, 15178.0], [844.0, 13763.0], [842.0, 13764.0], [854.0, 13610.0], [852.0, 13611.0], [892.0, 13629.0], [894.0, 13629.0], [880.0, 24255.0], [882.0, 24248.0], [890.0, 13632.0], [888.0, 28274.0], [870.0, 13740.0], [868.0, 14508.0], [866.0, 9438.0], [864.0, 15161.0], [878.0, 12252.666666666666], [876.0, 15267.0], [886.0, 13641.0], [922.0, 23216.0], [926.0, 23206.0], [912.0, 10410.0], [914.0, 14165.0], [916.0, 12488.0], [924.0, 14149.0], [902.0, 13606.0], [900.0, 19681.5], [898.0, 13621.0], [896.0, 13627.0], [910.0, 14175.0], [908.0, 8341.0], [906.0, 13888.0], [904.0, 13577.0], [918.0, 12629.0], [956.0, 12588.0], [958.0, 17812.5], [944.0, 12601.0], [946.0, 12599.0], [948.0, 12596.0], [954.0, 8286.0], [952.0, 23184.0], [934.0, 12608.0], [932.0, 14141.0], [930.0, 17907.0], [928.0, 23204.0], [942.0, 14134.0], [940.0, 17827.5], [936.0, 8301.0], [950.0, 12595.0], [966.0, 12439.0], [986.0, 12540.0], [988.0, 12395.0], [978.0, 8243.0], [964.0, 12512.5], [962.0, 12441.0], [960.0, 12442.0], [970.0, 12436.0], [968.0, 23173.0], [982.0, 13310.0], [980.0, 12402.0], [1016.0, 13274.0], [1020.0, 23096.0], [1012.0, 12441.0], [1010.0, 23105.0], [1022.0, 12360.0], [1018.0, 14039.0], [992.0, 12121.333333333334], [994.0, 12534.0], [996.0, 12388.0], [998.0, 12530.0], [1006.0, 18586.0], [1004.0, 12525.0], [1002.0, 12454.5], [1000.0, 23118.0], [1014.0, 12510.0], [1036.0, 12491.0], [1084.0, 11504.0], [1080.0, 11507.0], [1076.0, 11268.0], [1024.0, 12502.0], [1052.0, 11649.0], [1048.0, 13990.0], [1044.0, 12490.0], [1040.0, 12348.0], [1068.0, 45242.75], [1056.0, 9629.0], [1144.0, 18072.0], [1148.0, 11198.0], [1120.0, 11222.0], [1124.0, 11218.0], [1140.0, 8897.0], [1096.0, 18126.0], [1092.0, 18126.0], [1100.0, 14796.5], [1116.0, 11229.0], [1104.0, 18107.0], [1132.0, 75177.5], [1128.0, 18084.0], [1204.0, 8964.0], [1212.0, 11116.0], [1184.0, 19957.0], [1188.0, 11409.0], [1192.0, 11407.0], [1208.0, 8935.0], [1164.0, 11430.5], [1156.0, 18060.0], [1152.0, 11196.0], [1180.0, 8983.0], [1176.0, 18045.0], [1172.0, 11180.0], [1168.0, 11183.0], [1196.0, 11159.0], [1264.0, 10967.0], [1256.0, 10985.0], [1276.0, 10309.0], [1248.0, 10997.0], [1252.0, 10990.0], [1228.0, 17989.5], [1224.0, 17900.0], [1220.0, 17942.0], [1216.0, 18148.0], [1244.0, 18057.0], [1240.0, 61673.333333333336], [1232.0, 17896.0], [1260.0, 8789.0], [1292.0, 17105.0], [1316.0, 9061.0], [1340.0, 10026.0], [1336.0, 10272.0], [1288.0, 137985.0], [1284.0, 10936.0], [1308.0, 10284.0], [1304.0, 10288.0], [1300.0, 7856.0], [1296.0, 10049.0], [1324.0, 79164.0], [1320.0, 10276.0], [1312.0, 10281.0], [1400.0, 17002.0], [1376.0, 17039.0], [1380.0, 137913.0], [1384.0, 10223.0], [1404.0, 9946.0], [1396.0, 10199.0], [1392.0, 74050.0], [1344.0, 10268.0], [1348.0, 137949.0], [1356.0, 10014.0], [1372.0, 10232.0], [1368.0, 10236.0], [1364.0, 17063.0], [1360.0, 10012.0], [1388.0, 137897.0], [1460.0, 9340.0], [1468.0, 9411.0], [1448.0, 9348.0], [1440.0, 6562.0], [1444.0, 73758.5], [1420.0, 147942.0], [1416.0, 9922.0], [1412.0, 16992.0], [1436.0, 9868.0], [1432.0, 9873.0], [1428.0, 9901.0], [1424.0, 9904.0], [1452.0, 16400.0], [1524.0, 12696.0], [1528.0, 6509.0], [1512.0, 13747.0], [1532.0, 6504.0], [1504.0, 146291.0], [1520.0, 3379.0], [1480.0, 9079.0], [1476.0, 14421.5], [1472.0, 15899.0], [1500.0, 8514.0], [1496.0, 8522.0], [1492.0, 8524.0], [1516.0, 13741.0], [1592.0, 4598.0], [1596.0, 15877.0], [1584.0, 4680.0], [1580.0, 15963.0], [1568.0, 4680.0], [1548.0, 4683.0], [1536.0, 12676.0], [1660.0, 15238.0], [1648.0, 15927.0], [1644.0, 15936.0], [1632.0, 14605.0], [1636.0, 10738.0], [1640.0, 15947.0], [1652.0, 15925.0], [1600.0, 4592.0], [1604.0, 4589.0], [1608.0, 15871.0], [1628.0, 15964.0], [1624.0, 4574.0], [1620.0, 14616.0], [1616.0, 14618.0], [1720.0, 13738.0], [1696.0, 13229.0], [1700.0, 15835.0], [1704.0, 15815.0], [1708.0, 14719.0], [1716.0, 2350.0], [1712.0, 106.0], [1676.0, 15775.0], [1672.0, 4503.0], [1668.0, 10689.0], [1664.0, 13305.0], [1692.0, 4449.0], [1688.0, 4452.0], [1684.0, 4458.0], [1680.0, 15865.0], [1788.0, 10637.0], [1760.0, 10269.5], [1764.0, 10666.0], [1768.0, 10752.5], [1772.0, 9664.0], [1784.0, 9652.0], [1780.0, 10648.0], [1776.0, 10841.5], [1740.0, 10394.833333333334], [1732.0, 9706.0], [1728.0, 10023.666666666666], [1752.0, 10675.0], [1744.0, 10878.0], [1848.0, 9543.0], [1844.0, 9547.333333333334], [1852.0, 9537.0], [1824.0, 10466.0], [1828.0, 9587.0], [1832.0, 10445.0], [1836.0, 9563.0], [1840.0, 9549.0], [1792.0, 10634.0], [1796.0, 10483.0], [1800.0, 9640.0], [1804.0, 9634.0], [1820.0, 9599.0], [1812.0, 10614.0], [1808.0, 10618.0], [1916.0, 5012.0], [1904.0, 5016.0], [1888.0, 6349.0], [1892.0, 9505.5], [1896.0, 10612.0], [1900.0, 10606.0], [1912.0, 10220.5], [1864.0, 10510.0], [1860.0, 10122.0], [1856.0, 10523.0], [1884.0, 10644.0], [1880.0, 10683.0], [1872.0, 9513.0], [1980.0, 4949.0], [1952.0, 14071.0], [1956.0, 14068.0], [1964.0, 11501.0], [1968.0, 11501.0], [1932.0, 10585.0], [1928.0, 11546.0], [1920.0, 6328.0], [1948.0, 6305.0], [1944.0, 7781.0], [1940.0, 6311.0], [1936.0, 7789.0], [2032.0, 6178.0], [2036.0, 6069.0], [2028.0, 13963.0], [2040.0, 13834.0], [1984.0, 5382.0], [1988.0, 4941.0], [1992.0, 8212.5], [2012.0, 9888.0], [2008.0, 10519.0], [2004.0, 14027.0], [2000.0, 4939.5], [2072.0, 13803.0], [2144.0, 1483.0], [2160.0, 1342.0], [2112.0, 2096.0], [2120.0, 1716.5], [2128.0, 1707.0], [2064.0, 6040.0], [2056.0, 10312.0], [2048.0, 10323.0], [2104.0, 1179.0], [2088.0, 8432.0], [2080.0, 9214.0], [2288.0, 124.0], [2224.0, 480.75], [2216.0, 143.0], [2376.0, 85.0], [2424.0, 1307.0], [2416.0, 79.33333333333333], [2312.0, 120.0], [2352.0, 1330.0], [2448.0, 6727.0], [2528.0, 82.0], [2440.0, 1170.0], [2488.0, 119.0], [2472.0, 130.0], [2464.0, 3427.5], [2576.0, 76.4], [2584.0, 1240.0], [2560.0, 78.33333333333333], [2616.0, 1201.0], [2608.0, 1218.0], [2600.0, 1225.0], [2592.0, 4686.0], [2624.0, 1180.0], [2632.0, 1159.0], [2640.0, 1141.0], [2712.0, 1289.0], [2760.0, 1281.0], [2768.0, 1278.3333333333333], [2784.0, 1266.0], [2704.0, 1297.0], [2696.0, 2672.0], [2744.0, 951.0], [2736.0, 2195.0], [2728.0, 1264.0], [2720.0, 1276.5], [2824.0, 80.0], [2832.0, 80.25], [2864.0, 91.0], [2856.0, 91.0], [2896.0, 54.0], [2904.0, 48.5], [2952.0, 95.29411764705883], [3000.0, 11790.339288356363], [2960.0, 2228.0], [2992.0, 34117.0], [2984.0, 1200.0], [2976.0, 34986.0], [2153.0, 1203.0], [2113.0, 2074.0], [2161.0, 7772.0], [2129.0, 1707.0], [2049.0, 13824.0], [2065.0, 10303.0], [2073.0, 11238.0], [2105.0, 2159.0], [2097.0, 6054.5], [2233.0, 136.0], [2217.0, 701.1176470588234], [2425.0, 1307.0], [2377.0, 98.2], [2409.0, 328.59999999999997], [2489.0, 119.0], [2441.0, 1159.0], [2481.0, 128.0], [2473.0, 129.0], [2465.0, 132.0], [2513.0, 91.0], [2497.0, 115.0], [2577.0, 76.0], [2585.0, 1239.0], [2617.0, 1197.0], [2609.0, 1218.0], [2601.0, 1225.0], [2593.0, 4684.0], [2625.0, 1179.0], [2633.0, 1153.0], [2641.0, 1138.0], [2649.0, 1133.0], [2809.0, 81.0], [2753.0, 1287.0], [2769.0, 1279.0], [2777.0, 1268.0], [2793.0, 144.0], [2785.0, 1265.0], [2713.0, 1288.0], [2705.0, 1296.0], [2697.0, 2305.0], [2745.0, 950.0], [2729.0, 1249.0], [2721.0, 1276.0], [2825.0, 100.4], [2817.0, 116.0], [2873.0, 59.0], [2865.0, 91.0], [2857.0, 91.0], [2897.0, 54.0], [2993.0, 34114.933333333334], [2961.0, 2227.0], [2969.0, 35036.0], [2985.0, 34123.0], [2977.0, 34673.0], [1077.0, 18136.0], [1085.0, 75347.0], [1057.0, 8621.0], [1081.0, 18132.0], [1073.0, 14804.0], [1033.0, 12352.5], [1029.0, 20069.0], [1053.0, 10641.0], [1049.0, 12662.0], [1145.0, 11442.0], [1121.0, 18092.0], [1125.0, 8911.0], [1129.0, 11214.0], [1141.0, 11204.0], [1137.0, 80341.5], [1101.0, 11239.0], [1097.0, 18124.0], [1089.0, 13599.5], [1117.0, 9037.0], [1113.0, 18101.0], [1109.0, 83680.5], [1105.0, 11481.0], [1133.0, 11210.0], [1209.0, 17592.0], [1185.0, 18221.0], [1193.0, 11162.0], [1213.0, 8908.0], [1205.0, 18023.0], [1201.0, 14591.0], [1153.0, 11194.0], [1157.0, 11190.0], [1161.0, 10094.0], [1165.0, 11430.0], [1173.0, 11178.0], [1169.0, 11181.0], [1197.0, 11402.0], [1273.0, 7628.0], [1249.0, 10993.0], [1253.0, 8799.0], [1257.0, 8795.0], [1277.0, 16934.0], [1269.0, 78845.0], [1265.0, 8776.0], [1221.0, 17920.0], [1225.0, 11030.0], [1229.0, 11028.0], [1245.0, 8811.0], [1237.0, 9930.0], [1261.0, 21888.0], [1337.0, 10270.0], [1341.0, 12458.333333333334], [1313.0, 17088.0], [1317.0, 10277.0], [1333.0, 10028.0], [1329.0, 111022.75], [1293.0, 10927.0], [1289.0, 10299.0], [1285.0, 17112.0], [1281.0, 10306.0], [1309.0, 17092.0], [1305.0, 10287.0], [1301.0, 148071.0], [1297.0, 17101.0], [1321.0, 17085.0], [1397.0, 137885.0], [1377.0, 17039.0], [1393.0, 10204.0], [1353.0, 10140.0], [1369.0, 10236.0], [1361.0, 7821.5], [1389.0, 147991.0], [1385.0, 148002.0], [1461.0, 16381.0], [1445.0, 9597.0], [1441.0, 147382.0], [1465.0, 73667.5], [1457.0, 16395.0], [1421.0, 10158.0], [1417.0, 16974.0], [1413.0, 9934.0], [1409.0, 13175.0], [1429.0, 10776.0], [1425.0, 9904.0], [1453.0, 9590.0], [1529.0, 12683.0], [1505.0, 15317.0], [1509.0, 4887.0], [1513.0, 144716.0], [1533.0, 143652.0], [1525.0, 143667.0], [1521.0, 16562.0], [1473.0, 146868.0], [1477.0, 9714.0], [1481.0, 9077.0], [1485.0, 81368.0], [1501.0, 8513.0], [1497.0, 15329.0], [1493.0, 8523.0], [1489.0, 9383.5], [1517.0, 3428.0], [1593.0, 4598.5], [1589.0, 15882.0], [1585.0, 9243.86956521739], [1537.0, 12671.0], [1541.0, 10347.5], [1545.0, 7786.5], [1657.0, 12633.0], [1661.0, 15803.0], [1633.0, 4563.0], [1641.0, 14591.0], [1645.0, 4540.0], [1653.0, 15811.0], [1649.0, 15816.0], [1613.0, 10221.0], [1609.0, 10765.0], [1605.0, 15984.0], [1629.0, 4568.0], [1625.0, 4573.0], [1621.0, 4575.0], [1617.0, 4577.0], [1713.0, 105.0], [1717.0, 8527.0], [1701.0, 14476.0], [1721.0, 2339.0], [1725.0, 5421.5], [1697.0, 4443.0], [1677.0, 15883.0], [1673.0, 10672.0], [1669.0, 15905.0], [1665.0, 15911.0], [1693.0, 15727.0], [1685.0, 4457.0], [1681.0, 4469.0], [1785.0, 10460.0], [1761.0, 10174.5], [1765.0, 9676.0], [1769.0, 10477.0], [1773.0, 10841.0], [1781.0, 10530.0], [1777.0, 10652.0], [1741.0, 10692.0], [1733.0, 10883.0], [1729.0, 14302.0], [1757.0, 10175.5], [1753.0, 9684.0], [1749.0, 10181.5], [1745.0, 9699.0], [1849.0, 10721.0], [1853.0, 9537.0], [1825.0, 9594.0], [1833.0, 10445.0], [1837.0, 9552.0], [1845.0, 10536.0], [1841.0, 9548.0], [1797.0, 9642.0], [1801.0, 10627.0], [1805.0, 10069.5], [1821.0, 10402.0], [1817.0, 10098.0], [1813.0, 10496.0], [1809.0, 10807.0], [1917.0, 6330.0], [1889.0, 14117.0], [1893.0, 5027.0], [1897.0, 14115.0], [1901.0, 11565.0], [1909.0, 6335.5], [1869.0, 9913.0], [1865.0, 10699.0], [1861.0, 9532.0], [1857.0, 9534.0], [1885.0, 5031.0], [1873.0, 10500.0], [1973.0, 9383.25], [1957.0, 11523.0], [1981.0, 4943.0], [1953.0, 4980.0], [1961.0, 6839.0], [1977.0, 9755.666666666666], [1933.0, 6318.0], [1929.0, 11545.0], [1925.0, 8457.0], [1949.0, 4985.0], [1945.0, 10574.0], [1937.0, 4996.0], [2041.0, 4743.0], [2037.0, 8119.0], [2021.0, 11790.285714285716], [2025.0, 9886.5], [2029.0, 5312.333333333333], [2045.0, 10327.0], [2033.0, 11373.0], [1985.0, 14032.0], [2013.0, 4930.0], [2005.0, 11481.0], [2162.0, 7768.0], [2154.0, 1203.0], [2114.0, 1722.0], [2122.0, 1711.0], [2130.0, 1705.0], [2138.0, 1626.3333333333333], [2146.0, 1483.5], [2074.0, 10278.0], [2066.0, 10303.0], [2058.0, 7997.5], [2050.0, 4733.0], [2106.0, 2158.0], [2098.0, 2168.0], [2082.0, 12496.0], [2234.0, 136.0], [2290.0, 124.0], [2218.0, 775.3333333333333], [2418.0, 79.0], [2378.0, 1322.0], [2322.0, 510.33333333333337], [2338.0, 95.0], [2442.0, 1155.0], [2458.0, 132.66666666666666], [2482.0, 127.0], [2466.0, 132.0], [2514.0, 90.0], [2506.0, 114.0], [2586.0, 1237.0], [2634.0, 1151.0], [2642.0, 1138.0], [2682.0, 99.0], [2578.0, 76.14285714285715], [2618.0, 1196.0], [2610.0, 1217.0], [2602.0, 1223.0], [2594.0, 1231.0], [2626.0, 1178.0], [2650.0, 3627.0], [2794.0, 120.0], [2754.0, 1286.0], [2770.0, 1278.0], [2778.0, 1267.0], [2706.0, 1294.0], [2698.0, 2303.0], [2746.0, 1290.0], [2738.0, 2193.0], [2730.0, 1244.0], [2722.0, 1275.0], [2826.0, 114.0], [2818.0, 115.0], [2866.0, 90.0], [2898.0, 54.0], [2906.0, 48.5], [2954.0, 1521.0], [2962.0, 2223.0], [2970.0, 35032.0], [2994.0, 31149.1], [2986.0, 34123.0], [2978.0, 428.0], [2147.0, 1290.0], [2139.0, 1625.0], [2123.0, 1710.0], [2131.0, 1701.0], [2155.0, 1197.0], [2051.0, 11278.0], [2059.0, 4725.0], [2067.0, 13806.0], [2075.0, 6004.0], [2099.0, 2167.0], [2091.0, 7537.333333333333], [2083.0, 11223.0], [2235.0, 135.5], [2291.0, 132.66666666666669], [2219.0, 142.5], [2411.0, 451.6], [2323.0, 98.0], [2315.0, 100.66666666666667], [2307.0, 122.0], [2347.0, 94.0], [2515.0, 90.0], [2459.0, 132.0], [2435.0, 780.8], [2467.0, 131.0], [2507.0, 114.0], [2619.0, 1194.0], [2579.0, 75.20000000000002], [2603.0, 1222.0], [2595.0, 1229.0], [2627.0, 1176.0], [2635.0, 1149.0], [2651.0, 3627.0], [2643.0, 1135.0], [2795.0, 118.0], [2715.0, 1287.0], [2763.0, 1281.0], [2755.0, 1284.0], [2771.0, 1276.0], [2811.0, 81.5], [2707.0, 1293.0], [2699.0, 1300.0], [2739.0, 2192.5], [2731.0, 1242.0], [2723.0, 1273.0], [2907.0, 47.0], [2835.0, 113.0], [2819.0, 114.0], [2867.0, 90.0], [2851.0, 92.0], [2899.0, 54.27272727272727], [2955.0, 2286.0], [2963.0, 2221.0], [2971.0, 34993.0], [2995.0, 33001.64], [2987.0, 34123.0], [541.0, 32684.0], [543.0, 32573.5], [539.0, 32387.0], [537.0, 32388.0], [535.0, 32953.0], [533.0, 32961.0], [531.0, 32971.0], [529.0, 32974.0], [527.0, 32982.0], [519.0, 32994.0], [515.0, 32998.0], [513.0, 32999.0], [523.0, 32988.0], [573.0, 36011.0], [575.0, 20479.0], [571.0, 35340.5], [551.0, 35434.0], [549.0, 21438.0], [547.0, 22528.0], [545.0, 32855.0], [567.0, 35343.0], [565.0, 35347.0], [563.0, 35348.0], [561.0, 35353.0], [557.0, 35424.0], [553.0, 35432.0], [605.0, 32434.0], [607.0, 32431.0], [603.0, 32436.0], [601.0, 32438.0], [599.0, 32443.0], [597.0, 32443.0], [595.0, 32445.5], [593.0, 32447.0], [591.0, 32452.0], [577.0, 32465.0], [583.0, 32458.0], [581.0, 32462.0], [589.0, 32452.0], [587.0, 32455.0], [637.0, 30212.0], [639.0, 16984.0], [635.0, 17040.0], [633.0, 18049.0], [631.0, 19058.0], [629.0, 20093.0], [627.0, 32259.0], [625.0, 32386.0], [623.0, 32395.0], [611.0, 32427.0], [609.0, 32429.0], [615.0, 32421.0], [613.0, 32422.0], [621.0, 32398.0], [619.0, 32406.0], [617.0, 32408.0], [669.0, 16484.0], [671.0, 15513.0], [667.0, 16901.0], [665.0, 16905.0], [663.0, 16916.0], [661.0, 16926.0], [659.0, 26113.0], [657.0, 16959.0], [655.0, 16965.0], [641.0, 16981.0], [647.0, 16975.0], [645.0, 16978.0], [653.0, 26146.0], [651.0, 16970.0], [649.0, 26151.0], [701.0, 16019.0], [703.0, 16016.0], [699.0, 16022.0], [697.0, 16024.0], [693.0, 16029.0], [691.0, 16031.0], [689.0, 16034.0], [687.0, 16036.0], [677.0, 16050.0], [673.0, 16051.0], [685.0, 16038.0], [683.0, 16040.0], [681.0, 16043.0], [729.0, 15566.0], [733.0, 9389.0], [721.0, 15686.0], [731.0, 9390.0], [711.0, 16005.0], [709.0, 16010.0], [707.0, 16012.0], [705.0, 16015.0], [719.0, 15971.0], [717.0, 15983.0], [715.0, 15996.0], [713.0, 16003.0], [727.0, 15684.0], [725.0, 9391.0], [765.0, 9799.0], [767.0, 15518.0], [753.0, 9361.0], [755.0, 15535.0], [763.0, 15639.0], [761.0, 9347.0], [751.0, 15539.0], [737.0, 12476.0], [739.0, 9615.5], [741.0, 9368.0], [749.0, 15658.0], [745.0, 12513.0], [759.0, 12437.5], [757.0, 9357.0], [793.0, 13803.0], [799.0, 14311.333333333334], [785.0, 13905.0], [787.0, 14042.0], [775.0, 14077.0], [773.0, 13936.0], [771.0, 13940.0], [769.0, 15621.0], [783.0, 15465.0], [781.0, 13910.0], [779.0, 24662.0], [777.0, 24668.0], [791.0, 14465.0], [789.0, 13895.0], [827.0, 13775.0], [829.0, 13773.0], [817.0, 13641.0], [819.0, 13783.0], [815.0, 15317.0], [801.0, 13798.0], [803.0, 13797.0], [807.0, 13649.0], [805.0, 13793.0], [813.0, 14483.0], [809.0, 13790.0], [823.0, 13779.0], [821.0, 13638.0], [833.0, 13771.0], [863.0, 13747.0], [851.0, 13754.0], [861.0, 13749.0], [847.0, 13763.0], [835.0, 13768.0], [839.0, 13696.0], [845.0, 13619.0], [843.0, 13763.0], [841.0, 13766.5], [855.0, 13751.0], [853.0, 13611.0], [889.0, 13633.0], [895.0, 13628.0], [881.0, 24250.0], [885.0, 13641.5], [883.0, 13642.0], [891.0, 13630.0], [871.0, 15270.0], [869.0, 15273.0], [865.0, 13602.0], [879.0, 13684.0], [875.0, 13735.0], [873.0, 11584.0], [887.0, 13636.0], [925.0, 14147.0], [927.0, 14145.0], [913.0, 12634.0], [915.0, 8328.0], [917.0, 12630.0], [923.0, 12618.0], [921.0, 12482.0], [903.0, 13596.0], [901.0, 15140.0], [897.0, 15159.0], [909.0, 12643.0], [907.0, 12503.0], [905.0, 13890.0], [919.0, 12485.0], [953.0, 12449.0], [959.0, 23178.0], [945.0, 23191.0], [947.0, 23192.0], [949.0, 12452.0], [955.0, 14122.0], [935.0, 12465.0], [933.0, 14141.0], [931.0, 14143.0], [943.0, 12460.0], [941.0, 12460.0], [939.0, 12603.0], [937.0, 12606.0], [951.0, 12593.0], [987.0, 12396.0], [979.0, 23137.0], [989.0, 12394.0], [977.0, 14381.0], [985.0, 17765.5], [967.0, 14114.0], [965.0, 27221.0], [961.0, 12585.0], [971.0, 8273.0], [969.0, 12438.0], [983.0, 14075.0], [1019.0, 12506.0], [1023.0, 12503.0], [1009.0, 23108.5], [1021.0, 8200.0], [1017.0, 23100.0], [1007.0, 12381.0], [993.0, 12534.0], [995.0, 23124.0], [997.0, 23123.0], [999.0, 8222.0], [1003.0, 23117.0], [1013.0, 14042.0], [1034.0, 12352.0], [1074.0, 18147.0], [1086.0, 11260.0], [1082.0, 139191.0], [1054.0, 10639.0], [1026.0, 17723.5], [1030.0, 12497.0], [1038.0, 12492.0], [1050.0, 12659.0], [1042.0, 14022.0], [1070.0, 13709.5], [1058.0, 8619.0], [1138.0, 11206.0], [1146.0, 11199.0], [1122.0, 18091.0], [1126.0, 149242.0], [1142.0, 11447.0], [1118.0, 11224.0], [1090.0, 11257.0], [1098.0, 18120.0], [1114.0, 11312.333333333334], [1110.0, 11477.0], [1106.0, 18289.0], [1134.0, 11210.0], [1130.0, 11213.0], [1210.0, 17993.0], [1214.0, 17967.0], [1190.0, 14813.5], [1194.0, 8972.0], [1206.0, 8845.0], [1202.0, 11399.0], [1166.0, 11185.0], [1162.0, 18058.0], [1158.0, 11435.0], [1154.0, 11193.0], [1182.0, 10077.0], [1178.0, 10079.0], [1174.0, 18229.0], [1170.0, 11181.0], [1198.0, 8967.0], [1270.0, 8735.0], [1274.0, 10309.0], [1250.0, 10993.0], [1254.0, 10988.0], [1266.0, 11209.0], [1230.0, 18080.0], [1226.0, 17900.0], [1222.0, 17901.0], [1218.0, 14651.0], [1246.0, 8808.0], [1242.0, 14549.5], [1234.0, 8835.0], [1262.0, 10970.0], [1258.0, 8795.0], [1286.0, 17111.0], [1294.0, 10294.0], [1342.0, 17079.0], [1290.0, 10930.0], [1282.0, 10062.0], [1310.0, 7849.0], [1306.0, 17095.0], [1302.0, 7855.0], [1298.0, 18836.0], [1322.0, 137960.0], [1314.0, 7845.0], [1402.0, 13472.5], [1406.0, 82484.0], [1378.0, 10229.0], [1382.0, 77474.0], [1386.0, 137900.0], [1398.0, 9954.0], [1394.0, 17010.0], [1374.0, 84458.5], [1346.0, 79474.5], [1354.0, 10260.0], [1350.0, 12450.0], [1358.0, 77930.5], [1370.0, 10235.0], [1366.0, 77486.5], [1390.0, 10208.0], [1462.0, 9267.0], [1470.0, 9093.0], [1442.0, 137287.0], [1446.0, 137281.0], [1458.0, 78476.5], [1422.0, 10785.0], [1418.0, 147942.0], [1414.0, 10176.0], [1410.0, 10184.0], [1438.0, 13829.5], [1434.0, 10310.0], [1430.0, 9880.0], [1426.0, 9904.0], [1454.0, 9590.0], [1450.0, 73313.0], [1486.0, 9702.0], [1510.0, 13750.0], [1506.0, 15312.0], [1526.0, 12693.0], [1482.0, 15887.0], [1478.0, 9081.0], [1474.0, 9087.0], [1502.0, 8513.0], [1498.0, 146300.0], [1494.0, 20438.0], [1490.0, 5424.0], [1518.0, 3427.0], [1514.0, 144715.0], [1586.0, 10817.0], [1574.0, 588.0], [1546.0, 4697.0], [1654.0, 15810.0], [1658.0, 14563.0], [1646.0, 4534.0], [1634.0, 4564.0], [1638.0, 9581.0], [1642.0, 15826.0], [1650.0, 14571.0], [1630.0, 4566.0], [1602.0, 15984.0], [1606.0, 18088.0], [1614.0, 4579.0], [1610.0, 15870.0], [1622.0, 15858.0], [1618.0, 15971.0], [1718.0, 2348.0], [1698.0, 15725.0], [1706.0, 99.5], [1710.0, 12101.0], [1722.0, 2336.0], [1714.0, 12392.0], [1678.0, 15878.0], [1666.0, 15910.0], [1694.0, 4443.0], [1690.0, 7538.5], [1686.0, 10633.0], [1682.0, 4464.0], [1786.0, 10524.0], [1762.0, 9679.0], [1770.0, 10653.0], [1790.0, 10142.5], [1782.0, 10645.0], [1778.0, 10840.0], [1742.0, 9703.0], [1734.0, 10883.0], [1730.0, 10837.0], [1754.0, 10556.0], [1750.0, 10675.0], [1746.0, 10507.0], [1854.0, 9535.0], [1826.0, 9592.0], [1830.0, 9585.0], [1834.0, 11733.0], [1838.0, 10477.0], [1850.0, 10531.0], [1846.0, 9545.0], [1794.0, 10138.5], [1798.0, 10819.0], [1802.0, 10626.0], [1806.0, 9632.0], [1822.0, 9594.0], [1814.0, 10788.0], [1810.0, 10499.0], [1910.0, 11560.0], [1902.0, 5020.0], [1918.0, 11553.0], [1914.0, 9548.0], [1870.0, 9517.0], [1866.0, 10699.0], [1862.0, 10709.0], [1858.0, 9533.0], [1882.0, 9501.0], [1878.0, 9800.0], [1874.0, 10436.0], [1970.0, 14044.0], [1978.0, 11496.0], [1958.0, 4978.0], [1962.0, 10561.0], [1966.0, 6275.0], [1974.0, 11499.0], [1934.0, 10583.0], [1930.0, 11544.0], [1926.0, 11547.0], [1922.0, 5666.5], [1950.0, 10571.0], [1946.0, 10573.0], [1938.0, 6312.0], [2042.0, 4742.0], [2034.0, 4753.0], [2014.0, 4930.0], [2010.0, 11161.0], [2002.0, 12276.0], [2156.0, 1193.0], [2124.0, 1709.0], [2132.0, 1701.0], [2140.0, 1623.0], [2148.0, 1290.0], [2076.0, 13772.0], [2068.0, 10301.0], [2060.0, 10310.0], [2052.0, 11277.0], [2108.0, 2117.5], [2100.0, 9936.0], [2092.0, 2174.0], [2220.0, 594.0], [2212.0, 150.0], [2412.0, 1317.0], [2324.0, 98.0], [2316.0, 134.0], [2308.0, 122.0], [2348.0, 94.0], [2508.0, 113.0], [2460.0, 132.0], [2444.0, 1152.0], [2436.0, 1239.0], [2516.0, 89.0], [2500.0, 115.0], [2564.0, 78.0], [2580.0, 75.0], [2588.0, 1235.0], [2572.0, 77.0], [2620.0, 1186.0], [2612.0, 1215.5], [2604.0, 1219.0], [2596.0, 1227.0], [2628.0, 1172.0], [2636.0, 1147.0], [2644.0, 1134.0], [2796.0, 118.0], [2716.0, 1286.0], [2756.0, 1285.0], [2764.0, 1280.0], [2772.0, 1270.0], [2780.0, 1267.0], [2788.0, 1263.0], [2708.0, 1292.0], [2748.0, 1290.0], [2740.0, 2190.0], [2732.0, 2202.0], [2724.0, 1270.0], [2892.0, 55.0], [2828.0, 102.66666666666667], [2860.0, 91.0], [2852.0, 92.0], [2900.0, 53.0], [2956.0, 2285.0], [2964.0, 2209.0], [2972.0, 34989.0], [2988.0, 34122.0], [2980.0, 814.0], [2117.0, 1719.0], [2133.0, 1698.0], [2141.0, 1621.0], [2125.0, 1709.0], [2053.0, 11272.0], [2061.0, 6044.0], [2069.0, 11261.0], [2109.0, 2078.0], [2093.0, 2172.0], [2085.0, 7467.0], [2293.0, 123.6470588235294], [2413.0, 80.0], [2309.0, 124.88235294117646], [2349.0, 94.0], [2445.0, 1151.0], [2437.0, 1171.0], [2557.0, 79.0], [2477.0, 128.0], [2469.0, 130.0], [2517.0, 88.0], [2509.0, 112.0], [2501.0, 115.33333333333333], [2581.0, 32.0], [2589.0, 1231.0], [2565.0, 78.0], [2621.0, 1186.0], [2613.0, 1212.0], [2605.0, 1220.0], [2597.0, 1227.0], [2629.0, 1173.0], [2637.0, 1146.0], [2645.0, 1134.0], [2701.0, 1299.0], [2789.0, 1227.0], [2797.0, 117.0], [2757.0, 1284.0], [2765.0, 1280.0], [2781.0, 1266.0], [2749.0, 1290.0], [2741.0, 2188.0], [2733.0, 2198.0], [2725.0, 1269.0], [2917.0, 98.0], [2829.0, 103.0], [2901.0, 52.0], [2837.0, 113.0], [2821.0, 80.0], [2869.0, 89.0], [2909.0, 47.5], [2957.0, 2275.0], [2989.0, 34122.0], [2949.0, 96.5], [2965.0, 35064.0], [2981.0, 1207.0], [1075.0, 18145.0], [1087.0, 11259.0], [1063.0, 9642.25], [1079.0, 10169.0], [1039.0, 23083.0], [1035.0, 23086.0], [1031.0, 14027.0], [1055.0, 9631.0], [1051.0, 11651.0], [1047.0, 14523.0], [1043.0, 19551.333333333332], [1071.0, 18148.0], [1067.0, 14840.5], [1139.0, 18258.0], [1147.0, 11198.0], [1151.0, 11440.333333333334], [1123.0, 11464.0], [1127.0, 11215.0], [1143.0, 11202.0], [1103.0, 11359.5], [1095.0, 55420.66666666667], [1091.0, 18127.0], [1119.0, 18275.0], [1115.0, 18100.0], [1107.0, 149258.0], [1135.0, 11453.0], [1211.0, 11367.0], [1215.0, 18150.0], [1191.0, 11408.0], [1187.0, 10194.5], [1195.0, 11402.0], [1207.0, 18011.0], [1203.0, 11398.0], [1183.0, 11413.0], [1155.0, 9001.0], [1159.0, 8882.0], [1167.0, 8992.0], [1179.0, 11174.0], [1175.0, 18228.0], [1171.0, 11424.0], [1199.0, 18026.0], [1275.0, 17118.0], [1279.0, 12404.0], [1251.0, 8802.0], [1255.0, 11230.0], [1259.0, 11224.0], [1271.0, 11164.0], [1267.0, 10952.0], [1247.0, 8807.0], [1219.0, 17963.0], [1223.0, 17901.0], [1231.0, 17897.0], [1243.0, 11003.0], [1235.0, 14460.5], [1263.0, 10969.0], [1331.0, 79040.5], [1343.0, 7835.0], [1319.0, 13997.5], [1335.0, 77518.0], [1295.0, 10294.0], [1291.0, 10298.0], [1287.0, 17108.0], [1283.0, 9405.0], [1311.0, 10036.0], [1307.0, 137973.0], [1303.0, 10288.0], [1299.0, 137976.0], [1327.0, 137959.0], [1399.0, 10194.0], [1403.0, 137877.0], [1407.0, 147969.0], [1379.0, 16855.0], [1395.0, 10832.0], [1375.0, 17040.0], [1351.0, 17071.0], [1347.0, 17072.0], [1355.0, 10016.0], [1371.0, 10235.0], [1367.0, 10237.0], [1363.0, 10010.5], [1387.0, 10211.0], [1383.0, 137908.0], [1459.0, 10217.0], [1467.0, 15904.0], [1471.0, 9724.0], [1451.0, 16400.0], [1447.0, 16403.0], [1463.0, 9266.0], [1423.0, 9906.0], [1419.0, 9917.0], [1415.0, 137853.0], [1411.0, 137869.0], [1439.0, 6563.0], [1435.0, 16920.0], [1431.0, 10757.0], [1427.0, 10779.0], [1455.0, 9343.0], [1531.0, 11524.5], [1535.0, 9591.0], [1507.0, 8496.0], [1511.0, 13747.0], [1515.0, 13743.0], [1527.0, 6509.0], [1523.0, 12698.0], [1503.0, 8512.0], [1479.0, 9712.0], [1483.0, 9709.0], [1487.0, 9068.0], [1499.0, 8514.0], [1495.0, 15332.0], [1491.0, 5422.0], [1519.0, 3381.0], [1587.0, 4617.0], [1591.0, 15881.0], [1595.0, 7684.0], [1599.0, 10450.666666666666], [1559.0, 4681.0], [1539.0, 1798.5], [1543.0, 4698.5], [1551.0, 10858.0], [1583.0, 16075.0], [1579.0, 10982.428571428572], [1663.0, 15803.0], [1651.0, 10708.0], [1639.0, 15955.0], [1635.0, 4562.0], [1643.0, 15824.0], [1647.0, 15816.0], [1655.0, 15810.0], [1615.0, 14618.0], [1611.0, 15981.0], [1607.0, 10230.5], [1603.0, 4589.0], [1631.0, 15960.0], [1627.0, 4571.0], [1623.0, 4575.0], [1619.0, 4575.0], [1723.0, 13729.0], [1699.0, 15836.0], [1703.0, 15125.5], [1707.0, 13370.0], [1711.0, 13354.0], [1719.0, 2344.0], [1715.0, 12392.0], [1679.0, 4472.0], [1675.0, 10191.5], [1671.0, 10205.5], [1667.0, 10691.0], [1691.0, 4450.0], [1687.0, 4455.0], [1683.0, 4462.0], [1791.0, 9645.0], [1783.0, 10642.0], [1779.0, 9659.0], [1787.0, 10639.0], [1763.0, 9677.0], [1767.0, 10848.0], [1771.0, 10653.0], [1775.0, 10653.0], [1743.0, 10878.0], [1731.0, 10830.0], [1755.0, 10860.0], [1751.0, 10675.0], [1747.0, 10677.0], [1851.0, 9541.0], [1855.0, 10524.0], [1827.0, 10578.0], [1831.0, 10458.0], [1835.0, 10560.0], [1839.0, 10540.0], [1847.0, 10533.0], [1823.0, 9594.0], [1799.0, 10818.0], [1807.0, 9631.0], [1819.0, 10590.0], [1815.0, 10532.0], [1811.0, 10499.0], [1915.0, 11556.0], [1919.0, 10594.0], [1895.0, 12365.0], [1891.0, 8510.0], [1899.0, 9982.5], [1903.0, 5020.0], [1907.0, 10922.0], [1871.0, 10504.0], [1863.0, 10706.0], [1887.0, 9575.0], [1883.0, 13754.0], [1879.0, 10497.0], [1875.0, 10499.0], [1979.0, 10537.0], [1955.0, 6298.5], [1963.0, 6283.0], [1967.0, 10541.0], [1931.0, 8369.0], [1927.0, 5001.0], [1923.0, 11550.0], [1951.0, 4984.0], [1947.0, 11532.0], [1943.0, 10193.5], [1939.0, 10578.0], [2043.0, 6061.0], [2047.0, 7532.0], [2023.0, 7691.0], [2031.0, 12197.0], [2039.0, 5404.0], [1987.0, 14031.0], [1991.0, 11006.0], [1999.0, 10244.25], [1995.0, 9952.5], [2007.0, 11480.0], [2003.0, 10524.0], [2150.0, 1205.0], [2078.0, 13772.0], [2118.0, 1718.0], [2126.0, 1708.0], [2134.0, 1692.0], [2142.0, 1620.0], [2158.0, 1366.0], [2070.0, 6034.0], [2062.0, 11268.0], [2110.0, 2120.0], [2102.0, 1702.0], [2094.0, 2172.0], [2086.0, 13760.0], [2294.0, 123.33333333333334], [2222.0, 955.0], [2214.0, 293.6666666666667], [2422.0, 696.5], [2398.0, 83.5], [2414.0, 1317.0], [2406.0, 193.90909090909096], [2318.0, 98.0], [2350.0, 95.0], [2438.0, 1170.0], [2446.0, 142.0], [2486.0, 119.0], [2478.0, 128.0], [2502.0, 115.0], [2574.0, 78.0], [2590.0, 1225.0], [2566.0, 78.0], [2622.0, 1184.0], [2614.0, 1206.0], [2606.0, 1220.0], [2598.0, 1226.0], [2630.0, 1167.0], [2638.0, 1145.0], [2718.0, 1285.0], [2774.0, 1268.0], [2758.0, 1283.0], [2782.0, 1267.0], [2790.0, 144.0], [2694.0, 96.4047619047619], [2742.0, 2188.0], [2734.0, 2197.0], [2726.0, 1266.0], [2830.0, 114.0], [2838.0, 113.0], [2822.0, 114.0], [2854.0, 419.66666666666663], [2894.0, 55.33333333333333], [2910.0, 149.0], [2902.0, 52.0], [2950.0, 95.5], [2958.0, 2234.0], [2966.0, 35062.0], [2990.0, 34120.0], [2982.0, 1205.0], [2159.0, 1363.0], [2135.0, 1627.0], [2143.0, 1485.0], [2127.0, 1708.0], [2151.0, 1204.0], [2111.0, 2099.0], [2055.0, 6412.5], [2063.0, 11268.0], [2071.0, 13804.0], [2079.0, 4680.0], [2103.0, 1702.0], [2095.0, 2171.0], [2087.0, 10982.0], [2295.0, 126.8], [2215.0, 143.0], [2423.0, 1311.0], [2407.0, 287.5], [2375.0, 85.85714285714285], [2335.0, 250.625], [2327.0, 97.33333333333333], [2311.0, 173.0], [2351.0, 94.25], [2455.0, 133.0], [2463.0, 132.0], [2447.0, 140.0], [2439.0, 1171.0], [2471.0, 130.0], [2527.0, 81.0], [2503.0, 115.0], [2575.0, 76.0], [2647.0, 1133.0], [2591.0, 1223.0], [2583.0, 5713.0], [2567.0, 77.0], [2623.0, 1181.0], [2615.0, 1206.0], [2607.0, 1219.0], [2599.0, 1226.0], [2631.0, 1167.0], [2639.0, 1143.0], [2711.0, 1290.0], [2815.0, 98.0], [2759.0, 1282.0], [2775.0, 1269.0], [2783.0, 1267.5], [2703.0, 1298.5], [2751.0, 1288.5], [2743.0, 1976.0], [2735.0, 2197.0], [2727.0, 1265.0], [2831.0, 114.0], [2839.0, 112.0], [2855.0, 92.0], [2895.0, 54.75], [2911.0, 148.0], [2951.0, 96.0], [2959.0, 2231.0], [2967.0, 35060.0], [2975.0, 34987.0], [2991.0, 34119.0], [2983.0, 1204.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2850.840727079387, 13026.563220682681]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1313.0, "minX": 1.6830252E12, "maxY": 89496.0, "series": [{"data": [[1.68302538E12, 76505.45], [1.6830252E12, 1636.3166666666666], [1.68302556E12, 7635.2], [1.68302526E12, 49363.38333333333], [1.68302562E12, 4145.15], [1.68302544E12, 66651.76666666666], [1.6830255E12, 57141.15], [1.68302532E12, 89496.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302538E12, 53908.75], [1.6830252E12, 1313.0], [1.68302556E12, 5942.166666666667], [1.68302526E12, 35905.5], [1.68302562E12, 2895.3333333333335], [1.68302544E12, 46973.416666666664], [1.6830255E12, 41687.75], [1.68302532E12, 64581.083333333336]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302562E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4529.365384615384, "minX": 1.6830252E12, "maxY": 97478.20930232551, "series": [{"data": [[1.68302538E12, 12913.105074160758], [1.6830252E12, 4529.365384615384], [1.68302556E12, 24393.444759206788], [1.68302526E12, 11737.590482887948], [1.68302562E12, 97478.20930232551], [1.68302544E12, 8325.328256584846], [1.6830255E12, 7898.4470018170905], [1.68302532E12, 15904.952616506138]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302562E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4527.98076923077, "minX": 1.6830252E12, "maxY": 97478.20058139537, "series": [{"data": [[1.68302538E12, 12913.095862607368], [1.6830252E12, 4527.98076923077], [1.68302556E12, 24393.43484419265], [1.68302526E12, 11737.572667604301], [1.68302562E12, 97478.20058139537], [1.68302544E12, 8325.318222540744], [1.6830255E12, 7898.4342822531835], [1.68302532E12, 15781.17156990363]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302562E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.13881019830028324, "minX": 1.6830252E12, "maxY": 10043.429820452777, "series": [{"data": [[1.68302538E12, 10043.429820452777], [1.6830252E12, 40.36538461538462], [1.68302556E12, 0.13881019830028324], [1.68302526E12, 178.40178152836378], [1.68302562E12, 0.4360465116279069], [1.68302544E12, 1974.275040315355], [1.6830255E12, 1902.15182717545], [1.68302532E12, 2371.04582140068]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302562E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.6830252E12, "maxY": 199488.0, "series": [{"data": [[1.68302538E12, 163298.0], [1.6830252E12, 6746.0], [1.68302556E12, 70780.0], [1.68302526E12, 57427.0], [1.68302562E12, 100123.0], [1.68302544E12, 199488.0], [1.6830255E12, 149309.0], [1.68302532E12, 101113.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302538E12, 14430.0], [1.6830252E12, 6591.8], [1.68302556E12, 38093.9], [1.68302526E12, 26476.6], [1.68302562E12, 100108.0], [1.68302544E12, 13913.8], [1.6830255E12, 23381.0], [1.68302532E12, 29662.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302538E12, 139513.94], [1.6830252E12, 6743.15], [1.68302556E12, 65744.02], [1.68302526E12, 52073.0], [1.68302562E12, 100120.55], [1.68302544E12, 100346.0], [1.6830255E12, 137894.84], [1.68302532E12, 100176.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302538E12, 132142.4], [1.6830252E12, 6630.05], [1.68302556E12, 54640.95], [1.68302526E12, 43321.79999999998], [1.68302562E12, 100114.75], [1.68302544E12, 68322.19999999995], [1.6830255E12, 34108.0], [1.68302532E12, 82030.19999999975]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302538E12, 18.0], [1.6830252E12, 1419.0], [1.68302556E12, 8170.0], [1.68302526E12, 23.0], [1.68302562E12, 70681.0], [1.68302544E12, 12.0], [1.6830255E12, 23.0], [1.68302532E12, 19.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302538E12, 117.0], [1.6830252E12, 5539.0], [1.68302556E12, 16979.0], [1.68302526E12, 10408.0], [1.68302562E12, 100080.5], [1.68302544E12, 102.0], [1.6830255E12, 169.0], [1.68302532E12, 13411.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302562E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60.0, "minX": 1.0, "maxY": 127307.0, "series": [{"data": [[2.0, 51611.5], [3.0, 11312.0], [4.0, 43071.5], [5.0, 13842.0], [6.0, 37587.0], [7.0, 46119.0], [8.0, 14295.0], [9.0, 9492.0], [10.0, 1478.5], [11.0, 21572.0], [12.0, 8565.5], [13.0, 100.0], [16.0, 4716.5], [17.0, 12683.0], [18.0, 8522.5], [19.0, 12025.0], [21.0, 127307.0], [24.0, 12132.5], [26.0, 10224.0], [27.0, 10092.0], [30.0, 1287.5], [31.0, 16232.0], [36.0, 8467.5], [37.0, 1096.5], [41.0, 8778.0], [42.0, 9056.0], [43.0, 1708.0], [44.0, 12877.0], [47.0, 7883.0], [49.0, 86.0], [50.0, 100.0], [51.0, 9712.0], [57.0, 32438.0], [58.0, 1271.0], [60.0, 50037.5], [63.0, 107.0], [67.0, 96.0], [66.0, 76.0], [69.0, 17470.0], [68.0, 100094.0], [71.0, 11259.0], [74.0, 9796.5], [75.0, 2049.0], [73.0, 100089.0], [77.0, 5937.0], [79.0, 16085.0], [83.0, 7244.0], [87.0, 100073.0], [90.0, 8643.0], [94.0, 96.0], [95.0, 103.0], [93.0, 33022.0], [97.0, 99.0], [99.0, 95.0], [98.0, 99.0], [96.0, 7179.0], [101.0, 103.0], [103.0, 96.0], [100.0, 97.0], [102.0, 103.0], [105.0, 1159.0], [104.0, 100.0], [106.0, 21574.5], [111.0, 18194.0], [110.0, 102.0], [108.0, 98.0], [112.0, 89.5], [117.0, 102.0], [122.0, 110.0], [133.0, 16181.0], [129.0, 23397.0], [139.0, 60.0], [138.0, 115.0], [144.0, 113.0], [157.0, 23184.0], [159.0, 74.0], [154.0, 10505.0], [165.0, 359.0], [167.0, 10291.0], [174.0, 17084.5], [177.0, 1817.0], [180.0, 9187.0], [187.0, 15037.0], [185.0, 11192.5], [189.0, 82.0], [193.0, 79.0], [194.0, 13515.5], [198.0, 85.0], [192.0, 100.0], [199.0, 34312.0], [202.0, 95.0], [204.0, 85.0], [203.0, 17878.0], [207.0, 105.0], [201.0, 114.0], [200.0, 80.0], [214.0, 84.0], [215.0, 11338.0], [208.0, 14464.0], [221.0, 127.0], [231.0, 16062.0], [225.0, 99.0], [230.0, 6173.5], [237.0, 111.0], [241.0, 113.5], [240.0, 13332.5], [255.0, 17855.0], [253.0, 390.0], [271.0, 15344.0], [279.0, 13973.0], [287.0, 1263.0], [283.0, 85.0], [298.0, 2617.0], [303.0, 98.0], [288.0, 11259.0], [292.0, 2029.0], [299.0, 92.0], [290.0, 86.0], [294.0, 80.0], [297.0, 88.0], [312.0, 91.0], [305.0, 128.0], [316.0, 2871.5], [304.0, 82.5], [321.0, 21691.0], [335.0, 13113.0], [346.0, 10427.0], [341.0, 97.0], [338.0, 11193.0], [345.0, 2408.0], [355.0, 124.0], [371.0, 90.0], [368.0, 17127.0], [372.0, 12855.0], [385.0, 13464.0], [391.0, 1596.0], [434.0, 19661.0], [469.0, 12989.0], [488.0, 18424.0], [1.0, 4920.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[279.0, 105639.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 488.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 127307.0, "series": [{"data": [[2.0, 51611.5], [3.0, 11312.0], [4.0, 43071.5], [5.0, 13842.0], [6.0, 37587.0], [7.0, 46119.0], [8.0, 14294.5], [9.0, 9492.0], [10.0, 1478.5], [11.0, 21572.0], [12.0, 8565.5], [13.0, 99.0], [16.0, 4716.0], [17.0, 12683.0], [18.0, 8522.5], [19.0, 12025.0], [21.0, 127307.0], [24.0, 12132.5], [26.0, 10224.0], [27.0, 10092.0], [30.0, 1287.5], [31.0, 16232.0], [36.0, 8467.5], [37.0, 1096.5], [41.0, 8778.0], [42.0, 9056.0], [43.0, 1708.0], [44.0, 12877.0], [47.0, 7883.0], [49.0, 86.0], [50.0, 100.0], [51.0, 9712.0], [57.0, 32438.0], [58.0, 1271.0], [60.0, 50037.5], [63.0, 107.0], [67.0, 96.0], [66.0, 76.0], [69.0, 17470.0], [68.0, 100094.0], [71.0, 11259.0], [74.0, 9796.0], [75.0, 2049.0], [73.0, 100089.0], [77.0, 5937.0], [79.0, 16085.0], [83.0, 7244.0], [87.0, 100073.0], [90.0, 8643.0], [94.0, 96.0], [95.0, 103.0], [93.0, 33022.0], [97.0, 99.0], [99.0, 95.0], [98.0, 99.0], [96.0, 7179.0], [101.0, 103.0], [103.0, 96.0], [100.0, 97.0], [102.0, 103.0], [105.0, 1159.0], [104.0, 100.0], [106.0, 21574.5], [111.0, 18194.0], [110.0, 102.0], [108.0, 98.0], [112.0, 89.5], [117.0, 102.0], [122.0, 110.0], [133.0, 16181.0], [129.0, 23397.0], [139.0, 60.0], [138.0, 115.0], [144.0, 113.0], [157.0, 23184.0], [159.0, 74.0], [154.0, 10505.0], [165.0, 359.0], [167.0, 10291.0], [174.0, 17084.5], [177.0, 1817.0], [180.0, 9187.0], [187.0, 15037.0], [185.0, 11192.5], [189.0, 82.0], [193.0, 79.0], [194.0, 13515.5], [198.0, 85.0], [192.0, 100.0], [199.0, 34312.0], [202.0, 95.0], [204.0, 85.0], [203.0, 17878.0], [207.0, 105.0], [201.0, 114.0], [200.0, 80.0], [214.0, 84.0], [215.0, 11338.0], [208.0, 14464.0], [221.0, 127.0], [231.0, 16062.0], [225.0, 99.0], [230.0, 6173.5], [237.0, 111.0], [241.0, 113.5], [240.0, 13332.5], [255.0, 17855.0], [253.0, 390.0], [271.0, 15344.0], [279.0, 13973.0], [287.0, 1263.0], [283.0, 85.0], [298.0, 2617.0], [303.0, 98.0], [288.0, 11259.0], [292.0, 2029.0], [299.0, 92.0], [290.0, 86.0], [294.0, 80.0], [297.0, 88.0], [312.0, 91.0], [305.0, 128.0], [316.0, 2871.5], [304.0, 82.5], [321.0, 21691.0], [335.0, 13113.0], [346.0, 10427.0], [341.0, 97.0], [338.0, 11193.0], [345.0, 2408.0], [355.0, 124.0], [371.0, 90.0], [368.0, 17127.0], [372.0, 12855.0], [385.0, 13464.0], [391.0, 1596.0], [434.0, 19661.0], [469.0, 12989.0], [488.0, 18424.0], [1.0, 4920.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[279.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 488.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.6830252E12, "maxY": 110.0, "series": [{"data": [[1.68302538E12, 98.33333333333333], [1.6830252E12, 13.333333333333334], [1.68302526E12, 98.33333333333333], [1.68302544E12, 95.0], [1.6830255E12, 86.55], [1.68302532E12, 110.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830255E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.6830252E12, "maxY": 127.88333333333334, "series": [{"data": [[1.68302538E12, 106.75], [1.6830252E12, 2.6], [1.68302556E12, 11.766666666666667], [1.68302526E12, 71.1], [1.68302562E12, 5.733333333333333], [1.68302544E12, 93.01666666666667], [1.6830255E12, 82.55], [1.68302532E12, 127.88333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68302532E12, 0.15]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302562E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.6830252E12, "maxY": 127.88333333333334, "series": [{"data": [[1.68302538E12, 106.75], [1.6830252E12, 2.6], [1.68302556E12, 11.766666666666667], [1.68302526E12, 71.1], [1.68302562E12, 5.733333333333333], [1.68302544E12, 93.01666666666667], [1.6830255E12, 82.55], [1.68302532E12, 127.88333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68302532E12, 0.15]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302562E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.6830252E12, "maxY": 127.88333333333334, "series": [{"data": [[1.68302538E12, 106.75], [1.6830252E12, 2.6], [1.68302556E12, 11.766666666666667], [1.68302526E12, 71.1], [1.68302562E12, 5.733333333333333], [1.68302544E12, 93.01666666666667], [1.6830255E12, 82.55], [1.68302532E12, 127.88333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68302532E12, 0.15]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302562E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

