/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "maxY": 177530.0, "series": [{"data": [[0.0, 13.0], [0.1, 23.0], [0.2, 24.0], [0.3, 25.0], [0.4, 26.0], [0.5, 27.0], [0.6, 29.0], [0.7, 31.0], [0.8, 35.0], [0.9, 38.0], [1.0, 40.0], [1.1, 40.0], [1.2, 41.0], [1.3, 41.0], [1.4, 42.0], [1.5, 42.0], [1.6, 43.0], [1.7, 43.0], [1.8, 44.0], [1.9, 44.0], [2.0, 44.0], [2.1, 45.0], [2.2, 45.0], [2.3, 46.0], [2.4, 47.0], [2.5, 47.0], [2.6, 48.0], [2.7, 48.0], [2.8, 49.0], [2.9, 49.0], [3.0, 50.0], [3.1, 50.0], [3.2, 52.0], [3.3, 53.0], [3.4, 53.0], [3.5, 54.0], [3.6, 54.0], [3.7, 55.0], [3.8, 55.0], [3.9, 55.0], [4.0, 56.0], [4.1, 56.0], [4.2, 56.0], [4.3, 56.0], [4.4, 57.0], [4.5, 57.0], [4.6, 57.0], [4.7, 57.0], [4.8, 57.0], [4.9, 58.0], [5.0, 58.0], [5.1, 58.0], [5.2, 58.0], [5.3, 59.0], [5.4, 59.0], [5.5, 60.0], [5.6, 60.0], [5.7, 60.0], [5.8, 60.0], [5.9, 60.0], [6.0, 61.0], [6.1, 61.0], [6.2, 61.0], [6.3, 61.0], [6.4, 61.0], [6.5, 62.0], [6.6, 62.0], [6.7, 62.0], [6.8, 62.0], [6.9, 62.0], [7.0, 63.0], [7.1, 63.0], [7.2, 63.0], [7.3, 63.0], [7.4, 63.0], [7.5, 63.0], [7.6, 64.0], [7.7, 64.0], [7.8, 64.0], [7.9, 64.0], [8.0, 65.0], [8.1, 65.0], [8.2, 65.0], [8.3, 65.0], [8.4, 65.0], [8.5, 66.0], [8.6, 66.0], [8.7, 66.0], [8.8, 67.0], [8.9, 67.0], [9.0, 67.0], [9.1, 67.0], [9.2, 67.0], [9.3, 68.0], [9.4, 68.0], [9.5, 68.0], [9.6, 68.0], [9.7, 68.0], [9.8, 69.0], [9.9, 69.0], [10.0, 69.0], [10.1, 69.0], [10.2, 69.0], [10.3, 69.0], [10.4, 69.0], [10.5, 69.0], [10.6, 70.0], [10.7, 70.0], [10.8, 70.0], [10.9, 70.0], [11.0, 70.0], [11.1, 70.0], [11.2, 70.0], [11.3, 70.0], [11.4, 70.0], [11.5, 70.0], [11.6, 70.0], [11.7, 70.0], [11.8, 71.0], [11.9, 71.0], [12.0, 71.0], [12.1, 71.0], [12.2, 71.0], [12.3, 71.0], [12.4, 71.0], [12.5, 71.0], [12.6, 72.0], [12.7, 72.0], [12.8, 72.0], [12.9, 72.0], [13.0, 72.0], [13.1, 72.0], [13.2, 72.0], [13.3, 72.0], [13.4, 72.0], [13.5, 73.0], [13.6, 73.0], [13.7, 73.0], [13.8, 73.0], [13.9, 73.0], [14.0, 73.0], [14.1, 74.0], [14.2, 74.0], [14.3, 74.0], [14.4, 74.0], [14.5, 74.0], [14.6, 74.0], [14.7, 74.0], [14.8, 75.0], [14.9, 75.0], [15.0, 75.0], [15.1, 75.0], [15.2, 75.0], [15.3, 75.0], [15.4, 75.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 76.0], [16.2, 76.0], [16.3, 76.0], [16.4, 77.0], [16.5, 77.0], [16.6, 77.0], [16.7, 77.0], [16.8, 77.0], [16.9, 77.0], [17.0, 77.0], [17.1, 77.0], [17.2, 77.0], [17.3, 77.0], [17.4, 77.0], [17.5, 78.0], [17.6, 78.0], [17.7, 78.0], [17.8, 78.0], [17.9, 78.0], [18.0, 78.0], [18.1, 78.0], [18.2, 78.0], [18.3, 79.0], [18.4, 79.0], [18.5, 79.0], [18.6, 79.0], [18.7, 79.0], [18.8, 79.0], [18.9, 79.0], [19.0, 79.0], [19.1, 80.0], [19.2, 80.0], [19.3, 80.0], [19.4, 80.0], [19.5, 80.0], [19.6, 80.0], [19.7, 81.0], [19.8, 81.0], [19.9, 81.0], [20.0, 81.0], [20.1, 81.0], [20.2, 81.0], [20.3, 81.0], [20.4, 82.0], [20.5, 82.0], [20.6, 82.0], [20.7, 82.0], [20.8, 82.0], [20.9, 82.0], [21.0, 82.0], [21.1, 82.0], [21.2, 82.0], [21.3, 83.0], [21.4, 83.0], [21.5, 83.0], [21.6, 83.0], [21.7, 83.0], [21.8, 83.0], [21.9, 83.0], [22.0, 83.0], [22.1, 84.0], [22.2, 84.0], [22.3, 84.0], [22.4, 84.0], [22.5, 84.0], [22.6, 84.0], [22.7, 84.0], [22.8, 84.0], [22.9, 84.0], [23.0, 85.0], [23.1, 85.0], [23.2, 85.0], [23.3, 85.0], [23.4, 85.0], [23.5, 85.0], [23.6, 85.0], [23.7, 85.0], [23.8, 85.0], [23.9, 85.0], [24.0, 85.0], [24.1, 86.0], [24.2, 86.0], [24.3, 86.0], [24.4, 86.0], [24.5, 86.0], [24.6, 86.0], [24.7, 86.0], [24.8, 86.0], [24.9, 86.0], [25.0, 86.0], [25.1, 86.0], [25.2, 86.0], [25.3, 87.0], [25.4, 87.0], [25.5, 87.0], [25.6, 87.0], [25.7, 87.0], [25.8, 87.0], [25.9, 87.0], [26.0, 87.0], [26.1, 88.0], [26.2, 88.0], [26.3, 88.0], [26.4, 88.0], [26.5, 88.0], [26.6, 88.0], [26.7, 89.0], [26.8, 89.0], [26.9, 89.0], [27.0, 89.0], [27.1, 89.0], [27.2, 89.0], [27.3, 89.0], [27.4, 89.0], [27.5, 90.0], [27.6, 90.0], [27.7, 90.0], [27.8, 90.0], [27.9, 91.0], [28.0, 91.0], [28.1, 91.0], [28.2, 92.0], [28.3, 92.0], [28.4, 92.0], [28.5, 93.0], [28.6, 93.0], [28.7, 93.0], [28.8, 93.0], [28.9, 93.0], [29.0, 94.0], [29.1, 94.0], [29.2, 94.0], [29.3, 94.0], [29.4, 95.0], [29.5, 95.0], [29.6, 95.0], [29.7, 95.0], [29.8, 96.0], [29.9, 96.0], [30.0, 96.0], [30.1, 96.0], [30.2, 97.0], [30.3, 97.0], [30.4, 97.0], [30.5, 98.0], [30.6, 98.0], [30.7, 98.0], [30.8, 99.0], [30.9, 99.0], [31.0, 99.0], [31.1, 99.0], [31.2, 100.0], [31.3, 100.0], [31.4, 100.0], [31.5, 100.0], [31.6, 100.0], [31.7, 101.0], [31.8, 101.0], [31.9, 101.0], [32.0, 101.0], [32.1, 102.0], [32.2, 102.0], [32.3, 103.0], [32.4, 103.0], [32.5, 104.0], [32.6, 104.0], [32.7, 105.0], [32.8, 107.0], [32.9, 108.0], [33.0, 109.0], [33.1, 109.0], [33.2, 110.0], [33.3, 110.0], [33.4, 111.0], [33.5, 113.0], [33.6, 115.0], [33.7, 116.0], [33.8, 117.0], [33.9, 117.0], [34.0, 118.0], [34.1, 119.0], [34.2, 120.0], [34.3, 121.0], [34.4, 122.0], [34.5, 125.0], [34.6, 130.0], [34.7, 132.0], [34.8, 133.0], [34.9, 133.0], [35.0, 133.0], [35.1, 134.0], [35.2, 134.0], [35.3, 134.0], [35.4, 134.0], [35.5, 135.0], [35.6, 136.0], [35.7, 137.0], [35.8, 142.0], [35.9, 144.0], [36.0, 147.0], [36.1, 150.0], [36.2, 153.0], [36.3, 157.0], [36.4, 166.0], [36.5, 170.0], [36.6, 170.0], [36.7, 171.0], [36.8, 174.0], [36.9, 179.0], [37.0, 179.0], [37.1, 182.0], [37.2, 193.0], [37.3, 203.0], [37.4, 208.0], [37.5, 216.0], [37.6, 223.0], [37.7, 228.0], [37.8, 234.0], [37.9, 241.0], [38.0, 300.0], [38.1, 344.0], [38.2, 362.0], [38.3, 394.0], [38.4, 440.0], [38.5, 467.0], [38.6, 479.0], [38.7, 498.0], [38.8, 507.0], [38.9, 548.0], [39.0, 590.0], [39.1, 626.0], [39.2, 643.0], [39.3, 669.0], [39.4, 759.0], [39.5, 784.0], [39.6, 840.0], [39.7, 850.0], [39.8, 858.0], [39.9, 884.0], [40.0, 918.0], [40.1, 971.0], [40.2, 1009.0], [40.3, 1028.0], [40.4, 1037.0], [40.5, 1038.0], [40.6, 1083.0], [40.7, 1141.0], [40.8, 1165.0], [40.9, 1210.0], [41.0, 1243.0], [41.1, 1348.0], [41.2, 1367.0], [41.3, 1402.0], [41.4, 1429.0], [41.5, 1446.0], [41.6, 1520.0], [41.7, 1532.0], [41.8, 1537.0], [41.9, 1553.0], [42.0, 1611.0], [42.1, 1658.0], [42.2, 1696.0], [42.3, 1744.0], [42.4, 1787.0], [42.5, 1800.0], [42.6, 1851.0], [42.7, 1903.0], [42.8, 2003.0], [42.9, 2050.0], [43.0, 2090.0], [43.1, 2137.0], [43.2, 2163.0], [43.3, 2219.0], [43.4, 2300.0], [43.5, 2396.0], [43.6, 2421.0], [43.7, 2427.0], [43.8, 2570.0], [43.9, 2650.0], [44.0, 2687.0], [44.1, 2745.0], [44.2, 2855.0], [44.3, 2903.0], [44.4, 2921.0], [44.5, 3014.0], [44.6, 3104.0], [44.7, 3278.0], [44.8, 3295.0], [44.9, 3443.0], [45.0, 3463.0], [45.1, 3481.0], [45.2, 3507.0], [45.3, 3567.0], [45.4, 3602.0], [45.5, 4076.0], [45.6, 4272.0], [45.7, 4524.0], [45.8, 4535.0], [45.9, 4627.0], [46.0, 4828.0], [46.1, 4959.0], [46.2, 4999.0], [46.3, 5035.0], [46.4, 5083.0], [46.5, 5150.0], [46.6, 5334.0], [46.7, 5397.0], [46.8, 5419.0], [46.9, 5488.0], [47.0, 5670.0], [47.1, 5852.0], [47.2, 5854.0], [47.3, 5971.0], [47.4, 6171.0], [47.5, 6312.0], [47.6, 6989.0], [47.7, 7088.0], [47.8, 7266.0], [47.9, 7338.0], [48.0, 7372.0], [48.1, 7408.0], [48.2, 7428.0], [48.3, 7617.0], [48.4, 8080.0], [48.5, 8268.0], [48.6, 8311.0], [48.7, 8352.0], [48.8, 8381.0], [48.9, 8433.0], [49.0, 8462.0], [49.1, 8537.0], [49.2, 8657.0], [49.3, 8733.0], [49.4, 8765.0], [49.5, 8852.0], [49.6, 8903.0], [49.7, 9008.0], [49.8, 9047.0], [49.9, 9080.0], [50.0, 9141.0], [50.1, 9174.0], [50.2, 9217.0], [50.3, 9241.0], [50.4, 9394.0], [50.5, 9395.0], [50.6, 9398.0], [50.7, 9470.0], [50.8, 9488.0], [50.9, 9491.0], [51.0, 9494.0], [51.1, 9594.0], [51.2, 9675.0], [51.3, 9763.0], [51.4, 9804.0], [51.5, 9947.0], [51.6, 10012.0], [51.7, 10033.0], [51.8, 10057.0], [51.9, 10068.0], [52.0, 10068.0], [52.1, 10070.0], [52.2, 10081.0], [52.3, 10160.0], [52.4, 10174.0], [52.5, 10176.0], [52.6, 10199.0], [52.7, 10226.0], [52.8, 10292.0], [52.9, 10297.0], [53.0, 10360.0], [53.1, 10378.0], [53.2, 10422.0], [53.3, 10434.0], [53.4, 10440.0], [53.5, 10450.0], [53.6, 10623.0], [53.7, 10655.0], [53.8, 10686.0], [53.9, 10706.0], [54.0, 10738.0], [54.1, 10749.0], [54.2, 10763.0], [54.3, 10781.0], [54.4, 10813.0], [54.5, 10857.0], [54.6, 10890.0], [54.7, 10942.0], [54.8, 11036.0], [54.9, 11156.0], [55.0, 11284.0], [55.1, 11344.0], [55.2, 11369.0], [55.3, 11372.0], [55.4, 11401.0], [55.5, 11522.0], [55.6, 11597.0], [55.7, 11716.0], [55.8, 11762.0], [55.9, 11777.0], [56.0, 11815.0], [56.1, 11884.0], [56.2, 11935.0], [56.3, 11941.0], [56.4, 11987.0], [56.5, 12059.0], [56.6, 12064.0], [56.7, 12093.0], [56.8, 12192.0], [56.9, 12271.0], [57.0, 12295.0], [57.1, 12342.0], [57.2, 12356.0], [57.3, 12380.0], [57.4, 12438.0], [57.5, 12469.0], [57.6, 12513.0], [57.7, 12580.0], [57.8, 12659.0], [57.9, 12705.0], [58.0, 12735.0], [58.1, 12744.0], [58.2, 12752.0], [58.3, 12820.0], [58.4, 12842.0], [58.5, 12853.0], [58.6, 12883.0], [58.7, 12908.0], [58.8, 12959.0], [58.9, 13019.0], [59.0, 13063.0], [59.1, 13124.0], [59.2, 13154.0], [59.3, 13168.0], [59.4, 13252.0], [59.5, 13318.0], [59.6, 13367.0], [59.7, 13418.0], [59.8, 13442.0], [59.9, 13464.0], [60.0, 13467.0], [60.1, 13529.0], [60.2, 13540.0], [60.3, 13543.0], [60.4, 13603.0], [60.5, 13766.0], [60.6, 13799.0], [60.7, 13802.0], [60.8, 13825.0], [60.9, 13837.0], [61.0, 13838.0], [61.1, 13841.0], [61.2, 13905.0], [61.3, 13968.0], [61.4, 13972.0], [61.5, 13976.0], [61.6, 13980.0], [61.7, 13992.0], [61.8, 13994.0], [61.9, 14003.0], [62.0, 14031.0], [62.1, 14056.0], [62.2, 14058.0], [62.3, 14111.0], [62.4, 14136.0], [62.5, 14138.0], [62.6, 14159.0], [62.7, 14179.0], [62.8, 14270.0], [62.9, 14355.0], [63.0, 14425.0], [63.1, 14481.0], [63.2, 14517.0], [63.3, 14529.0], [63.4, 14531.0], [63.5, 14532.0], [63.6, 14574.0], [63.7, 14644.0], [63.8, 14690.0], [63.9, 14691.0], [64.0, 14707.0], [64.1, 14735.0], [64.2, 14765.0], [64.3, 14773.0], [64.4, 14788.0], [64.5, 14792.0], [64.6, 14827.0], [64.7, 14844.0], [64.8, 14876.0], [64.9, 14912.0], [65.0, 14954.0], [65.1, 14999.0], [65.2, 15019.0], [65.3, 15084.0], [65.4, 15097.0], [65.5, 15100.0], [65.6, 15110.0], [65.7, 15152.0], [65.8, 15164.0], [65.9, 15204.0], [66.0, 15240.0], [66.1, 15242.0], [66.2, 15246.0], [66.3, 15259.0], [66.4, 15262.0], [66.5, 15287.0], [66.6, 15304.0], [66.7, 15318.0], [66.8, 15323.0], [66.9, 15332.0], [67.0, 15338.0], [67.1, 15338.0], [67.2, 15348.0], [67.3, 15351.0], [67.4, 15382.0], [67.5, 15384.0], [67.6, 15403.0], [67.7, 15432.0], [67.8, 15438.0], [67.9, 15477.0], [68.0, 15516.0], [68.1, 15565.0], [68.2, 15566.0], [68.3, 15585.0], [68.4, 15639.0], [68.5, 15669.0], [68.6, 15683.0], [68.7, 15686.0], [68.8, 15725.0], [68.9, 15731.0], [69.0, 15770.0], [69.1, 15784.0], [69.2, 15791.0], [69.3, 15792.0], [69.4, 15826.0], [69.5, 15840.0], [69.6, 15856.0], [69.7, 15882.0], [69.8, 15939.0], [69.9, 15959.0], [70.0, 16014.0], [70.1, 16030.0], [70.2, 16060.0], [70.3, 16095.0], [70.4, 16112.0], [70.5, 16114.0], [70.6, 16125.0], [70.7, 16159.0], [70.8, 16184.0], [70.9, 16236.0], [71.0, 16255.0], [71.1, 16297.0], [71.2, 16356.0], [71.3, 16380.0], [71.4, 16398.0], [71.5, 16411.0], [71.6, 16414.0], [71.7, 16434.0], [71.8, 16437.0], [71.9, 16462.0], [72.0, 16469.0], [72.1, 16474.0], [72.2, 16496.0], [72.3, 16553.0], [72.4, 16560.0], [72.5, 16602.0], [72.6, 16615.0], [72.7, 16621.0], [72.8, 16653.0], [72.9, 16695.0], [73.0, 16702.0], [73.1, 16794.0], [73.2, 16797.0], [73.3, 16809.0], [73.4, 16812.0], [73.5, 16842.0], [73.6, 16952.0], [73.7, 17051.0], [73.8, 17056.0], [73.9, 17066.0], [74.0, 17070.0], [74.1, 17071.0], [74.2, 17075.0], [74.3, 17101.0], [74.4, 17106.0], [74.5, 17125.0], [74.6, 17141.0], [74.7, 17145.0], [74.8, 17149.0], [74.9, 17160.0], [75.0, 17162.0], [75.1, 17164.0], [75.2, 17172.0], [75.3, 17187.0], [75.4, 17224.0], [75.5, 17228.0], [75.6, 17293.0], [75.7, 17311.0], [75.8, 17314.0], [75.9, 17364.0], [76.0, 17439.0], [76.1, 17473.0], [76.2, 17526.0], [76.3, 17588.0], [76.4, 17589.0], [76.5, 17590.0], [76.6, 17617.0], [76.7, 17659.0], [76.8, 17712.0], [76.9, 17726.0], [77.0, 17823.0], [77.1, 17871.0], [77.2, 17954.0], [77.3, 18009.0], [77.4, 18060.0], [77.5, 18069.0], [77.6, 18076.0], [77.7, 18129.0], [77.8, 18143.0], [77.9, 18173.0], [78.0, 18190.0], [78.1, 18221.0], [78.2, 18291.0], [78.3, 18333.0], [78.4, 18369.0], [78.5, 18384.0], [78.6, 18385.0], [78.7, 18403.0], [78.8, 18417.0], [78.9, 18453.0], [79.0, 18497.0], [79.1, 18510.0], [79.2, 18521.0], [79.3, 18536.0], [79.4, 18543.0], [79.5, 18555.0], [79.6, 18566.0], [79.7, 18589.0], [79.8, 18597.0], [79.9, 18611.0], [80.0, 18619.0], [80.1, 18640.0], [80.2, 18653.0], [80.3, 18704.0], [80.4, 18766.0], [80.5, 18857.0], [80.6, 18862.0], [80.7, 18874.0], [80.8, 18874.0], [80.9, 18875.0], [81.0, 18919.0], [81.1, 19011.0], [81.2, 19025.0], [81.3, 19036.0], [81.4, 19061.0], [81.5, 19078.0], [81.6, 19142.0], [81.7, 19204.0], [81.8, 19210.0], [81.9, 19279.0], [82.0, 19319.0], [82.1, 19378.0], [82.2, 19449.0], [82.3, 19477.0], [82.4, 19500.0], [82.5, 19515.0], [82.6, 19589.0], [82.7, 19653.0], [82.8, 19722.0], [82.9, 19835.0], [83.0, 19849.0], [83.1, 19860.0], [83.2, 19918.0], [83.3, 19960.0], [83.4, 19972.0], [83.5, 20168.0], [83.6, 20186.0], [83.7, 20191.0], [83.8, 20239.0], [83.9, 20295.0], [84.0, 20339.0], [84.1, 20344.0], [84.2, 20364.0], [84.3, 20395.0], [84.4, 20398.0], [84.5, 20524.0], [84.6, 20594.0], [84.7, 20632.0], [84.8, 20644.0], [84.9, 20775.0], [85.0, 20864.0], [85.1, 20877.0], [85.2, 20983.0], [85.3, 21034.0], [85.4, 21089.0], [85.5, 21093.0], [85.6, 21100.0], [85.7, 21138.0], [85.8, 21183.0], [85.9, 21269.0], [86.0, 21309.0], [86.1, 21360.0], [86.2, 21450.0], [86.3, 21529.0], [86.4, 21581.0], [86.5, 21615.0], [86.6, 21650.0], [86.7, 21662.0], [86.8, 21686.0], [86.9, 21706.0], [87.0, 21733.0], [87.1, 21753.0], [87.2, 21781.0], [87.3, 21815.0], [87.4, 21820.0], [87.5, 21893.0], [87.6, 21917.0], [87.7, 21953.0], [87.8, 21972.0], [87.9, 22037.0], [88.0, 22116.0], [88.1, 22134.0], [88.2, 22161.0], [88.3, 22246.0], [88.4, 22615.0], [88.5, 22844.0], [88.6, 22884.0], [88.7, 22908.0], [88.8, 23350.0], [88.9, 23673.0], [89.0, 24086.0], [89.1, 24697.0], [89.2, 24830.0], [89.3, 25237.0], [89.4, 25470.0], [89.5, 25577.0], [89.6, 25916.0], [89.7, 26365.0], [89.8, 26823.0], [89.9, 26827.0], [90.0, 27418.0], [90.1, 28389.0], [90.2, 28679.0], [90.3, 28774.0], [90.4, 28777.0], [90.5, 28823.0], [90.6, 28959.0], [90.7, 29439.0], [90.8, 30639.0], [90.9, 31806.0], [91.0, 32310.0], [91.1, 32342.0], [91.2, 32695.0], [91.3, 32844.0], [91.4, 33057.0], [91.5, 33281.0], [91.6, 33358.0], [91.7, 33398.0], [91.8, 33411.0], [91.9, 33679.0], [92.0, 33910.0], [92.1, 34568.0], [92.2, 34644.0], [92.3, 35177.0], [92.4, 35530.0], [92.5, 35731.0], [92.6, 37170.0], [92.7, 37976.0], [92.8, 38495.0], [92.9, 39452.0], [93.0, 39976.0], [93.1, 41473.0], [93.2, 42210.0], [93.3, 42860.0], [93.4, 43119.0], [93.5, 43176.0], [93.6, 43203.0], [93.7, 43492.0], [93.8, 43796.0], [93.9, 44009.0], [94.0, 44276.0], [94.1, 44331.0], [94.2, 44479.0], [94.3, 46778.0], [94.4, 47753.0], [94.5, 49675.0], [94.6, 50012.0], [94.7, 50061.0], [94.8, 50097.0], [94.9, 50179.0], [95.0, 51854.0], [95.1, 53736.0], [95.2, 54420.0], [95.3, 55614.0], [95.4, 55893.0], [95.5, 56970.0], [95.6, 60439.0], [95.7, 60628.0], [95.8, 65134.0], [95.9, 65467.0], [96.0, 68782.0], [96.1, 73049.0], [96.2, 76751.0], [96.3, 77502.0], [96.4, 78930.0], [96.5, 81027.0], [96.6, 81033.0], [96.7, 82187.0], [96.8, 86187.0], [96.9, 87385.0], [97.0, 87497.0], [97.1, 90227.0], [97.2, 94041.0], [97.3, 96282.0], [97.4, 100023.0], [97.5, 100025.0], [97.6, 100037.0], [97.7, 100052.0], [97.8, 100064.0], [97.9, 100068.0], [98.0, 100072.0], [98.1, 100079.0], [98.2, 100087.0], [98.3, 100093.0], [98.4, 100098.0], [98.5, 100103.0], [98.6, 100163.0], [98.7, 117696.0], [98.8, 127241.0], [98.9, 127626.0], [99.0, 127925.0], [99.1, 128010.0], [99.2, 128016.0], [99.3, 133437.0], [99.4, 133488.0], [99.5, 135542.0], [99.6, 138658.0], [99.7, 154541.0], [99.8, 154544.0], [99.9, 156570.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 7870.0, "series": [{"data": [[0.0, 7870.0], [154400.0, 1.0], [136100.0, 2.0], [161700.0, 7.0], [68300.0, 1.0], [81100.0, 2.0], [92300.0, 2.0], [127500.0, 13.0], [100.0, 1542.0], [32900.0, 12.0], [34500.0, 32.0], [33700.0, 7.0], [36100.0, 3.0], [36900.0, 4.0], [37700.0, 3.0], [39300.0, 5.0], [40100.0, 2.0], [41700.0, 3.0], [44900.0, 2.0], [44100.0, 3.0], [43300.0, 3.0], [45700.0, 2.0], [48900.0, 1.0], [48100.0, 3.0], [47300.0, 1.0], [49700.0, 4.0], [52100.0, 2.0], [200.0, 194.0], [53700.0, 23.0], [56900.0, 15.0], [60900.0, 2.0], [63300.0, 2.0], [64900.0, 2.0], [72200.0, 4.0], [300.0, 79.0], [80200.0, 1.0], [88200.0, 1.0], [96200.0, 3.0], [97800.0, 1.0], [400.0, 105.0], [125000.0, 3.0], [500.0, 80.0], [132400.0, 1.0], [135600.0, 3.0], [600.0, 83.0], [154800.0, 1.0], [161200.0, 3.0], [700.0, 37.0], [800.0, 118.0], [900.0, 51.0], [1000.0, 113.0], [1100.0, 66.0], [1200.0, 47.0], [1300.0, 55.0], [1400.0, 76.0], [1500.0, 98.0], [1600.0, 57.0], [1700.0, 71.0], [1800.0, 53.0], [1900.0, 16.0], [2000.0, 64.0], [2100.0, 70.0], [2300.0, 35.0], [2200.0, 26.0], [2400.0, 59.0], [2500.0, 28.0], [2600.0, 37.0], [2700.0, 21.0], [2800.0, 29.0], [2900.0, 66.0], [3000.0, 29.0], [3100.0, 6.0], [3200.0, 48.0], [3300.0, 15.0], [3400.0, 79.0], [3500.0, 55.0], [3600.0, 2.0], [3700.0, 6.0], [3800.0, 8.0], [4000.0, 16.0], [4100.0, 6.0], [4300.0, 6.0], [4200.0, 18.0], [68100.0, 2.0], [4400.0, 6.0], [4500.0, 49.0], [72900.0, 3.0], [4600.0, 33.0], [4800.0, 5.0], [4700.0, 1.0], [5100.0, 28.0], [4900.0, 47.0], [5000.0, 62.0], [79300.0, 2.0], [80900.0, 1.0], [5200.0, 6.0], [5300.0, 32.0], [84100.0, 1.0], [5400.0, 59.0], [5500.0, 9.0], [87300.0, 29.0], [5600.0, 7.0], [5800.0, 49.0], [5700.0, 11.0], [6100.0, 17.0], [95300.0, 2.0], [5900.0, 28.0], [6000.0, 1.0], [6200.0, 17.0], [6300.0, 6.0], [100100.0, 59.0], [6400.0, 5.0], [6500.0, 5.0], [6600.0, 2.0], [6900.0, 6.0], [6700.0, 5.0], [7100.0, 2.0], [7000.0, 24.0], [7200.0, 36.0], [7300.0, 54.0], [7400.0, 48.0], [7500.0, 4.0], [7600.0, 12.0], [7900.0, 1.0], [7800.0, 2.0], [124100.0, 2.0], [7700.0, 1.0], [8100.0, 9.0], [8000.0, 19.0], [8200.0, 32.0], [8400.0, 63.0], [8600.0, 31.0], [9200.0, 44.0], [8800.0, 34.0], [9000.0, 76.0], [9400.0, 105.0], [9600.0, 24.0], [10200.0, 80.0], [9800.0, 16.0], [10000.0, 174.0], [10600.0, 74.0], [10400.0, 103.0], [11200.0, 27.0], [10800.0, 63.0], [11000.0, 22.0], [11600.0, 21.0], [11400.0, 24.0], [12200.0, 53.0], [11800.0, 42.0], [12000.0, 79.0], [12400.0, 60.0], [12600.0, 32.0], [13200.0, 14.0], [12800.0, 92.0], [13000.0, 55.0], [13400.0, 100.0], [13600.0, 15.0], [13800.0, 144.0], [14200.0, 30.0], [14000.0, 108.0], [14600.0, 79.0], [14800.0, 81.0], [14400.0, 40.0], [15000.0, 94.0], [15200.0, 171.0], [15800.0, 113.0], [15400.0, 90.0], [15600.0, 111.0], [16000.0, 86.0], [16200.0, 77.0], [16400.0, 199.0], [17200.0, 74.0], [16800.0, 67.0], [17600.0, 36.0], [18400.0, 84.0], [18000.0, 93.0], [19200.0, 70.0], [18800.0, 126.0], [19600.0, 39.0], [20400.0, 16.0], [20000.0, 17.0], [20800.0, 49.0], [21200.0, 16.0], [21600.0, 100.0], [22000.0, 28.0], [22400.0, 1.0], [22800.0, 42.0], [23200.0, 1.0], [24000.0, 3.0], [24400.0, 6.0], [23600.0, 7.0], [24800.0, 13.0], [25200.0, 16.0], [25600.0, 11.0], [26400.0, 11.0], [27200.0, 3.0], [26800.0, 44.0], [27600.0, 3.0], [28000.0, 9.0], [28400.0, 4.0], [28800.0, 37.0], [29200.0, 1.0], [29600.0, 2.0], [30000.0, 2.0], [31600.0, 3.0], [30800.0, 1.0], [31200.0, 1.0], [32000.0, 2.0], [32800.0, 25.0], [33600.0, 10.0], [34400.0, 1.0], [35200.0, 2.0], [36000.0, 2.0], [38400.0, 3.0], [39200.0, 2.0], [41600.0, 7.0], [43200.0, 21.0], [44000.0, 20.0], [45600.0, 4.0], [48000.0, 2.0], [47200.0, 1.0], [48800.0, 2.0], [49600.0, 4.0], [50400.0, 1.0], [52800.0, 2.0], [54400.0, 2.0], [56000.0, 4.0], [64800.0, 2.0], [65600.0, 1.0], [68800.0, 1.0], [72000.0, 1.0], [75200.0, 4.0], [76800.0, 6.0], [96000.0, 1.0], [128000.0, 38.0], [137600.0, 1.0], [134400.0, 5.0], [154500.0, 40.0], [68700.0, 4.0], [67100.0, 2.0], [70300.0, 1.0], [76700.0, 15.0], [78300.0, 2.0], [83100.0, 1.0], [86300.0, 1.0], [94300.0, 2.0], [99100.0, 1.0], [127900.0, 40.0], [33900.0, 2.0], [33100.0, 9.0], [35500.0, 45.0], [37100.0, 1.0], [37900.0, 3.0], [38700.0, 5.0], [39500.0, 8.0], [41100.0, 4.0], [44300.0, 44.0], [43500.0, 3.0], [46700.0, 2.0], [45100.0, 1.0], [50700.0, 1.0], [49900.0, 12.0], [52300.0, 4.0], [54700.0, 2.0], [57900.0, 2.0], [61900.0, 2.0], [64300.0, 1.0], [65100.0, 2.0], [69400.0, 2.0], [71000.0, 1.0], [72600.0, 1.0], [74200.0, 4.0], [77400.0, 4.0], [82200.0, 9.0], [90200.0, 2.0], [96600.0, 2.0], [135700.0, 1.0], [78100.0, 1.0], [84500.0, 2.0], [86100.0, 2.0], [89300.0, 2.0], [94100.0, 1.0], [97300.0, 1.0], [126100.0, 4.0], [133400.0, 45.0], [155800.0, 10.0], [16500.0, 73.0], [17300.0, 83.0], [16900.0, 31.0], [17700.0, 63.0], [18100.0, 101.0], [19300.0, 47.0], [18900.0, 30.0], [18500.0, 204.0], [20100.0, 62.0], [19700.0, 19.0], [20500.0, 31.0], [20900.0, 32.0], [21300.0, 54.0], [22100.0, 79.0], [21700.0, 99.0], [23300.0, 13.0], [22900.0, 34.0], [23700.0, 10.0], [24100.0, 2.0], [24500.0, 1.0], [24900.0, 5.0], [25300.0, 11.0], [26900.0, 4.0], [27300.0, 1.0], [28100.0, 3.0], [28500.0, 7.0], [29300.0, 7.0], [28900.0, 6.0], [30100.0, 2.0], [29700.0, 1.0], [30500.0, 2.0], [32500.0, 2.0], [32100.0, 1.0], [34600.0, 11.0], [33800.0, 13.0], [33000.0, 11.0], [36200.0, 3.0], [35400.0, 1.0], [147100.0, 2.0], [37000.0, 4.0], [38600.0, 1.0], [40200.0, 2.0], [39400.0, 9.0], [41000.0, 1.0], [42600.0, 13.0], [44200.0, 12.0], [43400.0, 9.0], [45000.0, 1.0], [49000.0, 2.0], [48200.0, 2.0], [49800.0, 2.0], [52200.0, 2.0], [51400.0, 2.0], [53800.0, 2.0], [57000.0, 4.0], [59400.0, 2.0], [61800.0, 2.0], [65000.0, 4.0], [67600.0, 1.0], [77200.0, 2.0], [78800.0, 5.0], [88400.0, 2.0], [93200.0, 3.0], [98000.0, 1.0], [96400.0, 1.0], [133600.0, 7.0], [131300.0, 2.0], [137700.0, 1.0], [69100.0, 2.0], [80300.0, 2.0], [78700.0, 11.0], [81900.0, 1.0], [85100.0, 1.0], [91500.0, 2.0], [125100.0, 2.0], [138600.0, 18.0], [33300.0, 48.0], [34100.0, 1.0], [34900.0, 2.0], [35700.0, 1.0], [36500.0, 3.0], [37300.0, 3.0], [38100.0, 2.0], [40500.0, 9.0], [42900.0, 1.0], [42100.0, 2.0], [43700.0, 14.0], [44500.0, 1.0], [46900.0, 6.0], [45300.0, 1.0], [47700.0, 1.0], [50100.0, 37.0], [49300.0, 1.0], [54100.0, 5.0], [55700.0, 3.0], [57300.0, 2.0], [58900.0, 2.0], [60500.0, 23.0], [62900.0, 2.0], [64500.0, 1.0], [65300.0, 2.0], [73000.0, 2.0], [76200.0, 3.0], [81000.0, 56.0], [87400.0, 11.0], [89000.0, 3.0], [97000.0, 1.0], [162800.0, 9.0], [67300.0, 2.0], [70500.0, 1.0], [76900.0, 1.0], [80100.0, 2.0], [83300.0, 2.0], [86500.0, 2.0], [89700.0, 1.0], [91300.0, 1.0], [99300.0, 1.0], [128100.0, 4.0], [8300.0, 62.0], [8500.0, 16.0], [8700.0, 52.0], [9100.0, 51.0], [8900.0, 13.0], [9700.0, 47.0], [9500.0, 22.0], [9300.0, 74.0], [9900.0, 27.0], [10100.0, 89.0], [10300.0, 60.0], [10700.0, 126.0], [10500.0, 4.0], [11100.0, 17.0], [10900.0, 39.0], [11300.0, 88.0], [11700.0, 71.0], [11500.0, 31.0], [12100.0, 20.0], [11900.0, 70.0], [12300.0, 82.0], [12500.0, 43.0], [12700.0, 97.0], [13100.0, 73.0], [13300.0, 57.0], [12900.0, 59.0], [13700.0, 43.0], [13500.0, 86.0], [14100.0, 121.0], [14300.0, 27.0], [13900.0, 168.0], [14500.0, 129.0], [14700.0, 148.0], [14900.0, 67.0], [15100.0, 100.0], [15300.0, 259.0], [15700.0, 145.0], [15500.0, 93.0], [15900.0, 50.0], [16300.0, 78.0], [16100.0, 125.0], [17400.0, 51.0], [17000.0, 161.0], [16600.0, 105.0], [17800.0, 34.0], [18200.0, 44.0], [19000.0, 115.0], [19400.0, 68.0], [18600.0, 123.0], [20200.0, 47.0], [19800.0, 74.0], [20600.0, 70.0], [21000.0, 89.0], [21400.0, 29.0], [21800.0, 67.0], [22200.0, 24.0], [23400.0, 5.0], [22600.0, 17.0], [23000.0, 1.0], [23800.0, 2.0], [24200.0, 7.0], [25400.0, 16.0], [24600.0, 1.0], [26200.0, 2.0], [25800.0, 4.0], [26600.0, 1.0], [27400.0, 2.0], [27000.0, 2.0], [28600.0, 28.0], [29000.0, 3.0], [29400.0, 21.0], [30600.0, 8.0], [31000.0, 8.0], [31800.0, 9.0], [32200.0, 11.0], [32600.0, 20.0], [33200.0, 20.0], [34800.0, 4.0], [133500.0, 2.0], [34000.0, 2.0], [35600.0, 1.0], [36400.0, 4.0], [37200.0, 3.0], [38000.0, 10.0], [39600.0, 15.0], [42000.0, 8.0], [42800.0, 23.0], [43600.0, 4.0], [44400.0, 4.0], [46800.0, 4.0], [45200.0, 1.0], [50000.0, 58.0], [50800.0, 2.0], [53200.0, 2.0], [54800.0, 2.0], [55600.0, 33.0], [57200.0, 2.0], [59600.0, 2.0], [60400.0, 1.0], [65200.0, 1.0], [71200.0, 2.0], [79200.0, 1.0], [85600.0, 2.0], [82400.0, 2.0], [87200.0, 4.0], [90400.0, 2.0], [95200.0, 2.0], [100000.0, 284.0], [117600.0, 3.0], [127200.0, 8.0], [66300.0, 1.0], [71100.0, 1.0], [77500.0, 2.0], [79100.0, 2.0], [82300.0, 3.0], [87100.0, 2.0], [90300.0, 2.0], [98300.0, 1.0], [134600.0, 1.0], [33500.0, 2.0], [132300.0, 2.0], [135500.0, 20.0], [138700.0, 2.0], [34300.0, 6.0], [35100.0, 14.0], [37500.0, 13.0], [38300.0, 6.0], [154700.0, 1.0], [39900.0, 3.0], [39100.0, 3.0], [41500.0, 2.0], [43100.0, 50.0], [43900.0, 1.0], [44700.0, 2.0], [45500.0, 2.0], [47100.0, 2.0], [48700.0, 6.0], [50300.0, 2.0], [54300.0, 4.0], [56700.0, 2.0], [55900.0, 4.0], [58300.0, 2.0], [59900.0, 2.0], [62300.0, 2.0], [63900.0, 2.0], [68600.0, 1.0], [76600.0, 1.0], [81400.0, 2.0], [86200.0, 2.0], [89400.0, 2.0], [94200.0, 2.0], [126200.0, 4.0], [134100.0, 1.0], [156500.0, 2.0], [162900.0, 5.0], [69300.0, 1.0], [66100.0, 2.0], [72500.0, 1.0], [77300.0, 4.0], [78900.0, 5.0], [82100.0, 3.0], [17100.0, 268.0], [16700.0, 88.0], [18300.0, 114.0], [17500.0, 106.0], [17900.0, 43.0], [19100.0, 32.0], [18700.0, 43.0], [19500.0, 60.0], [19900.0, 64.0], [20300.0, 129.0], [20700.0, 9.0], [21100.0, 67.0], [21500.0, 56.0], [21900.0, 84.0], [22300.0, 1.0], [23500.0, 7.0], [23100.0, 2.0], [22700.0, 5.0], [23900.0, 8.0], [24300.0, 9.0], [24700.0, 18.0], [25500.0, 29.0], [25100.0, 2.0], [25900.0, 4.0], [26300.0, 26.0], [27500.0, 4.0], [27100.0, 1.0], [26700.0, 2.0], [27900.0, 4.0], [28300.0, 3.0], [29100.0, 1.0], [28700.0, 45.0], [29500.0, 1.0], [30700.0, 1.0], [29900.0, 1.0], [31100.0, 3.0], [31500.0, 4.0], [31900.0, 1.0], [32300.0, 32.0], [32700.0, 2.0], [33400.0, 41.0], [36600.0, 2.0], [35000.0, 2.0], [38200.0, 2.0], [37400.0, 2.0], [40600.0, 4.0], [39000.0, 2.0], [42200.0, 4.0], [43000.0, 9.0], [41400.0, 2.0], [177500.0, 1.0], [43800.0, 17.0], [47000.0, 10.0], [46200.0, 1.0], [45400.0, 6.0], [47800.0, 2.0], [51000.0, 2.0], [50200.0, 2.0], [51800.0, 2.0], [55000.0, 7.0], [54200.0, 3.0], [55800.0, 4.0], [58200.0, 2.0], [57400.0, 1.0], [60600.0, 2.0], [65400.0, 33.0], [73200.0, 4.0], [81200.0, 1.0], [89200.0, 12.0], [94000.0, 25.0], [95600.0, 1.0], [127600.0, 12.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 177500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 14763.0, "series": [{"data": [[0.0, 9791.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 725.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14763.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 150.5117845117846, "minX": 1.68302412E12, "maxY": 3000.0, "series": [{"data": [[1.68302424E12, 3000.0], [1.68302442E12, 2681.180531837031], [1.68302412E12, 3000.0], [1.6830243E12, 3000.0], [1.68302448E12, 842.7905904059028], [1.68302418E12, 3000.0], [1.68302436E12, 3000.0], [1.68302454E12, 150.5117845117846]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302454E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 73.0, "minX": 1.0, "maxY": 100119.0, "series": [{"data": [[2.0, 100116.0], [3.0, 100113.0], [4.0, 100112.0], [9.0, 100100.0], [10.0, 100100.0], [11.0, 100100.25], [12.0, 100087.0], [13.0, 100087.0], [15.0, 100086.0], [16.0, 100084.0], [17.0, 100083.0], [22.0, 100059.0], [23.0, 100057.0], [26.0, 100047.0], [28.0, 100047.0], [32.0, 100046.33333333333], [34.0, 100028.5], [36.0, 100027.0], [39.0, 100025.0], [38.0, 100026.0], [41.0, 100024.0], [43.0, 99109.0], [42.0, 100022.0], [49.0, 100105.0], [50.0, 100104.6], [53.0, 100104.25], [55.0, 100103.0], [54.0, 100104.0], [57.0, 100103.0], [56.0, 100101.0], [60.0, 100099.0], [62.0, 100099.0], [67.0, 100094.0], [66.0, 100098.0], [64.0, 100098.5], [71.0, 100090.0], [68.0, 100091.0], [75.0, 100088.0], [74.0, 100088.66666666667], [79.0, 100088.0], [76.0, 100089.0], [82.0, 100085.5], [80.0, 100087.0], [91.0, 100084.0], [90.0, 100084.0], [94.0, 100078.0], [93.0, 100083.0], [92.0, 100084.0], [96.0, 100073.0], [102.0, 100067.0], [100.0, 100072.0], [107.0, 100063.0], [106.0, 100064.75], [109.0, 100048.0], [108.0, 100060.0], [115.0, 100037.16666666667], [121.0, 100025.0], [127.0, 100025.0], [126.0, 100025.2], [125.0, 100025.0], [124.0, 100025.0], [135.0, 100023.0], [133.0, 100024.0], [132.0, 100024.0], [131.0, 100024.0], [128.0, 100025.0], [141.0, 100098.0], [139.0, 97087.0], [138.0, 100022.5], [136.0, 100023.0], [150.0, 100094.0], [149.0, 100094.5], [147.0, 100096.0], [146.0, 100098.0], [158.0, 100076.0], [157.0, 100076.0], [156.0, 100082.0], [155.0, 100091.0], [152.0, 100092.0], [165.0, 100071.0], [164.0, 100073.0], [163.0, 100074.0], [161.0, 100075.66666666667], [183.0, 100068.0], [182.0, 100068.0], [180.0, 100068.5], [191.0, 100059.0], [190.0, 100060.0], [189.0, 100060.0], [187.0, 100066.0], [186.0, 100067.0], [185.0, 100067.0], [184.0, 100068.0], [199.0, 100055.5], [198.0, 100055.0], [194.0, 100056.0], [192.0, 100056.0], [207.0, 100031.0], [206.0, 100031.0], [205.0, 100043.0], [204.0, 100049.5], [202.0, 100052.0], [200.0, 100052.0], [215.0, 100026.0], [214.0, 100027.0], [213.0, 100027.0], [212.0, 100028.33333333333], [209.0, 100029.5], [223.0, 100021.0], [222.0, 100024.25], [218.0, 100026.0], [231.0, 100076.0], [229.0, 100078.5], [227.0, 100079.5], [225.0, 100081.0], [224.0, 100081.0], [239.0, 99311.0], [238.0, 96078.0], [237.0, 100069.0], [236.0, 100070.5], [234.0, 100072.0], [233.0, 100075.0], [232.0, 100075.0], [247.0, 95274.0], [246.0, 95274.0], [245.0, 96282.0], [244.0, 95682.0], [243.0, 96690.0], [242.0, 96692.0], [241.0, 98302.0], [240.0, 96436.0], [255.0, 89367.0], [254.0, 89369.0], [253.0, 90376.0], [252.0, 90379.0], [251.0, 91386.0], [250.0, 93256.0], [249.0, 94263.0], [248.0, 94266.0], [270.0, 83157.0], [271.0, 81288.0], [269.0, 84165.0], [268.0, 80933.0], [267.0, 81941.0], [266.0, 85178.0], [265.0, 86186.0], [264.0, 86187.0], [263.0, 87195.0], [257.0, 90225.0], [256.0, 90227.0], [259.0, 87346.0], [258.0, 89217.0], [262.0, 87198.0], [261.0, 88205.0], [260.0, 86338.0], [286.0, 73211.0], [287.0, 73210.0], [285.0, 74219.0], [284.0, 74221.0], [283.0, 75228.0], [282.0, 75232.0], [281.0, 76239.0], [280.0, 78109.0], [279.0, 79117.0], [273.0, 82146.0], [272.0, 80280.0], [275.0, 81137.0], [274.0, 79272.0], [278.0, 79119.0], [277.0, 80127.0], [276.0, 80129.0], [302.0, 65134.0], [303.0, 65133.0], [301.0, 66141.0], [300.0, 66143.0], [299.0, 67151.0], [298.0, 67153.0], [297.0, 68161.0], [296.0, 68163.0], [295.0, 69171.0], [289.0, 72200.0], [288.0, 72203.0], [291.0, 73058.0], [290.0, 71193.0], [294.0, 69173.0], [293.0, 68814.0], [292.0, 72050.0], [318.0, 58924.0], [319.0, 58922.0], [317.0, 59932.0], [316.0, 59934.0], [315.0, 60942.0], [314.0, 60944.0], [313.0, 61951.0], [312.0, 61953.0], [311.0, 62961.0], [305.0, 65387.0], [304.0, 65389.0], [307.0, 64981.0], [306.0, 64381.0], [310.0, 62964.0], [309.0, 63971.0], [308.0, 63973.0], [334.0, 50847.0], [335.0, 50845.0], [333.0, 51854.0], [332.0, 51856.0], [331.0, 52865.0], [330.0, 52866.0], [329.0, 53874.0], [328.0, 53876.0], [327.0, 54884.0], [321.0, 57913.0], [320.0, 57914.0], [323.0, 56903.0], [322.0, 56905.0], [326.0, 54886.0], [325.0, 55893.0], [324.0, 55895.0], [350.0, 43152.0], [351.0, 43151.0], [349.0, 44161.0], [348.0, 43777.0], [347.0, 44785.0], [346.0, 44787.0], [345.0, 45794.0], [344.0, 45797.0], [343.0, 46805.0], [337.0, 49834.0], [336.0, 49836.0], [339.0, 48824.0], [338.0, 48826.0], [342.0, 46807.0], [341.0, 47814.0], [340.0, 47816.0], [366.0, 35076.0], [367.0, 35074.0], [365.0, 36083.0], [364.0, 36085.0], [363.0, 37093.0], [362.0, 37095.0], [361.0, 38103.0], [360.0, 38105.0], [359.0, 39113.0], [353.0, 42140.0], [352.0, 42141.0], [355.0, 41131.0], [354.0, 41133.0], [358.0, 39115.0], [357.0, 40121.0], [356.0, 40123.0], [382.0, 26998.0], [383.0, 26996.0], [381.0, 28006.0], [380.0, 28008.0], [379.0, 29016.0], [378.0, 29018.0], [377.0, 30025.0], [376.0, 30027.0], [375.0, 31035.0], [369.0, 34064.0], [368.0, 34066.0], [371.0, 33055.0], [370.0, 33057.0], [374.0, 31038.0], [373.0, 32045.0], [372.0, 32047.0], [396.0, 43844.0], [398.0, 43841.0], [399.0, 43840.0], [397.0, 43844.0], [395.0, 43846.0], [393.0, 43853.5], [391.0, 22958.0], [385.0, 25987.0], [384.0, 25989.0], [387.0, 24977.0], [386.0, 24982.0], [390.0, 22960.0], [389.0, 23969.0], [388.0, 23969.0], [413.0, 43495.0], [415.0, 43495.0], [412.0, 43496.0], [403.0, 43832.0], [402.0, 43834.0], [400.0, 43838.0], [411.0, 43533.0], [410.0, 43575.0], [409.0, 43579.0], [408.0, 43809.0], [407.0, 43820.0], [406.0, 43825.0], [405.0, 43827.0], [404.0, 43826.0], [418.0, 16390.0], [417.0, 16392.0], [447.0, 16305.5], [446.0, 16238.0], [444.0, 16376.0], [443.0, 14948.333333333334], [440.0, 19510.600000000006], [439.0, 15645.333333333334], [437.0, 14297.0], [436.0, 16279.2], [462.0, 16236.0], [463.0, 16371.5], [460.0, 16372.0], [448.0, 19366.0], [459.0, 15327.0], [457.0, 14282.0], [456.0, 16281.666666666666], [455.0, 16375.0], [453.0, 15677.333333333334], [452.0, 16376.0], [478.0, 16228.0], [477.0, 16519.4], [473.0, 16229.0], [471.0, 15624.333333333334], [468.0, 14276.0], [467.0, 14276.0], [466.0, 17865.5], [464.0, 16372.0], [493.0, 17069.0], [489.0, 16356.0], [488.0, 15310.5], [486.0, 16358.0], [485.0, 15312.0], [483.0, 14266.0], [482.0, 16359.0], [481.0, 16269.0], [509.0, 16342.0], [511.0, 16273.0], [508.0, 16207.0], [499.0, 15303.0], [497.0, 16217.0], [496.0, 16310.0], [507.0, 16345.0], [506.0, 16207.0], [505.0, 16208.0], [504.0, 16209.0], [503.0, 16279.0], [501.0, 16210.0], [500.0, 16210.0], [540.0, 15225.0], [542.0, 16125.0], [536.0, 15481.666666666666], [516.0, 15182.0], [514.0, 16298.0], [512.0, 16298.0], [532.0, 14180.0], [530.0, 16180.0], [528.0, 14181.0], [526.0, 14181.0], [522.0, 14182.0], [520.0, 15181.5], [570.0, 16105.0], [574.0, 16102.0], [568.0, 14151.0], [550.0, 16124.0], [548.0, 14170.0], [544.0, 15148.0], [564.0, 14159.0], [562.0, 14163.0], [560.0, 14166.0], [558.0, 16121.0], [554.0, 16122.5], [552.0, 16123.0], [604.0, 14077.0], [606.0, 16030.0], [602.0, 16036.0], [600.0, 21433.0], [598.0, 16056.0], [596.0, 14103.0], [594.0, 43299.0], [590.0, 14114.0], [576.0, 19221.0], [582.0, 16089.0], [580.0, 15114.0], [588.0, 15172.0], [586.0, 16082.0], [632.0, 23762.666666666668], [636.0, 16122.0], [638.0, 14017.0], [634.0, 14031.0], [628.0, 14032.0], [626.0, 43230.0], [622.0, 14037.0], [610.0, 15050.5], [608.0, 15052.0], [614.0, 16147.0], [612.0, 14064.0], [620.0, 14042.0], [618.0, 14046.0], [616.0, 14047.0], [668.0, 16039.0], [670.0, 16037.0], [666.0, 16062.0], [664.0, 16084.0], [662.0, 16088.0], [660.0, 16087.5], [658.0, 29570.5], [654.0, 43192.0], [642.0, 43196.0], [640.0, 15969.0], [650.0, 43194.0], [648.0, 15954.0], [700.0, 22156.0], [702.0, 22652.0], [698.0, 22158.0], [696.0, 20375.0], [694.0, 22162.0], [692.0, 22165.0], [690.0, 18782.0], [688.0, 19794.0], [686.0, 20803.0], [674.0, 16014.0], [678.0, 15996.0], [676.0, 16009.0], [684.0, 18822.0], [682.0, 15837.0], [728.0, 22124.0], [734.0, 20335.0], [722.0, 22131.0], [730.0, 22122.0], [704.0, 22151.0], [706.0, 20361.0], [710.0, 22145.0], [718.0, 20347.0], [716.0, 22135.0], [714.0, 19462.5], [712.0, 22144.0], [726.0, 18552.0], [724.0, 22127.0], [762.0, 18512.0], [766.0, 19849.25], [754.0, 18537.0], [752.0, 20322.0], [760.0, 19407.5], [742.0, 20920.666666666668], [750.0, 20324.0], [746.0, 19883.25], [758.0, 18532.0], [756.0, 18536.0], [796.0, 16967.0], [798.0, 16959.0], [784.0, 15725.0], [786.0, 16355.5], [788.0, 16977.0], [792.0, 16971.0], [774.0, 15746.0], [772.0, 20267.0], [770.0, 20272.0], [768.0, 20273.0], [782.0, 16999.0], [780.0, 12749.0], [778.0, 12752.0], [776.0, 14881.5], [790.0, 15711.0], [826.0, 18075.0], [830.0, 19859.0], [816.0, 17725.0], [828.0, 18074.0], [824.0, 17723.0], [804.0, 15660.0], [802.0, 16952.0], [800.0, 16954.0], [814.0, 17726.0], [812.0, 17727.0], [810.0, 17728.0], [822.0, 19860.0], [820.0, 17900.0], [842.0, 17896.0], [832.0, 18074.0], [880.0, 18069.0], [920.0, 17838.0], [912.0, 17707.0], [914.0, 17706.0], [922.0, 33414.0], [902.0, 18334.25], [900.0, 20379.73333333334], [910.0, 17709.0], [908.0, 19847.0], [906.0, 19314.75], [918.0, 33417.0], [916.0, 17705.0], [956.0, 33734.0], [958.0, 17655.0], [928.0, 19797.0], [934.0, 27497.5], [940.0, 33411.0], [936.0, 19796.0], [948.0, 33572.5], [986.0, 33679.0], [990.0, 19724.0], [978.0, 17643.0], [980.0, 17639.0], [988.0, 19735.0], [966.0, 33405.0], [964.0, 19789.0], [962.0, 17653.0], [960.0, 33407.0], [974.0, 33559.5], [972.0, 33398.0], [970.0, 25686.0], [968.0, 33401.0], [982.0, 33358.0], [1018.0, 17893.0], [1022.0, 21728.0], [1008.0, 33652.0], [1020.0, 21845.0], [1016.0, 21847.0], [992.0, 22011.0], [996.0, 33662.0], [998.0, 21508.0], [1006.0, 33436.0], [1002.0, 19720.0], [1010.0, 21493.0], [1032.0, 19665.0], [1080.0, 42922.0], [1060.0, 33204.0], [1084.0, 33498.0], [1024.0, 21475.0], [1052.0, 33222.0], [1048.0, 21403.0], [1044.0, 19648.0], [1064.0, 21733.0], [1140.0, 19464.0], [1148.0, 21597.5], [1120.0, 21662.0], [1128.0, 21762.0], [1136.0, 21692.0], [1100.0, 17733.0], [1096.0, 24253.333333333332], [1092.0, 36672.0], [1088.0, 21706.0], [1108.0, 21667.0], [1104.0, 17728.0], [1132.0, 33413.0], [1212.0, 33315.0], [1200.0, 33001.0], [1188.0, 21684.0], [1152.0, 17654.0], [1156.0, 21593.0], [1160.0, 21720.0], [1164.0, 21713.0], [1176.0, 21706.0], [1172.0, 21642.0], [1196.0, 21675.0], [1192.0, 21681.0], [1276.0, 19160.0], [1264.0, 33146.0], [1248.0, 17453.0], [1252.0, 45339.0], [1216.0, 33304.0], [1220.0, 21615.0], [1224.0, 21107.0], [1228.0, 21470.0], [1236.0, 32913.0], [1260.0, 32443.5], [1256.0, 21514.0], [1336.0, 23560.962962962967], [1332.0, 25156.5], [1280.0, 17373.0], [1392.0, 4919.0], [1404.0, 16659.0], [1376.0, 14569.0], [1400.0, 17535.0], [1344.0, 16496.0], [1348.0, 14472.0], [1352.0, 12451.0], [1356.0, 26755.0], [1372.0, 14759.5], [1368.0, 36282.0], [1360.0, 20697.0], [1388.0, 6565.0], [1384.0, 8537.0], [1456.0, 16611.0], [1468.0, 15310.0], [1440.0, 17514.0], [1460.0, 17479.0], [1420.0, 13333.5], [1412.0, 13335.5], [1408.0, 17093.0], [1432.0, 12029.0], [1424.0, 17234.666666666668], [1520.0, 9920.0], [1528.0, 23656.0], [1532.0, 13941.0], [1524.0, 23673.0], [1500.0, 13985.0], [1472.0, 17474.0], [1476.0, 14015.5], [1480.0, 9957.0], [1484.0, 14002.0], [1492.0, 16579.0], [1488.0, 14000.0], [1508.0, 23686.0], [1504.0, 13982.0], [1592.0, 9771.0], [1596.0, 9766.0], [1568.0, 13845.0], [1572.0, 17298.0], [1588.0, 13093.0], [1536.0, 13935.0], [1540.0, 15660.5], [1544.0, 16508.0], [1548.0, 13913.0], [1564.0, 17304.0], [1560.0, 16484.0], [1556.0, 16488.0], [1580.0, 16419.0], [1576.0, 30575.0], [1648.0, 9705.0], [1660.0, 17192.0], [1636.0, 19426.14285714286], [1652.0, 17218.0], [1612.0, 13810.0], [1608.0, 13813.0], [1600.0, 9760.0], [1624.0, 13798.0], [1616.0, 11780.0], [1644.0, 9736.5], [1668.0, 9653.0], [1724.0, 73.33333333333333], [1716.0, 81.0], [1708.0, 82.0], [1700.0, 84.0], [1664.0, 9674.0], [1676.0, 17161.0], [1672.0, 9649.0], [1692.0, 116.0], [1688.0, 17082.0], [1680.0, 29630.0], [1784.0, 23795.0], [1788.0, 10426.0], [1760.0, 14384.0], [1764.0, 26861.0], [1768.0, 10844.0], [1780.0, 10440.0], [1776.0, 10451.0], [1740.0, 12235.5], [1736.0, 15186.666666666666], [1728.0, 3344.0], [1748.0, 10938.0], [1744.0, 10942.0], [1772.0, 199.5], [1848.0, 21319.0], [1852.0, 8704.0], [1840.0, 21205.0], [1792.0, 10418.0], [1796.0, 21771.0], [1800.0, 21311.0], [1820.0, 21308.0], [1836.0, 15450.166666666668], [1832.0, 21433.0], [1868.0, 21312.5], [1912.0, 14899.0], [1892.0, 16473.0], [1888.0, 16536.5], [1864.0, 11764.0], [1884.0, 21311.0], [1880.0, 21185.0], [1872.0, 11763.0], [1896.0, 11760.0], [1976.0, 21100.0], [1960.0, 12825.0], [1964.0, 12823.0], [1980.0, 8484.0], [1972.0, 21025.333333333332], [1968.0, 20983.0], [1932.0, 21069.0], [1928.0, 21276.0], [1924.0, 17128.0], [1920.0, 16484.499999999996], [1948.0, 11621.0], [1944.0, 8559.0], [1940.0, 21851.0], [1936.0, 21190.0], [2036.0, 21642.0], [2044.0, 12675.0], [2016.0, 12717.0], [2020.0, 21006.0], [2024.0, 12708.0], [2028.0, 16227.0], [2032.0, 21662.0], [1996.0, 21047.0], [1992.0, 11328.0], [1988.0, 16916.0], [1984.0, 16244.0], [2012.0, 11481.0], [2008.0, 12739.0], [2160.0, 9955.0], [2112.0, 20770.0], [2128.0, 10363.0], [2136.0, 10360.0], [2152.0, 17232.0], [2048.0, 20839.0], [2056.0, 20956.0], [2064.0, 20942.0], [2072.0, 20790.0], [2104.0, 12549.0], [2096.0, 12570.5], [2088.0, 12578.0], [2248.0, 14792.0], [2272.0, 10717.0], [2256.0, 11066.0], [2280.0, 12906.5], [2200.0, 14840.0], [2232.0, 14792.0], [2208.0, 10777.0], [2416.0, 12462.5], [2424.0, 12760.0], [2376.0, 9524.333333333334], [2384.0, 14685.0], [2304.0, 14368.0], [2312.0, 11013.0], [2360.0, 10991.0], [2352.0, 10388.5], [2344.0, 14341.0], [2552.0, 9491.0], [2496.0, 10432.0], [2504.0, 14130.0], [2512.0, 11329.0], [2544.0, 8446.0], [2536.0, 9501.0], [2528.0, 8455.0], [2432.0, 10419.0], [2440.0, 7070.0], [2448.0, 7060.0], [2488.0, 9231.0], [2480.0, 7026.0], [2472.0, 10368.0], [2664.0, 8697.0], [2624.0, 9395.0], [2632.0, 8337.0], [2640.0, 9377.0], [2648.0, 9361.0], [2656.0, 9319.0], [2568.0, 8433.0], [2616.0, 8355.0], [2600.0, 9431.0], [2592.0, 8414.0], [2800.0, 5093.0], [2792.0, 4948.5], [2768.0, 5465.0], [2776.0, 5118.0], [2808.0, 5086.5], [2784.0, 4631.0], [2688.0, 6127.0], [2696.0, 7386.0], [2704.0, 5935.0], [2744.0, 5493.0], [2728.0, 5159.0], [2928.0, 3578.5], [2920.0, 3595.0], [2880.0, 5000.5], [2824.0, 5072.0], [2832.0, 5309.857142857143], [2840.0, 5053.0], [2872.0, 5172.0], [2848.0, 5036.0], [2944.0, 2345.0], [3000.0, 12263.85762407369], [2960.0, 3484.0], [2968.0, 2861.0], [2984.0, 3386.5], [2976.0, 3449.0], [2145.0, 14450.5], [2153.0, 16565.0], [2121.0, 14491.0], [2129.0, 18655.0], [2137.0, 19317.0], [2073.0, 21578.0], [2065.0, 21606.0], [2057.0, 12664.0], [2049.0, 20964.0], [2105.0, 20839.0], [2097.0, 11313.0], [2089.0, 11323.5], [2081.0, 12584.0], [2289.0, 9699.333333333334], [2281.0, 11045.0], [2249.0, 14793.0], [2257.0, 14782.0], [2297.0, 14386.0], [2177.0, 14506.0], [2185.0, 10927.0], [2193.0, 10806.0], [2201.0, 14854.0], [2233.0, 9873.0], [2225.0, 14460.0], [2217.0, 14839.0], [2209.0, 14828.0], [2417.0, 9563.0], [2385.0, 7293.0], [2401.0, 10889.0], [2313.0, 11013.0], [2361.0, 9208.6], [2353.0, 11531.0], [2345.0, 9539.0], [2545.0, 9495.5], [2497.0, 10431.0], [2505.0, 14270.0], [2513.0, 7611.0], [2521.0, 7603.5], [2537.0, 9501.0], [2529.0, 8454.0], [2433.0, 10418.0], [2441.0, 14466.0], [2481.0, 10367.0], [2681.0, 6660.5], [2625.0, 8344.0], [2641.0, 9766.0], [2649.0, 9337.0], [2673.0, 6933.0], [2665.0, 7252.0], [2561.0, 9138.0], [2569.0, 8433.0], [2617.0, 9404.0], [2609.0, 8899.0], [2601.0, 8905.5], [2593.0, 8409.0], [2793.0, 5440.0], [2761.0, 5488.5], [2801.0, 5433.0], [2769.0, 5465.0], [2777.0, 5452.0], [2785.0, 4629.0], [2689.0, 6124.0], [2697.0, 5941.0], [2705.0, 7377.0], [2713.0, 6508.0], [2881.0, 5000.0], [2929.0, 3578.0], [2889.0, 4526.0], [2921.0, 3594.0], [2833.0, 5398.0], [2873.0, 4528.0], [2849.0, 5374.0], [2953.0, 3560.0], [2961.0, 3483.0], [2969.0, 2240.0], [2993.0, 1806.5], [2977.0, 2192.0], [1073.0, 21715.0], [1085.0, 19552.0], [1057.0, 24266.0], [1061.0, 19587.0], [1077.0, 21713.0], [1053.0, 21761.0], [1025.0, 21974.0], [1029.0, 21897.5], [1037.0, 20806.5], [1049.0, 19615.0], [1045.0, 21797.0], [1041.0, 21697.0], [1069.0, 24113.333333333332], [1065.0, 21866.0], [1145.0, 21669.0], [1149.0, 21597.0], [1121.0, 45615.0], [1125.0, 21696.5], [1141.0, 19462.0], [1093.0, 18839.0], [1089.0, 27437.0], [1097.0, 21697.0], [1101.0, 21671.0], [1113.0, 32468.0], [1105.0, 33129.0], [1133.0, 21627.0], [1129.0, 21629.0], [1157.0, 21222.0], [1213.0, 19373.0], [1185.0, 21686.0], [1209.0, 27496.5], [1153.0, 21594.0], [1161.0, 21716.0], [1165.0, 21580.0], [1177.0, 19406.0], [1173.0, 21574.0], [1169.0, 25505.666666666668], [1197.0, 21674.0], [1193.0, 21548.0], [1221.0, 33268.0], [1265.0, 43357.0], [1253.0, 21385.0], [1273.0, 32780.0], [1217.0, 33303.0], [1225.0, 32934.0], [1229.0, 21601.0], [1245.0, 21565.0], [1237.0, 36417.0], [1233.0, 21593.0], [1261.0, 21376.0], [1257.0, 32841.0], [1337.0, 26719.199999999997], [1393.0, 4918.0], [1405.0, 10016.0], [1377.0, 15059.0], [1381.0, 10428.5], [1397.0, 15807.0], [1345.0, 15486.0], [1349.0, 13465.0], [1353.0, 11443.0], [1357.0, 26428.0], [1373.0, 14940.0], [1369.0, 15077.0], [1361.0, 23672.0], [1389.0, 6563.0], [1385.0, 8535.0], [1461.0, 16606.0], [1469.0, 16602.0], [1445.0, 13565.333333333334], [1465.0, 14019.0], [1457.0, 23732.0], [1421.0, 10011.0], [1417.0, 13332.5], [1409.0, 16656.0], [1437.0, 14056.0], [1433.0, 10001.0], [1425.0, 17526.0], [1449.0, 13315.0], [1521.0, 16997.0], [1529.0, 16532.0], [1505.0, 16567.0], [1533.0, 9884.0], [1525.0, 17413.0], [1477.0, 17473.0], [1473.0, 9960.0], [1485.0, 14001.0], [1501.0, 13984.0], [1497.0, 19936.5], [1493.0, 16579.0], [1489.0, 13998.0], [1509.0, 16561.0], [1593.0, 13826.0], [1597.0, 9761.0], [1577.0, 9780.0], [1569.0, 17303.0], [1573.0, 13840.0], [1549.0, 17368.0], [1545.0, 13922.0], [1541.0, 9873.0], [1537.0, 13934.0], [1565.0, 16431.0], [1557.0, 16488.0], [1553.0, 9849.0], [1581.0, 17292.0], [1657.0, 9701.666666666666], [1661.0, 16318.0], [1649.0, 23469.0], [1629.0, 14711.0], [1605.0, 9760.0], [1609.0, 13812.0], [1613.0, 16394.0], [1621.0, 13499.5], [1617.0, 13808.0], [1645.0, 9710.0], [1637.0, 17254.0], [1669.0, 16293.0], [1721.0, 79.22222222222223], [1713.0, 81.5], [1677.0, 9633.0], [1665.0, 9671.0], [1709.0, 82.0], [1705.0, 82.0], [1689.0, 9563.0], [1685.0, 12934.5], [1681.0, 9619.0], [1777.0, 10450.0], [1785.0, 10432.0], [1765.0, 13496.0], [1789.0, 10421.0], [1781.0, 10440.0], [1729.0, 21735.0], [1737.0, 2135.0], [1733.0, 2343.5], [1741.0, 10943.0], [1757.0, 14387.0], [1753.0, 10934.0], [1749.0, 10937.0], [1745.0, 10942.0], [1773.0, 10453.0], [1849.0, 11770.0], [1853.0, 21316.0], [1845.0, 21205.0], [1805.0, 21310.0], [1793.0, 17538.0], [1833.0, 19447.8], [1825.0, 8819.0], [1809.0, 13142.0], [1909.0, 11759.0], [1865.0, 17103.0], [1861.0, 11764.0], [1881.0, 17164.5], [1893.0, 15362.333333333334], [1977.0, 20973.0], [1957.0, 17551.333333333336], [1965.0, 11563.0], [1981.0, 20961.0], [1973.0, 12812.0], [1933.0, 12903.0], [1929.0, 21921.0], [1937.0, 12896.0], [2041.0, 21240.5], [2045.0, 20967.0], [2017.0, 11461.0], [2021.0, 21003.0], [2025.0, 12709.0], [2029.0, 21665.0], [2037.0, 20851.0], [2033.0, 12704.0], [1997.0, 20913.0], [1993.0, 21719.0], [1989.0, 21062.0], [2013.0, 20903.0], [2001.0, 21367.0], [2154.0, 17228.0], [2162.0, 12665.5], [2114.0, 18673.0], [2122.0, 19333.0], [2138.0, 19316.0], [2050.0, 21627.0], [2058.0, 20827.0], [2074.0, 20787.0], [2106.0, 21503.0], [2098.0, 12561.0], [2090.0, 12577.0], [2082.0, 12583.0], [2282.0, 7361.0], [2290.0, 11041.0], [2250.0, 9868.0], [2298.0, 14764.0], [2274.0, 9217.5], [2202.0, 10788.0], [2194.0, 11141.0], [2186.0, 10813.0], [2178.0, 13012.0], [2210.0, 10776.0], [2370.0, 10870.0], [2418.0, 7088.0], [2378.0, 10978.0], [2306.0, 9008.5], [2314.0, 11012.0], [2330.0, 10478.333333333334], [2354.0, 12003.333333333334], [2394.0, 10513.666666666666], [2538.0, 9499.0], [2546.0, 9494.0], [2498.0, 10429.0], [2506.0, 11344.0], [2514.0, 11327.0], [2522.0, 10257.0], [2530.0, 9503.0], [2442.0, 10405.0], [2490.0, 12296.0], [2482.0, 8696.0], [2474.0, 10635.75], [2658.0, 8257.0], [2626.0, 9392.0], [2642.0, 8323.0], [2682.0, 6134.0], [2570.0, 9481.0], [2578.0, 9471.0], [2586.0, 9206.5], [2610.0, 9423.0], [2602.0, 9431.0], [2594.0, 8408.0], [2802.0, 5432.0], [2754.0, 5264.0], [2762.0, 5476.0], [2770.0, 5122.0], [2778.0, 5111.0], [2786.0, 5442.0], [2706.0, 5933.0], [2714.0, 6312.0], [2738.0, 4683.0], [2730.0, 4684.5], [2722.0, 5642.0], [2930.0, 3577.0], [2898.0, 4880.0], [2906.0, 4523.0], [2938.0, 3575.0], [2922.0, 3581.0], [2818.0, 5249.5], [2842.0, 5221.0], [2874.0, 5001.0], [2858.0, 5255.0], [2850.0, 5034.0], [2954.0, 2945.0], [2970.0, 2239.0], [2994.0, 1449.0], [2986.0, 1456.0], [2163.0, 7481.0], [2115.0, 10380.0], [2123.0, 19332.0], [2139.0, 18523.0], [2171.0, 12724.666666666666], [2147.0, 10302.0], [2075.0, 20912.0], [2067.0, 20926.0], [2059.0, 21612.0], [2051.0, 20837.0], [2107.0, 20834.0], [2099.0, 12557.0], [2083.0, 12581.0], [2283.0, 11041.0], [2259.0, 10723.0], [2267.0, 10289.0], [2291.0, 14387.0], [2275.0, 11071.5], [2179.0, 9948.0], [2195.0, 10799.0], [2235.0, 10909.5], [2227.0, 13354.833333333332], [2211.0, 14841.0], [2419.0, 14480.0], [2387.0, 9766.0], [2395.0, 14612.0], [2427.0, 10665.0], [2411.0, 11663.25], [2403.0, 10713.5], [2315.0, 7329.0], [2307.0, 14735.0], [2363.0, 14707.0], [2355.0, 10388.0], [2347.0, 10994.0], [2539.0, 9499.0], [2507.0, 7617.0], [2499.0, 10087.0], [2555.0, 9491.0], [2523.0, 10267.0], [2531.0, 8453.0], [2435.0, 14471.5], [2443.0, 7062.0], [2451.0, 9533.0], [2667.0, 7251.5], [2675.0, 6735.5], [2683.0, 6134.0], [2627.0, 9392.0], [2635.0, 9383.0], [2651.0, 9524.0], [2659.0, 8702.0], [2563.0, 9487.0], [2571.0, 8431.0], [2619.0, 8878.0], [2611.0, 8371.0], [2603.0, 8381.0], [2595.0, 8407.0], [2803.0, 4617.0], [2811.0, 4926.0], [2755.0, 5150.0], [2763.0, 4661.0], [2771.0, 5462.0], [2795.0, 4625.5], [2787.0, 4628.0], [2691.0, 6473.5], [2699.0, 7185.0], [2707.0, 5932.0], [2739.0, 5111.333333333333], [2731.0, 5158.0], [2723.0, 4690.0], [2891.0, 4998.0], [2931.0, 3577.0], [2907.0, 4522.0], [2923.0, 2350.0], [2835.0, 5227.0], [2859.0, 5027.0], [2851.0, 5374.0], [2947.0, 3368.6666666666665], [2955.0, 2314.0], [2963.0, 2252.5], [2995.0, 1446.0], [2979.0, 2791.5], [539.0, 16132.0], [541.0, 16264.0], [537.0, 16133.0], [533.0, 16134.0], [527.0, 16135.0], [523.0, 16135.0], [521.0, 14183.0], [519.0, 15182.0], [515.0, 16297.0], [573.0, 14846.333333333334], [575.0, 16234.0], [569.0, 16106.0], [549.0, 15147.0], [545.0, 14170.0], [567.0, 16244.0], [565.0, 16106.0], [563.0, 16255.0], [561.0, 14165.0], [559.0, 14166.0], [557.0, 15517.0], [603.0, 16033.0], [605.0, 16030.0], [601.0, 14087.0], [583.0, 14135.0], [581.0, 14136.0], [579.0, 14137.0], [577.0, 43334.0], [599.0, 21434.0], [597.0, 14103.0], [593.0, 16067.5], [591.0, 14113.0], [589.0, 14124.0], [585.0, 15111.0], [637.0, 14029.0], [639.0, 43211.0], [635.0, 43226.0], [633.0, 14031.0], [629.0, 43227.0], [627.0, 14035.0], [625.0, 28633.5], [623.0, 43230.0], [611.0, 16022.0], [615.0, 16141.0], [613.0, 14062.0], [621.0, 14039.0], [619.0, 14045.0], [617.0, 14047.0], [667.0, 16040.0], [671.0, 16033.0], [665.0, 16063.0], [645.0, 15046.0], [643.0, 28597.5], [663.0, 16087.0], [657.0, 15952.0], [655.0, 15952.0], [653.0, 29640.5], [651.0, 13998.0], [649.0, 23732.0], [701.0, 18582.0], [703.0, 20364.0], [699.0, 22156.0], [697.0, 20371.0], [693.0, 44530.0], [691.0, 18781.0], [689.0, 19791.0], [687.0, 20801.0], [675.0, 15871.0], [673.0, 16014.5], [679.0, 15986.0], [677.0, 15999.0], [685.0, 18821.0], [683.0, 15835.0], [681.0, 17335.0], [731.0, 22122.0], [735.0, 20335.0], [721.0, 22382.5], [723.0, 18204.0], [729.0, 18199.0], [719.0, 22134.0], [705.0, 22149.0], [709.0, 22146.0], [707.0, 22148.0], [711.0, 22145.0], [717.0, 22134.0], [715.0, 22137.0], [727.0, 20337.0], [725.0, 18554.0], [767.0, 18489.0], [755.0, 18361.0], [761.0, 18160.0], [739.0, 19258.5], [737.0, 19265.0], [751.0, 18539.0], [749.0, 36427.666666666664], [757.0, 18182.0], [795.0, 12714.5], [793.0, 16971.0], [799.0, 12703.0], [787.0, 16979.0], [789.0, 15711.0], [797.0, 12707.0], [773.0, 20265.0], [771.0, 18487.0], [769.0, 20272.0], [783.0, 15727.0], [781.0, 18465.0], [779.0, 20252.0], [777.0, 20256.0], [791.0, 16972.0], [825.0, 17899.0], [829.0, 17898.0], [819.0, 15347.0], [817.0, 18076.0], [827.0, 18074.0], [807.0, 16912.0], [805.0, 16923.0], [803.0, 15684.0], [801.0, 15688.0], [815.0, 18077.0], [813.0, 18078.0], [811.0, 17728.0], [809.0, 17773.0], [849.0, 17719.0], [847.0, 19856.0], [845.0, 18176.42857142857], [839.0, 18432.666666666668], [833.0, 18073.5], [883.0, 18067.0], [921.0, 22087.0], [923.0, 33739.0], [915.0, 19842.0], [925.0, 19983.0], [913.0, 17706.0], [903.0, 17688.0], [901.0, 25561.571428571428], [899.0, 17713.0], [897.0, 44005.0], [911.0, 19844.0], [909.0, 15331.0], [907.0, 17710.0], [917.0, 19801.0], [953.0, 25532.75], [959.0, 19792.0], [957.0, 33408.0], [955.0, 33410.0], [941.0, 19795.0], [931.0, 20875.0], [929.0, 21278.0], [933.0, 17659.0], [939.0, 33411.0], [937.0, 33413.0], [951.0, 33572.5], [949.0, 28159.333333333332], [947.0, 17657.0], [989.0, 21881.0], [991.0, 21879.0], [977.0, 26588.5], [979.0, 33395.0], [981.0, 19777.0], [987.0, 22025.0], [985.0, 33357.0], [967.0, 17648.0], [965.0, 33403.5], [961.0, 17649.0], [975.0, 19780.0], [971.0, 17645.0], [983.0, 33357.0], [1023.0, 21476.0], [1009.0, 19709.0], [1019.0, 25606.5], [1007.0, 33329.0], [993.0, 17939.0], [995.0, 20799.5], [999.0, 22009.0], [1003.0, 21506.0], [1001.0, 21508.0], [1015.0, 33309.0], [1013.0, 25433.0], [1011.0, 33310.0], [1074.0, 19812.0], [1086.0, 19551.0], [1058.0, 21378.0], [1082.0, 24263.666666666668], [1038.0, 21447.0], [1034.0, 21634.5], [1030.0, 21961.0], [1026.0, 21473.0], [1054.0, 17820.0], [1046.0, 21906.0], [1070.0, 19562.0], [1066.0, 21731.0], [1146.0, 21734.0], [1150.0, 19441.0], [1122.0, 21631.0], [1130.0, 21761.0], [1142.0, 21250.0], [1138.0, 21758.0], [1102.0, 21671.0], [1098.0, 45649.0], [1114.0, 21665.0], [1106.0, 21668.0], [1134.0, 21626.0], [1210.0, 32995.0], [1214.0, 21660.0], [1186.0, 20475.0], [1190.0, 21683.5], [1206.0, 21626.666666666668], [1202.0, 27268.5], [1182.0, 24172.333333333332], [1154.0, 21594.0], [1158.0, 21590.0], [1162.0, 21581.0], [1166.0, 21581.0], [1178.0, 21693.0], [1170.0, 21709.0], [1198.0, 21673.0], [1194.0, 36514.0], [1274.0, 21318.5], [1278.0, 17374.0], [1250.0, 21459.0], [1254.0, 21381.0], [1270.0, 25159.333333333332], [1266.0, 21492.0], [1246.0, 21551.0], [1218.0, 21646.0], [1222.0, 21477.0], [1226.0, 32933.0], [1230.0, 32924.0], [1242.0, 26312.666666666668], [1234.0, 21593.0], [1262.0, 21493.0], [1258.0, 17437.0], [1342.0, 20964.2], [1338.0, 20865.0], [1402.0, 17097.0], [1406.0, 17530.0], [1382.0, 9419.0], [1378.0, 14555.0], [1394.0, 10023.0], [1374.0, 15071.0], [1346.0, 15484.0], [1350.0, 13463.0], [1354.0, 11440.0], [1370.0, 14576.0], [1366.0, 14869.666666666666], [1362.0, 26412.0], [1390.0, 5369.0], [1386.0, 7403.0], [1462.0, 17478.0], [1470.0, 9961.0], [1442.0, 14045.5], [1466.0, 17478.0], [1458.0, 17482.0], [1414.0, 15800.0], [1410.0, 17529.0], [1438.0, 23764.0], [1426.0, 17525.0], [1454.0, 15577.2], [1446.0, 10000.0], [1522.0, 14372.777777777777], [1534.0, 16520.0], [1530.0, 13947.0], [1526.0, 23660.0], [1474.0, 17474.0], [1478.0, 9958.0], [1482.0, 9955.5], [1486.0, 17459.0], [1498.0, 13989.0], [1494.0, 23700.0], [1586.0, 13830.0], [1598.0, 13819.0], [1570.0, 9786.0], [1590.0, 16413.5], [1566.0, 17303.0], [1538.0, 17390.0], [1542.0, 9869.0], [1546.0, 13920.0], [1562.0, 13548.5], [1558.0, 13902.0], [1554.0, 15635.0], [1582.0, 13833.0], [1574.0, 9784.0], [1654.0, 13460.5], [1650.0, 9705.0], [1662.0, 9675.0], [1642.0, 16671.333333333332], [1658.0, 17214.0], [1614.0, 16393.0], [1610.0, 13811.0], [1606.0, 16400.0], [1602.0, 23523.0], [1618.0, 16391.0], [1646.0, 16349.0], [1666.0, 9669.0], [1714.0, 82.0], [1726.0, 73.0], [1694.0, 86.5], [1670.0, 9654.0], [1690.0, 9560.0], [1686.0, 9568.0], [1682.0, 9619.0], [1778.0, 10446.0], [1786.0, 10428.0], [1762.0, 17507.5], [1766.0, 26834.0], [1770.0, 1192.0], [1782.0, 10436.0], [1738.0, 2253.0], [1730.0, 21731.0], [1758.0, 15781.0], [1754.0, 13517.0], [1746.0, 10941.0], [1774.0, 10452.0], [1846.0, 16238.25], [1854.0, 21190.0], [1842.0, 17121.5], [1822.0, 20944.0], [1794.0, 17527.0], [1802.0, 13145.0], [1818.0, 21309.0], [1838.0, 16593.5], [1870.0, 13019.0], [1918.0, 15526.4], [1862.0, 13020.0], [1858.0, 21187.0], [1886.0, 11762.0], [1882.0, 17599.2], [1878.0, 18769.333333333332], [1978.0, 20973.0], [1982.0, 12790.0], [1954.0, 21030.0], [1958.0, 21820.0], [1962.0, 21117.0], [1974.0, 20978.0], [1970.0, 20984.0], [1930.0, 12905.0], [1950.0, 12237.0], [1946.0, 12878.0], [1942.0, 10729.5], [1938.0, 21853.0], [2046.0, 21631.0], [2018.0, 12716.0], [2022.0, 21003.0], [2026.0, 20875.0], [2042.0, 21636.0], [2038.0, 20974.0], [2034.0, 11430.0], [1994.0, 12755.0], [1986.0, 16305.5], [2006.0, 21034.0], [2002.0, 21699.0], [2060.0, 12652.0], [2148.0, 14449.0], [2156.0, 16561.0], [2116.0, 10379.0], [2124.0, 10368.0], [2132.0, 10361.0], [2052.0, 12668.0], [2068.0, 21588.0], [2076.0, 12589.0], [2108.0, 21440.0], [2100.0, 11298.0], [2092.0, 11320.0], [2084.0, 12582.0], [2140.0, 10310.0], [2276.0, 14761.0], [2300.0, 10812.0], [2244.0, 11372.8], [2252.0, 10299.5], [2260.0, 11064.0], [2204.0, 14662.0], [2196.0, 14854.0], [2180.0, 11156.0], [2236.0, 14804.0], [2228.0, 11109.0], [2220.0, 10771.0], [2212.0, 9908.0], [2324.0, 14720.0], [2428.0, 7082.0], [2380.0, 12840.5], [2388.0, 9133.0], [2364.0, 9762.333333333334], [2308.0, 11019.0], [2316.0, 10669.0], [2332.0, 7312.0], [2396.0, 14622.0], [2548.0, 8445.0], [2540.0, 9498.0], [2516.0, 7438.0], [2524.0, 10402.0], [2556.0, 9490.0], [2436.0, 10758.0], [2492.0, 10265.0], [2484.0, 8897.785714285712], [2476.0, 7026.666666666667], [2676.0, 7651.0], [2684.0, 6132.0], [2628.0, 9783.0], [2636.0, 8333.0], [2644.0, 9042.5], [2652.0, 9325.0], [2668.0, 8300.0], [2572.0, 9479.0], [2580.0, 9470.0], [2588.0, 8419.0], [2620.0, 8352.0], [2612.0, 9812.0], [2596.0, 9434.0], [2788.0, 5100.0], [2804.0, 5088.0], [2756.0, 4676.0], [2764.0, 4661.0], [2780.0, 5279.0], [2692.0, 7390.0], [2700.0, 5937.0], [2716.0, 6625.0], [2748.0, 5151.0], [2724.0, 5162.0], [2924.0, 3580.0], [2908.0, 4996.0], [2916.0, 5148.0], [2844.0, 5045.0], [2860.0, 5024.0], [2972.0, 3457.5], [2988.0, 1455.0], [2980.0, 3406.0], [2165.0, 12419.0], [2117.0, 19335.0], [2125.0, 18661.0], [2133.0, 18653.0], [2141.0, 10309.0], [2157.0, 17226.0], [2149.0, 19259.0], [2077.0, 12587.0], [2069.0, 20921.0], [2061.0, 11395.0], [2053.0, 20834.0], [2109.0, 20775.0], [2101.0, 11297.0], [2093.0, 20868.0], [2085.0, 11324.0], [2301.0, 11036.0], [2245.0, 11077.0], [2261.0, 10723.0], [2269.0, 10812.5], [2285.0, 11042.0], [2237.0, 10738.0], [2189.0, 11153.0], [2197.0, 11138.0], [2205.0, 11123.0], [2229.0, 10765.0], [2221.0, 14823.0], [2213.0, 14831.0], [2413.0, 12738.0], [2429.0, 14480.0], [2389.0, 9765.0], [2397.0, 10890.0], [2317.0, 10669.0], [2309.0, 7336.0], [2365.0, 7308.0], [2357.0, 9783.0], [2349.0, 10651.5], [2549.0, 9493.0], [2501.0, 9653.0], [2509.0, 11343.0], [2517.0, 7607.0], [2525.0, 10257.0], [2557.0, 8965.0], [2541.0, 9496.0], [2533.0, 8978.0], [2437.0, 14467.0], [2445.0, 10760.5], [2453.0, 12301.75], [2493.0, 10434.0], [2485.0, 10440.0], [2661.0, 7782.0], [2669.0, 8299.0], [2637.0, 9381.0], [2645.0, 8319.0], [2653.0, 9713.0], [2565.0, 8960.5], [2621.0, 9401.0], [2613.0, 9804.0], [2605.0, 9430.0], [2597.0, 9431.0], [2805.0, 5088.0], [2765.0, 5474.0], [2773.0, 4885.5], [2813.0, 5424.0], [2797.0, 4625.0], [2693.0, 5947.0], [2709.0, 5930.0], [2717.0, 6589.0], [2741.0, 4919.0], [2933.0, 3576.0], [2885.0, 4998.5], [2893.0, 4932.0], [2941.0, 3574.0], [2925.0, 2350.0], [2917.0, 3612.0], [2821.0, 5306.0], [2837.0, 5395.5], [2845.0, 5037.0], [2861.0, 4548.0], [2853.0, 4560.0], [2997.0, 1446.0], [2957.0, 2311.5], [2965.0, 2864.0], [2973.0, 2225.0], [2989.0, 1454.0], [2981.0, 3405.0], [1075.0, 33174.0], [1083.0, 21845.0], [1059.0, 21879.0], [1079.0, 19557.0], [1027.0, 17546.0], [1035.0, 21450.0], [1031.0, 19666.0], [1039.0, 21446.0], [1051.0, 30790.5], [1047.0, 21774.0], [1043.0, 21695.5], [1071.0, 21348.0], [1063.0, 19583.0], [1139.0, 34840.5], [1151.0, 17655.0], [1123.0, 21631.0], [1143.0, 17676.0], [1119.0, 20657.75], [1099.0, 21688.0], [1103.0, 21301.0], [1115.0, 26318.0], [1107.0, 33453.0], [1131.0, 17688.0], [1127.0, 21697.0], [1207.0, 21169.0], [1203.0, 19383.0], [1215.0, 21519.0], [1191.0, 21549.0], [1187.0, 17611.0], [1211.0, 17591.0], [1183.0, 21553.0], [1155.0, 21593.0], [1159.0, 21720.0], [1163.0, 21714.0], [1179.0, 17619.0], [1175.0, 27371.0], [1199.0, 21673.0], [1195.0, 21677.0], [1271.0, 19197.0], [1275.0, 21449.0], [1279.0, 25074.5], [1251.0, 21524.0], [1267.0, 21357.0], [1247.0, 21529.0], [1219.0, 33296.0], [1223.0, 21610.0], [1227.0, 17179.0], [1231.0, 21596.0], [1243.0, 17141.0], [1239.0, 21328.5], [1235.0, 36426.0], [1263.0, 21360.0], [1255.0, 32842.0], [1343.0, 16496.0], [1339.0, 20864.5], [1331.0, 32776.25], [1399.0, 13341.0], [1403.0, 10021.0], [1379.0, 14553.0], [1383.0, 9392.0], [1395.0, 14078.0], [1375.0, 14938.0], [1347.0, 14474.0], [1351.0, 12454.0], [1355.0, 26756.0], [1359.0, 14599.0], [1367.0, 26410.0], [1363.0, 14581.0], [1391.0, 5356.0], [1387.0, 7403.0], [1459.0, 14023.0], [1471.0, 14017.0], [1447.0, 16636.0], [1463.0, 17477.0], [1419.0, 17527.0], [1415.0, 10015.0], [1435.0, 14056.0], [1427.0, 16641.0], [1455.0, 14029.0], [1527.0, 13953.0], [1535.0, 17394.0], [1507.0, 13681.5], [1531.0, 13946.0], [1523.0, 23673.0], [1503.0, 15276.0], [1483.0, 14003.0], [1479.0, 14014.0], [1487.0, 23708.0], [1499.0, 13985.0], [1495.0, 13992.0], [1491.0, 13998.0], [1519.0, 13976.0], [1595.0, 13089.0], [1599.0, 16402.0], [1571.0, 23548.0], [1575.0, 17298.0], [1591.0, 15713.0], [1551.0, 13607.5], [1547.0, 13915.0], [1543.0, 13926.0], [1567.0, 17304.0], [1563.0, 17304.0], [1559.0, 16486.0], [1555.0, 16489.0], [1583.0, 13829.0], [1579.0, 18689.5], [1659.0, 29682.0], [1663.0, 9673.0], [1651.0, 17218.0], [1603.0, 13080.5], [1607.0, 23522.0], [1611.0, 9754.0], [1623.0, 13798.0], [1619.0, 16383.0], [1647.0, 9707.0], [1639.0, 16817.0], [1671.0, 9652.0], [1727.0, 3348.0], [1679.0, 12950.0], [1675.0, 16739.666666666668], [1667.0, 9668.0], [1711.0, 82.0], [1695.0, 84.0], [1687.0, 9569.0], [1683.0, 9617.0], [1783.0, 10435.0], [1791.0, 10418.0], [1763.0, 14375.0], [1787.0, 10427.0], [1779.0, 10442.0], [1759.0, 13512.0], [1731.0, 27970.0], [1743.0, 15795.0], [1755.0, 20638.0], [1751.0, 10934.0], [1747.0, 10939.0], [1767.0, 10847.0], [1847.0, 21984.0], [1851.0, 17172.0], [1807.0, 21310.0], [1803.0, 21312.0], [1799.0, 21706.5], [1823.0, 21613.666666666668], [1811.0, 22100.0], [1915.0, 15332.5], [1911.0, 21308.0], [1891.0, 16020.75], [1867.0, 21186.0], [1863.0, 11764.0], [1879.0, 21186.0], [1875.0, 21186.0], [1899.0, 21183.0], [1935.0, 16355.5], [1975.0, 21102.0], [1979.0, 12805.0], [1959.0, 20994.0], [1963.0, 20990.0], [1967.0, 20985.0], [1931.0, 21862.0], [1927.0, 13909.333333333334], [1947.0, 8557.0], [1943.0, 21048.0], [1939.0, 21061.0], [2043.0, 12674.0], [2047.0, 12672.0], [2019.0, 21007.0], [2023.0, 21002.0], [2031.0, 17186.0], [2039.0, 11424.0], [2035.0, 11429.0], [1999.0, 10582.5], [1995.0, 21713.0], [2015.0, 20966.0], [2011.0, 17849.666666666668], [2007.0, 12741.0], [2150.0, 16570.0], [2126.0, 18660.0], [2134.0, 10359.5], [2158.0, 16892.5], [2110.0, 21438.0], [2054.0, 20959.0], [2062.0, 21608.0], [2070.0, 20920.0], [2102.0, 12550.0], [2094.0, 11316.0], [2142.0, 10308.0], [2286.0, 14751.0], [2278.0, 12907.0], [2254.0, 12936.5], [2270.0, 10720.0], [2294.0, 10698.0], [2206.0, 10780.0], [2190.0, 11866.666666666666], [2182.0, 8710.0], [2238.0, 10737.0], [2222.0, 10771.0], [2374.0, 14705.0], [2430.0, 10422.0], [2382.0, 12907.0], [2414.0, 10434.0], [2310.0, 10675.0], [2318.0, 14731.0], [2350.0, 11006.0], [2398.0, 10890.0], [2390.0, 14688.0], [2550.0, 9493.0], [2510.0, 7617.0], [2558.0, 9490.0], [2502.0, 14128.0], [2518.0, 11466.0], [2526.0, 10264.0], [2542.0, 9497.0], [2534.0, 8452.0], [2438.0, 14468.0], [2446.0, 10743.0], [2494.0, 9225.0], [2486.0, 10440.0], [2678.0, 7582.0], [2670.0, 6218.0], [2630.0, 9389.0], [2638.0, 9378.0], [2646.0, 9759.0], [2686.0, 7572.0], [2662.0, 8307.0], [2566.0, 8435.0], [2574.0, 9472.0], [2582.0, 8945.5], [2590.0, 8415.0], [2622.0, 8349.0], [2614.0, 8358.0], [2606.0, 8379.0], [2702.0, 6658.0], [2814.0, 4846.0], [2758.0, 5490.0], [2766.0, 5130.0], [2774.0, 5122.0], [2782.0, 5448.5], [2694.0, 7388.0], [2710.0, 6707.0], [2750.0, 5117.75], [2742.0, 5155.0], [2734.0, 5091.0], [2726.0, 5500.0], [2926.0, 2350.0], [2902.0, 5338.0], [2918.0, 3598.0], [2822.0, 5078.5], [2838.0, 4580.0], [2846.0, 5036.0], [2878.0, 4528.0], [2854.0, 5202.5], [2998.0, 1444.6666666666667], [2958.0, 3507.0], [2966.0, 3477.0], [2974.0, 3451.0], [2990.0, 1453.0], [2982.0, 3405.0], [2151.0, 16569.0], [2127.0, 19323.0], [2175.0, 14691.25], [2135.0, 14506.0], [2143.0, 19264.0], [2159.0, 10825.0], [2079.0, 11958.0], [2071.0, 20918.0], [2063.0, 20943.0], [2055.0, 21623.0], [2111.0, 20771.0], [2103.0, 11292.0], [2087.0, 11323.0], [2303.0, 9193.0], [2295.0, 14507.0], [2247.0, 10683.0], [2255.0, 9862.0], [2263.0, 10723.0], [2191.0, 14865.0], [2199.0, 12640.0], [2207.0, 10778.0], [2231.0, 12766.5], [2223.0, 12363.0], [2319.0, 9787.0], [2431.0, 10761.0], [2375.0, 8534.5], [2383.0, 10974.0], [2391.0, 10630.0], [2399.0, 9681.0], [2311.0, 10673.0], [2367.0, 11712.333333333334], [2359.0, 10829.5], [2351.0, 12676.5], [2551.0, 8442.0], [2503.0, 14132.0], [2511.0, 7615.0], [2519.0, 7605.0], [2527.0, 8457.0], [2535.0, 9502.0], [2495.0, 14158.0], [2439.0, 10757.0], [2447.0, 10742.0], [2487.0, 9232.0], [2479.0, 7861.0], [2687.0, 7180.0], [2671.0, 6213.0], [2631.0, 9386.0], [2639.0, 8327.0], [2647.0, 8313.0], [2655.0, 8796.0], [2679.0, 6138.0], [2663.0, 7257.0], [2623.0, 8345.0], [2567.0, 8434.0], [2575.0, 9472.5], [2591.0, 9464.0], [2615.0, 8356.0], [2607.0, 8377.0], [2815.0, 5421.0], [2807.0, 5086.0], [2759.0, 5319.0], [2767.0, 5126.0], [2775.0, 4647.0], [2783.0, 4633.0], [2799.0, 5264.0], [2751.0, 4914.0], [2695.0, 5944.0], [2703.0, 6986.0], [2711.0, 6706.0], [2719.0, 6577.0], [2743.0, 5495.0], [2735.0, 5328.0], [2727.0, 4685.0], [2919.0, 3597.0], [2935.0, 2346.0], [2943.0, 2344.0], [2911.0, 4994.0], [2879.0, 4527.0], [2823.0, 5076.0], [2831.0, 5070.0], [2847.0, 5376.0], [2871.0, 4623.4], [2863.0, 4530.0], [2855.0, 5370.0], [2991.0, 1452.0], [2975.0, 3449.0], [2999.0, 1687.8823529411766], [1.0, 100119.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2822.341428684445, 13682.014753579644]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 16.833333333333332, "minX": 1.68302412E12, "maxY": 68367.5, "series": [{"data": [[1.68302424E12, 68367.5], [1.68302442E12, 46535.9], [1.68302412E12, 24.333333333333332], [1.6830243E12, 67985.73333333334], [1.68302448E12, 11678.966666666667], [1.68302418E12, 38517.48333333333], [1.68302436E12, 56916.55], [1.68302454E12, 3581.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302424E12, 49086.0], [1.68302442E12, 34499.916666666664], [1.68302412E12, 16.833333333333332], [1.6830243E12, 48269.583333333336], [1.68302448E12, 9123.666666666666], [1.68302418E12, 28406.25], [1.68302436E12, 40862.916666666664], [1.68302454E12, 2499.75]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302454E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 191.5, "minX": 1.68302412E12, "maxY": 96735.94612794611, "series": [{"data": [[1.68302424E12, 15875.596707818933], [1.68302442E12, 9196.923883874091], [1.68302412E12, 191.5], [1.6830243E12, 10406.411293133486], [1.68302448E12, 23665.788745387486], [1.68302418E12, 13506.599407407391], [1.68302436E12, 11522.675798146205], [1.68302454E12, 96735.94612794611]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302454E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 186.5, "minX": 1.68302412E12, "maxY": 96735.93602693602, "series": [{"data": [[1.68302424E12, 15875.561899862807], [1.68302442E12, 9196.91119785313], [1.68302412E12, 186.5], [1.6830243E12, 10344.86964098987], [1.68302448E12, 23665.78321033208], [1.68302418E12, 13506.566518518537], [1.68302436E12, 11522.664881565408], [1.68302454E12, 96735.93602693602]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302454E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.21863468634686345, "minX": 1.68302412E12, "maxY": 6046.613802718718, "series": [{"data": [[1.68302424E12, 1531.4442729766822], [1.68302442E12, 2.148816784581608], [1.68302412E12, 65.5], [1.6830243E12, 6046.613802718718], [1.68302448E12, 0.21863468634686345], [1.68302418E12, 572.4580740740751], [1.68302436E12, 2150.927703398556], [1.68302454E12, 0.43771043771043744]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302454E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.68302412E12, "maxY": 177530.0, "series": [{"data": [[1.68302424E12, 100196.0], [1.68302442E12, 81100.0], [1.68302412E12, 193.0], [1.6830243E12, 138780.0], [1.68302448E12, 67153.0], [1.68302418E12, 55704.0], [1.68302436E12, 177530.0], [1.68302454E12, 100119.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302424E12, 34057.69999999995], [1.68302442E12, 19259.0], [1.68302412E12, 193.0], [1.6830243E12, 22028.200000000004], [1.68302448E12, 43036.5], [1.68302418E12, 32806.4], [1.68302436E12, 21687.800000000003], [1.68302454E12, 100099.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302424E12, 100093.0], [1.68302442E12, 81027.0], [1.68302412E12, 193.0], [1.6830243E12, 133676.32], [1.68302448E12, 64034.20000000004], [1.68302418E12, 55609.24], [1.68302436E12, 154544.0], [1.68302454E12, 100113.06]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302424E12, 65467.0], [1.68302442E12, 21306.0], [1.68302412E12, 193.0], [1.6830243E12, 87376.2], [1.68302448E12, 44517.25], [1.68302418E12, 41597.2], [1.68302436E12, 35529.2], [1.68302454E12, 100104.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302424E12, 23.0], [1.68302442E12, 23.0], [1.68302412E12, 190.0], [1.6830243E12, 21.0], [1.68302448E12, 10428.0], [1.68302418E12, 25.0], [1.68302436E12, 13.0], [1.68302454E12, 68161.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302424E12, 13841.0], [1.68302442E12, 7376.0], [1.68302412E12, 191.5], [1.6830243E12, 100.0], [1.68302448E12, 19857.0], [1.68302418E12, 12601.0], [1.68302436E12, 9394.0], [1.68302454E12, 100059.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302454E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60.5, "minX": 1.0, "maxY": 126213.0, "series": [{"data": [[2.0, 50476.5], [3.0, 8054.5], [4.0, 15810.0], [5.0, 14116.5], [6.0, 1115.0], [7.0, 65407.0], [8.0, 19870.0], [9.0, 30334.5], [10.0, 15846.0], [11.0, 9997.0], [13.0, 14836.5], [14.0, 40569.5], [15.0, 19011.0], [16.0, 12588.5], [17.0, 61.0], [18.0, 12470.0], [19.0, 12444.5], [20.0, 11578.5], [21.0, 8079.0], [22.0, 10440.0], [23.0, 22146.0], [24.0, 9226.0], [26.0, 6181.5], [27.0, 3476.5], [28.0, 19659.0], [29.0, 32310.0], [30.0, 9117.0], [33.0, 57602.5], [35.0, 105.0], [36.0, 42211.5], [37.0, 10362.0], [41.0, 3574.0], [42.0, 100059.0], [49.0, 15029.0], [51.0, 103.0], [52.0, 87.0], [55.0, 2422.0], [56.0, 97.0], [59.0, 1449.0], [61.0, 70.0], [63.0, 19480.0], [64.0, 60.5], [65.0, 10058.0], [69.0, 6602.5], [75.0, 12853.0], [78.0, 9909.0], [80.0, 4954.0], [83.0, 74.0], [86.0, 75.0], [85.0, 732.5], [84.0, 80.0], [88.0, 87.0], [90.0, 77.0], [92.0, 3020.0], [94.0, 126213.0], [106.0, 43148.5], [105.0, 175.0], [113.0, 10436.0], [124.0, 7426.0], [125.0, 21477.0], [132.0, 9389.0], [139.0, 170.0], [149.0, 90.0], [156.0, 83.0], [157.0, 86.0], [155.0, 80.0], [166.0, 102.0], [167.0, 77.0], [162.0, 50680.0], [172.0, 88.0], [170.0, 465.5], [168.0, 79.0], [181.0, 79.0], [176.0, 840.0], [177.0, 76.0], [186.0, 18423.0], [188.0, 100036.5], [189.0, 14054.0], [199.0, 14791.0], [194.0, 5081.0], [201.0, 18044.5], [206.0, 5142.5], [205.0, 18874.0], [209.0, 15792.0], [233.0, 12776.0], [243.0, 479.0], [241.0, 9493.0], [252.0, 73.0], [250.0, 79.0], [251.0, 219.0], [253.0, 16380.0], [264.0, 19917.0], [262.0, 14773.0], [290.0, 14530.0], [288.0, 16133.5], [304.0, 81.0], [307.0, 20926.0], [327.0, 10392.0], [334.0, 75.0], [351.0, 8785.0], [337.0, 17068.0], [345.0, 10778.0], [372.0, 11751.5], [459.0, 15569.0], [502.0, 18362.0], [507.0, 21250.0], [535.0, 10738.0], [546.0, 21693.5], [673.0, 15383.0], [715.0, 15824.0], [704.0, 17129.5], [1.0, 38296.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[251.0, 117697.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 715.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 126213.0, "series": [{"data": [[2.0, 50476.5], [3.0, 8054.5], [4.0, 15810.0], [5.0, 14116.5], [6.0, 1115.0], [7.0, 65407.0], [8.0, 19870.0], [9.0, 30334.5], [10.0, 15846.0], [11.0, 9997.0], [13.0, 14836.5], [14.0, 40569.0], [15.0, 19011.0], [16.0, 12588.5], [17.0, 61.0], [18.0, 12470.0], [19.0, 12444.5], [20.0, 11578.5], [21.0, 8079.0], [22.0, 10440.0], [23.0, 22146.0], [24.0, 9226.0], [26.0, 6181.5], [27.0, 3476.5], [28.0, 19659.0], [29.0, 32310.0], [30.0, 9117.0], [33.0, 57602.5], [35.0, 105.0], [36.0, 42211.5], [37.0, 10362.0], [41.0, 3574.0], [42.0, 100059.0], [49.0, 15029.0], [51.0, 103.0], [52.0, 87.0], [55.0, 2422.0], [56.0, 97.0], [59.0, 1449.0], [61.0, 70.0], [63.0, 19480.0], [64.0, 60.5], [65.0, 10058.0], [69.0, 6602.5], [75.0, 12853.0], [78.0, 9909.0], [80.0, 4954.0], [83.0, 74.0], [86.0, 75.0], [85.0, 732.5], [84.0, 80.0], [88.0, 87.0], [90.0, 77.0], [92.0, 3020.0], [94.0, 126213.0], [106.0, 43148.5], [105.0, 175.0], [113.0, 10436.0], [124.0, 7426.0], [125.0, 21477.0], [132.0, 9389.0], [139.0, 170.0], [149.0, 90.0], [156.0, 83.0], [157.0, 86.0], [155.0, 80.0], [166.0, 102.0], [167.0, 77.0], [162.0, 50680.0], [172.0, 88.0], [170.0, 465.5], [168.0, 79.0], [181.0, 79.0], [176.0, 840.0], [177.0, 76.0], [186.0, 18423.0], [188.0, 100036.5], [189.0, 14054.0], [199.0, 14791.0], [194.0, 5081.0], [201.0, 18044.5], [206.0, 5142.5], [205.0, 18874.0], [209.0, 15792.0], [233.0, 12776.0], [243.0, 479.0], [241.0, 9493.0], [252.0, 73.0], [250.0, 79.0], [251.0, 219.0], [253.0, 16380.0], [264.0, 19917.0], [262.0, 14773.0], [290.0, 14530.0], [288.0, 16133.5], [304.0, 81.0], [307.0, 20926.0], [327.0, 10392.0], [334.0, 75.0], [351.0, 8785.0], [337.0, 17068.0], [345.0, 10778.0], [372.0, 11751.5], [459.0, 15569.0], [502.0, 18362.0], [507.0, 21250.0], [535.0, 10738.0], [546.0, 21693.5], [673.0, 15383.0], [715.0, 15824.0], [704.0, 17129.5], [1.0, 38296.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[251.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 715.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.4, "minX": 1.68302412E12, "maxY": 92.4, "series": [{"data": [[1.68302424E12, 92.4], [1.68302442E12, 76.96666666666667], [1.68302412E12, 1.4], [1.6830243E12, 89.6], [1.68302418E12, 79.8], [1.68302436E12, 81.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302442E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68302412E12, "maxY": 97.2, "series": [{"data": [[1.68302424E12, 97.2], [1.68302442E12, 68.31666666666666], [1.68302412E12, 0.03333333333333333], [1.6830243E12, 95.58333333333333], [1.68302448E12, 18.066666666666666], [1.68302418E12, 56.25], [1.68302436E12, 80.91666666666667], [1.68302454E12, 4.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6830243E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302454E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68302412E12, "maxY": 97.2, "series": [{"data": [[1.68302424E12, 97.2], [1.68302442E12, 68.31666666666666], [1.68302412E12, 0.03333333333333333], [1.6830243E12, 95.58333333333333], [1.68302448E12, 18.066666666666666], [1.68302418E12, 56.25], [1.68302436E12, 80.91666666666667], [1.68302454E12, 4.95]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6830243E12, 0.05]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302454E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68302412E12, "maxY": 97.2, "series": [{"data": [[1.68302424E12, 97.2], [1.68302442E12, 68.31666666666666], [1.68302412E12, 0.03333333333333333], [1.6830243E12, 95.58333333333333], [1.68302448E12, 18.066666666666666], [1.68302418E12, 56.25], [1.68302436E12, 80.91666666666667], [1.68302454E12, 4.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6830243E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302454E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

