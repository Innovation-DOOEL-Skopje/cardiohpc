/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 231821.0, "series": [{"data": [[0.0, 15.0], [0.1, 23.0], [0.2, 25.0], [0.3, 26.0], [0.4, 29.0], [0.5, 30.0], [0.6, 34.0], [0.7, 35.0], [0.8, 36.0], [0.9, 37.0], [1.0, 38.0], [1.1, 39.0], [1.2, 39.0], [1.3, 42.0], [1.4, 43.0], [1.5, 44.0], [1.6, 44.0], [1.7, 44.0], [1.8, 45.0], [1.9, 46.0], [2.0, 46.0], [2.1, 46.0], [2.2, 47.0], [2.3, 47.0], [2.4, 47.0], [2.5, 48.0], [2.6, 48.0], [2.7, 48.0], [2.8, 49.0], [2.9, 49.0], [3.0, 50.0], [3.1, 51.0], [3.2, 51.0], [3.3, 51.0], [3.4, 52.0], [3.5, 52.0], [3.6, 52.0], [3.7, 52.0], [3.8, 53.0], [3.9, 54.0], [4.0, 54.0], [4.1, 55.0], [4.2, 56.0], [4.3, 56.0], [4.4, 57.0], [4.5, 57.0], [4.6, 58.0], [4.7, 58.0], [4.8, 58.0], [4.9, 59.0], [5.0, 59.0], [5.1, 59.0], [5.2, 59.0], [5.3, 60.0], [5.4, 60.0], [5.5, 60.0], [5.6, 60.0], [5.7, 60.0], [5.8, 60.0], [5.9, 61.0], [6.0, 61.0], [6.1, 61.0], [6.2, 61.0], [6.3, 62.0], [6.4, 62.0], [6.5, 62.0], [6.6, 62.0], [6.7, 63.0], [6.8, 63.0], [6.9, 63.0], [7.0, 63.0], [7.1, 63.0], [7.2, 63.0], [7.3, 64.0], [7.4, 64.0], [7.5, 64.0], [7.6, 64.0], [7.7, 65.0], [7.8, 65.0], [7.9, 65.0], [8.0, 65.0], [8.1, 65.0], [8.2, 65.0], [8.3, 66.0], [8.4, 66.0], [8.5, 66.0], [8.6, 66.0], [8.7, 66.0], [8.8, 66.0], [8.9, 67.0], [9.0, 67.0], [9.1, 67.0], [9.2, 67.0], [9.3, 67.0], [9.4, 68.0], [9.5, 68.0], [9.6, 68.0], [9.7, 68.0], [9.8, 68.0], [9.9, 68.0], [10.0, 69.0], [10.1, 69.0], [10.2, 69.0], [10.3, 69.0], [10.4, 69.0], [10.5, 70.0], [10.6, 70.0], [10.7, 70.0], [10.8, 70.0], [10.9, 71.0], [11.0, 71.0], [11.1, 71.0], [11.2, 71.0], [11.3, 71.0], [11.4, 72.0], [11.5, 72.0], [11.6, 72.0], [11.7, 72.0], [11.8, 72.0], [11.9, 72.0], [12.0, 72.0], [12.1, 73.0], [12.2, 73.0], [12.3, 73.0], [12.4, 73.0], [12.5, 73.0], [12.6, 73.0], [12.7, 73.0], [12.8, 73.0], [12.9, 73.0], [13.0, 73.0], [13.1, 73.0], [13.2, 74.0], [13.3, 74.0], [13.4, 74.0], [13.5, 74.0], [13.6, 74.0], [13.7, 74.0], [13.8, 74.0], [13.9, 74.0], [14.0, 74.0], [14.1, 74.0], [14.2, 75.0], [14.3, 75.0], [14.4, 75.0], [14.5, 75.0], [14.6, 75.0], [14.7, 75.0], [14.8, 75.0], [14.9, 75.0], [15.0, 75.0], [15.1, 76.0], [15.2, 76.0], [15.3, 76.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 77.0], [16.2, 77.0], [16.3, 77.0], [16.4, 77.0], [16.5, 77.0], [16.6, 77.0], [16.7, 77.0], [16.8, 77.0], [16.9, 77.0], [17.0, 77.0], [17.1, 77.0], [17.2, 77.0], [17.3, 77.0], [17.4, 77.0], [17.5, 78.0], [17.6, 78.0], [17.7, 78.0], [17.8, 78.0], [17.9, 78.0], [18.0, 78.0], [18.1, 78.0], [18.2, 78.0], [18.3, 78.0], [18.4, 78.0], [18.5, 78.0], [18.6, 78.0], [18.7, 78.0], [18.8, 79.0], [18.9, 79.0], [19.0, 79.0], [19.1, 79.0], [19.2, 79.0], [19.3, 79.0], [19.4, 79.0], [19.5, 79.0], [19.6, 79.0], [19.7, 79.0], [19.8, 80.0], [19.9, 80.0], [20.0, 80.0], [20.1, 80.0], [20.2, 80.0], [20.3, 80.0], [20.4, 80.0], [20.5, 80.0], [20.6, 80.0], [20.7, 80.0], [20.8, 80.0], [20.9, 80.0], [21.0, 81.0], [21.1, 81.0], [21.2, 81.0], [21.3, 81.0], [21.4, 81.0], [21.5, 81.0], [21.6, 81.0], [21.7, 81.0], [21.8, 81.0], [21.9, 81.0], [22.0, 82.0], [22.1, 82.0], [22.2, 82.0], [22.3, 82.0], [22.4, 82.0], [22.5, 82.0], [22.6, 82.0], [22.7, 82.0], [22.8, 82.0], [22.9, 82.0], [23.0, 82.0], [23.1, 82.0], [23.2, 83.0], [23.3, 83.0], [23.4, 83.0], [23.5, 83.0], [23.6, 83.0], [23.7, 83.0], [23.8, 83.0], [23.9, 83.0], [24.0, 83.0], [24.1, 83.0], [24.2, 83.0], [24.3, 83.0], [24.4, 83.0], [24.5, 83.0], [24.6, 84.0], [24.7, 84.0], [24.8, 84.0], [24.9, 84.0], [25.0, 84.0], [25.1, 84.0], [25.2, 84.0], [25.3, 84.0], [25.4, 84.0], [25.5, 84.0], [25.6, 84.0], [25.7, 84.0], [25.8, 85.0], [25.9, 85.0], [26.0, 85.0], [26.1, 85.0], [26.2, 85.0], [26.3, 85.0], [26.4, 85.0], [26.5, 85.0], [26.6, 85.0], [26.7, 85.0], [26.8, 85.0], [26.9, 85.0], [27.0, 85.0], [27.1, 86.0], [27.2, 86.0], [27.3, 86.0], [27.4, 86.0], [27.5, 86.0], [27.6, 86.0], [27.7, 86.0], [27.8, 86.0], [27.9, 86.0], [28.0, 86.0], [28.1, 86.0], [28.2, 86.0], [28.3, 87.0], [28.4, 87.0], [28.5, 87.0], [28.6, 87.0], [28.7, 87.0], [28.8, 87.0], [28.9, 87.0], [29.0, 87.0], [29.1, 88.0], [29.2, 88.0], [29.3, 88.0], [29.4, 88.0], [29.5, 88.0], [29.6, 88.0], [29.7, 88.0], [29.8, 88.0], [29.9, 89.0], [30.0, 89.0], [30.1, 89.0], [30.2, 89.0], [30.3, 89.0], [30.4, 89.0], [30.5, 89.0], [30.6, 89.0], [30.7, 90.0], [30.8, 90.0], [30.9, 90.0], [31.0, 90.0], [31.1, 90.0], [31.2, 90.0], [31.3, 90.0], [31.4, 90.0], [31.5, 91.0], [31.6, 91.0], [31.7, 91.0], [31.8, 91.0], [31.9, 91.0], [32.0, 91.0], [32.1, 91.0], [32.2, 92.0], [32.3, 92.0], [32.4, 92.0], [32.5, 92.0], [32.6, 92.0], [32.7, 92.0], [32.8, 92.0], [32.9, 92.0], [33.0, 93.0], [33.1, 93.0], [33.2, 93.0], [33.3, 93.0], [33.4, 93.0], [33.5, 93.0], [33.6, 94.0], [33.7, 94.0], [33.8, 94.0], [33.9, 94.0], [34.0, 94.0], [34.1, 94.0], [34.2, 94.0], [34.3, 94.0], [34.4, 94.0], [34.5, 94.0], [34.6, 95.0], [34.7, 95.0], [34.8, 95.0], [34.9, 95.0], [35.0, 95.0], [35.1, 95.0], [35.2, 95.0], [35.3, 95.0], [35.4, 96.0], [35.5, 96.0], [35.6, 96.0], [35.7, 96.0], [35.8, 96.0], [35.9, 96.0], [36.0, 96.0], [36.1, 97.0], [36.2, 97.0], [36.3, 97.0], [36.4, 97.0], [36.5, 97.0], [36.6, 98.0], [36.7, 98.0], [36.8, 98.0], [36.9, 98.0], [37.0, 98.0], [37.1, 98.0], [37.2, 99.0], [37.3, 99.0], [37.4, 99.0], [37.5, 99.0], [37.6, 99.0], [37.7, 99.0], [37.8, 99.0], [37.9, 100.0], [38.0, 100.0], [38.1, 100.0], [38.2, 100.0], [38.3, 100.0], [38.4, 101.0], [38.5, 101.0], [38.6, 101.0], [38.7, 101.0], [38.8, 101.0], [38.9, 102.0], [39.0, 102.0], [39.1, 102.0], [39.2, 102.0], [39.3, 102.0], [39.4, 102.0], [39.5, 103.0], [39.6, 103.0], [39.7, 103.0], [39.8, 104.0], [39.9, 104.0], [40.0, 104.0], [40.1, 104.0], [40.2, 105.0], [40.3, 105.0], [40.4, 105.0], [40.5, 106.0], [40.6, 106.0], [40.7, 106.0], [40.8, 107.0], [40.9, 107.0], [41.0, 108.0], [41.1, 108.0], [41.2, 108.0], [41.3, 109.0], [41.4, 109.0], [41.5, 110.0], [41.6, 110.0], [41.7, 111.0], [41.8, 111.0], [41.9, 112.0], [42.0, 113.0], [42.1, 114.0], [42.2, 115.0], [42.3, 115.0], [42.4, 116.0], [42.5, 116.0], [42.6, 116.0], [42.7, 117.0], [42.8, 117.0], [42.9, 118.0], [43.0, 118.0], [43.1, 119.0], [43.2, 120.0], [43.3, 120.0], [43.4, 121.0], [43.5, 123.0], [43.6, 125.0], [43.7, 126.0], [43.8, 126.0], [43.9, 128.0], [44.0, 129.0], [44.1, 129.0], [44.2, 131.0], [44.3, 132.0], [44.4, 132.0], [44.5, 133.0], [44.6, 135.0], [44.7, 137.0], [44.8, 138.0], [44.9, 140.0], [45.0, 141.0], [45.1, 142.0], [45.2, 143.0], [45.3, 144.0], [45.4, 147.0], [45.5, 148.0], [45.6, 150.0], [45.7, 151.0], [45.8, 152.0], [45.9, 153.0], [46.0, 157.0], [46.1, 160.0], [46.2, 168.0], [46.3, 178.0], [46.4, 268.0], [46.5, 336.0], [46.6, 371.0], [46.7, 378.0], [46.8, 499.0], [46.9, 562.0], [47.0, 705.0], [47.1, 737.0], [47.2, 761.0], [47.3, 791.0], [47.4, 825.0], [47.5, 862.0], [47.6, 985.0], [47.7, 1148.0], [47.8, 1182.0], [47.9, 1209.0], [48.0, 1254.0], [48.1, 1268.0], [48.2, 1357.0], [48.3, 1385.0], [48.4, 1408.0], [48.5, 1420.0], [48.6, 1424.0], [48.7, 1435.0], [48.8, 1440.0], [48.9, 1456.0], [49.0, 1496.0], [49.1, 1598.0], [49.2, 1613.0], [49.3, 1675.0], [49.4, 1710.0], [49.5, 1752.0], [49.6, 1790.0], [49.7, 1795.0], [49.8, 1817.0], [49.9, 1847.0], [50.0, 1856.0], [50.1, 1867.0], [50.2, 1897.0], [50.3, 1954.0], [50.4, 2144.0], [50.5, 2286.0], [50.6, 2332.0], [50.7, 2358.0], [50.8, 2422.0], [50.9, 2448.0], [51.0, 2491.0], [51.1, 2562.0], [51.2, 2592.0], [51.3, 2747.0], [51.4, 2792.0], [51.5, 2817.0], [51.6, 2841.0], [51.7, 2853.0], [51.8, 2860.0], [51.9, 2934.0], [52.0, 3064.0], [52.1, 3163.0], [52.2, 3257.0], [52.3, 3318.0], [52.4, 3545.0], [52.5, 3620.0], [52.6, 3636.0], [52.7, 3666.0], [52.8, 3712.0], [52.9, 3799.0], [53.0, 3871.0], [53.1, 3929.0], [53.2, 3979.0], [53.3, 4063.0], [53.4, 4164.0], [53.5, 4212.0], [53.6, 4293.0], [53.7, 4321.0], [53.8, 4386.0], [53.9, 4412.0], [54.0, 4492.0], [54.1, 4586.0], [54.2, 4624.0], [54.3, 4922.0], [54.4, 4959.0], [54.5, 4996.0], [54.6, 4998.0], [54.7, 5030.0], [54.8, 5043.0], [54.9, 5110.0], [55.0, 5116.0], [55.1, 5131.0], [55.2, 5148.0], [55.3, 5181.0], [55.4, 5199.0], [55.5, 5220.0], [55.6, 5246.0], [55.7, 5338.0], [55.8, 5415.0], [55.9, 5438.0], [56.0, 5449.0], [56.1, 5477.0], [56.2, 5523.0], [56.3, 5620.0], [56.4, 5652.0], [56.5, 5755.0], [56.6, 5835.0], [56.7, 5926.0], [56.8, 5996.0], [56.9, 6166.0], [57.0, 6284.0], [57.1, 6368.0], [57.2, 6420.0], [57.3, 6493.0], [57.4, 6510.0], [57.5, 6528.0], [57.6, 6560.0], [57.7, 6582.0], [57.8, 6645.0], [57.9, 6700.0], [58.0, 6848.0], [58.1, 7002.0], [58.2, 7158.0], [58.3, 7222.0], [58.4, 7250.0], [58.5, 7299.0], [58.6, 7326.0], [58.7, 7381.0], [58.8, 7586.0], [58.9, 7655.0], [59.0, 7729.0], [59.1, 7824.0], [59.2, 7897.0], [59.3, 7954.0], [59.4, 7987.0], [59.5, 8185.0], [59.6, 8361.0], [59.7, 8507.0], [59.8, 8597.0], [59.9, 8642.0], [60.0, 8657.0], [60.1, 8687.0], [60.2, 8706.0], [60.3, 8753.0], [60.4, 8836.0], [60.5, 8842.0], [60.6, 8978.0], [60.7, 9032.0], [60.8, 9128.0], [60.9, 9167.0], [61.0, 9231.0], [61.1, 9364.0], [61.2, 9420.0], [61.3, 9426.0], [61.4, 9435.0], [61.5, 9447.0], [61.6, 9465.0], [61.7, 9526.0], [61.8, 9549.0], [61.9, 9582.0], [62.0, 9737.0], [62.1, 9792.0], [62.2, 9829.0], [62.3, 9852.0], [62.4, 9877.0], [62.5, 10040.0], [62.6, 10049.0], [62.7, 10114.0], [62.8, 10142.0], [62.9, 10148.0], [63.0, 10157.0], [63.1, 10171.0], [63.2, 10201.0], [63.3, 10262.0], [63.4, 10311.0], [63.5, 10373.0], [63.6, 10381.0], [63.7, 10416.0], [63.8, 10450.0], [63.9, 10471.0], [64.0, 10494.0], [64.1, 10543.0], [64.2, 10610.0], [64.3, 10621.0], [64.4, 10639.0], [64.5, 10811.0], [64.6, 10859.0], [64.7, 10901.0], [64.8, 11036.0], [64.9, 11121.0], [65.0, 11178.0], [65.1, 11259.0], [65.2, 11321.0], [65.3, 11384.0], [65.4, 11470.0], [65.5, 11531.0], [65.6, 11816.0], [65.7, 11913.0], [65.8, 11994.0], [65.9, 12002.0], [66.0, 12056.0], [66.1, 12095.0], [66.2, 12118.0], [66.3, 12130.0], [66.4, 12163.0], [66.5, 12189.0], [66.6, 12207.0], [66.7, 12231.0], [66.8, 12271.0], [66.9, 12337.0], [67.0, 12413.0], [67.1, 12487.0], [67.2, 12518.0], [67.3, 12519.0], [67.4, 12527.0], [67.5, 12588.0], [67.6, 12661.0], [67.7, 12697.0], [67.8, 12746.0], [67.9, 12748.0], [68.0, 12749.0], [68.1, 12793.0], [68.2, 12854.0], [68.3, 12871.0], [68.4, 12907.0], [68.5, 12933.0], [68.6, 12957.0], [68.7, 13013.0], [68.8, 13042.0], [68.9, 13048.0], [69.0, 13067.0], [69.1, 13104.0], [69.2, 13119.0], [69.3, 13169.0], [69.4, 13201.0], [69.5, 13281.0], [69.6, 13321.0], [69.7, 13336.0], [69.8, 13346.0], [69.9, 13349.0], [70.0, 13354.0], [70.1, 13365.0], [70.2, 13425.0], [70.3, 13475.0], [70.4, 13498.0], [70.5, 13531.0], [70.6, 13565.0], [70.7, 13572.0], [70.8, 13602.0], [70.9, 13630.0], [71.0, 13634.0], [71.1, 13643.0], [71.2, 13645.0], [71.3, 13670.0], [71.4, 13751.0], [71.5, 13753.0], [71.6, 13759.0], [71.7, 13808.0], [71.8, 13832.0], [71.9, 13834.0], [72.0, 13839.0], [72.1, 13885.0], [72.2, 13918.0], [72.3, 13933.0], [72.4, 13948.0], [72.5, 13963.0], [72.6, 13968.0], [72.7, 14007.0], [72.8, 14013.0], [72.9, 14015.0], [73.0, 14044.0], [73.1, 14078.0], [73.2, 14129.0], [73.3, 14151.0], [73.4, 14153.0], [73.5, 14154.0], [73.6, 14165.0], [73.7, 14176.0], [73.8, 14191.0], [73.9, 14202.0], [74.0, 14258.0], [74.1, 14321.0], [74.2, 14355.0], [74.3, 14408.0], [74.4, 14416.0], [74.5, 14455.0], [74.6, 14487.0], [74.7, 14538.0], [74.8, 14545.0], [74.9, 14547.0], [75.0, 14569.0], [75.1, 14587.0], [75.2, 14620.0], [75.3, 14635.0], [75.4, 14638.0], [75.5, 14646.0], [75.6, 14654.0], [75.7, 14708.0], [75.8, 14723.0], [75.9, 14732.0], [76.0, 14735.0], [76.1, 14754.0], [76.2, 14791.0], [76.3, 14812.0], [76.4, 14849.0], [76.5, 14886.0], [76.6, 14891.0], [76.7, 14897.0], [76.8, 14933.0], [76.9, 14959.0], [77.0, 14969.0], [77.1, 14986.0], [77.2, 15003.0], [77.3, 15022.0], [77.4, 15052.0], [77.5, 15086.0], [77.6, 15138.0], [77.7, 15141.0], [77.8, 15163.0], [77.9, 15213.0], [78.0, 15235.0], [78.1, 15251.0], [78.2, 15275.0], [78.3, 15307.0], [78.4, 15382.0], [78.5, 15391.0], [78.6, 15466.0], [78.7, 15488.0], [78.8, 15516.0], [78.9, 15528.0], [79.0, 15559.0], [79.1, 15588.0], [79.2, 15638.0], [79.3, 15647.0], [79.4, 15680.0], [79.5, 15685.0], [79.6, 15693.0], [79.7, 15714.0], [79.8, 15751.0], [79.9, 15759.0], [80.0, 15773.0], [80.1, 15819.0], [80.2, 15865.0], [80.3, 15881.0], [80.4, 15911.0], [80.5, 15923.0], [80.6, 15983.0], [80.7, 16016.0], [80.8, 16073.0], [80.9, 16110.0], [81.0, 16255.0], [81.1, 16310.0], [81.2, 16376.0], [81.3, 16484.0], [81.4, 16512.0], [81.5, 16525.0], [81.6, 16536.0], [81.7, 16538.0], [81.8, 16570.0], [81.9, 16589.0], [82.0, 16620.0], [82.1, 16661.0], [82.2, 16711.0], [82.3, 16736.0], [82.4, 16770.0], [82.5, 16811.0], [82.6, 16846.0], [82.7, 16860.0], [82.8, 16874.0], [82.9, 16907.0], [83.0, 16937.0], [83.1, 16965.0], [83.2, 17011.0], [83.3, 17050.0], [83.4, 17103.0], [83.5, 17156.0], [83.6, 17199.0], [83.7, 17353.0], [83.8, 17464.0], [83.9, 17718.0], [84.0, 17818.0], [84.1, 18002.0], [84.2, 18053.0], [84.3, 18120.0], [84.4, 18266.0], [84.5, 18287.0], [84.6, 18300.0], [84.7, 18342.0], [84.8, 18544.0], [84.9, 18757.0], [85.0, 18937.0], [85.1, 18993.0], [85.2, 19177.0], [85.3, 19259.0], [85.4, 19307.0], [85.5, 19398.0], [85.6, 19420.0], [85.7, 19444.0], [85.8, 19513.0], [85.9, 19587.0], [86.0, 19747.0], [86.1, 19821.0], [86.2, 19908.0], [86.3, 20189.0], [86.4, 20205.0], [86.5, 20213.0], [86.6, 20280.0], [86.7, 20374.0], [86.8, 20407.0], [86.9, 20463.0], [87.0, 20689.0], [87.1, 20890.0], [87.2, 21150.0], [87.3, 21216.0], [87.4, 21646.0], [87.5, 21782.0], [87.6, 21810.0], [87.7, 21905.0], [87.8, 22263.0], [87.9, 22311.0], [88.0, 22526.0], [88.1, 22576.0], [88.2, 22657.0], [88.3, 22916.0], [88.4, 22934.0], [88.5, 23023.0], [88.6, 23099.0], [88.7, 23273.0], [88.8, 23336.0], [88.9, 23453.0], [89.0, 23583.0], [89.1, 24477.0], [89.2, 25324.0], [89.3, 26457.0], [89.4, 26926.0], [89.5, 28296.0], [89.6, 29259.0], [89.7, 29798.0], [89.8, 30263.0], [89.9, 30536.0], [90.0, 30617.0], [90.1, 31068.0], [90.2, 31482.0], [90.3, 31710.0], [90.4, 32239.0], [90.5, 32373.0], [90.6, 32521.0], [90.7, 32951.0], [90.8, 33054.0], [90.9, 34120.0], [91.0, 34314.0], [91.1, 34331.0], [91.2, 34372.0], [91.3, 34950.0], [91.4, 35099.0], [91.5, 36750.0], [91.6, 37231.0], [91.7, 39268.0], [91.8, 39910.0], [91.9, 41240.0], [92.0, 41433.0], [92.1, 42746.0], [92.2, 43003.0], [92.3, 45230.0], [92.4, 47334.0], [92.5, 47363.0], [92.6, 47468.0], [92.7, 49400.0], [92.8, 49431.0], [92.9, 51075.0], [93.0, 53447.0], [93.1, 54459.0], [93.2, 55092.0], [93.3, 55476.0], [93.4, 56324.0], [93.5, 57359.0], [93.6, 58329.0], [93.7, 59193.0], [93.8, 59704.0], [93.9, 62035.0], [94.0, 63123.0], [94.1, 63725.0], [94.2, 64133.0], [94.3, 65516.0], [94.4, 67067.0], [94.5, 68446.0], [94.6, 70297.0], [94.7, 72582.0], [94.8, 75302.0], [94.9, 76197.0], [95.0, 76904.0], [95.1, 77106.0], [95.2, 77503.0], [95.3, 78115.0], [95.4, 79148.0], [95.5, 79158.0], [95.6, 79366.0], [95.7, 79905.0], [95.8, 80094.0], [95.9, 81495.0], [96.0, 81668.0], [96.1, 83206.0], [96.2, 89221.0], [96.3, 92974.0], [96.4, 94036.0], [96.5, 94769.0], [96.6, 96196.0], [96.7, 100011.0], [96.8, 100064.0], [96.9, 100078.0], [97.0, 100085.0], [97.1, 100093.0], [97.2, 100101.0], [97.3, 100115.0], [97.4, 100124.0], [97.5, 100127.0], [97.6, 100129.0], [97.7, 100137.0], [97.8, 100200.0], [97.9, 100219.0], [98.0, 100226.0], [98.1, 100237.0], [98.2, 118210.0], [98.3, 128804.0], [98.4, 130042.0], [98.5, 130714.0], [98.6, 131089.0], [98.7, 131288.0], [98.8, 131622.0], [98.9, 131842.0], [99.0, 132131.0], [99.1, 134063.0], [99.2, 134521.0], [99.3, 136230.0], [99.4, 136232.0], [99.5, 144230.0], [99.6, 181484.0], [99.7, 181498.0], [99.8, 196423.0], [99.9, 230649.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10436.0, "series": [{"data": [[0.0, 10436.0], [132900.0, 7.0], [145700.0, 1.0], [66700.0, 2.0], [68300.0, 2.0], [73100.0, 1.0], [71500.0, 1.0], [76300.0, 1.0], [74700.0, 2.0], [79500.0, 2.0], [81100.0, 3.0], [87500.0, 1.0], [98700.0, 1.0], [130700.0, 17.0], [100.0, 2362.0], [32900.0, 30.0], [131500.0, 17.0], [35300.0, 3.0], [36900.0, 3.0], [38500.0, 2.0], [40100.0, 1.0], [42500.0, 4.0], [43300.0, 2.0], [46500.0, 2.0], [47300.0, 54.0], [48100.0, 1.0], [50500.0, 2.0], [51300.0, 1.0], [200.0, 20.0], [53700.0, 2.0], [56100.0, 4.0], [55300.0, 16.0], [59300.0, 2.0], [61700.0, 2.0], [64100.0, 4.0], [64900.0, 1.0], [65800.0, 1.0], [69000.0, 1.0], [75400.0, 1.0], [77000.0, 4.0], [300.0, 75.0], [86600.0, 1.0], [88200.0, 3.0], [93000.0, 6.0], [96200.0, 12.0], [94600.0, 4.0], [99400.0, 1.0], [400.0, 25.0], [128200.0, 11.0], [500.0, 39.0], [600.0, 8.0], [148400.0, 1.0], [700.0, 94.0], [196400.0, 14.0], [800.0, 54.0], [900.0, 41.0], [1000.0, 4.0], [1100.0, 53.0], [1200.0, 83.0], [1300.0, 51.0], [1400.0, 180.0], [1500.0, 49.0], [1600.0, 57.0], [1700.0, 93.0], [1800.0, 135.0], [1900.0, 41.0], [2000.0, 10.0], [2100.0, 7.0], [136500.0, 14.0], [2300.0, 60.0], [2200.0, 32.0], [146100.0, 2.0], [2400.0, 71.0], [2500.0, 59.0], [2600.0, 2.0], [2700.0, 51.0], [2800.0, 116.0], [2900.0, 32.0], [3000.0, 19.0], [3100.0, 43.0], [3200.0, 20.0], [3300.0, 30.0], [3400.0, 4.0], [3500.0, 24.0], [222900.0, 1.0], [3600.0, 88.0], [3700.0, 34.0], [3800.0, 48.0], [3900.0, 42.0], [4000.0, 30.0], [4100.0, 33.0], [4200.0, 63.0], [68100.0, 4.0], [4300.0, 46.0], [4400.0, 48.0], [4600.0, 26.0], [4500.0, 26.0], [69700.0, 1.0], [4700.0, 16.0], [74500.0, 1.0], [76100.0, 16.0], [4800.0, 1.0], [5000.0, 68.0], [4900.0, 92.0], [5100.0, 154.0], [79300.0, 12.0], [80900.0, 1.0], [5200.0, 69.0], [5300.0, 32.0], [82500.0, 3.0], [84100.0, 1.0], [5400.0, 105.0], [5600.0, 59.0], [5500.0, 24.0], [5700.0, 28.0], [5800.0, 30.0], [5900.0, 35.0], [6000.0, 16.0], [6100.0, 27.0], [95300.0, 1.0], [96900.0, 1.0], [6200.0, 19.0], [100100.0, 171.0], [6300.0, 36.0], [6400.0, 41.0], [6500.0, 118.0], [6600.0, 46.0], [6900.0, 21.0], [6700.0, 8.0], [6800.0, 26.0], [7000.0, 19.0], [7100.0, 28.0], [7300.0, 56.0], [7200.0, 65.0], [7400.0, 21.0], [7600.0, 43.0], [7500.0, 10.0], [7900.0, 64.0], [7800.0, 53.0], [7700.0, 11.0], [8000.0, 8.0], [8100.0, 13.0], [8400.0, 6.0], [8600.0, 91.0], [8200.0, 6.0], [9000.0, 38.0], [9200.0, 40.0], [8800.0, 55.0], [9400.0, 137.0], [9600.0, 19.0], [9800.0, 82.0], [10000.0, 62.0], [10200.0, 54.0], [10600.0, 72.0], [10400.0, 97.0], [10800.0, 52.0], [11000.0, 21.0], [11200.0, 38.0], [11600.0, 4.0], [11400.0, 36.0], [11800.0, 25.0], [12000.0, 78.0], [12200.0, 88.0], [12600.0, 50.0], [12400.0, 41.0], [13000.0, 106.0], [12800.0, 74.0], [13200.0, 38.0], [13800.0, 125.0], [13400.0, 81.0], [13600.0, 152.0], [14000.0, 122.0], [14200.0, 50.0], [14600.0, 158.0], [14400.0, 113.0], [14800.0, 136.0], [15000.0, 100.0], [15200.0, 115.0], [15600.0, 139.0], [15400.0, 67.0], [15800.0, 89.0], [16000.0, 79.0], [16200.0, 30.0], [16400.0, 37.0], [16800.0, 127.0], [17200.0, 22.0], [17600.0, 10.0], [18400.0, 7.0], [18000.0, 53.0], [18800.0, 12.0], [19200.0, 49.0], [19600.0, 15.0], [20400.0, 38.0], [20000.0, 2.0], [21200.0, 32.0], [20800.0, 14.0], [22400.0, 12.0], [21600.0, 7.0], [22000.0, 14.0], [23200.0, 37.0], [22800.0, 12.0], [23600.0, 8.0], [24400.0, 2.0], [25200.0, 7.0], [26400.0, 13.0], [25600.0, 3.0], [26000.0, 2.0], [27200.0, 3.0], [28400.0, 2.0], [28000.0, 1.0], [29200.0, 3.0], [29600.0, 1.0], [31600.0, 9.0], [31200.0, 2.0], [32400.0, 15.0], [33600.0, 2.0], [34400.0, 12.0], [35200.0, 2.0], [36800.0, 1.0], [37600.0, 2.0], [38400.0, 2.0], [40000.0, 1.0], [39200.0, 27.0], [42400.0, 2.0], [41600.0, 2.0], [43200.0, 2.0], [44800.0, 2.0], [46400.0, 2.0], [49600.0, 2.0], [51200.0, 4.0], [54400.0, 11.0], [53600.0, 4.0], [56000.0, 10.0], [59200.0, 2.0], [57600.0, 3.0], [63200.0, 4.0], [64000.0, 3.0], [64800.0, 3.0], [67200.0, 1.0], [65600.0, 2.0], [73600.0, 2.0], [72000.0, 1.0], [75200.0, 10.0], [78400.0, 13.0], [81600.0, 6.0], [80000.0, 13.0], [83200.0, 2.0], [92800.0, 1.0], [91200.0, 2.0], [94400.0, 1.0], [129600.0, 10.0], [131200.0, 23.0], [147200.0, 1.0], [195200.0, 10.0], [132100.0, 11.0], [68700.0, 2.0], [71900.0, 1.0], [73500.0, 2.0], [76700.0, 3.0], [75100.0, 1.0], [81500.0, 13.0], [79900.0, 21.0], [78300.0, 1.0], [83100.0, 2.0], [86300.0, 2.0], [89500.0, 1.0], [91100.0, 1.0], [92700.0, 1.0], [95900.0, 1.0], [133000.0, 10.0], [136200.0, 45.0], [145800.0, 1.0], [33100.0, 8.0], [35500.0, 2.0], [39500.0, 2.0], [41900.0, 2.0], [42700.0, 11.0], [41100.0, 4.0], [43500.0, 2.0], [45100.0, 2.0], [47500.0, 5.0], [51500.0, 1.0], [52300.0, 2.0], [54700.0, 3.0], [56300.0, 10.0], [57100.0, 1.0], [57900.0, 4.0], [60300.0, 1.0], [59500.0, 11.0], [61900.0, 2.0], [62700.0, 2.0], [65100.0, 2.0], [63500.0, 1.0], [66200.0, 1.0], [72600.0, 2.0], [71000.0, 5.0], [77400.0, 17.0], [75800.0, 5.0], [79000.0, 2.0], [85400.0, 1.0], [82200.0, 2.0], [90200.0, 2.0], [96600.0, 1.0], [95000.0, 3.0], [131600.0, 29.0], [66900.0, 2.0], [68500.0, 1.0], [70100.0, 2.0], [79700.0, 11.0], [81300.0, 4.0], [78100.0, 2.0], [86100.0, 2.0], [92500.0, 2.0], [95700.0, 3.0], [97300.0, 1.0], [130900.0, 7.0], [136600.0, 2.0], [181400.0, 46.0], [16500.0, 152.0], [16900.0, 84.0], [17300.0, 23.0], [17700.0, 26.0], [18100.0, 17.0], [18900.0, 36.0], [19300.0, 29.0], [18500.0, 12.0], [20100.0, 38.0], [19700.0, 34.0], [21300.0, 6.0], [20900.0, 4.0], [22500.0, 49.0], [21700.0, 45.0], [22100.0, 1.0], [23300.0, 24.0], [22900.0, 61.0], [23700.0, 5.0], [24900.0, 14.0], [25300.0, 3.0], [26500.0, 11.0], [26900.0, 11.0], [27300.0, 1.0], [27700.0, 2.0], [28500.0, 8.0], [29300.0, 9.0], [30100.0, 2.0], [29700.0, 15.0], [30500.0, 42.0], [31300.0, 5.0], [30900.0, 3.0], [31700.0, 17.0], [32100.0, 3.0], [32500.0, 24.0], [33000.0, 1.0], [131100.0, 3.0], [35400.0, 3.0], [43400.0, 2.0], [44200.0, 2.0], [47400.0, 8.0], [48200.0, 1.0], [50600.0, 2.0], [54600.0, 7.0], [55400.0, 5.0], [56200.0, 4.0], [58600.0, 9.0], [61000.0, 2.0], [59400.0, 7.0], [65000.0, 2.0], [69200.0, 1.0], [67600.0, 3.0], [66000.0, 2.0], [74000.0, 1.0], [77200.0, 1.0], [80400.0, 2.0], [83600.0, 1.0], [86800.0, 2.0], [93200.0, 4.0], [91600.0, 2.0], [94800.0, 1.0], [130000.0, 26.0], [134500.0, 19.0], [144100.0, 1.0], [65900.0, 3.0], [77100.0, 7.0], [78700.0, 1.0], [83500.0, 1.0], [85100.0, 1.0], [91500.0, 2.0], [94700.0, 4.0], [128300.0, 11.0], [135400.0, 3.0], [148200.0, 1.0], [231400.0, 3.0], [34100.0, 13.0], [34900.0, 2.0], [38900.0, 2.0], [38100.0, 1.0], [37300.0, 1.0], [40500.0, 3.0], [42100.0, 12.0], [41300.0, 16.0], [44500.0, 2.0], [45300.0, 4.0], [48500.0, 2.0], [49300.0, 11.0], [54900.0, 5.0], [53300.0, 7.0], [57300.0, 9.0], [55700.0, 3.0], [58900.0, 12.0], [59700.0, 4.0], [62100.0, 4.0], [63700.0, 41.0], [64500.0, 1.0], [68200.0, 9.0], [66600.0, 2.0], [71400.0, 1.0], [73000.0, 2.0], [76200.0, 4.0], [81000.0, 1.0], [82600.0, 6.0], [84200.0, 1.0], [89000.0, 1.0], [90600.0, 2.0], [92200.0, 4.0], [95400.0, 1.0], [100200.0, 105.0], [130600.0, 3.0], [134000.0, 15.0], [65700.0, 6.0], [72100.0, 2.0], [70500.0, 1.0], [75300.0, 5.0], [76900.0, 38.0], [78500.0, 6.0], [80100.0, 6.0], [89700.0, 1.0], [92900.0, 6.0], [96100.0, 14.0], [97700.0, 2.0], [105700.0, 4.0], [8700.0, 50.0], [8300.0, 27.0], [8500.0, 45.0], [8900.0, 32.0], [9100.0, 45.0], [9700.0, 43.0], [9500.0, 71.0], [9300.0, 16.0], [10100.0, 142.0], [9900.0, 9.0], [10500.0, 49.0], [10300.0, 75.0], [10700.0, 13.0], [10900.0, 30.0], [11100.0, 44.0], [11300.0, 39.0], [11700.0, 6.0], [11500.0, 32.0], [11900.0, 43.0], [12100.0, 112.0], [12500.0, 110.0], [12700.0, 111.0], [12300.0, 36.0], [13100.0, 92.0], [13300.0, 164.0], [12900.0, 84.0], [13500.0, 102.0], [13700.0, 95.0], [13900.0, 147.0], [14100.0, 212.0], [14300.0, 50.0], [14500.0, 129.0], [14700.0, 148.0], [231800.0, 1.0], [14900.0, 121.0], [15100.0, 94.0], [15300.0, 68.0], [15700.0, 112.0], [15500.0, 98.0], [15900.0, 68.0], [16100.0, 22.0], [16300.0, 44.0], [16600.0, 71.0], [17000.0, 54.0], [17400.0, 17.0], [18200.0, 67.0], [17800.0, 22.0], [19400.0, 71.0], [19000.0, 14.0], [18600.0, 12.0], [20200.0, 67.0], [19800.0, 25.0], [20600.0, 29.0], [21400.0, 2.0], [21000.0, 4.0], [21800.0, 26.0], [22200.0, 21.0], [23400.0, 25.0], [22600.0, 17.0], [23000.0, 38.0], [23800.0, 5.0], [24200.0, 1.0], [25400.0, 7.0], [26600.0, 1.0], [25800.0, 1.0], [27000.0, 2.0], [27400.0, 5.0], [28200.0, 5.0], [29400.0, 5.0], [30600.0, 18.0], [29800.0, 1.0], [30200.0, 23.0], [31000.0, 16.0], [31400.0, 7.0], [32200.0, 28.0], [32600.0, 1.0], [34800.0, 2.0], [133500.0, 1.0], [33200.0, 3.0], [34000.0, 4.0], [36400.0, 2.0], [37200.0, 4.0], [40400.0, 9.0], [41200.0, 14.0], [42800.0, 12.0], [45200.0, 18.0], [181500.0, 11.0], [48400.0, 1.0], [49200.0, 1.0], [51600.0, 3.0], [54000.0, 2.0], [56400.0, 4.0], [57200.0, 1.0], [55600.0, 2.0], [58000.0, 5.0], [59600.0, 1.0], [60400.0, 1.0], [61200.0, 1.0], [62000.0, 24.0], [65200.0, 3.0], [64400.0, 1.0], [69600.0, 2.0], [68000.0, 1.0], [71200.0, 2.0], [76000.0, 2.0], [79200.0, 11.0], [85600.0, 1.0], [84000.0, 1.0], [87200.0, 3.0], [90400.0, 2.0], [93600.0, 5.0], [95200.0, 2.0], [100000.0, 133.0], [127200.0, 2.0], [128800.0, 3.0], [130400.0, 10.0], [222400.0, 5.0], [67900.0, 2.0], [69500.0, 2.0], [77500.0, 28.0], [74300.0, 1.0], [79100.0, 35.0], [80700.0, 2.0], [82300.0, 1.0], [96700.0, 3.0], [99900.0, 1.0], [134600.0, 10.0], [144200.0, 5.0], [211400.0, 2.0], [230600.0, 24.0], [34300.0, 89.0], [35100.0, 10.0], [36700.0, 20.0], [39900.0, 6.0], [41500.0, 2.0], [43100.0, 2.0], [46300.0, 2.0], [45500.0, 2.0], [49500.0, 2.0], [51100.0, 2.0], [54300.0, 3.0], [55100.0, 5.0], [53500.0, 6.0], [56700.0, 4.0], [57500.0, 3.0], [59100.0, 5.0], [58300.0, 14.0], [59900.0, 1.0], [60700.0, 2.0], [61500.0, 7.0], [63100.0, 5.0], [64700.0, 7.0], [65500.0, 1.0], [67000.0, 6.0], [68600.0, 2.0], [70200.0, 12.0], [76600.0, 2.0], [81400.0, 11.0], [79800.0, 9.0], [78200.0, 1.0], [83000.0, 2.0], [86200.0, 1.0], [92600.0, 1.0], [94200.0, 2.0], [95800.0, 3.0], [118200.0, 1.0], [131000.0, 9.0], [222800.0, 8.0], [134100.0, 2.0], [69300.0, 1.0], [70900.0, 4.0], [72500.0, 3.0], [75700.0, 1.0], [77300.0, 2.0], [74100.0, 1.0], [80500.0, 2.0], [82100.0, 8.0], [88500.0, 1.0], [93300.0, 2.0], [104500.0, 2.0], [130100.0, 4.0], [131800.0, 29.0], [135000.0, 2.0], [16700.0, 70.0], [17100.0, 57.0], [18300.0, 47.0], [17900.0, 11.0], [17500.0, 6.0], [19100.0, 15.0], [18700.0, 18.0], [20300.0, 40.0], [19500.0, 43.0], [19900.0, 15.0], [21100.0, 20.0], [20700.0, 20.0], [21500.0, 2.0], [21900.0, 17.0], [22300.0, 16.0], [23500.0, 16.0], [23100.0, 10.0], [23900.0, 1.0], [24300.0, 2.0], [25100.0, 5.0], [25500.0, 3.0], [26300.0, 4.0], [27500.0, 9.0], [28300.0, 2.0], [29100.0, 1.0], [28700.0, 9.0], [29500.0, 4.0], [30300.0, 6.0], [30700.0, 5.0], [31100.0, 5.0], [31500.0, 12.0], [32300.0, 20.0], [32700.0, 2.0], [34200.0, 1.0], [135900.0, 2.0], [33400.0, 2.0], [35000.0, 29.0], [35800.0, 4.0], [37400.0, 2.0], [40600.0, 4.0], [39800.0, 10.0], [41400.0, 4.0], [43000.0, 8.0], [45400.0, 2.0], [49400.0, 44.0], [51000.0, 7.0], [52600.0, 4.0], [55000.0, 11.0], [53400.0, 5.0], [56600.0, 3.0], [55800.0, 1.0], [222300.0, 1.0], [57400.0, 1.0], [59800.0, 1.0], [61400.0, 2.0], [64600.0, 4.0], [65400.0, 1.0], [68400.0, 8.0], [66800.0, 2.0], [70000.0, 2.0], [71600.0, 2.0], [76400.0, 1.0], [81200.0, 5.0], [84400.0, 1.0], [87600.0, 1.0], [89200.0, 2.0], [94000.0, 25.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 231800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 14055.0, "series": [{"data": [[0.0, 12919.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 606.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14055.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 20.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 61.03333333333332, "minX": 1.6830246E12, "maxY": 3000.0, "series": [{"data": [[1.68302472E12, 3000.0], [1.6830249E12, 380.6692307692306], [1.6830246E12, 3000.0], [1.68302478E12, 3000.0], [1.68302496E12, 61.03333333333332], [1.68302466E12, 3000.0], [1.68302484E12, 2431.5203518101875]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302496E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 43.6774193548387, "minX": 3.0, "maxY": 148417.0, "series": [{"data": [[3.0, 100130.0], [6.0, 100130.66666666667], [9.0, 100129.0], [11.0, 100129.5], [12.0, 100129.0], [15.0, 100128.0], [17.0, 100127.5], [18.0, 100127.66666666667], [21.0, 100127.0], [23.0, 100126.0], [25.0, 100125.0], [26.0, 100122.0], [27.0, 100120.0], [28.0, 100117.0], [30.0, 100115.0], [31.0, 100112.0], [33.0, 100111.0], [34.0, 100101.0], [41.0, 100097.0], [40.0, 100099.66666666667], [42.0, 100095.0], [45.0, 100094.0], [44.0, 100095.5], [47.0, 100089.0], [46.0, 100092.0], [49.0, 100091.0], [50.0, 100089.0], [53.0, 98789.0], [52.0, 100088.33333333333], [54.0, 100110.0], [57.0, 100102.0], [58.0, 100102.0], [61.0, 100102.0], [60.0, 100102.0], [63.0, 100100.0], [62.0, 100100.0], [64.0, 100098.0], [71.0, 100087.0], [69.0, 100089.0], [68.0, 100090.75], [75.0, 96771.0], [74.0, 97779.0], [73.0, 97781.0], [72.0, 100085.0], [79.0, 96292.0], [78.0, 97300.0], [77.0, 95762.0], [76.0, 96770.0], [83.0, 94272.0], [82.0, 95280.0], [81.0, 95282.0], [80.0, 96290.0], [87.0, 92253.0], [86.0, 93260.0], [85.0, 93263.0], [84.0, 94270.0], [91.0, 90234.0], [90.0, 91241.0], [89.0, 91243.0], [88.0, 92251.0], [95.0, 88214.0], [94.0, 89221.0], [93.0, 89224.0], [92.0, 90232.0], [99.0, 86194.0], [98.0, 87203.0], [97.0, 87204.0], [96.0, 88212.0], [103.0, 82636.0], [102.0, 83642.0], [101.0, 85185.0], [100.0, 86194.0], [107.0, 82156.0], [106.0, 83165.0], [105.0, 83166.0], [104.0, 84174.0], [111.0, 80137.0], [110.0, 81145.0], [109.0, 81147.0], [108.0, 82154.0], [115.0, 78118.0], [114.0, 79126.0], [113.0, 79128.0], [112.0, 80134.0], [119.0, 76098.0], [118.0, 77106.0], [117.0, 77109.0], [116.0, 78115.0], [123.0, 73057.0], [122.0, 73547.0], [121.0, 73549.0], [120.0, 76097.0], [127.0, 73067.0], [126.0, 71529.0], [125.0, 72537.0], [124.0, 72540.0], [135.0, 69799.0], [134.0, 69031.0], [133.0, 68498.0], [132.0, 68500.0], [131.0, 69508.0], [130.0, 69510.0], [129.0, 70517.0], [128.0, 72060.0], [143.0, 65760.0], [142.0, 64991.0], [141.0, 65998.0], [140.0, 66772.0], [139.0, 65470.0], [138.0, 67011.0], [137.0, 68790.0], [136.0, 68792.0], [151.0, 61721.0], [150.0, 61723.0], [149.0, 62731.0], [148.0, 62733.0], [147.0, 63740.0], [146.0, 63743.0], [145.0, 64751.0], [144.0, 64753.0], [159.0, 57682.0], [158.0, 57684.0], [157.0, 58692.0], [156.0, 58694.0], [155.0, 59702.0], [154.0, 59704.0], [153.0, 60711.0], [152.0, 60713.0], [167.0, 53643.0], [166.0, 53645.0], [165.0, 54653.0], [164.0, 54655.0], [163.0, 55662.0], [162.0, 55665.0], [161.0, 56673.0], [160.0, 56675.0], [175.0, 49604.0], [174.0, 49606.0], [173.0, 50613.0], [172.0, 50616.0], [171.0, 51624.0], [170.0, 51626.0], [169.0, 52633.0], [168.0, 52634.0], [183.0, 45565.0], [182.0, 45567.0], [181.0, 46575.0], [180.0, 46577.0], [179.0, 47584.0], [178.0, 47586.0], [177.0, 48594.0], [176.0, 48596.0], [191.0, 41526.0], [190.0, 41528.0], [189.0, 42536.0], [188.0, 42538.0], [187.0, 43545.0], [186.0, 43547.0], [185.0, 44555.0], [184.0, 44557.0], [199.0, 37487.0], [198.0, 37488.0], [197.0, 38496.0], [196.0, 38499.0], [195.0, 39506.0], [194.0, 39508.0], [193.0, 40516.0], [192.0, 40518.0], [207.0, 33447.0], [206.0, 33449.0], [205.0, 34458.0], [204.0, 34460.0], [203.0, 35467.0], [202.0, 35469.0], [201.0, 36477.0], [200.0, 36479.0], [215.0, 32256.0], [214.0, 32258.0], [213.0, 32260.0], [212.0, 32260.0], [211.0, 32263.0], [209.0, 32438.0], [208.0, 32441.0], [222.0, 32246.0], [221.0, 32248.0], [220.0, 32249.0], [219.0, 32252.0], [218.0, 32253.0], [217.0, 32255.0], [216.0, 32255.0], [231.0, 32225.0], [230.0, 32229.0], [229.0, 32234.0], [228.0, 32235.0], [227.0, 32239.0], [226.0, 32241.0], [225.0, 32244.0], [224.0, 32246.0], [239.0, 30533.0], [238.0, 30536.0], [237.0, 31364.0], [236.0, 31366.0], [235.0, 32215.0], [234.0, 32221.0], [232.0, 32224.0], [247.0, 26494.0], [246.0, 26497.0], [245.0, 27505.0], [244.0, 27507.0], [243.0, 28514.0], [242.0, 28516.0], [241.0, 29524.0], [240.0, 29526.0], [255.0, 23465.0], [254.0, 23467.0], [253.0, 27231.0], [252.0, 27232.0], [251.0, 24475.0], [250.0, 24477.0], [249.0, 25484.0], [248.0, 25486.0], [270.0, 22922.0], [271.0, 22922.0], [269.0, 22923.0], [268.0, 22925.0], [267.0, 22927.0], [266.0, 22928.0], [265.0, 22929.0], [264.0, 22932.0], [263.0, 22932.0], [256.0, 22941.0], [258.0, 22939.0], [257.0, 22939.0], [262.0, 22934.0], [261.0, 22935.0], [260.0, 22937.5], [285.0, 22573.0], [287.0, 22310.5], [284.0, 22574.0], [275.0, 22919.0], [274.0, 22920.0], [273.0, 22921.0], [283.0, 22806.0], [282.0, 22822.0], [281.0, 22894.0], [280.0, 22902.0], [279.0, 22908.0], [278.0, 22913.5], [276.0, 22917.0], [302.0, 22294.0], [303.0, 22291.0], [301.0, 22294.0], [300.0, 22294.0], [299.0, 22296.0], [298.0, 22297.0], [297.0, 22298.0], [296.0, 22299.0], [295.0, 22302.0], [289.0, 22309.0], [288.0, 22311.0], [294.0, 22309.0], [293.0, 22309.0], [292.0, 22309.0], [316.0, 17311.5], [318.0, 17311.0], [319.0, 11521.0], [317.0, 23101.0], [313.0, 11524.0], [312.0, 23103.0], [311.0, 22253.0], [305.0, 22284.0], [304.0, 22287.0], [307.0, 22273.0], [306.0, 22284.0], [310.0, 22255.0], [309.0, 22272.0], [308.0, 22273.0], [333.0, 23086.0], [334.0, 22075.0], [332.0, 23087.0], [320.0, 23100.0], [331.0, 23087.0], [330.0, 22077.0], [329.0, 22077.0], [328.0, 23088.0], [327.0, 11514.0], [326.0, 22081.0], [325.0, 11520.0], [324.0, 23729.0], [348.0, 22570.5], [350.0, 23075.0], [351.0, 22056.0], [349.0, 23074.0], [346.0, 16784.5], [344.0, 23079.0], [342.0, 23081.0], [341.0, 23083.0], [339.0, 22074.0], [336.0, 16790.5], [366.0, 23056.0], [367.0, 25576.0], [365.0, 22045.0], [364.0, 23058.0], [363.0, 23059.0], [362.0, 22555.0], [361.0, 23060.0], [359.0, 23061.0], [353.0, 23066.0], [352.0, 25586.0], [355.0, 11487.0], [354.0, 11486.0], [357.0, 23063.0], [356.0, 23065.0], [381.0, 23013.0], [382.0, 23013.0], [380.0, 11437.0], [371.0, 23050.0], [370.0, 23052.0], [369.0, 23052.0], [368.0, 22042.0], [379.0, 17227.0], [377.0, 23018.0], [376.0, 11439.0], [375.0, 23022.0], [374.0, 23022.0], [373.0, 23023.0], [372.0, 23049.0], [398.0, 22968.0], [399.0, 22964.0], [397.0, 25488.0], [396.0, 22969.0], [395.0, 17180.5], [393.0, 25491.0], [392.0, 17186.0], [390.0, 22975.0], [385.0, 25512.0], [384.0, 23012.0], [387.0, 11410.0], [386.0, 22991.0], [389.0, 11399.0], [388.0, 22986.0], [415.0, 18664.333333333332], [412.0, 22927.0], [403.0, 22961.0], [402.0, 25481.0], [401.0, 18433.0], [411.0, 11351.0], [410.0, 11352.0], [409.0, 11353.0], [408.0, 11352.0], [407.0, 11354.0], [406.0, 11374.0], [405.0, 11379.0], [404.0, 25480.0], [430.0, 21566.0], [431.0, 21564.0], [429.0, 22890.0], [419.0, 11337.0], [418.0, 22918.5], [416.0, 11342.0], [427.0, 22893.0], [426.0, 22898.0], [425.0, 22901.0], [424.0, 22903.0], [423.0, 22906.0], [422.0, 21900.0], [421.0, 11335.0], [420.0, 11336.0], [446.0, 24263.0], [447.0, 21743.0], [445.0, 21810.0], [444.0, 24330.0], [443.0, 21811.0], [442.0, 21812.0], [441.0, 21975.0], [440.0, 21819.0], [439.0, 21988.0], [432.0, 21997.0], [434.0, 21835.0], [433.0, 21836.0], [438.0, 21832.0], [437.0, 22673.333333333332], [451.0, 20488.0], [462.0, 21285.5], [463.0, 19897.0], [460.0, 22098.333333333332], [457.0, 21206.0], [455.0, 21366.0], [453.0, 21207.0], [452.0, 20487.0], [450.0, 21739.0], [449.0, 21740.0], [478.0, 19916.0], [479.0, 19754.0], [476.0, 19918.0], [466.0, 20309.0], [465.0, 20150.0], [464.0, 19895.0], [475.0, 19918.0], [474.0, 19920.0], [473.0, 19922.0], [472.0, 19762.0], [471.0, 20138.0], [470.0, 8566.0], [469.0, 20146.0], [468.0, 20227.0], [494.0, 10601.0], [495.0, 19451.0], [493.0, 19454.0], [492.0, 10603.0], [491.0, 19456.0], [490.0, 21815.0], [489.0, 7718.0], [488.0, 18479.0], [487.0, 18482.0], [481.0, 19908.0], [480.0, 19909.0], [483.0, 19743.0], [482.0, 19906.0], [486.0, 19901.0], [485.0, 19902.0], [484.0, 19903.0], [510.0, 19439.0], [511.0, 7702.0], [509.0, 10589.0], [508.0, 7702.0], [507.0, 7703.0], [506.0, 10591.0], [505.0, 19444.333333333332], [502.0, 148417.0], [497.0, 21811.0], [496.0, 19451.0], [499.0, 10598.0], [498.0, 7712.0], [501.0, 19449.0], [500.0, 7712.0], [540.0, 10565.0], [542.0, 19415.5], [538.0, 19417.0], [536.0, 7681.0], [534.0, 19420.0], [532.0, 19421.0], [530.0, 10573.0], [528.0, 19427.0], [526.0, 19425.0], [514.0, 7697.0], [512.0, 7700.0], [518.0, 19433.0], [516.0, 7696.0], [524.0, 10576.0], [522.0, 21790.0], [572.0, 7650.0], [574.0, 9093.5], [570.0, 10539.0], [568.0, 19397.0], [566.0, 19398.0], [564.0, 20577.0], [562.0, 19398.0], [560.0, 10547.0], [556.0, 7665.0], [544.0, 19416.0], [550.0, 7670.0], [546.0, 21771.0], [554.0, 10552.0], [552.0, 19245.0], [606.0, 10493.0], [600.0, 7613.0], [580.0, 10525.0], [578.0, 10533.0], [576.0, 10535.0], [598.0, 19356.0], [596.0, 7619.0], [594.0, 10508.0], [592.0, 19363.0], [590.0, 21724.0], [588.0, 19365.0], [586.0, 7629.0], [584.0, 19375.0], [636.0, 18781.0], [638.0, 9927.0], [634.0, 9931.0], [632.0, 18787.0], [630.0, 9939.0], [628.0, 17621.0], [626.0, 20859.0], [620.0, 21650.0], [610.0, 19333.0], [608.0, 7598.0], [614.0, 7587.0], [612.0, 21688.0], [618.0, 10439.0], [616.0, 19163.0], [666.0, 6537.0], [670.0, 9415.0], [664.0, 18278.0], [646.0, 6565.0], [644.0, 6566.0], [640.0, 17357.0], [662.0, 20644.0], [660.0, 6546.0], [658.0, 20646.0], [656.0, 13601.0], [654.0, 6554.0], [652.0, 16936.0], [650.0, 6558.0], [698.0, 9058.0], [702.0, 6164.0], [696.0, 9061.0], [674.0, 147225.0], [672.0, 20615.0], [694.0, 9065.0], [692.0, 9066.0], [690.0, 9067.0], [688.0, 9069.0], [686.0, 13235.0], [684.0, 6194.0], [682.0, 20293.0], [730.0, 19535.0], [734.0, 19268.0], [728.0, 19539.0], [710.0, 16449.0], [708.0, 6147.0], [706.0, 9048.0], [704.0, 20260.0], [726.0, 19544.0], [724.0, 8347.0], [722.0, 8349.0], [720.0, 8352.0], [718.0, 8356.0], [716.0, 17212.0], [714.0, 19573.0], [712.0, 8364.0], [762.0, 18550.0], [766.0, 7326.0], [752.0, 19157.0], [754.0, 15366.0], [756.0, 18553.0], [764.0, 7333.0], [760.0, 7340.0], [742.0, 16831.0], [750.0, 7963.0], [740.0, 11720.666666666666], [748.0, 19180.0], [744.0, 7972.0], [758.0, 18552.0], [794.0, 12163.0], [792.0, 15439.0], [798.0, 12160.5], [784.0, 13479.0], [786.0, 12469.0], [796.0, 11904.0], [768.0, 18536.0], [770.0, 7322.0], [772.0, 7321.0], [774.0, 7304.0], [782.0, 17456.0], [780.0, 6251.5], [778.0, 17464.0], [776.0, 14733.0], [790.0, 11910.0], [788.0, 8639.0], [804.0, 15420.0], [826.0, 11434.25], [830.0, 7988.0], [828.0, 16825.0], [814.0, 14961.0], [800.0, 11896.0], [802.0, 15682.0], [806.0, 8616.0], [812.0, 11451.0], [810.0, 11880.0], [808.0, 15672.0], [822.0, 15049.0], [816.0, 11520.5], [858.0, 15208.0], [862.0, 7948.5], [848.0, 15153.333333333334], [860.0, 7950.0], [834.0, 15039.0], [836.0, 11248.0], [844.0, 16811.0], [842.0, 15524.75], [840.0, 12419.0], [854.0, 14774.0], [850.0, 15033.0], [890.0, 15155.0], [894.0, 15153.0], [880.0, 14986.0], [882.0, 15164.0], [884.0, 14983.0], [888.0, 15155.0], [870.0, 15183.0], [868.0, 9485.0], [866.0, 7945.0], [864.0, 15188.0], [874.0, 13109.0], [872.0, 14875.0], [886.0, 15162.0], [924.0, 14957.0], [912.0, 14706.0], [914.0, 15143.0], [916.0, 14961.0], [926.0, 14956.0], [922.0, 14959.0], [920.0, 16736.0], [898.0, 7913.0], [902.0, 10219.0], [910.0, 11713.666666666666], [904.0, 11180.0], [918.0, 10212.0], [934.0, 12576.5], [958.0, 9403.0], [946.0, 14933.0], [954.0, 12313.0], [942.0, 10185.0], [928.0, 14697.0], [930.0, 14952.5], [932.0, 14693.0], [940.0, 10192.0], [938.0, 14684.0], [936.0, 12280.0], [950.0, 9409.0], [948.0, 14931.0], [988.0, 12271.0], [976.0, 16683.0], [978.0, 14903.0], [980.0, 15078.0], [990.0, 15067.0], [986.0, 16670.0], [984.0, 16671.0], [960.0, 10170.0], [962.0, 15097.0], [964.0, 15096.0], [966.0, 14915.0], [974.0, 14908.0], [972.0, 13014.5], [970.0, 15089.0], [968.0, 14914.0], [982.0, 9375.0], [998.0, 15060.0], [1022.0, 16600.0], [1008.0, 16632.0], [1020.0, 12207.0], [996.0, 10133.0], [994.0, 16660.0], [992.0, 16661.0], [1006.0, 16637.0], [1004.0, 16645.0], [1002.0, 16652.0], [1012.0, 10084.0], [1080.0, 9208.0], [1084.0, 14723.0], [1056.0, 9226.0], [1060.0, 14744.0], [1064.0, 14743.0], [1076.0, 9211.0], [1072.0, 16509.0], [1032.0, 14793.0], [1028.0, 16584.0], [1024.0, 14824.0], [1052.0, 14749.0], [1048.0, 14754.0], [1044.0, 16532.0], [1040.0, 9239.0], [1068.0, 14826.5], [1144.0, 14152.0], [1120.0, 14708.0], [1124.0, 14850.0], [1128.0, 16444.0], [1148.0, 15920.0], [1140.0, 14336.0], [1136.0, 16397.0], [1116.0, 16484.0], [1088.0, 14719.0], [1100.0, 14891.0], [1112.0, 9187.0], [1132.0, 16402.0], [1204.0, 10505.0], [1212.0, 10493.0], [1184.0, 5290.0], [1208.0, 10502.0], [1152.0, 15916.0], [1156.0, 14135.0], [1160.0, 8753.0], [1180.0, 11091.0], [1176.0, 11252.0], [1172.0, 11259.0], [1168.0, 11262.0], [1196.0, 10500.0], [1192.0, 10514.0], [1188.0, 10507.0], [1268.0, 10449.0], [1276.0, 12213.0], [1248.0, 16718.0], [1272.0, 10453.0], [1264.0, 11336.5], [1228.0, 10175.0], [1220.0, 10483.0], [1244.0, 23595.0], [1240.0, 10471.0], [1232.0, 10473.0], [1332.0, 9874.0], [1340.0, 9862.0], [1312.0, 12130.0], [1316.0, 12118.0], [1320.0, 10337.0], [1336.0, 13048.0], [1292.0, 12169.0], [1288.0, 10404.0], [1284.0, 12031.75], [1308.0, 10373.0], [1304.0, 14464.0], [1300.0, 10404.0], [1324.0, 9866.0], [1392.0, 11574.0], [1404.0, 9803.0], [1376.0, 9833.0], [1400.0, 9807.0], [1344.0, 22987.0], [1348.0, 9847.0], [1372.0, 23242.0], [1364.0, 13027.5], [1360.0, 9840.0], [1388.0, 9824.0], [1380.0, 9836.0], [1456.0, 11438.0], [1468.0, 10025.0], [1448.0, 11467.0], [1464.0, 3280.0], [1420.0, 9754.0], [1416.0, 9781.0], [1412.0, 16489.5], [1408.0, 9797.0], [1436.0, 22835.0], [1432.0, 9726.0], [1428.0, 11494.0], [1452.0, 11463.5], [1524.0, 7460.5], [1520.0, 19708.0], [1532.0, 7451.5], [1504.0, 7641.0], [1508.0, 9394.0], [1528.0, 12945.0], [1476.0, 10015.0], [1480.0, 14620.0], [1484.0, 13887.333333333334], [1500.0, 14205.5], [1496.0, 7655.0], [1492.0, 14026.0], [1488.0, 1631.0], [1516.0, 860.0], [1512.0, 7631.0], [1592.0, 9794.0], [1596.0, 9792.0], [1568.0, 7988.0], [1576.0, 15420.0], [1588.0, 7972.0], [1584.0, 15339.5], [1544.0, 13136.5], [1536.0, 94.0], [1564.0, 8734.0], [1556.0, 7295.0], [1552.0, 18943.0], [1580.0, 7976.0], [1656.0, 15306.0], [1648.0, 7897.0], [1636.0, 7915.0], [1632.0, 15353.0], [1640.0, 15338.0], [1660.0, 15161.0], [1652.0, 15309.0], [1600.0, 15391.0], [1604.0, 7953.0], [1628.0, 7922.0], [1624.0, 8855.5], [1620.0, 15378.0], [1616.0, 15717.0], [1724.0, 5658.0], [1700.0, 9634.0], [1708.0, 9628.0], [1696.0, 15249.0], [1716.0, 9559.0], [1712.0, 9567.0], [1672.0, 15294.0], [1668.0, 9691.0], [1664.0, 15518.0], [1692.0, 15204.0], [1688.0, 15281.0], [1684.0, 11570.0], [1780.0, 6405.0], [1784.0, 6392.0], [1768.0, 5507.5], [1788.0, 5468.5], [1760.0, 7434.0], [1772.0, 12360.0], [1776.0, 6410.0], [1736.0, 7478.0], [1732.0, 13305.0], [1756.0, 7449.0], [1744.0, 5640.0], [1844.0, 12161.0], [1852.0, 4496.0], [1824.0, 12174.0], [1828.0, 5647.0], [1832.0, 4510.0], [1836.0, 10452.0], [1840.0, 8334.5], [1804.0, 8926.5], [1800.0, 4532.0], [1792.0, 12200.0], [1820.0, 4525.0], [1812.0, 9447.0], [1808.0, 4527.0], [1916.0, 10362.0], [1888.0, 10388.0], [1892.0, 10386.0], [1896.0, 12095.0], [1900.0, 5570.0], [1912.0, 12079.0], [1908.0, 5560.0], [1904.0, 10377.0], [1864.0, 8012.5], [1868.0, 4470.0], [1884.0, 9370.0], [1880.0, 12113.0], [1876.0, 10061.666666666666], [1872.0, 12118.0], [1980.0, 11346.0], [1952.0, 5492.0], [1956.0, 12230.5], [1960.0, 10293.0], [1964.0, 5480.0], [1976.0, 10253.0], [1924.0, 12072.0], [1928.0, 4391.0], [1932.0, 10324.0], [1948.0, 5498.0], [1940.0, 5502.0], [1936.0, 12027.0], [2036.0, 3901.0], [2040.0, 1384.0], [2016.0, 1405.0], [2020.0, 1402.0], [2024.0, 1398.0], [2032.0, 3906.0], [1996.0, 1422.0], [1992.0, 1427.0], [1988.0, 1429.0], [2012.0, 1410.0], [2008.0, 1411.0], [2004.0, 1416.0], [2000.0, 1419.0], [2160.0, 4624.0], [2120.0, 1861.0], [2136.0, 1812.0], [2128.0, 1846.0], [2168.0, 4614.0], [2152.0, 6121.0], [2144.0, 1797.0], [2064.0, 2487.0], [2056.0, 2811.0], [2048.0, 2818.0], [2104.0, 6324.0], [2096.0, 4178.0], [2088.0, 1885.0], [2280.0, 5246.5], [2296.0, 4293.0], [2248.0, 4340.0], [2256.0, 4319.0], [2264.0, 5248.5], [2288.0, 4119.0], [2184.0, 4237.0], [2176.0, 4605.0], [2200.0, 4398.0], [2224.0, 4207.0], [2216.0, 4387.0], [2208.0, 4391.0], [2424.0, 78.0], [2416.0, 79.0], [2368.0, 68.5], [2392.0, 81.0], [2408.0, 80.0], [2312.0, 3534.0], [2304.0, 4233.333333333333], [2536.0, 99.0], [2504.0, 104.0], [2528.0, 100.0], [2432.0, 77.33333333333333], [2464.0, 48.0], [2624.0, 48.0], [2664.0, 951.0], [2648.0, 84.0], [2632.0, 87.0], [2640.0, 85.0], [2656.0, 1965.0], [2568.0, 82.66666666666667], [2560.0, 85.0], [2808.0, 1263.0], [2752.0, 1893.0], [2760.0, 2108.5], [2776.0, 2319.0], [2792.0, 2263.0], [2688.0, 91.0], [2704.0, 1863.0], [2712.0, 1850.0], [2744.0, 1491.0], [2736.0, 1496.0], [2728.0, 1638.0], [2720.0, 1913.0], [2832.0, 98.0], [2840.0, 93.0], [2824.0, 1711.0], [2816.0, 1743.0], [2872.0, 75.33333333333333], [2856.0, 1122.0], [3000.0, 13036.273706021006], [2984.0, 1708.0], [2944.0, 76.33333333333333], [2960.0, 70.0], [2968.0, 66.0], [2161.0, 4622.0], [2169.0, 4612.0], [2113.0, 4164.0], [2121.0, 6312.0], [2129.0, 1824.0], [2137.0, 1811.0], [2153.0, 5175.0], [2145.0, 1794.0], [2049.0, 2817.0], [2057.0, 2809.0], [2065.0, 2485.0], [2073.0, 2471.0], [2105.0, 1873.0], [2097.0, 1883.0], [2081.0, 2463.0], [2289.0, 4293.0], [2241.0, 4935.666666666667], [2249.0, 4340.0], [2257.0, 4140.0], [2281.0, 4294.5], [2273.0, 4295.0], [2177.0, 4604.0], [2185.0, 4410.0], [2193.0, 5357.5], [2233.0, 4376.0], [2225.0, 4206.0], [2217.0, 6292.0], [2209.0, 4391.0], [2425.0, 78.16666666666667], [2417.0, 78.5], [2329.0, 94.33333333333333], [2321.0, 95.0], [2305.0, 4067.0], [2337.0, 90.5], [2545.0, 97.8], [2553.0, 85.0], [2537.0, 99.0], [2433.0, 77.0], [2449.0, 48.0], [2465.0, 48.0], [2625.0, 110.0], [2673.0, 93.0], [2641.0, 85.0], [2649.0, 84.0], [2657.0, 1963.0], [2561.0, 83.5], [2617.0, 51.0], [2593.0, 79.0], [2809.0, 1262.0], [2761.0, 1881.0], [2753.0, 1892.0], [2769.0, 2116.0], [2793.0, 2261.0], [2705.0, 1863.0], [2713.0, 1848.0], [2745.0, 1898.0], [2729.0, 2366.0], [2721.0, 1912.0], [2841.0, 91.0], [2817.0, 1255.0], [2865.0, 79.0], [2857.0, 3256.0], [2945.0, 77.0], [2953.0, 75.0], [2985.0, 94.0], [1073.0, 16509.0], [1057.0, 14746.0], [1061.0, 9994.0], [1081.0, 14726.0], [1025.0, 16599.0], [1029.0, 14986.0], [1033.0, 14971.0], [1037.0, 16537.0], [1053.0, 16525.0], [1049.0, 14494.0], [1045.0, 14936.0], [1041.0, 14939.0], [1069.0, 9215.0], [1065.0, 16518.0], [1141.0, 14333.0], [1149.0, 14144.0], [1121.0, 15686.0], [1145.0, 15925.0], [1089.0, 16491.0], [1093.0, 15602.0], [1097.0, 15601.5], [1117.0, 14888.0], [1109.0, 14890.333333333334], [1105.0, 14583.5], [1133.0, 16399.0], [1129.0, 14846.0], [1209.0, 23621.0], [1213.0, 10488.0], [1185.0, 5288.0], [1189.0, 10506.0], [1193.0, 10503.0], [1205.0, 23627.0], [1201.0, 10203.0], [1161.0, 7595.0], [1157.0, 9765.0], [1181.0, 11091.0], [1177.0, 11247.0], [1173.0, 11255.0], [1169.0, 12858.0], [1197.0, 12269.0], [1225.0, 10178.0], [1265.0, 14832.666666666666], [1269.0, 10458.0], [1261.0, 10452.0], [1245.0, 12225.0], [1217.0, 11370.5], [1221.0, 10490.0], [1229.0, 10485.0], [1241.0, 12239.0], [1237.0, 20226.5], [1233.0, 9870.0], [1285.0, 10438.0], [1317.0, 16723.0], [1341.0, 9856.0], [1333.0, 9873.0], [1281.0, 10435.0], [1289.0, 10403.0], [1293.0, 10399.0], [1309.0, 16752.0], [1305.0, 10381.0], [1301.0, 10394.0], [1297.0, 23528.5], [1321.0, 23724.0], [1313.0, 10368.0], [1397.0, 16370.5], [1405.0, 9792.0], [1385.0, 10182.4], [1401.0, 9797.0], [1357.0, 9847.0], [1353.0, 16414.0], [1349.0, 9847.0], [1345.0, 9864.0], [1373.0, 9833.0], [1369.0, 16339.0], [1361.0, 9849.0], [1389.0, 9824.0], [1461.0, 13743.0], [1469.0, 10024.0], [1441.0, 10592.0], [1449.0, 15345.666666666666], [1445.0, 22828.0], [1465.0, 2816.0], [1421.0, 16123.0], [1413.0, 9792.0], [1437.0, 11473.0], [1429.0, 9734.0], [1425.0, 19634.5], [1453.0, 23101.0], [1525.0, 6581.0], [1533.0, 19967.0], [1505.0, 7640.0], [1509.0, 9394.0], [1513.0, 21023.0], [1529.0, 12943.0], [1521.0, 6583.0], [1485.0, 10005.0], [1481.0, 14619.0], [1477.0, 8256.0], [1473.0, 9139.5], [1497.0, 7653.0], [1545.0, 7314.0], [1585.0, 7973.0], [1597.0, 9791.0], [1569.0, 15280.0], [1537.0, 93.0], [1541.0, 7317.0], [1565.0, 15757.0], [1561.0, 16969.5], [1557.0, 7289.0], [1553.0, 11911.0], [1581.0, 15411.0], [1577.0, 15277.0], [1653.0, 15308.0], [1633.0, 7917.0], [1637.0, 7914.0], [1657.0, 15163.0], [1649.0, 7895.0], [1613.0, 12691.5], [1609.0, 11670.0], [1605.0, 15389.0], [1601.0, 7955.0], [1629.0, 15355.0], [1625.0, 9770.0], [1621.0, 15235.0], [1617.0, 15237.0], [1645.0, 15288.0], [1717.0, 7729.0], [1725.0, 5659.0], [1697.0, 9640.0], [1701.0, 15456.0], [1705.0, 15235.0], [1721.0, 9532.0], [1713.0, 15028.0], [1669.0, 7863.0], [1673.0, 7858.0], [1677.0, 15149.0], [1693.0, 7839.0], [1689.0, 9671.0], [1685.0, 7849.0], [1681.0, 12485.5], [1785.0, 4562.0], [1789.0, 6382.0], [1761.0, 7430.0], [1765.0, 4594.0], [1769.0, 6420.0], [1773.0, 6412.0], [1781.0, 6394.0], [1741.0, 10385.0], [1737.0, 13082.0], [1733.0, 5652.0], [1729.0, 10287.0], [1757.0, 5620.0], [1753.0, 10421.5], [1749.0, 5636.0], [1845.0, 12155.0], [1825.0, 4515.0], [1829.0, 4513.0], [1833.0, 5644.0], [1837.0, 5643.0], [1853.0, 5630.0], [1841.0, 12163.0], [1805.0, 9451.0], [1801.0, 12189.0], [1793.0, 12200.0], [1821.0, 12622.0], [1809.0, 12185.0], [1913.0, 12078.0], [1893.0, 4442.0], [1897.0, 5571.0], [1901.0, 12092.0], [1909.0, 12082.0], [1905.0, 4433.0], [1857.0, 11294.5], [1861.0, 8315.0], [1865.0, 11273.0], [1869.0, 4467.0], [1885.0, 10390.0], [1881.0, 12112.0], [1877.0, 10402.0], [1925.0, 5542.0], [1953.0, 5488.0], [1961.0, 5482.0], [1977.0, 5441.0], [1921.0, 5172.666666666667], [1929.0, 12043.0], [1933.0, 12037.0], [1949.0, 5496.0], [1945.0, 9797.5], [1941.0, 12465.0], [1965.0, 12001.0], [2041.0, 1384.0], [2017.0, 1404.0], [2021.0, 1401.0], [2045.0, 3862.0], [1997.0, 1422.0], [1989.0, 1428.0], [2013.0, 1407.0], [2009.0, 8375.0], [2005.0, 1415.0], [2001.0, 1417.0], [2162.0, 4620.0], [2114.0, 3015.5], [2122.0, 1860.0], [2170.0, 4611.0], [2154.0, 5175.0], [2146.0, 1793.0], [2074.0, 2467.0], [2066.0, 2484.0], [2058.0, 2808.0], [2050.0, 2816.0], [2098.0, 1880.0], [2082.0, 2463.0], [2274.0, 4295.0], [2242.0, 4183.0], [2250.0, 4328.0], [2266.0, 4295.5], [2290.0, 4294.0], [2186.0, 4408.0], [2178.0, 4603.0], [2194.0, 4230.0], [2202.0, 4396.0], [2234.0, 4202.0], [2226.0, 6284.0], [2218.0, 4386.0], [2210.0, 4389.0], [2410.0, 80.0], [2394.0, 82.0], [2418.0, 79.0], [2306.0, 4065.0], [2338.0, 89.0], [2530.0, 99.0], [2506.0, 103.33333333333333], [2458.0, 48.0], [2674.0, 93.0], [2626.0, 110.0], [2634.0, 86.0], [2650.0, 84.08333333333334], [2570.0, 82.5], [2594.0, 78.0], [2802.0, 1271.0], [2754.0, 1483.0], [2770.0, 2329.0], [2778.0, 1886.5], [2794.0, 2234.0], [2690.0, 90.10000000000001], [2698.0, 2408.3333333333335], [2746.0, 1897.0], [2730.0, 1501.0], [2834.0, 97.0], [2882.0, 69.0], [2842.0, 86.0], [2818.0, 1740.0], [2874.0, 75.0], [2954.0, 75.0], [2986.0, 84.0], [2978.0, 904.5], [2171.0, 4609.0], [2115.0, 1866.0], [2131.0, 1823.0], [2139.0, 2958.0], [2155.0, 5173.0], [2147.0, 5802.0], [2059.0, 2806.0], [2067.0, 2477.0], [2075.0, 2465.0], [2099.0, 1880.0], [2091.0, 3368.0], [2083.0, 2459.0], [2291.0, 4206.0], [2243.0, 4178.0], [2299.0, 4187.6], [2251.0, 4324.0], [2179.0, 4601.0], [2187.0, 6313.0], [2195.0, 4403.0], [2203.0, 4309.0], [2235.0, 4200.0], [2219.0, 4385.0], [2315.0, 4341.0], [2307.0, 3712.0], [2339.0, 89.0], [2499.0, 44.0], [2507.0, 103.0], [2523.0, 100.0], [2531.0, 99.0], [2435.0, 76.0], [2459.0, 48.0], [2651.0, 2228.0], [2659.0, 2133.5], [2619.0, 50.5], [2603.0, 78.5], [2795.0, 2234.0], [2811.0, 1260.0], [2763.0, 2334.5], [2771.0, 2328.0], [2779.0, 1859.0], [2803.0, 1514.5], [2787.0, 1854.25], [2699.0, 104.0], [2715.0, 1840.5], [2747.0, 1897.0], [2739.0, 1494.3333333333333], [2731.0, 2365.0], [2723.0, 1708.0], [2835.0, 96.0], [2899.0, 64.0], [2883.0, 68.0], [2931.0, 78.0], [2819.0, 1740.0], [2867.0, 78.0], [2955.0, 74.0], [2947.0, 76.6], [2971.0, 65.10000000000001], [2979.0, 98.0], [519.0, 19431.0], [539.0, 19257.0], [537.0, 19417.0], [533.0, 7682.0], [531.0, 10572.0], [529.0, 19424.0], [525.0, 21787.0], [523.0, 7692.0], [521.0, 10579.0], [517.0, 10582.0], [515.0, 21795.0], [513.0, 10586.0], [551.0, 19407.0], [571.0, 19390.0], [575.0, 7649.0], [569.0, 15483.666666666666], [559.0, 14973.5], [557.0, 19402.0], [555.0, 7664.0], [553.0, 10553.0], [549.0, 9597.0], [545.0, 19411.0], [605.0, 14920.0], [607.0, 10489.0], [603.0, 19347.0], [601.0, 10498.0], [599.0, 10501.0], [597.0, 7618.0], [595.0, 21717.0], [593.0, 7621.0], [591.0, 10511.0], [579.0, 10526.0], [577.0, 10533.0], [583.0, 13506.5], [581.0, 7638.0], [589.0, 19366.0], [587.0, 7629.0], [585.0, 7634.0], [637.0, 21139.0], [639.0, 17358.0], [635.0, 18782.0], [633.0, 21144.0], [631.0, 21150.0], [629.0, 9941.0], [627.0, 19285.0], [623.0, 62278.0], [611.0, 7592.0], [609.0, 21693.0], [615.0, 7586.0], [613.0, 19326.0], [619.0, 19291.0], [617.0, 19319.0], [669.0, 7972.0], [671.0, 20623.0], [667.0, 9422.0], [665.0, 6539.0], [663.0, 18282.0], [661.0, 6545.0], [659.0, 6547.0], [657.0, 6551.0], [653.0, 18294.0], [643.0, 8012.0], [641.0, 6570.0], [647.0, 6562.0], [645.0, 6566.0], [651.0, 18295.0], [649.0, 6560.5], [701.0, 6165.0], [703.0, 20261.0], [699.0, 9057.0], [697.0, 9058.0], [695.0, 9063.0], [691.0, 9066.0], [689.0, 9068.0], [687.0, 17924.0], [679.0, 7640.5], [677.0, 12036.0], [673.0, 20614.0], [681.0, 9083.0], [733.0, 58001.0], [735.0, 19523.0], [729.0, 19538.0], [711.0, 8364.0], [709.0, 16449.0], [707.0, 9037.0], [705.0, 9048.0], [727.0, 17182.0], [725.0, 19558.0], [723.0, 8347.0], [721.0, 8350.0], [719.0, 8354.0], [717.0, 146180.0], [715.0, 8361.0], [713.0, 5476.0], [765.0, 7330.0], [767.0, 16179.0], [753.0, 15368.0], [755.0, 18553.0], [757.0, 7342.0], [763.0, 18544.0], [743.0, 7980.0], [741.0, 19193.0], [739.0, 82500.0], [751.0, 16803.0], [749.0, 19177.0], [747.0, 76882.5], [745.0, 7972.0], [759.0, 7341.0], [795.0, 15435.0], [799.0, 11899.0], [785.0, 13478.0], [787.0, 12467.0], [783.0, 17455.0], [769.0, 16175.0], [771.0, 7321.0], [773.0, 18519.0], [775.0, 14735.0], [781.0, 15101.0], [791.0, 15439.0], [789.0, 8638.0], [803.0, 11892.0], [817.0, 14792.0], [831.0, 13285.333333333334], [801.0, 8621.0], [805.0, 11889.0], [807.0, 8613.0], [813.0, 14962.0], [811.0, 11459.0], [809.0, 15670.0], [821.0, 13156.0], [819.0, 13245.5], [859.0, 31558.0], [863.0, 15009.0], [857.0, 16215.333333333334], [847.0, 15213.0], [833.0, 11387.5], [835.0, 11249.0], [843.0, 13141.5], [853.0, 14421.666666666666], [849.0, 11246.0], [891.0, 14975.0], [889.0, 15155.0], [895.0, 7914.0], [881.0, 15165.0], [883.0, 14985.0], [885.0, 15162.0], [893.0, 15064.5], [869.0, 14747.0], [867.0, 14748.0], [865.0, 14750.0], [879.0, 13815.5], [875.0, 7942.0], [887.0, 15160.0], [925.0, 14957.0], [927.0, 15134.0], [913.0, 11176.0], [915.0, 15141.0], [917.0, 14961.0], [923.0, 16735.0], [921.0, 14960.0], [911.0, 14965.0], [897.0, 13168.0], [901.0, 12595.0], [899.0, 11182.0], [903.0, 7907.0], [907.0, 12591.0], [905.0, 14967.0], [919.0, 14961.0], [955.0, 10178.0], [953.0, 14800.0], [959.0, 14923.0], [945.0, 13153.333333333334], [947.0, 14674.0], [957.0, 15686.0], [931.0, 14952.0], [941.0, 15114.0], [939.0, 14942.0], [937.0, 15129.0], [951.0, 9409.0], [949.0, 15109.0], [989.0, 14888.0], [991.0, 9364.0], [977.0, 16681.0], [979.0, 10152.0], [981.0, 15076.0], [987.0, 15071.0], [985.0, 15074.0], [975.0, 15086.0], [961.0, 10170.0], [963.0, 15097.0], [965.0, 15096.0], [967.0, 14914.0], [973.0, 9387.0], [969.0, 15089.0], [983.0, 15075.0], [1017.0, 15806.0], [1019.0, 14917.5], [1011.0, 15032.5], [1023.0, 16601.0], [1009.0, 16631.0], [999.0, 16654.0], [995.0, 14883.0], [993.0, 16660.0], [1007.0, 16633.0], [1005.0, 16641.0], [1003.0, 14872.0], [1001.0, 16652.5], [1015.0, 16604.0], [1013.0, 16604.0], [1074.0, 9211.0], [1086.0, 15611.5], [1058.0, 9225.0], [1062.0, 9223.0], [1066.0, 9221.0], [1078.0, 14729.0], [1038.0, 14939.0], [1034.0, 16558.0], [1030.0, 16581.0], [1026.0, 15000.0], [1054.0, 9226.0], [1050.0, 10002.0], [1046.0, 14755.0], [1042.0, 16534.0], [1070.0, 9214.0], [1146.0, 14326.0], [1150.0, 15919.0], [1122.0, 14887.0], [1126.0, 15557.5], [1142.0, 14154.0], [1138.0, 10468.0], [1094.0, 14714.0], [1110.0, 14712.0], [1106.0, 14711.0], [1134.0, 14623.0], [1166.0, 11799.333333333334], [1202.0, 12267.0], [1214.0, 10487.0], [1210.0, 16870.0], [1182.0, 11089.0], [1154.0, 14315.5], [1158.0, 9763.0], [1162.0, 7594.0], [1178.0, 6902.0], [1174.0, 11254.0], [1170.0, 12857.0], [1186.0, 4958.0], [1230.0, 12243.0], [1266.0, 13494.0], [1274.0, 10447.0], [1270.0, 10448.0], [1226.0, 23607.0], [1222.0, 9878.0], [1218.0, 23891.0], [1246.0, 12222.0], [1238.0, 10481.0], [1262.0, 15418.666666666666], [1250.0, 11337.5], [1338.0, 16561.5], [1342.0, 9866.0], [1314.0, 23484.0], [1318.0, 10347.0], [1322.0, 16247.0], [1334.0, 9858.0], [1330.0, 9865.0], [1294.0, 10398.0], [1290.0, 23533.0], [1286.0, 12197.0], [1310.0, 10372.0], [1306.0, 10380.0], [1302.0, 10393.0], [1298.0, 12165.0], [1326.0, 9866.0], [1350.0, 9846.0], [1406.0, 9801.0], [1402.0, 22927.0], [1394.0, 16372.5], [1374.0, 9832.0], [1358.0, 9852.0], [1354.0, 9854.0], [1370.0, 9835.0], [1366.0, 16403.0], [1362.0, 9838.0], [1390.0, 9828.0], [1378.0, 13022.0], [1462.0, 11412.0], [1458.0, 11438.5], [1470.0, 10022.0], [1446.0, 11466.0], [1466.0, 2814.0], [1422.0, 9752.0], [1410.0, 9796.0], [1438.0, 11472.0], [1434.0, 10595.5], [1430.0, 16103.0], [1426.0, 9737.0], [1450.0, 11465.0], [1534.0, 19965.0], [1506.0, 14009.0], [1522.0, 6582.0], [1502.0, 15221.5], [1474.0, 21656.0], [1478.0, 21375.0], [1486.0, 10001.0], [1498.0, 7646.0], [1490.0, 7657.0], [1514.0, 9377.0], [1510.0, 9393.0], [1586.0, 15267.0], [1598.0, 7961.0], [1574.0, 12894.666666666666], [1570.0, 7986.0], [1578.0, 15275.0], [1594.0, 15508.5], [1546.0, 7312.0], [1542.0, 7317.0], [1538.0, 7318.0], [1566.0, 15756.0], [1558.0, 7285.0], [1554.0, 18658.0], [1582.0, 7974.0], [1654.0, 15307.0], [1662.0, 15339.5], [1638.0, 15345.0], [1658.0, 15161.0], [1650.0, 9723.0], [1630.0, 15354.0], [1602.0, 7954.0], [1606.0, 7953.0], [1614.0, 7948.0], [1610.0, 14981.0], [1626.0, 15592.0], [1622.0, 14970.0], [1646.0, 9729.0], [1642.0, 15194.0], [1726.0, 7486.0], [1714.0, 15385.0], [1706.0, 9628.0], [1710.0, 9627.0], [1698.0, 9635.0], [1702.0, 9629.0], [1678.0, 15291.0], [1674.0, 15293.0], [1670.0, 15154.0], [1666.0, 11689.5], [1694.0, 9646.0], [1690.0, 7840.0], [1686.0, 15284.0], [1682.0, 15146.0], [1786.0, 4555.0], [1782.0, 12336.0], [1762.0, 7427.0], [1766.0, 4595.0], [1770.0, 6420.0], [1774.0, 12237.0], [1790.0, 12642.0], [1778.0, 6408.5], [1738.0, 5646.0], [1734.0, 5651.0], [1730.0, 7483.0], [1758.0, 13055.0], [1750.0, 13068.0], [1746.0, 5638.0], [1854.0, 10439.0], [1830.0, 4513.0], [1826.0, 10457.0], [1838.0, 10450.0], [1846.0, 10441.0], [1842.0, 10448.0], [1806.0, 12186.0], [1802.0, 4531.0], [1798.0, 7506.5], [1794.0, 12192.0], [1822.0, 10464.0], [1818.0, 11584.6], [1814.0, 12183.0], [1910.0, 12080.0], [1906.0, 12089.0], [1914.0, 5555.0], [1918.0, 8812.5], [1890.0, 11245.0], [1894.0, 12097.0], [1902.0, 10379.0], [1858.0, 10434.0], [1866.0, 5605.0], [1870.0, 12120.0], [1882.0, 5588.0], [1878.0, 4457.0], [1874.0, 12116.0], [1978.0, 4298.0], [1974.0, 8577.5], [1982.0, 7640.5], [1954.0, 10297.0], [1958.0, 11373.0], [1962.0, 12004.0], [1926.0, 5532.0], [1930.0, 5518.0], [1934.0, 12030.0], [1950.0, 5494.0], [1946.0, 5499.0], [1942.0, 4366.0], [1938.0, 7908.5], [1966.0, 10287.0], [2046.0, 3859.0], [2018.0, 1405.0], [2022.0, 1399.0], [2026.0, 2653.5], [2042.0, 3880.0], [2038.0, 1385.0], [2034.0, 2648.5], [1998.0, 1421.0], [1994.0, 1426.0], [1990.0, 1428.0], [1986.0, 10467.75], [2010.0, 1410.0], [2006.0, 1414.0], [2002.0, 3930.0], [2164.0, 4619.0], [2172.0, 4609.0], [2124.0, 3007.0], [2140.0, 5820.0], [2156.0, 5173.0], [2148.0, 1789.0], [2068.0, 2476.0], [2060.0, 2806.0], [2052.0, 2812.5], [2108.0, 3355.6666666666665], [2100.0, 1878.0], [2092.0, 1883.0], [2084.0, 2444.0], [2276.0, 4295.0], [2244.0, 4343.0], [2252.0, 4321.0], [2300.0, 4292.0], [2188.0, 6313.0], [2180.0, 4591.0], [2196.0, 4225.0], [2204.0, 4395.0], [2236.0, 4191.0], [2220.0, 4383.0], [2212.0, 4389.0], [2412.0, 80.33333333333333], [2372.0, 67.5], [2388.0, 82.0], [2428.0, 78.14285714285714], [2404.0, 80.0], [2332.0, 93.0], [2324.0, 94.0], [2316.0, 106.0], [2340.0, 88.0], [2532.0, 99.0], [2500.0, 44.0], [2540.0, 98.85714285714285], [2468.0, 47.1], [2452.0, 48.0], [2460.0, 48.0], [2660.0, 3083.0], [2652.0, 4132.0], [2588.0, 79.5], [2572.0, 81.0], [2564.0, 83.5], [2604.0, 77.66666666666667], [2596.0, 78.0], [2796.0, 1777.0], [2812.0, 1260.0], [2756.0, 1480.0], [2772.0, 2322.0], [2804.0, 1392.75], [2788.0, 1842.0], [2700.0, 104.0], [2708.0, 1860.0], [2716.0, 1839.0], [2748.0, 1487.0], [2732.0, 2363.0], [2724.0, 1504.0], [2940.0, 77.0], [2844.0, 86.0], [2828.0, 105734.25], [2820.0, 1737.0], [2868.0, 77.0], [2860.0, 79.0], [2980.0, 501.25000000000006], [2972.0, 1712.0], [2173.0, 4608.0], [2117.0, 4089.0], [2125.0, 1857.0], [2133.0, 1823.5], [2141.0, 1802.0], [2165.0, 4618.0], [2157.0, 5111.0], [2061.0, 2801.0], [2069.0, 2475.0], [2077.0, 2464.0], [2109.0, 4167.0], [2101.0, 4172.0], [2085.0, 1886.0], [2285.0, 4294.0], [2301.0, 4205.0], [2245.0, 4344.0], [2269.0, 4296.0], [2293.0, 4293.0], [2181.0, 4586.0], [2189.0, 4406.0], [2197.0, 4398.0], [2205.0, 4394.0], [2237.0, 4359.0], [2229.0, 4263.0], [2221.0, 4208.0], [2213.0, 6293.0], [2333.0, 92.0], [2413.0, 80.0], [2405.0, 79.5], [2429.0, 78.0], [2317.0, 96.0], [2309.0, 3712.0], [2365.0, 69.5], [2357.0, 458.7058823529412], [2501.0, 43.6774193548387], [2509.0, 101.0], [2437.0, 76.66666666666667], [2453.0, 48.0], [2461.0, 49.0], [2645.0, 85.0], [2653.0, 4130.0], [2677.0, 93.0], [2669.0, 95.0], [2589.0, 79.28571428571429], [2565.0, 83.0], [2805.0, 1266.0], [2797.0, 1759.0], [2757.0, 2116.0], [2765.0, 1902.0], [2773.0, 1864.0], [2781.0, 2313.0], [2789.0, 2293.0], [2709.0, 1858.0], [2717.0, 1510.0], [2749.0, 2351.0], [2741.0, 1696.0], [2725.0, 1503.0], [2925.0, 49.4375], [2837.0, 94.0], [2941.0, 76.66666666666667], [2821.0, 1736.0], [2877.0, 74.33333333333333], [2861.0, 79.0], [2853.0, 85.11111111111113], [2909.0, 62.631578947368425], [2901.0, 64.0], [2949.0, 76.0], [2981.0, 1711.0], [1079.0, 16505.0], [1083.0, 12852.5], [1087.0, 14900.0], [1059.0, 14745.0], [1075.0, 14732.0], [1055.0, 14926.0], [1027.0, 16596.0], [1031.0, 31323.0], [1035.0, 16538.0], [1039.0, 9240.0], [1051.0, 9231.0], [1047.0, 16531.0], [1043.0, 16533.0], [1071.0, 9984.0], [1063.0, 14486.0], [1147.0, 15922.0], [1151.0, 14319.0], [1127.0, 16444.0], [1123.0, 14851.0], [1143.0, 14331.0], [1119.0, 13861.25], [1095.0, 9192.0], [1103.0, 14831.333333333334], [1111.0, 16485.0], [1135.0, 16398.0], [1131.0, 15644.0], [1203.0, 12267.0], [1215.0, 9884.0], [1187.0, 4955.0], [1191.0, 11389.0], [1195.0, 11391.5], [1207.0, 11378.5], [1167.0, 11266.0], [1163.0, 12865.0], [1159.0, 8756.0], [1155.0, 15912.0], [1183.0, 11088.0], [1179.0, 6900.0], [1175.0, 11254.0], [1171.0, 12855.0], [1199.0, 11383.5], [1223.0, 10480.0], [1275.0, 10457.0], [1267.0, 10449.0], [1219.0, 9880.0], [1231.0, 23604.0], [1243.0, 11349.5], [1239.0, 10480.0], [1235.0, 10476.0], [1331.0, 14334.333333333334], [1343.0, 23263.0], [1311.0, 23494.0], [1283.0, 13151.333333333334], [1287.0, 10405.0], [1291.0, 10401.0], [1295.0, 10398.0], [1307.0, 23511.0], [1299.0, 10396.0], [1327.0, 9874.0], [1319.0, 10329.0], [1315.0, 16732.0], [1403.0, 9803.0], [1407.0, 16169.0], [1379.0, 9828.0], [1387.0, 9829.0], [1399.0, 12989.0], [1395.0, 9810.0], [1359.0, 9852.0], [1355.0, 9843.0], [1351.0, 9846.0], [1347.0, 9859.0], [1371.0, 9835.0], [1391.0, 9822.0], [1463.0, 3280.0], [1471.0, 8262.0], [1443.0, 11470.0], [1467.0, 10026.0], [1459.0, 11438.0], [1423.0, 9751.0], [1419.0, 14733.25], [1439.0, 11471.0], [1435.0, 11474.0], [1431.0, 9731.0], [1427.0, 9737.0], [1455.0, 13745.5], [1531.0, 8332.0], [1535.0, 8307.0], [1507.0, 9395.0], [1511.0, 9391.0], [1527.0, 7457.0], [1487.0, 1632.0], [1479.0, 10012.0], [1475.0, 8257.0], [1503.0, 9400.0], [1495.0, 8242.666666666666], [1491.0, 7657.0], [1519.0, 6587.333333333333], [1515.0, 862.0], [1587.0, 15408.0], [1599.0, 15252.0], [1595.0, 15400.0], [1591.0, 15265.0], [1567.0, 15018.0], [1539.0, 7316.0], [1551.0, 10145.5], [1547.0, 7307.0], [1563.0, 13321.0], [1559.0, 7273.0], [1555.0, 7295.0], [1579.0, 7977.0], [1571.0, 15422.0], [1651.0, 15177.0], [1659.0, 15303.0], [1663.0, 15301.0], [1635.0, 15280.0], [1639.0, 9732.0], [1655.0, 9699.0], [1615.0, 15240.0], [1611.0, 7951.0], [1607.0, 15246.0], [1603.0, 7954.0], [1631.0, 15354.0], [1627.0, 9753.0], [1619.0, 15236.0], [1647.0, 7897.0], [1723.0, 5659.0], [1727.0, 13092.0], [1699.0, 9634.0], [1711.0, 10060.2], [1719.0, 9533.0], [1715.0, 15503.0], [1695.0, 14564.0], [1667.0, 9692.0], [1671.0, 9688.0], [1675.0, 15292.0], [1679.0, 7854.0], [1687.0, 15283.0], [1779.0, 6405.0], [1791.0, 10487.0], [1763.0, 4595.0], [1771.0, 6417.0], [1775.0, 6410.0], [1743.0, 7470.0], [1739.0, 7474.0], [1735.0, 5650.0], [1731.0, 13306.0], [1759.0, 7442.0], [1755.0, 5620.0], [1751.0, 5627.0], [1747.0, 7466.0], [1847.0, 5631.0], [1851.0, 9381.75], [1855.0, 5629.0], [1827.0, 12171.0], [1831.0, 4513.0], [1835.0, 10453.0], [1843.0, 10448.0], [1807.0, 5662.0], [1799.0, 10476.0], [1823.0, 12174.0], [1819.0, 5658.0], [1811.0, 4527.0], [1911.0, 12079.0], [1907.0, 10372.0], [1895.0, 12098.0], [1899.0, 11238.0], [1915.0, 9343.0], [1887.0, 11247.0], [1859.0, 10432.0], [1867.0, 12127.0], [1871.0, 12562.0], [1883.0, 10393.0], [1879.0, 5590.0], [1975.0, 5454.0], [1979.0, 12395.0], [1959.0, 12007.0], [1963.0, 12004.0], [1951.0, 5494.0], [1923.0, 9032.0], [1927.0, 5531.0], [1931.0, 4382.0], [1935.0, 4371.0], [1947.0, 5498.0], [1943.0, 12023.0], [1939.0, 5503.0], [2043.0, 1350.0], [2039.0, 1385.0], [2019.0, 1403.0], [2047.0, 1331.0], [2031.0, 3134.0], [2027.0, 8361.0], [2035.0, 1390.0], [1995.0, 1426.0], [1987.0, 1429.0], [2015.0, 1406.0], [2011.0, 8374.0], [2007.0, 1413.0], [2003.0, 3930.0], [2150.0, 1786.5], [2166.0, 4616.0], [2126.0, 1856.0], [2142.0, 1800.0], [2158.0, 5109.0], [2078.0, 2464.0], [2062.0, 2799.0], [2054.0, 2812.0], [2110.0, 1869.0], [2102.0, 4172.0], [2086.0, 4182.0], [2254.0, 4234.0], [2246.0, 6247.0], [2262.0, 4298.0], [2270.0, 4296.0], [2286.0, 4294.0], [2190.0, 4405.0], [2206.0, 4220.0], [2214.0, 4214.0], [2398.0, 81.0], [2406.0, 80.0], [2334.0, 91.0], [2326.0, 94.0], [2366.0, 69.0], [2558.0, 84.0], [2542.0, 98.2], [2438.0, 50.0], [2454.0, 48.0], [2462.0, 48.333333333333336], [2662.0, 3075.0], [2678.0, 92.0], [2646.0, 84.0], [2654.0, 2225.0], [2582.0, 80.0], [2622.0, 49.15384615384615], [2606.0, 52.0], [2598.0, 78.0], [2806.0, 1264.0], [2758.0, 1479.0], [2774.0, 2320.0], [2782.0, 1440.0], [2814.0, 1421.3333333333333], [2694.0, 86.25], [2702.0, 1868.0], [2710.0, 1857.0], [2718.0, 2371.0], [2734.0, 2363.0], [2886.0, 68.0], [2830.0, 98.0], [2822.0, 1244.0], [2862.0, 79.0], [2854.0, 1123.0], [2950.0, 76.0], [2167.0, 4614.0], [2151.0, 6123.0], [2175.0, 4607.0], [2119.0, 5235.5], [2127.0, 1857.0], [2135.0, 3827.0], [2143.0, 1799.0], [2159.0, 4624.0], [2111.0, 5877.0], [2055.0, 2812.0], [2063.0, 2488.0], [2071.0, 2472.0], [2103.0, 1874.0], [2095.0, 1882.3333333333333], [2087.0, 6336.0], [2255.0, 6225.0], [2247.0, 4341.0], [2263.0, 4297.0], [2271.0, 4121.0], [2239.0, 4359.0], [2183.0, 4412.0], [2191.0, 6311.0], [2199.0, 5264.5], [2231.0, 4378.0], [2223.0, 4381.5], [2415.0, 78.87499999999999], [2335.0, 91.0], [2423.0, 78.0], [2407.0, 80.0], [2327.0, 94.0], [2319.0, 95.0], [2311.0, 4662.5], [2559.0, 84.0], [2551.0, 85.0], [2535.0, 99.0], [2671.0, 95.4], [2663.0, 953.0], [2655.0, 2223.0], [2575.0, 81.0], [2567.0, 83.0], [2623.0, 50.0], [2599.0, 78.75], [2807.0, 1750.0], [2815.0, 1256.0], [2775.0, 1456.0], [2783.0, 1842.0], [2791.0, 1811.0], [2751.0, 1486.0], [2695.0, 2408.0], [2703.0, 1867.0], [2711.0, 1852.0], [2719.0, 1915.0], [2743.0, 1695.5], [2735.0, 2363.0], [2839.0, 93.0], [2943.0, 77.0], [2831.0, 98.5], [2823.0, 1712.0], [2871.0, 76.0], [2863.0, 79.0], [2855.0, 1122.0], [2903.0, 65.0], [2959.0, 73.25], [2983.0, 902.5], [2975.0, 98.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2837.1728260869613, 13203.493840579738]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1010.0, "minX": 1.6830246E12, "maxY": 83591.35, "series": [{"data": [[1.68302472E12, 58013.7], [1.6830249E12, 5676.45], [1.6830246E12, 46387.53333333333], [1.68302478E12, 83591.35], [1.68302496E12, 1452.7166666666667], [1.68302466E12, 70468.11666666667], [1.68302484E12, 55488.333333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302472E12, 40997.583333333336], [1.6830249E12, 4376.666666666667], [1.6830246E12, 34129.583333333336], [1.68302478E12, 59085.0], [1.68302496E12, 1010.0], [1.68302466E12, 51417.416666666664], [1.68302484E12, 41115.416666666664]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302496E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7313.103133903148, "minX": 1.6830246E12, "maxY": 95048.19999999997, "series": [{"data": [[1.68302472E12, 12819.879080270988], [1.6830249E12, 26079.636538461535], [1.6830246E12, 10273.06609124539], [1.68302478E12, 7313.103133903148], [1.68302496E12, 95048.19999999997], [1.68302466E12, 22777.492571428633], [1.68302484E12, 9101.287584373069]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302496E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7313.095726495725, "minX": 1.6830246E12, "maxY": 95048.19166666668, "series": [{"data": [[1.68302472E12, 12819.870868404809], [1.6830249E12, 26079.628846153857], [1.6830246E12, 10273.03279901355], [1.68302478E12, 7313.095726495725], [1.68302496E12, 95048.19166666668], [1.68302466E12, 22627.077714285726], [1.68302484E12, 9014.77255062385]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302496E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.7416666666666665, "minX": 1.6830246E12, "maxY": 10079.25374666392, "series": [{"data": [[1.68302472E12, 10079.25374666392], [1.6830249E12, 489.75384615384667], [1.6830246E12, 23.911467324290996], [1.68302478E12, 1935.169088319089], [1.68302496E12, 0.7416666666666665], [1.68302466E12, 3591.3182040816173], [1.68302484E12, 1467.938637758236]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302496E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.6830246E12, "maxY": 231821.0, "series": [{"data": [[1.68302472E12, 144234.0], [1.6830249E12, 148417.0], [1.6830246E12, 58635.0], [1.68302478E12, 211439.0], [1.68302496E12, 100131.0], [1.68302466E12, 100246.0], [1.68302484E12, 231821.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302472E12, 15747.0], [1.6830249E12, 51625.8], [1.6830246E12, 22453.4], [1.68302478E12, 14015.0], [1.68302496E12, 100128.9], [1.68302466E12, 76905.0], [1.68302484E12, 17464.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302472E12, 136231.0], [1.6830249E12, 73064.9], [1.6830246E12, 49424.44], [1.68302478E12, 181482.0], [1.68302496E12, 100131.0], [1.68302466E12, 100224.0], [1.68302484E12, 101870.36000001672]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302472E12, 131283.0], [1.6830249E12, 64752.9], [1.6830246E12, 40499.0], [1.68302478E12, 32955.95], [1.68302496E12, 100130.0], [1.68302466E12, 100021.5], [1.68302484E12, 31561.7]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302472E12, 15.0], [1.6830249E12, 7586.0], [1.6830246E12, 19.0], [1.68302478E12, 15.0], [1.68302496E12, 76097.0], [1.68302466E12, 23.0], [1.68302484E12, 31.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302472E12, 103.0], [1.6830249E12, 22292.5], [1.6830246E12, 7834.0], [1.68302478E12, 89.0], [1.68302496E12, 100091.0], [1.68302466E12, 14541.0], [1.68302484E12, 1435.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302496E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 68.0, "minX": 1.0, "maxY": 105734.0, "series": [{"data": [[2.0, 59703.0], [3.0, 73057.0], [4.0, 28688.0], [5.0, 25824.0], [6.0, 11088.5], [7.0, 10896.0], [8.0, 6778.0], [9.0, 14338.0], [10.0, 14449.0], [11.0, 14571.0], [12.0, 20551.0], [14.0, 109.0], [15.0, 5836.0], [17.0, 11529.5], [18.0, 15885.0], [19.0, 16232.0], [20.0, 91417.5], [21.0, 21832.0], [22.0, 7308.0], [23.0, 862.0], [26.0, 17719.0], [27.0, 13583.0], [28.0, 32246.0], [29.0, 7983.5], [31.0, 15830.0], [32.0, 95.0], [37.0, 2484.0], [41.0, 13288.0], [40.0, 67294.0], [45.0, 133.0], [44.0, 16817.0], [48.0, 6297.0], [52.0, 1859.0], [54.0, 14010.5], [55.0, 39273.0], [56.0, 22263.5], [57.0, 1255.0], [60.0, 99.0], [61.0, 711.0], [63.0, 10961.5], [62.0, 13884.5], [64.0, 13598.5], [69.0, 14653.0], [71.0, 2841.0], [68.0, 1795.5], [70.0, 13935.0], [72.0, 14996.5], [73.0, 17358.0], [79.0, 13640.0], [78.0, 77.0], [80.0, 1895.0], [87.0, 89.0], [85.0, 6458.0], [91.0, 91.0], [88.0, 86.5], [90.0, 78.0], [93.0, 2243.0], [94.0, 1174.5], [92.0, 89.0], [96.0, 96.0], [98.0, 111.0], [97.0, 6165.5], [103.0, 7682.0], [102.0, 78.0], [101.0, 80.0], [113.0, 135.0], [114.0, 1957.0], [112.0, 99.0], [118.0, 126.0], [116.0, 56313.0], [117.0, 10486.0], [121.0, 90.0], [120.0, 22962.5], [126.0, 87.0], [125.0, 15156.0], [135.0, 5441.0], [131.0, 80.0], [138.0, 20422.5], [144.0, 13068.0], [146.0, 8725.5], [148.0, 7055.5], [156.0, 14733.0], [152.0, 73.0], [165.0, 9427.0], [160.0, 15105.0], [166.0, 372.0], [163.0, 83.0], [162.0, 9866.0], [169.0, 19543.0], [168.0, 16871.5], [175.0, 68.0], [183.0, 86.0], [182.0, 97.0], [178.0, 99.0], [188.0, 88.0], [184.0, 97.0], [190.0, 4437.5], [185.0, 86.0], [189.0, 96.0], [193.0, 15474.0], [197.0, 79.0], [196.0, 81.0], [203.0, 8837.0], [209.0, 13102.0], [208.0, 13348.5], [213.0, 83.0], [221.0, 12291.0], [218.0, 80.0], [216.0, 12526.0], [220.0, 79.0], [229.0, 14811.0], [231.0, 14939.0], [233.0, 83.0], [255.0, 100060.0], [250.0, 18347.0], [274.0, 4395.0], [273.0, 837.0], [284.0, 93.5], [278.0, 79.0], [285.0, 145.5], [276.0, 80.0], [300.0, 12746.0], [303.0, 16256.0], [297.0, 14923.0], [314.0, 75.0], [330.0, 15530.0], [338.0, 13835.0], [344.0, 140.0], [348.0, 89.0], [337.0, 77086.0], [350.0, 84.0], [365.0, 14642.0], [404.0, 5037.5], [412.0, 12954.5], [430.0, 86.0], [476.0, 159.0], [1.0, 48182.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[79.0, 52310.5], [57.0, 105734.0], [116.0, 58328.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 476.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100060.0, "series": [{"data": [[2.0, 59703.0], [3.0, 73057.0], [4.0, 28688.0], [5.0, 25824.0], [6.0, 11088.5], [7.0, 10896.0], [8.0, 6778.0], [9.0, 14338.0], [10.0, 14449.0], [11.0, 14571.0], [12.0, 20551.0], [14.0, 109.0], [15.0, 5836.0], [17.0, 11529.5], [18.0, 15885.0], [19.0, 16232.0], [20.0, 91417.5], [21.0, 21832.0], [22.0, 7308.0], [23.0, 862.0], [26.0, 17719.0], [27.0, 13583.0], [28.0, 32246.0], [29.0, 7983.5], [31.0, 15830.0], [32.0, 95.0], [37.0, 2484.0], [41.0, 13288.0], [40.0, 67294.0], [45.0, 133.0], [44.0, 16817.0], [48.0, 6297.0], [52.0, 1859.0], [54.0, 14010.5], [55.0, 39273.0], [56.0, 22263.5], [57.0, 1255.0], [60.0, 99.0], [61.0, 711.0], [63.0, 10961.5], [62.0, 13884.5], [64.0, 13598.5], [69.0, 14653.0], [71.0, 2841.0], [68.0, 1795.5], [70.0, 13935.0], [72.0, 14996.5], [73.0, 17358.0], [79.0, 13640.0], [78.0, 77.0], [80.0, 1895.0], [87.0, 89.0], [85.0, 6458.0], [91.0, 91.0], [88.0, 86.5], [90.0, 78.0], [93.0, 2243.0], [94.0, 1174.0], [92.0, 89.0], [96.0, 96.0], [98.0, 111.0], [97.0, 6165.5], [103.0, 7682.0], [102.0, 78.0], [101.0, 80.0], [113.0, 135.0], [114.0, 1957.0], [112.0, 99.0], [118.0, 126.0], [116.0, 56313.0], [117.0, 10486.0], [121.0, 90.0], [120.0, 22962.5], [126.0, 87.0], [125.0, 15156.0], [135.0, 5441.0], [131.0, 80.0], [138.0, 20422.5], [144.0, 13068.0], [146.0, 8725.5], [148.0, 7055.5], [156.0, 14733.0], [152.0, 73.0], [165.0, 9427.0], [160.0, 15105.0], [166.0, 372.0], [163.0, 83.0], [162.0, 9866.0], [169.0, 19543.0], [168.0, 16871.5], [175.0, 68.0], [183.0, 86.0], [182.0, 97.0], [178.0, 99.0], [188.0, 88.0], [184.0, 97.0], [190.0, 4437.5], [185.0, 86.0], [189.0, 96.0], [193.0, 15474.0], [197.0, 79.0], [196.0, 81.0], [203.0, 8837.0], [209.0, 13102.0], [208.0, 13348.5], [213.0, 83.0], [221.0, 12291.0], [218.0, 79.5], [216.0, 12526.0], [220.0, 79.0], [229.0, 14811.0], [231.0, 14939.0], [233.0, 83.0], [255.0, 100060.0], [250.0, 18347.0], [274.0, 4395.0], [273.0, 837.0], [284.0, 93.5], [278.0, 79.0], [285.0, 145.5], [276.0, 80.0], [300.0, 12746.0], [303.0, 16256.0], [297.0, 14923.0], [314.0, 75.0], [330.0, 15530.0], [338.0, 13835.0], [344.0, 140.0], [348.0, 89.0], [337.0, 77086.0], [350.0, 84.0], [365.0, 14642.0], [404.0, 5037.5], [412.0, 12954.5], [430.0, 86.0], [476.0, 159.0], [1.0, 48182.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[79.0, 0.0], [57.0, 0.0], [116.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 476.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.2, "minX": 1.68302454E12, "maxY": 116.53333333333333, "series": [{"data": [[1.68302472E12, 78.2], [1.6830246E12, 98.13333333333334], [1.68302478E12, 116.53333333333333], [1.68302466E12, 76.66666666666667], [1.68302484E12, 81.26666666666667], [1.68302454E12, 9.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302484E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6830246E12, "maxY": 117.0, "series": [{"data": [[1.68302472E12, 81.18333333333334], [1.6830249E12, 8.666666666666666], [1.6830246E12, 67.58333333333333], [1.68302478E12, 117.0], [1.68302496E12, 2.0], [1.68302466E12, 101.81666666666666], [1.68302484E12, 81.41666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68302466E12, 0.26666666666666666], [1.68302484E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302496E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6830246E12, "maxY": 117.0, "series": [{"data": [[1.68302472E12, 81.18333333333334], [1.6830249E12, 8.666666666666666], [1.6830246E12, 67.58333333333333], [1.68302478E12, 117.0], [1.68302496E12, 2.0], [1.68302466E12, 101.81666666666666], [1.68302484E12, 81.41666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68302466E12, 0.26666666666666666], [1.68302484E12, 0.06666666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302496E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6830246E12, "maxY": 117.0, "series": [{"data": [[1.68302472E12, 81.18333333333334], [1.6830249E12, 8.666666666666666], [1.6830246E12, 67.58333333333333], [1.68302478E12, 117.0], [1.68302496E12, 2.0], [1.68302466E12, 101.81666666666666], [1.68302484E12, 81.41666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68302466E12, 0.26666666666666666], [1.68302484E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302496E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

