/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "maxY": 209840.0, "series": [{"data": [[0.0, 13.0], [0.1, 24.0], [0.2, 25.0], [0.3, 27.0], [0.4, 31.0], [0.5, 33.0], [0.6, 34.0], [0.7, 35.0], [0.8, 37.0], [0.9, 40.0], [1.0, 42.0], [1.1, 44.0], [1.2, 46.0], [1.3, 48.0], [1.4, 49.0], [1.5, 49.0], [1.6, 50.0], [1.7, 51.0], [1.8, 52.0], [1.9, 53.0], [2.0, 54.0], [2.1, 54.0], [2.2, 55.0], [2.3, 55.0], [2.4, 56.0], [2.5, 58.0], [2.6, 58.0], [2.7, 60.0], [2.8, 60.0], [2.9, 61.0], [3.0, 61.0], [3.1, 61.0], [3.2, 62.0], [3.3, 62.0], [3.4, 62.0], [3.5, 62.0], [3.6, 62.0], [3.7, 63.0], [3.8, 63.0], [3.9, 64.0], [4.0, 64.0], [4.1, 64.0], [4.2, 64.0], [4.3, 65.0], [4.4, 65.0], [4.5, 66.0], [4.6, 66.0], [4.7, 67.0], [4.8, 67.0], [4.9, 67.0], [5.0, 67.0], [5.1, 68.0], [5.2, 68.0], [5.3, 68.0], [5.4, 69.0], [5.5, 69.0], [5.6, 70.0], [5.7, 70.0], [5.8, 70.0], [5.9, 71.0], [6.0, 71.0], [6.1, 71.0], [6.2, 71.0], [6.3, 71.0], [6.4, 72.0], [6.5, 72.0], [6.6, 72.0], [6.7, 73.0], [6.8, 73.0], [6.9, 73.0], [7.0, 73.0], [7.1, 73.0], [7.2, 74.0], [7.3, 74.0], [7.4, 74.0], [7.5, 74.0], [7.6, 75.0], [7.7, 75.0], [7.8, 75.0], [7.9, 75.0], [8.0, 75.0], [8.1, 75.0], [8.2, 76.0], [8.3, 76.0], [8.4, 76.0], [8.5, 76.0], [8.6, 76.0], [8.7, 77.0], [8.8, 77.0], [8.9, 77.0], [9.0, 78.0], [9.1, 78.0], [9.2, 78.0], [9.3, 78.0], [9.4, 78.0], [9.5, 78.0], [9.6, 78.0], [9.7, 79.0], [9.8, 79.0], [9.9, 79.0], [10.0, 79.0], [10.1, 79.0], [10.2, 79.0], [10.3, 79.0], [10.4, 79.0], [10.5, 80.0], [10.6, 80.0], [10.7, 80.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 80.0], [11.2, 81.0], [11.3, 81.0], [11.4, 81.0], [11.5, 81.0], [11.6, 81.0], [11.7, 81.0], [11.8, 82.0], [11.9, 82.0], [12.0, 82.0], [12.1, 82.0], [12.2, 82.0], [12.3, 82.0], [12.4, 82.0], [12.5, 82.0], [12.6, 83.0], [12.7, 83.0], [12.8, 83.0], [12.9, 83.0], [13.0, 83.0], [13.1, 83.0], [13.2, 83.0], [13.3, 83.0], [13.4, 84.0], [13.5, 84.0], [13.6, 84.0], [13.7, 84.0], [13.8, 84.0], [13.9, 84.0], [14.0, 85.0], [14.1, 85.0], [14.2, 85.0], [14.3, 85.0], [14.4, 85.0], [14.5, 85.0], [14.6, 85.0], [14.7, 85.0], [14.8, 86.0], [14.9, 86.0], [15.0, 86.0], [15.1, 86.0], [15.2, 86.0], [15.3, 86.0], [15.4, 86.0], [15.5, 86.0], [15.6, 86.0], [15.7, 86.0], [15.8, 87.0], [15.9, 87.0], [16.0, 87.0], [16.1, 87.0], [16.2, 87.0], [16.3, 87.0], [16.4, 87.0], [16.5, 87.0], [16.6, 87.0], [16.7, 88.0], [16.8, 88.0], [16.9, 88.0], [17.0, 88.0], [17.1, 88.0], [17.2, 88.0], [17.3, 88.0], [17.4, 88.0], [17.5, 88.0], [17.6, 88.0], [17.7, 89.0], [17.8, 89.0], [17.9, 89.0], [18.0, 89.0], [18.1, 89.0], [18.2, 89.0], [18.3, 89.0], [18.4, 89.0], [18.5, 89.0], [18.6, 89.0], [18.7, 89.0], [18.8, 89.0], [18.9, 89.0], [19.0, 89.0], [19.1, 90.0], [19.2, 90.0], [19.3, 90.0], [19.4, 90.0], [19.5, 90.0], [19.6, 90.0], [19.7, 90.0], [19.8, 90.0], [19.9, 90.0], [20.0, 90.0], [20.1, 90.0], [20.2, 90.0], [20.3, 90.0], [20.4, 90.0], [20.5, 91.0], [20.6, 91.0], [20.7, 91.0], [20.8, 91.0], [20.9, 91.0], [21.0, 91.0], [21.1, 91.0], [21.2, 91.0], [21.3, 91.0], [21.4, 91.0], [21.5, 91.0], [21.6, 91.0], [21.7, 91.0], [21.8, 91.0], [21.9, 91.0], [22.0, 91.0], [22.1, 92.0], [22.2, 92.0], [22.3, 92.0], [22.4, 92.0], [22.5, 92.0], [22.6, 92.0], [22.7, 92.0], [22.8, 92.0], [22.9, 92.0], [23.0, 92.0], [23.1, 92.0], [23.2, 92.0], [23.3, 92.0], [23.4, 93.0], [23.5, 93.0], [23.6, 93.0], [23.7, 93.0], [23.8, 93.0], [23.9, 93.0], [24.0, 93.0], [24.1, 93.0], [24.2, 94.0], [24.3, 94.0], [24.4, 94.0], [24.5, 94.0], [24.6, 94.0], [24.7, 94.0], [24.8, 94.0], [24.9, 94.0], [25.0, 94.0], [25.1, 95.0], [25.2, 95.0], [25.3, 95.0], [25.4, 95.0], [25.5, 95.0], [25.6, 95.0], [25.7, 95.0], [25.8, 95.0], [25.9, 95.0], [26.0, 96.0], [26.1, 96.0], [26.2, 96.0], [26.3, 96.0], [26.4, 96.0], [26.5, 96.0], [26.6, 97.0], [26.7, 97.0], [26.8, 97.0], [26.9, 97.0], [27.0, 97.0], [27.1, 97.0], [27.2, 97.0], [27.3, 97.0], [27.4, 98.0], [27.5, 98.0], [27.6, 98.0], [27.7, 98.0], [27.8, 98.0], [27.9, 98.0], [28.0, 98.0], [28.1, 98.0], [28.2, 98.0], [28.3, 99.0], [28.4, 99.0], [28.5, 99.0], [28.6, 99.0], [28.7, 99.0], [28.8, 99.0], [28.9, 99.0], [29.0, 99.0], [29.1, 99.0], [29.2, 99.0], [29.3, 100.0], [29.4, 100.0], [29.5, 100.0], [29.6, 100.0], [29.7, 100.0], [29.8, 100.0], [29.9, 100.0], [30.0, 100.0], [30.1, 101.0], [30.2, 101.0], [30.3, 101.0], [30.4, 101.0], [30.5, 101.0], [30.6, 101.0], [30.7, 102.0], [30.8, 102.0], [30.9, 102.0], [31.0, 102.0], [31.1, 102.0], [31.2, 102.0], [31.3, 102.0], [31.4, 102.0], [31.5, 102.0], [31.6, 102.0], [31.7, 103.0], [31.8, 103.0], [31.9, 103.0], [32.0, 103.0], [32.1, 103.0], [32.2, 103.0], [32.3, 103.0], [32.4, 103.0], [32.5, 103.0], [32.6, 103.0], [32.7, 104.0], [32.8, 104.0], [32.9, 104.0], [33.0, 104.0], [33.1, 104.0], [33.2, 104.0], [33.3, 104.0], [33.4, 104.0], [33.5, 104.0], [33.6, 105.0], [33.7, 105.0], [33.8, 105.0], [33.9, 105.0], [34.0, 105.0], [34.1, 105.0], [34.2, 105.0], [34.3, 106.0], [34.4, 106.0], [34.5, 106.0], [34.6, 106.0], [34.7, 106.0], [34.8, 106.0], [34.9, 106.0], [35.0, 106.0], [35.1, 106.0], [35.2, 107.0], [35.3, 107.0], [35.4, 107.0], [35.5, 107.0], [35.6, 107.0], [35.7, 107.0], [35.8, 107.0], [35.9, 107.0], [36.0, 108.0], [36.1, 108.0], [36.2, 108.0], [36.3, 108.0], [36.4, 108.0], [36.5, 108.0], [36.6, 109.0], [36.7, 109.0], [36.8, 109.0], [36.9, 109.0], [37.0, 109.0], [37.1, 109.0], [37.2, 109.0], [37.3, 110.0], [37.4, 110.0], [37.5, 110.0], [37.6, 110.0], [37.7, 111.0], [37.8, 111.0], [37.9, 111.0], [38.0, 111.0], [38.1, 111.0], [38.2, 112.0], [38.3, 112.0], [38.4, 112.0], [38.5, 112.0], [38.6, 112.0], [38.7, 112.0], [38.8, 113.0], [38.9, 113.0], [39.0, 113.0], [39.1, 113.0], [39.2, 113.0], [39.3, 113.0], [39.4, 114.0], [39.5, 114.0], [39.6, 114.0], [39.7, 114.0], [39.8, 114.0], [39.9, 115.0], [40.0, 115.0], [40.1, 115.0], [40.2, 116.0], [40.3, 116.0], [40.4, 116.0], [40.5, 116.0], [40.6, 116.0], [40.7, 117.0], [40.8, 117.0], [40.9, 117.0], [41.0, 117.0], [41.1, 117.0], [41.2, 117.0], [41.3, 118.0], [41.4, 118.0], [41.5, 118.0], [41.6, 118.0], [41.7, 118.0], [41.8, 119.0], [41.9, 119.0], [42.0, 119.0], [42.1, 120.0], [42.2, 120.0], [42.3, 121.0], [42.4, 121.0], [42.5, 121.0], [42.6, 122.0], [42.7, 122.0], [42.8, 122.0], [42.9, 123.0], [43.0, 123.0], [43.1, 123.0], [43.2, 123.0], [43.3, 124.0], [43.4, 124.0], [43.5, 124.0], [43.6, 124.0], [43.7, 124.0], [43.8, 124.0], [43.9, 125.0], [44.0, 125.0], [44.1, 125.0], [44.2, 125.0], [44.3, 126.0], [44.4, 126.0], [44.5, 126.0], [44.6, 126.0], [44.7, 127.0], [44.8, 127.0], [44.9, 127.0], [45.0, 128.0], [45.1, 129.0], [45.2, 129.0], [45.3, 130.0], [45.4, 130.0], [45.5, 130.0], [45.6, 131.0], [45.7, 131.0], [45.8, 132.0], [45.9, 134.0], [46.0, 134.0], [46.1, 134.0], [46.2, 135.0], [46.3, 135.0], [46.4, 135.0], [46.5, 136.0], [46.6, 136.0], [46.7, 137.0], [46.8, 140.0], [46.9, 141.0], [47.0, 142.0], [47.1, 143.0], [47.2, 144.0], [47.3, 145.0], [47.4, 146.0], [47.5, 147.0], [47.6, 149.0], [47.7, 153.0], [47.8, 154.0], [47.9, 156.0], [48.0, 157.0], [48.1, 157.0], [48.2, 158.0], [48.3, 161.0], [48.4, 163.0], [48.5, 168.0], [48.6, 170.0], [48.7, 171.0], [48.8, 172.0], [48.9, 175.0], [49.0, 178.0], [49.1, 178.0], [49.2, 179.0], [49.3, 183.0], [49.4, 187.0], [49.5, 189.0], [49.6, 190.0], [49.7, 193.0], [49.8, 197.0], [49.9, 198.0], [50.0, 202.0], [50.1, 216.0], [50.2, 230.0], [50.3, 235.0], [50.4, 249.0], [50.5, 269.0], [50.6, 277.0], [50.7, 310.0], [50.8, 388.0], [50.9, 409.0], [51.0, 460.0], [51.1, 503.0], [51.2, 509.0], [51.3, 531.0], [51.4, 569.0], [51.5, 678.0], [51.6, 718.0], [51.7, 743.0], [51.8, 751.0], [51.9, 754.0], [52.0, 772.0], [52.1, 950.0], [52.2, 1004.0], [52.3, 1070.0], [52.4, 1114.0], [52.5, 1133.0], [52.6, 1165.0], [52.7, 1179.0], [52.8, 1190.0], [52.9, 1215.0], [53.0, 1274.0], [53.1, 1297.0], [53.2, 1321.0], [53.3, 1341.0], [53.4, 1402.0], [53.5, 1437.0], [53.6, 1501.0], [53.7, 1515.0], [53.8, 1542.0], [53.9, 1595.0], [54.0, 1646.0], [54.1, 1739.0], [54.2, 1760.0], [54.3, 1835.0], [54.4, 1900.0], [54.5, 2005.0], [54.6, 2029.0], [54.7, 2036.0], [54.8, 2061.0], [54.9, 2103.0], [55.0, 2118.0], [55.1, 2128.0], [55.2, 2158.0], [55.3, 2225.0], [55.4, 2231.0], [55.5, 2261.0], [55.6, 2292.0], [55.7, 2316.0], [55.8, 2388.0], [55.9, 2446.0], [56.0, 2460.0], [56.1, 2544.0], [56.2, 2589.0], [56.3, 2630.0], [56.4, 2646.0], [56.5, 2693.0], [56.6, 2741.0], [56.7, 2903.0], [56.8, 2921.0], [56.9, 2933.0], [57.0, 2940.0], [57.1, 2950.0], [57.2, 2954.0], [57.3, 2977.0], [57.4, 2980.0], [57.5, 3030.0], [57.6, 3069.0], [57.7, 3093.0], [57.8, 3161.0], [57.9, 3194.0], [58.0, 3218.0], [58.1, 3227.0], [58.2, 3264.0], [58.3, 3289.0], [58.4, 3416.0], [58.5, 3489.0], [58.6, 3507.0], [58.7, 3540.0], [58.8, 3608.0], [58.9, 3677.0], [59.0, 3714.0], [59.1, 3730.0], [59.2, 3748.0], [59.3, 3799.0], [59.4, 3892.0], [59.5, 4016.0], [59.6, 4056.0], [59.7, 4068.0], [59.8, 4117.0], [59.9, 4142.0], [60.0, 4157.0], [60.1, 4163.0], [60.2, 4168.0], [60.3, 4182.0], [60.4, 4220.0], [60.5, 4251.0], [60.6, 4276.0], [60.7, 4324.0], [60.8, 4348.0], [60.9, 4414.0], [61.0, 4464.0], [61.1, 4598.0], [61.2, 4661.0], [61.3, 4699.0], [61.4, 4754.0], [61.5, 4818.0], [61.6, 4903.0], [61.7, 4922.0], [61.8, 4953.0], [61.9, 4991.0], [62.0, 5173.0], [62.1, 5320.0], [62.2, 5415.0], [62.3, 5467.0], [62.4, 5540.0], [62.5, 5626.0], [62.6, 5698.0], [62.7, 5723.0], [62.8, 5806.0], [62.9, 5815.0], [63.0, 5833.0], [63.1, 5951.0], [63.2, 6048.0], [63.3, 6296.0], [63.4, 6380.0], [63.5, 6459.0], [63.6, 6532.0], [63.7, 6617.0], [63.8, 6713.0], [63.9, 6804.0], [64.0, 6899.0], [64.1, 7005.0], [64.2, 7042.0], [64.3, 7161.0], [64.4, 7236.0], [64.5, 7273.0], [64.6, 7358.0], [64.7, 7416.0], [64.8, 7439.0], [64.9, 7545.0], [65.0, 7630.0], [65.1, 7678.0], [65.2, 7719.0], [65.3, 7747.0], [65.4, 7750.0], [65.5, 7766.0], [65.6, 7828.0], [65.7, 7942.0], [65.8, 8101.0], [65.9, 8241.0], [66.0, 8314.0], [66.1, 8423.0], [66.2, 8513.0], [66.3, 8575.0], [66.4, 8619.0], [66.5, 8788.0], [66.6, 8832.0], [66.7, 8986.0], [66.8, 9021.0], [66.9, 9078.0], [67.0, 9123.0], [67.1, 9133.0], [67.2, 9163.0], [67.3, 9189.0], [67.4, 9239.0], [67.5, 9350.0], [67.6, 9522.0], [67.7, 9577.0], [67.8, 9675.0], [67.9, 9726.0], [68.0, 9820.0], [68.1, 10034.0], [68.2, 10117.0], [68.3, 10238.0], [68.4, 10357.0], [68.5, 10490.0], [68.6, 10742.0], [68.7, 10753.0], [68.8, 10784.0], [68.9, 10848.0], [69.0, 10934.0], [69.1, 10944.0], [69.2, 10977.0], [69.3, 11000.0], [69.4, 11071.0], [69.5, 11115.0], [69.6, 11138.0], [69.7, 11220.0], [69.8, 11266.0], [69.9, 11288.0], [70.0, 11322.0], [70.1, 11361.0], [70.2, 11432.0], [70.3, 11517.0], [70.4, 11558.0], [70.5, 11695.0], [70.6, 11720.0], [70.7, 11830.0], [70.8, 11908.0], [70.9, 12044.0], [71.0, 12045.0], [71.1, 12076.0], [71.2, 12105.0], [71.3, 12107.0], [71.4, 12109.0], [71.5, 12143.0], [71.6, 12264.0], [71.7, 12360.0], [71.8, 12433.0], [71.9, 12538.0], [72.0, 12589.0], [72.1, 12616.0], [72.2, 12617.0], [72.3, 12681.0], [72.4, 12962.0], [72.5, 13064.0], [72.6, 13100.0], [72.7, 13329.0], [72.8, 13411.0], [72.9, 13446.0], [73.0, 13476.0], [73.1, 13490.0], [73.2, 13495.0], [73.3, 13553.0], [73.4, 13647.0], [73.5, 13662.0], [73.6, 13672.0], [73.7, 13719.0], [73.8, 13784.0], [73.9, 13831.0], [74.0, 13852.0], [74.1, 13902.0], [74.2, 14034.0], [74.3, 14109.0], [74.4, 14124.0], [74.5, 14153.0], [74.6, 14186.0], [74.7, 14248.0], [74.8, 14361.0], [74.9, 14438.0], [75.0, 14490.0], [75.1, 14557.0], [75.2, 14642.0], [75.3, 14643.0], [75.4, 14654.0], [75.5, 14656.0], [75.6, 14673.0], [75.7, 14961.0], [75.8, 15038.0], [75.9, 15148.0], [76.0, 15246.0], [76.1, 15289.0], [76.2, 15393.0], [76.3, 15542.0], [76.4, 15550.0], [76.5, 15598.0], [76.6, 15599.0], [76.7, 15624.0], [76.8, 15689.0], [76.9, 15740.0], [77.0, 15977.0], [77.1, 16063.0], [77.2, 16065.0], [77.3, 16073.0], [77.4, 16216.0], [77.5, 16596.0], [77.6, 16790.0], [77.7, 16840.0], [77.8, 16978.0], [77.9, 17069.0], [78.0, 17129.0], [78.1, 17180.0], [78.2, 17357.0], [78.3, 17389.0], [78.4, 17416.0], [78.5, 17502.0], [78.6, 17569.0], [78.7, 17643.0], [78.8, 17645.0], [78.9, 17678.0], [79.0, 17680.0], [79.1, 17681.0], [79.2, 17696.0], [79.3, 17802.0], [79.4, 17817.0], [79.5, 17852.0], [79.6, 17905.0], [79.7, 18160.0], [79.8, 18520.0], [79.9, 18597.0], [80.0, 18619.0], [80.1, 18621.0], [80.2, 18646.0], [80.3, 18669.0], [80.4, 18674.0], [80.5, 18701.0], [80.6, 18729.0], [80.7, 18730.0], [80.8, 18761.0], [80.9, 18912.0], [81.0, 18980.0], [81.1, 19034.0], [81.2, 19041.0], [81.3, 19088.0], [81.4, 19212.0], [81.5, 19288.0], [81.6, 19292.0], [81.7, 19294.0], [81.8, 19325.0], [81.9, 19378.0], [82.0, 19879.0], [82.1, 19983.0], [82.2, 20037.0], [82.3, 20136.0], [82.4, 20183.0], [82.5, 20226.0], [82.6, 20231.0], [82.7, 20267.0], [82.8, 20287.0], [82.9, 20304.0], [83.0, 20313.0], [83.1, 20315.0], [83.2, 20345.0], [83.3, 20376.0], [83.4, 20466.0], [83.5, 20546.0], [83.6, 20582.0], [83.7, 20600.0], [83.8, 20602.0], [83.9, 20609.0], [84.0, 20737.0], [84.1, 20823.0], [84.2, 20840.0], [84.3, 20898.0], [84.4, 20900.0], [84.5, 20907.0], [84.6, 20911.0], [84.7, 20915.0], [84.8, 20936.0], [84.9, 20986.0], [85.0, 20989.0], [85.1, 20996.0], [85.2, 21108.0], [85.3, 21199.0], [85.4, 21247.0], [85.5, 21251.0], [85.6, 21268.0], [85.7, 21304.0], [85.8, 21355.0], [85.9, 21419.0], [86.0, 21433.0], [86.1, 21448.0], [86.2, 21475.0], [86.3, 21498.0], [86.4, 21524.0], [86.5, 21536.0], [86.6, 21540.0], [86.7, 21576.0], [86.8, 21643.0], [86.9, 21645.0], [87.0, 21667.0], [87.1, 21744.0], [87.2, 21755.0], [87.3, 21862.0], [87.4, 21983.0], [87.5, 22213.0], [87.6, 22337.0], [87.7, 22353.0], [87.8, 22358.0], [87.9, 22365.0], [88.0, 22372.0], [88.1, 22388.0], [88.2, 22435.0], [88.3, 22509.0], [88.4, 22773.0], [88.5, 23041.0], [88.6, 23164.0], [88.7, 23245.0], [88.8, 23308.0], [88.9, 23361.0], [89.0, 23373.0], [89.1, 23452.0], [89.2, 23555.0], [89.3, 24214.0], [89.4, 24285.0], [89.5, 24322.0], [89.6, 24424.0], [89.7, 24494.0], [89.8, 24640.0], [89.9, 25006.0], [90.0, 25289.0], [90.1, 25406.0], [90.2, 25522.0], [90.3, 25636.0], [90.4, 25741.0], [90.5, 25835.0], [90.6, 26104.0], [90.7, 26257.0], [90.8, 26555.0], [90.9, 26887.0], [91.0, 27195.0], [91.1, 28891.0], [91.2, 30575.0], [91.3, 31308.0], [91.4, 32150.0], [91.5, 32294.0], [91.6, 32335.0], [91.7, 32372.0], [91.8, 32762.0], [91.9, 33381.0], [92.0, 33410.0], [92.1, 34323.0], [92.2, 35755.0], [92.3, 37324.0], [92.4, 38163.0], [92.5, 38648.0], [92.6, 39521.0], [92.7, 41418.0], [92.8, 42356.0], [92.9, 43899.0], [93.0, 45046.0], [93.1, 45366.0], [93.2, 47365.0], [93.3, 49170.0], [93.4, 50441.0], [93.5, 51692.0], [93.6, 51710.0], [93.7, 53541.0], [93.8, 56733.0], [93.9, 60535.0], [94.0, 63669.0], [94.1, 63765.0], [94.2, 63767.0], [94.3, 63921.0], [94.4, 64146.0], [94.5, 64257.0], [94.6, 64322.0], [94.7, 64358.0], [94.8, 64363.0], [94.9, 64686.0], [95.0, 64942.0], [95.1, 64965.0], [95.2, 65065.0], [95.3, 65241.0], [95.4, 65733.0], [95.5, 66117.0], [95.6, 66410.0], [95.7, 67107.0], [95.8, 67303.0], [95.9, 68597.0], [96.0, 69543.0], [96.1, 71532.0], [96.2, 74878.0], [96.3, 76651.0], [96.4, 78190.0], [96.5, 80203.0], [96.6, 83350.0], [96.7, 86017.0], [96.8, 86248.0], [96.9, 87332.0], [97.0, 90933.0], [97.1, 95453.0], [97.2, 100011.0], [97.3, 100021.0], [97.4, 100031.0], [97.5, 100055.0], [97.6, 100070.0], [97.7, 100074.0], [97.8, 100089.0], [97.9, 100095.0], [98.0, 100102.0], [98.1, 100115.0], [98.2, 100119.0], [98.3, 100126.0], [98.4, 100128.0], [98.5, 100134.0], [98.6, 100141.0], [98.7, 100147.0], [98.8, 100193.0], [98.9, 100203.0], [99.0, 100210.0], [99.1, 100365.0], [99.2, 107680.0], [99.3, 127558.0], [99.4, 127758.0], [99.5, 128720.0], [99.6, 129146.0], [99.7, 129780.0], [99.8, 136310.0], [99.9, 148346.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10316.0, "series": [{"data": [[0.0, 10316.0], [66700.0, 1.0], [73100.0, 2.0], [71500.0, 15.0], [69900.0, 2.0], [74700.0, 2.0], [77900.0, 17.0], [85900.0, 2.0], [84300.0, 2.0], [87500.0, 2.0], [92300.0, 2.0], [90700.0, 6.0], [93900.0, 2.0], [100300.0, 8.0], [129100.0, 38.0], [127500.0, 18.0], [100.0, 7273.0], [35300.0, 2.0], [36900.0, 3.0], [40900.0, 5.0], [41700.0, 2.0], [42500.0, 1.0], [43300.0, 2.0], [44100.0, 1.0], [45700.0, 1.0], [48100.0, 3.0], [48900.0, 2.0], [47300.0, 2.0], [195500.0, 1.0], [49700.0, 2.0], [50500.0, 2.0], [200.0, 236.0], [53700.0, 3.0], [54500.0, 2.0], [56900.0, 2.0], [58500.0, 4.0], [60900.0, 1.0], [63300.0, 1.0], [62500.0, 2.0], [64900.0, 63.0], [64100.0, 47.0], [67400.0, 4.0], [65800.0, 1.0], [72200.0, 5.0], [70600.0, 3.0], [300.0, 65.0], [77000.0, 1.0], [80200.0, 4.0], [78600.0, 3.0], [81800.0, 3.0], [89800.0, 3.0], [88200.0, 2.0], [96200.0, 2.0], [101000.0, 2.0], [99400.0, 1.0], [400.0, 99.0], [500.0, 123.0], [129800.0, 6.0], [600.0, 47.0], [700.0, 167.0], [800.0, 15.0], [900.0, 33.0], [1000.0, 67.0], [1100.0, 164.0], [1200.0, 115.0], [1300.0, 79.0], [1400.0, 59.0], [1500.0, 121.0], [1600.0, 49.0], [1700.0, 75.0], [1800.0, 51.0], [1900.0, 32.0], [2000.0, 140.0], [2100.0, 116.0], [2200.0, 151.0], [2300.0, 65.0], [2400.0, 74.0], [2500.0, 82.0], [2600.0, 98.0], [2800.0, 12.0], [2700.0, 29.0], [2900.0, 272.0], [3000.0, 96.0], [3100.0, 72.0], [3200.0, 141.0], [3300.0, 21.0], [3400.0, 69.0], [3500.0, 73.0], [3600.0, 62.0], [3700.0, 123.0], [3800.0, 44.0], [3900.0, 16.0], [4000.0, 91.0], [4100.0, 220.0], [4200.0, 109.0], [4300.0, 67.0], [66500.0, 2.0], [68100.0, 3.0], [4400.0, 59.0], [4500.0, 27.0], [4600.0, 70.0], [71300.0, 2.0], [4800.0, 33.0], [4700.0, 67.0], [77700.0, 2.0], [74500.0, 1.0], [5100.0, 22.0], [4900.0, 123.0], [5000.0, 14.0], [79300.0, 2.0], [5200.0, 14.0], [5300.0, 38.0], [85700.0, 1.0], [82500.0, 1.0], [5500.0, 54.0], [5600.0, 53.0], [87300.0, 12.0], [5400.0, 52.0], [5700.0, 57.0], [5800.0, 90.0], [93700.0, 2.0], [6100.0, 18.0], [5900.0, 26.0], [6000.0, 33.0], [96900.0, 2.0], [100100.0, 303.0], [6200.0, 11.0], [6300.0, 49.0], [6600.0, 43.0], [6400.0, 48.0], [6500.0, 28.0], [6700.0, 38.0], [6800.0, 40.0], [6900.0, 23.0], [7000.0, 66.0], [7100.0, 38.0], [7400.0, 97.0], [7300.0, 28.0], [7200.0, 60.0], [7500.0, 18.0], [7600.0, 74.0], [7700.0, 146.0], [7800.0, 29.0], [7900.0, 31.0], [8100.0, 24.0], [8000.0, 22.0], [8600.0, 45.0], [8400.0, 52.0], [8200.0, 30.0], [8800.0, 44.0], [9200.0, 55.0], [9000.0, 74.0], [9400.0, 22.0], [9600.0, 19.0], [10000.0, 32.0], [9800.0, 29.0], [10200.0, 23.0], [10400.0, 39.0], [10600.0, 6.0], [10800.0, 27.0], [11200.0, 90.0], [11000.0, 62.0], [11400.0, 39.0], [11600.0, 27.0], [11800.0, 31.0], [12000.0, 122.0], [12200.0, 25.0], [12400.0, 38.0], [12600.0, 91.0], [12800.0, 11.0], [13000.0, 61.0], [13200.0, 13.0], [13600.0, 114.0], [13800.0, 93.0], [13400.0, 152.0], [14000.0, 37.0], [14200.0, 44.0], [14800.0, 2.0], [14400.0, 53.0], [14600.0, 173.0], [15000.0, 45.0], [15200.0, 75.0], [15600.0, 63.0], [15800.0, 6.0], [15400.0, 19.0], [16000.0, 98.0], [16200.0, 21.0], [16800.0, 53.0], [16400.0, 6.0], [17200.0, 25.0], [17600.0, 195.0], [18000.0, 7.0], [19200.0, 138.0], [18800.0, 15.0], [20000.0, 54.0], [20400.0, 31.0], [19600.0, 4.0], [21200.0, 108.0], [20800.0, 105.0], [21600.0, 111.0], [22400.0, 54.0], [22000.0, 2.0], [23200.0, 55.0], [22800.0, 7.0], [24400.0, 38.0], [24000.0, 4.0], [24800.0, 12.0], [25200.0, 24.0], [26000.0, 4.0], [25600.0, 44.0], [26400.0, 3.0], [27200.0, 4.0], [26800.0, 14.0], [27600.0, 1.0], [29600.0, 2.0], [29200.0, 2.0], [28800.0, 2.0], [31200.0, 6.0], [31600.0, 1.0], [34400.0, 1.0], [37600.0, 2.0], [38400.0, 8.0], [39200.0, 7.0], [40800.0, 1.0], [41600.0, 4.0], [42400.0, 8.0], [43200.0, 2.0], [45600.0, 1.0], [46400.0, 2.0], [48000.0, 2.0], [48800.0, 1.0], [49600.0, 2.0], [50400.0, 2.0], [52800.0, 2.0], [53600.0, 2.0], [55200.0, 1.0], [54400.0, 2.0], [56800.0, 2.0], [58400.0, 1.0], [60800.0, 2.0], [63200.0, 8.0], [61600.0, 2.0], [64000.0, 5.0], [65600.0, 4.0], [67200.0, 5.0], [75200.0, 1.0], [76800.0, 1.0], [78400.0, 1.0], [80000.0, 6.0], [81600.0, 1.0], [86400.0, 1.0], [89600.0, 1.0], [94400.0, 1.0], [99200.0, 2.0], [105600.0, 6.0], [115200.0, 1.0], [67100.0, 32.0], [68700.0, 4.0], [70300.0, 3.0], [76700.0, 1.0], [75100.0, 1.0], [79900.0, 2.0], [84700.0, 1.0], [92700.0, 2.0], [97500.0, 1.0], [95900.0, 2.0], [127900.0, 1.0], [193800.0, 1.0], [209800.0, 1.0], [33100.0, 3.0], [33900.0, 8.0], [36300.0, 6.0], [35500.0, 1.0], [37900.0, 2.0], [38700.0, 3.0], [37100.0, 1.0], [39500.0, 5.0], [41900.0, 1.0], [44300.0, 2.0], [43500.0, 7.0], [49100.0, 7.0], [47500.0, 2.0], [48300.0, 1.0], [50700.0, 2.0], [49900.0, 2.0], [197900.0, 1.0], [51500.0, 2.0], [53900.0, 1.0], [56300.0, 2.0], [55500.0, 4.0], [59500.0, 2.0], [61900.0, 2.0], [63500.0, 4.0], [64300.0, 85.0], [65100.0, 10.0], [74200.0, 2.0], [80600.0, 4.0], [79000.0, 2.0], [88600.0, 3.0], [93400.0, 1.0], [96600.0, 1.0], [95000.0, 1.0], [98200.0, 2.0], [101400.0, 2.0], [114200.0, 1.0], [196500.0, 1.0], [68500.0, 12.0], [66900.0, 14.0], [71700.0, 3.0], [76500.0, 1.0], [78100.0, 2.0], [81300.0, 3.0], [86100.0, 5.0], [90900.0, 3.0], [95700.0, 2.0], [102100.0, 2.0], [119700.0, 7.0], [127700.0, 22.0], [16500.0, 14.0], [17300.0, 64.0], [16900.0, 22.0], [17700.0, 29.0], [18100.0, 24.0], [19300.0, 53.0], [18500.0, 43.0], [18900.0, 45.0], [19700.0, 12.0], [20100.0, 60.0], [21300.0, 96.0], [20900.0, 284.0], [20500.0, 86.0], [22500.0, 17.0], [21700.0, 81.0], [22100.0, 2.0], [22900.0, 9.0], [23300.0, 97.0], [24500.0, 29.0], [24100.0, 5.0], [23700.0, 1.0], [24900.0, 2.0], [25300.0, 18.0], [26100.0, 23.0], [26500.0, 31.0], [25700.0, 43.0], [26900.0, 14.0], [27300.0, 6.0], [28500.0, 6.0], [29300.0, 6.0], [30500.0, 6.0], [31300.0, 24.0], [32500.0, 25.0], [32100.0, 18.0], [34600.0, 2.0], [33800.0, 8.0], [33000.0, 1.0], [38600.0, 3.0], [39400.0, 2.0], [41000.0, 1.0], [45000.0, 29.0], [43400.0, 2.0], [46600.0, 2.0], [48200.0, 3.0], [47400.0, 2.0], [49800.0, 1.0], [52200.0, 1.0], [51400.0, 2.0], [53800.0, 2.0], [57000.0, 2.0], [56200.0, 3.0], [57800.0, 2.0], [59400.0, 2.0], [62600.0, 2.0], [63400.0, 1.0], [65000.0, 31.0], [64200.0, 40.0], [66000.0, 18.0], [69200.0, 2.0], [67600.0, 2.0], [77200.0, 2.0], [82000.0, 1.0], [83600.0, 1.0], [88400.0, 4.0], [98000.0, 1.0], [96400.0, 2.0], [107600.0, 20.0], [125200.0, 1.0], [194400.0, 1.0], [65900.0, 1.0], [67500.0, 1.0], [69100.0, 2.0], [70700.0, 1.0], [80300.0, 4.0], [93100.0, 6.0], [94700.0, 4.0], [96300.0, 1.0], [97900.0, 1.0], [128300.0, 1.0], [132200.0, 4.0], [135400.0, 1.0], [136300.0, 16.0], [33300.0, 60.0], [36500.0, 2.0], [34900.0, 6.0], [35700.0, 11.0], [37300.0, 13.0], [38900.0, 2.0], [38100.0, 20.0], [40500.0, 1.0], [41300.0, 1.0], [44500.0, 4.0], [45300.0, 12.0], [46900.0, 1.0], [49300.0, 1.0], [50100.0, 13.0], [50900.0, 1.0], [51700.0, 42.0], [52500.0, 2.0], [56500.0, 2.0], [60500.0, 2.0], [63700.0, 86.0], [64500.0, 3.0], [65300.0, 1.0], [66600.0, 6.0], [73000.0, 1.0], [69800.0, 2.0], [77800.0, 1.0], [76200.0, 2.0], [79400.0, 6.0], [81000.0, 2.0], [82600.0, 2.0], [87400.0, 3.0], [95400.0, 3.0], [100200.0, 95.0], [108200.0, 1.0], [127400.0, 11.0], [65700.0, 8.0], [67300.0, 13.0], [68900.0, 1.0], [72100.0, 2.0], [70500.0, 2.0], [73700.0, 2.0], [76900.0, 1.0], [83300.0, 2.0], [89700.0, 1.0], [91300.0, 2.0], [92900.0, 2.0], [94500.0, 1.0], [104100.0, 1.0], [129700.0, 24.0], [128100.0, 4.0], [8700.0, 19.0], [8500.0, 56.0], [8300.0, 31.0], [9100.0, 142.0], [8900.0, 23.0], [9300.0, 5.0], [9500.0, 72.0], [9700.0, 53.0], [9900.0, 9.0], [10100.0, 31.0], [10700.0, 105.0], [10300.0, 31.0], [10500.0, 10.0], [10900.0, 125.0], [11100.0, 77.0], [11700.0, 65.0], [11300.0, 70.0], [11500.0, 61.0], [11900.0, 18.0], [12100.0, 138.0], [12300.0, 41.0], [12700.0, 10.0], [12500.0, 63.0], [12900.0, 20.0], [13100.0, 17.0], [13300.0, 39.0], [13500.0, 42.0], [13700.0, 55.0], [14100.0, 109.0], [14300.0, 45.0], [13900.0, 37.0], [14500.0, 41.0], [14700.0, 9.0], [15100.0, 29.0], [14900.0, 31.0], [15300.0, 16.0], [15500.0, 136.0], [15700.0, 45.0], [16100.0, 19.0], [16300.0, 7.0], [15900.0, 23.0], [16600.0, 12.0], [17400.0, 43.0], [17000.0, 43.0], [17800.0, 106.0], [18200.0, 13.0], [18600.0, 203.0], [19000.0, 104.0], [19400.0, 2.0], [19800.0, 12.0], [20200.0, 136.0], [21400.0, 149.0], [20600.0, 106.0], [21000.0, 3.0], [22200.0, 37.0], [21800.0, 39.0], [23000.0, 38.0], [22600.0, 13.0], [23400.0, 30.0], [23800.0, 11.0], [24200.0, 48.0], [25400.0, 41.0], [25000.0, 16.0], [24600.0, 14.0], [26200.0, 26.0], [26600.0, 16.0], [25800.0, 25.0], [27000.0, 4.0], [27400.0, 1.0], [28200.0, 4.0], [28600.0, 2.0], [29000.0, 2.0], [30600.0, 13.0], [31000.0, 2.0], [32200.0, 27.0], [32600.0, 1.0], [31800.0, 1.0], [33200.0, 1.0], [34800.0, 10.0], [34000.0, 2.0], [35600.0, 2.0], [38800.0, 6.0], [39600.0, 5.0], [40400.0, 2.0], [42800.0, 2.0], [43600.0, 4.0], [44400.0, 7.0], [48400.0, 8.0], [47600.0, 2.0], [50800.0, 2.0], [51600.0, 36.0], [52400.0, 2.0], [54800.0, 2.0], [57200.0, 4.0], [56400.0, 4.0], [58800.0, 2.0], [59600.0, 3.0], [63600.0, 3.0], [64400.0, 17.0], [65200.0, 40.0], [66400.0, 16.0], [68000.0, 2.0], [69600.0, 1.0], [71200.0, 2.0], [72800.0, 3.0], [76000.0, 1.0], [79200.0, 2.0], [84000.0, 10.0], [82400.0, 6.0], [87200.0, 18.0], [88800.0, 1.0], [92000.0, 1.0], [95200.0, 1.0], [100000.0, 267.0], [98400.0, 2.0], [128800.0, 1.0], [66300.0, 1.0], [67900.0, 4.0], [69500.0, 8.0], [71100.0, 1.0], [72700.0, 3.0], [77500.0, 1.0], [79100.0, 2.0], [82300.0, 1.0], [87100.0, 3.0], [90300.0, 1.0], [91900.0, 2.0], [96700.0, 2.0], [120700.0, 1.0], [130300.0, 6.0], [128700.0, 15.0], [33500.0, 2.0], [34300.0, 6.0], [35900.0, 1.0], [35100.0, 1.0], [37500.0, 1.0], [38300.0, 7.0], [148300.0, 34.0], [151500.0, 14.0], [39100.0, 9.0], [42300.0, 27.0], [43900.0, 11.0], [44700.0, 6.0], [45500.0, 17.0], [186700.0, 1.0], [49500.0, 3.0], [53500.0, 2.0], [55900.0, 1.0], [56700.0, 2.0], [58300.0, 1.0], [57500.0, 4.0], [62300.0, 2.0], [61500.0, 2.0], [64700.0, 16.0], [63900.0, 18.0], [65500.0, 1.0], [68600.0, 18.0], [67000.0, 2.0], [70200.0, 1.0], [76600.0, 10.0], [79800.0, 1.0], [78200.0, 2.0], [84600.0, 1.0], [83000.0, 1.0], [86200.0, 17.0], [95800.0, 2.0], [97400.0, 1.0], [99000.0, 1.0], [127800.0, 23.0], [66100.0, 36.0], [72500.0, 3.0], [88500.0, 3.0], [93300.0, 1.0], [91700.0, 1.0], [94900.0, 2.0], [106100.0, 1.0], [107700.0, 1.0], [16700.0, 27.0], [17100.0, 60.0], [17500.0, 58.0], [17900.0, 19.0], [18300.0, 2.0], [19100.0, 26.0], [18700.0, 127.0], [19900.0, 42.0], [20300.0, 181.0], [19500.0, 2.0], [20700.0, 26.0], [21500.0, 142.0], [21100.0, 45.0], [21900.0, 31.0], [22300.0, 203.0], [23100.0, 19.0], [22700.0, 9.0], [23500.0, 32.0], [24300.0, 57.0], [23900.0, 4.0], [25500.0, 22.0], [24700.0, 10.0], [26300.0, 7.0], [25900.0, 3.0], [27500.0, 2.0], [27100.0, 9.0], [26700.0, 6.0], [27900.0, 2.0], [28700.0, 4.0], [29100.0, 10.0], [29500.0, 2.0], [29900.0, 2.0], [30700.0, 6.0], [30300.0, 2.0], [31500.0, 6.0], [32300.0, 78.0], [31900.0, 2.0], [32700.0, 6.0], [33400.0, 15.0], [36600.0, 2.0], [35800.0, 10.0], [35000.0, 2.0], [37400.0, 18.0], [40600.0, 6.0], [39800.0, 11.0], [39000.0, 1.0], [41400.0, 8.0], [42200.0, 1.0], [43800.0, 1.0], [44600.0, 1.0], [45400.0, 4.0], [47000.0, 2.0], [47800.0, 3.0], [48600.0, 3.0], [50200.0, 5.0], [49400.0, 2.0], [51800.0, 2.0], [52600.0, 2.0], [53400.0, 2.0], [55800.0, 2.0], [57400.0, 1.0], [58200.0, 1.0], [59800.0, 2.0], [60600.0, 2.0], [63800.0, 12.0], [65400.0, 2.0], [64600.0, 5.0], [66800.0, 1.0], [71600.0, 1.0], [73200.0, 2.0], [76400.0, 26.0], [74800.0, 1.0], [79600.0, 4.0], [78000.0, 1.0], [82800.0, 2.0], [86000.0, 33.0], [95600.0, 2.0], [97200.0, 3.0], [102000.0, 1.0], [111600.0, 6.0], [113200.0, 1.0], [127600.0, 1.0], [129200.0, 11.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 209800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 226.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 17989.0, "series": [{"data": [[0.0, 17989.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 876.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16120.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 226.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 153.10231023102315, "minX": 1.6830261E12, "maxY": 3000.0, "series": [{"data": [[1.68302634E12, 3000.0], [1.68302616E12, 3000.0], [1.68302622E12, 3000.0], [1.68302652E12, 153.10231023102315], [1.6830261E12, 3000.0], [1.6830264E12, 2524.6300292611527], [1.68302646E12, 509.2707317073168], [1.68302628E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302652E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.0, "maxY": 100160.0, "series": [{"data": [[2.0, 100140.0], [4.0, 100138.0], [10.0, 100137.0], [11.0, 100137.0], [12.0, 100137.16666666666], [13.0, 100134.0], [17.0, 100127.0], [18.0, 100126.33333333333], [23.0, 100126.5], [24.0, 100114.0], [28.0, 100105.0], [29.0, 100105.0], [33.0, 100075.0], [32.0, 100105.8], [35.0, 100075.0], [36.0, 100074.0], [43.0, 100072.5], [42.0, 100073.0], [45.0, 100072.0], [44.0, 100071.0], [49.0, 100071.0], [51.0, 100071.0], [52.0, 100071.0], [55.0, 100070.0], [54.0, 100071.0], [58.0, 100070.0], [61.0, 100068.0], [62.0, 100067.66666666667], [66.0, 100064.0], [65.0, 100066.0], [64.0, 100067.0], [69.0, 100057.0], [68.0, 100058.0], [75.0, 100055.66666666667], [72.0, 100056.0], [79.0, 100051.0], [77.0, 100053.0], [76.0, 100055.0], [83.0, 100036.0], [81.0, 100036.0], [80.0, 100047.0], [87.0, 100034.0], [86.0, 100035.0], [85.0, 100036.0], [90.0, 100031.5], [88.0, 100032.0], [92.0, 100030.0], [99.0, 100024.0], [96.0, 100025.0], [103.0, 100022.0], [102.0, 100023.0], [101.0, 100024.0], [106.0, 100021.0], [105.0, 100022.0], [110.0, 100019.5], [108.0, 100021.5], [115.0, 100017.0], [114.0, 100019.0], [113.0, 100018.0], [112.0, 100018.5], [118.0, 100017.0], [116.0, 100018.0], [123.0, 100015.5], [121.0, 100016.0], [127.0, 100013.0], [125.0, 100014.0], [124.0, 100014.0], [134.0, 100151.0], [133.0, 100155.0], [131.0, 100160.0], [130.0, 100011.5], [128.0, 100012.5], [142.0, 100147.0], [141.0, 100147.0], [138.0, 100147.0], [137.0, 100147.0], [150.0, 100145.0], [149.0, 100148.0], [148.0, 100146.25], [146.0, 100147.0], [145.0, 100147.0], [158.0, 100145.0], [157.0, 100146.0], [155.0, 100145.5], [153.0, 100145.0], [165.0, 100133.0], [164.0, 100134.0], [163.0, 100134.0], [162.0, 100136.0], [161.0, 100144.0], [175.0, 100127.0], [173.0, 100128.33333333333], [169.0, 100130.0], [183.0, 100111.0], [182.0, 100113.0], [181.0, 100120.0], [180.0, 100127.0], [179.0, 100126.0], [178.0, 100127.0], [177.0, 100127.0], [189.0, 100098.5], [187.0, 100099.0], [186.0, 100100.33333333333], [195.0, 100093.0], [194.0, 100095.0], [193.0, 100096.0], [192.0, 100097.33333333333], [207.0, 100088.0], [206.0, 100088.0], [205.0, 100089.0], [203.0, 100089.0], [202.0, 100088.66666666667], [200.0, 100089.0], [215.0, 100054.0], [214.0, 100064.0], [213.0, 100070.0], [212.0, 100079.0], [210.0, 100081.0], [209.0, 100081.5], [223.0, 100039.0], [222.0, 100040.0], [221.0, 100047.0], [220.0, 100046.0], [219.0, 100051.0], [217.0, 100053.0], [230.0, 100020.66666666667], [227.0, 100020.0], [225.0, 100021.0], [224.0, 100028.0], [239.0, 99251.0], [238.0, 99253.0], [237.0, 100018.0], [236.0, 100018.33333333333], [235.0, 100019.0], [233.0, 100020.0], [247.0, 95780.0], [246.0, 95213.0], [245.0, 96221.0], [244.0, 96224.0], [243.0, 97230.0], [242.0, 97232.0], [241.0, 98240.0], [240.0, 98242.0], [254.0, 100142.33333333333], [253.0, 100143.0], [252.0, 100143.0], [249.0, 94770.0], [248.0, 94772.0], [268.0, 93762.0], [270.0, 92753.0], [271.0, 92750.0], [269.0, 93760.0], [267.0, 100107.5], [265.0, 100132.0], [263.0, 100135.0], [260.0, 100135.0], [259.0, 100137.0], [258.0, 100141.0], [256.0, 100143.0], [286.0, 90907.0], [287.0, 90905.0], [285.0, 91916.0], [284.0, 91916.0], [283.0, 92925.0], [282.0, 92927.0], [281.0, 93936.0], [280.0, 93938.0], [279.0, 94945.0], [273.0, 97976.0], [272.0, 91743.0], [275.0, 96965.0], [274.0, 96967.0], [278.0, 94948.0], [277.0, 95956.0], [276.0, 95958.0], [302.0, 76588.0], [303.0, 82821.0], [301.0, 77597.0], [300.0, 83091.0], [299.0, 78607.0], [298.0, 78609.0], [297.0, 79618.0], [296.0, 79620.0], [295.0, 80628.0], [289.0, 83659.0], [288.0, 89895.0], [291.0, 82649.0], [290.0, 82651.0], [294.0, 80630.0], [293.0, 81638.0], [292.0, 80294.0], [318.0, 67941.0], [319.0, 67162.0], [317.0, 68172.0], [316.0, 68173.0], [315.0, 69183.0], [314.0, 70530.0], [313.0, 71537.0], [312.0, 71543.0], [311.0, 72547.0], [305.0, 74230.0], [304.0, 74232.0], [307.0, 80060.0], [306.0, 74568.0], [310.0, 72549.0], [309.0, 72210.0], [308.0, 79050.0], [334.0, 66667.0], [335.0, 66666.0], [333.0, 67677.0], [332.0, 67678.0], [331.0, 68685.0], [330.0, 67944.0], [329.0, 68952.0], [328.0, 63462.0], [327.0, 64470.0], [321.0, 66152.0], [320.0, 66156.0], [323.0, 65143.0], [322.0, 72727.0], [326.0, 64472.0], [325.0, 65479.0], [324.0, 71716.0], [350.0, 58590.0], [351.0, 58587.0], [349.0, 59597.0], [348.0, 59600.0], [347.0, 60607.0], [346.0, 60609.0], [345.0, 61617.0], [344.0, 61619.0], [343.0, 62627.0], [337.0, 65656.0], [336.0, 65658.0], [339.0, 64646.0], [338.0, 64648.0], [342.0, 62629.0], [341.0, 63636.0], [340.0, 63638.0], [366.0, 50512.0], [367.0, 50510.0], [365.0, 51521.0], [364.0, 51522.0], [363.0, 52531.0], [362.0, 52531.0], [361.0, 53539.0], [360.0, 53541.0], [359.0, 54549.0], [353.0, 57578.0], [352.0, 57580.0], [355.0, 56568.0], [354.0, 56570.0], [358.0, 54551.0], [357.0, 55558.0], [356.0, 55560.0], [382.0, 42434.0], [383.0, 42432.0], [381.0, 43441.0], [380.0, 43443.0], [379.0, 44453.0], [378.0, 44454.0], [377.0, 45462.0], [376.0, 45463.0], [375.0, 46471.0], [369.0, 49500.0], [368.0, 49502.0], [371.0, 48491.0], [370.0, 48493.0], [374.0, 46473.0], [373.0, 47480.0], [372.0, 47483.0], [398.0, 34356.0], [399.0, 34354.0], [397.0, 35364.0], [396.0, 35366.0], [395.0, 36373.0], [394.0, 36377.0], [393.0, 37383.0], [392.0, 37385.0], [391.0, 38393.0], [385.0, 41422.0], [384.0, 41424.0], [387.0, 40412.0], [386.0, 40414.0], [390.0, 38395.0], [389.0, 39402.0], [388.0, 39404.0], [414.0, 26279.0], [415.0, 26276.0], [413.0, 27286.0], [412.0, 27288.0], [411.0, 28296.0], [410.0, 28298.0], [409.0, 29305.0], [408.0, 29308.0], [407.0, 30315.0], [401.0, 33344.0], [400.0, 33347.0], [403.0, 32335.0], [402.0, 32337.0], [406.0, 30318.0], [405.0, 31325.0], [404.0, 31327.0], [430.0, 9815.0], [431.0, 9812.0], [429.0, 9816.0], [428.0, 9817.0], [427.0, 9820.0], [426.0, 9820.0], [425.0, 9821.0], [424.0, 9822.5], [422.0, 9825.0], [417.0, 25267.0], [416.0, 25269.0], [419.0, 9831.0], [418.0, 9834.0], [421.0, 9828.0], [420.0, 9829.0], [444.0, 9591.0], [446.0, 9588.0], [447.0, 9586.0], [445.0, 9589.0], [443.0, 9594.0], [441.0, 9595.0], [439.0, 24245.0], [433.0, 9807.0], [432.0, 9808.0], [435.0, 9801.0], [434.0, 9803.0], [438.0, 24248.0], [437.0, 9795.0], [436.0, 9799.0], [462.0, 9535.0], [463.0, 9313.0], [460.0, 9535.0], [451.0, 9581.0], [450.0, 9584.0], [449.0, 9584.0], [448.0, 9586.0], [459.0, 9561.0], [458.0, 9564.0], [457.0, 9564.0], [456.0, 9569.0], [455.0, 9573.0], [454.0, 9576.0], [453.0, 9577.0], [452.0, 9578.0], [467.0, 9285.0], [478.0, 10037.0], [479.0, 9284.0], [476.0, 10036.5], [475.0, 9284.0], [472.0, 10288.333333333334], [469.0, 10790.0], [468.0, 9285.0], [466.0, 9285.0], [465.0, 9287.0], [464.0, 9291.0], [494.0, 10783.0], [495.0, 10779.0], [493.0, 9278.0], [492.0, 10785.0], [491.0, 10784.0], [489.0, 10785.0], [488.0, 10785.0], [487.0, 10786.0], [481.0, 10788.0], [480.0, 10789.0], [483.0, 10787.0], [482.0, 10787.0], [486.0, 10786.0], [485.0, 10786.0], [498.0, 9269.0], [511.0, 10767.333333333334], [509.0, 10768.0], [507.0, 10769.0], [506.0, 10769.0], [505.0, 10270.666666666666], [502.0, 10773.0], [501.0, 10774.0], [500.0, 10022.0], [497.0, 10775.0], [496.0, 10778.0], [518.0, 10760.0], [538.0, 9999.0], [542.0, 10750.0], [536.0, 10751.0], [516.0, 10761.0], [514.0, 9261.0], [512.0, 10767.0], [534.0, 9998.5], [528.0, 10000.5], [526.0, 10754.0], [524.0, 9250.0], [522.0, 10757.0], [520.0, 10759.0], [574.0, 14124.0], [572.0, 9740.666666666666], [566.0, 10744.0], [558.0, 10746.0], [554.0, 12998.666666666666], [548.0, 10748.0], [546.0, 10749.0], [544.0, 10750.0], [604.0, 9157.0], [606.0, 9156.0], [602.0, 17423.0], [578.0, 11400.0], [576.0, 11618.833333333334], [598.0, 9188.0], [596.0, 9942.0], [594.0, 17458.0], [592.0, 10700.0], [590.0, 9736.666666666666], [584.0, 13370.0], [636.0, 10499.0], [638.0, 10496.0], [634.0, 10501.0], [632.0, 10514.0], [630.0, 9777.5], [628.0, 10030.666666666666], [624.0, 17293.0], [622.0, 10537.0], [610.0, 9151.0], [608.0, 10658.0], [614.0, 9149.0], [612.0, 10655.0], [620.0, 9079.0], [618.0, 9147.0], [616.0, 13280.0], [666.0, 17219.0], [670.0, 8950.0], [658.0, 8963.0], [660.0, 10465.0], [664.0, 17221.0], [646.0, 10487.0], [644.0, 8985.0], [642.0, 10494.0], [640.0, 10496.0], [654.0, 10474.0], [652.0, 8974.0], [648.0, 8977.0], [662.0, 17223.0], [700.0, 17130.0], [688.0, 17148.0], [690.0, 17144.0], [692.0, 17143.0], [702.0, 17127.0], [698.0, 17133.0], [696.0, 17140.0], [672.0, 8949.0], [676.0, 17205.0], [678.0, 17203.0], [686.0, 17149.0], [684.0, 8920.0], [680.0, 17193.0], [730.0, 15311.5], [734.0, 16068.0], [720.0, 14648.5], [722.0, 14713.0], [724.0, 14557.0], [732.0, 16068.0], [728.0, 15312.5], [710.0, 23119.0], [706.0, 17094.5], [704.0, 17094.0], [718.0, 14653.0], [716.0, 16244.0], [714.0, 22258.0], [712.0, 22108.0], [726.0, 14555.0], [764.0, 14519.0], [752.0, 14531.0], [754.0, 14529.0], [756.0, 14527.0], [766.0, 14516.0], [762.0, 14377.0], [760.0, 14381.0], [736.0, 14404.0], [738.0, 14473.0], [742.0, 15002.0], [750.0, 14532.0], [748.0, 14392.0], [746.0, 14053.0], [744.0, 14540.0], [758.0, 14382.0], [792.0, 14319.0], [796.0, 14310.0], [784.0, 14482.0], [798.0, 14307.0], [794.0, 14315.0], [768.0, 14514.0], [770.0, 16030.0], [772.0, 14368.0], [774.0, 14361.0], [782.0, 14341.0], [780.0, 14344.0], [778.0, 14347.0], [776.0, 14351.0], [790.0, 14466.0], [824.0, 18197.5], [830.0, 13491.0], [828.0, 13910.5], [826.0, 25761.0], [800.0, 14305.0], [802.0, 14440.0], [804.0, 14296.0], [806.0, 14430.0], [814.0, 13851.0], [812.0, 13852.0], [808.0, 21247.0], [822.0, 19752.75], [818.0, 14501.0], [816.0, 13842.0], [856.0, 13945.0], [860.0, 13800.0], [850.0, 17165.5], [848.0, 13815.0], [862.0, 20849.0], [858.0, 25722.0], [832.0, 13829.0], [834.0, 15489.0], [838.0, 13969.0], [846.0, 13965.0], [844.0, 13479.0], [840.0, 13826.0], [854.0, 13952.0], [892.0, 13777.0], [894.0, 13913.0], [882.0, 25707.0], [884.0, 25704.0], [890.0, 13921.0], [888.0, 20831.0], [870.0, 13447.0], [866.0, 13937.0], [864.0, 20847.0], [878.0, 13931.0], [876.0, 14618.0], [874.0, 13790.0], [886.0, 25703.0], [900.0, 13419.0], [920.0, 13889.0], [914.0, 15411.0], [922.0, 20795.0], [898.0, 25871.0], [902.0, 13904.0], [910.0, 25676.0], [908.0, 20698.666666666668], [904.0, 19792.0], [918.0, 13747.0], [916.0, 26781.0], [956.0, 15383.0], [952.0, 22287.666666666668], [944.0, 25650.0], [948.0, 20777.0], [946.0, 17252.0], [958.0, 25640.0], [954.0, 25646.0], [928.0, 15400.0], [930.0, 15399.0], [932.0, 25658.0], [942.0, 13802.0], [940.0, 13731.0], [938.0, 15393.0], [936.0, 20785.0], [984.0, 22375.0], [986.0, 25795.0], [960.0, 13860.0], [962.0, 20763.0], [964.0, 20762.0], [970.0, 13851.0], [980.0, 17299.0], [976.0, 17678.333333333332], [998.0, 13670.0], [1016.0, 20711.0], [996.0, 15340.0], [1012.0, 13660.0], [1008.0, 25767.0], [1006.0, 13319.0], [1004.0, 14569.0], [1084.0, 15295.0], [1076.0, 20419.833333333332], [1024.0, 25746.0], [1064.0, 18241.11111111111], [1056.0, 21756.666666666668], [1136.0, 13443.0], [1124.0, 13627.0], [1144.0, 15093.0], [1140.0, 13437.0], [1100.0, 13647.0], [1096.0, 15168.0], [1092.0, 25616.0], [1116.0, 13632.0], [1112.0, 15153.0], [1104.0, 13500.0], [1132.0, 13589.0], [1164.0, 13551.0], [1192.0, 20252.333333333332], [1212.0, 26382.0], [1188.0, 25483.0], [1160.0, 15070.0], [1156.0, 15081.0], [1152.0, 13566.0], [1180.0, 15048.0], [1176.0, 20442.5], [1168.0, 13397.0], [1196.0, 13514.0], [1272.0, 17912.0], [1276.0, 15427.0], [1252.0, 20352.0], [1256.0, 23634.5], [1268.0, 19934.0], [1264.0, 23197.0], [1220.0, 20212.5], [1216.0, 20221.5], [1260.0, 25221.0], [1328.0, 18126.0], [1336.0, 14980.0], [1340.0, 12140.0], [1332.0, 12159.0], [1280.0, 13801.0], [1284.0, 17852.0], [1292.0, 17847.0], [1308.0, 17833.0], [1304.0, 17836.0], [1300.0, 17842.0], [1296.0, 17845.0], [1324.0, 17818.0], [1376.0, 18050.0], [1384.0, 17735.0], [1400.0, 11708.0], [1396.0, 14705.0], [1392.0, 11718.0], [1372.0, 14343.75], [1360.0, 12131.0], [1388.0, 14383.0], [1464.0, 11332.0], [1468.0, 13657.5], [1440.0, 13681.0], [1444.0, 17006.0], [1448.0, 11345.0], [1456.0, 16993.0], [1420.0, 11535.0], [1416.0, 11542.0], [1408.0, 11693.0], [1436.0, 11432.0], [1432.0, 11518.0], [1428.0, 14177.0], [1424.0, 11526.0], [1452.0, 16995.0], [1520.0, 11279.0], [1528.0, 11271.0], [1504.0, 11295.0], [1508.0, 17102.0], [1532.0, 14242.5], [1524.0, 11277.0], [1472.0, 16978.0], [1476.0, 11321.0], [1480.0, 17281.0], [1484.0, 11313.0], [1500.0, 11299.0], [1496.0, 11303.0], [1492.0, 11308.0], [1488.0, 11311.0], [1516.0, 11283.0], [1584.0, 11141.0], [1592.0, 16786.0], [1568.0, 16806.0], [1576.0, 13476.0], [1596.0, 13460.0], [1588.0, 16792.0], [1540.0, 11240.0], [1544.0, 16875.0], [1548.0, 16824.0], [1564.0, 13485.0], [1560.0, 14146.5], [1552.0, 15318.0], [1608.0, 16760.0], [1648.0, 16696.0], [1660.0, 16805.0], [1656.0, 16966.0], [1628.0, 11076.0], [1600.0, 13455.0], [1604.0, 13442.0], [1612.0, 16757.0], [1624.0, 12260.5], [1616.0, 17063.0], [1640.0, 13705.0], [1636.0, 13394.0], [1632.0, 13398.0], [1668.0, 13312.0], [1692.0, 9607.0], [1676.0, 13082.0], [1664.0, 13317.0], [1688.0, 13053.0], [1684.0, 14885.0], [1680.0, 16396.0], [1788.0, 7365.0], [1764.0, 34.0], [1772.0, 74.0], [1784.0, 66.0], [1780.0, 72.0], [1776.0, 73.0], [1848.0, 11417.0], [1852.0, 12655.0], [1828.0, 11772.0], [1832.0, 11129.0], [1844.0, 11111.0], [1840.0, 11118.0], [1804.0, 12502.0], [1800.0, 5475.0], [1796.0, 12216.0], [1820.0, 11909.0], [1816.0, 11135.0], [1812.0, 11143.0], [1808.0, 11455.5], [1908.0, 11365.0], [1912.0, 11361.0], [1888.0, 12413.0], [1892.0, 11379.0], [1896.0, 12615.0], [1900.0, 11063.0], [1904.0, 11369.0], [1856.0, 11105.0], [1860.0, 15643.0], [1864.0, 11403.0], [1868.0, 11092.0], [1884.0, 12425.0], [1880.0, 13413.0], [1972.0, 12529.0], [1952.0, 15549.0], [1956.0, 12337.0], [1960.0, 12328.0], [1980.0, 11881.5], [1924.0, 11042.0], [1932.0, 11035.0], [1948.0, 12347.0], [1944.0, 12562.0], [1936.0, 11033.0], [2040.0, 11108.0], [2044.0, 12338.0], [2016.0, 12184.0], [2020.0, 11146.0], [2024.0, 12382.0], [2028.0, 10820.0], [2036.0, 12147.0], [2032.0, 11124.0], [1996.0, 12272.0], [2012.0, 12408.0], [2004.0, 12445.0], [2000.0, 10915.0], [2152.0, 10130.0], [2120.0, 11053.0], [2128.0, 11254.0], [2136.0, 3288.0], [2160.0, 9093.0], [2048.0, 12333.0], [2056.0, 4406.0], [2064.0, 9909.0], [2072.0, 9896.0], [2096.0, 11081.0], [2088.0, 11088.0], [2080.0, 10182.0], [2192.0, 10082.0], [2232.0, 13188.0], [2200.0, 10798.333333333334], [2176.0, 9696.5], [2208.0, 9030.0], [2368.0, 9213.0], [2376.0, 8615.0], [2320.0, 108.0], [2360.0, 7041.0], [2344.0, 7063.0], [2336.0, 107.0], [2544.0, 8829.0], [2496.0, 8168.0], [2504.0, 9010.0], [2512.0, 9002.0], [2520.0, 8999.0], [2552.0, 13049.0], [2536.0, 8848.0], [2528.0, 8937.0], [2432.0, 19125.0], [2440.0, 9165.0], [2448.0, 12438.666666666666], [2456.0, 14141.75], [2672.0, 53.6], [2568.0, 8795.0], [2576.0, 8751.5], [2584.0, 7683.0], [2600.0, 7663.0], [2592.0, 7674.0], [2760.0, 10807.0], [2752.0, 8620.0], [2768.0, 8608.0], [2776.0, 8603.0], [2800.0, 8579.0], [2792.0, 8593.0], [2736.0, 13687.0], [2728.0, 13694.0], [2824.0, 8534.0], [2912.0, 12044.0], [2904.0, 7748.0], [2816.0, 13596.0], [2832.0, 7854.0], [2872.0, 12084.0], [2864.0, 12092.0], [2856.0, 7801.0], [2848.0, 7828.0], [3000.0, 10500.646005295097], [2992.0, 9897.0], [2960.0, 7752.0], [2984.0, 8421.0], [2976.0, 8425.0], [2161.0, 10330.0], [2113.0, 11135.666666666666], [2129.0, 14247.0], [2137.0, 10145.0], [2169.0, 10116.0], [2153.0, 10130.0], [2073.0, 10204.0], [2065.0, 14452.0], [2057.0, 10224.0], [2049.0, 10784.0], [2105.0, 11174.0], [2097.0, 10669.0], [2081.0, 10182.0], [2177.0, 10108.0], [2185.0, 10208.0], [2193.0, 10081.0], [2233.0, 13188.0], [2225.0, 11617.0], [2209.0, 9024.0], [2377.0, 8327.0], [2369.0, 6216.0], [2313.0, 107.90697674418607], [2353.0, 7054.0], [2345.0, 10059.0], [2505.0, 9010.0], [2497.0, 8166.0], [2521.0, 8147.0], [2545.0, 13058.0], [2537.0, 18795.0], [2449.0, 15411.666666666668], [2489.0, 8827.25], [2569.0, 18747.0], [2673.0, 53.0], [2577.0, 7693.0], [2585.0, 7682.0], [2601.0, 11883.0], [2801.0, 12201.0], [2753.0, 14779.0], [2761.0, 13672.0], [2769.0, 11689.0], [2777.0, 8602.0], [2785.0, 8259.0], [2745.0, 8627.0], [2737.0, 13687.0], [2729.0, 8638.0], [2825.0, 8534.0], [2905.0, 12045.0], [2881.0, 13032.666666666668], [2817.0, 8541.0], [2833.0, 8528.0], [2841.0, 7837.0], [2873.0, 12084.0], [2865.0, 12091.0], [2857.0, 8475.0], [2961.0, 11188.4], [2993.0, 8197.666666666666], [2977.0, 8424.0], [1061.0, 19690.5], [1077.0, 13779.0], [1065.0, 13779.0], [1057.0, 25744.0], [1145.0, 15092.0], [1149.0, 13425.0], [1125.0, 15140.0], [1129.0, 14352.5], [1141.0, 13579.0], [1137.0, 13581.0], [1101.0, 26536.0], [1097.0, 15167.0], [1093.0, 15170.0], [1089.0, 13587.0], [1117.0, 15148.0], [1113.0, 13634.0], [1109.0, 20842.5], [1105.0, 15159.0], [1133.0, 13446.0], [1205.0, 20151.5], [1201.0, 15022.0], [1213.0, 15002.0], [1185.0, 13379.0], [1189.0, 20427.0], [1209.0, 21982.333333333332], [1153.0, 13423.0], [1157.0, 15073.0], [1161.0, 15069.0], [1181.0, 15047.0], [1177.0, 15049.0], [1173.0, 16848.0], [1169.0, 13540.0], [1197.0, 25289.0], [1193.0, 15033.0], [1273.0, 17910.0], [1277.0, 15426.0], [1269.0, 19933.0], [1265.0, 18382.333333333332], [1221.0, 14988.0], [1217.0, 25442.0], [1261.0, 24043.222222222223], [1333.0, 12157.0], [1329.0, 14489.0], [1341.0, 12139.0], [1313.0, 17828.0], [1317.0, 14535.0], [1337.0, 17806.0], [1281.0, 13799.0], [1285.0, 17852.0], [1289.0, 17850.0], [1293.0, 17846.0], [1309.0, 14506.0], [1301.0, 17839.0], [1297.0, 17843.0], [1325.0, 14490.0], [1321.0, 14994.0], [1401.0, 11707.0], [1405.0, 15011.5], [1397.0, 11715.0], [1357.0, 12911.666666666666], [1349.0, 12137.0], [1345.0, 12138.0], [1373.0, 14415.0], [1385.0, 17716.0], [1465.0, 13660.0], [1469.0, 13655.0], [1445.0, 11348.0], [1449.0, 11343.0], [1461.0, 15323.5], [1457.0, 13666.0], [1421.0, 11531.0], [1417.0, 11540.0], [1409.0, 14338.0], [1437.0, 11430.0], [1433.0, 11502.0], [1429.0, 14177.0], [1425.0, 11527.0], [1453.0, 11341.0], [1529.0, 11272.0], [1533.0, 17224.0], [1505.0, 11293.0], [1509.0, 16946.0], [1525.0, 11275.0], [1473.0, 16977.0], [1477.0, 17286.0], [1481.0, 13645.0], [1485.0, 11312.0], [1501.0, 11299.0], [1497.0, 11301.0], [1493.0, 11307.0], [1489.0, 15456.5], [1517.0, 11283.0], [1513.0, 11287.0], [1593.0, 16787.0], [1597.0, 13459.0], [1573.0, 15695.333333333334], [1569.0, 13481.0], [1589.0, 13466.0], [1537.0, 16907.0], [1541.0, 11225.0], [1545.0, 11220.5], [1565.0, 17121.0], [1561.0, 16815.0], [1553.0, 13496.0], [1577.0, 11146.0], [1653.0, 14545.0], [1661.0, 13323.0], [1633.0, 13397.0], [1637.0, 11045.0], [1657.0, 13324.0], [1649.0, 11027.0], [1613.0, 13430.0], [1609.0, 13435.0], [1605.0, 13436.0], [1629.0, 11074.0], [1625.0, 16741.0], [1617.0, 16752.0], [1645.0, 12207.5], [1673.0, 15657.25], [1677.0, 13075.0], [1665.0, 13317.0], [1693.0, 140.0], [1689.0, 10244.0], [1685.0, 13066.0], [1681.0, 16707.0], [1769.0, 74.5], [1765.0, 33.0], [1773.0, 73.0], [1789.0, 7363.0], [1781.0, 72.0], [1777.0, 73.0], [1733.0, 103.0], [1853.0, 11106.0], [1829.0, 11131.0], [1833.0, 11129.0], [1837.0, 11892.5], [1849.0, 12448.0], [1845.0, 12451.0], [1841.0, 11116.0], [1805.0, 12711.0], [1801.0, 12504.0], [1797.0, 12214.0], [1793.0, 12065.5], [1821.0, 11443.0], [1817.0, 11137.0], [1809.0, 11145.0], [1913.0, 11361.0], [1889.0, 11072.0], [1893.0, 11377.0], [1897.0, 12406.0], [1901.0, 12612.0], [1917.0, 11979.0], [1905.0, 12399.0], [1857.0, 11412.0], [1861.0, 11097.0], [1865.0, 11094.0], [1869.0, 12429.0], [1885.0, 11239.0], [1877.0, 11860.5], [1977.0, 11780.5], [1973.0, 12310.0], [1953.0, 12344.0], [1957.0, 12335.0], [1981.0, 11260.0], [1969.0, 12531.0], [1921.0, 11564.333333333334], [1925.0, 11349.0], [1929.0, 11347.0], [1933.0, 12376.0], [1949.0, 12346.0], [1945.0, 15557.0], [1941.0, 11846.5], [1937.0, 12373.0], [2045.0, 15333.0], [2017.0, 11152.0], [2021.0, 11145.0], [2025.0, 12377.0], [2029.0, 12160.0], [2041.0, 12138.0], [2037.0, 12145.0], [2033.0, 12360.0], [1997.0, 10924.0], [1993.0, 10942.0], [1989.0, 12389.0], [2013.0, 12186.0], [2009.0, 11794.5], [2005.0, 12213.0], [2001.0, 12451.0], [2170.0, 9600.0], [2114.0, 11062.0], [2122.0, 11259.0], [2130.0, 11242.0], [2138.0, 9112.0], [2162.0, 10330.0], [2146.0, 10140.5], [2050.0, 10782.0], [2058.0, 10223.0], [2066.0, 10212.0], [2074.0, 10203.0], [2098.0, 11077.0], [2090.0, 12018.5], [2082.0, 10167.0], [2178.0, 10315.0], [2194.0, 10080.0], [2202.0, 10176.5], [2186.0, 9063.0], [2234.0, 10190.0], [2314.0, 108.0], [2370.0, 6215.0], [2362.0, 7041.0], [2354.0, 7054.0], [2346.0, 7061.0], [2338.0, 95.5], [2378.0, 8326.0], [2546.0, 8827.0], [2554.0, 8818.0], [2506.0, 9009.0], [2498.0, 8164.0], [2538.0, 8834.0], [2530.0, 8427.0], [2434.0, 9166.0], [2450.0, 10645.142857142857], [2458.0, 11236.5], [2482.0, 12097.0], [2466.0, 9150.0], [2658.0, 90.0], [2666.0, 64.5], [2562.0, 13251.0], [2570.0, 8787.0], [2578.0, 17653.0], [2586.0, 7681.0], [2602.0, 7646.0], [2594.0, 7671.0], [2810.0, 8350.333333333334], [2762.0, 8614.0], [2770.0, 8609.0], [2778.0, 13655.0], [2794.0, 10783.0], [2786.0, 13651.0], [2738.0, 7956.0], [2730.0, 8637.0], [2722.0, 124.10204081632655], [2818.0, 8540.0], [2906.0, 7750.0], [2898.0, 7748.0], [2826.0, 8533.0], [2874.0, 13512.0], [2866.0, 12088.0], [2858.0, 7799.0], [2850.0, 7828.0], [2962.0, 12047.0], [2970.0, 8019.4], [2994.0, 10478.882352941177], [2986.0, 10838.333333333334], [2978.0, 12046.0], [2171.0, 9082.0], [2115.0, 11059.0], [2123.0, 12757.0], [2139.0, 10350.0], [2163.0, 10121.0], [2155.0, 10232.0], [2147.0, 10244.0], [2075.0, 9891.0], [2067.0, 10211.0], [2059.0, 10221.0], [2051.0, 12071.0], [2107.0, 10400.0], [2091.0, 10055.0], [2083.0, 10167.0], [2187.0, 13290.0], [2179.0, 10106.0], [2195.0, 10286.0], [2203.0, 13273.0], [2235.0, 10183.0], [2227.0, 9601.5], [2219.0, 10034.0], [2211.0, 10051.5], [2419.0, 8317.0], [2371.0, 9211.0], [2315.0, 107.92307692307693], [2363.0, 7040.0], [2355.0, 7049.0], [2347.0, 7060.0], [2339.0, 1116.0], [2379.0, 8326.0], [2547.0, 13054.0], [2555.0, 13047.5], [2499.0, 18973.0], [2507.0, 9006.0], [2515.0, 8717.333333333334], [2523.0, 8996.0], [2539.0, 8832.0], [2531.0, 8851.0], [2435.0, 13720.0], [2451.0, 8879.666666666666], [2459.0, 8309.0], [2483.0, 9060.0], [2475.0, 8906.25], [2659.0, 89.82142857142857], [2603.0, 11874.0], [2563.0, 13034.0], [2571.0, 8782.0], [2587.0, 11909.0], [2595.0, 9786.0], [2803.0, 8238.5], [2771.0, 13662.0], [2779.0, 8601.0], [2811.0, 8567.0], [2787.0, 8596.0], [2739.0, 13684.0], [2731.0, 8636.0], [2723.0, 13697.0], [2827.0, 8532.0], [2835.0, 11053.5], [2875.0, 13511.0], [2843.0, 8512.0], [2867.0, 7788.0], [2859.0, 13527.0], [2851.0, 12115.0], [2995.0, 10976.671641791045], [2987.0, 7749.0], [2979.0, 8086.25], [543.0, 9245.0], [541.0, 10750.0], [535.0, 10751.0], [531.0, 9999.5], [529.0, 9247.0], [523.0, 10757.0], [521.0, 10758.0], [515.0, 9261.0], [513.0, 10766.0], [575.0, 17503.0], [569.0, 14124.0], [555.0, 9240.0], [547.0, 10749.0], [605.0, 14042.0], [607.0, 17419.0], [601.0, 14043.5], [583.0, 9236.5], [599.0, 9186.0], [597.0, 10693.0], [593.0, 9195.0], [591.0, 9219.0], [587.0, 13368.5], [585.0, 12995.333333333334], [633.0, 8999.0], [637.0, 10498.0], [639.0, 10496.0], [635.0, 10500.0], [631.0, 9010.0], [625.0, 17293.0], [623.0, 9030.0], [609.0, 9151.0], [613.0, 9149.0], [611.0, 17415.0], [621.0, 10579.0], [619.0, 9138.0], [617.0, 9148.0], [667.0, 10458.0], [665.0, 8958.0], [671.0, 10454.0], [657.0, 9719.0], [659.0, 8962.0], [661.0, 17224.0], [669.0, 17217.0], [647.0, 10487.0], [645.0, 10489.0], [643.0, 8986.0], [641.0, 10495.0], [655.0, 10474.0], [653.0, 17237.0], [651.0, 13860.0], [649.0, 10481.0], [663.0, 17223.0], [701.0, 17130.0], [703.0, 17098.0], [689.0, 17145.0], [691.0, 17144.0], [699.0, 17133.0], [697.0, 17139.0], [687.0, 17149.0], [673.0, 17212.0], [675.0, 13826.0], [677.0, 17204.0], [685.0, 17152.0], [683.0, 13059.5], [681.0, 17193.0], [695.0, 17142.0], [693.0, 17143.0], [733.0, 14551.0], [735.0, 14549.0], [721.0, 14576.0], [723.0, 14558.0], [731.0, 16069.0], [711.0, 23117.0], [709.0, 17091.0], [707.0, 17093.0], [715.0, 22256.0], [713.0, 22107.0], [725.0, 14412.0], [765.0, 14373.0], [767.0, 14514.0], [753.0, 16048.0], [755.0, 14528.0], [757.0, 14383.0], [763.0, 14034.0], [761.0, 14379.0], [751.0, 14389.0], [739.0, 14057.0], [743.0, 14399.0], [749.0, 14391.0], [747.0, 14538.0], [745.0, 16057.0], [759.0, 14525.0], [797.0, 14451.0], [799.0, 13964.0], [789.0, 14402.75], [785.0, 14333.0], [795.0, 14458.0], [793.0, 14315.0], [783.0, 14413.0], [769.0, 14027.0], [773.0, 14511.0], [775.0, 14496.0], [779.0, 14345.0], [777.0, 14349.0], [791.0, 14466.0], [825.0, 15501.0], [829.0, 15497.0], [815.0, 13994.0], [801.0, 14446.0], [803.0, 14440.0], [805.0, 14291.0], [807.0, 14285.0], [813.0, 13947.666666666666], [809.0, 21244.0], [861.0, 13455.0], [863.0, 13938.0], [853.0, 13808.0], [851.0, 13810.0], [859.0, 20851.0], [857.0, 15460.0], [847.0, 13477.0], [833.0, 13971.0], [837.0, 14428.333333333334], [839.0, 13826.0], [845.0, 13755.666666666666], [841.0, 20877.0], [855.0, 25729.0], [889.0, 20830.0], [893.0, 13915.0], [881.0, 20838.5], [883.0, 25707.0], [885.0, 20833.0], [891.0, 25699.0], [871.0, 25711.0], [869.0, 25804.0], [867.0, 13791.0], [865.0, 13794.0], [879.0, 20840.0], [873.0, 13860.5], [887.0, 20833.0], [923.0, 25663.0], [925.0, 14571.5], [927.0, 17337.5], [913.0, 14581.5], [915.0, 13750.0], [921.0, 20797.0], [911.0, 20804.0], [897.0, 21762.0], [899.0, 20815.0], [901.0, 20813.0], [909.0, 20809.0], [905.0, 13417.0], [919.0, 26778.0], [917.0, 25670.0], [953.0, 13724.0], [959.0, 13715.0], [957.0, 25643.0], [955.0, 20775.0], [943.0, 13729.0], [929.0, 20791.0], [931.0, 20790.0], [935.0, 24465.333333333332], [939.0, 13876.0], [937.0, 13389.0], [951.0, 13383.0], [949.0, 13869.0], [985.0, 13701.0], [989.0, 20567.5], [991.0, 20566.5], [987.0, 13688.0], [973.0, 20588.0], [961.0, 15374.0], [963.0, 13854.0], [967.0, 23195.5], [965.0, 25632.0], [971.0, 20758.0], [969.0, 19498.0], [977.0, 13703.0], [997.0, 25601.0], [1017.0, 25766.0], [995.0, 20268.0], [993.0, 20565.5], [1015.0, 21730.0], [1011.0, 20093.666666666668], [1007.0, 15323.0], [1005.0, 22291.666666666668], [1001.0, 19721.5], [1038.0, 13639.0], [1086.0, 13515.0], [1082.0, 18271.0], [1074.0, 16117.285714285716], [1034.0, 26673.0], [1026.0, 13783.0], [1046.0, 13784.0], [1042.0, 13711.5], [1062.0, 15298.0], [1058.0, 13780.8], [1146.0, 13575.0], [1138.0, 13583.0], [1150.0, 15084.0], [1122.0, 15147.333333333334], [1130.0, 15108.0], [1126.0, 13466.0], [1142.0, 15095.0], [1102.0, 13647.0], [1098.0, 13505.0], [1094.0, 15168.0], [1090.0, 15175.0], [1118.0, 15148.0], [1114.0, 13634.0], [1110.0, 13496.0], [1106.0, 13641.0], [1134.0, 13445.0], [1206.0, 25465.0], [1214.0, 15001.0], [1186.0, 22866.0], [1210.0, 15017.0], [1202.0, 25467.0], [1166.0, 13234.5], [1158.0, 15071.0], [1182.0, 25488.0], [1178.0, 15049.0], [1174.0, 15051.0], [1170.0, 13394.0], [1198.0, 25471.0], [1194.0, 13514.0], [1254.0, 25406.0], [1274.0, 16901.0], [1258.0, 25221.0], [1270.0, 18923.0], [1266.0, 25404.0], [1222.0, 14987.0], [1218.0, 14997.0], [1262.0, 13371.5], [1338.0, 17806.0], [1342.0, 12140.0], [1322.0, 14495.0], [1314.0, 17827.0], [1334.0, 14485.0], [1330.0, 17814.0], [1310.0, 17830.0], [1282.0, 12791.0], [1290.0, 17848.0], [1286.0, 17851.0], [1294.0, 17846.0], [1306.0, 17835.0], [1302.0, 17837.0], [1298.0, 17843.0], [1326.0, 12162.0], [1398.0, 18005.0], [1402.0, 11705.0], [1406.0, 12027.0], [1382.0, 15569.25], [1378.0, 14412.0], [1386.0, 14390.0], [1394.0, 17853.0], [1354.0, 15329.4], [1346.0, 15120.0], [1374.0, 14415.0], [1390.0, 11726.0], [1462.0, 16987.0], [1458.0, 11335.0], [1470.0, 17290.0], [1442.0, 14179.0], [1446.0, 17311.0], [1466.0, 11328.0], [1418.0, 14195.0], [1414.0, 15737.333333333334], [1410.0, 11681.0], [1438.0, 17319.0], [1434.0, 11495.0], [1430.0, 17499.0], [1426.0, 17505.0], [1454.0, 11340.0], [1530.0, 11261.0], [1534.0, 11259.0], [1506.0, 11293.0], [1510.0, 11291.0], [1526.0, 11274.0], [1522.0, 11277.0], [1502.0, 11298.0], [1474.0, 17288.0], [1478.0, 16973.0], [1482.0, 13643.0], [1486.0, 11311.0], [1498.0, 13629.0], [1494.0, 11306.0], [1490.0, 11309.0], [1514.0, 16940.0], [1594.0, 13461.0], [1598.0, 13456.0], [1570.0, 11151.0], [1574.0, 16803.0], [1590.0, 13465.0], [1586.0, 11140.0], [1566.0, 17121.0], [1538.0, 14080.0], [1542.0, 11221.0], [1546.0, 11216.0], [1550.0, 13499.0], [1558.0, 13492.666666666666], [1582.0, 14579.333333333334], [1578.0, 13471.0], [1610.0, 17070.0], [1662.0, 16645.0], [1654.0, 13332.0], [1650.0, 11026.0], [1602.0, 13455.0], [1614.0, 17066.0], [1626.0, 13415.0], [1622.0, 13757.0], [1618.0, 17061.0], [1634.0, 11068.0], [1674.0, 13085.0], [1678.0, 13074.0], [1666.0, 16640.0], [1694.0, 136.0], [1690.0, 10238.0], [1686.0, 13064.0], [1682.0, 13070.0], [1762.0, 99.75], [1766.0, 8597.0], [1790.0, 6635.0], [1782.0, 71.0], [1758.0, 99.91999999999999], [1842.0, 11425.0], [1830.0, 11130.0], [1854.0, 11414.0], [1846.0, 12659.0], [1798.0, 16449.0], [1794.0, 12221.0], [1822.0, 11442.0], [1818.0, 12476.0], [1814.0, 11298.0], [1810.0, 11144.0], [1910.0, 11725.5], [1918.0, 11358.0], [1890.0, 12413.0], [1894.0, 12408.0], [1902.0, 11062.0], [1906.0, 11366.0], [1858.0, 11413.0], [1862.0, 11097.0], [1866.0, 11401.0], [1886.0, 11390.0], [1882.0, 11754.5], [1878.0, 11085.0], [1974.0, 10957.0], [1978.0, 12295.0], [1954.0, 11313.0], [1958.0, 12538.0], [1962.0, 11295.5], [1970.0, 11807.0], [1922.0, 11353.0], [1926.0, 12587.0], [1930.0, 12378.0], [1934.0, 11344.0], [1950.0, 11005.0], [1946.0, 11322.0], [1942.0, 11324.0], [1938.0, 11339.0], [2042.0, 15340.0], [2018.0, 12388.0], [2022.0, 11143.0], [2026.0, 10826.0], [2030.0, 11128.0], [2038.0, 12143.0], [2034.0, 12151.0], [1998.0, 12264.0], [1994.0, 11767.0], [1986.0, 12426.666666666666], [2014.0, 11154.0], [2010.0, 10866.0], [2006.0, 15413.0], [2002.0, 10899.0], [2156.0, 10334.0], [2124.0, 11258.0], [2116.0, 11266.0], [2172.0, 10320.0], [2148.0, 10345.0], [2052.0, 12279.0], [2060.0, 10221.0], [2068.0, 10210.0], [2076.0, 11431.0], [2108.0, 11276.0], [2092.0, 10052.0], [2084.0, 9856.0], [2236.0, 2264.0], [2204.0, 10276.0], [2188.0, 10085.0], [2228.0, 9994.0], [2220.0, 9690.333333333334], [2316.0, 107.0], [2372.0, 19154.0], [2364.0, 7037.0], [2356.0, 10045.0], [2348.0, 7058.0], [2340.0, 1114.0], [2380.0, 9176.0], [2540.0, 8832.0], [2556.0, 8813.0], [2524.0, 13224.0], [2548.0, 13052.0], [2444.0, 10222.857142857143], [2460.0, 9158.0], [2492.0, 8613.5], [2484.0, 8206.0], [2476.0, 9085.0], [2468.0, 11142.0], [2580.0, 11922.0], [2660.0, 67.0], [2572.0, 13010.0], [2588.0, 11908.0], [2596.0, 7668.0], [2756.0, 10303.333333333334], [2812.0, 12172.0], [2764.0, 8613.0], [2780.0, 13654.0], [2788.0, 13649.0], [2748.0, 11995.333333333334], [2732.0, 8636.0], [2724.0, 13696.0], [2820.0, 8537.5], [2836.0, 7841.0], [2908.0, 9388.050000000001], [2828.0, 8533.0], [2868.0, 13517.0], [2852.0, 14638.0], [2964.0, 10235.5], [2972.0, 8200.0], [2988.0, 12046.0], [2165.0, 10328.0], [2125.0, 11257.0], [2173.0, 10112.0], [2117.0, 11265.0], [2133.0, 12160.666666666666], [2149.0, 10134.0], [2077.0, 10192.0], [2053.0, 12275.0], [2109.0, 11276.0], [2101.0, 11180.5], [2093.0, 13057.0], [2085.0, 10162.0], [2237.0, 2263.0], [2189.0, 10084.0], [2197.0, 9665.5], [2229.0, 8962.0], [2221.0, 10032.0], [2213.0, 9636.5], [2317.0, 107.0], [2373.0, 9191.0], [2365.0, 7024.0], [2357.0, 10044.0], [2349.0, 7057.0], [2341.0, 104.0], [2549.0, 13052.0], [2501.0, 10701.5], [2509.0, 13984.5], [2517.0, 13980.0], [2525.0, 8993.0], [2557.0, 8811.0], [2541.0, 8831.0], [2533.0, 8849.0], [2437.0, 8315.0], [2477.0, 9085.0], [2469.0, 8288.0], [2565.0, 8805.0], [2581.0, 7691.0], [2597.0, 17626.0], [2653.0, 90.16666666666667], [2805.0, 8575.0], [2813.0, 8546.0], [2757.0, 8618.0], [2765.0, 13666.0], [2773.0, 13660.0], [2781.0, 7925.0], [2797.0, 8590.666666666666], [2789.0, 8593.0], [2741.0, 8291.5], [2733.0, 13690.0], [2725.0, 13695.0], [2829.0, 8532.0], [2821.0, 8538.0], [2845.0, 8173.0], [2861.0, 10661.5], [2853.0, 7803.0], [2957.0, 7750.0], [2997.0, 8025.425531914893], [2965.0, 12047.0], [2989.0, 8288.8], [2981.0, 8198.333333333334], [1087.0, 13515.0], [1083.0, 15294.0], [1075.0, 25741.0], [1071.0, 26668.0], [1067.0, 13780.0], [1059.0, 18939.923076923074], [1139.0, 15098.0], [1147.0, 15088.0], [1123.0, 13628.0], [1127.0, 15123.0], [1131.0, 15108.0], [1143.0, 13433.0], [1103.0, 15161.0], [1099.0, 13504.0], [1095.0, 15168.0], [1091.0, 26544.0], [1119.0, 13486.0], [1115.0, 15151.0], [1111.0, 13494.0], [1107.0, 15158.0], [1135.0, 13444.0], [1167.0, 13405.0], [1211.0, 26384.0], [1187.0, 15038.0], [1203.0, 20707.5], [1183.0, 25302.0], [1155.0, 14578.333333333334], [1159.0, 13554.0], [1163.0, 14238.5], [1199.0, 25470.0], [1195.0, 25293.0], [1279.0, 14288.5], [1275.0, 16899.0], [1271.0, 18921.0], [1267.0, 12954.0], [1263.0, 23269.166666666668], [1339.0, 14479.0], [1343.0, 17793.0], [1315.0, 17825.0], [1319.0, 12169.0], [1311.0, 17830.0], [1283.0, 12789.0], [1287.0, 17850.0], [1291.0, 17847.0], [1307.0, 17833.0], [1303.0, 17837.0], [1299.0, 17842.0], [1327.0, 12162.0], [1323.0, 12165.0], [1403.0, 12031.0], [1407.0, 17674.0], [1399.0, 17689.0], [1375.0, 17739.0], [1351.0, 12137.0], [1391.0, 11726.0], [1387.0, 14389.0], [1383.0, 14411.0], [1459.0, 17300.0], [1471.0, 11324.0], [1443.0, 13680.0], [1447.0, 13675.0], [1451.0, 15334.5], [1463.0, 13662.0], [1423.0, 11529.5], [1419.0, 11538.0], [1415.0, 11543.0], [1411.0, 11547.0], [1439.0, 13683.0], [1435.0, 17475.0], [1431.0, 17499.0], [1427.0, 11524.0], [1455.0, 11340.0], [1523.0, 11277.0], [1535.0, 11259.0], [1511.0, 11290.0], [1527.0, 11272.0], [1503.0, 11297.0], [1475.0, 11322.0], [1479.0, 13646.0], [1483.0, 16967.0], [1499.0, 11299.0], [1495.0, 11304.0], [1491.0, 11308.0], [1519.0, 11280.0], [1515.0, 11285.0], [1591.0, 13463.0], [1587.0, 17105.0], [1599.0, 16781.0], [1567.0, 13484.0], [1539.0, 11251.0], [1551.0, 15161.5], [1563.0, 15150.5], [1555.0, 13494.5], [1583.0, 16795.0], [1579.0, 17109.0], [1575.0, 16802.0], [1659.0, 13326.0], [1663.0, 16644.0], [1635.0, 13394.0], [1643.0, 13372.0], [1655.0, 13332.0], [1615.0, 13427.0], [1611.0, 17070.0], [1607.0, 13436.5], [1603.0, 13442.0], [1631.0, 15217.0], [1627.0, 11077.0], [1623.0, 13425.0], [1647.0, 12207.75], [1679.0, 13072.0], [1675.0, 16409.0], [1699.0, 135.2], [1671.0, 13085.0], [1667.0, 16951.0], [1691.0, 9609.0], [1687.0, 13059.0], [1767.0, 8595.0], [1791.0, 6633.0], [1763.0, 99.23529411764706], [1771.0, 74.0], [1775.0, 73.0], [1787.0, 64.0], [1851.0, 11106.0], [1843.0, 15657.0], [1855.0, 11104.0], [1827.0, 11132.0], [1831.0, 12470.0], [1835.0, 11429.5], [1839.0, 11271.5], [1847.0, 12450.0], [1807.0, 11147.0], [1803.0, 11936.5], [1799.0, 5476.0], [1795.0, 13457.0], [1815.0, 11138.0], [1811.0, 11145.0], [1911.0, 12601.0], [1915.0, 11206.0], [1895.0, 11377.0], [1891.0, 12412.0], [1899.0, 12614.0], [1903.0, 11368.0], [1907.0, 12397.0], [1887.0, 11078.0], [1859.0, 11099.0], [1863.0, 11097.0], [1867.0, 12433.0], [1871.0, 11087.5], [1875.0, 11576.25], [1975.0, 11266.0], [1955.0, 12552.0], [1983.0, 12394.5], [1959.0, 10989.0], [1963.0, 12325.0], [1971.0, 13390.333333333334], [1951.0, 11313.0], [1923.0, 11043.0], [1927.0, 11348.0], [1931.0, 12587.0], [1935.0, 11343.0], [1947.0, 11317.0], [1943.0, 11013.0], [1939.0, 11337.0], [2047.0, 11562.5], [2039.0, 12349.0], [2035.0, 11118.0], [2043.0, 12342.0], [2019.0, 11148.0], [2023.0, 12383.0], [2027.0, 11136.0], [2031.0, 12155.0], [1999.0, 12257.0], [1995.0, 10942.0], [1991.0, 12284.5], [1987.0, 12494.0], [2015.0, 10843.0], [2011.0, 10865.0], [2007.0, 12416.0], [2003.0, 12448.0], [2174.0, 10111.0], [2166.0, 10326.0], [2118.0, 11055.0], [2126.0, 11049.0], [2134.0, 11229.0], [2142.0, 10866.333333333334], [2158.0, 9714.0], [2150.0, 13335.0], [2110.0, 11274.0], [2054.0, 15269.0], [2062.0, 10221.0], [2070.0, 14443.0], [2078.0, 10189.0], [2102.0, 11076.0], [2094.0, 11289.0], [2190.0, 10291.0], [2206.0, 9656.5], [2238.0, 2123.0], [2182.0, 9762.333333333334], [2230.0, 9990.0], [2222.0, 8998.0], [2214.0, 10036.0], [2318.0, 107.0], [2334.0, 105.33333333333333], [2430.0, 9166.0], [2414.0, 8742.5], [2366.0, 7021.0], [2358.0, 10043.0], [2350.0, 10052.0], [2342.0, 103.0], [2534.0, 8849.0], [2502.0, 9011.0], [2510.0, 18963.0], [2526.0, 8954.0], [2438.0, 8315.0], [2454.0, 11278.0], [2462.0, 9151.0], [2494.0, 10721.0], [2478.0, 9084.0], [2670.0, 54.0], [2662.0, 65.0], [2566.0, 10918.5], [2582.0, 7687.0], [2590.0, 7677.5], [2598.0, 11896.0], [2806.0, 8576.5], [2798.0, 13635.0], [2766.0, 8611.0], [2774.0, 13661.0], [2782.0, 13653.0], [2814.0, 8544.0], [2790.0, 8594.0], [2750.0, 11151.0], [2742.0, 8628.0], [2734.0, 12257.0], [2726.0, 8640.0], [2830.0, 8530.0], [2822.0, 13589.0], [2838.0, 8176.0], [2846.0, 8510.0], [2862.0, 7797.0], [2998.0, 124.33333333333334], [2966.0, 7750.0], [2990.0, 12045.0], [2982.0, 7749.333333333333], [2167.0, 10117.0], [2159.0, 13329.0], [2119.0, 11262.0], [2127.0, 11256.0], [2135.0, 3290.0], [2143.0, 13346.0], [2151.0, 9100.0], [2079.0, 10186.0], [2071.0, 10207.0], [2063.0, 10219.0], [2055.0, 4406.0], [2103.0, 14276.0], [2087.0, 10677.5], [2183.0, 10312.0], [2239.0, 2120.0], [2191.0, 10081.0], [2207.0, 10064.0], [2231.0, 10193.0], [2223.0, 10017.0], [2215.0, 9004.0], [2319.0, 107.5], [2367.0, 9214.0], [2431.0, 9166.0], [2415.0, 8742.5], [2335.0, 105.77777777777779], [2359.0, 7045.0], [2351.0, 7056.0], [2343.0, 10060.0], [2543.0, 8830.0], [2551.0, 15914.0], [2559.0, 13038.0], [2511.0, 9004.0], [2519.0, 9000.0], [2527.0, 8089.0], [2535.0, 7997.0], [2495.0, 9031.0], [2455.0, 12482.666666666666], [2479.0, 9083.0], [2471.0, 8711.5], [2583.0, 11917.0], [2567.0, 13026.0], [2591.0, 11907.0], [2599.0, 7664.0], [2655.0, 90.0], [2807.0, 7900.0], [2759.0, 8617.0], [2815.0, 8545.0], [2775.0, 7930.0], [2783.0, 8596.0], [2799.0, 7905.0], [2791.0, 7920.0], [2751.0, 13677.0], [2735.0, 7959.0], [2727.0, 12262.0], [2839.0, 8513.0], [2903.0, 12046.0], [2831.0, 7855.0], [2847.0, 7834.0], [2871.0, 12084.0], [2863.0, 12093.0], [2855.0, 10288.0], [2999.0, 123.25], [2959.0, 9899.0], [2991.0, 8422.333333333334], [2983.0, 8422.0], [1.0, 100140.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2872.6779699525696, 11464.874329044856]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1582.3333333333333, "minX": 1.6830261E12, "maxY": 115477.45, "series": [{"data": [[1.68302634E12, 64834.71666666667], [1.68302616E12, 75202.96666666666], [1.68302622E12, 115477.45], [1.68302652E12, 3649.7166666666667], [1.6830261E12, 1978.5833333333333], [1.6830264E12, 61850.25], [1.68302646E12, 4518.533333333334], [1.68302628E12, 91591.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68302634E12, 46106.5], [1.68302616E12, 54051.833333333336], [1.68302622E12, 77568.0], [1.68302652E12, 2550.25], [1.6830261E12, 1582.3333333333333], [1.6830264E12, 46022.333333333336], [1.68302646E12, 3450.8333333333335], [1.68302628E12, 63125.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302652E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3629.287234042554, "minX": 1.6830261E12, "maxY": 98549.39603960395, "series": [{"data": [[1.68302634E12, 7997.1354508944805], [1.68302616E12, 8068.932886951111], [1.68302622E12, 18222.82648499055], [1.68302652E12, 98549.39603960395], [1.6830261E12, 3629.287234042554], [1.6830264E12, 7000.701353328455], [1.68302646E12, 23061.90243902441], [1.68302628E12, 7763.576444091125]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302652E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3629.127659574469, "minX": 1.6830261E12, "maxY": 98549.38613861392, "series": [{"data": [[1.68302634E12, 7997.126323475706], [1.68302616E12, 8068.838990968553], [1.68302622E12, 17155.85022354702], [1.68302652E12, 98549.38613861392], [1.6830261E12, 3629.127659574469], [1.6830264E12, 7000.693489392825], [1.68302646E12, 23061.895121951213], [1.68302628E12, 6939.377848436722]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302652E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.25457205559619533, "minX": 1.6830261E12, "maxY": 5563.539386842674, "series": [{"data": [[1.68302634E12, 2818.7601314348267], [1.68302616E12, 405.0806602304577], [1.68302622E12, 5563.539386842674], [1.68302652E12, 0.524752475247525], [1.6830261E12, 21.914893617021296], [1.6830264E12, 0.25457205559619533], [1.68302646E12, 0.2731707317073171], [1.68302628E12, 3835.2617912029705]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302652E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.6830261E12, "maxY": 209840.0, "series": [{"data": [[1.68302634E12, 209840.0], [1.68302616E12, 59891.0], [1.68302622E12, 100369.0], [1.68302652E12, 100160.0], [1.6830261E12, 5570.0], [1.6830264E12, 34004.0], [1.68302646E12, 80060.0], [1.68302628E12, 130345.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68302634E12, 12083.0], [1.68302616E12, 21642.0], [1.68302622E12, 64343.3], [1.68302652E12, 100144.0], [1.6830261E12, 4489.1], [1.6830264E12, 17037.60000000001], [1.68302646E12, 61618.8], [1.68302628E12, 18619.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68302634E12, 127900.20000000001], [1.68302616E12, 51699.77], [1.68302622E12, 100202.0], [1.68302652E12, 100154.84], [1.6830261E12, 5218.449999999994], [1.6830264E12, 33380.0], [1.68302646E12, 74231.78], [1.68302628E12, 129139.28999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68302634E12, 64150.3], [1.68302616E12, 36628.0], [1.68302622E12, 86094.0], [1.68302652E12, 100146.8], [1.6830261E12, 4530.25], [1.6830264E12, 21988.0], [1.68302646E12, 67796.34999999999], [1.68302628E12, 42388.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68302634E12, 24.0], [1.68302616E12, 14.0], [1.68302622E12, 13.0], [1.68302652E12, 76588.0], [1.6830261E12, 113.0], [1.6830264E12, 31.0], [1.68302646E12, 8920.0], [1.68302628E12, 20.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68302634E12, 127.0], [1.68302616E12, 122.0], [1.68302622E12, 5708.0], [1.68302652E12, 100071.0], [1.6830261E12, 3542.5], [1.6830264E12, 3749.5], [1.68302646E12, 10774.5], [1.68302628E12, 115.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302652E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 61.0, "minX": 1.0, "maxY": 148346.0, "series": [{"data": [[2.0, 52531.0], [3.0, 5570.0], [4.0, 36628.0], [5.0, 9212.0], [6.0, 5270.0], [7.0, 26536.0], [8.0, 4536.0], [9.0, 17090.5], [10.0, 2034.0], [11.0, 5748.0], [12.0, 11835.5], [13.0, 27195.0], [14.0, 15265.5], [17.0, 26665.0], [18.0, 100136.0], [21.0, 1165.0], [22.0, 3589.0], [23.0, 10977.0], [24.0, 7041.0], [26.0, 15740.0], [28.0, 7693.5], [33.0, 7763.0], [32.0, 114.0], [37.0, 1321.0], [38.0, 61.0], [40.0, 5464.5], [43.0, 93.0], [45.0, 9579.5], [47.0, 9592.0], [50.0, 3225.5], [54.0, 10436.0], [64.0, 117.5], [65.0, 21755.0], [66.0, 7003.0], [68.0, 4168.0], [71.0, 21885.0], [77.0, 79.0], [80.0, 1718.0], [85.0, 11502.0], [87.0, 104.0], [86.0, 87.0], [84.0, 3700.5], [90.0, 24410.0], [89.0, 8620.0], [94.0, 14331.0], [95.0, 99.0], [107.0, 102.0], [110.0, 3491.5], [111.0, 101.0], [115.0, 93.0], [112.0, 83.5], [119.0, 96.0], [116.0, 1840.0], [118.0, 94.0], [117.0, 97.0], [121.0, 101.0], [122.0, 91.0], [123.0, 1417.0], [125.0, 4166.0], [124.0, 114.0], [127.0, 94.0], [135.0, 98.0], [134.0, 30672.5], [130.0, 99.0], [129.0, 7328.0], [128.0, 3747.5], [141.0, 20052.0], [140.0, 90.0], [149.0, 83.0], [144.0, 96.0], [150.0, 12180.5], [147.0, 92.0], [145.0, 115.0], [157.0, 20143.0], [155.0, 7539.5], [166.0, 130.5], [168.0, 21744.0], [177.0, 126.0], [191.0, 131.0], [189.0, 2219.0], [193.0, 15543.0], [199.0, 2264.0], [192.0, 13425.0], [207.0, 235.0], [202.0, 99.0], [200.0, 9125.0], [201.0, 9085.0], [215.0, 14195.0], [221.0, 96.0], [218.0, 24287.0], [223.0, 112.0], [224.0, 97.0], [228.0, 163.0], [230.0, 135.0], [231.0, 112.0], [238.0, 105.0], [234.0, 83.0], [237.0, 8030.0], [239.0, 2933.0], [236.0, 105.0], [245.0, 106.0], [240.0, 85.0], [241.0, 89.0], [250.0, 86.0], [251.0, 97.0], [248.0, 308.0], [252.0, 91.0], [249.0, 10749.0], [270.0, 8512.5], [266.0, 89.0], [262.0, 32331.0], [256.0, 11415.5], [272.0, 114.0], [281.0, 16809.0], [302.0, 89.0], [299.0, 751.0], [319.0, 10945.0], [321.0, 144.0], [328.0, 100114.0], [322.0, 96.0], [345.0, 82.0], [351.0, 90.0], [343.0, 107.0], [348.0, 502.5], [355.0, 103.0], [414.0, 17679.0], [462.0, 18672.5], [458.0, 15157.5], [513.0, 15600.0], [543.0, 20225.0], [559.0, 12106.0], [730.0, 18618.0], [761.0, 20856.0], [745.0, 21538.0], [1.0, 20039.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 35848.0], [140.0, 107678.0], [9.0, 82488.0], [43.0, 23012.0], [11.0, 93125.0], [3.0, 7312.0], [207.0, 11548.0], [202.0, 148346.0], [218.0, 19883.0], [245.0, 76451.0], [251.0, 111694.0], [252.0, 69949.0], [4.0, 9469.0], [266.0, 14090.0], [262.0, 13180.0], [281.0, 17416.0], [18.0, 71529.0], [5.0, 70612.5], [328.0, 23574.0], [343.0, 119736.5], [122.0, 39826.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 761.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 100136.0, "series": [{"data": [[2.0, 52531.0], [3.0, 5570.0], [4.0, 36628.0], [5.0, 9212.0], [6.0, 5270.0], [7.0, 26536.0], [8.0, 4536.0], [9.0, 17090.5], [10.0, 2034.0], [11.0, 5748.0], [12.0, 11835.5], [13.0, 27195.0], [14.0, 15265.5], [17.0, 26665.0], [18.0, 100136.0], [21.0, 1165.0], [22.0, 3589.0], [23.0, 10977.0], [24.0, 7041.0], [26.0, 15740.0], [28.0, 7693.5], [33.0, 7763.0], [32.0, 114.0], [37.0, 1321.0], [38.0, 61.0], [40.0, 5464.5], [43.0, 93.0], [45.0, 9579.5], [47.0, 9592.0], [50.0, 3225.5], [54.0, 10436.0], [64.0, 117.5], [65.0, 21755.0], [66.0, 7003.0], [68.0, 4168.0], [71.0, 21885.0], [77.0, 79.0], [80.0, 1718.0], [85.0, 11502.0], [87.0, 104.0], [86.0, 87.0], [84.0, 3700.5], [90.0, 24410.0], [89.0, 8620.0], [94.0, 14331.0], [95.0, 99.0], [107.0, 102.0], [110.0, 3491.5], [111.0, 101.0], [115.0, 93.0], [112.0, 83.5], [119.0, 96.0], [116.0, 1840.0], [118.0, 94.0], [117.0, 97.0], [121.0, 101.0], [122.0, 91.0], [123.0, 1417.0], [125.0, 4166.0], [124.0, 114.0], [127.0, 94.0], [135.0, 98.0], [134.0, 30672.5], [130.0, 99.0], [129.0, 7328.0], [128.0, 3747.5], [141.0, 20052.0], [140.0, 90.0], [149.0, 83.0], [144.0, 96.0], [150.0, 12180.5], [147.0, 92.0], [145.0, 115.0], [157.0, 20143.0], [155.0, 7539.5], [166.0, 130.5], [168.0, 21744.0], [177.0, 126.0], [191.0, 131.0], [189.0, 2219.0], [193.0, 15543.0], [199.0, 2264.0], [192.0, 13425.0], [207.0, 235.0], [202.0, 99.0], [200.0, 9125.0], [201.0, 9085.0], [215.0, 14195.0], [221.0, 96.0], [218.0, 24287.0], [223.0, 112.0], [224.0, 97.0], [228.0, 163.0], [230.0, 135.0], [231.0, 112.0], [238.0, 105.0], [234.0, 83.0], [237.0, 8030.0], [239.0, 2933.0], [236.0, 105.0], [245.0, 106.0], [240.0, 85.0], [241.0, 89.0], [250.0, 86.0], [251.0, 97.0], [248.0, 308.0], [252.0, 91.0], [249.0, 10749.0], [270.0, 8512.5], [266.0, 89.0], [262.0, 32331.0], [256.0, 11415.5], [272.0, 114.0], [281.0, 16809.0], [302.0, 89.0], [299.0, 751.0], [319.0, 10945.0], [321.0, 144.0], [328.0, 100114.0], [322.0, 96.0], [345.0, 82.0], [351.0, 90.0], [343.0, 107.0], [348.0, 502.5], [355.0, 103.0], [414.0, 17679.0], [462.0, 18672.5], [458.0, 15157.5], [513.0, 15600.0], [543.0, 20225.0], [559.0, 12106.0], [730.0, 18618.0], [761.0, 20856.0], [745.0, 21538.0], [1.0, 20039.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 0.0], [140.0, 0.0], [9.0, 0.0], [43.0, 0.0], [11.0, 0.0], [3.0, 0.0], [207.0, 0.0], [202.0, 0.0], [218.0, 0.0], [245.0, 0.0], [251.0, 0.0], [252.0, 0.0], [4.0, 0.0], [266.0, 0.0], [262.0, 0.0], [281.0, 0.0], [18.0, 0.0], [5.0, 0.0], [328.0, 0.0], [343.0, 0.0], [122.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 761.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 21.45, "minX": 1.6830261E12, "maxY": 136.5, "series": [{"data": [[1.68302634E12, 91.65], [1.68302616E12, 130.65], [1.68302622E12, 136.5], [1.6830261E12, 21.45], [1.6830264E12, 95.45], [1.68302628E12, 111.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6830264E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8, "minX": 1.6830261E12, "maxY": 153.6, "series": [{"data": [[1.68302634E12, 91.3], [1.68302616E12, 107.03333333333333], [1.68302622E12, 153.6], [1.68302652E12, 5.05], [1.6830261E12, 3.1333333333333333], [1.6830264E12, 91.13333333333334], [1.68302646E12, 6.833333333333333], [1.68302628E12, 125.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68302622E12, 2.966666666666667], [1.68302628E12, 0.8]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68302652E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8, "minX": 1.6830261E12, "maxY": 153.6, "series": [{"data": [[1.68302634E12, 91.3], [1.68302616E12, 107.03333333333333], [1.68302622E12, 153.6], [1.68302652E12, 5.05], [1.6830261E12, 3.1333333333333333], [1.6830264E12, 91.13333333333334], [1.68302646E12, 6.833333333333333], [1.68302628E12, 125.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68302622E12, 2.966666666666667], [1.68302628E12, 0.8]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302652E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8, "minX": 1.6830261E12, "maxY": 153.6, "series": [{"data": [[1.68302634E12, 91.3], [1.68302616E12, 107.03333333333333], [1.68302622E12, 153.6], [1.68302652E12, 5.05], [1.6830261E12, 3.1333333333333333], [1.6830264E12, 91.13333333333334], [1.68302646E12, 6.833333333333333], [1.68302628E12, 125.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68302622E12, 2.966666666666667], [1.68302628E12, 0.8]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68302652E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

