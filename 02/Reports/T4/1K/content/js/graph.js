/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 126.0, "minX": 0.0, "maxY": 101145.0, "series": [{"data": [[0.0, 126.0], [0.1, 1166.0], [0.2, 1169.0], [0.3, 1172.0], [0.4, 1174.0], [0.5, 1175.0], [0.6, 1176.0], [0.7, 1177.0], [0.8, 1177.0], [0.9, 1178.0], [1.0, 1179.0], [1.1, 1179.0], [1.2, 1179.0], [1.3, 1179.0], [1.4, 1180.0], [1.5, 1180.0], [1.6, 1180.0], [1.7, 1180.0], [1.8, 1181.0], [1.9, 1181.0], [2.0, 1181.0], [2.1, 1181.0], [2.2, 1181.0], [2.3, 1182.0], [2.4, 1182.0], [2.5, 1182.0], [2.6, 1182.0], [2.7, 1182.0], [2.8, 1182.0], [2.9, 1183.0], [3.0, 1183.0], [3.1, 1183.0], [3.2, 1183.0], [3.3, 1183.0], [3.4, 1184.0], [3.5, 1184.0], [3.6, 1184.0], [3.7, 1184.0], [3.8, 1184.0], [3.9, 1184.0], [4.0, 1185.0], [4.1, 1185.0], [4.2, 1185.0], [4.3, 1185.0], [4.4, 1185.0], [4.5, 1185.0], [4.6, 1185.0], [4.7, 1186.0], [4.8, 1186.0], [4.9, 1186.0], [5.0, 1186.0], [5.1, 1186.0], [5.2, 1186.0], [5.3, 1186.0], [5.4, 1186.0], [5.5, 1186.0], [5.6, 1187.0], [5.7, 1187.0], [5.8, 1187.0], [5.9, 1187.0], [6.0, 1187.0], [6.1, 1187.0], [6.2, 1187.0], [6.3, 1187.0], [6.4, 1187.0], [6.5, 1188.0], [6.6, 1188.0], [6.7, 1188.0], [6.8, 1188.0], [6.9, 1188.0], [7.0, 1188.0], [7.1, 1188.0], [7.2, 1188.0], [7.3, 1188.0], [7.4, 1188.0], [7.5, 1188.0], [7.6, 1188.0], [7.7, 1189.0], [7.8, 1189.0], [7.9, 1189.0], [8.0, 1189.0], [8.1, 1189.0], [8.2, 1189.0], [8.3, 1189.0], [8.4, 1189.0], [8.5, 1189.0], [8.6, 1189.0], [8.7, 1189.0], [8.8, 1189.0], [8.9, 1190.0], [9.0, 1190.0], [9.1, 1190.0], [9.2, 1190.0], [9.3, 1190.0], [9.4, 1190.0], [9.5, 1190.0], [9.6, 1190.0], [9.7, 1190.0], [9.8, 1190.0], [9.9, 1190.0], [10.0, 1191.0], [10.1, 1191.0], [10.2, 1191.0], [10.3, 1191.0], [10.4, 1191.0], [10.5, 1191.0], [10.6, 1191.0], [10.7, 1191.0], [10.8, 1191.0], [10.9, 1191.0], [11.0, 1191.0], [11.1, 1191.0], [11.2, 1191.0], [11.3, 1191.0], [11.4, 1191.0], [11.5, 1191.0], [11.6, 1191.0], [11.7, 1192.0], [11.8, 1192.0], [11.9, 1192.0], [12.0, 1192.0], [12.1, 1192.0], [12.2, 1192.0], [12.3, 1192.0], [12.4, 1192.0], [12.5, 1192.0], [12.6, 1192.0], [12.7, 1192.0], [12.8, 1192.0], [12.9, 1192.0], [13.0, 1193.0], [13.1, 1193.0], [13.2, 1193.0], [13.3, 1193.0], [13.4, 1193.0], [13.5, 1193.0], [13.6, 1193.0], [13.7, 1193.0], [13.8, 1193.0], [13.9, 1193.0], [14.0, 1193.0], [14.1, 1193.0], [14.2, 1193.0], [14.3, 1193.0], [14.4, 1193.0], [14.5, 1193.0], [14.6, 1193.0], [14.7, 1194.0], [14.8, 1194.0], [14.9, 1194.0], [15.0, 1194.0], [15.1, 1194.0], [15.2, 1194.0], [15.3, 1194.0], [15.4, 1194.0], [15.5, 1194.0], [15.6, 1194.0], [15.7, 1194.0], [15.8, 1194.0], [15.9, 1194.0], [16.0, 1194.0], [16.1, 1195.0], [16.2, 1195.0], [16.3, 1195.0], [16.4, 1195.0], [16.5, 1195.0], [16.6, 1195.0], [16.7, 1195.0], [16.8, 1195.0], [16.9, 1195.0], [17.0, 1195.0], [17.1, 1195.0], [17.2, 1195.0], [17.3, 1195.0], [17.4, 1195.0], [17.5, 1195.0], [17.6, 1195.0], [17.7, 1195.0], [17.8, 1196.0], [17.9, 1196.0], [18.0, 1196.0], [18.1, 1196.0], [18.2, 1196.0], [18.3, 1196.0], [18.4, 1196.0], [18.5, 1196.0], [18.6, 1196.0], [18.7, 1196.0], [18.8, 1196.0], [18.9, 1196.0], [19.0, 1196.0], [19.1, 1196.0], [19.2, 1196.0], [19.3, 1196.0], [19.4, 1197.0], [19.5, 1197.0], [19.6, 1197.0], [19.7, 1197.0], [19.8, 1197.0], [19.9, 1197.0], [20.0, 1197.0], [20.1, 1197.0], [20.2, 1197.0], [20.3, 1197.0], [20.4, 1197.0], [20.5, 1197.0], [20.6, 1197.0], [20.7, 1197.0], [20.8, 1197.0], [20.9, 1197.0], [21.0, 1197.0], [21.1, 1197.0], [21.2, 1197.0], [21.3, 1197.0], [21.4, 1197.0], [21.5, 1197.0], [21.6, 1198.0], [21.7, 1198.0], [21.8, 1198.0], [21.9, 1198.0], [22.0, 1198.0], [22.1, 1198.0], [22.2, 1198.0], [22.3, 1198.0], [22.4, 1198.0], [22.5, 1198.0], [22.6, 1198.0], [22.7, 1198.0], [22.8, 1198.0], [22.9, 1198.0], [23.0, 1199.0], [23.1, 1199.0], [23.2, 1199.0], [23.3, 1199.0], [23.4, 1199.0], [23.5, 1199.0], [23.6, 1199.0], [23.7, 1199.0], [23.8, 1199.0], [23.9, 1199.0], [24.0, 1199.0], [24.1, 1199.0], [24.2, 1199.0], [24.3, 1199.0], [24.4, 1199.0], [24.5, 1199.0], [24.6, 1199.0], [24.7, 1200.0], [24.8, 1200.0], [24.9, 1200.0], [25.0, 1200.0], [25.1, 1200.0], [25.2, 1200.0], [25.3, 1200.0], [25.4, 1200.0], [25.5, 1200.0], [25.6, 1200.0], [25.7, 1200.0], [25.8, 1200.0], [25.9, 1200.0], [26.0, 1200.0], [26.1, 1200.0], [26.2, 1200.0], [26.3, 1200.0], [26.4, 1200.0], [26.5, 1200.0], [26.6, 1201.0], [26.7, 1201.0], [26.8, 1201.0], [26.9, 1201.0], [27.0, 1201.0], [27.1, 1201.0], [27.2, 1201.0], [27.3, 1201.0], [27.4, 1201.0], [27.5, 1201.0], [27.6, 1201.0], [27.7, 1201.0], [27.8, 1201.0], [27.9, 1201.0], [28.0, 1201.0], [28.1, 1201.0], [28.2, 1202.0], [28.3, 1202.0], [28.4, 1202.0], [28.5, 1202.0], [28.6, 1202.0], [28.7, 1202.0], [28.8, 1202.0], [28.9, 1202.0], [29.0, 1202.0], [29.1, 1202.0], [29.2, 1202.0], [29.3, 1202.0], [29.4, 1202.0], [29.5, 1202.0], [29.6, 1202.0], [29.7, 1203.0], [29.8, 1203.0], [29.9, 1203.0], [30.0, 1203.0], [30.1, 1203.0], [30.2, 1203.0], [30.3, 1203.0], [30.4, 1203.0], [30.5, 1203.0], [30.6, 1203.0], [30.7, 1203.0], [30.8, 1203.0], [30.9, 1203.0], [31.0, 1203.0], [31.1, 1203.0], [31.2, 1203.0], [31.3, 1203.0], [31.4, 1203.0], [31.5, 1203.0], [31.6, 1204.0], [31.7, 1204.0], [31.8, 1204.0], [31.9, 1204.0], [32.0, 1204.0], [32.1, 1204.0], [32.2, 1204.0], [32.3, 1204.0], [32.4, 1204.0], [32.5, 1204.0], [32.6, 1204.0], [32.7, 1204.0], [32.8, 1204.0], [32.9, 1204.0], [33.0, 1205.0], [33.1, 1205.0], [33.2, 1205.0], [33.3, 1205.0], [33.4, 1205.0], [33.5, 1205.0], [33.6, 1205.0], [33.7, 1205.0], [33.8, 1205.0], [33.9, 1205.0], [34.0, 1205.0], [34.1, 1205.0], [34.2, 1205.0], [34.3, 1205.0], [34.4, 1205.0], [34.5, 1205.0], [34.6, 1205.0], [34.7, 1205.0], [34.8, 1206.0], [34.9, 1206.0], [35.0, 1206.0], [35.1, 1206.0], [35.2, 1206.0], [35.3, 1206.0], [35.4, 1206.0], [35.5, 1206.0], [35.6, 1206.0], [35.7, 1206.0], [35.8, 1206.0], [35.9, 1206.0], [36.0, 1206.0], [36.1, 1206.0], [36.2, 1206.0], [36.3, 1207.0], [36.4, 1207.0], [36.5, 1207.0], [36.6, 1207.0], [36.7, 1207.0], [36.8, 1207.0], [36.9, 1207.0], [37.0, 1207.0], [37.1, 1207.0], [37.2, 1207.0], [37.3, 1207.0], [37.4, 1207.0], [37.5, 1207.0], [37.6, 1207.0], [37.7, 1207.0], [37.8, 1207.0], [37.9, 1207.0], [38.0, 1207.0], [38.1, 1208.0], [38.2, 1208.0], [38.3, 1208.0], [38.4, 1208.0], [38.5, 1208.0], [38.6, 1208.0], [38.7, 1208.0], [38.8, 1208.0], [38.9, 1208.0], [39.0, 1208.0], [39.1, 1208.0], [39.2, 1208.0], [39.3, 1208.0], [39.4, 1209.0], [39.5, 1209.0], [39.6, 1209.0], [39.7, 1209.0], [39.8, 1209.0], [39.9, 1209.0], [40.0, 1209.0], [40.1, 1209.0], [40.2, 1209.0], [40.3, 1209.0], [40.4, 1209.0], [40.5, 1209.0], [40.6, 1209.0], [40.7, 1210.0], [40.8, 1210.0], [40.9, 1210.0], [41.0, 1210.0], [41.1, 1210.0], [41.2, 1210.0], [41.3, 1210.0], [41.4, 1210.0], [41.5, 1210.0], [41.6, 1210.0], [41.7, 1210.0], [41.8, 1210.0], [41.9, 1210.0], [42.0, 1210.0], [42.1, 1210.0], [42.2, 1210.0], [42.3, 1210.0], [42.4, 1211.0], [42.5, 1211.0], [42.6, 1211.0], [42.7, 1211.0], [42.8, 1211.0], [42.9, 1211.0], [43.0, 1211.0], [43.1, 1211.0], [43.2, 1211.0], [43.3, 1211.0], [43.4, 1211.0], [43.5, 1211.0], [43.6, 1211.0], [43.7, 1212.0], [43.8, 1212.0], [43.9, 1212.0], [44.0, 1212.0], [44.1, 1212.0], [44.2, 1212.0], [44.3, 1212.0], [44.4, 1212.0], [44.5, 1212.0], [44.6, 1212.0], [44.7, 1212.0], [44.8, 1212.0], [44.9, 1212.0], [45.0, 1212.0], [45.1, 1213.0], [45.2, 1213.0], [45.3, 1213.0], [45.4, 1213.0], [45.5, 1213.0], [45.6, 1213.0], [45.7, 1213.0], [45.8, 1213.0], [45.9, 1213.0], [46.0, 1213.0], [46.1, 1213.0], [46.2, 1213.0], [46.3, 1213.0], [46.4, 1213.0], [46.5, 1213.0], [46.6, 1214.0], [46.7, 1214.0], [46.8, 1214.0], [46.9, 1214.0], [47.0, 1214.0], [47.1, 1214.0], [47.2, 1214.0], [47.3, 1214.0], [47.4, 1214.0], [47.5, 1214.0], [47.6, 1214.0], [47.7, 1215.0], [47.8, 1215.0], [47.9, 1215.0], [48.0, 1215.0], [48.1, 1215.0], [48.2, 1215.0], [48.3, 1215.0], [48.4, 1215.0], [48.5, 1215.0], [48.6, 1215.0], [48.7, 1215.0], [48.8, 1215.0], [48.9, 1216.0], [49.0, 1216.0], [49.1, 1216.0], [49.2, 1216.0], [49.3, 1216.0], [49.4, 1216.0], [49.5, 1216.0], [49.6, 1216.0], [49.7, 1216.0], [49.8, 1216.0], [49.9, 1216.0], [50.0, 1216.0], [50.1, 1217.0], [50.2, 1217.0], [50.3, 1217.0], [50.4, 1217.0], [50.5, 1217.0], [50.6, 1217.0], [50.7, 1217.0], [50.8, 1217.0], [50.9, 1217.0], [51.0, 1217.0], [51.1, 1217.0], [51.2, 1217.0], [51.3, 1217.0], [51.4, 1218.0], [51.5, 1218.0], [51.6, 1218.0], [51.7, 1218.0], [51.8, 1218.0], [51.9, 1218.0], [52.0, 1218.0], [52.1, 1218.0], [52.2, 1218.0], [52.3, 1218.0], [52.4, 1218.0], [52.5, 1219.0], [52.6, 1219.0], [52.7, 1219.0], [52.8, 1219.0], [52.9, 1219.0], [53.0, 1219.0], [53.1, 1219.0], [53.2, 1219.0], [53.3, 1219.0], [53.4, 1219.0], [53.5, 1220.0], [53.6, 1220.0], [53.7, 1220.0], [53.8, 1220.0], [53.9, 1220.0], [54.0, 1220.0], [54.1, 1220.0], [54.2, 1220.0], [54.3, 1220.0], [54.4, 1221.0], [54.5, 1221.0], [54.6, 1221.0], [54.7, 1221.0], [54.8, 1221.0], [54.9, 1221.0], [55.0, 1221.0], [55.1, 1221.0], [55.2, 1221.0], [55.3, 1221.0], [55.4, 1221.0], [55.5, 1222.0], [55.6, 1222.0], [55.7, 1222.0], [55.8, 1222.0], [55.9, 1222.0], [56.0, 1222.0], [56.1, 1222.0], [56.2, 1222.0], [56.3, 1222.0], [56.4, 1222.0], [56.5, 1222.0], [56.6, 1223.0], [56.7, 1223.0], [56.8, 1223.0], [56.9, 1223.0], [57.0, 1223.0], [57.1, 1223.0], [57.2, 1223.0], [57.3, 1223.0], [57.4, 1223.0], [57.5, 1223.0], [57.6, 1224.0], [57.7, 1224.0], [57.8, 1224.0], [57.9, 1224.0], [58.0, 1224.0], [58.1, 1224.0], [58.2, 1224.0], [58.3, 1224.0], [58.4, 1224.0], [58.5, 1224.0], [58.6, 1224.0], [58.7, 1225.0], [58.8, 1225.0], [58.9, 1225.0], [59.0, 1225.0], [59.1, 1225.0], [59.2, 1225.0], [59.3, 1225.0], [59.4, 1225.0], [59.5, 1225.0], [59.6, 1225.0], [59.7, 1226.0], [59.8, 1226.0], [59.9, 1226.0], [60.0, 1226.0], [60.1, 1226.0], [60.2, 1226.0], [60.3, 1226.0], [60.4, 1226.0], [60.5, 1226.0], [60.6, 1226.0], [60.7, 1226.0], [60.8, 1227.0], [60.9, 1227.0], [61.0, 1227.0], [61.1, 1227.0], [61.2, 1227.0], [61.3, 1227.0], [61.4, 1227.0], [61.5, 1227.0], [61.6, 1227.0], [61.7, 1227.0], [61.8, 1228.0], [61.9, 1228.0], [62.0, 1228.0], [62.1, 1228.0], [62.2, 1228.0], [62.3, 1228.0], [62.4, 1228.0], [62.5, 1228.0], [62.6, 1228.0], [62.7, 1228.0], [62.8, 1228.0], [62.9, 1229.0], [63.0, 1229.0], [63.1, 1229.0], [63.2, 1229.0], [63.3, 1229.0], [63.4, 1229.0], [63.5, 1229.0], [63.6, 1229.0], [63.7, 1229.0], [63.8, 1229.0], [63.9, 1230.0], [64.0, 1230.0], [64.1, 1230.0], [64.2, 1230.0], [64.3, 1230.0], [64.4, 1230.0], [64.5, 1231.0], [64.6, 1231.0], [64.7, 1231.0], [64.8, 1231.0], [64.9, 1231.0], [65.0, 1231.0], [65.1, 1231.0], [65.2, 1231.0], [65.3, 1231.0], [65.4, 1232.0], [65.5, 1232.0], [65.6, 1232.0], [65.7, 1232.0], [65.8, 1232.0], [65.9, 1232.0], [66.0, 1233.0], [66.1, 1233.0], [66.2, 1233.0], [66.3, 1233.0], [66.4, 1233.0], [66.5, 1233.0], [66.6, 1233.0], [66.7, 1233.0], [66.8, 1233.0], [66.9, 1233.0], [67.0, 1234.0], [67.1, 1234.0], [67.2, 1234.0], [67.3, 1234.0], [67.4, 1234.0], [67.5, 1235.0], [67.6, 1235.0], [67.7, 1235.0], [67.8, 1235.0], [67.9, 1235.0], [68.0, 1235.0], [68.1, 1235.0], [68.2, 1235.0], [68.3, 1235.0], [68.4, 1236.0], [68.5, 1236.0], [68.6, 1236.0], [68.7, 1236.0], [68.8, 1236.0], [68.9, 1236.0], [69.0, 1236.0], [69.1, 1237.0], [69.2, 1237.0], [69.3, 1237.0], [69.4, 1237.0], [69.5, 1237.0], [69.6, 1237.0], [69.7, 1238.0], [69.8, 1238.0], [69.9, 1238.0], [70.0, 1238.0], [70.1, 1238.0], [70.2, 1238.0], [70.3, 1239.0], [70.4, 1239.0], [70.5, 1239.0], [70.6, 1239.0], [70.7, 1239.0], [70.8, 1239.0], [70.9, 1239.0], [71.0, 1240.0], [71.1, 1240.0], [71.2, 1240.0], [71.3, 1240.0], [71.4, 1241.0], [71.5, 1241.0], [71.6, 1241.0], [71.7, 1241.0], [71.8, 1241.0], [71.9, 1241.0], [72.0, 1242.0], [72.1, 1242.0], [72.2, 1242.0], [72.3, 1242.0], [72.4, 1242.0], [72.5, 1242.0], [72.6, 1243.0], [72.7, 1243.0], [72.8, 1243.0], [72.9, 1243.0], [73.0, 1244.0], [73.1, 1244.0], [73.2, 1244.0], [73.3, 1244.0], [73.4, 1244.0], [73.5, 1244.0], [73.6, 1244.0], [73.7, 1245.0], [73.8, 1245.0], [73.9, 1245.0], [74.0, 1245.0], [74.1, 1245.0], [74.2, 1246.0], [74.3, 1246.0], [74.4, 1246.0], [74.5, 1246.0], [74.6, 1246.0], [74.7, 1247.0], [74.8, 1247.0], [74.9, 1247.0], [75.0, 1247.0], [75.1, 1247.0], [75.2, 1247.0], [75.3, 1248.0], [75.4, 1248.0], [75.5, 1248.0], [75.6, 1248.0], [75.7, 1248.0], [75.8, 1249.0], [75.9, 1249.0], [76.0, 1249.0], [76.1, 1249.0], [76.2, 1249.0], [76.3, 1250.0], [76.4, 1250.0], [76.5, 1250.0], [76.6, 1250.0], [76.7, 1250.0], [76.8, 1250.0], [76.9, 1251.0], [77.0, 1251.0], [77.1, 1251.0], [77.2, 1252.0], [77.3, 1252.0], [77.4, 1252.0], [77.5, 1252.0], [77.6, 1252.0], [77.7, 1253.0], [77.8, 1253.0], [77.9, 1253.0], [78.0, 1253.0], [78.1, 1254.0], [78.2, 1254.0], [78.3, 1254.0], [78.4, 1255.0], [78.5, 1255.0], [78.6, 1255.0], [78.7, 1255.0], [78.8, 1256.0], [78.9, 1256.0], [79.0, 1256.0], [79.1, 1257.0], [79.2, 1257.0], [79.3, 1257.0], [79.4, 1258.0], [79.5, 1258.0], [79.6, 1258.0], [79.7, 1259.0], [79.8, 1259.0], [79.9, 1260.0], [80.0, 1260.0], [80.1, 1260.0], [80.2, 1261.0], [80.3, 1261.0], [80.4, 1261.0], [80.5, 1261.0], [80.6, 1262.0], [80.7, 1262.0], [80.8, 1263.0], [80.9, 1263.0], [81.0, 1263.0], [81.1, 1264.0], [81.2, 1265.0], [81.3, 1265.0], [81.4, 1265.0], [81.5, 1266.0], [81.6, 1267.0], [81.7, 1267.0], [81.8, 1268.0], [81.9, 1268.0], [82.0, 1269.0], [82.1, 1270.0], [82.2, 1270.0], [82.3, 1271.0], [82.4, 1272.0], [82.5, 1272.0], [82.6, 1273.0], [82.7, 1274.0], [82.8, 1274.0], [82.9, 1274.0], [83.0, 1275.0], [83.1, 1276.0], [83.2, 1277.0], [83.3, 1277.0], [83.4, 1278.0], [83.5, 1279.0], [83.6, 1280.0], [83.7, 1281.0], [83.8, 1281.0], [83.9, 1282.0], [84.0, 1283.0], [84.1, 1284.0], [84.2, 1285.0], [84.3, 1288.0], [84.4, 1289.0], [84.5, 1292.0], [84.6, 1293.0], [84.7, 1295.0], [84.8, 1296.0], [84.9, 1300.0], [85.0, 1302.0], [85.1, 1305.0], [85.2, 1308.0], [85.3, 1310.0], [85.4, 1316.0], [85.5, 1323.0], [85.6, 1327.0], [85.7, 1330.0], [85.8, 1336.0], [85.9, 1346.0], [86.0, 1351.0], [86.1, 1358.0], [86.2, 1364.0], [86.3, 1394.0], [86.4, 1400.0], [86.5, 1405.0], [86.6, 1411.0], [86.7, 1418.0], [86.8, 1421.0], [86.9, 1423.0], [87.0, 1424.0], [87.1, 1427.0], [87.2, 1431.0], [87.3, 1433.0], [87.4, 1435.0], [87.5, 1437.0], [87.6, 1438.0], [87.7, 1440.0], [87.8, 1441.0], [87.9, 1441.0], [88.0, 1443.0], [88.1, 1444.0], [88.2, 1446.0], [88.3, 1448.0], [88.4, 1449.0], [88.5, 1451.0], [88.6, 1455.0], [88.7, 1457.0], [88.8, 1458.0], [88.9, 1460.0], [89.0, 1461.0], [89.1, 1463.0], [89.2, 1468.0], [89.3, 1471.0], [89.4, 1473.0], [89.5, 1474.0], [89.6, 1476.0], [89.7, 1479.0], [89.8, 1484.0], [89.9, 1485.0], [90.0, 1487.0], [90.1, 1492.0], [90.2, 1501.0], [90.3, 1510.0], [90.4, 1520.0], [90.5, 1524.0], [90.6, 1533.0], [90.7, 1539.0], [90.8, 1542.0], [90.9, 1547.0], [91.0, 1550.0], [91.1, 1557.0], [91.2, 1565.0], [91.3, 1586.0], [91.4, 1623.0], [91.5, 1681.0], [91.6, 1701.0], [91.7, 1718.0], [91.8, 1738.0], [91.9, 1769.0], [92.0, 1800.0], [92.1, 1835.0], [92.2, 1849.0], [92.3, 1873.0], [92.4, 1886.0], [92.5, 1904.0], [92.6, 1965.0], [92.7, 2153.0], [92.8, 2179.0], [92.9, 2225.0], [93.0, 2244.0], [93.1, 2290.0], [93.2, 2314.0], [93.3, 2337.0], [93.4, 2495.0], [93.5, 2583.0], [93.6, 2745.0], [93.7, 3071.0], [93.8, 4277.0], [93.9, 4853.0], [94.0, 5088.0], [94.1, 5161.0], [94.2, 5466.0], [94.3, 5754.0], [94.4, 5841.0], [94.5, 5952.0], [94.6, 6021.0], [94.7, 6128.0], [94.8, 6393.0], [94.9, 6476.0], [95.0, 6730.0], [95.1, 6893.0], [95.2, 7058.0], [95.3, 7122.0], [95.4, 7282.0], [95.5, 7387.0], [95.6, 7524.0], [95.7, 7622.0], [95.8, 7914.0], [95.9, 8192.0], [96.0, 8483.0], [96.1, 8596.0], [96.2, 8787.0], [96.3, 9232.0], [96.4, 9663.0], [96.5, 10435.0], [96.6, 13005.0], [96.7, 14662.0], [96.8, 15544.0], [96.9, 16024.0], [97.0, 16739.0], [97.1, 17025.0], [97.2, 17410.0], [97.3, 17577.0], [97.4, 18282.0], [97.5, 18681.0], [97.6, 18919.0], [97.7, 19143.0], [97.8, 19381.0], [97.9, 19642.0], [98.0, 19872.0], [98.1, 19946.0], [98.2, 20127.0], [98.3, 20440.0], [98.4, 20785.0], [98.5, 20879.0], [98.6, 21063.0], [98.7, 21332.0], [98.8, 21952.0], [98.9, 22175.0], [99.0, 22407.0], [99.1, 22632.0], [99.2, 23224.0], [99.3, 23432.0], [99.4, 23509.0], [99.5, 23778.0], [99.6, 24427.0], [99.7, 25263.0], [99.8, 25807.0], [99.9, 26497.0], [100.0, 101145.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 3081.0, "series": [{"data": [[101100.0, 1.0], [100.0, 3.0], [1100.0, 1260.0], [1200.0, 3081.0], [1300.0, 77.0], [1400.0, 194.0], [1500.0, 61.0], [1600.0, 11.0], [1700.0, 20.0], [1800.0, 26.0], [1900.0, 7.0], [2000.0, 1.0], [2100.0, 12.0], [2200.0, 13.0], [2300.0, 11.0], [2400.0, 3.0], [2500.0, 5.0], [2600.0, 3.0], [2700.0, 2.0], [2800.0, 2.0], [3000.0, 3.0], [3200.0, 1.0], [3600.0, 1.0], [3700.0, 1.0], [4200.0, 2.0], [4300.0, 1.0], [4600.0, 1.0], [4500.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [5100.0, 9.0], [5000.0, 3.0], [4900.0, 2.0], [5400.0, 2.0], [5600.0, 1.0], [5500.0, 1.0], [5700.0, 4.0], [5800.0, 6.0], [6000.0, 6.0], [5900.0, 6.0], [6100.0, 2.0], [6300.0, 4.0], [6400.0, 7.0], [6500.0, 2.0], [6600.0, 1.0], [6700.0, 4.0], [6800.0, 2.0], [6900.0, 3.0], [7100.0, 6.0], [7000.0, 3.0], [7200.0, 5.0], [7300.0, 4.0], [7400.0, 3.0], [7600.0, 4.0], [7500.0, 5.0], [7900.0, 4.0], [7700.0, 1.0], [7800.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8500.0, 4.0], [8200.0, 2.0], [8300.0, 2.0], [8400.0, 2.0], [8700.0, 2.0], [8600.0, 3.0], [9100.0, 3.0], [9200.0, 1.0], [8800.0, 1.0], [9300.0, 1.0], [9400.0, 3.0], [9600.0, 1.0], [9700.0, 1.0], [10100.0, 2.0], [10400.0, 1.0], [10500.0, 1.0], [10300.0, 1.0], [11000.0, 1.0], [12200.0, 1.0], [12500.0, 2.0], [13000.0, 1.0], [14300.0, 1.0], [13900.0, 1.0], [14500.0, 1.0], [14400.0, 1.0], [14600.0, 1.0], [15000.0, 1.0], [14900.0, 1.0], [15100.0, 1.0], [15400.0, 1.0], [15500.0, 2.0], [15600.0, 1.0], [16000.0, 2.0], [16200.0, 1.0], [15900.0, 2.0], [16500.0, 1.0], [16700.0, 3.0], [17400.0, 5.0], [16800.0, 2.0], [17000.0, 2.0], [17100.0, 1.0], [17200.0, 2.0], [16400.0, 1.0], [17800.0, 1.0], [18200.0, 2.0], [18300.0, 1.0], [17600.0, 1.0], [17500.0, 1.0], [18100.0, 1.0], [19200.0, 1.0], [18500.0, 3.0], [18600.0, 2.0], [18700.0, 4.0], [18900.0, 1.0], [19100.0, 4.0], [19000.0, 2.0], [19400.0, 3.0], [19300.0, 3.0], [19700.0, 3.0], [19900.0, 5.0], [20400.0, 5.0], [19500.0, 1.0], [19600.0, 1.0], [19800.0, 4.0], [20000.0, 2.0], [20200.0, 2.0], [20100.0, 1.0], [21500.0, 1.0], [20500.0, 2.0], [21100.0, 1.0], [21200.0, 1.0], [21400.0, 1.0], [20800.0, 4.0], [20900.0, 2.0], [21000.0, 4.0], [20700.0, 3.0], [21300.0, 2.0], [22400.0, 3.0], [22500.0, 2.0], [21900.0, 3.0], [22100.0, 2.0], [22200.0, 2.0], [22300.0, 2.0], [21700.0, 1.0], [21800.0, 1.0], [22000.0, 1.0], [22600.0, 1.0], [22800.0, 1.0], [23200.0, 3.0], [23300.0, 4.0], [23400.0, 4.0], [23500.0, 6.0], [22900.0, 1.0], [23000.0, 1.0], [24100.0, 1.0], [24400.0, 2.0], [23900.0, 1.0], [23700.0, 1.0], [24300.0, 1.0], [24000.0, 1.0], [24800.0, 1.0], [25500.0, 1.0], [24600.0, 1.0], [25400.0, 2.0], [24900.0, 1.0], [25200.0, 1.0], [25800.0, 2.0], [26300.0, 1.0], [25700.0, 1.0], [26600.0, 1.0], [26200.0, 1.0], [26100.0, 1.0], [26400.0, 1.0], [26700.0, 1.0], [28000.0, 1.0], [29600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 101100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4612.0, "series": [{"data": [[0.0, 3.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4612.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 502.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 119.80252100840329, "minX": 1.68421962E12, "maxY": 3000.0, "series": [{"data": [[1.6842198E12, 1854.247393364929], [1.68421992E12, 119.80252100840329], [1.68421962E12, 3000.0], [1.68421974E12, 2791.8159041394333], [1.68421968E12, 3000.0], [1.68421986E12, 782.7316176470596]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68421992E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1164.0, "minX": 1.0, "maxY": 101145.0, "series": [{"data": [[3.0, 1264.0], [4.0, 1267.0], [5.0, 1255.0], [6.0, 1261.0], [8.0, 1256.5], [11.0, 1258.0], [13.0, 1253.5], [14.0, 1252.0], [16.0, 1249.0], [17.0, 1242.0], [18.0, 1296.0], [20.0, 1281.0], [21.0, 1281.0], [24.0, 1273.0], [25.0, 1273.0], [27.0, 1272.5], [28.0, 1207.0], [29.0, 1201.0], [30.0, 1197.0], [31.0, 1192.5], [35.0, 1219.0], [34.0, 1188.6666666666667], [37.0, 1227.0], [36.0, 1203.0], [39.0, 1187.0], [38.0, 1223.0], [41.0, 1196.0], [40.0, 1173.0], [43.0, 1190.0], [42.0, 1193.0], [44.0, 1190.0], [47.0, 1182.0], [46.0, 1186.0], [49.0, 1181.5], [51.0, 1178.0], [50.0, 1179.0], [53.0, 1215.0], [52.0, 1230.0], [55.0, 1203.0], [54.0, 1208.0], [57.0, 1198.0], [56.0, 1201.0], [59.0, 1197.0], [60.0, 1197.0], [63.0, 1193.0], [62.0, 1193.0], [66.0, 1188.0], [65.0, 1190.0], [64.0, 1191.0], [70.0, 1242.0], [69.0, 1332.0], [68.0, 1186.5], [74.0, 1205.0], [73.0, 1214.0], [72.0, 1227.5], [79.0, 1196.5], [77.0, 1200.0], [83.0, 1189.0], [82.0, 1191.0], [81.0, 1195.0], [80.0, 1193.0], [87.0, 1211.0], [86.0, 1541.0], [85.0, 1184.0], [84.0, 1186.0], [91.0, 1204.0], [90.0, 1205.0], [89.0, 1206.0], [88.0, 1208.0], [95.0, 1197.0], [94.0, 1201.0], [93.0, 1202.0], [92.0, 1203.0], [98.0, 1196.0], [97.0, 1195.0], [96.0, 1197.0], [102.0, 1186.0], [101.0, 1189.0], [100.0, 1191.5], [107.0, 1179.5], [105.0, 1184.0], [104.0, 1186.5], [111.0, 1173.0], [110.0, 1177.0], [109.0, 1175.0], [108.0, 1196.0], [115.0, 1181.0], [114.0, 1179.0], [113.0, 1183.0], [112.0, 1172.0], [119.0, 1164.0], [118.0, 1166.0], [117.0, 1177.0], [116.0, 1176.0], [123.0, 1214.0], [122.0, 1229.0], [121.0, 1231.0], [120.0, 1543.0], [127.0, 1207.0], [126.0, 1210.0], [125.0, 1212.0], [124.0, 1213.0], [135.0, 1196.0], [134.0, 1196.0], [133.0, 1197.5], [131.0, 1198.5], [129.0, 1200.0], [128.0, 1203.0], [143.0, 1222.5], [141.0, 1225.0], [140.0, 1230.0], [139.0, 1246.0], [138.0, 1252.0], [137.0, 1255.0], [136.0, 1194.0], [151.0, 1211.5], [149.0, 1216.5], [147.0, 1218.6666666666667], [144.0, 1220.0], [159.0, 1195.0], [158.0, 1197.0], [157.0, 1202.0], [156.0, 1205.0], [155.0, 1224.0], [154.0, 1241.0], [153.0, 1211.5], [167.0, 1189.0], [165.0, 1189.0], [163.0, 1191.6666666666667], [160.0, 1194.0], [175.0, 1187.0], [174.0, 1189.0], [173.0, 1202.0], [172.0, 1195.0], [171.0, 1198.0], [170.0, 1179.0], [169.0, 1181.0], [168.0, 1187.5], [183.0, 1210.0], [182.0, 1210.0], [181.0, 1181.0], [180.0, 1181.0], [179.0, 1201.5], [177.0, 1190.0], [191.0, 1221.0], [190.0, 1222.0], [189.0, 1252.5], [187.0, 1202.0], [186.0, 1201.0], [184.0, 1204.0], [199.0, 1205.0], [198.0, 1207.0], [197.0, 1208.0], [196.0, 1213.6666666666667], [193.0, 1214.5], [207.0, 1209.0], [206.0, 1211.0], [205.0, 1218.0], [204.0, 1192.0], [203.0, 1196.0], [202.0, 1197.0], [201.0, 1202.0], [200.0, 1205.0], [215.0, 1197.0], [214.0, 1200.0], [212.0, 1200.0], [211.0, 1202.5], [209.0, 1208.5], [223.0, 1241.0], [222.0, 1246.0], [221.0, 1182.0], [220.0, 1186.0], [219.0, 1191.0], [218.0, 1194.0], [217.0, 1193.0], [216.0, 1197.0], [231.0, 1231.0], [230.0, 1231.0], [229.0, 1232.0], [228.0, 1232.0], [227.0, 1233.0], [225.0, 1234.0], [224.0, 1239.0], [239.0, 1229.0], [238.0, 1217.0], [237.0, 1221.0], [236.0, 1223.0], [234.0, 1225.0], [233.0, 1227.0], [232.0, 1229.0], [247.0, 1194.0], [246.0, 1196.0], [245.0, 1199.0], [243.0, 1201.0], [242.0, 1202.0], [241.0, 1210.0], [240.0, 1213.0], [255.0, 1183.0], [254.0, 1184.0], [252.0, 1189.0], [251.0, 1193.0], [250.0, 1193.0], [249.0, 1193.0], [248.0, 1195.0], [270.0, 1190.0], [271.0, 1188.0], [269.0, 1190.0], [268.0, 1194.0], [267.0, 1193.0], [266.0, 1196.0], [265.0, 1195.0], [264.0, 1198.0], [263.0, 1200.5], [256.0, 1224.0], [258.0, 1208.0], [257.0, 1221.0], [261.0, 1205.0], [260.0, 1206.0], [286.0, 1209.0], [287.0, 1208.0], [285.0, 1215.0], [284.0, 1223.0], [283.0, 1225.0], [282.0, 1225.0], [281.0, 1229.0], [280.0, 1229.0], [277.0, 1231.0], [275.0, 1242.0], [274.0, 1263.0], [273.0, 1268.0], [272.0, 1186.0], [276.0, 2019.0], [301.0, 1202.0], [303.0, 1197.0], [300.0, 1167.0], [291.0, 1355.0], [290.0, 1198.0], [289.0, 1203.0], [288.0, 1208.0], [299.0, 1204.0], [298.0, 1204.0], [297.0, 1210.5], [296.0, 1210.0], [294.0, 1209.0], [293.0, 1215.0], [292.0, 1230.0], [306.0, 1189.0], [318.0, 1241.5], [316.0, 1241.0], [315.0, 1244.0], [314.0, 1252.0], [312.0, 1255.0], [311.0, 1256.0], [310.0, 1259.0], [309.0, 1295.3333333333333], [305.0, 1193.0], [304.0, 1199.0], [333.0, 1228.0], [334.0, 1226.0], [332.0, 1228.0], [323.0, 1228.0], [322.0, 1236.0], [320.0, 1238.0], [331.0, 1243.0], [330.0, 1260.0], [329.0, 1281.0], [328.0, 1983.0], [327.0, 5121.0], [326.0, 2583.0], [325.0, 5111.0], [324.0, 5982.0], [350.0, 1207.0], [351.0, 1205.0], [349.0, 1207.0], [348.0, 1209.0], [347.0, 1211.0], [346.0, 1251.0], [345.0, 1201.0], [342.0, 1210.0], [336.0, 1221.5], [339.0, 1213.0], [337.0, 1218.0], [341.0, 1207.0], [340.0, 1213.0], [366.0, 1210.0], [367.0, 1209.0], [365.0, 1213.3333333333333], [353.0, 1202.0], [352.0, 1203.0], [362.0, 1222.0], [361.0, 1190.0], [360.0, 1194.5], [358.0, 1196.0], [357.0, 1199.0], [356.0, 1200.0], [382.0, 1201.0], [383.0, 1200.0], [381.0, 1203.0], [380.0, 1204.0], [379.0, 1210.0], [378.0, 2368.0], [377.0, 1193.0], [376.0, 1197.0], [375.0, 1199.5], [369.0, 1209.0], [368.0, 1208.0], [371.0, 1204.0], [370.0, 1205.0], [398.0, 2178.0], [399.0, 1799.0], [397.0, 1873.0], [396.0, 1874.0], [395.0, 1875.0], [394.0, 1189.0], [393.0, 1190.5], [392.0, 1191.0], [390.0, 1192.0], [385.0, 1199.5], [387.0, 1197.0], [386.0, 1197.0], [389.0, 1195.0], [388.0, 1197.0], [414.0, 1288.0], [415.0, 1285.0], [413.0, 1296.0], [412.0, 1294.0], [411.0, 1448.0], [410.0, 1195.0], [409.0, 1197.0], [408.0, 1206.0], [407.0, 1225.0], [401.0, 1760.0], [400.0, 1769.0], [403.0, 1265.0], [402.0, 1430.0], [405.0, 1249.0], [404.0, 1251.0], [430.0, 1247.0], [431.0, 1246.0], [428.0, 1246.0], [419.0, 1274.0], [418.0, 1279.5], [416.0, 1280.0], [427.0, 1252.0], [426.0, 1250.0], [425.0, 1252.0], [424.0, 1261.0], [423.0, 1262.0], [422.0, 1265.0], [421.0, 1261.0], [420.0, 1271.0], [446.0, 1272.0], [447.0, 1270.0], [445.0, 1275.0], [444.0, 1282.0], [443.0, 1293.0], [442.0, 1228.5], [440.0, 1231.0], [439.0, 1232.0], [433.0, 1242.0], [432.0, 1245.0], [435.0, 1241.0], [434.0, 1239.0], [438.0, 1233.0], [437.0, 1233.0], [436.0, 1242.0], [462.0, 1194.0], [463.0, 1218.0], [461.0, 1248.0], [460.0, 1233.0], [459.0, 1186.0], [458.0, 1250.0], [457.0, 1254.0], [456.0, 1255.0], [455.0, 1261.0], [449.0, 1266.0], [448.0, 1266.0], [451.0, 1262.0], [450.0, 1264.0], [453.0, 1260.0], [452.0, 1259.0], [477.0, 1276.0], [479.0, 1275.0], [476.0, 1184.0], [466.0, 1189.0], [465.0, 1214.0], [464.0, 1219.0], [475.0, 1191.0], [474.0, 1195.0], [473.0, 1175.0], [472.0, 1197.0], [471.0, 1207.0], [470.0, 1204.0], [469.0, 1205.0], [468.0, 1202.0], [493.0, 1206.0], [495.0, 1252.5], [492.0, 1204.0], [483.0, 1274.0], [481.0, 1274.5], [491.0, 1207.0], [490.0, 1218.0], [489.0, 1228.0], [488.0, 1233.0], [487.0, 1278.0], [486.0, 1275.5], [485.0, 1273.0], [510.0, 1197.0], [511.0, 1190.0], [509.0, 1199.0], [508.0, 1201.0], [507.0, 1203.0], [506.0, 1203.0], [505.0, 1209.0], [504.0, 1211.0], [503.0, 1211.5], [497.0, 1229.0], [496.0, 1231.0], [501.0, 1216.0], [500.0, 1226.0], [540.0, 1188.0], [542.0, 1188.0], [538.0, 1192.0], [536.0, 1193.5], [534.0, 1195.0], [530.0, 1199.0], [528.0, 1207.0], [526.0, 1191.0], [512.0, 1214.0], [518.0, 1205.0], [514.0, 1211.0], [524.0, 1194.0], [522.0, 1197.0], [520.0, 1200.0], [570.0, 1198.5], [572.0, 1196.0], [568.0, 1199.0], [550.0, 1201.0], [548.0, 1206.0], [546.0, 1211.0], [544.0, 1185.0], [566.0, 1208.0], [564.0, 1220.0], [562.0, 1875.0], [560.0, 1191.0], [558.0, 1194.0], [556.0, 1195.0], [602.0, 1207.0], [604.0, 1209.0], [600.0, 1197.0], [582.0, 1227.0], [580.0, 1180.0], [576.0, 1189.0], [598.0, 1183.0], [596.0, 2814.0], [594.0, 1195.0], [592.0, 1199.0], [590.0, 1201.0], [588.0, 1208.0], [584.0, 1220.0], [636.0, 1225.0], [638.0, 1223.0], [634.0, 1230.0], [632.0, 1235.0], [630.0, 1245.0], [628.0, 1219.0], [624.0, 1224.0], [622.0, 1227.0], [608.0, 1168.0], [614.0, 1259.0], [612.0, 1195.0], [620.0, 1232.0], [618.0, 1246.0], [616.0, 1259.5], [664.0, 1278.0], [668.0, 1256.0], [670.0, 1251.5], [666.0, 1273.0], [662.0, 1217.0], [656.0, 1221.0], [650.0, 1258.0], [648.0, 1267.0], [646.0, 1201.0], [642.0, 1212.0], [698.0, 4914.0], [696.0, 1189.0], [678.0, 1237.0], [672.0, 1253.0], [694.0, 1196.0], [692.0, 1200.0], [690.0, 1201.6666666666667], [688.0, 1202.0], [684.0, 1206.5], [682.0, 1223.0], [680.0, 1237.0], [730.0, 1194.0], [734.0, 1187.0], [728.0, 1198.0], [710.0, 1205.0], [708.0, 1204.0], [706.0, 1206.0], [726.0, 1200.0], [724.0, 1199.0], [720.0, 1221.0], [718.0, 1224.0], [716.0, 1191.0], [712.0, 1201.3333333333333], [766.0, 1207.0], [762.0, 1213.0], [742.0, 1203.0], [740.0, 1210.5], [738.0, 1213.0], [736.0, 1217.0], [758.0, 1261.0], [756.0, 5158.0], [754.0, 5083.0], [752.0, 5829.0], [750.0, 1187.0], [748.0, 1191.5], [746.0, 1195.0], [744.0, 1197.0], [796.0, 1208.0], [798.0, 1203.0], [794.0, 1212.0], [792.0, 1216.0], [790.0, 1224.0], [788.0, 1185.0], [786.0, 1186.0], [784.0, 1187.0], [782.0, 1192.5], [770.0, 1203.5], [768.0, 1206.0], [774.0, 1215.0], [772.0, 1201.5], [780.0, 1194.0], [778.0, 1198.0], [776.0, 1203.0], [828.0, 1358.0], [830.0, 1187.0], [826.0, 1195.0], [824.0, 1197.0], [822.0, 1885.0], [820.0, 1827.0], [818.0, 1408.0], [816.0, 1344.0], [814.0, 1528.0], [800.0, 1197.0], [806.0, 1188.0], [804.0, 1194.0], [812.0, 1716.0], [810.0, 1635.0], [808.0, 1674.0], [860.0, 1217.0], [862.0, 1212.0], [858.0, 1225.0], [856.0, 1244.5], [854.0, 1196.0], [852.0, 1201.0], [850.0, 1203.0], [848.0, 1209.0], [846.0, 1210.0], [832.0, 1176.0], [838.0, 1187.0], [834.0, 1207.0], [842.0, 1215.0], [840.0, 1396.0], [892.0, 1208.0], [894.0, 1204.0], [888.0, 1210.0], [870.0, 1268.0], [868.0, 1202.0], [864.0, 1206.0], [886.0, 1222.0], [884.0, 1238.0], [882.0, 1242.5], [880.0, 1243.0], [878.0, 1248.0], [876.0, 1251.0], [874.0, 1257.0], [872.0, 1263.0], [920.0, 1193.6666666666667], [926.0, 1201.0], [924.0, 1201.0], [922.0, 1213.0], [916.0, 1197.0], [910.0, 1204.0], [904.0, 2317.0], [902.0, 1188.0], [900.0, 1191.0], [898.0, 1197.0], [952.0, 1185.0], [956.0, 1309.0], [958.0, 1277.0], [954.0, 1405.0], [948.0, 1197.5], [946.0, 1201.0], [940.0, 1206.0], [928.0, 1198.0], [934.0, 1191.0], [932.0, 1196.5], [938.0, 1208.0], [936.0, 1191.0], [988.0, 1568.0], [990.0, 1228.0], [986.0, 1230.0], [984.0, 1215.5], [982.0, 1216.0], [980.0, 1235.0], [978.0, 1201.0], [976.0, 1240.0], [972.0, 1213.0], [962.0, 1228.0], [960.0, 1231.0], [966.0, 1195.0], [964.0, 1198.0], [970.0, 1218.0], [968.0, 1195.0], [1022.0, 1247.0], [1020.0, 1205.0], [998.0, 1217.0], [994.0, 1221.0], [992.0, 1216.0], [1014.0, 1219.5], [1012.0, 1221.0], [1010.0, 1224.0], [1008.0, 1227.0], [1006.0, 1234.0], [1004.0, 1201.0], [1002.0, 1207.0], [1000.0, 1210.0], [1080.0, 1204.0], [1084.0, 1199.5], [1072.0, 1272.0], [1036.0, 1211.0], [1032.0, 1220.5], [1024.0, 1233.0], [1068.0, 1194.0], [1064.0, 1195.0], [1060.0, 1207.0], [1052.0, 1207.0], [1048.0, 1239.0], [1044.0, 1225.5], [1040.0, 1213.0], [1140.0, 1255.0], [1148.0, 1203.0], [1124.0, 1217.0], [1144.0, 1211.0], [1128.0, 1206.0], [1120.0, 1185.5], [1112.0, 1197.0], [1104.0, 1224.0], [1100.0, 1245.0], [1096.0, 1249.5], [1088.0, 1191.0], [1208.0, 1187.0], [1212.0, 2700.0], [1184.0, 1218.0], [1188.0, 1209.0], [1200.0, 1201.3333333333333], [1160.0, 1222.6666666666667], [1156.0, 1191.0], [1180.0, 1222.5], [1176.0, 1236.0], [1172.0, 1204.5], [1168.0, 1213.2], [1192.0, 5115.0], [1264.0, 1452.0], [1276.0, 1217.0], [1248.0, 1437.0], [1252.0, 1543.0], [1272.0, 1229.0], [1216.0, 1204.0], [1220.0, 1195.0], [1224.0, 1195.0], [1228.0, 1253.0], [1244.0, 1808.0], [1240.0, 1193.0], [1236.0, 1193.5], [1232.0, 1199.0], [1260.0, 1195.0], [1256.0, 1218.0], [1336.0, 1191.5], [1340.0, 1186.0], [1312.0, 1219.0], [1316.0, 1217.0], [1320.0, 1208.0], [1328.0, 1199.0], [1292.0, 1212.0], [1284.0, 1222.0], [1308.0, 1190.0], [1304.0, 1199.0], [1300.0, 1206.0], [1296.0, 1222.0], [1324.0, 1203.0], [1396.0, 1221.5], [1400.0, 1201.0], [1376.0, 1182.0], [1404.0, 1195.0], [1392.0, 1190.0], [1372.0, 1185.0], [1344.0, 1561.0], [1352.0, 1224.6666666666667], [1348.0, 1231.0], [1356.0, 1222.25], [1368.0, 1201.0], [1364.0, 1206.0], [1360.0, 1215.0], [1456.0, 1220.5], [1468.0, 1237.0], [1444.0, 1192.0], [1464.0, 1245.0], [1412.0, 1712.0], [1436.0, 1190.0], [1432.0, 1207.0], [1428.0, 1206.0], [1424.0, 1193.0], [1452.0, 1222.0], [1448.0, 1233.0], [1484.0, 1201.0], [1528.0, 1189.0], [1532.0, 2184.0], [1504.0, 1208.0], [1480.0, 1270.0], [1476.0, 1220.0], [1500.0, 1212.0], [1496.0, 1187.0], [1512.0, 1205.0], [1592.0, 1209.0], [1596.0, 1203.0], [1568.0, 1234.5], [1576.0, 1215.0], [1588.0, 1217.0], [1584.0, 1229.0], [1548.0, 1221.0], [1544.0, 1229.0], [1540.0, 1231.0], [1536.0, 1239.5], [1564.0, 1179.0], [1556.0, 1194.0], [1580.0, 1212.5], [1648.0, 1192.5], [1656.0, 1197.0], [1632.0, 1186.0], [1636.0, 1212.0], [1652.0, 1227.0], [1600.0, 1623.0], [1604.0, 1403.0], [1608.0, 1207.0], [1624.0, 1200.0], [1620.0, 1248.0], [1616.0, 1188.0], [1644.0, 1199.0], [1640.0, 1206.5], [1716.0, 1204.0], [1696.0, 1191.0], [1700.0, 1179.0], [1720.0, 1206.0], [1664.0, 1192.0], [1668.0, 1208.0], [1672.0, 1202.0], [1676.0, 1188.0], [1692.0, 1193.0], [1688.0, 1204.0], [1684.0, 1251.0], [1680.0, 1182.0], [1708.0, 1217.0], [1776.0, 1219.0], [1788.0, 1243.0], [1764.0, 1207.3333333333333], [1784.0, 1208.0], [1728.0, 1192.0], [1740.0, 1224.0], [1756.0, 1216.5], [1752.0, 1226.0], [1748.0, 1206.0], [1772.0, 1232.0], [1768.0, 1192.0], [1848.0, 1220.0], [1852.0, 1216.6666666666667], [1832.0, 1229.0], [1824.0, 1243.0], [1828.0, 1234.5], [1840.0, 1236.0], [1804.0, 1256.0], [1796.0, 1207.0], [1792.0, 1213.0], [1820.0, 1701.0], [1808.0, 1223.0], [1836.0, 1225.0], [1912.0, 1206.0], [1888.0, 5714.0], [1896.0, 1214.0], [1916.0, 1204.0], [1908.0, 1217.0], [1904.0, 1201.5], [1856.0, 1234.0], [1860.0, 1218.0], [1884.0, 1189.0], [1880.0, 1193.0], [1872.0, 1217.0], [1972.0, 1183.0], [1976.0, 1225.0], [1960.0, 1245.0], [1952.0, 1203.0], [1956.0, 1193.0], [1932.0, 1193.0], [1924.0, 1208.0], [1920.0, 1197.0], [1944.0, 1329.0], [1940.0, 5466.0], [1936.0, 1186.0], [1964.0, 1218.0], [2040.0, 1183.0], [2044.0, 2246.0], [2016.0, 1194.0], [2020.0, 1187.0], [2024.0, 1177.0], [2032.0, 1199.0], [1996.0, 1205.0], [1992.0, 1231.0], [1988.0, 1195.0], [2012.0, 1201.0], [2008.0, 1173.0], [2004.0, 1192.0], [2028.0, 1210.0], [2152.0, 1192.5], [2160.0, 1174.0], [2112.0, 1215.0], [2120.0, 1202.5], [2128.0, 1211.0], [2136.0, 1203.0], [2144.0, 1195.0], [2048.0, 1746.0], [2064.0, 1208.0], [2072.0, 1218.0], [2104.0, 1204.0], [2096.0, 1244.0], [2080.0, 1228.0], [2280.0, 1234.0], [2296.0, 1179.0], [2240.0, 1904.0], [2248.0, 1219.0], [2256.0, 1190.0], [2264.0, 1307.0], [2272.0, 1178.0], [2200.0, 1206.0], [2184.0, 1205.0], [2176.0, 1225.0], [2232.0, 2337.0], [2216.0, 1203.0], [2424.0, 1220.0], [2416.0, 1685.0], [2368.0, 1457.0], [2376.0, 1222.0], [2384.0, 1261.0], [2392.0, 1197.0], [2400.0, 1864.0], [2328.0, 1191.0], [2360.0, 1197.0], [2352.0, 1253.0], [2344.0, 1198.0], [2336.0, 1265.0], [2552.0, 1361.0], [2512.0, 1540.0], [2496.0, 1195.5], [2504.0, 1858.0], [2520.0, 1216.0], [2536.0, 1194.0], [2432.0, 1193.0], [2440.0, 1224.0], [2456.0, 1205.0], [2488.0, 1267.0], [2480.0, 1221.0], [2472.0, 1250.0], [2464.0, 1193.5], [2680.0, 1205.0], [2624.0, 1207.0], [2632.0, 1191.0], [2640.0, 1443.0], [2648.0, 1206.5], [2672.0, 1248.0], [2664.0, 1191.0], [2560.0, 1269.0], [2568.0, 1235.0], [2576.0, 1203.0], [2584.0, 1187.0], [2616.0, 1230.0], [2608.0, 1251.0], [2600.0, 1181.0], [2592.0, 1198.0], [2800.0, 1229.0], [2808.0, 1210.0], [2752.0, 1215.0], [2760.0, 1210.0], [2776.0, 1246.0], [2792.0, 1188.0], [2688.0, 1182.0], [2704.0, 1187.0], [2744.0, 1192.0], [2736.0, 1191.0], [2728.0, 1216.0], [2720.0, 1186.0], [2936.0, 1186.0], [2880.0, 1241.0], [2888.0, 1189.0], [2896.0, 1213.0], [2904.0, 1190.0], [2928.0, 1230.0], [2920.0, 1191.3333333333333], [2912.0, 1216.0], [2840.0, 1222.0], [2832.0, 1233.0], [2824.0, 1260.0], [2872.0, 1191.0], [2856.0, 1184.0], [2848.0, 1194.0], [2944.0, 1465.0], [3000.0, 3205.5353773584866], [2960.0, 1213.0], [2968.0, 1190.5], [2992.0, 1187.0], [2984.0, 1201.0], [2976.0, 1179.0], [2153.0, 1191.0], [2121.0, 1202.0], [2137.0, 1200.0], [2161.0, 1253.0], [2145.0, 1208.0], [2049.0, 1842.0], [2057.0, 1549.5], [2065.0, 1207.0], [2105.0, 1200.0], [2097.0, 1235.0], [2089.0, 1194.5], [2081.0, 1221.0], [2289.0, 1201.0], [2281.0, 1180.0], [2297.0, 1227.0], [2241.0, 1906.0], [2249.0, 1217.0], [2257.0, 1540.0], [2265.0, 1308.0], [2177.0, 1223.0], [2185.0, 1198.0], [2193.0, 1181.0], [2201.0, 1206.0], [2233.0, 1851.0], [2225.0, 1185.5], [2217.0, 1202.0], [2209.0, 1188.0], [2417.0, 1585.0], [2409.0, 1194.0], [2425.0, 1213.0], [2369.0, 1320.0], [2377.0, 1217.0], [2385.0, 1214.0], [2393.0, 1195.0], [2401.0, 1445.0], [2305.0, 1199.5], [2313.0, 1190.5], [2321.0, 1204.5], [2353.0, 1226.0], [2345.0, 1192.0], [2337.0, 1224.0], [2545.0, 1213.0], [2537.0, 1235.0], [2505.0, 1523.0], [2513.0, 1311.0], [2521.0, 1274.0], [2553.0, 1351.0], [2529.0, 1238.0], [2457.0, 1203.0], [2449.0, 1197.0], [2441.0, 1225.0], [2433.0, 1192.0], [2489.0, 1188.0], [2473.0, 1248.0], [2665.0, 1189.0], [2673.0, 1244.0], [2625.0, 1206.0], [2633.0, 1190.0], [2641.0, 1424.0], [2649.0, 1200.0], [2657.0, 1182.0], [2561.0, 1263.0], [2569.0, 1428.0], [2585.0, 1178.0], [2593.0, 1195.0], [2785.0, 1206.0], [2761.0, 1210.0], [2753.0, 1203.0], [2777.0, 1227.0], [2793.0, 1248.0], [2689.0, 1471.0], [2705.0, 1217.0], [2713.0, 1195.0], [2745.0, 1193.0], [2737.0, 1181.0], [2729.0, 1209.0], [2721.0, 1177.0], [2929.0, 1226.0], [2881.0, 1233.0], [2889.0, 1186.0], [2897.0, 1203.0], [2905.0, 1188.5], [2913.0, 1211.0], [2841.0, 1215.0], [2833.0, 1234.0], [2817.0, 1198.0], [2873.0, 1185.0], [2865.0, 1197.3333333333333], [2857.0, 1181.0], [2849.0, 1193.0], [2953.0, 1217.0], [2961.0, 1211.0], [2993.0, 1189.0], [2977.0, 1212.0], [1081.0, 1203.0], [1085.0, 1200.0], [1077.0, 1209.0], [1073.0, 1224.0], [1069.0, 1191.0], [1065.0, 1199.0], [1061.0, 1206.0], [1057.0, 1216.0], [1053.0, 1205.0], [1037.0, 1212.0], [1025.0, 1222.0], [1049.0, 1235.0], [1045.0, 1197.0], [1041.0, 1258.0], [1141.0, 1214.0], [1125.0, 1212.0], [1129.0, 1205.0], [1145.0, 1209.0], [1137.0, 1196.5], [1101.0, 1226.0], [1093.0, 1249.0], [1133.0, 1203.3333333333333], [1121.0, 1185.0], [1117.0, 1189.5], [1109.0, 1203.0], [1105.0, 1223.0], [1209.0, 1186.0], [1185.0, 1218.0], [1189.0, 1205.0], [1193.0, 1223.0], [1213.0, 1215.0], [1205.0, 1193.0], [1201.0, 1200.0], [1157.0, 1226.0], [1161.0, 1220.0], [1177.0, 1233.0], [1173.0, 1203.0], [1169.0, 1207.0], [1197.0, 1206.0], [1273.0, 1227.0], [1249.0, 1404.0], [1253.0, 1231.0], [1257.0, 1203.0], [1277.0, 1897.0], [1269.0, 1237.5], [1265.0, 1432.0], [1217.0, 1203.0], [1225.0, 1194.0], [1229.0, 1216.0], [1245.0, 1519.0], [1241.0, 1190.0], [1233.0, 1200.0], [1261.0, 1195.0], [1333.0, 1195.0], [1329.0, 1199.0], [1313.0, 1220.0], [1317.0, 1213.0], [1337.0, 1191.0], [1281.0, 1228.0], [1285.0, 1223.0], [1289.0, 1218.5], [1293.0, 1206.0], [1305.0, 1197.0], [1301.0, 1205.0], [1297.0, 1218.0], [1325.0, 1200.0], [1321.0, 1204.0], [1397.0, 1208.0], [1393.0, 1188.0], [1377.0, 1169.0], [1381.0, 1219.0], [1401.0, 1200.0], [1349.0, 1227.0], [1345.0, 1688.0], [1357.0, 1218.0], [1373.0, 1181.0], [1369.0, 1195.0], [1365.0, 1205.0], [1361.0, 1208.0], [1389.0, 1198.0], [1385.0, 1206.0], [1461.0, 1215.5], [1469.0, 1234.0], [1441.0, 1196.0], [1445.0, 1190.0], [1465.0, 1243.0], [1421.0, 1199.5], [1417.0, 1204.5], [1413.0, 1295.0], [1409.0, 1189.0], [1433.0, 1205.0], [1429.0, 1186.0], [1425.0, 1192.0], [1449.0, 1226.0], [1529.0, 1183.0], [1533.0, 1326.0], [1509.0, 1206.5], [1513.0, 1193.0], [1525.0, 1193.0], [1521.0, 1198.3333333333333], [1485.0, 1200.0], [1481.0, 1205.0], [1477.0, 1220.0], [1501.0, 1211.0], [1497.0, 1230.0], [1493.0, 1191.5], [1489.0, 1197.0], [1517.0, 1201.0], [1589.0, 1215.0], [1597.0, 1202.0], [1569.0, 1232.0], [1573.0, 1220.5], [1585.0, 1225.0], [1549.0, 1222.0], [1541.0, 1231.0], [1537.0, 1238.0], [1565.0, 1179.0], [1561.0, 1187.0], [1553.0, 1200.0], [1581.0, 1207.0], [1609.0, 1205.0], [1649.0, 1188.0], [1633.0, 1184.0], [1653.0, 1207.0], [1629.0, 1190.5], [1601.0, 1427.0], [1605.0, 1792.0], [1613.0, 1196.0], [1625.0, 1198.0], [1621.0, 1224.0], [1617.0, 1415.0], [1645.0, 1197.0], [1641.0, 1203.0], [1677.0, 1188.0], [1705.0, 1219.0], [1697.0, 1190.0], [1717.0, 1196.0], [1673.0, 1195.0], [1665.0, 1189.0], [1689.0, 1199.0], [1685.0, 1228.0], [1709.0, 1212.0], [1701.0, 1232.0], [1781.0, 1213.0], [1785.0, 1207.0], [1761.0, 1212.0], [1765.0, 1205.0], [1777.0, 1219.0], [1753.0, 1225.0], [1733.0, 1186.3333333333333], [1741.0, 1228.5], [1737.0, 1228.0], [1749.0, 1207.0], [1745.0, 1221.25], [1773.0, 1231.0], [1769.0, 1247.0], [1849.0, 1217.0], [1833.0, 1227.0], [1853.0, 1213.0], [1825.0, 1240.0], [1841.0, 1231.0], [1805.0, 1227.0], [1801.0, 1198.0], [1797.0, 1207.0], [1793.0, 1211.0], [1821.0, 1256.0], [1813.0, 1215.5], [1837.0, 1222.0], [1913.0, 1205.0], [1889.0, 1365.0], [1893.0, 1219.5], [1917.0, 1203.0], [1909.0, 1213.0], [1905.0, 1195.0], [1857.0, 1227.0], [1869.0, 1213.6666666666667], [1885.0, 1188.0], [1877.0, 1201.5], [1873.0, 1215.0], [1901.0, 1207.0], [1977.0, 1219.0], [1953.0, 1199.0], [1957.0, 1188.0], [1981.0, 1206.5], [1973.0, 1181.0], [1969.0, 1211.5], [1921.0, 1192.0], [1925.0, 1206.0], [1929.0, 1198.3333333333333], [1933.0, 1189.0], [1949.0, 1217.0], [1945.0, 1323.0], [1941.0, 101145.0], [1937.0, 1182.0], [1965.0, 1217.0], [2041.0, 1183.0], [2045.0, 1800.0], [2021.0, 1183.0], [2017.0, 1191.0], [2025.0, 1175.0], [2033.0, 1197.0], [1997.0, 1203.0], [1993.0, 1207.0], [1989.0, 1195.0], [1985.0, 1201.0], [2013.0, 1201.0], [2009.0, 1212.0], [2001.0, 1200.0], [2029.0, 1206.0], [2170.0, 1234.6666666666667], [2114.0, 1213.5], [2122.0, 1200.0], [2138.0, 1200.0], [2162.0, 1252.0], [2154.0, 1187.0], [2146.0, 1185.0], [2074.0, 1214.5], [2066.0, 1192.0], [2058.0, 1287.0], [2050.0, 1831.0], [2106.0, 1199.0], [2098.0, 1235.0], [2090.0, 1194.0], [2082.0, 1216.0], [2298.0, 1229.0], [2242.0, 1946.0], [2250.0, 1215.0], [2258.0, 1588.0], [2266.0, 1323.0], [2290.0, 1199.0], [2282.0, 1236.0], [2274.0, 1222.5], [2202.0, 1199.0], [2194.0, 1178.0], [2186.0, 1195.0], [2178.0, 1445.0], [2234.0, 2226.0], [2226.0, 1185.0], [2218.0, 1199.0], [2418.0, 1548.0], [2370.0, 1252.0], [2378.0, 1218.0], [2394.0, 1195.0], [2426.0, 1215.0], [2402.0, 1437.0], [2306.0, 1194.0], [2314.0, 1235.0], [2322.0, 1203.0], [2330.0, 1183.0], [2362.0, 1194.0], [2354.0, 1224.0], [2346.0, 1189.0], [2338.0, 1209.0], [2554.0, 1330.0], [2538.0, 1185.0], [2498.0, 1216.0], [2506.0, 1492.0], [2514.0, 1302.0], [2522.0, 1249.0], [2546.0, 1213.0], [2530.0, 1229.0], [2434.0, 1192.0], [2450.0, 1194.0], [2458.0, 1203.0], [2482.0, 1212.5], [2474.0, 1244.0], [2466.0, 1191.5], [2682.0, 1201.5], [2634.0, 1184.0], [2642.0, 1238.0], [2650.0, 1198.0], [2674.0, 1238.0], [2666.0, 1191.0], [2658.0, 1194.5], [2562.0, 1257.0], [2586.0, 1441.0], [2610.0, 1247.5], [2602.0, 1178.5], [2594.0, 1192.0], [2794.0, 1237.0], [2802.0, 1224.5], [2754.0, 1203.0], [2770.0, 1200.0], [2778.0, 1224.0], [2786.0, 1203.0], [2690.0, 1443.0], [2698.0, 1202.3333333333333], [2714.0, 1194.0], [2746.0, 1193.0], [2738.0, 1183.0], [2730.0, 1208.0], [2722.0, 1458.0], [2938.0, 1184.5], [2882.0, 1216.0], [2890.0, 1186.0], [2906.0, 1193.0], [2930.0, 1222.0], [2922.0, 1186.0], [2842.0, 1215.0], [2834.0, 1229.0], [2826.0, 1329.0], [2818.0, 1197.5], [2874.0, 1183.5], [2858.0, 1230.0], [2850.0, 1190.0], [2954.0, 1218.5], [2946.0, 1451.0], [2962.0, 1205.0], [2970.0, 1188.0], [2994.0, 1459.0], [2986.0, 1198.0], [2978.0, 1214.0], [2163.0, 1247.0], [2123.0, 1196.0], [2131.0, 1210.0], [2139.0, 1197.0], [2171.0, 1235.0], [2155.0, 1188.0], [2147.0, 1185.0], [2051.0, 1557.0], [2059.0, 1252.0], [2067.0, 1190.0], [2075.0, 1212.0], [2107.0, 1196.0], [2091.0, 1291.0], [2291.0, 1190.0], [2299.0, 1216.0], [2243.0, 1354.0], [2251.0, 1217.0], [2259.0, 1484.0], [2267.0, 1247.0], [2283.0, 1215.0], [2275.0, 1238.0], [2179.0, 5059.0], [2187.0, 1192.0], [2195.0, 1172.0], [2203.0, 1196.0], [2235.0, 2192.0], [2227.0, 1184.0], [2211.0, 1186.0], [2419.0, 3043.0], [2427.0, 1213.0], [2371.0, 1244.0], [2387.0, 1206.5], [2395.0, 1194.0], [2411.0, 1191.5], [2403.0, 1437.0], [2307.0, 1193.0], [2315.0, 1221.0], [2331.0, 1451.0], [2363.0, 1192.0], [2355.0, 1218.0], [2347.0, 1183.0], [2339.0, 1203.0], [2451.0, 6128.0], [2539.0, 1184.0], [2555.0, 1310.0], [2523.0, 1248.0], [2507.0, 1464.0], [2515.0, 1284.0], [2443.0, 1209.0], [2435.0, 1192.0], [2491.0, 1237.0], [2483.0, 1211.0], [2475.0, 1237.0], [2467.0, 1190.0], [2675.0, 1235.0], [2667.0, 1188.0], [2627.0, 1207.0], [2635.0, 1182.0], [2643.0, 1223.0], [2651.0, 1195.0], [2683.0, 1197.0], [2659.0, 1181.0], [2563.0, 1252.0], [2571.0, 1238.0], [2579.0, 1193.6666666666667], [2587.0, 1433.0], [2619.0, 1226.6666666666667], [2611.0, 1242.0], [2603.0, 1380.0], [2803.0, 1228.0], [2811.0, 1205.6666666666667], [2755.0, 1200.0], [2763.0, 1201.0], [2779.0, 1222.0], [2795.0, 1244.0], [2787.0, 1201.0], [2691.0, 1221.0], [2707.0, 1203.0], [2747.0, 1191.0], [2739.0, 1219.0], [2731.0, 1202.0], [2723.0, 1444.0], [2923.0, 1186.0], [2915.0, 1207.5], [2883.0, 1216.0], [2891.0, 1183.0], [2939.0, 1182.0], [2931.0, 1209.0], [2843.0, 1210.0], [2835.0, 1226.0], [2827.0, 1248.0], [2819.0, 1196.0], [2875.0, 1461.0], [2867.0, 1194.0], [2859.0, 1224.0], [2851.0, 1187.0], [2995.0, 1447.0], [2947.0, 1449.0], [2971.0, 1187.0], [2987.0, 1198.0], [2979.0, 1216.0], [519.0, 1203.0], [539.0, 1192.0], [537.0, 1195.0], [533.0, 1196.0], [529.0, 1205.0], [527.0, 1183.0], [525.0, 1191.0], [523.0, 1195.0], [517.0, 1207.0], [515.0, 1209.0], [513.0, 1213.0], [575.0, 1190.5], [573.0, 1192.0], [551.0, 1200.0], [549.0, 1206.0], [547.0, 1207.0], [545.0, 1239.0], [567.0, 1203.0], [565.0, 1211.0], [563.0, 1845.0], [561.0, 1188.0], [559.0, 1190.0], [557.0, 1194.0], [555.0, 1196.0], [553.0, 1198.5], [605.0, 1206.0], [607.0, 1184.5], [603.0, 1205.0], [601.0, 1209.0], [597.0, 1208.0], [595.0, 1189.0], [593.0, 1200.0], [591.0, 1201.0], [581.0, 1197.0], [579.0, 1187.6666666666667], [589.0, 1206.0], [587.0, 1191.0], [585.0, 1178.0], [637.0, 1225.0], [639.0, 1224.0], [635.0, 1227.0], [633.0, 1234.0], [631.0, 1237.0], [629.0, 1209.0], [625.0, 1219.0], [621.0, 1228.0], [613.0, 1192.0], [609.0, 1194.0], [619.0, 1235.0], [617.0, 1249.0], [667.0, 1261.0], [665.0, 1274.0], [647.0, 1281.0], [645.0, 1207.0], [643.0, 1205.0], [641.0, 1217.5], [663.0, 1215.0], [661.0, 1216.0], [659.0, 1219.0], [657.0, 1221.0], [655.0, 1227.0], [653.0, 1233.5], [651.0, 1249.0], [649.0, 1258.0], [697.0, 1188.0], [701.0, 1219.0], [703.0, 1209.5], [699.0, 5161.0], [695.0, 1196.0], [693.0, 1202.0], [685.0, 1205.0], [681.0, 1237.0], [677.0, 1239.5], [675.0, 1244.5], [673.0, 1247.0], [729.0, 1195.0], [733.0, 1191.0], [735.0, 1235.0], [731.0, 1192.0], [727.0, 1197.0], [723.0, 1196.0], [719.0, 1222.0], [707.0, 1205.0], [705.0, 1207.5], [717.0, 1848.0], [715.0, 1192.0], [713.0, 1195.0], [763.0, 1213.0], [765.0, 1210.0], [761.0, 1219.5], [743.0, 1201.0], [741.0, 1206.0], [737.0, 1214.0], [759.0, 1247.0], [757.0, 5175.0], [755.0, 5165.0], [753.0, 5932.0], [751.0, 5851.0], [749.0, 1188.0], [745.0, 1194.0], [797.0, 1203.0], [799.0, 1200.0], [795.0, 1209.0], [775.0, 1205.0], [773.0, 1197.0], [791.0, 1218.0], [789.0, 1185.0], [787.0, 1189.0], [785.0, 1188.0], [779.0, 1195.0], [777.0, 1201.0], [829.0, 1193.0], [831.0, 1185.0], [827.0, 1358.0], [825.0, 1197.0], [821.0, 1205.0], [819.0, 1406.0], [817.0, 1442.0], [815.0, 1519.0], [803.0, 1196.0], [807.0, 5135.0], [805.0, 1190.0], [813.0, 1692.0], [811.0, 1780.0], [809.0, 1651.0], [857.0, 1232.0], [861.0, 1215.0], [863.0, 1208.0], [859.0, 1221.0], [853.0, 1196.0], [849.0, 1204.0], [847.0, 1208.0], [835.0, 1206.0], [833.0, 1182.0], [839.0, 1454.0], [837.0, 1203.0], [845.0, 1212.0], [843.0, 1214.0], [841.0, 1229.0], [893.0, 1203.0], [895.0, 1202.0], [891.0, 1206.5], [889.0, 1209.0], [887.0, 1211.0], [885.0, 1235.0], [883.0, 1241.0], [879.0, 1247.0], [867.0, 1202.5], [865.0, 1202.0], [871.0, 1265.0], [869.0, 1272.0], [877.0, 1254.0], [873.0, 1258.0], [923.0, 1202.0], [925.0, 1202.0], [921.0, 1191.0], [903.0, 2623.0], [901.0, 1191.0], [899.0, 1193.0], [897.0, 1200.0], [917.0, 1196.0], [915.0, 1197.0], [913.0, 1201.0], [911.0, 1202.0], [909.0, 1207.3333333333333], [907.0, 1209.0], [905.0, 1228.0], [957.0, 1283.0], [959.0, 1261.0], [955.0, 1383.0], [953.0, 1546.0], [951.0, 1191.0], [949.0, 1193.0], [945.0, 1203.5], [943.0, 1205.0], [933.0, 1192.0], [931.0, 1199.0], [941.0, 1205.0], [937.0, 1189.0], [985.0, 1231.0], [989.0, 1236.0], [991.0, 1227.0], [987.0, 1557.0], [979.0, 1200.0], [977.0, 1202.0], [975.0, 1245.5], [963.0, 1204.0], [961.0, 1230.0], [967.0, 1192.0], [965.0, 1197.0], [973.0, 1247.0], [969.0, 1191.0], [1017.0, 1211.5], [1021.0, 1254.0], [1023.0, 1234.0], [1019.0, 1210.0], [1015.0, 1218.0], [1011.0, 1218.0], [1007.0, 1189.0], [995.0, 1220.0], [993.0, 1224.0], [999.0, 1212.0], [997.0, 1217.0], [1005.0, 1235.0], [1003.0, 1207.0], [1001.0, 1208.0], [1082.0, 1200.0], [1086.0, 1197.0], [1078.0, 1206.0], [1038.0, 1214.0], [1034.0, 1219.5], [1030.0, 1217.6666666666667], [1026.0, 1223.0], [1070.0, 1191.0], [1062.0, 1202.0], [1058.0, 1207.0], [1054.0, 1200.0], [1050.0, 1217.0], [1046.0, 1244.0], [1042.0, 1233.5], [1142.0, 1212.0], [1150.0, 1202.5], [1138.0, 1193.0], [1102.0, 1226.0], [1098.0, 1247.0], [1094.0, 1247.6666666666667], [1134.0, 1199.0], [1130.0, 1205.0], [1126.0, 1209.0], [1122.0, 1183.0], [1118.0, 1188.0], [1114.0, 1196.5], [1110.0, 1197.0], [1106.0, 1220.0], [1206.0, 1194.0], [1202.0, 1195.0], [1214.0, 1211.0], [1186.0, 1216.0], [1190.0, 1192.0], [1210.0, 1533.0], [1162.0, 1216.0], [1154.0, 1197.3333333333333], [1182.0, 1220.0], [1178.0, 1226.0], [1174.0, 1886.0], [1170.0, 1210.0], [1194.0, 1210.0], [1266.0, 1267.0], [1274.0, 1226.0], [1250.0, 1329.0], [1270.0, 1238.0], [1246.0, 1763.0], [1218.0, 1199.0], [1222.0, 1199.0], [1226.0, 1189.0], [1230.0, 1203.0], [1242.0, 1192.0], [1238.0, 1192.5], [1234.0, 1194.0], [1262.0, 1188.0], [1258.0, 1200.0], [1334.0, 1193.0], [1330.0, 1198.0], [1342.0, 1183.5], [1314.0, 1220.0], [1322.0, 1202.0], [1338.0, 1189.0], [1294.0, 1226.0], [1290.0, 1217.0], [1310.0, 1183.5], [1306.0, 1200.0], [1302.0, 1205.0], [1298.0, 1217.0], [1326.0, 1198.0], [1402.0, 1198.0], [1406.0, 1194.0], [1382.0, 1214.0], [1378.0, 1849.0], [1398.0, 1206.0], [1394.0, 1182.0], [1346.0, 1234.0], [1358.0, 1216.0], [1370.0, 1191.0], [1390.0, 1195.0], [1386.0, 1204.0], [1458.0, 1217.5], [1466.0, 1241.0], [1442.0, 1194.0], [1462.0, 1210.0], [1438.0, 1199.5], [1410.0, 1189.0], [1414.0, 1212.0], [1422.0, 1199.0], [1418.0, 1204.0], [1434.0, 1204.0], [1430.0, 1215.0], [1426.0, 1191.0], [1454.0, 1222.0], [1446.0, 1190.0], [1526.0, 1192.0], [1506.0, 1208.5], [1534.0, 1250.0], [1530.0, 1181.0], [1486.0, 1199.0], [1482.0, 1205.0], [1478.0, 1216.0], [1474.0, 1224.0], [1502.0, 1213.0], [1498.0, 1227.0], [1494.0, 1190.0], [1490.0, 1196.0], [1514.0, 1209.0], [1510.0, 1204.0], [1586.0, 1222.0], [1598.0, 1201.0], [1574.0, 1220.0], [1570.0, 1232.0], [1578.0, 1213.5], [1594.0, 1208.5], [1550.0, 1316.0], [1546.0, 1224.5], [1542.0, 1230.0], [1538.0, 1237.0], [1566.0, 1243.0], [1562.0, 1185.5], [1558.0, 1190.0], [1582.0, 1209.0], [1654.0, 1200.0], [1658.0, 1192.0], [1634.0, 1282.0], [1638.0, 1209.5], [1650.0, 1276.0], [1630.0, 1189.0], [1602.0, 1424.0], [1606.0, 1278.0], [1614.0, 1193.0], [1626.0, 1195.0], [1622.0, 1217.0], [1618.0, 1253.0], [1646.0, 1193.0], [1642.0, 1202.0], [1714.0, 1208.6666666666667], [1722.0, 1204.0], [1726.0, 1195.6666666666667], [1698.0, 1187.0], [1718.0, 1260.0], [1694.0, 1194.0], [1666.0, 1180.0], [1670.0, 1201.0], [1674.0, 1195.0], [1678.0, 1187.0], [1690.0, 1197.0], [1682.0, 1182.5], [1710.0, 1212.0], [1706.0, 1222.0], [1702.0, 1231.0], [1782.0, 1215.0], [1790.0, 1215.5], [1766.0, 1205.0], [1786.0, 1547.0], [1758.0, 1215.0], [1734.0, 1181.0], [1730.0, 1190.0], [1738.0, 1227.0], [1754.0, 1219.0], [1750.0, 1205.0], [1746.0, 1220.0], [1774.0, 1222.0], [1770.0, 1241.0], [1846.0, 1225.6], [1854.0, 1242.0], [1826.0, 1237.0], [1830.0, 1233.0], [1802.0, 1198.5], [1798.0, 1202.0], [1822.0, 1252.0], [1818.0, 1212.0], [1814.0, 1215.5], [1810.0, 1225.0], [1838.0, 1246.0], [1834.0, 1228.0], [1910.0, 1212.0], [1918.0, 1200.0], [1890.0, 1258.0], [1914.0, 1204.0], [1906.0, 1257.0], [1886.0, 1182.0], [1862.0, 1219.0], [1870.0, 1209.0], [1866.0, 1213.75], [1902.0, 1206.0], [1898.0, 1211.0], [1974.0, 1178.0], [1978.0, 1215.0], [1954.0, 1197.0], [1958.0, 1293.0], [1970.0, 1209.0], [1934.0, 1188.0], [1930.0, 1194.0], [1926.0, 1200.0], [1922.0, 1192.0], [1950.0, 1215.0], [1946.0, 1298.0], [1942.0, 1547.0], [1938.0, 1184.0], [1966.0, 1213.0], [1962.0, 1239.0], [2038.0, 1187.0], [2034.0, 1195.0], [2046.0, 1890.0], [2018.0, 1189.0], [2026.0, 1219.0], [2042.0, 1182.0], [1994.0, 1206.0], [1990.0, 1188.0], [1986.0, 1199.0], [2014.0, 1200.0], [2010.0, 1208.0], [2006.0, 1190.0], [2002.0, 1197.0], [2030.0, 1202.0], [2172.0, 1231.0], [2116.0, 1210.0], [2124.0, 1191.0], [2140.0, 1196.0], [2164.0, 1247.0], [2156.0, 1181.0], [2148.0, 1178.0], [2108.0, 1193.0], [2052.0, 1485.0], [2060.0, 1247.0], [2068.0, 1289.0], [2100.0, 1233.0], [2092.0, 1191.0], [2300.0, 1212.0], [2244.0, 1270.0], [2252.0, 1212.0], [2260.0, 1439.0], [2268.0, 1212.0], [2292.0, 1190.0], [2284.0, 1212.0], [2276.0, 1243.0], [2204.0, 1194.0], [2196.0, 1422.0], [2180.0, 1442.0], [2236.0, 2237.0], [2228.0, 1183.0], [2220.0, 1195.5], [2212.0, 1176.0], [2420.0, 1343.0], [2404.0, 1209.0], [2372.0, 1233.0], [2380.0, 1215.0], [2388.0, 1205.0], [2396.0, 1192.0], [2428.0, 1212.0], [2412.0, 1188.0], [2316.0, 1216.0], [2324.0, 1197.5], [2332.0, 1451.0], [2364.0, 1188.0], [2356.0, 1219.0], [2348.0, 1542.0], [2340.0, 1203.0], [2540.0, 1185.0], [2508.0, 1395.0], [2516.0, 1271.0], [2524.0, 1246.0], [2548.0, 1211.5], [2532.0, 1229.0], [2492.0, 1232.5], [2436.0, 1226.0], [2452.0, 5898.0], [2460.0, 1199.0], [2484.0, 1210.0], [2476.0, 1231.0], [2468.0, 1179.0], [2684.0, 1196.0], [2676.0, 1234.0], [2628.0, 1202.0], [2636.0, 1177.0], [2644.0, 1240.0], [2652.0, 1191.0], [2668.0, 1186.0], [2572.0, 1224.0], [2580.0, 1197.0], [2588.0, 1224.0], [2620.0, 1245.0], [2604.0, 1284.0], [2596.0, 1187.5], [2788.0, 1196.0], [2796.0, 1233.0], [2804.0, 1221.0], [2756.0, 1224.0], [2764.0, 1202.5], [2772.0, 1196.0], [2692.0, 1222.0], [2700.0, 1201.0], [2748.0, 1186.0], [2740.0, 1219.0], [2732.0, 1198.0], [2724.0, 1437.0], [2940.0, 1181.0], [2932.0, 1201.0], [2892.0, 1229.0], [2884.0, 1205.0], [2900.0, 1201.0], [2908.0, 1184.0], [2924.0, 1182.0], [2916.0, 1202.0], [2844.0, 1208.0], [2836.0, 1226.0], [2828.0, 1242.0], [2876.0, 1452.0], [2860.0, 1205.0], [2956.0, 1214.0], [2948.0, 1244.0], [2964.0, 1201.0], [2972.0, 1183.0], [2996.0, 1438.0], [2988.0, 1194.0], [2980.0, 1205.0], [2157.0, 1180.0], [2165.0, 1244.0], [2173.0, 1228.0], [2117.0, 1206.0], [2133.0, 1208.0], [2141.0, 1193.0], [2077.0, 1198.0], [2109.0, 1191.0], [2053.0, 1471.0], [2061.0, 1237.0], [2069.0, 1283.0], [2101.0, 1221.0], [2093.0, 1186.0], [2085.0, 1214.6666666666667], [2301.0, 1213.0], [2245.0, 1231.0], [2253.0, 1198.0], [2261.0, 1458.0], [2269.0, 1228.0], [2293.0, 1186.0], [2285.0, 1211.0], [2181.0, 1405.0], [2189.0, 1190.0], [2197.0, 1415.0], [2205.0, 1190.0], [2237.0, 2290.0], [2229.0, 1182.0], [2221.0, 1196.0], [2213.0, 1176.0], [2429.0, 1206.0], [2381.0, 1214.0], [2389.0, 1204.0], [2397.0, 1187.0], [2421.0, 1293.0], [2413.0, 1186.0], [2405.0, 1203.0], [2309.0, 1193.5], [2325.0, 1197.0], [2333.0, 1441.0], [2365.0, 1189.0], [2357.0, 1207.0], [2349.0, 1430.0], [2557.0, 1279.5], [2549.0, 1209.0], [2525.0, 1241.0], [2501.0, 1211.6666666666667], [2509.0, 1400.0], [2517.0, 1238.0], [2541.0, 1178.0], [2533.0, 1223.0], [2461.0, 1200.0], [2453.0, 1278.0], [2445.0, 1208.5], [2493.0, 1224.0], [2477.0, 1231.0], [2469.0, 1419.0], [2685.0, 1190.0], [2629.0, 1200.0], [2637.0, 2179.0], [2645.0, 1210.0], [2677.0, 1234.0], [2669.0, 1182.0], [2661.0, 1197.0], [2573.0, 1213.0], [2581.0, 1193.0], [2589.0, 1225.0], [2621.0, 1228.0], [2613.0, 1211.0], [2605.0, 1275.0], [2597.0, 1185.0], [2805.0, 1223.0], [2757.0, 1224.0], [2773.0, 1539.0], [2781.0, 1212.0], [2693.0, 1218.0], [2701.0, 1199.5], [2717.0, 1194.75], [2749.0, 1183.0], [2741.0, 1199.0], [2725.0, 1428.0], [2933.0, 1197.0], [2941.0, 1177.0], [2885.0, 1201.0], [2893.0, 1228.0], [2901.0, 1195.0], [2909.0, 1436.0], [2925.0, 1182.0], [2845.0, 1204.0], [2829.0, 1235.0], [2821.0, 1190.0], [2877.0, 1441.0], [2861.0, 1209.0], [2853.0, 1188.5], [2957.0, 1212.0], [2949.0, 1238.0], [2965.0, 1198.0], [2973.0, 1180.0], [2997.0, 1436.0], [2989.0, 1196.0], [2981.0, 1208.0], [1079.0, 1206.0], [1087.0, 1197.0], [1075.0, 1214.5], [1071.0, 1188.0], [1067.0, 1195.5], [1063.0, 1202.0], [1055.0, 1535.0], [1035.0, 1212.0], [1027.0, 1231.0], [1143.0, 1212.0], [1151.0, 1200.0], [1147.0, 1205.0], [1123.0, 1262.0], [1127.0, 1207.0], [1139.0, 1190.0], [1103.0, 1225.0], [1099.0, 1245.0], [1091.0, 1249.0], [1115.0, 1190.0], [1107.0, 1213.0], [1135.0, 1198.0], [1211.0, 1301.0], [1215.0, 1206.0], [1187.0, 1213.0], [1191.0, 1179.0], [1207.0, 1188.0], [1203.0, 1197.0], [1183.0, 1219.0], [1155.0, 1193.0], [1163.0, 1214.0], [1175.0, 4926.0], [1195.0, 1205.0], [1275.0, 1224.0], [1279.0, 1232.0], [1251.0, 1309.0], [1255.0, 1378.0], [1271.0, 1233.0], [1267.0, 1250.0], [1247.0, 1457.0], [1223.0, 1194.0], [1219.0, 1197.0], [1227.0, 1185.0], [1231.0, 1200.0], [1243.0, 1190.0], [1239.0, 1191.0], [1263.0, 1455.0], [1331.0, 1196.0], [1339.0, 1188.0], [1343.0, 1181.0], [1315.0, 1217.0], [1319.0, 1212.5], [1311.0, 1242.0], [1283.0, 1226.5], [1287.0, 1220.0], [1291.0, 1217.0], [1295.0, 1224.0], [1307.0, 1193.0], [1303.0, 1200.0], [1299.0, 1211.0], [1327.0, 1201.0], [1323.0, 1205.0], [1399.0, 1205.0], [1403.0, 1200.0], [1407.0, 1192.0], [1379.0, 1236.0], [1383.0, 1209.0], [1375.0, 1182.0], [1359.0, 1212.0], [1371.0, 1192.0], [1367.0, 1200.0], [1363.0, 1209.5], [1391.0, 1195.0], [1387.0, 1202.0], [1463.0, 1257.0], [1471.0, 1230.0], [1447.0, 1237.0], [1467.0, 1239.0], [1459.0, 1217.0], [1423.0, 1196.0], [1419.0, 1202.0], [1415.0, 1209.0], [1411.0, 1183.0], [1439.0, 1197.0], [1431.0, 1209.0], [1451.0, 1225.0], [1523.0, 1194.5], [1531.0, 5088.0], [1507.0, 1206.0], [1511.0, 1206.0], [1515.0, 1206.0], [1527.0, 1189.0], [1483.0, 1204.0], [1479.0, 1216.0], [1475.0, 1224.0], [1503.0, 1211.0], [1499.0, 1222.0], [1495.0, 1191.0], [1491.0, 1195.0], [1519.0, 1198.0], [1591.0, 1210.5], [1587.0, 1223.0], [1599.0, 1729.0], [1571.0, 1229.0], [1575.0, 1218.0], [1595.0, 1208.0], [1551.0, 1211.0], [1547.0, 1223.0], [1543.0, 1229.0], [1539.0, 1231.0], [1563.0, 1187.0], [1559.0, 1190.0], [1555.0, 1195.0], [1583.0, 1229.0], [1651.0, 1239.0], [1659.0, 1195.5], [1663.0, 1191.0], [1655.0, 1201.0], [1603.0, 1411.0], [1607.0, 1211.0], [1611.0, 1201.0], [1615.0, 1197.0], [1627.0, 1193.0], [1623.0, 1204.0], [1619.0, 1250.0], [1643.0, 1199.0], [1635.0, 1215.0], [1679.0, 1188.0], [1719.0, 1220.0], [1723.0, 1200.0], [1699.0, 1182.0], [1675.0, 1190.0], [1671.0, 1201.0], [1667.0, 1250.0], [1695.0, 1191.5], [1691.0, 1196.0], [1687.0, 1207.0], [1683.0, 1180.0], [1711.0, 1211.0], [1707.0, 1219.0], [1703.0, 1226.0], [1787.0, 1251.0], [1767.0, 1199.0], [1783.0, 1213.0], [1779.0, 1215.0], [1735.0, 1238.0], [1751.0, 1204.0], [1747.0, 1210.0], [1775.0, 1221.0], [1771.0, 1237.0], [1803.0, 1436.0], [1847.0, 1226.0], [1855.0, 1235.0], [1807.0, 1226.0], [1795.0, 1208.0], [1823.0, 1245.0], [1819.0, 1203.0], [1815.0, 1218.0], [1839.0, 1241.0], [1835.0, 1226.0], [1915.0, 1202.0], [1919.0, 1198.0], [1891.0, 1222.0], [1895.0, 1217.0], [1911.0, 1212.0], [1907.0, 1231.0], [1887.0, 1184.0], [1859.0, 1223.5], [1871.0, 1229.0], [1879.0, 1193.5], [1899.0, 1210.0], [1979.0, 1210.0], [1983.0, 1202.0], [1955.0, 1194.0], [1963.0, 1223.0], [1959.0, 1247.0], [1975.0, 1240.0], [1971.0, 1197.0], [1951.0, 1212.0], [1923.0, 1209.0], [1931.0, 1193.0], [1935.0, 1186.0], [1947.0, 1250.0], [1943.0, 1397.0], [1939.0, 1165.0], [1967.0, 1214.0], [2039.0, 1186.0], [2035.0, 1189.0], [2047.0, 1883.0], [2023.0, 1180.5], [2043.0, 2180.0], [1999.0, 1201.0], [1991.0, 1180.0], [1987.0, 1197.0], [2015.0, 1195.0], [2011.0, 1205.0], [2007.0, 1182.0], [2003.0, 1196.0], [2027.0, 1217.0], [2174.0, 1226.0], [2166.0, 1244.0], [2118.0, 1204.0], [2126.0, 1188.5], [2134.0, 1203.0], [2142.0, 1188.0], [2150.0, 1187.0], [2110.0, 1225.0], [2078.0, 1277.0], [2070.0, 1246.0], [2062.0, 1626.0], [2054.0, 1463.0], [2102.0, 1211.0], [2094.0, 1270.0], [2086.0, 1211.0], [2294.0, 1186.0], [2278.0, 1369.5], [2302.0, 1207.0], [2246.0, 1225.0], [2262.0, 1330.0], [2270.0, 1186.0], [2286.0, 1204.0], [2206.0, 1188.0], [2198.0, 1395.0], [2182.0, 1400.0], [2238.0, 1965.0], [2230.0, 2310.0], [2222.0, 1195.0], [2214.0, 1174.0], [2422.0, 1278.0], [2430.0, 1199.0], [2374.0, 1230.0], [2382.0, 1519.0], [2398.0, 1185.0], [2414.0, 1181.0], [2406.0, 1197.0], [2366.0, 1474.0], [2318.0, 1209.0], [2326.0, 1194.0], [2334.0, 1440.0], [2350.0, 1845.0], [2342.0, 1198.5], [2534.0, 1217.0], [2550.0, 1202.0], [2558.0, 1275.0], [2502.0, 1212.0], [2518.0, 1233.0], [2526.0, 1239.0], [2438.0, 1225.0], [2446.0, 1206.0], [2454.0, 1212.0], [2462.0, 1196.0], [2486.0, 1207.5], [2478.0, 1222.0], [2470.0, 2866.0], [2678.0, 1214.0], [2638.0, 1467.0], [2630.0, 1199.0], [2646.0, 1209.0], [2654.0, 1202.5], [2686.0, 1187.0], [2670.0, 1179.0], [2566.0, 1252.0], [2574.0, 1204.0], [2590.0, 1209.0], [2622.0, 1229.0], [2614.0, 1237.0], [2606.0, 1265.0], [2814.0, 1204.6666666666667], [2758.0, 1214.0], [2766.0, 1198.0], [2774.0, 1484.0], [2782.0, 1212.0], [2806.0, 1222.0], [2798.0, 1229.0], [2790.0, 1196.5], [2694.0, 1213.0], [2702.0, 1193.0], [2718.0, 1191.0], [2734.0, 1194.5], [2726.0, 1422.0], [2934.0, 1194.0], [2886.0, 1200.0], [2894.0, 1224.0], [2910.0, 1418.0], [2942.0, 1173.0], [2926.0, 1257.0], [2918.0, 1195.0], [2846.0, 1202.0], [2838.0, 1228.0], [2822.0, 1187.0], [2878.0, 1424.0], [2870.0, 1189.6666666666667], [2958.0, 1209.0], [2950.0, 1231.0], [2966.0, 1190.0], [2974.0, 1179.0], [2167.0, 1236.0], [2127.0, 1211.0], [2135.0, 1204.0], [2143.0, 1186.0], [2159.0, 1179.0], [2111.0, 1221.0], [2055.0, 1558.0], [2063.0, 1226.0], [2071.0, 1223.0], [2079.0, 1239.0], [2103.0, 1207.0], [2095.0, 1258.0], [2087.0, 1204.0], [2295.0, 1179.0], [2303.0, 1201.0], [2247.0, 1219.0], [2255.0, 1192.5], [2263.0, 1326.0], [2271.0, 1249.0], [2287.0, 1199.0], [2279.0, 1236.0], [2239.0, 1886.0], [2183.0, 1210.0], [2191.0, 1183.0], [2199.0, 1210.0], [2231.0, 2308.0], [2223.0, 1189.0], [2215.0, 1171.0], [2423.0, 1222.0], [2431.0, 1233.0], [2375.0, 1227.0], [2383.0, 1444.0], [2391.0, 1201.0], [2399.0, 2178.0], [2415.0, 1177.0], [2407.0, 1195.0], [2367.0, 1461.0], [2311.0, 1191.0], [2319.0, 1204.0], [2327.0, 1192.0], [2335.0, 1420.0], [2359.0, 1200.5], [2351.0, 1258.0], [2551.0, 1199.0], [2503.0, 1933.0], [2511.0, 1445.5], [2519.0, 1223.0], [2543.0, 1219.0], [2535.0, 1238.0], [2455.0, 1211.0], [2447.0, 1203.0], [2439.0, 1188.0], [2495.0, 1228.0], [2487.0, 1217.0], [2479.0, 1221.0], [2471.0, 1306.0], [2671.0, 2676.0], [2663.0, 1195.5], [2679.0, 1206.0], [2687.0, 1183.0], [2631.0, 1194.0], [2639.0, 1455.0], [2655.0, 1187.0], [2623.0, 1231.0], [2567.0, 1244.0], [2575.0, 1201.0], [2583.0, 1186.5], [2591.0, 1203.0], [2607.0, 1258.0], [2599.0, 1182.5], [2799.0, 1229.5], [2807.0, 1216.0], [2815.0, 1202.0], [2759.0, 1210.0], [2767.0, 1197.5], [2775.0, 1486.0], [2791.0, 1193.0], [2751.0, 1197.5], [2695.0, 1207.0], [2703.0, 1189.0], [2711.0, 1199.5], [2735.0, 1192.0], [2727.0, 1226.0], [2935.0, 1192.0], [2927.0, 1252.0], [2943.0, 1479.0], [2887.0, 1195.0], [2895.0, 1218.0], [2903.0, 1193.0], [2911.0, 1277.0], [2847.0, 1200.0], [2839.0, 1225.0], [2831.0, 1236.5], [2823.0, 1186.0], [2879.0, 1397.0], [2863.0, 1202.0], [2991.0, 1192.0], [2951.0, 1226.0], [2959.0, 1201.0], [2975.0, 1184.0], [2983.0, 1197.0], [1.0, 1272.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2121.016806722698, 2091.182137971468]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2153.9, "minX": 1.68421962E12, "maxY": 12878.65, "series": [{"data": [[1.6842198E12, 11752.9], [1.68421992E12, 2651.0666666666666], [1.68421962E12, 7390.25], [1.68421974E12, 10225.8], [1.68421968E12, 12878.65], [1.68421986E12, 12119.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6842198E12, 9547.75], [1.68421992E12, 2153.9], [1.68421962E12, 6000.15], [1.68421974E12, 8307.9], [1.68421968E12, 10452.75], [1.68421986E12, 9846.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68421992E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1212.6428571428573, "minX": 1.68421962E12, "maxY": 7504.639517345393, "series": [{"data": [[1.6842198E12, 1351.9800947867298], [1.68421992E12, 1212.6428571428573], [1.68421962E12, 7504.639517345393], [1.68421974E12, 1252.8540305010886], [1.68421968E12, 1252.993073593072], [1.68421986E12, 1298.463235294118]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68421992E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1212.5588235294115, "minX": 1.68421962E12, "maxY": 7503.687782805427, "series": [{"data": [[1.6842198E12, 1351.9175355450254], [1.68421992E12, 1212.5588235294115], [1.68421962E12, 7503.687782805427], [1.68421974E12, 1252.7614379084985], [1.68421968E12, 1252.8787878787862], [1.68421986E12, 1298.3685661764705]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68421992E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 83.87815126050423, "minX": 1.68421962E12, "maxY": 125.07390648567127, "series": [{"data": [[1.6842198E12, 86.35829383886251], [1.68421992E12, 83.87815126050423], [1.68421962E12, 125.07390648567127], [1.68421974E12, 92.76797385620917], [1.68421968E12, 99.47619047619052], [1.68421986E12, 87.54687499999994]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68421992E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 126.0, "minX": 1.68421962E12, "maxY": 101145.0, "series": [{"data": [[1.6842198E12, 101145.0], [1.68421992E12, 1543.0], [1.68421962E12, 29663.0], [1.68421974E12, 6128.0], [1.68421968E12, 2612.0], [1.68421986E12, 5982.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6842198E12, 1258.0], [1.68421992E12, 1255.0], [1.68421962E12, 21319.2], [1.68421974E12, 1301.1], [1.68421968E12, 1297.0000000000005], [1.68421986E12, 1273.1]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6842198E12, 2240.9600000000005], [1.68421992E12, 1459.4899999999968], [1.68421962E12, 26261.68], [1.68421974E12, 1919.8899999999962], [1.68421968E12, 2060.280000000013], [1.68421986E12, 5115.66]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6842198E12, 1461.3999999999999], [1.68421992E12, 1272.0], [1.68421962E12, 23448.0], [1.68421974E12, 1443.0], [1.68421968E12, 1473.2], [1.68421986E12, 1519.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6842198E12, 1165.0], [1.68421992E12, 1164.0], [1.68421962E12, 1197.0], [1.68421974E12, 1172.0], [1.68421968E12, 126.0], [1.68421986E12, 1167.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6842198E12, 1208.0], [1.68421992E12, 1202.0], [1.68421962E12, 1586.0], [1.68421974E12, 1207.0], [1.68421968E12, 1222.0], [1.68421986E12, 1209.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68421992E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1197.0, "minX": 1.0, "maxY": 7914.0, "series": [{"data": [[33.0, 1210.0], [2.0, 1454.5], [32.0, 1204.0], [35.0, 1226.0], [34.0, 1209.0], [36.0, 6429.0], [39.0, 3450.0], [38.0, 1246.5], [40.0, 1222.0], [44.0, 1204.5], [46.0, 1228.0], [3.0, 1483.0], [48.0, 1226.0], [49.0, 1207.5], [51.0, 1215.5], [50.0, 1224.0], [53.0, 7914.0], [55.0, 7118.0], [56.0, 1307.0], [59.0, 1239.0], [67.0, 1283.5], [64.0, 1264.5], [4.0, 1345.5], [69.0, 1213.0], [5.0, 5165.0], [6.0, 2267.0], [7.0, 1635.0], [10.0, 5087.0], [12.0, 1197.0], [14.0, 1202.0], [15.0, 1200.0], [16.0, 1207.0], [1.0, 1518.0], [17.0, 1207.0], [18.0, 1208.0], [19.0, 1228.0], [20.0, 1220.5], [21.0, 1230.5], [22.0, 1226.5], [25.0, 1262.0], [28.0, 1254.5], [29.0, 1218.5], [30.0, 1215.0], [31.0, 1198.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 69.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1197.0, "minX": 1.0, "maxY": 7914.0, "series": [{"data": [[33.0, 1210.0], [2.0, 1454.5], [32.0, 1204.0], [35.0, 1226.0], [34.0, 1208.5], [36.0, 6428.5], [39.0, 3450.0], [38.0, 1246.5], [40.0, 1222.0], [44.0, 1204.0], [46.0, 1228.0], [3.0, 1483.0], [48.0, 1226.0], [49.0, 1207.5], [51.0, 1215.5], [50.0, 1224.0], [53.0, 7914.0], [55.0, 7118.0], [56.0, 1306.5], [59.0, 1239.0], [67.0, 1283.5], [64.0, 1264.5], [4.0, 1345.5], [69.0, 1213.0], [5.0, 5163.0], [6.0, 2267.0], [7.0, 1635.0], [10.0, 5086.0], [12.0, 1197.0], [14.0, 1202.0], [15.0, 1200.0], [16.0, 1207.0], [1.0, 1517.0], [17.0, 1207.0], [18.0, 1208.0], [19.0, 1228.0], [20.0, 1220.0], [21.0, 1230.5], [22.0, 1226.5], [25.0, 1262.0], [28.0, 1254.5], [29.0, 1218.5], [30.0, 1215.0], [31.0, 1198.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 69.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.4, "minX": 1.68421962E12, "maxY": 19.266666666666666, "series": [{"data": [[1.6842198E12, 18.133333333333333], [1.68421992E12, 3.4], [1.68421962E12, 11.05], [1.68421974E12, 15.866666666666667], [1.68421968E12, 19.266666666666666], [1.68421986E12, 17.566666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68421992E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.966666666666667, "minX": 1.68421962E12, "maxY": 19.25, "series": [{"data": [[1.6842198E12, 17.583333333333332], [1.68421992E12, 3.966666666666667], [1.68421962E12, 11.05], [1.68421974E12, 15.3], [1.68421968E12, 19.25], [1.68421986E12, 18.133333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68421992E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.966666666666667, "minX": 1.68421962E12, "maxY": 19.25, "series": [{"data": [[1.6842198E12, 17.583333333333332], [1.68421992E12, 3.966666666666667], [1.68421962E12, 11.05], [1.68421974E12, 15.3], [1.68421968E12, 19.25], [1.68421986E12, 18.133333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68421992E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.966666666666667, "minX": 1.68421962E12, "maxY": 19.25, "series": [{"data": [[1.6842198E12, 17.583333333333332], [1.68421992E12, 3.966666666666667], [1.68421962E12, 11.05], [1.68421974E12, 15.3], [1.68421968E12, 19.25], [1.68421986E12, 18.133333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68421992E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

