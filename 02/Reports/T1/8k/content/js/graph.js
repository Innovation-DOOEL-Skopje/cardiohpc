/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "maxY": 19629.0, "series": [{"data": [[0.0, 36.0], [0.1, 38.0], [0.2, 39.0], [0.3, 39.0], [0.4, 39.0], [0.5, 39.0], [0.6, 40.0], [0.7, 40.0], [0.8, 40.0], [0.9, 40.0], [1.0, 41.0], [1.1, 41.0], [1.2, 41.0], [1.3, 41.0], [1.4, 42.0], [1.5, 42.0], [1.6, 42.0], [1.7, 42.0], [1.8, 43.0], [1.9, 43.0], [2.0, 43.0], [2.1, 44.0], [2.2, 45.0], [2.3, 46.0], [2.4, 48.0], [2.5, 50.0], [2.6, 52.0], [2.7, 53.0], [2.8, 54.0], [2.9, 56.0], [3.0, 57.0], [3.1, 59.0], [3.2, 60.0], [3.3, 61.0], [3.4, 63.0], [3.5, 65.0], [3.6, 67.0], [3.7, 71.0], [3.8, 76.0], [3.9, 87.0], [4.0, 101.0], [4.1, 120.0], [4.2, 164.0], [4.3, 245.0], [4.4, 302.0], [4.5, 437.0], [4.6, 629.0], [4.7, 882.0], [4.8, 1090.0], [4.9, 1091.0], [5.0, 1092.0], [5.1, 1092.0], [5.2, 1093.0], [5.3, 1093.0], [5.4, 1093.0], [5.5, 1094.0], [5.6, 1094.0], [5.7, 1094.0], [5.8, 1094.0], [5.9, 1094.0], [6.0, 1095.0], [6.1, 1095.0], [6.2, 1095.0], [6.3, 1095.0], [6.4, 1095.0], [6.5, 1095.0], [6.6, 1096.0], [6.7, 1096.0], [6.8, 1096.0], [6.9, 1096.0], [7.0, 1096.0], [7.1, 1096.0], [7.2, 1096.0], [7.3, 1097.0], [7.4, 1097.0], [7.5, 1097.0], [7.6, 1097.0], [7.7, 1097.0], [7.8, 1097.0], [7.9, 1097.0], [8.0, 1097.0], [8.1, 1097.0], [8.2, 1098.0], [8.3, 1098.0], [8.4, 1098.0], [8.5, 1098.0], [8.6, 1098.0], [8.7, 1098.0], [8.8, 1098.0], [8.9, 1098.0], [9.0, 1098.0], [9.1, 1098.0], [9.2, 1099.0], [9.3, 1099.0], [9.4, 1099.0], [9.5, 1099.0], [9.6, 1099.0], [9.7, 1099.0], [9.8, 1099.0], [9.9, 1099.0], [10.0, 1099.0], [10.1, 1099.0], [10.2, 1100.0], [10.3, 1100.0], [10.4, 1100.0], [10.5, 1100.0], [10.6, 1100.0], [10.7, 1100.0], [10.8, 1100.0], [10.9, 1100.0], [11.0, 1100.0], [11.1, 1100.0], [11.2, 1101.0], [11.3, 1101.0], [11.4, 1101.0], [11.5, 1101.0], [11.6, 1101.0], [11.7, 1101.0], [11.8, 1101.0], [11.9, 1101.0], [12.0, 1101.0], [12.1, 1101.0], [12.2, 1102.0], [12.3, 1102.0], [12.4, 1102.0], [12.5, 1102.0], [12.6, 1102.0], [12.7, 1102.0], [12.8, 1102.0], [12.9, 1102.0], [13.0, 1102.0], [13.1, 1103.0], [13.2, 1103.0], [13.3, 1103.0], [13.4, 1103.0], [13.5, 1103.0], [13.6, 1103.0], [13.7, 1103.0], [13.8, 1103.0], [13.9, 1104.0], [14.0, 1104.0], [14.1, 1104.0], [14.2, 1104.0], [14.3, 1104.0], [14.4, 1104.0], [14.5, 1104.0], [14.6, 1104.0], [14.7, 1105.0], [14.8, 1105.0], [14.9, 1105.0], [15.0, 1105.0], [15.1, 1105.0], [15.2, 1105.0], [15.3, 1105.0], [15.4, 1106.0], [15.5, 1106.0], [15.6, 1106.0], [15.7, 1106.0], [15.8, 1106.0], [15.9, 1106.0], [16.0, 1107.0], [16.1, 1107.0], [16.2, 1107.0], [16.3, 1107.0], [16.4, 1107.0], [16.5, 1107.0], [16.6, 1108.0], [16.7, 1108.0], [16.8, 1108.0], [16.9, 1108.0], [17.0, 1108.0], [17.1, 1108.0], [17.2, 1109.0], [17.3, 1109.0], [17.4, 1109.0], [17.5, 1109.0], [17.6, 1109.0], [17.7, 1110.0], [17.8, 1110.0], [17.9, 1110.0], [18.0, 1110.0], [18.1, 1111.0], [18.2, 1111.0], [18.3, 1111.0], [18.4, 1111.0], [18.5, 1111.0], [18.6, 1112.0], [18.7, 1112.0], [18.8, 1112.0], [18.9, 1112.0], [19.0, 1112.0], [19.1, 1113.0], [19.2, 1113.0], [19.3, 1113.0], [19.4, 1113.0], [19.5, 1114.0], [19.6, 1114.0], [19.7, 1114.0], [19.8, 1114.0], [19.9, 1114.0], [20.0, 1115.0], [20.1, 1115.0], [20.2, 1115.0], [20.3, 1115.0], [20.4, 1116.0], [20.5, 1116.0], [20.6, 1116.0], [20.7, 1116.0], [20.8, 1117.0], [20.9, 1117.0], [21.0, 1117.0], [21.1, 1117.0], [21.2, 1118.0], [21.3, 1118.0], [21.4, 1118.0], [21.5, 1118.0], [21.6, 1119.0], [21.7, 1119.0], [21.8, 1119.0], [21.9, 1119.0], [22.0, 1120.0], [22.1, 1120.0], [22.2, 1120.0], [22.3, 1120.0], [22.4, 1121.0], [22.5, 1121.0], [22.6, 1121.0], [22.7, 1121.0], [22.8, 1122.0], [22.9, 1122.0], [23.0, 1122.0], [23.1, 1123.0], [23.2, 1123.0], [23.3, 1123.0], [23.4, 1123.0], [23.5, 1124.0], [23.6, 1124.0], [23.7, 1124.0], [23.8, 1125.0], [23.9, 1125.0], [24.0, 1125.0], [24.1, 1126.0], [24.2, 1126.0], [24.3, 1126.0], [24.4, 1127.0], [24.5, 1127.0], [24.6, 1127.0], [24.7, 1128.0], [24.8, 1128.0], [24.9, 1128.0], [25.0, 1129.0], [25.1, 1129.0], [25.2, 1130.0], [25.3, 1130.0], [25.4, 1130.0], [25.5, 1131.0], [25.6, 1131.0], [25.7, 1131.0], [25.8, 1132.0], [25.9, 1132.0], [26.0, 1133.0], [26.1, 1133.0], [26.2, 1134.0], [26.3, 1134.0], [26.4, 1135.0], [26.5, 1135.0], [26.6, 1136.0], [26.7, 1136.0], [26.8, 1137.0], [26.9, 1137.0], [27.0, 1138.0], [27.1, 1138.0], [27.2, 1139.0], [27.3, 1139.0], [27.4, 1140.0], [27.5, 1140.0], [27.6, 1141.0], [27.7, 1141.0], [27.8, 1142.0], [27.9, 1142.0], [28.0, 1143.0], [28.1, 1144.0], [28.2, 1144.0], [28.3, 1145.0], [28.4, 1146.0], [28.5, 1147.0], [28.6, 1147.0], [28.7, 1148.0], [28.8, 1149.0], [28.9, 1150.0], [29.0, 1151.0], [29.1, 1152.0], [29.2, 1153.0], [29.3, 1154.0], [29.4, 1155.0], [29.5, 1156.0], [29.6, 1157.0], [29.7, 1158.0], [29.8, 1159.0], [29.9, 1160.0], [30.0, 1162.0], [30.1, 1163.0], [30.2, 1165.0], [30.3, 1166.0], [30.4, 1168.0], [30.5, 1169.0], [30.6, 1171.0], [30.7, 1172.0], [30.8, 1174.0], [30.9, 1176.0], [31.0, 1177.0], [31.1, 1179.0], [31.2, 1181.0], [31.3, 1183.0], [31.4, 1185.0], [31.5, 1187.0], [31.6, 1189.0], [31.7, 1191.0], [31.8, 1193.0], [31.9, 1195.0], [32.0, 1197.0], [32.1, 1199.0], [32.2, 1202.0], [32.3, 1204.0], [32.4, 1206.0], [32.5, 1208.0], [32.6, 1210.0], [32.7, 1213.0], [32.8, 1215.0], [32.9, 1217.0], [33.0, 1220.0], [33.1, 1223.0], [33.2, 1225.0], [33.3, 1227.0], [33.4, 1230.0], [33.5, 1232.0], [33.6, 1235.0], [33.7, 1238.0], [33.8, 1240.0], [33.9, 1243.0], [34.0, 1246.0], [34.1, 1248.0], [34.2, 1251.0], [34.3, 1254.0], [34.4, 1257.0], [34.5, 1259.0], [34.6, 1262.0], [34.7, 1265.0], [34.8, 1267.0], [34.9, 1270.0], [35.0, 1272.0], [35.1, 1275.0], [35.2, 1278.0], [35.3, 1280.0], [35.4, 1282.0], [35.5, 1285.0], [35.6, 1287.0], [35.7, 1290.0], [35.8, 1293.0], [35.9, 1295.0], [36.0, 1297.0], [36.1, 1300.0], [36.2, 1302.0], [36.3, 1304.0], [36.4, 1307.0], [36.5, 1309.0], [36.6, 1312.0], [36.7, 1315.0], [36.8, 1317.0], [36.9, 1320.0], [37.0, 1323.0], [37.1, 1325.0], [37.2, 1328.0], [37.3, 1330.0], [37.4, 1333.0], [37.5, 1336.0], [37.6, 1338.0], [37.7, 1341.0], [37.8, 1344.0], [37.9, 1346.0], [38.0, 1349.0], [38.1, 1352.0], [38.2, 1355.0], [38.3, 1358.0], [38.4, 1360.0], [38.5, 1363.0], [38.6, 1366.0], [38.7, 1369.0], [38.8, 1372.0], [38.9, 1375.0], [39.0, 1378.0], [39.1, 1381.0], [39.2, 1384.0], [39.3, 1387.0], [39.4, 1390.0], [39.5, 1393.0], [39.6, 1395.0], [39.7, 1399.0], [39.8, 1402.0], [39.9, 1405.0], [40.0, 1408.0], [40.1, 1412.0], [40.2, 1415.0], [40.3, 1419.0], [40.4, 1422.0], [40.5, 1425.0], [40.6, 1428.0], [40.7, 1431.0], [40.8, 1434.0], [40.9, 1438.0], [41.0, 1441.0], [41.1, 1445.0], [41.2, 1449.0], [41.3, 1452.0], [41.4, 1456.0], [41.5, 1459.0], [41.6, 1462.0], [41.7, 1466.0], [41.8, 1470.0], [41.9, 1474.0], [42.0, 1478.0], [42.1, 1482.0], [42.2, 1485.0], [42.3, 1489.0], [42.4, 1493.0], [42.5, 1496.0], [42.6, 1500.0], [42.7, 1503.0], [42.8, 1506.0], [42.9, 1509.0], [43.0, 1512.0], [43.1, 1515.0], [43.2, 1519.0], [43.3, 1522.0], [43.4, 1526.0], [43.5, 1529.0], [43.6, 1532.0], [43.7, 1535.0], [43.8, 1538.0], [43.9, 1542.0], [44.0, 1545.0], [44.1, 1549.0], [44.2, 1552.0], [44.3, 1555.0], [44.4, 1558.0], [44.5, 1561.0], [44.6, 1564.0], [44.7, 1568.0], [44.8, 1572.0], [44.9, 1576.0], [45.0, 1579.0], [45.1, 1582.0], [45.2, 1585.0], [45.3, 1588.0], [45.4, 1592.0], [45.5, 1595.0], [45.6, 1599.0], [45.7, 1603.0], [45.8, 1606.0], [45.9, 1610.0], [46.0, 1614.0], [46.1, 1617.0], [46.2, 1621.0], [46.3, 1625.0], [46.4, 1629.0], [46.5, 1633.0], [46.6, 1637.0], [46.7, 1641.0], [46.8, 1645.0], [46.9, 1649.0], [47.0, 1653.0], [47.1, 1656.0], [47.2, 1661.0], [47.3, 1665.0], [47.4, 1670.0], [47.5, 1674.0], [47.6, 1680.0], [47.7, 1685.0], [47.8, 1690.0], [47.9, 1694.0], [48.0, 1699.0], [48.1, 1704.0], [48.2, 1709.0], [48.3, 1714.0], [48.4, 1718.0], [48.5, 1724.0], [48.6, 1728.0], [48.7, 1732.0], [48.8, 1736.0], [48.9, 1740.0], [49.0, 1744.0], [49.1, 1749.0], [49.2, 1754.0], [49.3, 1758.0], [49.4, 1763.0], [49.5, 1766.0], [49.6, 1770.0], [49.7, 1774.0], [49.8, 1778.0], [49.9, 1782.0], [50.0, 1787.0], [50.1, 1791.0], [50.2, 1795.0], [50.3, 1798.0], [50.4, 1802.0], [50.5, 1805.0], [50.6, 1809.0], [50.7, 1813.0], [50.8, 1816.0], [50.9, 1821.0], [51.0, 1825.0], [51.1, 1830.0], [51.2, 1834.0], [51.3, 1839.0], [51.4, 1843.0], [51.5, 1847.0], [51.6, 1852.0], [51.7, 1855.0], [51.8, 1859.0], [51.9, 1863.0], [52.0, 1866.0], [52.1, 1869.0], [52.2, 1873.0], [52.3, 1877.0], [52.4, 1880.0], [52.5, 1883.0], [52.6, 1887.0], [52.7, 1890.0], [52.8, 1893.0], [52.9, 1896.0], [53.0, 1900.0], [53.1, 1903.0], [53.2, 1907.0], [53.3, 1910.0], [53.4, 1914.0], [53.5, 1918.0], [53.6, 1921.0], [53.7, 1925.0], [53.8, 1928.0], [53.9, 1932.0], [54.0, 1936.0], [54.1, 1940.0], [54.2, 1945.0], [54.3, 1949.0], [54.4, 1953.0], [54.5, 1957.0], [54.6, 1962.0], [54.7, 1966.0], [54.8, 1970.0], [54.9, 1974.0], [55.0, 1978.0], [55.1, 1983.0], [55.2, 1987.0], [55.3, 1992.0], [55.4, 1996.0], [55.5, 2000.0], [55.6, 2003.0], [55.7, 2006.0], [55.8, 2009.0], [55.9, 2012.0], [56.0, 2016.0], [56.1, 2019.0], [56.2, 2022.0], [56.3, 2025.0], [56.4, 2028.0], [56.5, 2032.0], [56.6, 2035.0], [56.7, 2038.0], [56.8, 2041.0], [56.9, 2043.0], [57.0, 2047.0], [57.1, 2050.0], [57.2, 2053.0], [57.3, 2056.0], [57.4, 2059.0], [57.5, 2062.0], [57.6, 2065.0], [57.7, 2069.0], [57.8, 2072.0], [57.9, 2076.0], [58.0, 2079.0], [58.1, 2082.0], [58.2, 2085.0], [58.3, 2088.0], [58.4, 2092.0], [58.5, 2095.0], [58.6, 2098.0], [58.7, 2102.0], [58.8, 2105.0], [58.9, 2108.0], [59.0, 2112.0], [59.1, 2115.0], [59.2, 2118.0], [59.3, 2122.0], [59.4, 2125.0], [59.5, 2127.0], [59.6, 2130.0], [59.7, 2133.0], [59.8, 2136.0], [59.9, 2138.0], [60.0, 2140.0], [60.1, 2143.0], [60.2, 2145.0], [60.3, 2147.0], [60.4, 2150.0], [60.5, 2151.0], [60.6, 2153.0], [60.7, 2155.0], [60.8, 2157.0], [60.9, 2159.0], [61.0, 2162.0], [61.1, 2164.0], [61.2, 2167.0], [61.3, 2170.0], [61.4, 2174.0], [61.5, 2177.0], [61.6, 2181.0], [61.7, 2187.0], [61.8, 2192.0], [61.9, 2198.0], [62.0, 2203.0], [62.1, 2209.0], [62.2, 2215.0], [62.3, 2221.0], [62.4, 2226.0], [62.5, 2231.0], [62.6, 2236.0], [62.7, 2241.0], [62.8, 2247.0], [62.9, 2253.0], [63.0, 2259.0], [63.1, 2264.0], [63.2, 2269.0], [63.3, 2275.0], [63.4, 2281.0], [63.5, 2287.0], [63.6, 2293.0], [63.7, 2301.0], [63.8, 2307.0], [63.9, 2313.0], [64.0, 2320.0], [64.1, 2325.0], [64.2, 2332.0], [64.3, 2338.0], [64.4, 2345.0], [64.5, 2353.0], [64.6, 2359.0], [64.7, 2366.0], [64.8, 2371.0], [64.9, 2376.0], [65.0, 2382.0], [65.1, 2387.0], [65.2, 2393.0], [65.3, 2398.0], [65.4, 2405.0], [65.5, 2411.0], [65.6, 2418.0], [65.7, 2425.0], [65.8, 2431.0], [65.9, 2438.0], [66.0, 2443.0], [66.1, 2450.0], [66.2, 2457.0], [66.3, 2464.0], [66.4, 2472.0], [66.5, 2479.0], [66.6, 2486.0], [66.7, 2492.0], [66.8, 2499.0], [66.9, 2507.0], [67.0, 2515.0], [67.1, 2523.0], [67.2, 2530.0], [67.3, 2538.0], [67.4, 2546.0], [67.5, 2553.0], [67.6, 2559.0], [67.7, 2567.0], [67.8, 2575.0], [67.9, 2584.0], [68.0, 2593.0], [68.1, 2602.0], [68.2, 2610.0], [68.3, 2618.0], [68.4, 2627.0], [68.5, 2636.0], [68.6, 2645.0], [68.7, 2654.0], [68.8, 2662.0], [68.9, 2670.0], [69.0, 2680.0], [69.1, 2689.0], [69.2, 2699.0], [69.3, 2709.0], [69.4, 2718.0], [69.5, 2728.0], [69.6, 2738.0], [69.7, 2747.0], [69.8, 2756.0], [69.9, 2767.0], [70.0, 2775.0], [70.1, 2784.0], [70.2, 2792.0], [70.3, 2801.0], [70.4, 2808.0], [70.5, 2816.0], [70.6, 2826.0], [70.7, 2834.0], [70.8, 2843.0], [70.9, 2853.0], [71.0, 2861.0], [71.1, 2869.0], [71.2, 2879.0], [71.3, 2890.0], [71.4, 2899.0], [71.5, 2908.0], [71.6, 2918.0], [71.7, 2926.0], [71.8, 2936.0], [71.9, 2945.0], [72.0, 2955.0], [72.1, 2964.0], [72.2, 2975.0], [72.3, 2983.0], [72.4, 2991.0], [72.5, 2999.0], [72.6, 3008.0], [72.7, 3017.0], [72.8, 3027.0], [72.9, 3036.0], [73.0, 3045.0], [73.1, 3054.0], [73.2, 3062.0], [73.3, 3070.0], [73.4, 3079.0], [73.5, 3087.0], [73.6, 3094.0], [73.7, 3103.0], [73.8, 3111.0], [73.9, 3118.0], [74.0, 3125.0], [74.1, 3132.0], [74.2, 3139.0], [74.3, 3146.0], [74.4, 3154.0], [74.5, 3162.0], [74.6, 3170.0], [74.7, 3178.0], [74.8, 3184.0], [74.9, 3191.0], [75.0, 3199.0], [75.1, 3206.0], [75.2, 3214.0], [75.3, 3224.0], [75.4, 3233.0], [75.5, 3242.0], [75.6, 3251.0], [75.7, 3261.0], [75.8, 3271.0], [75.9, 3281.0], [76.0, 3292.0], [76.1, 3301.0], [76.2, 3312.0], [76.3, 3323.0], [76.4, 3334.0], [76.5, 3344.0], [76.6, 3356.0], [76.7, 3367.0], [76.8, 3379.0], [76.9, 3392.0], [77.0, 3403.0], [77.1, 3415.0], [77.2, 3427.0], [77.3, 3437.0], [77.4, 3449.0], [77.5, 3461.0], [77.6, 3473.0], [77.7, 3485.0], [77.8, 3498.0], [77.9, 3509.0], [78.0, 3522.0], [78.1, 3536.0], [78.2, 3549.0], [78.3, 3564.0], [78.4, 3578.0], [78.5, 3593.0], [78.6, 3607.0], [78.7, 3624.0], [78.8, 3639.0], [78.9, 3657.0], [79.0, 3674.0], [79.1, 3687.0], [79.2, 3701.0], [79.3, 3717.0], [79.4, 3732.0], [79.5, 3748.0], [79.6, 3764.0], [79.7, 3782.0], [79.8, 3800.0], [79.9, 3817.0], [80.0, 3834.0], [80.1, 3849.0], [80.2, 3865.0], [80.3, 3882.0], [80.4, 3898.0], [80.5, 3913.0], [80.6, 3927.0], [80.7, 3944.0], [80.8, 3960.0], [80.9, 3979.0], [81.0, 3994.0], [81.1, 4013.0], [81.2, 4030.0], [81.3, 4044.0], [81.4, 4062.0], [81.5, 4077.0], [81.6, 4094.0], [81.7, 4109.0], [81.8, 4125.0], [81.9, 4139.0], [82.0, 4151.0], [82.1, 4164.0], [82.2, 4175.0], [82.3, 4187.0], [82.4, 4200.0], [82.5, 4213.0], [82.6, 4223.0], [82.7, 4234.0], [82.8, 4248.0], [82.9, 4261.0], [83.0, 4274.0], [83.1, 4287.0], [83.2, 4301.0], [83.3, 4316.0], [83.4, 4330.0], [83.5, 4345.0], [83.6, 4363.0], [83.7, 4381.0], [83.8, 4401.0], [83.9, 4419.0], [84.0, 4440.0], [84.1, 4460.0], [84.2, 4481.0], [84.3, 4502.0], [84.4, 4521.0], [84.5, 4542.0], [84.6, 4563.0], [84.7, 4584.0], [84.8, 4605.0], [84.9, 4627.0], [85.0, 4650.0], [85.1, 4672.0], [85.2, 4694.0], [85.3, 4714.0], [85.4, 4738.0], [85.5, 4764.0], [85.6, 4787.0], [85.7, 4811.0], [85.8, 4839.0], [85.9, 4862.0], [86.0, 4884.0], [86.1, 4908.0], [86.2, 4934.0], [86.3, 4960.0], [86.4, 4985.0], [86.5, 5011.0], [86.6, 5037.0], [86.7, 5062.0], [86.8, 5088.0], [86.9, 5108.0], [87.0, 5130.0], [87.1, 5151.0], [87.2, 5171.0], [87.3, 5190.0], [87.4, 5209.0], [87.5, 5226.0], [87.6, 5245.0], [87.7, 5262.0], [87.8, 5279.0], [87.9, 5297.0], [88.0, 5318.0], [88.1, 5338.0], [88.2, 5361.0], [88.3, 5386.0], [88.4, 5415.0], [88.5, 5444.0], [88.6, 5470.0], [88.7, 5499.0], [88.8, 5530.0], [88.9, 5567.0], [89.0, 5602.0], [89.1, 5636.0], [89.2, 5666.0], [89.3, 5705.0], [89.4, 5740.0], [89.5, 5775.0], [89.6, 5809.0], [89.7, 5845.0], [89.8, 5882.0], [89.9, 5924.0], [90.0, 5965.0], [90.1, 6003.0], [90.2, 6040.0], [90.3, 6083.0], [90.4, 6124.0], [90.5, 6162.0], [90.6, 6196.0], [90.7, 6225.0], [90.8, 6252.0], [90.9, 6281.0], [91.0, 6310.0], [91.1, 6337.0], [91.2, 6369.0], [91.3, 6402.0], [91.4, 6440.0], [91.5, 6480.0], [91.6, 6518.0], [91.7, 6565.0], [91.8, 6612.0], [91.9, 6660.0], [92.0, 6709.0], [92.1, 6753.0], [92.2, 6798.0], [92.3, 6845.0], [92.4, 6889.0], [92.5, 6945.0], [92.6, 6993.0], [92.7, 7042.0], [92.8, 7095.0], [92.9, 7154.0], [93.0, 7211.0], [93.1, 7251.0], [93.2, 7288.0], [93.3, 7324.0], [93.4, 7358.0], [93.5, 7390.0], [93.6, 7422.0], [93.7, 7465.0], [93.8, 7512.0], [93.9, 7561.0], [94.0, 7620.0], [94.1, 7685.0], [94.2, 7749.0], [94.3, 7816.0], [94.4, 7868.0], [94.5, 7937.0], [94.6, 7996.0], [94.7, 8058.0], [94.8, 8124.0], [94.9, 8188.0], [95.0, 8248.0], [95.1, 8309.0], [95.2, 8358.0], [95.3, 8398.0], [95.4, 8442.0], [95.5, 8490.0], [95.6, 8545.0], [95.7, 8613.0], [95.8, 8687.0], [95.9, 8765.0], [96.0, 8852.0], [96.1, 8937.0], [96.2, 9013.0], [96.3, 9101.0], [96.4, 9179.0], [96.5, 9257.0], [96.6, 9329.0], [96.7, 9382.0], [96.8, 9433.0], [96.9, 9480.0], [97.0, 9526.0], [97.1, 9582.0], [97.2, 9647.0], [97.3, 9732.0], [97.4, 9834.0], [97.5, 9914.0], [97.6, 10003.0], [97.7, 10068.0], [97.8, 10107.0], [97.9, 10152.0], [98.0, 10202.0], [98.1, 10248.0], [98.2, 10298.0], [98.3, 10348.0], [98.4, 10397.0], [98.5, 10443.0], [98.6, 10477.0], [98.7, 10516.0], [98.8, 10554.0], [98.9, 10597.0], [99.0, 10645.0], [99.1, 10702.0], [99.2, 10771.0], [99.3, 10850.0], [99.4, 10929.0], [99.5, 11016.0], [99.6, 11106.0], [99.7, 11217.0], [99.8, 11452.0], [99.9, 12670.0], [100.0, 19629.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 52885.0, "series": [{"data": [[0.0, 9594.0], [100.0, 650.0], [200.0, 340.0], [300.0, 180.0], [400.0, 151.0], [500.0, 103.0], [600.0, 140.0], [700.0, 100.0], [800.0, 64.0], [900.0, 65.0], [1000.0, 13010.0], [1100.0, 52885.0], [1200.0, 9603.0], [1300.0, 8736.0], [1400.0, 6890.0], [1500.0, 7304.0], [1600.0, 5762.0], [1700.0, 5586.0], [1800.0, 6410.0], [1900.0, 6022.0], [2000.0, 7570.0], [2100.0, 7921.0], [2300.0, 3935.0], [2200.0, 4218.0], [2400.0, 3574.0], [2500.0, 3068.0], [2600.0, 2706.0], [2800.0, 2690.0], [2700.0, 2619.0], [2900.0, 2636.0], [3000.0, 2804.0], [3100.0, 3233.0], [3200.0, 2562.0], [3300.0, 2166.0], [3400.0, 2019.0], [3500.0, 1774.0], [3600.0, 1541.0], [3700.0, 1464.0], [3800.0, 1486.0], [3900.0, 1486.0], [4000.0, 1462.0], [4100.0, 1830.0], [4200.0, 1894.0], [4300.0, 1460.0], [4400.0, 1192.0], [4500.0, 1179.0], [4600.0, 1090.0], [4700.0, 1020.0], [4800.0, 991.0], [4900.0, 936.0], [5000.0, 974.0], [5100.0, 1177.0], [5200.0, 1353.0], [5300.0, 1049.0], [5500.0, 698.0], [5400.0, 854.0], [5600.0, 713.0], [5700.0, 674.0], [5800.0, 658.0], [5900.0, 601.0], [6100.0, 655.0], [6000.0, 602.0], [6200.0, 845.0], [6300.0, 798.0], [6400.0, 627.0], [6600.0, 494.0], [6500.0, 522.0], [6700.0, 542.0], [6800.0, 525.0], [6900.0, 461.0], [7000.0, 467.0], [7100.0, 424.0], [7200.0, 591.0], [7300.0, 730.0], [7400.0, 585.0], [7500.0, 465.0], [7600.0, 374.0], [7700.0, 364.0], [7800.0, 425.0], [7900.0, 369.0], [8000.0, 384.0], [8100.0, 375.0], [8300.0, 528.0], [8200.0, 403.0], [8400.0, 508.0], [8500.0, 399.0], [8600.0, 320.0], [8700.0, 310.0], [9200.0, 312.0], [9100.0, 304.0], [8900.0, 308.0], [8800.0, 268.0], [9000.0, 279.0], [9600.0, 314.0], [9300.0, 429.0], [9400.0, 512.0], [9500.0, 450.0], [9700.0, 242.0], [10000.0, 448.0], [10100.0, 513.0], [10200.0, 500.0], [9800.0, 298.0], [9900.0, 262.0], [10500.0, 603.0], [10700.0, 330.0], [10400.0, 598.0], [10300.0, 487.0], [10600.0, 464.0], [10800.0, 314.0], [10900.0, 283.0], [11000.0, 274.0], [11100.0, 214.0], [11200.0, 133.0], [11300.0, 96.0], [11500.0, 48.0], [11400.0, 79.0], [11700.0, 25.0], [11600.0, 18.0], [11800.0, 18.0], [12000.0, 19.0], [11900.0, 13.0], [12100.0, 15.0], [12200.0, 15.0], [12300.0, 12.0], [12500.0, 14.0], [12600.0, 10.0], [12700.0, 8.0], [12400.0, 7.0], [13000.0, 9.0], [13200.0, 8.0], [13300.0, 11.0], [12800.0, 12.0], [12900.0, 10.0], [13100.0, 11.0], [13400.0, 12.0], [13500.0, 13.0], [13700.0, 6.0], [13800.0, 14.0], [13600.0, 8.0], [13900.0, 8.0], [14000.0, 8.0], [14100.0, 6.0], [14200.0, 2.0], [14300.0, 3.0], [14400.0, 5.0], [14600.0, 9.0], [14700.0, 7.0], [14800.0, 2.0], [14500.0, 4.0], [14900.0, 6.0], [15000.0, 7.0], [15100.0, 4.0], [15200.0, 4.0], [15300.0, 3.0], [15800.0, 4.0], [15400.0, 4.0], [15500.0, 1.0], [15600.0, 2.0], [15700.0, 1.0], [15900.0, 1.0], [16000.0, 1.0], [16100.0, 2.0], [16200.0, 2.0], [16300.0, 1.0], [17000.0, 4.0], [17200.0, 2.0], [16700.0, 1.0], [16900.0, 2.0], [16500.0, 1.0], [17400.0, 1.0], [17500.0, 1.0], [18100.0, 1.0], [17700.0, 1.0], [18000.0, 1.0], [17800.0, 1.0], [19600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 921.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 137088.0, "series": [{"data": [[0.0, 921.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 91356.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 137088.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 11363.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2778.5781676774295, "minX": 1.68416172E12, "maxY": 3000.0, "series": [{"data": [[1.68416196E12, 3000.0], [1.68416178E12, 3000.0], [1.68416172E12, 3000.0], [1.6841619E12, 3000.0], [1.68416202E12, 2778.5781676774295], [1.68416184E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416202E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 38.0, "minX": 1.0, "maxY": 12925.0, "series": [{"data": [[2.0, 7498.0], [3.0, 7350.0], [4.0, 6106.0], [5.0, 6195.0], [6.0, 6001.0], [7.0, 5855.0], [8.0, 5650.0], [9.0, 5212.0], [10.0, 5038.0], [11.0, 5151.0], [13.0, 5134.5], [14.0, 4948.0], [15.0, 4883.0], [17.0, 4663.0], [18.0, 5009.0], [19.0, 4964.0], [20.0, 4596.0], [21.0, 4114.0], [22.0, 4108.0], [23.0, 4112.0], [24.0, 4071.0], [26.0, 4077.0], [27.0, 4046.0], [28.0, 4032.0], [29.0, 4162.0], [30.0, 4035.0], [31.0, 4153.0], [33.0, 4414.0], [32.0, 12925.0], [35.0, 4124.0], [34.0, 4014.0], [36.0, 4357.0], [39.0, 3998.0], [38.0, 4180.0], [41.0, 3976.0], [40.0, 4345.0], [43.0, 4348.0], [42.0, 3967.0], [45.0, 3971.0], [44.0, 3964.0], [47.0, 4354.0], [46.0, 4077.0], [51.0, 3936.0], [50.0, 4121.666666666667], [53.0, 3882.0], [52.0, 3918.0], [55.0, 3914.0], [54.0, 3913.0], [57.0, 3915.0], [56.0, 3917.0], [59.0, 4244.0], [58.0, 4301.0], [61.0, 3881.0], [63.0, 3879.0], [62.0, 3872.0], [67.0, 4061.0], [66.0, 3841.0], [65.0, 3802.0], [64.0, 3874.0], [71.0, 3754.0], [70.0, 3640.0], [69.0, 3770.0], [68.0, 3651.0], [73.0, 3623.0], [72.0, 3619.0], [79.0, 3589.0], [78.0, 3585.0], [77.0, 3596.0], [76.0, 3639.3333333333335], [83.0, 3945.0], [82.0, 3704.0], [81.0, 3982.0], [80.0, 3582.0], [87.0, 3655.0], [86.0, 3538.0], [85.0, 3946.0], [84.0, 3591.0], [91.0, 3533.0], [90.0, 3923.0], [89.0, 3522.0], [88.0, 3544.0], [95.0, 3616.0], [94.0, 3516.0], [93.0, 3536.0], [92.0, 3644.0], [99.0, 3568.0], [98.0, 3486.0], [97.0, 3436.0], [96.0, 3476.0], [103.0, 3227.0], [102.0, 3233.0], [101.0, 3545.0], [100.0, 3210.0], [107.0, 3183.0], [106.0, 3077.0], [105.0, 3198.0], [104.0, 3103.0], [111.0, 3044.0], [110.0, 3397.0], [109.0, 3173.0], [108.0, 3055.0], [115.0, 3061.0], [113.0, 3014.0], [112.0, 3012.0], [119.0, 3016.0], [118.0, 3204.5], [116.0, 2998.0], [122.0, 3121.0], [121.0, 3369.0], [120.0, 3120.0], [127.0, 2994.0], [126.0, 3010.0], [125.0, 2999.0], [124.0, 3059.5], [135.0, 3372.0], [134.0, 3101.0], [133.0, 3041.5], [131.0, 3357.0], [130.0, 3356.0], [129.0, 3179.0], [143.0, 2910.0], [142.0, 3321.0], [141.0, 2956.0], [140.0, 3067.0], [139.0, 2957.0], [138.0, 3358.0], [137.0, 3320.0], [136.0, 3077.0], [151.0, 3117.5], [149.0, 3307.0], [148.0, 2886.0], [147.0, 3339.0], [146.0, 2933.0], [145.0, 2947.0], [144.0, 2943.0], [159.0, 2923.0], [158.0, 3039.0], [157.0, 2931.0], [156.0, 2915.0], [155.0, 2927.0], [153.0, 3328.0], [152.0, 3050.0], [167.0, 2908.0], [166.0, 2965.5], [164.0, 2902.0], [163.0, 2907.0], [162.0, 3277.0], [161.0, 2933.0], [160.0, 2928.0], [175.0, 3022.0], [174.0, 3153.0], [171.0, 3025.0], [170.0, 3294.0], [169.0, 2901.0], [168.0, 2902.0], [183.0, 2889.0], [182.0, 2882.0], [181.0, 2884.0], [180.0, 3297.0], [179.0, 2896.0], [178.0, 3274.5], [176.0, 3017.0], [189.0, 2948.0], [187.0, 3001.0], [186.0, 3001.0], [185.0, 2898.0], [184.0, 3004.0], [199.0, 3032.5], [195.0, 3038.3333333333335], [192.0, 3042.3333333333335], [207.0, 3234.0], [206.0, 2991.0], [205.0, 3035.0], [202.0, 2994.0], [201.0, 3063.0], [214.0, 2984.0], [213.0, 2984.0], [212.0, 2873.0], [211.0, 2983.0], [210.0, 3234.0], [209.0, 2929.0], [223.0, 3103.5], [220.0, 2982.5], [218.0, 2853.0], [217.0, 2875.0], [216.0, 2864.5], [231.0, 2943.6666666666665], [228.0, 3230.0], [227.0, 2865.0], [226.0, 2978.6666666666665], [239.0, 2843.0], [238.0, 2849.0], [237.0, 3229.0], [236.0, 2969.0], [235.0, 2937.3333333333335], [232.0, 2853.0], [247.0, 3007.0], [245.0, 2853.0], [244.0, 3208.0], [243.0, 2960.0], [242.0, 2964.0], [241.0, 3164.5], [255.0, 3182.0], [254.0, 3187.0], [252.0, 2940.0], [251.0, 3181.0], [250.0, 2945.0], [249.0, 2821.0], [248.0, 2827.0], [270.0, 2692.0], [271.0, 2700.0], [269.0, 3096.0], [268.0, 3112.0], [267.0, 2770.0], [266.0, 2767.0], [265.0, 2789.0], [264.0, 2905.0], [263.0, 2805.0], [257.0, 2935.5], [259.0, 2927.0], [258.0, 2813.0], [262.0, 2808.0], [261.0, 2808.0], [260.0, 3176.0], [286.0, 2951.0], [287.0, 2692.0], [285.0, 2692.0], [284.0, 2584.0], [283.0, 2695.0], [282.0, 2945.0], [281.0, 2591.0], [280.0, 4566.333333333333], [277.0, 2710.0], [275.0, 2982.0], [274.0, 2741.0], [273.0, 3027.0], [272.0, 2790.0], [276.0, 2716.0], [301.0, 2928.0], [303.0, 2556.5], [300.0, 2554.0], [291.0, 2559.0], [290.0, 2561.0], [289.0, 5410.0], [299.0, 2572.0], [298.0, 2678.0], [297.0, 2575.0], [296.0, 2680.0], [295.0, 2927.0], [294.0, 2681.0], [293.0, 2680.0], [292.0, 2683.0], [307.0, 2554.0], [319.0, 2606.5], [316.0, 2564.0], [315.0, 2667.0], [314.0, 2563.0], [311.0, 2611.0], [309.0, 2676.0], [308.0, 2925.0], [306.0, 2673.0], [305.0, 2519.0], [304.0, 2527.0], [334.0, 2600.5], [335.0, 2924.0], [332.0, 2543.0], [331.0, 2661.0], [330.0, 2667.0], [328.0, 2582.0], [325.0, 2558.0], [324.0, 2553.0], [322.0, 2547.0], [321.0, 2670.0], [320.0, 2906.0], [349.0, 2538.0], [351.0, 2720.5], [348.0, 2543.0], [347.0, 2723.5], [346.0, 2777.5], [343.0, 2778.3333333333335], [341.0, 2544.3333333333335], [337.0, 2659.0], [336.0, 2662.0], [366.0, 2527.0], [367.0, 2931.0], [365.0, 2701.0], [363.0, 2889.0], [362.0, 2931.0], [360.0, 2654.0], [359.0, 2505.0], [358.0, 2828.6666666666665], [355.0, 2725.5], [353.0, 2902.0], [352.0, 2915.0], [371.0, 2527.0], [383.0, 2582.0], [381.0, 2763.0], [379.0, 2641.0], [378.0, 2805.0], [375.0, 2765.0], [373.0, 2522.0], [372.0, 2644.0], [370.0, 2535.0], [369.0, 2716.0], [387.0, 2640.0], [398.0, 2580.0], [399.0, 2632.0], [396.0, 2682.6666666666665], [393.0, 2474.0], [392.0, 2639.0], [391.0, 2902.0], [389.0, 2522.0], [388.0, 2895.0], [385.0, 2646.0], [384.0, 2516.0], [414.0, 2806.5], [415.0, 2829.0], [412.0, 2479.0], [403.0, 2696.0], [401.0, 2695.5], [411.0, 5375.0], [409.0, 8160.0], [408.0, 2479.0], [407.0, 2855.0], [406.0, 3014.0], [404.0, 2615.0], [418.0, 3112.0], [431.0, 3128.0], [430.0, 2650.5], [426.0, 2585.0], [425.0, 2862.0], [424.0, 2584.0], [423.0, 2828.0], [422.0, 2728.0], [420.0, 2725.0], [417.0, 2593.0], [416.0, 2589.0], [446.0, 2393.0], [447.0, 2149.0], [444.0, 7738.0], [435.0, 2549.0], [434.0, 7980.0], [433.0, 8073.0], [432.0, 3074.0], [443.0, 2690.0], [442.0, 2448.0], [441.0, 2072.0], [440.0, 2614.5], [438.0, 7818.0], [437.0, 2133.0], [436.0, 2498.0], [451.0, 2231.0], [462.0, 2104.5], [463.0, 1989.0], [460.0, 2156.3333333333335], [449.0, 2143.0], [448.0, 2212.5], [457.0, 2638.0], [456.0, 2396.0], [455.0, 2380.0], [454.0, 7694.0], [453.0, 2128.0], [452.0, 7695.0], [467.0, 2087.0], [477.0, 2326.0], [479.0, 2324.0], [476.0, 2597.0], [466.0, 2090.0], [465.0, 1972.0], [464.0, 2356.0], [475.0, 2205.6666666666665], [472.0, 2075.0], [471.0, 2078.0], [470.0, 2082.0], [469.0, 2082.0], [468.0, 2326.0], [494.0, 2314.0], [495.0, 2293.0], [493.0, 2326.0], [492.0, 2302.0], [491.0, 2173.0], [489.0, 2303.0], [488.0, 2062.0], [487.0, 2312.0], [483.0, 4097.333333333333], [480.0, 1937.0], [486.0, 1935.0], [485.0, 2303.0], [509.0, 2300.0], [510.0, 2560.0], [508.0, 1917.0], [499.0, 2591.0], [498.0, 1938.0], [497.0, 2050.0], [496.0, 2314.0], [507.0, 7592.0], [506.0, 2041.0], [505.0, 2037.0], [504.0, 2296.3333333333335], [501.0, 2045.0], [500.0, 1894.0], [514.0, 1909.0], [538.0, 2013.0], [526.0, 1957.0], [516.0, 2281.0], [524.0, 1814.0], [520.0, 3533.0], [534.0, 2078.0], [532.0, 1904.0], [530.0, 2092.0], [570.0, 1991.0], [562.0, 1877.0], [574.0, 2176.0], [572.0, 1873.0], [546.0, 2003.0], [558.0, 1996.0], [554.0, 2251.0], [552.0, 1871.0], [566.0, 1872.0], [564.0, 1861.0], [560.0, 1990.0], [582.0, 2235.0], [600.0, 1875.0], [576.0, 1985.0], [596.0, 2115.5], [594.0, 1987.0], [590.0, 1862.5], [588.0, 2227.0], [634.0, 2228.0], [624.0, 2196.6666666666665], [626.0, 2214.5], [636.0, 2481.0], [632.0, 2214.0], [620.0, 1912.5], [608.0, 2213.0], [612.0, 2220.0], [618.0, 2230.0], [616.0, 1968.0], [630.0, 2031.5], [628.0, 1964.0], [670.0, 1852.0], [664.0, 2040.6666666666667], [662.0, 1885.0], [656.0, 1904.5], [644.0, 1962.0], [652.0, 2021.0], [650.0, 2222.5], [648.0, 2014.4], [678.0, 2000.3333333333333], [702.0, 2088.0], [700.0, 2481.0], [690.0, 2088.3333333333335], [674.0, 1958.0], [686.0, 1951.5], [684.0, 2224.3333333333335], [682.0, 2073.5], [728.0, 1823.0], [734.0, 2204.6666666666665], [732.0, 1822.0], [730.0, 2219.0], [718.0, 2064.6666666666665], [706.0, 1963.6666666666667], [710.0, 1819.0], [708.0, 2204.0], [712.0, 1824.0], [764.0, 2173.0], [762.0, 1802.0], [760.0, 2177.0], [750.0, 2273.0], [738.0, 1827.0], [796.0, 1807.0], [784.0, 1926.0], [792.0, 1919.0], [768.0, 1803.0], [774.0, 1924.5], [772.0, 2193.0], [776.0, 1926.0], [790.0, 1924.0], [788.0, 2132.5], [786.0, 2206.0], [824.0, 1777.0], [828.0, 2140.0], [816.0, 2151.0], [820.0, 3428.0], [830.0, 1902.0], [826.0, 2180.0], [800.0, 1919.0], [804.0, 2181.5], [802.0, 2003.5], [806.0, 2174.5], [814.0, 2162.0], [812.0, 2156.5], [810.0, 1917.0], [808.0, 1799.0], [860.0, 2132.0], [858.0, 1891.0], [850.0, 1965.5], [848.0, 1832.0], [836.0, 1979.3333333333333], [844.0, 2146.0], [842.0, 2016.5], [840.0, 2166.0], [888.0, 1756.0], [890.0, 1947.5], [870.0, 2139.0], [886.0, 1764.0], [880.0, 2414.0], [876.0, 1760.0], [874.0, 1887.0], [920.0, 1928.5], [914.0, 2115.0], [896.0, 1945.0], [900.0, 1985.6666666666667], [908.0, 1858.0], [904.0, 1899.6666666666667], [916.0, 2375.0], [912.0, 3800.0], [954.0, 1996.0], [958.0, 1969.0], [944.0, 2083.0], [946.0, 2018.0], [948.0, 1764.0], [956.0, 1750.0], [932.0, 1825.0], [930.0, 2095.0], [942.0, 1697.0], [940.0, 1807.0], [938.0, 1980.6666666666667], [984.0, 1977.5], [990.0, 2004.0], [962.0, 2237.0], [960.0, 1595.0], [980.0, 1962.0], [976.0, 1673.6666666666667], [968.0, 1783.0], [1008.0, 1667.3333333333333], [1020.0, 1972.0], [1016.0, 1704.0], [992.0, 1882.25], [1012.0, 1569.5], [1010.0, 2099.5], [1028.0, 1964.5], [1080.0, 1625.3333333333333], [1036.0, 1809.0], [1032.0, 1687.0], [1024.0, 2224.0], [1064.0, 2012.6666666666667], [1056.0, 1554.0], [1052.0, 1792.0], [1048.0, 1563.0], [1044.0, 1960.0], [1148.0, 1895.0], [1144.0, 1753.0], [1132.0, 1900.0], [1124.0, 2032.5], [1120.0, 1836.5], [1092.0, 2046.0], [1096.0, 1912.0], [1112.0, 2038.25], [1212.0, 1879.0], [1184.0, 1618.0], [1176.0, 1752.5], [1268.0, 1773.3333333333333], [1276.0, 1856.0], [1264.0, 1878.0], [1220.0, 1864.0], [1216.0, 1853.0], [1224.0, 1836.3333333333333], [1240.0, 1601.0], [1260.0, 1836.0], [1256.0, 1922.75], [1332.0, 2607.0], [1336.0, 1113.0], [1312.0, 2218.3333333333335], [1316.0, 1744.0], [1328.0, 1668.0], [1308.0, 1529.0], [1280.0, 2095.0], [1304.0, 1927.0], [1300.0, 1876.75], [1296.0, 2708.0], [1324.0, 1694.0], [1400.0, 1574.0], [1404.0, 1568.3333333333333], [1376.0, 1572.0], [1380.0, 1320.0], [1384.0, 1309.5], [1396.0, 1914.5], [1392.0, 1325.0], [1356.0, 1587.0], [1352.0, 1379.0], [1348.0, 1612.0], [1364.0, 1592.0], [1360.0, 1345.0], [1388.0, 1336.0], [1460.0, 1406.0], [1468.0, 1545.0], [1420.0, 1553.0], [1436.0, 1419.5], [1432.0, 1552.0], [1428.0, 1547.0], [1424.0, 1548.0], [1484.0, 1546.0], [1496.0, 1275.6666666666667], [1488.0, 1294.0], [1480.0, 1533.0], [1476.0, 1373.3333333333333], [1588.0, 1853.75], [1592.0, 1427.0], [1584.0, 1180.5], [1564.0, 1491.0], [1540.0, 1368.0], [1536.0, 1229.0], [1544.0, 1254.0], [1560.0, 1492.0], [1572.0, 1459.0], [1568.0, 1589.5], [1652.0, 1427.0], [1660.0, 1397.0], [1648.0, 1445.0], [1612.0, 1287.0], [1608.0, 1370.25], [1600.0, 1182.0], [1624.0, 1160.0], [1632.0, 1322.6666666666667], [1720.0, 1267.5], [1676.0, 1411.0], [1700.0, 1731.6666666666667], [1684.0, 1418.0], [1788.0, 1124.0], [1764.0, 1383.0], [1768.0, 1103.0], [1772.0, 1397.5], [1784.0, 1693.6666666666667], [1728.0, 1154.0], [1844.0, 1300.0], [1832.0, 1220.5], [1852.0, 1197.0], [1848.0, 1193.0], [1840.0, 780.0], [1792.0, 1367.0], [1820.0, 1100.3333333333333], [1816.0, 1341.0], [1812.0, 1233.0], [1808.0, 1455.2], [1908.0, 1153.0], [1888.0, 1157.0], [1912.0, 1132.5], [1892.0, 1152.0], [1900.0, 1133.5], [1904.0, 1172.0], [1860.0, 1158.0], [1864.0, 1498.3333333333333], [1868.0, 1173.0], [1884.0, 1160.0], [1876.0, 1146.5], [1972.0, 1119.25], [1960.0, 2103.0], [1932.0, 1147.0], [1944.0, 1118.0], [1964.0, 1130.0], [2040.0, 1119.0], [2016.0, 1120.0], [2020.0, 1121.0], [2024.0, 1128.0], [2044.0, 1128.0], [2036.0, 1115.6666666666667], [2032.0, 1123.3333333333333], [1984.0, 1117.0], [2012.0, 1130.0], [2004.0, 1125.0], [2000.0, 1132.3333333333333], [2028.0, 1135.5], [2160.0, 1108.0], [2112.0, 1117.5], [2128.0, 1112.6], [2168.0, 1110.75], [2144.0, 1108.0], [2072.0, 1118.0], [2064.0, 1120.25], [2048.0, 1135.5], [2104.0, 1122.6666666666667], [2096.0, 1119.0], [2088.0, 1121.0], [2080.0, 1122.0], [2280.0, 270.3333333333333], [2248.0, 1093.0], [2264.0, 40.0], [2288.0, 1530.0], [2272.0, 1238.0], [2232.0, 1103.0], [2176.0, 1107.0], [2184.0, 1107.0], [2224.0, 1095.5], [2408.0, 1396.0], [2416.0, 1386.5], [2424.0, 1378.4285714285713], [2368.0, 1382.0], [2376.0, 1393.0], [2392.0, 1381.0], [2400.0, 1344.0], [2320.0, 1399.0], [2328.0, 1439.3333333333333], [2352.0, 1406.0], [2344.0, 1417.0], [2336.0, 1390.0], [2552.0, 1345.0], [2520.0, 1348.4], [2536.0, 1980.0], [2488.0, 1359.0], [2480.0, 1351.0], [2472.0, 1362.5], [2464.0, 1362.0], [2664.0, 4566.0], [2632.0, 1099.0], [2680.0, 1101.5], [2672.0, 4386.666666666667], [2656.0, 8091.0], [2584.0, 1101.5], [2576.0, 1102.3333333333333], [2568.0, 1132.0], [2560.0, 1326.6666666666667], [2616.0, 1106.0], [2608.0, 576.6666666666666], [2800.0, 1101.0], [2784.0, 1105.0], [2752.0, 1096.0], [2760.0, 1102.0], [2808.0, 1100.4], [2704.0, 4290.5], [2688.0, 1099.8], [2744.0, 1107.25], [2736.0, 3236.0], [2728.0, 1101.0], [2936.0, 1102.1666666666665], [2888.0, 1106.75], [2880.0, 1097.0], [2896.0, 1095.0], [2904.0, 1117.0], [2816.0, 1113.0], [2824.0, 1098.0], [2856.0, 1099.5], [2848.0, 1097.0], [2944.0, 1102.7], [3000.0, 2664.733605900277], [2960.0, 1096.0], [2992.0, 1101.0], [2984.0, 1102.2], [2153.0, 1111.3333333333333], [2145.0, 1112.0], [2169.0, 1100.0], [2129.0, 1112.0], [2073.0, 1124.6666666666667], [2097.0, 1119.0], [2089.0, 1123.5], [2081.0, 1116.0], [2289.0, 1471.6666666666667], [2297.0, 1452.0], [2257.0, 1097.0], [2265.0, 41.42857142857142], [2281.0, 683.6666666666667], [2273.0, 1567.0], [2201.0, 1099.0], [2177.0, 1108.0], [2233.0, 1100.0], [2401.0, 1369.5], [2329.0, 1451.0], [2377.0, 1393.0], [2385.0, 1416.0], [2393.0, 1370.0], [2409.0, 1331.0], [2321.0, 1434.0], [2313.0, 1035.0], [2305.0, 1465.75], [2361.0, 2087.0], [2353.0, 921.5], [2337.0, 1456.0], [2545.0, 477.33333333333337], [2497.0, 693.6666666666666], [2513.0, 1350.75], [2553.0, 42.0], [2537.0, 897.3333333333334], [2529.0, 1338.75], [2441.0, 1357.6666666666667], [2433.0, 1358.0], [2465.0, 1356.5], [2681.0, 1102.0], [2625.0, 676.7000000000002], [2633.0, 570.0], [2649.0, 567.0], [2665.0, 4395.5], [2657.0, 7697.0], [2585.0, 1099.0], [2569.0, 1092.0], [2561.0, 1340.6666666666667], [2601.0, 746.6666666666666], [2593.0, 750.3333333333333], [2809.0, 1100.25], [2753.0, 1100.0], [2801.0, 1101.0], [2761.0, 1116.0], [2769.0, 1109.0], [2777.0, 1099.5], [2793.0, 1098.0], [2785.0, 1108.0], [2705.0, 1103.0], [2689.0, 1101.0], [2745.0, 1106.4], [2729.0, 1143.0], [2921.0, 2117.0], [2889.0, 1099.0], [2897.0, 1108.0], [2929.0, 1101.2], [2913.0, 1101.75], [2817.0, 1108.0], [2825.0, 1109.75], [2833.0, 1102.0], [2841.0, 1098.2], [2865.0, 1099.0], [2945.0, 1101.6], [2953.0, 1102.25], [2961.0, 1097.5], [2969.0, 1106.75], [2993.0, 1111.5], [2977.0, 1063.5], [1077.0, 1918.0], [1085.0, 1742.0], [1073.0, 1828.0], [1033.0, 1953.0], [1025.0, 1582.0], [1049.0, 1933.0], [1041.0, 1919.0], [1065.0, 1752.5], [1057.0, 1939.5], [1141.0, 1867.0], [1149.0, 1895.0], [1101.0, 1931.0], [1097.0, 1771.0], [1109.0, 1894.0], [1105.0, 1911.0], [1125.0, 1774.0], [1209.0, 1891.0], [1213.0, 1838.3333333333333], [1201.0, 2130.0], [1161.0, 1959.5], [1173.0, 1874.3333333333333], [1169.0, 1883.5], [1193.0, 1871.5], [1273.0, 1847.0], [1277.0, 1854.0], [1265.0, 1852.0], [1249.0, 1856.0], [1245.0, 1854.6666666666667], [1221.0, 2131.0], [1217.0, 1871.0], [1229.0, 1847.0], [1233.0, 2012.0], [1341.0, 1104.0], [1317.0, 1483.0], [1337.0, 1361.0], [1309.0, 2050.0], [1293.0, 1795.5], [1289.0, 1685.5], [1285.0, 1561.0], [1325.0, 1726.0], [1321.0, 1736.0], [1353.0, 1633.0], [1381.0, 1334.0], [1377.0, 1322.0], [1345.0, 1101.0], [1357.0, 2610.0], [1373.0, 1331.0], [1369.0, 1928.0], [1365.0, 2541.0], [1361.0, 1310.0], [1465.0, 1279.0], [1445.0, 1713.0], [1457.0, 1270.0], [1417.0, 1562.0], [1429.0, 1298.0], [1453.0, 1296.0], [1449.0, 1906.0], [1529.0, 1385.0], [1533.0, 1399.5], [1505.0, 1529.0], [1509.0, 1264.0], [1525.0, 1344.3333333333333], [1521.0, 1264.5], [1473.0, 1287.5], [1485.0, 1538.0], [1501.0, 1446.3333333333333], [1497.0, 1285.5], [1493.0, 1453.0], [1489.0, 1411.5], [1517.0, 1384.0], [1513.0, 1290.0], [1545.0, 1225.5], [1549.0, 1324.0], [1541.0, 1489.5], [1537.0, 1243.0], [1581.0, 1468.3333333333333], [1577.0, 1199.5], [1573.0, 1472.0], [1557.0, 1477.0], [1653.0, 1168.0], [1637.0, 1337.3333333333333], [1649.0, 1405.5], [1601.0, 1428.0], [1645.0, 1853.75], [1641.0, 1765.0], [1633.0, 1412.0], [1629.0, 1740.0], [1621.0, 1440.0], [1617.0, 1283.5], [1721.0, 1397.5], [1717.0, 1298.0], [1705.0, 1276.75], [1697.0, 1288.5], [1689.0, 1329.0], [1685.0, 1406.3333333333333], [1681.0, 1401.5], [1781.0, 1244.0], [1761.0, 1399.0], [1789.0, 1106.0], [1773.0, 1386.0], [1777.0, 1870.5], [1729.0, 1240.6666666666667], [1733.0, 1486.0], [1741.0, 1285.5], [1737.0, 1401.5], [1757.0, 2374.5], [1749.0, 1381.75], [1853.0, 1175.0], [1825.0, 1098.5], [1829.0, 1094.0], [1837.0, 1656.0], [1849.0, 1171.0], [1845.0, 1278.0], [1841.0, 1297.0], [1801.0, 1719.5], [1797.0, 1346.0], [1905.0, 1131.0], [1857.0, 1166.0], [1869.0, 864.0], [1881.0, 1159.0], [1933.0, 1453.6666666666667], [1977.0, 1438.6666666666667], [1953.0, 1374.75], [1957.0, 1140.0], [1961.0, 1120.0], [1929.0, 1132.0], [1921.0, 1465.3333333333333], [1941.0, 1125.6666666666667], [1937.0, 1158.6666666666667], [2033.0, 1113.0], [1985.0, 1123.2], [1989.0, 1124.0], [1993.0, 1119.2], [2001.0, 1123.0], [2146.0, 1113.0], [2114.0, 1115.0], [2074.0, 1123.0], [2058.0, 1123.5], [2050.0, 1114.0], [2082.0, 1120.3333333333333], [2290.0, 1454.0], [2258.0, 1095.0], [2266.0, 2218.0], [2298.0, 1469.0], [2282.0, 261.0], [2274.0, 931.5], [2186.0, 1096.0], [2194.0, 1099.0], [2202.0, 1099.0], [2226.0, 1098.75], [2218.0, 1099.0], [2210.0, 1102.5], [2410.0, 1403.0], [2426.0, 1369.0], [2370.0, 1393.5], [2378.0, 1384.5], [2394.0, 1381.0], [2402.0, 1420.0], [2306.0, 1455.0], [2322.0, 1444.0], [2330.0, 1456.5], [2362.0, 1730.0], [2354.0, 1410.0], [2346.0, 1404.6666666666667], [2338.0, 1393.5], [2538.0, 41.0], [2546.0, 692.5], [2554.0, 685.0], [2506.0, 1021.75], [2514.0, 921.6666666666666], [2522.0, 1012.0], [2530.0, 1026.25], [2458.0, 1363.6666666666665], [2450.0, 1369.6666666666667], [2490.0, 1131.5], [2474.0, 1475.3333333333333], [2666.0, 6569.666666666667], [2626.0, 1097.0], [2634.0, 745.3333333333334], [2642.0, 746.0], [2650.0, 41.0], [2674.0, 4380.0], [2658.0, 6183.5], [2586.0, 1101.2], [2578.0, 1106.5], [2570.0, 1140.0], [2562.0, 1320.0], [2618.0, 1097.0], [2594.0, 45.0], [2714.0, 1102.6666666666667], [2754.0, 1096.3333333333333], [2778.0, 1094.0], [2794.0, 1102.0], [2706.0, 1095.5], [2698.0, 1098.0], [2746.0, 1101.6666666666667], [2738.0, 1100.0], [2730.0, 1102.5], [2722.0, 1103.0], [2914.0, 1104.0], [2882.0, 1097.25], [2890.0, 1102.0], [2898.0, 1100.3333333333333], [2906.0, 1138.0], [2818.0, 1100.0], [2826.0, 1096.0], [2834.0, 1100.0], [2874.0, 1123.0], [2866.0, 1101.0], [2850.0, 1102.75], [2962.0, 1094.0], [2954.0, 1099.0], [2970.0, 1109.857142857143], [2994.0, 1104.75], [2171.0, 1102.3333333333333], [2123.0, 1112.75], [2059.0, 1112.0], [2067.0, 1117.0], [2107.0, 1115.0], [2139.0, 1113.0], [2243.0, 1099.0], [2299.0, 1462.4], [2259.0, 1096.0], [2267.0, 1644.0], [2291.0, 1490.0], [2283.0, 1491.5], [2187.0, 1099.0], [2403.0, 1394.75], [2411.0, 1383.0], [2379.0, 1390.3333333333333], [2395.0, 1388.0], [2331.0, 444.0], [2315.0, 1445.8], [2307.0, 1463.0], [2363.0, 1385.0], [2347.0, 1469.0], [2339.0, 1487.0], [2555.0, 903.0], [2499.0, 696.0], [2507.0, 1351.0], [2523.0, 47.0], [2547.0, 913.3333333333334], [2459.0, 1387.5], [2443.0, 1348.0], [2483.0, 1352.3333333333333], [2467.0, 1362.0], [2587.0, 1097.3333333333333], [2667.0, 7564.0], [2659.0, 7717.0], [2683.0, 1099.5], [2627.0, 40.0], [2579.0, 1098.5], [2571.0, 1099.0], [2563.0, 1332.0], [2619.0, 839.25], [2595.0, 675.4], [2803.0, 1101.0], [2771.0, 1107.0], [2779.0, 1098.0], [2811.0, 1093.5], [2795.0, 1133.5], [2707.0, 1099.0], [2699.0, 3247.666666666667], [2691.0, 1113.0], [2747.0, 1115.0], [2739.0, 1101.1666666666665], [2731.0, 1098.0], [2723.0, 1098.4], [2931.0, 1100.25], [2939.0, 1100.0], [2883.0, 1098.25], [2891.0, 1107.0], [2899.0, 1099.5], [2923.0, 1112.0], [2915.0, 1118.0], [2819.0, 1097.5], [2827.0, 1106.0], [2835.0, 1101.0], [2843.0, 1096.0], [2875.0, 1103.1111111111113], [2867.0, 1105.3333333333333], [2859.0, 1099.4285714285713], [2851.0, 1100.0], [2947.0, 1099.5], [2995.0, 1099.5], [2955.0, 1111.5], [2963.0, 1098.0], [2987.0, 1113.0], [2979.0, 1143.0], [537.0, 2079.5], [531.0, 1890.0], [543.0, 1889.0], [541.0, 2267.3333333333335], [513.0, 1916.6666666666667], [515.0, 2319.0], [519.0, 2149.5], [517.0, 2269.0], [523.0, 2060.5], [521.0, 1910.0], [535.0, 2011.0], [529.0, 2879.0], [545.0, 2130.0], [569.0, 2131.5], [559.0, 1990.0], [547.0, 1952.0], [551.0, 2124.6666666666665], [549.0, 2003.0], [557.0, 2131.0], [553.0, 3497.0], [563.0, 1883.0], [561.0, 1993.0], [583.0, 2052.5], [595.0, 1984.0], [607.0, 1986.25], [603.0, 2231.3333333333335], [579.0, 2059.5], [577.0, 2105.0], [599.0, 2102.5], [597.0, 2072.3333333333335], [587.0, 1932.0], [585.0, 2166.6666666666665], [639.0, 2026.0], [637.0, 2089.0], [625.0, 2207.0], [633.0, 1961.0], [611.0, 1846.0], [615.0, 2045.4], [617.0, 2493.0], [631.0, 2237.0], [627.0, 1824.0], [669.0, 2124.6666666666665], [667.0, 1994.0], [657.0, 2486.0], [655.0, 2211.0], [641.0, 2033.5], [645.0, 1966.0], [653.0, 1961.0], [699.0, 2134.8], [703.0, 1947.0], [695.0, 1946.5], [687.0, 1953.0], [675.0, 1987.75], [683.0, 2193.0], [729.0, 2212.0], [735.0, 2190.0], [715.0, 2140.75], [713.0, 2229.0], [725.0, 2022.5], [723.0, 1890.5], [721.0, 2118.0], [765.0, 2062.0], [767.0, 2194.0], [763.0, 2445.0], [737.0, 2014.5], [739.0, 1941.0], [743.0, 2202.5], [741.0, 2004.5], [747.0, 2194.0], [745.0, 1942.0], [759.0, 2018.3333333333333], [757.0, 1808.0], [755.0, 1846.0], [753.0, 2020.0], [795.0, 2002.0], [797.0, 2178.0], [799.0, 2189.5], [785.0, 2097.0], [793.0, 1918.0], [781.0, 2046.5], [771.0, 2045.5], [769.0, 1923.0], [779.0, 2190.75], [791.0, 2330.0], [827.0, 1899.0], [831.0, 1896.0], [819.0, 2299.0], [829.0, 2140.0], [825.0, 2152.0], [815.0, 1908.0], [807.0, 1916.0], [813.0, 2433.0], [809.0, 2153.0], [823.0, 2119.0], [821.0, 1988.0], [863.0, 2170.0], [861.0, 2103.75], [855.0, 2041.0], [853.0, 2179.0], [845.0, 1968.5], [835.0, 2162.0], [839.0, 1837.5], [837.0, 2146.0], [871.0, 1948.0], [893.0, 1872.6666666666667], [869.0, 2011.5], [865.0, 1906.6666666666667], [887.0, 1879.6666666666667], [883.0, 2039.6], [877.0, 1885.0], [875.0, 2125.0], [873.0, 2135.5], [925.0, 2088.5], [927.0, 1910.5], [923.0, 1931.3333333333333], [909.0, 1965.5], [897.0, 1998.0], [901.0, 2136.0], [919.0, 2101.0], [917.0, 1979.5], [957.0, 1965.0], [959.0, 1961.0], [945.0, 1676.0], [947.0, 2029.0], [955.0, 1998.0], [953.0, 2013.5], [935.0, 2080.0], [933.0, 2078.0], [931.0, 1830.0], [929.0, 1838.5], [943.0, 1798.0], [941.0, 2337.0], [951.0, 1880.5], [949.0, 2005.0], [963.0, 1972.0], [989.0, 1792.6666666666667], [967.0, 1716.0], [965.0, 1717.0], [961.0, 1716.0], [983.0, 1978.5], [981.0, 1766.6666666666667], [973.0, 1847.5], [971.0, 2065.6666666666665], [969.0, 1985.0], [1017.0, 1968.5], [1021.0, 2101.0], [1023.0, 1593.0], [1019.0, 1707.0], [1005.0, 1842.25], [999.0, 3486.0], [997.0, 1903.25], [1001.0, 1957.5], [1015.0, 2225.0], [1013.0, 1953.0], [1030.0, 1945.5], [1086.0, 1901.0], [1074.0, 1934.0], [1034.0, 2067.0], [1026.0, 1957.0], [1070.0, 1838.3333333333333], [1054.0, 1557.5], [1050.0, 1722.6666666666667], [1046.0, 1673.0], [1150.0, 2152.0], [1146.0, 1914.0], [1130.0, 1902.0], [1118.0, 1637.0], [1090.0, 1905.3333333333333], [1102.0, 1911.0], [1106.0, 1894.0], [1210.0, 1868.0], [1206.0, 1606.0], [1198.0, 1808.5], [1194.0, 1877.5], [1190.0, 1795.6666666666667], [1154.0, 1872.3333333333333], [1274.0, 1848.0], [1278.0, 1696.5], [1254.0, 1861.0], [1250.0, 1596.0], [1270.0, 1827.5], [1242.0, 1765.6666666666667], [1230.0, 1988.5], [1238.0, 1862.5], [1234.0, 1730.0], [1262.0, 1850.0], [1258.0, 1847.0], [1330.0, 1325.0], [1338.0, 9680.0], [1314.0, 1912.0], [1334.0, 1259.0], [1282.0, 1563.0], [1290.0, 2443.0], [1286.0, 1938.0], [1302.0, 1796.0], [1326.0, 1455.0], [1322.0, 1453.0], [1318.0, 1734.0], [1398.0, 1448.0], [1402.0, 1306.0], [1378.0, 1328.0], [1386.0, 1314.0], [1394.0, 1577.5], [1358.0, 1311.0], [1354.0, 1365.0], [1362.0, 1299.0], [1390.0, 1301.5], [1466.0, 1287.0], [1462.0, 1530.5], [1470.0, 1899.5], [1418.0, 1503.2], [1414.0, 1562.0], [1454.0, 1294.0], [1442.0, 1424.5], [1426.0, 2028.5], [1534.0, 1546.0], [1514.0, 1258.0], [1486.0, 1287.5], [1482.0, 1453.3333333333333], [1478.0, 1262.0], [1598.0, 1260.0], [1570.0, 1351.0], [1546.0, 2487.0], [1562.0, 1361.0], [1558.0, 1807.6666666666667], [1554.0, 1357.0], [1582.0, 1445.0], [1578.0, 1451.0], [1654.0, 1324.6666666666667], [1658.0, 1418.0], [1614.0, 2378.0], [1610.0, 1243.3333333333333], [1626.0, 1181.0], [1622.0, 1176.0], [1646.0, 1427.0], [1642.0, 1160.0], [1634.0, 1170.0], [1670.0, 1404.0], [1678.0, 1485.0], [1722.0, 2387.0], [1726.0, 2358.0], [1666.0, 1414.0], [1706.0, 1394.0], [1694.0, 1420.0], [1690.0, 1404.5], [1682.0, 1402.0], [1762.0, 1384.0], [1770.0, 2333.0], [1786.0, 1383.5], [1746.0, 1385.0], [1742.0, 2042.6666666666667], [1774.0, 1385.0], [1850.0, 1187.0], [1826.0, 1097.5], [1834.0, 1819.0], [1838.0, 1325.0], [1846.0, 1272.0], [1842.0, 2279.0], [1806.0, 1191.3333333333333], [1798.0, 1603.0], [1794.0, 1367.5], [1822.0, 1345.0], [1818.0, 1180.0], [1894.0, 1164.0], [1898.0, 1148.8], [1914.0, 1127.0], [1910.0, 2099.0], [1906.0, 1473.0], [1886.0, 1157.0], [1874.0, 1470.3333333333333], [1978.0, 1126.0], [1962.0, 1123.3333333333333], [1930.0, 1130.0], [1926.0, 1455.0], [1950.0, 1619.5], [1946.0, 1137.0], [1966.0, 1122.0], [2038.0, 1117.0], [2018.0, 1137.0], [2022.0, 1124.0], [2042.0, 1121.75], [2014.0, 1118.6], [2010.0, 1124.0], [2006.0, 1120.0], [2002.0, 1109.0], [2026.0, 1114.5], [2076.0, 1120.0], [2124.0, 1115.5], [2164.0, 1110.75], [2156.0, 1104.0], [2068.0, 1129.0], [2052.0, 1117.0], [2108.0, 1114.6666666666667], [2100.0, 1123.0], [2084.0, 1120.0], [2300.0, 1472.0], [2244.0, 1099.4], [2252.0, 1097.5], [2260.0, 1094.0], [2268.0, 1663.5], [2276.0, 1286.4], [2180.0, 1101.0], [2188.0, 1107.0], [2196.0, 1107.0], [2204.0, 1102.75], [2212.0, 1099.0], [2420.0, 1240.3333333333333], [2372.0, 1435.6666666666667], [2380.0, 1410.6666666666667], [2428.0, 1358.5714285714287], [2404.0, 1368.0], [2308.0, 1477.3333333333333], [2324.0, 1432.5], [2332.0, 1419.75], [2356.0, 1389.6], [2340.0, 1452.0], [2532.0, 1316.0], [2548.0, 1349.0], [2500.0, 1369.6666666666667], [2508.0, 1366.0], [2524.0, 1368.6666666666667], [2540.0, 894.1666666666666], [2460.0, 1372.6666666666667], [2452.0, 1379.75], [2436.0, 1345.0], [2492.0, 1338.0], [2484.0, 1355.5], [2468.0, 1369.0], [2676.0, 2709.75], [2668.0, 4368.714285714285], [2628.0, 1101.6666666666667], [2636.0, 40.5], [2644.0, 833.0], [2652.0, 565.5], [2684.0, 1098.0], [2660.0, 4524.666666666667], [2572.0, 1124.0], [2564.0, 1332.0], [2612.0, 307.0], [2604.0, 836.75], [2796.0, 1102.0], [2756.0, 1102.4], [2764.0, 1097.4], [2772.0, 1096.0], [2780.0, 1100.0], [2812.0, 1096.625], [2700.0, 1095.0], [2692.0, 1097.0], [2748.0, 1096.0], [2732.0, 1097.75], [2884.0, 1095.0], [2940.0, 1103.0], [2900.0, 1095.0], [2908.0, 1102.0], [2820.0, 1098.75], [2828.0, 1094.6666666666667], [2844.0, 1099.0], [2876.0, 1096.5], [2868.0, 1097.0], [2956.0, 1097.0], [2948.0, 1096.0], [2964.0, 1106.0], [2972.0, 1105.2], [2996.0, 1104.0], [2988.0, 1109.0], [2980.0, 1121.0], [2173.0, 1105.0], [2117.0, 1121.6666666666667], [2157.0, 1108.0], [2149.0, 1107.0], [2053.0, 1119.0], [2061.0, 1113.0], [2085.0, 1111.5], [2141.0, 1108.0], [2293.0, 2661.5], [2245.0, 1095.0], [2269.0, 1664.3333333333333], [2301.0, 3485.0], [2285.0, 1092.3333333333333], [2277.0, 1912.25], [2197.0, 1105.3333333333333], [2189.0, 1102.0], [2237.0, 1097.0], [2413.0, 1363.0], [2421.0, 1377.0], [2381.0, 1411.0], [2429.0, 1361.0], [2325.0, 1434.0], [2317.0, 1460.0], [2365.0, 1400.0], [2357.0, 1406.0], [2349.0, 1413.8], [2341.0, 1452.0], [2549.0, 470.0], [2557.0, 52.333333333333336], [2509.0, 1366.0], [2517.0, 473.0], [2525.0, 704.0], [2541.0, 38.5], [2533.0, 1363.0], [2461.0, 1340.0], [2453.0, 1404.0], [2437.0, 1383.2], [2493.0, 1358.3333333333333], [2477.0, 1372.0], [2469.0, 1363.0], [2669.0, 1140.0], [2637.0, 39.0], [2645.0, 1096.0], [2653.0, 38.0], [2677.0, 1108.0], [2661.0, 7679.0], [2581.0, 1106.6666666666667], [2573.0, 1116.3333333333333], [2565.0, 1270.0], [2621.0, 1099.25], [2605.0, 43.0], [2757.0, 1094.0], [2789.0, 1101.25], [2765.0, 1095.0], [2781.0, 1099.3333333333333], [2717.0, 2055.8571428571427], [2709.0, 2381.6], [2749.0, 1100.0], [2741.0, 1098.0], [2893.0, 1105.0], [2933.0, 1101.5], [2901.0, 1098.0], [2909.0, 1113.0], [2925.0, 1101.0], [2837.0, 1093.0], [2877.0, 1099.0], [2861.0, 1099.0], [2957.0, 1098.6666666666667], [2949.0, 1099.4285714285713], [2965.0, 1104.5], [2973.0, 1106.0], [2989.0, 1100.0], [2981.0, 1089.0], [1083.0, 1798.5], [1087.0, 2164.0], [1039.0, 1728.0], [1047.0, 1671.0], [1043.0, 1910.0], [1067.0, 1917.3333333333333], [1059.0, 1912.5], [1147.0, 2147.0], [1151.0, 1890.75], [1139.0, 1982.6666666666667], [1099.0, 1765.5], [1095.0, 1898.5], [1115.0, 2000.3333333333333], [1135.0, 1969.5], [1127.0, 1882.0], [1123.0, 1898.0], [1203.0, 2049.6666666666665], [1207.0, 1871.0], [1167.0, 1880.5], [1159.0, 1791.0], [1183.0, 1617.0], [1179.0, 1961.0], [1199.0, 1892.0], [1195.0, 1903.0], [1187.0, 1835.6], [1279.0, 2096.0], [1259.0, 1870.3333333333333], [1251.0, 1997.5], [1223.0, 1745.0], [1235.0, 1694.0], [1343.0, 1191.0], [1315.0, 1552.0], [1339.0, 1102.0], [1335.0, 1639.0], [1331.0, 1664.0], [1283.0, 2475.0], [1307.0, 1966.0], [1323.0, 1195.0], [1319.0, 1737.0], [1407.0, 1408.0], [1387.0, 1305.5], [1375.0, 1316.0], [1351.0, 1281.6666666666667], [1347.0, 1097.0], [1355.0, 1605.0], [1359.0, 1331.0], [1371.0, 1450.0], [1367.0, 1463.0], [1463.0, 2569.0], [1447.0, 1898.5], [1471.0, 1294.0], [1443.0, 1304.0], [1459.0, 1263.0], [1423.0, 1387.3333333333333], [1411.0, 3524.0], [1439.0, 1387.6666666666667], [1435.0, 1317.0], [1451.0, 1274.0], [1507.0, 1778.3333333333333], [1531.0, 1264.5], [1511.0, 1451.3333333333333], [1523.0, 2503.0], [1503.0, 1359.6666666666667], [1479.0, 1527.0], [1519.0, 1511.0], [1515.0, 1536.0], [1591.0, 1260.3333333333333], [1595.0, 1247.0], [1551.0, 1488.0], [1543.0, 2457.0], [1539.0, 1482.0], [1575.0, 1329.0], [1571.0, 1223.0], [1559.0, 1478.0], [1555.0, 1364.0], [1615.0, 1421.0], [1663.0, 1281.5], [1603.0, 1426.3333333333333], [1639.0, 2402.0], [1627.0, 1136.0], [1623.0, 1913.5], [1619.0, 1423.0], [1727.0, 1396.0], [1715.0, 1398.0], [1711.0, 1337.6], [1703.0, 1140.0], [1695.0, 1652.0], [1671.0, 1405.3333333333333], [1667.0, 1235.6666666666667], [1779.0, 1387.5], [1763.0, 1252.5], [1767.0, 1287.6666666666667], [1771.0, 1116.0], [1759.0, 1394.0], [1735.0, 1249.0], [1755.0, 1330.75], [1751.0, 1253.0], [1775.0, 1405.0], [1847.0, 1252.0], [1851.0, 1193.0], [1855.0, 1164.5], [1827.0, 1326.0], [1831.0, 1334.5], [1839.0, 1307.0], [1843.0, 1295.0], [1823.0, 1100.0], [1815.0, 1350.0], [1811.0, 1222.5], [1911.0, 1133.0], [1915.0, 1131.0], [1919.0, 1456.6666666666667], [1891.0, 1615.0], [1903.0, 1148.0], [1887.0, 1131.0], [1859.0, 1647.5], [1863.0, 1158.0], [1867.0, 1489.0], [1871.0, 1152.0], [1883.0, 1471.3333333333333], [1879.0, 1374.3333333333333], [1935.0, 1130.0], [1955.0, 1139.0], [1983.0, 1113.0], [1971.0, 1158.0], [1927.0, 1453.0], [1947.0, 1130.0], [1943.0, 1155.5], [1939.0, 1149.0], [1967.0, 1456.0], [2047.0, 1125.6666666666667], [1991.0, 1126.5], [1995.0, 1114.0], [2007.0, 1117.0], [2150.0, 1109.3333333333333], [2174.0, 1108.0], [2142.0, 1112.0], [2158.0, 1113.5], [2054.0, 1116.5], [2302.0, 1462.0], [2294.0, 1494.5], [2262.0, 740.6666666666666], [2270.0, 1653.0], [2286.0, 1160.25], [2214.0, 1102.0], [2318.0, 1472.0], [2430.0, 1355.0], [2390.0, 1420.7333333333333], [2406.0, 1394.3333333333333], [2366.0, 1404.0], [2310.0, 1456.142857142857], [2326.0, 1451.5], [2334.0, 1437.3333333333333], [2350.0, 1404.0], [2342.0, 1410.5], [2542.0, 41.0], [2550.0, 686.5], [2502.0, 919.6666666666666], [2510.0, 828.4], [2518.0, 1364.0], [2526.0, 1317.5], [2534.0, 1679.5], [2462.0, 1368.6], [2454.0, 1369.5], [2446.0, 3108.75], [2438.0, 1364.3333333333333], [2494.0, 690.5], [2486.0, 1366.6666666666667], [2478.0, 1380.5], [2470.0, 1347.0], [2662.0, 7650.0], [2670.0, 2815.0], [2678.0, 1102.0], [2630.0, 746.6666666666667], [2654.0, 39.0], [2686.0, 3240.3333333333335], [2574.0, 1106.0], [2566.0, 1177.5], [2622.0, 1095.5], [2598.0, 1115.0], [2790.0, 1096.6666666666667], [2758.0, 1099.75], [2806.0, 1104.5], [2798.0, 1099.3333333333333], [2710.0, 1103.0], [2694.0, 1096.6666666666667], [2750.0, 1095.5], [2742.0, 1097.6666666666667], [2734.0, 3233.3333333333335], [2726.0, 1099.4], [2918.0, 1119.6666666666667], [2926.0, 1106.0], [2934.0, 1097.3333333333333], [2894.0, 1110.0], [2902.0, 1114.0], [2910.0, 1098.8333333333333], [2822.0, 1105.0], [2830.0, 1096.6666666666667], [2838.0, 1097.0], [2846.0, 1107.3333333333333], [2878.0, 1103.0], [2862.0, 4358.5], [2854.0, 2153.3333333333335], [2966.0, 1105.5714285714287], [2974.0, 1103.0], [2998.0, 1908.0], [2990.0, 1103.0], [2982.0, 1107.5], [2175.0, 1103.0], [2135.0, 1114.3333333333333], [2111.0, 1114.0], [2103.0, 1116.0], [2095.0, 1116.0], [2087.0, 1116.0], [2295.0, 1471.0], [2303.0, 1466.0], [2247.0, 1097.6666666666667], [2255.0, 1098.0], [2263.0, 248.375], [2271.0, 534.3333333333334], [2287.0, 1481.6666666666667], [2279.0, 1006.5], [2207.0, 1100.0], [2191.0, 1100.6666666666667], [2183.0, 1101.0], [2231.0, 1098.5], [2223.0, 1097.5], [2215.0, 1103.5], [2423.0, 1379.125], [2431.0, 1340.0], [2375.0, 1401.3333333333333], [2391.0, 1359.5], [2399.0, 1400.4], [2415.0, 1355.0], [2407.0, 1393.1666666666665], [2335.0, 1395.0], [2327.0, 1432.5], [2319.0, 1438.0], [2311.0, 1443.5], [2351.0, 1409.0], [2551.0, 688.0], [2559.0, 1017.5], [2503.0, 913.6666666666666], [2511.0, 43.5], [2519.0, 1352.5], [2535.0, 1983.0], [2463.0, 1355.5], [2439.0, 1344.5], [2495.0, 1199.75], [2679.0, 1100.0], [2687.0, 1106.7142857142858], [2631.0, 752.0], [2639.0, 40.0], [2647.0, 569.0], [2655.0, 47.0], [2663.0, 2899.5], [2591.0, 925.1666666666667], [2575.0, 755.0], [2567.0, 1094.0], [2623.0, 1101.0], [2615.0, 886.6], [2607.0, 1096.0], [2599.0, 749.3333333333333], [2815.0, 1100.0], [2799.0, 1101.0], [2759.0, 1098.0], [2767.0, 1100.0], [2775.0, 1098.8333333333333], [2783.0, 1103.5], [2719.0, 1096.6666666666667], [2711.0, 1110.0], [2703.0, 1099.3333333333333], [2695.0, 1136.0], [2735.0, 1096.3333333333333], [2727.0, 1098.6666666666667], [2895.0, 1099.0], [2919.0, 1119.75], [2903.0, 1104.0], [2879.0, 1098.6666666666665], [2823.0, 1098.0], [2839.0, 1115.5], [2847.0, 1103.5], [2855.0, 1111.0], [2959.0, 1099.5], [2975.0, 1098.0], [1.0, 7564.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2980.131372337235, 2649.935570436344]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 195489.05, "minX": 1.68416172E12, "maxY": 602183.9166666666, "series": [{"data": [[1.68416196E12, 481725.48333333334], [1.68416178E12, 489375.7166666667], [1.68416172E12, 276826.5333333333], [1.6841619E12, 528478.3666666667], [1.68416202E12, 232417.9], [1.68416184E12, 602183.9166666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68416196E12, 403557.6], [1.68416178E12, 402688.8], [1.68416172E12, 228575.85], [1.6841619E12, 444291.65], [1.68416202E12, 195489.05], [1.68416184E12, 503333.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416202E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2268.006864522452, "minX": 1.68416172E12, "maxY": 3319.5599335390452, "series": [{"data": [[1.68416196E12, 2310.348605130965], [1.68416178E12, 2515.893348598102], [1.68416172E12, 3319.5599335390452], [1.6841619E12, 2268.006864522452], [1.68416202E12, 3032.5207629276315], [1.68416184E12, 2913.7592103134]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416202E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2267.53492351249, "minX": 1.68416172E12, "maxY": 3309.0997705514565, "series": [{"data": [[1.68416196E12, 2309.7822927879497], [1.68416178E12, 2499.9522526769583], [1.68416172E12, 3309.0997705514565], [1.6841619E12, 2267.53492351249], [1.68416202E12, 3032.163696125183], [1.68416184E12, 2913.3294496286944]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416202E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.07647794083607186, "minX": 1.68416172E12, "maxY": 643.6334361895753, "series": [{"data": [[1.68416196E12, 43.415926623609614], [1.68416178E12, 121.81237793790822], [1.68416172E12, 643.6334361895753], [1.6841619E12, 24.9708308720183], [1.68416202E12, 0.07647794083607186], [1.68416184E12, 6.115108689789049]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416202E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.68416172E12, "maxY": 19629.0, "series": [{"data": [[1.68416196E12, 14749.0], [1.68416178E12, 19629.0], [1.68416172E12, 18167.0], [1.6841619E12, 17812.0], [1.68416202E12, 15267.0], [1.68416184E12, 15802.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68416196E12, 5808.0], [1.68416178E12, 6315.0], [1.68416172E12, 6373.9000000000015], [1.6841619E12, 5280.800000000003], [1.68416202E12, 8387.900000000001], [1.68416184E12, 9512.900000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68416196E12, 9323.94000000001], [1.68416178E12, 10414.830000000027], [1.68416172E12, 12069.980000000003], [1.6841619E12, 9152.950000000008], [1.68416202E12, 10760.980000000003], [1.68416184E12, 11101.980000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68416196E12, 6989.950000000001], [1.68416178E12, 7862.950000000001], [1.68416172E12, 8291.650000000005], [1.6841619E12, 6638.950000000001], [1.68416202E12, 10032.0], [1.68416184E12, 10469.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68416196E12, 52.0], [1.68416178E12, 53.0], [1.68416172E12, 1089.0], [1.6841619E12, 50.0], [1.68416202E12, 50.0], [1.68416184E12, 50.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68416196E12, 2061.5], [1.68416178E12, 1759.0], [1.68416172E12, 2873.0], [1.6841619E12, 2026.0], [1.68416202E12, 1626.0], [1.68416184E12, 1402.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416202E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 10312.0, "series": [{"data": [[5.0, 5650.0], [10.0, 7782.0], [11.0, 2061.0], [19.0, 4596.0], [29.0, 3884.0], [35.0, 2160.0], [39.0, 5496.0], [70.0, 1828.5], [72.0, 5271.0], [77.0, 6582.0], [80.0, 3856.5], [89.0, 3357.0], [123.0, 2026.5], [140.0, 2772.5], [146.0, 5588.5], [161.0, 2277.0], [162.0, 2161.0], [183.0, 3997.0], [177.0, 6486.0], [198.0, 3120.5], [224.0, 2703.0], [227.0, 1113.5], [230.0, 8420.5], [234.0, 2088.5], [242.0, 1691.0], [254.0, 4303.5], [270.0, 5553.5], [269.0, 7455.5], [256.0, 8070.0], [277.0, 3500.5], [334.0, 2886.0], [338.0, 2184.5], [367.0, 6312.0], [359.0, 2658.0], [371.0, 4269.0], [396.0, 5245.0], [400.0, 1207.0], [405.0, 2300.0], [406.0, 4815.0], [445.0, 3982.0], [450.0, 4428.5], [472.0, 4429.0], [475.0, 4004.5], [507.0, 1114.0], [533.0, 4335.0], [520.0, 3414.5], [528.0, 4135.0], [574.0, 3988.0], [564.0, 1680.0], [573.0, 1118.0], [561.0, 2472.0], [600.0, 1970.0], [586.0, 2147.5], [588.0, 2212.0], [606.0, 1150.5], [613.0, 3651.0], [620.0, 3592.0], [624.0, 2089.0], [638.0, 3472.5], [631.0, 3281.0], [647.0, 2443.0], [651.0, 2534.0], [678.0, 3413.0], [689.0, 2268.0], [691.0, 1525.5], [685.0, 2238.5], [701.0, 1308.0], [702.0, 1120.0], [725.0, 1114.0], [724.0, 1852.0], [713.0, 3412.0], [751.0, 1962.0], [766.0, 1105.0], [758.0, 1437.0], [759.0, 2002.5], [754.0, 1959.0], [794.0, 1188.0], [780.0, 1172.0], [791.0, 1621.5], [785.0, 3055.0], [777.0, 1669.0], [786.0, 2006.5], [793.0, 1106.0], [796.0, 1102.0], [795.0, 1099.0], [809.0, 1175.0], [827.0, 1132.0], [821.0, 2103.0], [807.0, 1109.5], [806.0, 2210.0], [820.0, 1148.0], [830.0, 2362.0], [803.0, 1370.0], [859.0, 1221.5], [851.0, 1825.0], [848.0, 1683.0], [849.0, 1631.0], [863.0, 1711.0], [834.0, 1132.0], [842.0, 2109.0], [843.0, 1714.0], [858.0, 1586.0], [868.0, 1652.0], [892.0, 1690.0], [864.0, 1148.5], [881.0, 1140.0], [883.0, 1938.0], [888.0, 1138.0], [871.0, 1502.5], [893.0, 1630.0], [879.0, 2252.0], [875.0, 1130.0], [877.0, 1582.0], [867.0, 2687.0], [900.0, 1717.0], [920.0, 2651.5], [902.0, 1448.0], [901.0, 1551.0], [903.0, 2810.0], [926.0, 2356.0], [921.0, 2336.0], [910.0, 2999.5], [917.0, 3123.0], [913.0, 1512.0], [918.0, 1968.0], [909.0, 2395.0], [897.0, 2710.0], [898.0, 1127.0], [907.0, 2832.5], [905.0, 1120.0], [927.0, 1102.0], [911.0, 2166.0], [955.0, 1254.0], [945.0, 1960.0], [946.0, 2738.0], [947.0, 1879.0], [930.0, 2038.0], [942.0, 3181.0], [929.0, 2201.5], [928.0, 1387.0], [941.0, 1761.0], [938.0, 1918.0], [936.0, 2088.0], [937.0, 1627.5], [951.0, 3066.0], [950.0, 2171.0], [948.0, 2514.0], [944.0, 1482.0], [959.0, 1532.0], [957.0, 2112.5], [956.0, 2778.0], [931.0, 1344.0], [934.0, 2353.5], [932.0, 1139.0], [954.0, 1124.0], [953.0, 1595.0], [952.0, 2255.0], [967.0, 1965.0], [977.0, 1337.5], [982.0, 1496.0], [983.0, 1776.5], [978.0, 1438.0], [976.0, 1823.0], [973.0, 1777.0], [960.0, 1489.0], [975.0, 1421.0], [964.0, 1904.0], [966.0, 2011.0], [961.0, 2672.0], [989.0, 1753.0], [988.0, 2224.0], [987.0, 1251.5], [970.0, 2025.0], [971.0, 1930.5], [972.0, 1110.0], [968.0, 1263.0], [969.0, 1528.0], [986.0, 1319.0], [984.0, 1314.0], [997.0, 2442.5], [1022.0, 2682.5], [1012.0, 2150.0], [1010.0, 1372.0], [1023.0, 1131.5], [1006.0, 1767.0], [1001.0, 2217.0], [1000.0, 2395.0], [1005.0, 1177.0], [1003.0, 1839.0], [1018.0, 1262.0], [1017.0, 2085.5], [998.0, 2305.0], [999.0, 2281.0], [995.0, 1499.5], [994.0, 1469.0], [1007.0, 1649.5], [993.0, 1554.0], [1032.0, 1139.0], [1072.0, 1437.5], [1050.0, 2053.0], [1048.0, 2132.0], [1041.0, 1930.5], [1047.0, 1122.0], [1055.0, 2443.5], [1026.0, 1578.0], [1028.0, 2540.0], [1024.0, 2279.0], [1061.0, 1130.0], [1063.0, 1927.0], [1071.0, 1828.0], [1064.0, 2109.0], [1062.0, 1914.0], [1038.0, 2061.0], [1033.0, 2072.0], [1031.0, 1709.0], [1029.0, 2412.0], [1085.0, 1105.0], [1060.0, 2789.0], [1037.0, 1227.0], [1122.0, 2153.0], [1176.0, 2546.0], [1155.0, 2093.5], [1183.0, 1346.0], [1233.0, 1666.5], [1.0, 8372.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[11.0, 40.0], [35.0, 47.0], [123.0, 57.0], [161.0, 57.0], [162.0, 49.5], [198.0, 65.0], [224.0, 53.0], [227.0, 42.0], [230.0, 10279.0], [234.0, 53.5], [269.0, 10296.0], [256.0, 10202.0], [277.0, 10261.0], [338.0, 10142.0], [367.0, 10209.5], [359.0, 156.0], [371.0, 70.0], [396.0, 10161.0], [400.0, 10078.0], [405.0, 58.0], [406.0, 599.0], [450.0, 73.0], [472.0, 61.5], [475.0, 74.0], [507.0, 42.0], [520.0, 56.0], [564.0, 462.0], [573.0, 10182.5], [561.0, 10312.0], [600.0, 64.0], [588.0, 10084.0], [606.0, 10212.0], [620.0, 61.0], [631.0, 150.0], [647.0, 496.0], [651.0, 878.5], [691.0, 54.0], [685.0, 47.0], [701.0, 10285.5], [724.0, 67.0], [713.0, 56.0], [758.0, 57.0], [759.0, 45.0], [754.0, 63.0], [751.0, 55.5], [780.0, 10255.5], [791.0, 47.0], [785.0, 59.0], [777.0, 908.0], [786.0, 106.0], [809.0, 46.0], [821.0, 59.0], [806.0, 64.0], [820.0, 1512.0], [830.0, 42.0], [803.0, 43.0], [863.0, 42.0], [859.0, 95.0], [851.0, 571.5], [849.0, 61.0], [848.0, 10245.0], [834.0, 58.0], [842.0, 10281.5], [843.0, 41.0], [858.0, 41.0], [888.0, 10310.0], [881.0, 46.0], [864.0, 10268.0], [893.0, 55.0], [879.0, 41.0], [892.0, 61.0], [877.0, 262.0], [875.0, 10141.0], [868.0, 47.0], [871.0, 266.0], [900.0, 60.0], [920.0, 41.0], [921.0, 59.0], [902.0, 41.0], [910.0, 41.0], [917.0, 42.0], [913.0, 40.0], [918.0, 41.0], [909.0, 41.5], [897.0, 41.0], [898.0, 63.0], [907.0, 40.0], [905.0, 10069.0], [911.0, 60.0], [926.0, 41.0], [955.0, 44.0], [945.0, 49.0], [946.0, 52.0], [947.0, 54.5], [930.0, 48.0], [942.0, 40.0], [929.0, 54.0], [928.0, 41.0], [938.0, 49.5], [937.0, 41.0], [936.0, 41.0], [941.0, 65.5], [951.0, 42.0], [950.0, 57.0], [948.0, 42.0], [944.0, 41.0], [957.0, 41.0], [956.0, 41.0], [931.0, 52.0], [934.0, 61.0], [932.0, 70.0], [954.0, 56.0], [953.0, 66.0], [952.0, 42.5], [967.0, 40.0], [977.0, 48.0], [982.0, 57.0], [983.0, 42.0], [978.0, 43.0], [976.0, 43.0], [973.0, 42.0], [960.0, 43.0], [975.0, 42.0], [964.0, 40.0], [966.0, 43.0], [961.0, 41.0], [989.0, 41.0], [988.0, 41.0], [987.0, 42.0], [970.0, 41.0], [968.0, 89.0], [971.0, 75.0], [972.0, 58.0], [986.0, 45.0], [984.0, 41.0], [997.0, 41.0], [1022.0, 1670.0], [1012.0, 42.0], [1010.0, 41.0], [1023.0, 41.0], [1006.0, 42.0], [1001.0, 43.5], [1000.0, 41.0], [1005.0, 57.5], [1003.0, 41.0], [1018.0, 43.0], [1017.0, 43.0], [998.0, 43.0], [999.0, 41.0], [995.0, 68.0], [994.0, 43.0], [1007.0, 42.0], [993.0, 41.0], [1032.0, 41.0], [1072.0, 46.5], [1050.0, 99.5], [1048.0, 47.0], [1041.0, 41.0], [1047.0, 54.0], [1055.0, 96.0], [1026.0, 61.0], [1028.0, 40.0], [1024.0, 41.0], [1061.0, 53.0], [1063.0, 62.0], [1071.0, 48.5], [1064.0, 41.0], [1062.0, 61.0], [1038.0, 42.0], [1033.0, 42.0], [1031.0, 41.0], [1029.0, 70.0], [1085.0, 58.0], [1060.0, 94.0], [1037.0, 53.0], [1122.0, 112.0], [1176.0, 403.5], [1155.0, 47.0], [1183.0, 345.0], [1233.0, 43.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1233.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 39.0, "minX": 1.0, "maxY": 10312.0, "series": [{"data": [[5.0, 5650.0], [10.0, 7781.5], [11.0, 2061.0], [19.0, 4596.0], [29.0, 3884.0], [35.0, 2159.0], [39.0, 5494.0], [70.0, 1828.5], [72.0, 5271.0], [77.0, 6581.0], [80.0, 3856.5], [89.0, 3357.0], [123.0, 2026.5], [140.0, 2772.5], [146.0, 5588.0], [161.0, 2277.0], [162.0, 2161.0], [183.0, 3997.0], [177.0, 6485.0], [198.0, 3120.5], [224.0, 2703.0], [227.0, 1113.0], [230.0, 8420.5], [234.0, 2088.5], [242.0, 1691.0], [254.0, 4303.5], [270.0, 5553.5], [269.0, 7455.5], [256.0, 8070.0], [277.0, 3500.5], [334.0, 2886.0], [338.0, 2184.5], [367.0, 6312.0], [359.0, 2658.0], [371.0, 4269.0], [396.0, 5245.0], [400.0, 1207.0], [405.0, 2300.0], [406.0, 4815.0], [445.0, 3982.0], [450.0, 4428.5], [472.0, 4429.0], [475.0, 4004.5], [507.0, 1114.0], [533.0, 4335.0], [520.0, 3414.0], [528.0, 4135.0], [574.0, 3944.0], [564.0, 1680.0], [573.0, 1118.0], [561.0, 2472.0], [600.0, 1969.0], [586.0, 2147.5], [588.0, 2212.0], [606.0, 1150.5], [613.0, 3651.0], [620.0, 3591.5], [624.0, 2089.0], [638.0, 3472.5], [631.0, 3281.0], [647.0, 2443.0], [651.0, 2534.0], [678.0, 3413.0], [689.0, 2268.0], [691.0, 1525.0], [685.0, 2236.0], [701.0, 1308.0], [702.0, 1119.0], [725.0, 1114.0], [724.0, 1852.0], [713.0, 3412.0], [751.0, 1960.0], [766.0, 1104.0], [758.0, 1437.0], [759.0, 2002.5], [754.0, 1958.0], [794.0, 1188.0], [780.0, 1171.5], [791.0, 1621.5], [785.0, 3054.5], [777.0, 1663.0], [786.0, 2006.5], [793.0, 1106.0], [796.0, 1101.0], [795.0, 1099.0], [809.0, 1175.0], [827.0, 1132.0], [821.0, 2102.5], [807.0, 1109.0], [806.0, 2210.0], [820.0, 1148.0], [830.0, 2362.0], [803.0, 1370.0], [859.0, 1221.5], [851.0, 1823.0], [848.0, 1683.0], [849.0, 1628.0], [863.0, 1711.0], [834.0, 1131.0], [842.0, 2109.0], [843.0, 1713.5], [858.0, 1586.0], [868.0, 1652.0], [892.0, 1690.0], [864.0, 1148.5], [881.0, 1139.5], [883.0, 1937.0], [888.0, 1138.0], [871.0, 1502.5], [893.0, 1630.0], [879.0, 2252.0], [875.0, 1130.0], [877.0, 1581.0], [867.0, 2687.0], [900.0, 1711.0], [920.0, 2651.5], [902.0, 1448.0], [901.0, 1550.0], [903.0, 2810.0], [926.0, 2355.0], [921.0, 2335.0], [910.0, 2999.0], [917.0, 3122.0], [913.0, 1511.0], [918.0, 1967.0], [909.0, 2395.0], [897.0, 2709.0], [898.0, 1127.0], [907.0, 2832.0], [905.0, 1120.0], [927.0, 1102.0], [911.0, 2166.0], [955.0, 1254.0], [945.0, 1956.0], [946.0, 2738.0], [947.0, 1878.0], [930.0, 2038.0], [942.0, 3181.0], [929.0, 2201.5], [928.0, 1387.0], [941.0, 1757.0], [938.0, 1918.0], [936.0, 2088.0], [937.0, 1627.5], [951.0, 3065.5], [950.0, 2166.0], [948.0, 2514.0], [944.0, 1481.0], [959.0, 1531.0], [957.0, 2112.5], [956.0, 2777.0], [931.0, 1344.0], [934.0, 2352.0], [932.0, 1139.0], [954.0, 1124.0], [953.0, 1594.0], [952.0, 2253.5], [967.0, 1964.5], [977.0, 1333.5], [982.0, 1496.0], [983.0, 1776.0], [978.0, 1438.0], [976.0, 1823.0], [973.0, 1777.0], [960.0, 1489.0], [975.0, 1421.0], [964.0, 1904.0], [966.0, 2011.0], [961.0, 2671.0], [989.0, 1752.5], [988.0, 2224.0], [987.0, 1251.5], [970.0, 2024.5], [971.0, 1930.0], [972.0, 1110.0], [968.0, 1262.0], [969.0, 1528.0], [986.0, 1319.0], [984.0, 1314.0], [997.0, 2442.5], [1022.0, 2652.0], [1012.0, 2150.0], [1010.0, 1372.0], [1023.0, 1131.0], [1006.0, 1767.0], [1001.0, 2205.5], [1000.0, 2395.0], [1005.0, 1176.0], [1003.0, 1838.0], [1018.0, 1262.0], [1017.0, 2085.0], [998.0, 2305.0], [999.0, 2280.5], [995.0, 1498.0], [994.0, 1469.0], [1007.0, 1649.0], [993.0, 1554.0], [1032.0, 1139.0], [1072.0, 1434.0], [1050.0, 2047.0], [1048.0, 2132.0], [1041.0, 1930.0], [1047.0, 1122.0], [1055.0, 2437.0], [1026.0, 1578.0], [1028.0, 2539.0], [1024.0, 2278.0], [1061.0, 1130.0], [1063.0, 1927.0], [1071.0, 1828.0], [1064.0, 2109.0], [1062.0, 1913.0], [1038.0, 2061.0], [1033.0, 2071.0], [1031.0, 1708.0], [1029.0, 2411.0], [1085.0, 1105.0], [1060.0, 2787.0], [1037.0, 1227.0], [1122.0, 2150.0], [1176.0, 2521.5], [1155.0, 2091.5], [1183.0, 1346.0], [1233.0, 1666.0], [1.0, 8372.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[11.0, 40.0], [35.0, 47.0], [123.0, 57.0], [161.0, 57.0], [162.0, 49.5], [198.0, 65.0], [224.0, 53.0], [227.0, 42.0], [230.0, 10279.0], [234.0, 53.5], [269.0, 10296.0], [256.0, 10202.0], [277.0, 10261.0], [338.0, 10142.0], [367.0, 10209.5], [359.0, 156.0], [371.0, 70.0], [396.0, 10161.0], [400.0, 10078.0], [405.0, 58.0], [406.0, 599.0], [450.0, 73.0], [472.0, 61.5], [475.0, 74.0], [507.0, 42.0], [520.0, 56.0], [564.0, 462.0], [573.0, 10182.5], [561.0, 10312.0], [600.0, 64.0], [588.0, 10084.0], [606.0, 10212.0], [620.0, 61.0], [631.0, 150.0], [647.0, 496.0], [651.0, 878.5], [691.0, 54.0], [685.0, 47.0], [701.0, 10285.5], [724.0, 67.0], [713.0, 56.0], [758.0, 57.0], [759.0, 45.0], [754.0, 63.0], [751.0, 55.5], [780.0, 10255.5], [791.0, 47.0], [785.0, 59.0], [777.0, 908.0], [786.0, 106.0], [809.0, 46.0], [821.0, 59.0], [806.0, 64.0], [820.0, 1512.0], [830.0, 42.0], [803.0, 43.0], [863.0, 42.0], [859.0, 95.0], [851.0, 571.5], [849.0, 61.0], [848.0, 10245.0], [834.0, 58.0], [842.0, 10281.5], [843.0, 41.0], [858.0, 41.0], [888.0, 10310.0], [881.0, 46.0], [864.0, 10268.0], [893.0, 55.0], [879.0, 41.0], [892.0, 61.0], [877.0, 262.0], [875.0, 10141.0], [868.0, 47.0], [871.0, 266.0], [900.0, 60.0], [920.0, 41.0], [921.0, 59.0], [902.0, 41.0], [910.0, 41.0], [917.0, 42.0], [913.0, 40.0], [918.0, 41.0], [909.0, 41.5], [897.0, 41.0], [898.0, 63.0], [907.0, 40.0], [905.0, 10069.0], [911.0, 60.0], [926.0, 41.0], [955.0, 43.5], [945.0, 49.0], [946.0, 46.0], [947.0, 54.5], [930.0, 48.0], [942.0, 40.0], [929.0, 54.0], [928.0, 41.0], [938.0, 49.5], [937.0, 41.0], [936.0, 41.0], [941.0, 65.5], [951.0, 42.0], [950.0, 43.0], [948.0, 41.0], [944.0, 41.0], [957.0, 39.0], [956.0, 41.0], [931.0, 52.0], [934.0, 61.0], [932.0, 70.0], [954.0, 56.0], [953.0, 66.0], [952.0, 42.5], [967.0, 40.0], [977.0, 48.0], [982.0, 57.0], [983.0, 42.0], [978.0, 43.0], [976.0, 43.0], [973.0, 42.0], [960.0, 43.0], [975.0, 42.0], [964.0, 40.0], [966.0, 43.0], [961.0, 41.0], [989.0, 41.0], [988.0, 41.0], [987.0, 42.0], [970.0, 41.0], [968.0, 89.0], [971.0, 75.0], [972.0, 58.0], [986.0, 45.0], [984.0, 41.0], [997.0, 41.0], [1022.0, 1670.0], [1012.0, 40.0], [1010.0, 41.0], [1023.0, 41.0], [1006.0, 42.0], [1001.0, 43.5], [1000.0, 41.0], [1005.0, 57.5], [1003.0, 41.0], [1018.0, 43.0], [1017.0, 43.0], [998.0, 43.0], [999.0, 41.0], [995.0, 68.0], [994.0, 43.0], [1007.0, 42.0], [993.0, 41.0], [1032.0, 41.0], [1072.0, 46.5], [1050.0, 99.5], [1048.0, 47.0], [1041.0, 41.0], [1047.0, 54.0], [1055.0, 96.0], [1026.0, 61.0], [1028.0, 40.0], [1024.0, 41.0], [1061.0, 53.0], [1063.0, 62.0], [1071.0, 48.5], [1064.0, 41.0], [1062.0, 61.0], [1038.0, 42.0], [1033.0, 42.0], [1031.0, 41.0], [1029.0, 70.0], [1085.0, 58.0], [1060.0, 94.0], [1037.0, 53.0], [1122.0, 112.0], [1176.0, 403.5], [1155.0, 47.0], [1183.0, 345.0], [1233.0, 43.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1233.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 310.01666666666665, "minX": 1.68416172E12, "maxY": 933.3333333333334, "series": [{"data": [[1.68416196E12, 768.7833333333333], [1.68416178E12, 720.0], [1.68416172E12, 466.6666666666667], [1.6841619E12, 813.3333333333334], [1.68416202E12, 310.01666666666665], [1.68416184E12, 933.3333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416202E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68416172E12, "maxY": 880.7166666666667, "series": [{"data": [[1.68416172E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68416196E12, 704.8666666666667], [1.68416178E12, 720.6666666666666], [1.68416172E12, 407.6166666666667], [1.6841619E12, 770.0833333333334], [1.68416202E12, 338.8], [1.68416184E12, 880.7166666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68416178E12, 0.85], [1.68416172E12, 0.31666666666666665]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68416196E12, 38.333333333333336], [1.68416178E12, 20.933333333333334], [1.68416172E12, 13.333333333333334], [1.6841619E12, 48.13333333333333], [1.68416202E12, 21.216666666666665], [1.68416184E12, 46.233333333333334]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416202E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 13.683333333333334, "minX": 1.68416172E12, "maxY": 880.7166666666667, "series": [{"data": [[1.68416196E12, 704.8666666666667], [1.68416178E12, 720.6666666666666], [1.68416172E12, 407.6166666666667], [1.6841619E12, 770.0833333333334], [1.68416202E12, 338.8], [1.68416184E12, 880.7166666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68416196E12, 38.333333333333336], [1.68416178E12, 21.783333333333335], [1.68416172E12, 13.683333333333334], [1.6841619E12, 48.13333333333333], [1.68416202E12, 21.216666666666665], [1.68416184E12, 46.233333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416202E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.683333333333334, "minX": 1.68416172E12, "maxY": 880.7166666666667, "series": [{"data": [[1.68416196E12, 704.8666666666667], [1.68416178E12, 720.6666666666666], [1.68416172E12, 407.6166666666667], [1.6841619E12, 770.0833333333334], [1.68416202E12, 338.8], [1.68416184E12, 880.7166666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68416196E12, 38.333333333333336], [1.68416178E12, 21.783333333333335], [1.68416172E12, 13.683333333333334], [1.6841619E12, 48.13333333333333], [1.68416202E12, 21.216666666666665], [1.68416184E12, 46.233333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416202E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

