/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "maxY": 18714.0, "series": [{"data": [[0.0, 37.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 38.0], [0.5, 38.0], [0.6, 38.0], [0.7, 38.0], [0.8, 38.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 39.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 39.0], [3.2, 39.0], [3.3, 39.0], [3.4, 39.0], [3.5, 39.0], [3.6, 39.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 40.0], [5.5, 40.0], [5.6, 40.0], [5.7, 40.0], [5.8, 40.0], [5.9, 40.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 40.0], [6.4, 40.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 40.0], [6.9, 40.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 41.0], [7.6, 41.0], [7.7, 41.0], [7.8, 41.0], [7.9, 41.0], [8.0, 41.0], [8.1, 41.0], [8.2, 41.0], [8.3, 41.0], [8.4, 41.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 41.0], [10.6, 41.0], [10.7, 41.0], [10.8, 41.0], [10.9, 41.0], [11.0, 41.0], [11.1, 41.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 42.0], [11.9, 42.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 42.0], [12.8, 42.0], [12.9, 42.0], [13.0, 42.0], [13.1, 42.0], [13.2, 42.0], [13.3, 42.0], [13.4, 42.0], [13.5, 42.0], [13.6, 42.0], [13.7, 42.0], [13.8, 42.0], [13.9, 42.0], [14.0, 42.0], [14.1, 42.0], [14.2, 42.0], [14.3, 42.0], [14.4, 42.0], [14.5, 42.0], [14.6, 42.0], [14.7, 42.0], [14.8, 42.0], [14.9, 42.0], [15.0, 43.0], [15.1, 43.0], [15.2, 43.0], [15.3, 43.0], [15.4, 43.0], [15.5, 43.0], [15.6, 43.0], [15.7, 43.0], [15.8, 43.0], [15.9, 43.0], [16.0, 43.0], [16.1, 43.0], [16.2, 43.0], [16.3, 43.0], [16.4, 43.0], [16.5, 43.0], [16.6, 43.0], [16.7, 43.0], [16.8, 43.0], [16.9, 43.0], [17.0, 43.0], [17.1, 43.0], [17.2, 43.0], [17.3, 43.0], [17.4, 43.0], [17.5, 43.0], [17.6, 43.0], [17.7, 44.0], [17.8, 44.0], [17.9, 44.0], [18.0, 44.0], [18.1, 44.0], [18.2, 44.0], [18.3, 44.0], [18.4, 44.0], [18.5, 44.0], [18.6, 44.0], [18.7, 44.0], [18.8, 44.0], [18.9, 45.0], [19.0, 45.0], [19.1, 45.0], [19.2, 45.0], [19.3, 45.0], [19.4, 46.0], [19.5, 46.0], [19.6, 46.0], [19.7, 47.0], [19.8, 47.0], [19.9, 48.0], [20.0, 48.0], [20.1, 49.0], [20.2, 50.0], [20.3, 50.0], [20.4, 51.0], [20.5, 52.0], [20.6, 53.0], [20.7, 55.0], [20.8, 56.0], [20.9, 57.0], [21.0, 58.0], [21.1, 59.0], [21.2, 60.0], [21.3, 62.0], [21.4, 64.0], [21.5, 67.0], [21.6, 70.0], [21.7, 75.0], [21.8, 80.0], [21.9, 84.0], [22.0, 90.0], [22.1, 93.0], [22.2, 96.0], [22.3, 99.0], [22.4, 102.0], [22.5, 105.0], [22.6, 108.0], [22.7, 111.0], [22.8, 117.0], [22.9, 124.0], [23.0, 135.0], [23.1, 153.0], [23.2, 174.0], [23.3, 218.0], [23.4, 265.0], [23.5, 306.0], [23.6, 368.0], [23.7, 482.0], [23.8, 603.0], [23.9, 796.0], [24.0, 1087.0], [24.1, 1090.0], [24.2, 1091.0], [24.3, 1092.0], [24.4, 1092.0], [24.5, 1092.0], [24.6, 1093.0], [24.7, 1093.0], [24.8, 1093.0], [24.9, 1093.0], [25.0, 1094.0], [25.1, 1094.0], [25.2, 1094.0], [25.3, 1094.0], [25.4, 1094.0], [25.5, 1095.0], [25.6, 1095.0], [25.7, 1095.0], [25.8, 1095.0], [25.9, 1095.0], [26.0, 1095.0], [26.1, 1095.0], [26.2, 1096.0], [26.3, 1096.0], [26.4, 1096.0], [26.5, 1096.0], [26.6, 1096.0], [26.7, 1096.0], [26.8, 1096.0], [26.9, 1096.0], [27.0, 1097.0], [27.1, 1097.0], [27.2, 1097.0], [27.3, 1097.0], [27.4, 1097.0], [27.5, 1097.0], [27.6, 1097.0], [27.7, 1097.0], [27.8, 1098.0], [27.9, 1098.0], [28.0, 1098.0], [28.1, 1098.0], [28.2, 1098.0], [28.3, 1098.0], [28.4, 1098.0], [28.5, 1098.0], [28.6, 1098.0], [28.7, 1099.0], [28.8, 1099.0], [28.9, 1099.0], [29.0, 1099.0], [29.1, 1099.0], [29.2, 1099.0], [29.3, 1099.0], [29.4, 1099.0], [29.5, 1100.0], [29.6, 1100.0], [29.7, 1100.0], [29.8, 1100.0], [29.9, 1100.0], [30.0, 1100.0], [30.1, 1100.0], [30.2, 1100.0], [30.3, 1101.0], [30.4, 1101.0], [30.5, 1101.0], [30.6, 1101.0], [30.7, 1101.0], [30.8, 1101.0], [30.9, 1101.0], [31.0, 1102.0], [31.1, 1102.0], [31.2, 1102.0], [31.3, 1102.0], [31.4, 1102.0], [31.5, 1102.0], [31.6, 1103.0], [31.7, 1103.0], [31.8, 1103.0], [31.9, 1103.0], [32.0, 1103.0], [32.1, 1103.0], [32.2, 1104.0], [32.3, 1104.0], [32.4, 1104.0], [32.5, 1104.0], [32.6, 1105.0], [32.7, 1105.0], [32.8, 1105.0], [32.9, 1105.0], [33.0, 1106.0], [33.1, 1106.0], [33.2, 1106.0], [33.3, 1107.0], [33.4, 1107.0], [33.5, 1107.0], [33.6, 1108.0], [33.7, 1108.0], [33.8, 1108.0], [33.9, 1109.0], [34.0, 1109.0], [34.1, 1110.0], [34.2, 1110.0], [34.3, 1111.0], [34.4, 1112.0], [34.5, 1112.0], [34.6, 1113.0], [34.7, 1114.0], [34.8, 1114.0], [34.9, 1115.0], [35.0, 1116.0], [35.1, 1117.0], [35.2, 1118.0], [35.3, 1119.0], [35.4, 1120.0], [35.5, 1121.0], [35.6, 1122.0], [35.7, 1123.0], [35.8, 1124.0], [35.9, 1125.0], [36.0, 1126.0], [36.1, 1127.0], [36.2, 1129.0], [36.3, 1130.0], [36.4, 1131.0], [36.5, 1132.0], [36.6, 1133.0], [36.7, 1135.0], [36.8, 1136.0], [36.9, 1137.0], [37.0, 1138.0], [37.1, 1140.0], [37.2, 1141.0], [37.3, 1142.0], [37.4, 1143.0], [37.5, 1145.0], [37.6, 1146.0], [37.7, 1147.0], [37.8, 1149.0], [37.9, 1150.0], [38.0, 1151.0], [38.1, 1152.0], [38.2, 1154.0], [38.3, 1155.0], [38.4, 1156.0], [38.5, 1157.0], [38.6, 1159.0], [38.7, 1160.0], [38.8, 1161.0], [38.9, 1162.0], [39.0, 1164.0], [39.1, 1165.0], [39.2, 1166.0], [39.3, 1168.0], [39.4, 1169.0], [39.5, 1170.0], [39.6, 1172.0], [39.7, 1173.0], [39.8, 1175.0], [39.9, 1176.0], [40.0, 1177.0], [40.1, 1179.0], [40.2, 1180.0], [40.3, 1182.0], [40.4, 1183.0], [40.5, 1185.0], [40.6, 1186.0], [40.7, 1188.0], [40.8, 1189.0], [40.9, 1191.0], [41.0, 1192.0], [41.1, 1194.0], [41.2, 1195.0], [41.3, 1197.0], [41.4, 1198.0], [41.5, 1200.0], [41.6, 1201.0], [41.7, 1203.0], [41.8, 1204.0], [41.9, 1206.0], [42.0, 1207.0], [42.1, 1209.0], [42.2, 1211.0], [42.3, 1212.0], [42.4, 1214.0], [42.5, 1216.0], [42.6, 1218.0], [42.7, 1219.0], [42.8, 1221.0], [42.9, 1223.0], [43.0, 1225.0], [43.1, 1227.0], [43.2, 1229.0], [43.3, 1230.0], [43.4, 1232.0], [43.5, 1234.0], [43.6, 1236.0], [43.7, 1238.0], [43.8, 1240.0], [43.9, 1242.0], [44.0, 1244.0], [44.1, 1246.0], [44.2, 1248.0], [44.3, 1250.0], [44.4, 1252.0], [44.5, 1254.0], [44.6, 1256.0], [44.7, 1258.0], [44.8, 1260.0], [44.9, 1262.0], [45.0, 1265.0], [45.1, 1267.0], [45.2, 1269.0], [45.3, 1271.0], [45.4, 1273.0], [45.5, 1276.0], [45.6, 1278.0], [45.7, 1280.0], [45.8, 1282.0], [45.9, 1284.0], [46.0, 1287.0], [46.1, 1289.0], [46.2, 1291.0], [46.3, 1293.0], [46.4, 1295.0], [46.5, 1298.0], [46.6, 1300.0], [46.7, 1302.0], [46.8, 1305.0], [46.9, 1307.0], [47.0, 1309.0], [47.1, 1312.0], [47.2, 1314.0], [47.3, 1316.0], [47.4, 1319.0], [47.5, 1321.0], [47.6, 1324.0], [47.7, 1326.0], [47.8, 1328.0], [47.9, 1331.0], [48.0, 1333.0], [48.1, 1336.0], [48.2, 1338.0], [48.3, 1341.0], [48.4, 1343.0], [48.5, 1346.0], [48.6, 1348.0], [48.7, 1351.0], [48.8, 1354.0], [48.9, 1357.0], [49.0, 1359.0], [49.1, 1362.0], [49.2, 1365.0], [49.3, 1367.0], [49.4, 1371.0], [49.5, 1373.0], [49.6, 1376.0], [49.7, 1379.0], [49.8, 1382.0], [49.9, 1385.0], [50.0, 1388.0], [50.1, 1391.0], [50.2, 1394.0], [50.3, 1397.0], [50.4, 1400.0], [50.5, 1402.0], [50.6, 1405.0], [50.7, 1408.0], [50.8, 1411.0], [50.9, 1414.0], [51.0, 1417.0], [51.1, 1420.0], [51.2, 1423.0], [51.3, 1426.0], [51.4, 1429.0], [51.5, 1432.0], [51.6, 1436.0], [51.7, 1439.0], [51.8, 1442.0], [51.9, 1445.0], [52.0, 1448.0], [52.1, 1451.0], [52.2, 1455.0], [52.3, 1458.0], [52.4, 1462.0], [52.5, 1465.0], [52.6, 1468.0], [52.7, 1471.0], [52.8, 1475.0], [52.9, 1478.0], [53.0, 1482.0], [53.1, 1486.0], [53.2, 1489.0], [53.3, 1492.0], [53.4, 1496.0], [53.5, 1499.0], [53.6, 1502.0], [53.7, 1506.0], [53.8, 1509.0], [53.9, 1513.0], [54.0, 1516.0], [54.1, 1520.0], [54.2, 1524.0], [54.3, 1527.0], [54.4, 1531.0], [54.5, 1535.0], [54.6, 1539.0], [54.7, 1542.0], [54.8, 1546.0], [54.9, 1550.0], [55.0, 1554.0], [55.1, 1558.0], [55.2, 1562.0], [55.3, 1565.0], [55.4, 1569.0], [55.5, 1573.0], [55.6, 1577.0], [55.7, 1581.0], [55.8, 1585.0], [55.9, 1589.0], [56.0, 1593.0], [56.1, 1597.0], [56.2, 1601.0], [56.3, 1605.0], [56.4, 1610.0], [56.5, 1614.0], [56.6, 1618.0], [56.7, 1622.0], [56.8, 1626.0], [56.9, 1630.0], [57.0, 1634.0], [57.1, 1639.0], [57.2, 1642.0], [57.3, 1647.0], [57.4, 1651.0], [57.5, 1656.0], [57.6, 1660.0], [57.7, 1664.0], [57.8, 1669.0], [57.9, 1673.0], [58.0, 1678.0], [58.1, 1682.0], [58.2, 1687.0], [58.3, 1692.0], [58.4, 1696.0], [58.5, 1701.0], [58.6, 1706.0], [58.7, 1710.0], [58.8, 1715.0], [58.9, 1720.0], [59.0, 1724.0], [59.1, 1729.0], [59.2, 1734.0], [59.3, 1740.0], [59.4, 1744.0], [59.5, 1749.0], [59.6, 1754.0], [59.7, 1759.0], [59.8, 1764.0], [59.9, 1769.0], [60.0, 1773.0], [60.1, 1778.0], [60.2, 1783.0], [60.3, 1788.0], [60.4, 1793.0], [60.5, 1799.0], [60.6, 1804.0], [60.7, 1809.0], [60.8, 1815.0], [60.9, 1820.0], [61.0, 1825.0], [61.1, 1830.0], [61.2, 1835.0], [61.3, 1841.0], [61.4, 1847.0], [61.5, 1853.0], [61.6, 1859.0], [61.7, 1864.0], [61.8, 1870.0], [61.9, 1876.0], [62.0, 1883.0], [62.1, 1889.0], [62.2, 1895.0], [62.3, 1901.0], [62.4, 1907.0], [62.5, 1913.0], [62.6, 1919.0], [62.7, 1925.0], [62.8, 1931.0], [62.9, 1937.0], [63.0, 1943.0], [63.1, 1950.0], [63.2, 1956.0], [63.3, 1962.0], [63.4, 1968.0], [63.5, 1974.0], [63.6, 1981.0], [63.7, 1988.0], [63.8, 1995.0], [63.9, 2001.0], [64.0, 2007.0], [64.1, 2014.0], [64.2, 2021.0], [64.3, 2028.0], [64.4, 2034.0], [64.5, 2041.0], [64.6, 2048.0], [64.7, 2055.0], [64.8, 2063.0], [64.9, 2069.0], [65.0, 2076.0], [65.1, 2084.0], [65.2, 2091.0], [65.3, 2098.0], [65.4, 2106.0], [65.5, 2113.0], [65.6, 2121.0], [65.7, 2129.0], [65.8, 2137.0], [65.9, 2144.0], [66.0, 2150.0], [66.1, 2157.0], [66.2, 2164.0], [66.3, 2172.0], [66.4, 2179.0], [66.5, 2187.0], [66.6, 2195.0], [66.7, 2204.0], [66.8, 2213.0], [66.9, 2222.0], [67.0, 2230.0], [67.1, 2240.0], [67.2, 2250.0], [67.3, 2260.0], [67.4, 2270.0], [67.5, 2281.0], [67.6, 2291.0], [67.7, 2302.0], [67.8, 2312.0], [67.9, 2324.0], [68.0, 2336.0], [68.1, 2347.0], [68.2, 2359.0], [68.3, 2371.0], [68.4, 2384.0], [68.5, 2397.0], [68.6, 2409.0], [68.7, 2422.0], [68.8, 2436.0], [68.9, 2448.0], [69.0, 2461.0], [69.1, 2475.0], [69.2, 2489.0], [69.3, 2503.0], [69.4, 2517.0], [69.5, 2530.0], [69.6, 2543.0], [69.7, 2555.0], [69.8, 2569.0], [69.9, 2581.0], [70.0, 2595.0], [70.1, 2609.0], [70.2, 2622.0], [70.3, 2633.0], [70.4, 2648.0], [70.5, 2660.0], [70.6, 2673.0], [70.7, 2685.0], [70.8, 2698.0], [70.9, 2712.0], [71.0, 2724.0], [71.1, 2737.0], [71.2, 2751.0], [71.3, 2765.0], [71.4, 2778.0], [71.5, 2791.0], [71.6, 2802.0], [71.7, 2817.0], [71.8, 2831.0], [71.9, 2846.0], [72.0, 2862.0], [72.1, 2876.0], [72.2, 2891.0], [72.3, 2904.0], [72.4, 2917.0], [72.5, 2930.0], [72.6, 2943.0], [72.7, 2958.0], [72.8, 2972.0], [72.9, 2985.0], [73.0, 2999.0], [73.1, 3013.0], [73.2, 3027.0], [73.3, 3039.0], [73.4, 3053.0], [73.5, 3065.0], [73.6, 3078.0], [73.7, 3092.0], [73.8, 3105.0], [73.9, 3119.0], [74.0, 3131.0], [74.1, 3145.0], [74.2, 3159.0], [74.3, 3173.0], [74.4, 3188.0], [74.5, 3202.0], [74.6, 3218.0], [74.7, 3232.0], [74.8, 3248.0], [74.9, 3264.0], [75.0, 3280.0], [75.1, 3296.0], [75.2, 3314.0], [75.3, 3331.0], [75.4, 3349.0], [75.5, 3369.0], [75.6, 3387.0], [75.7, 3404.0], [75.8, 3424.0], [75.9, 3443.0], [76.0, 3463.0], [76.1, 3483.0], [76.2, 3503.0], [76.3, 3524.0], [76.4, 3545.0], [76.5, 3564.0], [76.6, 3585.0], [76.7, 3607.0], [76.8, 3626.0], [76.9, 3646.0], [77.0, 3665.0], [77.1, 3684.0], [77.2, 3704.0], [77.3, 3723.0], [77.4, 3744.0], [77.5, 3764.0], [77.6, 3785.0], [77.7, 3806.0], [77.8, 3825.0], [77.9, 3846.0], [78.0, 3866.0], [78.1, 3885.0], [78.2, 3906.0], [78.3, 3926.0], [78.4, 3947.0], [78.5, 3967.0], [78.6, 3987.0], [78.7, 4005.0], [78.8, 4025.0], [78.9, 4045.0], [79.0, 4064.0], [79.1, 4083.0], [79.2, 4101.0], [79.3, 4119.0], [79.4, 4136.0], [79.5, 4154.0], [79.6, 4170.0], [79.7, 4187.0], [79.8, 4204.0], [79.9, 4220.0], [80.0, 4237.0], [80.1, 4254.0], [80.2, 4273.0], [80.3, 4294.0], [80.4, 4314.0], [80.5, 4337.0], [80.6, 4359.0], [80.7, 4382.0], [80.8, 4403.0], [80.9, 4424.0], [81.0, 4448.0], [81.1, 4472.0], [81.2, 4495.0], [81.3, 4520.0], [81.4, 4544.0], [81.5, 4567.0], [81.6, 4590.0], [81.7, 4614.0], [81.8, 4638.0], [81.9, 4664.0], [82.0, 4687.0], [82.1, 4711.0], [82.2, 4738.0], [82.3, 4761.0], [82.4, 4786.0], [82.5, 4812.0], [82.6, 4839.0], [82.7, 4865.0], [82.8, 4888.0], [82.9, 4914.0], [83.0, 4938.0], [83.1, 4964.0], [83.2, 4990.0], [83.3, 5015.0], [83.4, 5037.0], [83.5, 5061.0], [83.6, 5086.0], [83.7, 5109.0], [83.8, 5133.0], [83.9, 5157.0], [84.0, 5179.0], [84.1, 5200.0], [84.2, 5222.0], [84.3, 5244.0], [84.4, 5264.0], [84.5, 5285.0], [84.6, 5309.0], [84.7, 5331.0], [84.8, 5357.0], [84.9, 5380.0], [85.0, 5404.0], [85.1, 5429.0], [85.2, 5459.0], [85.3, 5487.0], [85.4, 5516.0], [85.5, 5542.0], [85.6, 5570.0], [85.7, 5599.0], [85.8, 5629.0], [85.9, 5658.0], [86.0, 5690.0], [86.1, 5716.0], [86.2, 5750.0], [86.3, 5782.0], [86.4, 5810.0], [86.5, 5839.0], [86.6, 5869.0], [86.7, 5899.0], [86.8, 5927.0], [86.9, 5956.0], [87.0, 5984.0], [87.1, 6014.0], [87.2, 6042.0], [87.3, 6070.0], [87.4, 6097.0], [87.5, 6124.0], [87.6, 6151.0], [87.7, 6175.0], [87.8, 6200.0], [87.9, 6224.0], [88.0, 6249.0], [88.1, 6273.0], [88.2, 6296.0], [88.3, 6322.0], [88.4, 6347.0], [88.5, 6374.0], [88.6, 6400.0], [88.7, 6429.0], [88.8, 6457.0], [88.9, 6490.0], [89.0, 6518.0], [89.1, 6551.0], [89.2, 6588.0], [89.3, 6623.0], [89.4, 6661.0], [89.5, 6699.0], [89.6, 6740.0], [89.7, 6780.0], [89.8, 6818.0], [89.9, 6855.0], [90.0, 6898.0], [90.1, 6941.0], [90.2, 6980.0], [90.3, 7018.0], [90.4, 7057.0], [90.5, 7092.0], [90.6, 7129.0], [90.7, 7165.0], [90.8, 7201.0], [90.9, 7235.0], [91.0, 7268.0], [91.1, 7300.0], [91.2, 7332.0], [91.3, 7366.0], [91.4, 7400.0], [91.5, 7435.0], [91.6, 7474.0], [91.7, 7512.0], [91.8, 7547.0], [91.9, 7588.0], [92.0, 7631.0], [92.1, 7675.0], [92.2, 7720.0], [92.3, 7766.0], [92.4, 7812.0], [92.5, 7857.0], [92.6, 7904.0], [92.7, 7947.0], [92.8, 7990.0], [92.9, 8036.0], [93.0, 8076.0], [93.1, 8120.0], [93.2, 8161.0], [93.3, 8197.0], [93.4, 8238.0], [93.5, 8282.0], [93.6, 8321.0], [93.7, 8358.0], [93.8, 8397.0], [93.9, 8438.0], [94.0, 8480.0], [94.1, 8520.0], [94.2, 8568.0], [94.3, 8613.0], [94.4, 8662.0], [94.5, 8713.0], [94.6, 8766.0], [94.7, 8822.0], [94.8, 8875.0], [94.9, 8926.0], [95.0, 8981.0], [95.1, 9033.0], [95.2, 9082.0], [95.3, 9132.0], [95.4, 9181.0], [95.5, 9228.0], [95.6, 9275.0], [95.7, 9319.0], [95.8, 9362.0], [95.9, 9410.0], [96.0, 9457.0], [96.1, 9501.0], [96.2, 9551.0], [96.3, 9593.0], [96.4, 9648.0], [96.5, 9701.0], [96.6, 9763.0], [96.7, 9823.0], [96.8, 9885.0], [96.9, 9946.0], [97.0, 10015.0], [97.1, 10057.0], [97.2, 10086.0], [97.3, 10115.0], [97.4, 10143.0], [97.5, 10172.0], [97.6, 10203.0], [97.7, 10238.0], [97.8, 10273.0], [97.9, 10309.0], [98.0, 10344.0], [98.1, 10379.0], [98.2, 10417.0], [98.3, 10456.0], [98.4, 10492.0], [98.5, 10530.0], [98.6, 10572.0], [98.7, 10614.0], [98.8, 10661.0], [98.9, 10711.0], [99.0, 10782.0], [99.1, 10845.0], [99.2, 10917.0], [99.3, 10992.0], [99.4, 11074.0], [99.5, 11151.0], [99.6, 11256.0], [99.7, 11425.0], [99.8, 12186.0], [99.9, 13030.0], [100.0, 18714.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 80495.0, "series": [{"data": [[0.0, 80495.0], [100.0, 3398.0], [200.0, 811.0], [300.0, 521.0], [400.0, 324.0], [500.0, 282.0], [600.0, 201.0], [700.0, 169.0], [800.0, 128.0], [900.0, 111.0], [1000.0, 19938.0], [1100.0, 43235.0], [1200.0, 18385.0], [1300.0, 13765.0], [1400.0, 11251.0], [1500.0, 9516.0], [1600.0, 8370.0], [1700.0, 7342.0], [1800.0, 6380.0], [1900.0, 5756.0], [2000.0, 5194.0], [2100.0, 4803.0], [2300.0, 3022.0], [2200.0, 3725.0], [2400.0, 2732.0], [2500.0, 2725.0], [2600.0, 2790.0], [2700.0, 2776.0], [2800.0, 2485.0], [2900.0, 2661.0], [3000.0, 2745.0], [3100.0, 2585.0], [3200.0, 2299.0], [3300.0, 2007.0], [3400.0, 1829.0], [3500.0, 1748.0], [3600.0, 1838.0], [3700.0, 1796.0], [3800.0, 1798.0], [3900.0, 1804.0], [4000.0, 1865.0], [4300.0, 1650.0], [4200.0, 2013.0], [4100.0, 2091.0], [4400.0, 1556.0], [4500.0, 1534.0], [4600.0, 1483.0], [4700.0, 1441.0], [4800.0, 1417.0], [4900.0, 1419.0], [5000.0, 1521.0], [5100.0, 1578.0], [5200.0, 1651.0], [5300.0, 1520.0], [5400.0, 1311.0], [5500.0, 1306.0], [5600.0, 1209.0], [5700.0, 1170.0], [5800.0, 1222.0], [6000.0, 1284.0], [5900.0, 1274.0], [6100.0, 1393.0], [6200.0, 1497.0], [6300.0, 1391.0], [6500.0, 1084.0], [6400.0, 1217.0], [6600.0, 953.0], [6700.0, 918.0], [6900.0, 868.0], [6800.0, 899.0], [7000.0, 992.0], [7100.0, 994.0], [7300.0, 1079.0], [7200.0, 1098.0], [7400.0, 958.0], [7600.0, 807.0], [7500.0, 944.0], [7700.0, 808.0], [7800.0, 772.0], [7900.0, 837.0], [8000.0, 845.0], [8100.0, 905.0], [8200.0, 865.0], [8300.0, 942.0], [8400.0, 860.0], [8500.0, 798.0], [8700.0, 673.0], [8600.0, 750.0], [8800.0, 672.0], [8900.0, 691.0], [9000.0, 704.0], [9200.0, 768.0], [9100.0, 752.0], [9300.0, 802.0], [9400.0, 790.0], [9600.0, 668.0], [9500.0, 780.0], [9700.0, 601.0], [10000.0, 964.0], [10200.0, 1047.0], [10100.0, 1239.0], [9900.0, 531.0], [9800.0, 592.0], [10300.0, 997.0], [10400.0, 956.0], [10500.0, 888.0], [10600.0, 760.0], [10700.0, 553.0], [10800.0, 530.0], [10900.0, 480.0], [11000.0, 470.0], [11100.0, 401.0], [11200.0, 316.0], [11500.0, 61.0], [11300.0, 192.0], [11600.0, 34.0], [11400.0, 113.0], [11700.0, 27.0], [12200.0, 60.0], [12000.0, 43.0], [12100.0, 31.0], [11800.0, 52.0], [11900.0, 36.0], [12300.0, 16.0], [12400.0, 21.0], [12500.0, 34.0], [12600.0, 67.0], [12700.0, 25.0], [12800.0, 56.0], [12900.0, 64.0], [13000.0, 65.0], [13100.0, 72.0], [13200.0, 67.0], [13300.0, 52.0], [13400.0, 31.0], [13500.0, 16.0], [13600.0, 22.0], [13700.0, 12.0], [13800.0, 6.0], [13900.0, 5.0], [14000.0, 1.0], [14200.0, 4.0], [14300.0, 1.0], [14500.0, 1.0], [14700.0, 2.0], [14400.0, 2.0], [14900.0, 2.0], [15000.0, 1.0], [15200.0, 1.0], [15300.0, 1.0], [15400.0, 1.0], [15600.0, 1.0], [15900.0, 1.0], [17400.0, 1.0], [17200.0, 1.0], [16500.0, 1.0], [17700.0, 1.0], [17900.0, 1.0], [18700.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 18700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3055.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 164512.0, "series": [{"data": [[0.0, 3055.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 107339.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 164512.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 85753.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2879.4156432320174, "minX": 1.684164E12, "maxY": 3000.0, "series": [{"data": [[1.68416424E12, 3000.0], [1.68416412E12, 3000.0], [1.6841643E12, 2879.4156432320174], [1.684164E12, 3000.0], [1.68416418E12, 3000.0], [1.68416406E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6841643E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.0, "maxY": 16579.0, "series": [{"data": [[2.0, 11091.0], [3.0, 11219.0], [4.0, 10801.0], [5.0, 10673.0], [6.0, 10650.0], [7.0, 10686.0], [8.0, 10930.0], [9.0, 10985.0], [10.0, 10356.0], [12.0, 10528.0], [13.0, 11065.0], [14.0, 10514.0], [15.0, 10959.0], [16.0, 10482.0], [18.0, 9993.5], [19.0, 11086.0], [20.0, 9942.0], [21.0, 10066.0], [22.0, 11325.0], [23.0, 10372.0], [24.0, 10604.0], [25.0, 11028.0], [26.0, 9418.0], [27.0, 10152.0], [28.0, 9026.0], [29.0, 10723.0], [30.0, 9120.0], [31.0, 8937.0], [33.0, 9283.0], [32.0, 9178.0], [35.0, 10618.0], [34.0, 9102.0], [37.0, 10838.0], [36.0, 9229.0], [39.0, 9313.0], [38.0, 9805.0], [41.0, 10004.0], [40.0, 10574.0], [43.0, 8752.0], [42.0, 9523.0], [45.0, 9050.0], [44.0, 9275.0], [47.0, 10096.5], [49.0, 9058.0], [48.0, 9253.0], [51.0, 11084.0], [50.0, 10643.0], [53.0, 9144.0], [52.0, 10085.0], [55.0, 9846.5], [57.0, 10823.0], [56.0, 10076.0], [59.0, 9339.0], [58.0, 10056.0], [60.0, 9322.0], [63.0, 9069.0], [62.0, 10125.5], [67.0, 9038.0], [66.0, 9286.0], [65.0, 10394.0], [64.0, 8919.0], [70.0, 10849.0], [69.0, 9336.0], [68.0, 10252.0], [74.0, 9416.0], [73.0, 9436.0], [72.0, 9302.0], [79.0, 9335.0], [77.0, 8533.0], [76.0, 9723.0], [82.0, 9000.0], [87.0, 9188.0], [86.0, 10154.0], [85.0, 9234.0], [84.0, 9725.0], [91.0, 8399.0], [90.0, 10664.0], [89.0, 11369.0], [88.0, 9312.0], [95.0, 10170.0], [94.0, 9030.0], [93.0, 9539.5], [99.0, 7926.0], [98.0, 11096.0], [97.0, 9192.0], [96.0, 8609.0], [103.0, 8785.0], [102.0, 8881.0], [101.0, 9187.0], [100.0, 8332.0], [107.0, 8674.0], [106.0, 9096.0], [105.0, 9209.0], [104.0, 8873.0], [111.0, 10959.0], [110.0, 9530.0], [109.0, 8046.0], [108.0, 8952.0], [115.0, 10684.0], [114.0, 10105.0], [113.0, 7543.0], [112.0, 10972.0], [119.0, 9048.0], [118.0, 8712.0], [117.0, 9404.0], [123.0, 8626.0], [122.0, 8750.0], [121.0, 7713.0], [120.0, 9027.0], [127.0, 10237.0], [126.0, 8802.0], [125.0, 8966.0], [124.0, 9590.0], [133.0, 10095.0], [132.0, 9272.5], [130.0, 8047.0], [129.0, 9577.0], [143.0, 10162.0], [142.0, 7721.0], [141.0, 10642.0], [140.0, 9282.0], [139.0, 7866.0], [138.0, 10562.666666666666], [137.0, 9274.5], [151.0, 9481.0], [150.0, 7770.0], [149.0, 9231.0], [148.0, 8013.0], [147.0, 10252.333333333334], [144.0, 8446.0], [159.0, 8345.0], [158.0, 8462.0], [157.0, 9121.0], [156.0, 10176.0], [155.0, 8224.0], [154.0, 8368.0], [153.0, 9926.0], [152.0, 10721.0], [167.0, 8220.0], [166.0, 8676.0], [165.0, 9228.0], [164.0, 10178.0], [163.0, 9398.0], [162.0, 9204.0], [161.0, 8520.0], [160.0, 9615.0], [175.0, 9125.0], [173.0, 8818.0], [170.0, 9227.5], [168.0, 8103.0], [183.0, 9494.0], [182.0, 9213.0], [181.0, 8899.5], [179.0, 9045.5], [178.0, 8348.0], [176.0, 9376.0], [191.0, 9082.0], [190.0, 9825.5], [188.0, 8114.0], [187.0, 7753.0], [186.0, 9037.0], [185.0, 9600.5], [199.0, 8911.0], [198.0, 9886.0], [197.0, 10096.5], [195.0, 7334.0], [194.0, 8319.0], [193.0, 7172.0], [192.0, 8605.0], [207.0, 7759.0], [206.0, 8076.0], [205.0, 7231.0], [204.0, 9674.5], [202.0, 9556.0], [201.0, 10487.0], [200.0, 8055.0], [214.0, 7551.0], [213.0, 8936.0], [212.0, 8859.0], [211.0, 7605.0], [210.0, 8039.0], [209.0, 8124.0], [208.0, 8896.0], [223.0, 6733.0], [222.0, 8598.0], [221.0, 7222.0], [220.0, 7967.0], [219.0, 9391.0], [218.0, 8798.0], [217.0, 7745.0], [216.0, 9591.5], [231.0, 8981.0], [230.0, 6973.0], [229.0, 7926.0], [228.0, 9338.0], [227.0, 8735.0], [226.0, 7966.0], [225.0, 9088.0], [224.0, 7997.0], [239.0, 7776.0], [238.0, 7551.0], [237.0, 9804.0], [236.0, 8012.0], [235.0, 10910.0], [234.0, 10755.0], [233.0, 9237.0], [232.0, 7939.0], [247.0, 9521.0], [246.0, 7511.0], [245.0, 10033.0], [244.0, 9009.0], [242.0, 9614.0], [241.0, 7502.0], [240.0, 7507.0], [255.0, 7252.0], [253.0, 9141.5], [251.0, 7965.0], [249.0, 7839.0], [248.0, 8704.0], [270.0, 8462.0], [271.0, 8133.0], [269.0, 11016.0], [268.0, 8765.0], [267.0, 9651.0], [266.0, 8712.0], [265.0, 16579.0], [264.0, 9671.0], [263.0, 8160.0], [259.0, 10830.0], [258.0, 8963.5], [262.0, 9148.5], [260.0, 9435.0], [286.0, 9452.0], [287.0, 7194.0], [285.0, 9689.0], [284.0, 8540.0], [283.0, 7561.5], [281.0, 10744.0], [280.0, 10332.0], [279.0, 10260.5], [273.0, 10798.0], [272.0, 8702.0], [275.0, 8338.0], [274.0, 9872.0], [278.0, 9143.0], [276.0, 8310.0], [303.0, 9925.0], [301.0, 8336.0], [299.0, 7262.0], [295.0, 9731.5], [291.0, 8066.0], [290.0, 10497.0], [289.0, 10311.0], [288.0, 10414.0], [318.0, 9839.0], [317.0, 9180.333333333334], [307.0, 8448.666666666666], [305.0, 6512.0], [315.0, 8376.0], [314.0, 9372.666666666666], [312.0, 8083.0], [311.0, 8750.0], [310.0, 9554.0], [309.0, 8575.0], [308.0, 7784.5], [334.0, 11264.0], [335.0, 7229.0], [333.0, 9162.0], [332.0, 8171.0], [331.0, 7952.0], [330.0, 8644.0], [329.0, 10687.0], [328.0, 7410.0], [327.0, 9319.0], [321.0, 9353.0], [320.0, 8415.0], [323.0, 9116.0], [322.0, 9161.0], [326.0, 6444.0], [325.0, 10571.0], [324.0, 9009.0], [350.0, 7165.0], [351.0, 7120.0], [349.0, 8883.0], [348.0, 6613.0], [347.0, 9927.0], [346.0, 6923.0], [345.0, 9242.0], [344.0, 6994.0], [343.0, 10792.0], [337.0, 9143.0], [336.0, 6485.0], [339.0, 8910.0], [338.0, 9351.0], [342.0, 6542.0], [341.0, 7961.0], [340.0, 7559.0], [366.0, 8193.0], [367.0, 8498.0], [365.0, 6509.0], [364.0, 8755.0], [363.0, 9128.0], [362.0, 10079.0], [361.0, 7673.0], [360.0, 7717.0], [358.0, 9670.0], [353.0, 10543.0], [352.0, 7165.0], [355.0, 8928.0], [354.0, 6664.0], [357.0, 7194.0], [356.0, 7235.0], [382.0, 6850.0], [383.0, 8176.0], [381.0, 8645.0], [380.0, 7034.0], [379.0, 7140.0], [378.0, 7821.0], [377.0, 7005.0], [376.0, 9541.0], [375.0, 7738.0], [368.0, 7806.0], [370.0, 8009.0], [369.0, 10013.0], [374.0, 7584.5], [372.0, 9676.0], [398.0, 6389.0], [399.0, 7870.0], [397.0, 8499.0], [396.0, 10816.0], [395.0, 10423.0], [394.0, 8648.0], [393.0, 6362.0], [392.0, 7874.0], [391.0, 6964.0], [385.0, 8538.0], [384.0, 9041.0], [387.0, 7812.0], [386.0, 6445.0], [390.0, 9457.0], [389.0, 7879.0], [388.0, 9781.0], [413.0, 8447.0], [412.0, 9946.0], [403.0, 7510.0], [402.0, 6038.0], [401.0, 8020.0], [400.0, 11289.0], [411.0, 7998.0], [410.0, 9793.0], [409.0, 6845.0], [408.0, 9696.0], [407.0, 11511.0], [406.0, 8945.5], [404.0, 6917.0], [429.0, 9660.0], [430.0, 6134.0], [428.0, 8569.0], [419.0, 11319.0], [418.0, 9412.0], [417.0, 7351.0], [416.0, 7891.0], [427.0, 10521.0], [426.0, 9886.0], [425.0, 9606.0], [424.0, 8307.0], [423.0, 9440.0], [422.0, 6336.0], [421.0, 9049.0], [420.0, 9559.0], [435.0, 8329.0], [447.0, 10422.0], [444.0, 10527.0], [442.0, 8456.25], [439.0, 10069.0], [437.0, 10193.0], [436.0, 8442.0], [434.0, 8361.0], [433.0, 9663.0], [432.0, 7807.0], [461.0, 8094.666666666667], [459.0, 9435.0], [456.0, 10145.0], [453.0, 8968.0], [451.0, 7304.5], [477.0, 6642.0], [479.0, 9028.666666666666], [476.0, 6682.0], [475.0, 8246.0], [474.0, 9048.0], [473.0, 7911.5], [470.0, 8156.0], [469.0, 8503.0], [468.0, 9330.0], [494.0, 9509.0], [495.0, 5777.0], [493.0, 8031.0], [483.0, 8047.0], [480.0, 6156.0], [491.0, 9473.0], [490.0, 9134.0], [489.0, 6449.0], [488.0, 10205.0], [487.0, 8911.0], [486.0, 8383.0], [485.0, 8678.0], [484.0, 9380.0], [509.0, 6621.0], [511.0, 5516.5], [508.0, 8610.0], [499.0, 8508.5], [497.0, 9487.0], [496.0, 9499.0], [507.0, 6479.0], [506.0, 8414.5], [504.0, 5251.0], [503.0, 9069.0], [502.0, 6830.0], [501.0, 6566.0], [500.0, 10561.0], [540.0, 11089.0], [542.0, 5603.0], [538.0, 6373.0], [536.0, 5804.0], [534.0, 4882.0], [532.0, 9223.0], [530.0, 9489.0], [528.0, 10143.0], [526.0, 7472.0], [514.0, 7105.0], [518.0, 6004.0], [516.0, 7443.0], [524.0, 7086.0], [522.0, 4935.0], [572.0, 7355.0], [574.0, 9625.0], [570.0, 7665.0], [568.0, 6257.0], [566.0, 8624.0], [564.0, 6654.0], [562.0, 8751.0], [560.0, 9416.0], [556.0, 5688.0], [546.0, 7831.0], [544.0, 7700.0], [550.0, 7639.0], [548.0, 8636.0], [554.0, 10288.0], [552.0, 8386.0], [604.0, 7509.0], [606.0, 8926.0], [602.0, 5716.0], [600.0, 7683.0], [598.0, 4908.0], [594.0, 9944.0], [592.0, 4969.0], [590.0, 5568.0], [578.0, 9536.0], [576.0, 8853.0], [582.0, 5675.0], [580.0, 7613.0], [588.0, 6409.0], [586.0, 5148.0], [636.0, 6511.0], [638.0, 9441.0], [634.0, 4702.0], [632.0, 9093.0], [630.0, 9791.0], [628.0, 8094.0], [626.0, 5794.0], [624.0, 7507.0], [622.0, 8976.0], [610.0, 6464.0], [608.0, 11336.0], [614.0, 9146.0], [612.0, 6440.0], [620.0, 8710.0], [618.0, 5325.0], [616.0, 5317.0], [646.0, 5338.0], [668.0, 8078.333333333333], [660.0, 7778.5], [656.0, 8306.0], [654.0, 11219.0], [650.0, 7839.5], [648.0, 10332.0], [644.0, 8212.0], [642.0, 6361.0], [640.0, 5315.0], [700.0, 4565.0], [702.0, 8240.0], [698.0, 5249.0], [676.0, 7274.0], [674.0, 5583.0], [672.0, 8800.0], [694.0, 4191.0], [692.0, 8748.0], [690.0, 6300.0], [688.0, 5935.0], [686.0, 6306.0], [684.0, 9552.0], [682.0, 9199.0], [680.0, 9480.0], [732.0, 10119.0], [734.0, 6368.0], [730.0, 11012.0], [728.0, 11091.0], [726.0, 6582.0], [724.0, 9488.0], [722.0, 8299.0], [720.0, 8368.0], [718.0, 7161.0], [706.0, 8205.0], [704.0, 7924.0], [710.0, 9171.0], [708.0, 9765.0], [716.0, 5405.0], [714.0, 9788.0], [712.0, 6252.0], [764.0, 10228.0], [766.0, 9497.0], [762.0, 7156.0], [760.0, 6891.0], [758.0, 8098.0], [756.0, 4730.0], [754.0, 9193.0], [752.0, 7365.0], [750.0, 10297.0], [738.0, 8493.0], [736.0, 4487.0], [742.0, 4881.0], [740.0, 6406.5], [748.0, 11118.0], [746.0, 8605.0], [792.0, 5461.0], [796.0, 8846.0], [798.0, 8770.0], [794.0, 5121.5], [790.0, 4885.0], [788.0, 7910.0], [780.0, 5941.0], [768.0, 9247.0], [774.0, 7306.5], [772.0, 4514.0], [778.0, 4060.0], [776.0, 5865.0], [828.0, 8168.0], [830.0, 7544.5], [826.0, 6855.0], [824.0, 6801.0], [822.0, 8177.0], [820.0, 5841.0], [818.0, 9950.0], [816.0, 4629.0], [814.0, 8139.0], [802.0, 6722.0], [800.0, 4852.0], [806.0, 5588.0], [804.0, 6685.5], [812.0, 9827.0], [810.0, 5837.0], [808.0, 3902.0], [860.0, 5371.0], [862.0, 7656.0], [858.0, 4459.0], [856.0, 8750.0], [854.0, 9823.0], [852.0, 5576.0], [850.0, 5679.0], [848.0, 6398.5], [846.0, 10790.0], [834.0, 5736.0], [832.0, 9398.0], [838.0, 6502.0], [836.0, 8201.0], [844.0, 9532.0], [842.0, 5549.0], [840.0, 3911.0], [890.0, 7573.0], [894.0, 10490.0], [888.0, 9312.0], [870.0, 9233.0], [868.0, 5626.0], [866.0, 3853.0], [864.0, 8159.0], [886.0, 7559.0], [884.0, 9509.0], [880.0, 4933.0], [878.0, 8419.0], [876.0, 6399.0], [874.0, 6407.0], [872.0, 8871.0], [900.0, 4353.0], [924.0, 9136.0], [914.0, 5401.333333333333], [910.0, 8963.0], [908.0, 8247.0], [906.0, 4310.0], [904.0, 6473.0], [902.0, 8586.0], [898.0, 11108.0], [896.0, 10374.0], [956.0, 4350.0], [958.0, 9931.0], [954.0, 5056.0], [952.0, 9747.0], [950.0, 7103.5], [948.0, 6241.5], [946.0, 4063.0], [944.0, 11012.0], [942.0, 10577.0], [930.0, 8138.0], [928.0, 8190.0], [934.0, 5361.0], [932.0, 5287.0], [940.0, 4407.0], [938.0, 5539.0], [936.0, 8206.0], [984.0, 8470.0], [988.0, 10051.0], [990.0, 8237.0], [986.0, 5731.0], [982.0, 8584.0], [976.0, 8556.0], [974.0, 7351.0], [962.0, 6653.0], [960.0, 9645.0], [966.0, 7997.0], [964.0, 9786.0], [972.0, 8304.0], [970.0, 9102.0], [968.0, 6596.5], [1020.0, 4592.0], [1008.0, 8121.0], [1010.0, 6378.0], [1012.0, 10607.0], [1022.0, 5512.0], [1018.0, 5173.0], [1016.0, 4340.0], [1006.0, 10279.0], [994.0, 9639.0], [992.0, 5176.0], [998.0, 9469.0], [996.0, 4503.0], [1004.0, 5351.0], [1002.0, 4126.0], [1000.0, 5367.0], [1014.0, 8869.0], [1080.0, 5788.0], [1084.0, 5982.0], [1056.0, 3153.0], [1060.0, 4394.0], [1024.0, 7317.0], [1028.0, 4269.0], [1032.0, 7028.5], [1036.0, 4106.0], [1052.0, 7154.0], [1048.0, 10288.5], [1044.0, 4123.0], [1040.0, 4701.0], [1068.0, 5668.0], [1064.0, 4576.0], [1144.0, 6444.0], [1120.0, 6614.0], [1124.0, 7908.0], [1128.0, 5760.0], [1148.0, 7210.5], [1140.0, 7890.0], [1136.0, 9170.0], [1088.0, 6248.0], [1096.0, 10447.333333333334], [1100.0, 10143.0], [1116.0, 4747.0], [1112.0, 4570.0], [1108.0, 5583.0], [1132.0, 6702.0], [1208.0, 6529.0], [1184.0, 5026.0], [1188.0, 5217.5], [1192.0, 2714.0], [1212.0, 7258.5], [1204.0, 9418.0], [1200.0, 2631.0], [1152.0, 7022.0], [1156.0, 7915.0], [1160.0, 5722.0], [1164.0, 9572.0], [1180.0, 3043.0], [1176.0, 4871.0], [1172.0, 5838.0], [1168.0, 7497.0], [1196.0, 9943.0], [1272.0, 9390.0], [1248.0, 4173.5], [1252.0, 5230.0], [1256.0, 3084.0], [1276.0, 6906.0], [1268.0, 6380.0], [1264.0, 9321.0], [1216.0, 3260.0], [1220.0, 5709.5], [1224.0, 7826.0], [1228.0, 5470.0], [1244.0, 6421.0], [1236.0, 3057.0], [1232.0, 7525.0], [1260.0, 3002.0], [1328.0, 10152.0], [1312.0, 4549.0], [1316.0, 2662.0], [1336.0, 6585.0], [1280.0, 8525.0], [1284.0, 2861.0], [1288.0, 5041.0], [1308.0, 7765.0], [1304.0, 2433.0], [1300.0, 2858.0], [1296.0, 2501.0], [1324.0, 8436.0], [1320.0, 3056.0], [1392.0, 10056.0], [1404.0, 2967.0], [1376.0, 8672.0], [1380.0, 6131.0], [1400.0, 4207.0], [1344.0, 5955.0], [1348.0, 3294.0], [1352.0, 6979.0], [1356.0, 4772.0], [1360.0, 8120.0], [1388.0, 4114.0], [1384.0, 7835.5], [1460.0, 2622.0], [1468.0, 6158.0], [1440.0, 2892.0], [1444.0, 6246.0], [1448.0, 9788.0], [1464.0, 6832.0], [1420.0, 5668.0], [1416.0, 2917.0], [1412.0, 2134.0], [1408.0, 5948.0], [1436.0, 4251.0], [1432.0, 4007.0], [1428.0, 5110.0], [1424.0, 6650.0], [1528.0, 2669.0], [1504.0, 7995.0], [1512.0, 6613.0], [1508.0, 9546.0], [1524.0, 5572.0], [1520.0, 5047.0], [1484.0, 2014.0], [1480.0, 1642.0], [1476.0, 9447.0], [1500.0, 4448.5], [1496.0, 2492.0], [1492.0, 2967.0], [1592.0, 9443.0], [1568.0, 7974.0], [1572.0, 9290.0], [1576.0, 2712.0], [1588.0, 7636.0], [1584.0, 6660.0], [1548.0, 1697.0], [1544.0, 5147.0], [1540.0, 10115.0], [1564.0, 4829.0], [1560.0, 3842.0], [1556.0, 3345.5], [1552.0, 5910.0], [1580.0, 2296.0], [1612.0, 6570.0], [1656.0, 8981.0], [1640.0, 4857.0], [1632.0, 2714.0], [1608.0, 9836.0], [1604.0, 6615.0], [1628.0, 4578.0], [1624.0, 5840.0], [1644.0, 2116.0], [1636.0, 4001.3333333333335], [1716.0, 3067.5], [1720.0, 3404.5], [1704.0, 6847.666666666667], [1724.0, 1629.0], [1712.0, 3071.0], [1692.0, 1639.0], [1668.0, 6490.0], [1684.0, 9345.0], [1708.0, 5254.0], [1784.0, 3267.0], [1788.0, 1913.0], [1760.0, 2348.5], [1764.0, 7553.0], [1776.0, 7821.0], [1740.0, 1412.0], [1736.0, 2425.0], [1732.0, 1098.0], [1728.0, 5397.5], [1756.0, 5895.0], [1752.0, 1328.0], [1748.0, 3274.5], [1744.0, 7292.0], [1772.0, 6335.0], [1844.0, 3480.0], [1828.0, 1833.0], [1832.0, 1097.0], [1848.0, 1315.0], [1840.0, 1836.0], [1804.0, 2632.0], [1796.0, 1883.0], [1792.0, 1108.0], [1820.0, 1438.5], [1816.0, 1098.0], [1812.0, 1191.0], [1808.0, 6318.5], [1836.0, 1448.0], [1896.0, 1416.0], [1884.0, 4173.0], [1856.0, 8283.0], [1876.0, 10654.0], [1864.0, 1094.0], [1860.0, 1260.0], [1924.0, 7006.0], [1968.0, 8042.0], [1920.0, 3658.5], [1956.0, 4809.0], [1952.0, 3643.0], [1940.0, 2103.0], [1936.0, 1874.0], [2044.0, 1627.5], [2016.0, 1654.0], [2020.0, 1433.0], [2028.0, 1101.0], [2036.0, 1415.0], [2032.0, 3070.5], [1996.0, 6608.0], [1992.0, 1757.0], [2004.0, 1234.0], [2000.0, 3776.0], [2144.0, 1170.5], [2160.0, 1627.6666666666667], [2152.0, 4861.0], [2112.0, 2274.0], [2128.0, 9533.0], [2168.0, 3314.3333333333335], [2064.0, 6328.0], [2056.0, 1383.0], [2104.0, 1102.0], [2088.0, 2709.5], [2080.0, 1755.25], [2136.0, 8475.0], [2296.0, 8101.0], [2240.0, 6411.0], [2248.0, 5721.0], [2256.0, 9133.25], [2264.0, 4759.0], [2288.0, 1263.0], [2280.0, 1364.0], [2272.0, 1155.0], [2176.0, 6793.0], [2184.0, 3521.0], [2192.0, 2027.5], [2232.0, 3056.0], [2224.0, 1386.5], [2208.0, 6704.0], [2424.0, 6328.0], [2368.0, 1096.0], [2376.0, 6014.0], [2384.0, 1920.0], [2392.0, 3142.333333333333], [2416.0, 3727.5], [2400.0, 1094.0], [2312.0, 1329.0], [2320.0, 6620.0], [2328.0, 1298.0], [2360.0, 2512.0], [2352.0, 2973.0], [2336.0, 7872.0], [2536.0, 1099.0], [2512.0, 5419.0], [2552.0, 1093.0], [2544.0, 1161.0], [2528.0, 1360.0], [2456.0, 1915.5], [2440.0, 1106.0], [2488.0, 5373.0], [2480.0, 1150.0], [2472.0, 1543.25], [2672.0, 1093.0], [2624.0, 3113.5], [2632.0, 6299.0], [2640.0, 1987.5], [2648.0, 4985.0], [2680.0, 7794.0], [2664.0, 2828.0], [2656.0, 1189.0], [2560.0, 3801.333333333333], [2568.0, 1211.0], [2584.0, 1233.0], [2608.0, 1424.0], [2600.0, 5873.0], [2592.0, 8080.0], [2792.0, 4211.0], [2752.0, 4977.333333333334], [2768.0, 1099.0], [2808.0, 8170.0], [2784.0, 1597.0], [2712.0, 631.5], [2688.0, 6430.0], [2744.0, 8192.5], [2728.0, 10587.0], [2928.0, 4410.0], [2896.0, 882.3333333333333], [2880.0, 1232.0], [2904.0, 1100.0], [2936.0, 3337.0], [2920.0, 770.25], [2912.0, 4689.0], [2840.0, 4715.5], [2824.0, 3126.5], [2816.0, 8374.0], [2872.0, 7660.0], [2864.0, 2597.3333333333335], [2856.0, 6082.5], [2848.0, 1096.0], [2944.0, 1916.0], [2952.0, 1613.6666666666665], [3000.0, 2448.395416723763], [2960.0, 3029.2], [2968.0, 1970.5], [2992.0, 4531.6], [2984.0, 1240.0], [2976.0, 2606.75], [2153.0, 6278.0], [2113.0, 6158.0], [2121.0, 1171.0], [2129.0, 7029.0], [2137.0, 1103.0], [2161.0, 2173.0], [2073.0, 11064.0], [2065.0, 1949.0], [2049.0, 5665.0], [2097.0, 1428.0], [2281.0, 4760.0], [2249.0, 1383.0], [2265.0, 6588.0], [2289.0, 1427.0], [2273.0, 7985.0], [2201.0, 2734.0], [2225.0, 2846.0], [2217.0, 1115.0], [2209.0, 1376.0], [2409.0, 3690.0], [2417.0, 1160.0], [2425.0, 4651.0], [2369.0, 4635.0], [2377.0, 1102.0], [2393.0, 1096.0], [2401.0, 2394.0], [2321.0, 1539.0], [2313.0, 1120.0], [2305.0, 5742.0], [2361.0, 8870.0], [2353.0, 1463.0], [2337.0, 9088.0], [2545.0, 1331.0], [2553.0, 1164.0], [2497.0, 5518.0], [2505.0, 5540.5], [2521.0, 1100.5], [2529.0, 3666.0], [2433.0, 1366.0], [2441.0, 1103.0], [2449.0, 1094.5], [2457.0, 4250.0], [2481.0, 1292.0], [2473.0, 1495.0], [2465.0, 1168.5], [2681.0, 1098.0], [2633.0, 1223.0], [2641.0, 7443.0], [2649.0, 2718.0], [2673.0, 6273.0], [2561.0, 1167.0], [2569.0, 4298.0], [2577.0, 1237.5], [2585.0, 1223.0], [2617.0, 5189.0], [2609.0, 4362.0], [2601.0, 1099.0], [2593.0, 1667.0], [2809.0, 2308.0], [2801.0, 5841.5], [2753.0, 1091.0], [2761.0, 1099.5], [2769.0, 4872.0], [2777.0, 1344.3333333333333], [2793.0, 10661.0], [2705.0, 4694.0], [2697.0, 4189.333333333333], [2689.0, 8708.0], [2745.0, 1117.0], [2729.0, 3073.0], [2937.0, 1098.0], [2881.0, 1405.0], [2889.0, 4579.5], [2897.0, 4750.0], [2905.0, 2857.0], [2929.0, 7025.0], [2913.0, 5186.0], [2841.0, 2078.0], [2833.0, 3080.8], [2825.0, 1520.5], [2865.0, 8052.5], [2849.0, 1239.0], [2945.0, 6480.0], [2993.0, 6444.666666666667], [2953.0, 4215.25], [2961.0, 2660.0], [2969.0, 3452.5714285714284], [2985.0, 1561.5714285714287], [2977.0, 1615.6], [1081.0, 3209.0], [1057.0, 9479.0], [1061.0, 7065.0], [1065.0, 6716.0], [1085.0, 2914.0], [1077.0, 6388.5], [1073.0, 9115.0], [1025.0, 4068.0], [1033.0, 6648.0], [1029.0, 4633.0], [1053.0, 5225.0], [1049.0, 10161.0], [1045.0, 8108.0], [1041.0, 8935.0], [1069.0, 3693.0], [1145.0, 9395.0], [1149.0, 3087.0], [1121.0, 5488.0], [1125.0, 3096.0], [1129.0, 7912.0], [1141.0, 4398.0], [1137.0, 8670.0], [1101.0, 5912.0], [1093.0, 5748.5], [1089.0, 4218.0], [1117.0, 4397.0], [1113.0, 7898.0], [1109.0, 5147.0], [1105.0, 6791.5], [1133.0, 4240.0], [1209.0, 7770.0], [1213.0, 2805.0], [1185.0, 5705.0], [1189.0, 8991.0], [1193.0, 7846.0], [1205.0, 6887.0], [1201.0, 7929.0], [1165.0, 7519.0], [1161.0, 5011.0], [1157.0, 4878.0], [1181.0, 4482.0], [1177.0, 4348.0], [1173.0, 5400.0], [1169.0, 6796.0], [1197.0, 5874.0], [1273.0, 8370.0], [1277.0, 3191.0], [1257.0, 8356.0], [1249.0, 9150.0], [1253.0, 6285.0], [1229.0, 9378.0], [1225.0, 10246.0], [1221.0, 8917.0], [1217.0, 2915.0], [1241.0, 6734.5], [1237.0, 4973.0], [1233.0, 10657.0], [1261.0, 4481.0], [1337.0, 6292.0], [1317.0, 3221.0], [1321.0, 9253.0], [1341.0, 7827.5], [1333.0, 7650.5], [1329.0, 3418.0], [1281.0, 2603.0], [1285.0, 6426.0], [1289.0, 8076.0], [1293.0, 5404.0], [1309.0, 4255.0], [1305.0, 6318.0], [1301.0, 4271.0], [1325.0, 5081.0], [1393.0, 7909.0], [1401.0, 4990.0], [1377.0, 7301.0], [1385.0, 3327.0], [1405.0, 7059.0], [1397.0, 3968.5], [1345.0, 3095.0], [1349.0, 6270.0], [1353.0, 8188.0], [1357.0, 8516.0], [1373.0, 6245.5], [1389.0, 3644.0], [1461.0, 6972.0], [1469.0, 6408.0], [1441.0, 10185.0], [1445.0, 3605.0], [1449.0, 8195.0], [1465.0, 2585.0], [1421.0, 7996.0], [1417.0, 2079.0], [1413.0, 3947.0], [1409.0, 4114.0], [1437.0, 4730.0], [1433.0, 4646.0], [1429.0, 3013.0], [1425.0, 2109.0], [1453.0, 3114.0], [1521.0, 4969.0], [1533.0, 1906.5], [1505.0, 4136.0], [1529.0, 7635.0], [1473.0, 5379.5], [1477.0, 8167.0], [1485.0, 4317.0], [1501.0, 5658.0], [1497.0, 3996.0], [1493.0, 3347.0], [1489.0, 7615.5], [1517.0, 6415.333333333333], [1513.0, 5952.0], [1593.0, 1504.0], [1577.0, 6632.0], [1597.0, 4040.0], [1569.0, 6697.0], [1545.0, 8390.0], [1541.0, 6670.0], [1565.0, 2226.0], [1561.0, 2962.0], [1557.0, 9477.0], [1553.0, 2606.0], [1581.0, 3268.0], [1653.0, 6800.0], [1661.0, 5885.666666666667], [1633.0, 4477.0], [1641.0, 2706.0], [1649.0, 5814.0], [1613.0, 6699.0], [1609.0, 9318.0], [1605.0, 2527.0], [1601.0, 6256.666666666667], [1629.0, 4487.0], [1625.0, 3542.0], [1621.0, 1699.0], [1617.0, 3370.6666666666665], [1645.0, 1901.0], [1677.0, 3819.5], [1721.0, 1099.0], [1673.0, 5299.0], [1665.0, 1863.5], [1709.0, 1397.0], [1701.0, 4544.333333333333], [1697.0, 6630.0], [1693.0, 8390.0], [1689.0, 3747.333333333333], [1785.0, 2774.0], [1789.0, 1820.0], [1729.0, 3063.0], [1733.0, 4156.0], [1737.0, 1313.0], [1741.0, 1091.0], [1753.0, 1096.0], [1745.0, 1098.0], [1773.0, 7201.0], [1769.0, 4959.5], [1849.0, 4649.0], [1829.0, 1101.0], [1825.0, 1494.0], [1853.0, 8792.0], [1845.0, 3273.0], [1841.0, 5932.0], [1821.0, 4216.0], [1797.0, 1400.0], [1801.0, 4622.5], [1805.0, 3278.0], [1813.0, 5032.0], [1809.0, 9826.0], [1837.0, 4067.0], [1905.0, 3695.5], [1917.0, 1112.0], [1865.0, 2081.0], [1861.0, 2843.0], [1857.0, 1228.0], [1901.0, 8268.0], [1893.0, 8206.5], [1877.0, 3155.0], [1873.0, 3815.0], [1981.0, 1319.0], [1977.0, 6713.666666666667], [1961.0, 1965.5], [1965.0, 2247.6666666666665], [1953.0, 6966.0], [1957.0, 1640.5], [1973.0, 2482.0], [1969.0, 2248.6666666666665], [1949.0, 1326.0], [1921.0, 3307.3846153846152], [1929.0, 2650.5], [1945.0, 1104.5], [1941.0, 1223.0], [2025.0, 1826.0], [2021.0, 11182.0], [2029.0, 1759.0], [1993.0, 1367.0], [1985.0, 1396.6666666666667], [2013.0, 5119.0], [2009.0, 1114.5], [2162.0, 3896.0], [2170.0, 1472.0], [2074.0, 1650.0], [2098.0, 4989.0], [2082.0, 1174.0], [2290.0, 2107.0], [2282.0, 2980.0], [2266.0, 1137.0], [2274.0, 1177.0], [2186.0, 1492.0], [2194.0, 1904.0], [2218.0, 3109.5], [2410.0, 8163.0], [2370.0, 2680.0], [2378.0, 2405.0], [2386.0, 1769.5], [2394.0, 1839.0], [2426.0, 1344.0], [2402.0, 6035.0], [2306.0, 1678.0], [2322.0, 4670.0], [2330.0, 3970.5], [2362.0, 1102.0], [2354.0, 6807.0], [2346.0, 1361.3333333333333], [2554.0, 1340.0], [2546.0, 1122.0], [2498.0, 6637.0], [2506.0, 1097.0], [2514.0, 2266.0], [2522.0, 5814.0], [2538.0, 1258.5], [2530.0, 1094.0], [2458.0, 1169.0], [2450.0, 5775.0], [2442.0, 2055.0], [2434.0, 1095.0], [2490.0, 3553.5], [2474.0, 1343.0], [2466.0, 2675.0], [2666.0, 5377.0], [2634.0, 1096.0], [2682.0, 4062.0], [2626.0, 5644.5], [2650.0, 1099.0], [2674.0, 1747.6666666666667], [2562.0, 1256.0], [2570.0, 1097.0], [2586.0, 2282.0], [2610.0, 1096.0], [2594.0, 1639.0], [2810.0, 6002.0], [2802.0, 6172.5], [2754.0, 1473.0], [2762.0, 1097.0], [2770.0, 1353.0], [2778.0, 1190.0], [2794.0, 9368.0], [2786.0, 6201.5], [2714.0, 1753.5], [2698.0, 1098.0], [2746.0, 4161.0], [2738.0, 2136.0], [2730.0, 1112.0], [2722.0, 1995.3333333333333], [2930.0, 1578.0], [2882.0, 1263.0], [2890.0, 2034.0], [2898.0, 571.5], [2906.0, 1723.6666666666667], [2938.0, 3132.5], [2922.0, 1628.0], [2914.0, 1185.0], [2834.0, 3615.5], [2818.0, 571.0], [2874.0, 1194.25], [2866.0, 1101.0], [2858.0, 1444.0], [2850.0, 2960.0], [2954.0, 4746.0], [2946.0, 6132.0], [2962.0, 1366.5], [2970.0, 1928.0], [2994.0, 574.5], [2986.0, 3752.0], [2978.0, 1509.0], [2171.0, 2742.0], [2155.0, 1292.3333333333333], [2123.0, 1335.6666666666667], [2115.0, 6503.5], [2131.0, 2654.0], [2139.0, 1827.0], [2147.0, 4473.333333333333], [2075.0, 1687.0], [2067.0, 2112.0], [2059.0, 2656.6666666666665], [2051.0, 1114.0], [2107.0, 6455.0], [2099.0, 2705.0], [2091.0, 2519.6666666666665], [2083.0, 1112.0], [2299.0, 1351.3333333333333], [2243.0, 3619.5], [2259.0, 3907.6666666666665], [2267.0, 5178.0], [2291.0, 1105.0], [2283.0, 6650.0], [2275.0, 1536.0], [2203.0, 3706.0], [2187.0, 1129.0], [2179.0, 1910.0], [2227.0, 6551.0], [2219.0, 1484.0], [2211.0, 2247.0], [2419.0, 3844.0], [2411.0, 8055.0], [2371.0, 7503.0], [2395.0, 5703.0], [2427.0, 6762.0], [2403.0, 1200.0], [2331.0, 1097.0], [2323.0, 1098.0], [2315.0, 1534.0], [2307.0, 4444.0], [2363.0, 1724.0], [2355.0, 1274.0], [2347.0, 1137.0], [2339.0, 1278.5], [2555.0, 6294.0], [2499.0, 4244.0], [2507.0, 1464.0], [2515.0, 1531.0], [2523.0, 1259.0], [2531.0, 1400.0], [2435.0, 1177.0], [2459.0, 1214.0], [2491.0, 1694.0], [2483.0, 3861.5], [2475.0, 1328.0], [2467.0, 1108.0], [2667.0, 4545.666666666667], [2627.0, 2331.0], [2635.0, 1371.0], [2643.0, 2558.0], [2675.0, 585.5], [2563.0, 2325.0], [2571.0, 4491.0], [2579.0, 3813.0], [2587.0, 4077.0], [2619.0, 2688.0], [2611.0, 10359.0], [2603.0, 1567.0], [2795.0, 8142.0], [2803.0, 1133.0], [2755.0, 5737.0], [2763.0, 1732.0], [2771.0, 3447.0], [2779.0, 1987.5], [2787.0, 1102.0], [2707.0, 1119.5], [2699.0, 1502.0], [2747.0, 4060.0], [2739.0, 4307.5], [2731.0, 1094.0], [2723.0, 6230.0], [2939.0, 4230.0], [2931.0, 2560.75], [2883.0, 2374.5], [2891.0, 3984.0], [2899.0, 1101.0], [2907.0, 4540.333333333333], [2923.0, 751.0], [2843.0, 7820.0], [2835.0, 1793.6666666666667], [2875.0, 2514.0], [2859.0, 1095.0], [2851.0, 6699.0], [2955.0, 3007.5000000000005], [2947.0, 2434.4285714285716], [2963.0, 1172.0], [2971.0, 4783.0], [2995.0, 1145.0], [2987.0, 1739.0], [2979.0, 4099.0], [541.0, 8413.0], [543.0, 5751.0], [539.0, 6360.0], [537.0, 7576.0], [535.0, 7451.0], [533.0, 5837.0], [531.0, 5788.0], [529.0, 6986.0], [525.0, 7716.0], [519.0, 9058.0], [517.0, 7020.0], [515.0, 11058.0], [513.0, 10037.0], [521.0, 9189.5], [573.0, 7566.0], [575.0, 6690.0], [571.0, 7715.0], [569.0, 9663.0], [565.0, 7445.0], [563.0, 5250.0], [561.0, 10121.0], [559.0, 9272.0], [547.0, 9203.0], [545.0, 5918.0], [551.0, 6184.0], [549.0, 7575.0], [557.0, 7254.0], [555.0, 5659.0], [553.0, 8946.0], [605.0, 9331.0], [607.0, 9770.0], [603.0, 11257.0], [601.0, 7712.0], [599.0, 8163.0], [597.0, 6930.0], [595.0, 10225.0], [593.0, 4557.0], [591.0, 5653.0], [579.0, 8673.0], [577.0, 5567.0], [583.0, 7587.0], [581.0, 6175.0], [589.0, 7842.0], [587.0, 10889.0], [585.0, 7252.0], [637.0, 9247.0], [639.0, 9576.0], [635.0, 8681.0], [633.0, 5403.0], [631.0, 10739.0], [629.0, 9369.0], [627.0, 10689.0], [625.0, 7477.0], [623.0, 10755.0], [609.0, 8711.0], [615.0, 5850.0], [611.0, 9708.0], [621.0, 9899.0], [619.0, 7678.0], [617.0, 7119.0], [647.0, 8442.0], [671.0, 7952.5], [669.0, 10855.5], [665.0, 4896.0], [663.0, 6556.0], [653.0, 8421.5], [651.0, 8286.0], [645.0, 8241.0], [643.0, 9571.0], [641.0, 8133.0], [699.0, 9179.0], [703.0, 9205.0], [697.0, 6680.0], [679.0, 6226.0], [677.0, 5989.0], [675.0, 8330.0], [673.0, 10410.0], [695.0, 5645.0], [693.0, 5644.0], [691.0, 7003.0], [689.0, 7537.0], [687.0, 8276.0], [685.0, 5608.0], [683.0, 9635.0], [681.0, 5209.0], [731.0, 6223.0], [735.0, 4944.0], [729.0, 4755.0], [711.0, 4672.0], [709.0, 9778.0], [707.0, 4512.0], [705.0, 6227.0], [727.0, 9678.0], [725.0, 5389.0], [723.0, 6232.0], [721.0, 9864.0], [719.0, 6126.0], [715.0, 5266.0], [765.0, 8142.0], [767.0, 4029.0], [763.0, 7086.0], [761.0, 7022.0], [759.0, 5069.0], [757.0, 9605.0], [755.0, 5214.0], [753.0, 6206.0], [751.0, 10962.0], [743.0, 4274.0], [737.0, 10893.0], [749.0, 6629.0], [747.0, 7486.0], [745.0, 5345.5], [797.0, 4740.0], [799.0, 8741.0], [795.0, 6020.0], [775.0, 8275.0], [771.0, 5608.5], [769.0, 5053.0], [791.0, 8363.0], [789.0, 3838.0], [787.0, 7758.0], [785.0, 10576.5], [783.0, 6850.5], [781.0, 6413.0], [779.0, 8299.0], [777.0, 5636.0], [831.0, 8484.0], [825.0, 4519.0], [807.0, 7853.0], [805.0, 4508.0], [801.0, 8895.0], [823.0, 4737.0], [821.0, 4808.0], [819.0, 8892.0], [817.0, 4442.0], [815.0, 7075.0], [813.0, 10278.0], [811.0, 5583.0], [809.0, 8734.0], [861.0, 9814.0], [863.0, 7303.0], [859.0, 5799.0], [857.0, 3688.0], [855.0, 4292.0], [853.0, 4648.0], [851.0, 5613.0], [849.0, 6391.0], [845.0, 4751.0], [835.0, 8611.0], [833.0, 6881.0], [839.0, 8560.0], [837.0, 10375.0], [843.0, 7336.0], [841.0, 5065.0], [893.0, 8197.5], [895.0, 7778.0], [891.0, 6806.0], [871.0, 10589.0], [869.0, 10451.0], [867.0, 9000.0], [865.0, 7367.0], [887.0, 10733.0], [885.0, 4952.0], [883.0, 6162.5], [881.0, 8507.0], [879.0, 4220.0], [877.0, 9472.0], [875.0, 5405.0], [873.0, 8497.0], [901.0, 5383.0], [925.0, 10108.666666666666], [927.0, 5812.0], [921.0, 6698.5], [899.0, 4188.0], [897.0, 4025.0], [919.0, 7864.0], [917.0, 8667.5], [911.0, 9622.0], [909.0, 4149.0], [907.0, 4145.0], [905.0, 6411.0], [935.0, 8339.0], [957.0, 5322.0], [959.0, 9015.0], [953.0, 6413.0], [933.0, 4467.0], [931.0, 8874.0], [929.0, 10490.0], [951.0, 9877.0], [945.0, 6595.0], [943.0, 6282.0], [941.0, 4408.0], [939.0, 8509.0], [937.0, 4955.0], [989.0, 8151.0], [991.0, 4344.0], [987.0, 5418.0], [985.0, 8182.0], [983.0, 8972.0], [981.0, 4710.5], [979.0, 4795.0], [977.0, 6192.0], [975.0, 6115.0], [961.0, 3468.0], [965.0, 4391.0], [963.0, 11262.0], [973.0, 5586.0], [971.0, 3769.0], [969.0, 6674.0], [1021.0, 11406.0], [1009.0, 8211.0], [1023.0, 3365.0], [1011.0, 5295.0], [1013.0, 6371.0], [1019.0, 3073.0], [1017.0, 4914.0], [1007.0, 3568.0], [995.0, 9173.0], [993.0, 9079.0], [999.0, 5301.0], [997.0, 4505.0], [1005.0, 6707.0], [1001.0, 8484.0], [1015.0, 9374.0], [1078.0, 4250.0], [1074.0, 4669.0], [1086.0, 5879.0], [1058.0, 8350.0], [1082.0, 3346.0], [1054.0, 4427.0], [1026.0, 10192.0], [1030.0, 11128.0], [1034.0, 7044.0], [1038.0, 4858.0], [1050.0, 8972.0], [1046.0, 7013.0], [1042.0, 5321.0], [1066.0, 3210.0], [1062.0, 6442.0], [1146.0, 7376.0], [1150.0, 8182.0], [1122.0, 8544.0], [1126.0, 5605.0], [1130.0, 5622.0], [1142.0, 6562.0], [1138.0, 5122.0], [1118.0, 9671.0], [1090.0, 9314.0], [1102.0, 8122.0], [1114.0, 9663.0], [1110.0, 6575.0], [1106.0, 3454.0], [1134.0, 7274.0], [1210.0, 4326.0], [1214.0, 4860.0], [1186.0, 5428.0], [1190.0, 2996.0], [1194.0, 7483.0], [1206.0, 2586.0], [1202.0, 8424.0], [1182.0, 2786.0], [1158.0, 6578.0], [1162.0, 2483.0], [1166.0, 10206.0], [1174.0, 3287.0], [1170.0, 4624.0], [1198.0, 4893.0], [1274.0, 10694.0], [1278.0, 2718.0], [1250.0, 8049.0], [1254.0, 6434.0], [1270.0, 3204.5], [1266.0, 6379.5], [1246.0, 2778.0], [1218.0, 5364.0], [1222.0, 3024.0], [1226.0, 7285.0], [1242.0, 4315.0], [1238.0, 3230.0], [1234.0, 9827.0], [1258.0, 5264.0], [1334.0, 3102.0], [1338.0, 7130.0], [1342.0, 2925.0], [1314.0, 7657.0], [1318.0, 6393.0], [1330.0, 7584.0], [1310.0, 10328.0], [1282.0, 8366.0], [1286.0, 5495.0], [1294.0, 4271.0], [1290.0, 8173.0], [1306.0, 2623.0], [1302.0, 10748.0], [1326.0, 5049.0], [1322.0, 5004.0], [1394.0, 3060.0], [1406.0, 5016.0], [1378.0, 4955.0], [1402.0, 10532.0], [1374.0, 5442.0], [1346.0, 4042.0], [1350.0, 5395.0], [1354.0, 4212.0], [1358.0, 5479.0], [1370.0, 3079.0], [1366.0, 3226.3333333333335], [1386.0, 7942.0], [1382.0, 4854.0], [1466.0, 4932.0], [1470.0, 2653.0], [1442.0, 7751.0], [1446.0, 6929.0], [1462.0, 4241.0], [1458.0, 5013.666666666667], [1422.0, 2984.0], [1418.0, 2666.0], [1414.0, 11029.0], [1410.0, 10521.0], [1438.0, 6879.0], [1434.0, 9985.0], [1430.0, 3706.0], [1426.0, 4130.0], [1454.0, 8508.0], [1450.0, 2067.0], [1522.0, 3576.0], [1530.0, 3796.0], [1534.0, 1964.0], [1506.0, 7178.0], [1526.0, 5691.5], [1486.0, 2697.0], [1482.0, 5849.0], [1478.0, 2833.0], [1502.0, 2653.0], [1498.0, 7755.0], [1494.0, 3104.0], [1490.0, 4043.0], [1518.0, 3239.0], [1514.0, 10077.0], [1594.0, 6615.0], [1586.0, 7773.0], [1598.0, 1595.0], [1570.0, 4290.0], [1574.0, 5383.0], [1578.0, 7202.0], [1590.0, 5799.0], [1550.0, 7811.0], [1546.0, 5407.0], [1542.0, 5563.0], [1538.0, 6391.25], [1566.0, 4511.0], [1562.0, 2461.0], [1558.0, 1569.0], [1554.0, 4854.0], [1582.0, 2815.0], [1610.0, 2358.0], [1662.0, 1794.0], [1654.0, 9460.0], [1614.0, 4601.0], [1606.0, 3083.0], [1602.0, 4717.0], [1630.0, 1619.0], [1626.0, 2236.0], [1622.0, 2125.0], [1646.0, 6989.0], [1642.0, 1445.0], [1638.0, 6692.5], [1722.0, 8382.0], [1726.0, 1730.0], [1698.0, 8412.0], [1706.0, 7543.5], [1718.0, 4187.0], [1714.0, 5362.0], [1666.0, 7847.0], [1678.0, 3743.5], [1670.0, 4795.5], [1690.0, 7851.0], [1686.0, 3489.6666666666665], [1682.0, 3364.6666666666665], [1710.0, 10995.0], [1782.0, 2569.3333333333335], [1778.0, 5522.5], [1790.0, 10038.0], [1762.0, 2705.0], [1770.0, 1106.0], [1786.0, 6338.0], [1742.0, 2005.0], [1738.0, 4665.0], [1734.0, 2256.0], [1730.0, 1103.0], [1758.0, 2701.5], [1754.0, 7743.0], [1750.0, 4242.0], [1746.0, 9176.0], [1774.0, 1390.0], [1850.0, 3496.0], [1842.0, 1095.0], [1854.0, 1303.0], [1826.0, 11155.0], [1830.0, 2474.0], [1834.0, 3058.0], [1846.0, 6409.0], [1806.0, 1509.0], [1802.0, 1438.0], [1798.0, 2267.0], [1794.0, 6133.5], [1822.0, 1099.0], [1818.0, 4757.0], [1810.0, 1181.0], [1838.0, 2336.0], [1866.0, 5140.0], [1890.0, 3228.0], [1858.0, 1966.0], [1882.0, 6687.0], [1878.0, 1093.0], [1870.0, 3585.6666666666665], [1926.0, 2477.0], [1950.0, 9500.0], [1978.0, 1377.0], [1982.0, 6626.0], [1934.0, 4609.666666666667], [1922.0, 1106.0], [1946.0, 1560.0], [1938.0, 3857.5], [2018.0, 5012.0], [2042.0, 3422.0], [2026.0, 1119.0], [2030.0, 1120.0], [2046.0, 1100.0], [2034.0, 2927.5], [1998.0, 1159.5], [1994.0, 6335.0], [2132.0, 1112.0], [2052.0, 4885.0], [2100.0, 1201.0], [2092.0, 1259.0], [2084.0, 6549.5], [2300.0, 3470.0], [2268.0, 1387.0], [2284.0, 1585.0], [2276.0, 5757.0], [2196.0, 4939.333333333333], [2236.0, 2440.5], [2412.0, 1645.0], [2420.0, 9582.0], [2380.0, 1302.5], [2372.0, 5984.0], [2388.0, 5568.0], [2396.0, 6482.0], [2404.0, 1104.0], [2308.0, 1092.0], [2316.0, 1667.0], [2324.0, 1486.0], [2332.0, 1805.0], [2364.0, 4828.0], [2348.0, 3831.0], [2548.0, 4381.5], [2556.0, 1142.0], [2508.0, 1100.0], [2516.0, 2325.0], [2540.0, 6398.5], [2460.0, 1098.0], [2452.0, 1201.5], [2444.0, 1091.0], [2436.0, 9591.0], [2492.0, 1097.0], [2468.0, 9707.0], [2676.0, 1105.0], [2628.0, 4979.0], [2636.0, 1190.5], [2644.0, 1988.0], [2668.0, 9133.0], [2660.0, 1136.75], [2564.0, 4044.0], [2572.0, 1096.0], [2580.0, 1398.0], [2620.0, 9912.0], [2612.0, 1661.0], [2596.0, 3038.0], [2796.0, 2206.333333333333], [2812.0, 3042.0], [2756.0, 1643.0], [2772.0, 2776.0], [2780.0, 3132.0], [2788.0, 1811.0], [2716.0, 1848.5], [2692.0, 2892.333333333333], [2740.0, 1110.0], [2940.0, 1620.3888888888887], [2884.0, 1829.0], [2892.0, 1482.0], [2900.0, 8122.0], [2908.0, 1677.5], [2924.0, 5822.0], [2916.0, 3535.5], [2836.0, 6166.0], [2828.0, 4816.0], [2876.0, 1133.0], [2868.0, 1345.0], [2852.0, 4356.0], [2948.0, 1586.0], [2956.0, 1045.5], [2972.0, 1680.8], [2996.0, 2852.6190476190477], [2988.0, 3072.4], [2149.0, 1950.0], [2157.0, 1741.0], [2141.0, 3266.0], [2165.0, 2516.333333333333], [2061.0, 5438.0], [2053.0, 2293.5], [2101.0, 3695.0], [2093.0, 1675.0], [2085.0, 8209.0], [2293.0, 1295.5], [2301.0, 1097.0], [2261.0, 2343.0], [2269.0, 1173.0], [2189.0, 1713.5], [2181.0, 3016.0], [2229.0, 1494.0], [2221.0, 2452.0], [2213.0, 3095.0], [2429.0, 1345.5], [2373.0, 1092.0], [2381.0, 1101.0], [2397.0, 1276.0], [2421.0, 4959.0], [2413.0, 1519.0], [2405.0, 1225.0], [2333.0, 8047.0], [2325.0, 5487.0], [2317.0, 9995.0], [2309.0, 1571.0], [2365.0, 7631.0], [2357.0, 1304.0], [2349.0, 3465.0], [2341.0, 7643.5], [2549.0, 1097.0], [2557.0, 1100.0], [2501.0, 2218.5], [2509.0, 1098.0], [2517.0, 6396.0], [2525.0, 1133.5], [2541.0, 2163.0], [2533.0, 5239.0], [2437.0, 3297.0], [2445.0, 4223.5], [2453.0, 1368.0], [2461.0, 2152.0], [2493.0, 1102.0], [2485.0, 1095.5], [2477.0, 1640.0], [2677.0, 9209.0], [2629.0, 1291.0], [2637.0, 1584.0], [2645.0, 1633.0], [2653.0, 1801.3333333333333], [2685.0, 2464.6666666666665], [2669.0, 1918.0], [2661.0, 4249.0], [2565.0, 1093.0], [2573.0, 2257.0], [2581.0, 1250.0], [2621.0, 1485.0], [2613.0, 1171.0], [2605.0, 4706.0], [2597.0, 8844.0], [2813.0, 5751.0], [2757.0, 1943.0], [2765.0, 568.0], [2773.0, 3963.0], [2781.0, 1302.0], [2805.0, 1191.0], [2797.0, 5288.0], [2789.0, 1158.5], [2717.0, 2304.0], [2709.0, 2388.0], [2701.0, 622.5], [2693.0, 1120.0], [2749.0, 4365.75], [2741.0, 6027.0], [2733.0, 2769.0], [2725.0, 5042.0], [2933.0, 3950.25], [2941.0, 2633.0], [2885.0, 6176.0], [2893.0, 1175.5], [2901.0, 3204.0], [2909.0, 1669.0], [2917.0, 3361.75], [2845.0, 1846.0], [2829.0, 10389.0], [2821.0, 1101.0], [2877.0, 1248.3333333333333], [2869.0, 1852.0], [2861.0, 1533.5], [2949.0, 477.0], [2997.0, 1626.5000000000002], [2957.0, 3242.3333333333335], [2965.0, 3744.4], [2973.0, 2429.461538461538], [2989.0, 2633.8333333333335], [2981.0, 3790.0], [1083.0, 8078.0], [1087.0, 8425.0], [1059.0, 3560.0], [1063.0, 6463.0], [1079.0, 5098.0], [1075.0, 5928.0], [1055.0, 4754.0], [1027.0, 5959.0], [1039.0, 4275.0], [1035.0, 4418.0], [1043.0, 10503.0], [1071.0, 6764.5], [1139.0, 4378.0], [1151.0, 9266.0], [1123.0, 4904.0], [1127.0, 9242.0], [1143.0, 4925.0], [1103.0, 4433.0], [1099.0, 10332.333333333334], [1091.0, 6662.0], [1119.0, 4527.0], [1115.0, 9354.0], [1111.0, 8260.0], [1107.0, 5238.0], [1135.0, 3178.0], [1203.0, 9851.0], [1215.0, 7542.0], [1191.0, 8297.0], [1195.0, 3247.0], [1207.0, 3323.0], [1167.0, 9310.0], [1163.0, 4554.0], [1159.0, 7858.0], [1155.0, 7907.0], [1183.0, 4343.0], [1179.0, 6243.5], [1175.0, 3287.0], [1171.0, 2594.0], [1199.0, 9735.0], [1271.0, 7638.0], [1279.0, 6355.0], [1251.0, 3939.0], [1255.0, 2250.0], [1267.0, 8394.0], [1231.0, 7057.0], [1227.0, 6965.0], [1223.0, 8125.0], [1243.0, 7797.0], [1239.0, 5575.0], [1235.0, 10848.0], [1263.0, 2754.0], [1259.0, 8443.0], [1339.0, 9976.0], [1343.0, 6990.0], [1315.0, 9706.0], [1319.0, 7715.0], [1323.0, 4058.0], [1335.0, 6214.0], [1331.0, 5967.0], [1311.0, 2872.0], [1283.0, 2403.0], [1287.0, 7663.0], [1291.0, 9923.0], [1295.0, 4287.0], [1307.0, 6177.0], [1303.0, 4209.0], [1299.0, 5937.0], [1327.0, 9927.0], [1399.0, 7392.5], [1407.0, 3683.0], [1387.0, 7557.0], [1403.0, 3304.0], [1395.0, 2463.0], [1375.0, 4991.0], [1347.0, 2792.0], [1355.0, 7639.0], [1359.0, 3012.0], [1371.0, 4434.0], [1367.0, 8322.0], [1363.0, 7380.666666666667], [1391.0, 6235.0], [1467.0, 5372.0], [1471.0, 3004.0], [1443.0, 2295.0], [1447.0, 3730.0], [1451.0, 2988.0], [1463.0, 3934.0], [1459.0, 3149.0], [1423.0, 3618.0], [1419.0, 6577.0], [1415.0, 4535.0], [1411.0, 5066.0], [1439.0, 2929.0], [1435.0, 5684.0], [1431.0, 3912.0], [1427.0, 2440.0], [1455.0, 2726.0], [1483.0, 2931.0], [1531.0, 8343.0], [1527.0, 4811.0], [1523.0, 7977.0], [1503.0, 7207.0], [1475.0, 3131.5], [1479.0, 3980.0], [1487.0, 4988.0], [1495.0, 2849.0], [1491.0, 5026.0], [1519.0, 8323.0], [1511.0, 10130.333333333334], [1591.0, 8098.0], [1595.0, 5754.0], [1575.0, 1829.0], [1571.0, 2770.0], [1587.0, 1816.0], [1551.0, 9271.0], [1547.0, 2283.0], [1543.0, 5094.0], [1539.0, 2942.0], [1567.0, 7907.0], [1563.0, 8861.0], [1559.0, 6631.0], [1583.0, 7810.0], [1579.0, 1616.0], [1655.0, 8294.0], [1651.0, 4158.5], [1663.0, 1529.0], [1639.0, 6906.0], [1643.0, 3017.0], [1659.0, 3911.5], [1611.0, 1471.0], [1607.0, 1869.0], [1603.0, 4486.0], [1631.0, 5122.0], [1627.0, 2793.0], [1619.0, 3502.0], [1647.0, 8229.0], [1679.0, 4591.0], [1719.0, 2417.0], [1671.0, 2328.0], [1667.0, 1564.0], [1711.0, 1099.0], [1695.0, 1102.5], [1691.0, 1578.0], [1783.0, 1305.0], [1779.0, 2981.0], [1791.0, 2891.0], [1767.0, 6094.0], [1763.0, 3181.0], [1787.0, 1098.0], [1755.0, 1864.0], [1731.0, 7087.0], [1735.0, 2307.0], [1739.0, 2647.0], [1743.0, 6572.0], [1751.0, 1094.0], [1775.0, 9316.0], [1771.0, 3176.0], [1851.0, 3700.0], [1855.0, 6706.0], [1835.0, 7545.0], [1831.0, 10971.0], [1847.0, 8045.0], [1843.0, 4780.0], [1795.0, 9166.0], [1799.0, 5442.0], [1803.0, 6440.0], [1815.0, 1661.0], [1811.0, 8339.0], [1839.0, 1888.0], [1867.0, 1450.0], [1895.0, 7778.0], [1863.0, 1305.5], [1859.0, 8605.0], [1903.0, 3309.6666666666665], [1899.0, 4843.0], [1891.0, 1101.0], [1887.0, 2267.3333333333335], [1883.0, 2076.0], [1879.0, 10953.0], [1875.0, 2617.5], [1975.0, 1340.0], [1959.0, 1408.5], [1963.0, 1696.0], [1955.0, 1095.0], [1971.0, 2345.5], [1927.0, 3208.0], [1931.0, 1275.5], [1947.0, 8258.0], [1943.0, 5233.5], [1939.0, 1290.0], [2039.0, 3071.0], [2019.0, 4294.333333333333], [2047.0, 6661.0], [2023.0, 1605.5], [2027.0, 5160.0], [2035.0, 3321.0], [1991.0, 2246.5], [2007.0, 4944.333333333333], [2003.0, 3836.6666666666665], [2078.0, 3343.0], [2174.0, 3860.3333333333335], [2126.0, 2528.0], [2118.0, 5136.666666666667], [2070.0, 3093.3333333333335], [2062.0, 3049.0], [2110.0, 4213.666666666666], [2086.0, 6325.0], [2134.0, 1111.5], [2286.0, 1377.0], [2294.0, 1765.0], [2302.0, 1679.0], [2246.0, 1112.0], [2262.0, 1456.0], [2270.0, 7312.0], [2278.0, 3334.5], [2238.0, 7285.0], [2182.0, 7744.5], [2190.0, 1608.0], [2206.0, 1570.6666666666667], [2230.0, 1814.0], [2222.0, 1974.0], [2214.0, 4672.0], [2406.0, 1096.0], [2414.0, 1282.0], [2430.0, 1702.0], [2374.0, 1469.0], [2398.0, 1380.0], [2366.0, 7860.0], [2310.0, 1652.0], [2318.0, 1695.0], [2326.0, 8760.0], [2350.0, 1588.0], [2342.0, 4478.0], [2542.0, 1215.0], [2550.0, 1099.0], [2502.0, 2131.0], [2518.0, 2948.0], [2526.0, 9787.0], [2462.0, 1433.0], [2454.0, 1101.0], [2446.0, 6967.0], [2438.0, 9421.0], [2494.0, 6329.0], [2478.0, 1100.0], [2670.0, 1104.0], [2662.0, 1107.0], [2678.0, 1095.0], [2630.0, 1238.0], [2646.0, 2202.0], [2654.0, 1371.0], [2686.0, 6419.0], [2622.0, 5277.0], [2566.0, 1309.0], [2574.0, 6678.0], [2582.0, 5812.0], [2590.0, 7697.0], [2614.0, 3875.0], [2606.0, 5224.0], [2814.0, 1204.3333333333333], [2766.0, 5705.0], [2758.0, 745.6666666666666], [2774.0, 1108.5], [2782.0, 1228.0], [2806.0, 3321.0], [2790.0, 1539.6666666666667], [2718.0, 1600.0], [2710.0, 1586.0], [2702.0, 1099.0], [2750.0, 7442.0], [2742.0, 1097.0], [2734.0, 2007.0], [2942.0, 3135.625], [2934.0, 4311.0], [2886.0, 1142.0], [2894.0, 7759.0], [2902.0, 4242.0], [2910.0, 1984.0], [2926.0, 2696.5], [2918.0, 6186.5], [2846.0, 3425.25], [2838.0, 1268.5], [2822.0, 4541.333333333333], [2878.0, 10231.0], [2870.0, 1100.5], [2862.0, 2678.0], [2854.0, 8797.0], [2958.0, 1880.8333333333335], [2950.0, 2027.0000000000002], [2966.0, 1331.0], [2974.0, 1630.0], [2998.0, 2277.125], [2990.0, 1689.0], [2982.0, 2017.142857142857], [2151.0, 1118.0], [2119.0, 3843.0], [2127.0, 1387.0], [2143.0, 9366.0], [2071.0, 1607.0], [2055.0, 1109.0], [2103.0, 3916.0], [2095.0, 3317.0], [2279.0, 1602.0], [2287.0, 2088.0], [2295.0, 8057.0], [2303.0, 1370.0], [2263.0, 1443.0], [2271.0, 5784.0], [2199.0, 1704.6666666666667], [2183.0, 3967.0], [2239.0, 1138.0], [2215.0, 1480.0], [2407.0, 5830.0], [2431.0, 1374.0], [2375.0, 1102.0], [2391.0, 8330.0], [2399.0, 8999.0], [2423.0, 5032.5], [2335.0, 2222.5], [2327.0, 1336.0], [2319.0, 2919.0], [2311.0, 9932.0], [2367.0, 4815.0], [2359.0, 2315.0], [2351.0, 1132.0], [2343.0, 1162.0], [2543.0, 8944.0], [2551.0, 1255.0], [2511.0, 1103.0], [2503.0, 2738.0], [2519.0, 1345.0], [2527.0, 1121.0], [2535.0, 1400.5], [2495.0, 1181.0], [2439.0, 1483.0], [2447.0, 1123.0], [2463.0, 4275.0], [2487.0, 3731.5], [2479.0, 2299.0], [2679.0, 7384.0], [2687.0, 6199.0], [2631.0, 1104.0], [2639.0, 1983.5], [2671.0, 2103.0], [2663.0, 1096.0], [2567.0, 1297.0], [2575.0, 1291.0], [2591.0, 3903.3333333333335], [2615.0, 6470.0], [2607.0, 5174.0], [2799.0, 2528.0], [2807.0, 1869.5], [2815.0, 1569.0], [2759.0, 6103.0], [2767.0, 1127.0], [2783.0, 3268.0], [2791.0, 3708.666666666667], [2719.0, 5776.5], [2703.0, 42.0], [2695.0, 2745.5], [2743.0, 2129.0], [2735.0, 1149.0], [2727.0, 2226.5], [2927.0, 4744.0], [2935.0, 5078.0], [2887.0, 5110.0], [2895.0, 5880.0], [2903.0, 892.0], [2911.0, 1197.6666666666667], [2919.0, 1561.0], [2847.0, 1099.0], [2831.0, 1534.5], [2823.0, 3791.5], [2879.0, 1231.0], [2871.0, 2858.0], [2855.0, 1487.0], [2959.0, 4383.5], [2951.0, 1736.8333333333333], [2967.0, 1723.5], [2975.0, 5831.4], [2999.0, 2129.0], [2991.0, 3096.0000000000005], [2983.0, 3174.0], [1.0, 10808.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2987.449710113993, 2473.7471545143176]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 259554.0, "minX": 1.684164E12, "maxY": 708266.9333333333, "series": [{"data": [[1.68416424E12, 708266.9333333333], [1.68416412E12, 702490.2666666667], [1.6841643E12, 361870.23333333334], [1.684164E12, 342156.31666666665], [1.68416418E12, 706297.0833333334], [1.68416406E12, 694908.9166666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68416424E12, 670568.8], [1.68416412E12, 661989.4], [1.6841643E12, 339709.85], [1.684164E12, 259554.0], [1.68416418E12, 669672.85], [1.68416406E12, 651563.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6841643E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2434.72665148059, "minX": 1.684164E12, "maxY": 2654.859045741546, "series": [{"data": [[1.68416424E12, 2435.5582622543616], [1.68416412E12, 2443.3933121890236], [1.6841643E12, 2654.859045741546], [1.684164E12, 2594.2233227371617], [1.68416418E12, 2439.4276524724137], [1.68416406E12, 2434.72665148059]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6841643E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2129.2404216161785, "minX": 1.684164E12, "maxY": 2654.669153102296, "series": [{"data": [[1.68416424E12, 2435.3575901533363], [1.68416412E12, 2443.1689451522825], [1.6841643E12, 2654.669153102296], [1.684164E12, 2129.2404216161785], [1.68416418E12, 2439.2255767125566], [1.68416406E12, 2434.4090227234806]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6841643E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.40368170072195314, "minX": 1.684164E12, "maxY": 868.7364898778629, "series": [{"data": [[1.68416424E12, 2.8816805225652833], [1.68416412E12, 2.5749849619948497], [1.6841643E12, 0.40368170072195314], [1.684164E12, 868.7364898778629], [1.68416418E12, 3.0253929213346327], [1.68416406E12, 7.5996583143507035]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6841643E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 51.0, "minX": 1.684164E12, "maxY": 18714.0, "series": [{"data": [[1.68416424E12, 18714.0], [1.68416412E12, 15044.0], [1.6841643E12, 16579.0], [1.684164E12, 14720.0], [1.68416418E12, 15982.0], [1.68416406E12, 17764.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68416424E12, 7750.9000000000015], [1.68416412E12, 7538.500000000007], [1.6841643E12, 8453.0], [1.684164E12, 5123.0], [1.68416418E12, 7794.9000000000015], [1.68416406E12, 7523.700000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68416424E12, 10586.990000000002], [1.68416412E12, 10933.950000000008], [1.6841643E12, 10908.840000000026], [1.684164E12, 12840.970000000005], [1.68416418E12, 10688.990000000002], [1.68416406E12, 10891.980000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68416424E12, 9262.900000000001], [1.68416412E12, 9571.95], [1.6841643E12, 9645.0], [1.684164E12, 6338.850000000002], [1.68416418E12, 9366.900000000001], [1.68416406E12, 9073.900000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68416424E12, 51.0], [1.68416412E12, 51.0], [1.6841643E12, 52.0], [1.684164E12, 51.0], [1.68416418E12, 51.0], [1.68416406E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68416424E12, 1824.0], [1.68416412E12, 1591.0], [1.6841643E12, 2012.5], [1.684164E12, 2087.0], [1.68416418E12, 1751.5], [1.68416406E12, 1750.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6841643E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 4.0, "maxY": 12795.0, "series": [{"data": [[4.0, 10949.5], [24.0, 10661.5], [68.0, 9313.0], [106.0, 3457.0], [148.0, 8704.0], [179.0, 8454.0], [202.0, 3582.5], [226.0, 7626.0], [284.0, 4488.0], [280.0, 6707.0], [365.0, 5774.0], [573.0, 3545.5], [695.0, 3637.0], [729.0, 1122.0], [828.0, 1224.0], [844.0, 3625.0], [895.0, 1186.5], [886.0, 2796.5], [881.0, 1676.5], [924.0, 1168.0], [908.0, 2852.0], [913.0, 1887.0], [1080.0, 1148.0], [1057.0, 3501.0], [1070.0, 1756.0], [1063.0, 1934.5], [1137.0, 2599.0], [1105.0, 3056.0], [1130.0, 4207.5], [1125.0, 1880.0], [1104.0, 2726.0], [1149.0, 1821.0], [1108.0, 1789.0], [1100.0, 1828.0], [1135.0, 1686.0], [1138.0, 1811.0], [1148.0, 1911.0], [1134.0, 1848.5], [1165.0, 1855.0], [1214.0, 2053.5], [1184.0, 2695.0], [1215.0, 1691.5], [1213.0, 1818.0], [1206.0, 1741.0], [1205.0, 1723.0], [1202.0, 1825.0], [1201.0, 1708.0], [1166.0, 1807.0], [1211.0, 1769.0], [1210.0, 1644.5], [1209.0, 1819.5], [1208.0, 1755.0], [1207.0, 1731.0], [1212.0, 1646.5], [1177.0, 2025.5], [1178.0, 1788.0], [1181.0, 1686.0], [1182.0, 1788.0], [1180.0, 1832.5], [1183.0, 1762.0], [1170.0, 2004.0], [1168.0, 1849.0], [1173.0, 1690.0], [1174.0, 1752.0], [1176.0, 1656.0], [1162.0, 1942.5], [1164.0, 1750.0], [1157.0, 1842.0], [1156.0, 1817.0], [1154.0, 1679.0], [1158.0, 1773.0], [1194.0, 1752.5], [1195.0, 1697.0], [1196.0, 1791.0], [1197.0, 1673.0], [1198.0, 1730.0], [1199.0, 1830.5], [1189.0, 1692.5], [1192.0, 1593.0], [1193.0, 1811.5], [1190.0, 1782.0], [1188.0, 1702.5], [1185.0, 1698.5], [1227.0, 1873.0], [1268.0, 1458.0], [1267.0, 1550.0], [1266.0, 1784.0], [1265.0, 1725.0], [1263.0, 2471.5], [1271.0, 1742.5], [1269.0, 1672.0], [1270.0, 1769.0], [1277.0, 1675.0], [1276.0, 1713.0], [1272.0, 1758.5], [1275.0, 1948.0], [1279.0, 1926.0], [1250.0, 1716.5], [1255.0, 1680.0], [1252.0, 1627.0], [1254.0, 1819.0], [1248.0, 1752.0], [1249.0, 1800.0], [1256.0, 2171.0], [1262.0, 2329.0], [1259.0, 1649.0], [1261.0, 1689.5], [1260.0, 1713.0], [1242.0, 2137.0], [1241.0, 1725.0], [1239.0, 1667.5], [1240.0, 1654.0], [1243.0, 1789.5], [1244.0, 1705.0], [1245.0, 1904.5], [1221.0, 1975.0], [1222.0, 1896.0], [1246.0, 1723.0], [1247.0, 1799.5], [1216.0, 1626.0], [1217.0, 1736.0], [1218.0, 1763.0], [1220.0, 1732.0], [1238.0, 2661.5], [1233.0, 1843.5], [1232.0, 1536.0], [1234.0, 1767.0], [1237.0, 1952.5], [1236.0, 1691.0], [1235.0, 1746.5], [1223.0, 2231.0], [1264.0, 2010.0], [1228.0, 1798.5], [1229.0, 1751.0], [1230.0, 1807.0], [1231.0, 1692.5], [1225.0, 1850.0], [1226.0, 1615.0], [1286.0, 1641.0], [1292.0, 2649.0], [1307.0, 2102.0], [1306.0, 1726.5], [1280.0, 1744.5], [1281.0, 1696.5], [1282.0, 1573.5], [1284.0, 1583.0], [1283.0, 1757.0], [1316.0, 3083.0], [1314.0, 1849.0], [1334.0, 1722.5], [1312.0, 1829.0], [1328.0, 2694.0], [1302.0, 2549.0], [1301.0, 1747.5], [1294.0, 1740.0], [1293.0, 1657.0], [1304.0, 1864.0], [1297.0, 1659.0], [1300.0, 1686.0], [1291.0, 1667.0], [1289.0, 1780.0], [1288.0, 1879.0], [1363.0, 1661.0], [1394.0, 1175.0], [1404.0, 1770.0], [1470.0, 1744.0], [1657.0, 1507.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[24.0, 10216.5], [68.0, 10170.0], [106.0, 10516.0], [148.0, 10332.0], [179.0, 10252.5], [226.0, 10292.5], [284.0, 45.0], [280.0, 10084.0], [365.0, 10230.0], [573.0, 10077.0], [729.0, 12795.0], [828.0, 49.0], [844.0, 77.0], [895.0, 44.0], [886.0, 10472.0], [881.0, 42.0], [924.0, 130.0], [913.0, 112.5], [1080.0, 48.0], [1057.0, 46.0], [1070.0, 43.0], [1063.0, 42.0], [1137.0, 41.0], [1105.0, 41.0], [1130.0, 81.0], [1125.0, 47.0], [1104.0, 41.0], [1149.0, 41.0], [1108.0, 43.0], [1100.0, 42.0], [1135.0, 41.0], [1138.0, 41.0], [1148.0, 44.0], [1134.0, 41.0], [1165.0, 41.0], [1214.0, 41.0], [1184.0, 41.0], [1215.0, 43.0], [1213.0, 41.0], [1206.0, 41.0], [1205.0, 41.0], [1202.0, 41.0], [1201.0, 41.0], [1166.0, 42.0], [1211.0, 41.5], [1210.0, 41.0], [1209.0, 41.0], [1208.0, 43.0], [1207.0, 41.0], [1212.0, 42.0], [1177.0, 41.0], [1178.0, 41.0], [1181.0, 41.0], [1182.0, 44.0], [1180.0, 41.0], [1183.0, 41.0], [1170.0, 41.0], [1168.0, 42.0], [1173.0, 42.0], [1174.0, 42.0], [1176.0, 42.0], [1162.0, 41.0], [1164.0, 43.0], [1157.0, 41.0], [1156.0, 42.0], [1154.0, 41.0], [1158.0, 42.0], [1194.0, 41.0], [1195.0, 42.0], [1196.0, 41.0], [1197.0, 41.0], [1198.0, 42.0], [1199.0, 42.0], [1189.0, 42.0], [1192.0, 42.0], [1193.0, 41.0], [1190.0, 41.0], [1188.0, 43.0], [1185.0, 41.0], [1227.0, 42.0], [1268.0, 67.0], [1267.0, 348.0], [1266.0, 42.0], [1265.0, 42.0], [1263.0, 42.0], [1271.0, 42.0], [1269.0, 41.0], [1270.0, 42.0], [1277.0, 41.0], [1276.0, 41.0], [1272.0, 41.0], [1275.0, 41.0], [1279.0, 42.0], [1250.0, 42.0], [1255.0, 42.0], [1252.0, 40.0], [1254.0, 41.0], [1248.0, 41.0], [1249.0, 42.0], [1256.0, 41.0], [1262.0, 41.0], [1259.0, 43.0], [1261.0, 41.0], [1260.0, 41.0], [1242.0, 42.0], [1241.0, 41.0], [1239.0, 41.0], [1240.0, 41.0], [1243.0, 43.0], [1244.0, 41.0], [1245.0, 41.0], [1221.0, 43.0], [1222.0, 43.0], [1246.0, 41.0], [1247.0, 42.0], [1216.0, 44.0], [1217.0, 42.0], [1218.0, 41.0], [1220.0, 41.0], [1238.0, 41.0], [1233.0, 41.0], [1232.0, 41.0], [1234.0, 42.0], [1237.0, 41.0], [1236.0, 41.0], [1235.0, 42.0], [1223.0, 41.0], [1264.0, 41.0], [1228.0, 42.0], [1229.0, 41.0], [1230.0, 42.0], [1231.0, 41.0], [1225.0, 43.0], [1226.0, 42.0], [1286.0, 41.0], [1292.0, 41.0], [1307.0, 41.0], [1306.0, 41.0], [1280.0, 41.0], [1281.0, 41.0], [1282.0, 42.0], [1284.0, 42.0], [1283.0, 42.0], [1316.0, 41.0], [1314.0, 41.0], [1334.0, 41.0], [1312.0, 41.0], [1328.0, 42.0], [1302.0, 41.0], [1301.0, 42.0], [1294.0, 41.0], [1293.0, 41.0], [1304.0, 41.0], [1297.0, 41.0], [1300.0, 43.0], [1291.0, 41.0], [1289.0, 43.0], [1288.0, 41.0], [1363.0, 11412.0], [1394.0, 164.0], [1404.0, 41.0], [1470.0, 75.0], [1657.0, 96.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1657.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 4.0, "maxY": 10949.5, "series": [{"data": [[4.0, 10949.5], [24.0, 10661.5], [68.0, 9312.0], [106.0, 3457.0], [148.0, 8704.0], [179.0, 8454.0], [202.0, 3582.5], [226.0, 7626.0], [284.0, 4488.0], [280.0, 6707.0], [365.0, 5773.5], [573.0, 3545.5], [695.0, 3637.0], [729.0, 1122.0], [828.0, 1224.0], [844.0, 3623.0], [895.0, 1185.5], [886.0, 2796.5], [881.0, 1676.0], [924.0, 1168.0], [908.0, 2852.0], [913.0, 1887.0], [1080.0, 1145.0], [1057.0, 3501.0], [1070.0, 1755.5], [1063.0, 1934.5], [1137.0, 2599.0], [1105.0, 3055.0], [1130.0, 4207.5], [1125.0, 1880.0], [1104.0, 2725.0], [1149.0, 1821.0], [1108.0, 1786.0], [1100.0, 1828.0], [1135.0, 1686.0], [1138.0, 1810.0], [1148.0, 1911.0], [1134.0, 1848.5], [1165.0, 1855.0], [1214.0, 2053.5], [1184.0, 2695.0], [1215.0, 1690.0], [1213.0, 1818.0], [1206.0, 1740.5], [1205.0, 1721.0], [1202.0, 1824.5], [1201.0, 1707.5], [1166.0, 1807.0], [1211.0, 1769.0], [1210.0, 1644.5], [1209.0, 1818.5], [1208.0, 1755.0], [1207.0, 1731.0], [1212.0, 1646.0], [1177.0, 2025.5], [1178.0, 1788.0], [1181.0, 1685.0], [1182.0, 1788.0], [1180.0, 1831.0], [1183.0, 1759.5], [1170.0, 2004.0], [1168.0, 1849.0], [1173.0, 1690.0], [1174.0, 1752.0], [1176.0, 1656.0], [1162.0, 1942.5], [1164.0, 1750.0], [1157.0, 1842.0], [1156.0, 1817.0], [1154.0, 1679.0], [1158.0, 1773.0], [1194.0, 1752.5], [1195.0, 1696.0], [1196.0, 1791.0], [1197.0, 1672.0], [1198.0, 1730.0], [1199.0, 1830.5], [1189.0, 1691.5], [1192.0, 1593.0], [1193.0, 1811.5], [1190.0, 1782.0], [1188.0, 1701.0], [1185.0, 1698.5], [1227.0, 1872.5], [1268.0, 1458.0], [1267.0, 1550.0], [1266.0, 1784.0], [1265.0, 1725.0], [1263.0, 2471.5], [1271.0, 1742.5], [1269.0, 1672.0], [1270.0, 1769.0], [1277.0, 1675.0], [1276.0, 1713.0], [1272.0, 1758.0], [1275.0, 1948.0], [1279.0, 1926.0], [1250.0, 1716.5], [1255.0, 1679.0], [1252.0, 1627.0], [1254.0, 1819.0], [1248.0, 1751.5], [1249.0, 1800.0], [1256.0, 2170.0], [1262.0, 2329.0], [1259.0, 1649.0], [1261.0, 1689.5], [1260.0, 1713.0], [1242.0, 2137.0], [1241.0, 1725.0], [1239.0, 1667.5], [1240.0, 1654.0], [1243.0, 1789.0], [1244.0, 1704.0], [1245.0, 1904.0], [1221.0, 1974.5], [1222.0, 1896.0], [1246.0, 1723.0], [1247.0, 1799.5], [1216.0, 1625.5], [1217.0, 1735.0], [1218.0, 1763.0], [1220.0, 1731.0], [1238.0, 2661.5], [1233.0, 1843.0], [1232.0, 1536.0], [1234.0, 1767.0], [1237.0, 1951.5], [1236.0, 1690.0], [1235.0, 1746.0], [1223.0, 2229.5], [1264.0, 2009.5], [1228.0, 1798.5], [1229.0, 1751.0], [1230.0, 1807.0], [1231.0, 1692.5], [1225.0, 1850.0], [1226.0, 1615.0], [1286.0, 1641.0], [1292.0, 2649.0], [1307.0, 2101.5], [1306.0, 1726.0], [1280.0, 1744.5], [1281.0, 1696.5], [1282.0, 1573.5], [1284.0, 1583.0], [1283.0, 1757.0], [1316.0, 3083.0], [1314.0, 1849.0], [1334.0, 1722.5], [1312.0, 1829.0], [1328.0, 2694.0], [1302.0, 2549.0], [1301.0, 1747.5], [1294.0, 1740.0], [1293.0, 1657.0], [1304.0, 1859.5], [1297.0, 1658.0], [1300.0, 1685.5], [1291.0, 1666.5], [1289.0, 1780.0], [1288.0, 1879.0], [1363.0, 1661.0], [1394.0, 1175.0], [1404.0, 1770.0], [1470.0, 1726.0], [1657.0, 1498.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[24.0, 10216.5], [68.0, 10169.0], [106.0, 10516.0], [148.0, 10332.0], [179.0, 10252.5], [226.0, 10292.5], [284.0, 45.0], [280.0, 10084.0], [365.0, 10230.0], [573.0, 10077.0], [729.0, 0.0], [828.0, 49.0], [844.0, 77.0], [895.0, 44.0], [886.0, 10472.0], [881.0, 42.0], [924.0, 130.0], [913.0, 112.5], [1080.0, 45.0], [1057.0, 46.0], [1070.0, 43.0], [1063.0, 42.0], [1137.0, 41.0], [1105.0, 41.0], [1130.0, 81.0], [1125.0, 47.0], [1104.0, 41.0], [1149.0, 41.0], [1108.0, 43.0], [1100.0, 42.0], [1135.0, 41.0], [1138.0, 41.0], [1148.0, 44.0], [1134.0, 41.0], [1165.0, 41.0], [1214.0, 41.0], [1184.0, 41.0], [1215.0, 43.0], [1213.0, 41.0], [1206.0, 41.0], [1205.0, 41.0], [1202.0, 41.0], [1201.0, 41.0], [1166.0, 42.0], [1211.0, 41.5], [1210.0, 41.0], [1209.0, 41.0], [1208.0, 43.0], [1207.0, 41.0], [1212.0, 42.0], [1177.0, 41.0], [1178.0, 41.0], [1181.0, 41.0], [1182.0, 44.0], [1180.0, 41.0], [1183.0, 41.0], [1170.0, 41.0], [1168.0, 42.0], [1173.0, 42.0], [1174.0, 42.0], [1176.0, 42.0], [1162.0, 41.0], [1164.0, 43.0], [1157.0, 41.0], [1156.0, 42.0], [1154.0, 41.0], [1158.0, 42.0], [1194.0, 41.0], [1195.0, 42.0], [1196.0, 41.0], [1197.0, 41.0], [1198.0, 42.0], [1199.0, 42.0], [1189.0, 42.0], [1192.0, 42.0], [1193.0, 41.0], [1190.0, 41.0], [1188.0, 43.0], [1185.0, 41.0], [1227.0, 42.0], [1268.0, 47.0], [1267.0, 39.0], [1266.0, 42.0], [1265.0, 42.0], [1263.0, 42.0], [1271.0, 42.0], [1269.0, 41.0], [1270.0, 42.0], [1277.0, 41.0], [1276.0, 41.0], [1272.0, 41.0], [1275.0, 41.0], [1279.0, 42.0], [1250.0, 42.0], [1255.0, 42.0], [1252.0, 40.0], [1254.0, 41.0], [1248.0, 41.0], [1249.0, 42.0], [1256.0, 41.0], [1262.0, 41.0], [1259.0, 43.0], [1261.0, 41.0], [1260.0, 41.0], [1242.0, 42.0], [1241.0, 41.0], [1239.0, 41.0], [1240.0, 41.0], [1243.0, 43.0], [1244.0, 41.0], [1245.0, 41.0], [1221.0, 43.0], [1222.0, 43.0], [1246.0, 41.0], [1247.0, 42.0], [1216.0, 44.0], [1217.0, 42.0], [1218.0, 41.0], [1220.0, 41.0], [1238.0, 41.0], [1233.0, 41.0], [1232.0, 41.0], [1234.0, 42.0], [1237.0, 41.0], [1236.0, 41.0], [1235.0, 42.0], [1223.0, 41.0], [1264.0, 41.0], [1228.0, 42.0], [1229.0, 41.0], [1230.0, 42.0], [1231.0, 41.0], [1225.0, 43.0], [1226.0, 42.0], [1286.0, 41.0], [1292.0, 41.0], [1307.0, 41.0], [1306.0, 41.0], [1280.0, 41.0], [1281.0, 41.0], [1282.0, 42.0], [1284.0, 42.0], [1283.0, 42.0], [1316.0, 41.0], [1314.0, 41.0], [1334.0, 41.0], [1312.0, 41.0], [1328.0, 42.0], [1302.0, 41.0], [1301.0, 42.0], [1294.0, 41.0], [1293.0, 41.0], [1304.0, 41.0], [1297.0, 41.0], [1300.0, 43.0], [1291.0, 41.0], [1289.0, 43.0], [1288.0, 41.0], [1363.0, 0.0], [1394.0, 96.0], [1404.0, 41.0], [1470.0, 75.0], [1657.0, 95.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1657.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 548.0833333333334, "minX": 1.684164E12, "maxY": 1234.9333333333334, "series": [{"data": [[1.68416424E12, 1234.9333333333334], [1.68416412E12, 1219.1333333333334], [1.6841643E12, 575.6166666666667], [1.684164E12, 548.0833333333334], [1.68416418E12, 1233.2833333333333], [1.68416406E12, 1199.9333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6841643E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.684164E12, "maxY": 935.9833333333333, "series": [{"data": [[1.684164E12, 1.0666666666666667]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68416424E12, 935.9833333333333], [1.68416412E12, 931.7166666666667], [1.6841643E12, 482.15], [1.684164E12, 373.55], [1.68416418E12, 932.4833333333333], [1.68416406E12, 925.8833333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.684164E12, 16.95]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.684164E12, 2.033333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68416424E12, 298.95], [1.68416412E12, 287.4166666666667], [1.6841643E12, 143.46666666666667], [1.684164E12, 104.45], [1.68416418E12, 300.8], [1.68416406E12, 274.05]], "isOverall": false, "label": "429", "isController": false}, {"data": [[1.684164E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6841643E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 124.53333333333333, "minX": 1.684164E12, "maxY": 935.9833333333333, "series": [{"data": [[1.68416424E12, 935.9833333333333], [1.68416412E12, 931.7166666666667], [1.6841643E12, 482.15], [1.684164E12, 373.55], [1.68416418E12, 932.4833333333333], [1.68416406E12, 925.8833333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68416424E12, 298.95], [1.68416412E12, 287.4166666666667], [1.6841643E12, 143.46666666666667], [1.684164E12, 124.53333333333333], [1.68416418E12, 300.8], [1.68416406E12, 274.05]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6841643E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 124.53333333333333, "minX": 1.684164E12, "maxY": 935.9833333333333, "series": [{"data": [[1.68416424E12, 935.9833333333333], [1.68416412E12, 931.7166666666667], [1.6841643E12, 482.15], [1.684164E12, 373.55], [1.68416418E12, 932.4833333333333], [1.68416406E12, 925.8833333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68416424E12, 298.95], [1.68416412E12, 287.4166666666667], [1.6841643E12, 143.46666666666667], [1.684164E12, 124.53333333333333], [1.68416418E12, 300.8], [1.68416406E12, 274.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6841643E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

