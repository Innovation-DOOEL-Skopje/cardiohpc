/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "maxY": 22096.0, "series": [{"data": [[0.0, 36.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 39.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 40.0], [1.8, 40.0], [1.9, 40.0], [2.0, 40.0], [2.1, 40.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 41.0], [3.4, 41.0], [3.5, 41.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 41.0], [4.6, 41.0], [4.7, 41.0], [4.8, 41.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 42.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 42.0], [6.3, 42.0], [6.4, 42.0], [6.5, 43.0], [6.6, 43.0], [6.7, 43.0], [6.8, 43.0], [6.9, 43.0], [7.0, 43.0], [7.1, 43.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 44.0], [7.7, 44.0], [7.8, 44.0], [7.9, 44.0], [8.0, 44.0], [8.1, 45.0], [8.2, 45.0], [8.3, 46.0], [8.4, 47.0], [8.5, 47.0], [8.6, 48.0], [8.7, 50.0], [8.8, 51.0], [8.9, 53.0], [9.0, 54.0], [9.1, 55.0], [9.2, 56.0], [9.3, 57.0], [9.4, 58.0], [9.5, 60.0], [9.6, 61.0], [9.7, 63.0], [9.8, 66.0], [9.9, 69.0], [10.0, 72.0], [10.1, 76.0], [10.2, 81.0], [10.3, 88.0], [10.4, 95.0], [10.5, 102.0], [10.6, 109.0], [10.7, 118.0], [10.8, 131.0], [10.9, 149.0], [11.0, 176.0], [11.1, 221.0], [11.2, 267.0], [11.3, 298.0], [11.4, 339.0], [11.5, 402.0], [11.6, 473.0], [11.7, 538.0], [11.8, 647.0], [11.9, 787.0], [12.0, 948.0], [12.1, 1089.0], [12.2, 1090.0], [12.3, 1091.0], [12.4, 1091.0], [12.5, 1091.0], [12.6, 1092.0], [12.7, 1092.0], [12.8, 1092.0], [12.9, 1092.0], [13.0, 1093.0], [13.1, 1093.0], [13.2, 1093.0], [13.3, 1093.0], [13.4, 1093.0], [13.5, 1093.0], [13.6, 1094.0], [13.7, 1094.0], [13.8, 1094.0], [13.9, 1094.0], [14.0, 1094.0], [14.1, 1094.0], [14.2, 1094.0], [14.3, 1094.0], [14.4, 1095.0], [14.5, 1095.0], [14.6, 1095.0], [14.7, 1095.0], [14.8, 1095.0], [14.9, 1095.0], [15.0, 1095.0], [15.1, 1095.0], [15.2, 1095.0], [15.3, 1095.0], [15.4, 1096.0], [15.5, 1096.0], [15.6, 1096.0], [15.7, 1096.0], [15.8, 1096.0], [15.9, 1096.0], [16.0, 1096.0], [16.1, 1096.0], [16.2, 1096.0], [16.3, 1096.0], [16.4, 1097.0], [16.5, 1097.0], [16.6, 1097.0], [16.7, 1097.0], [16.8, 1097.0], [16.9, 1097.0], [17.0, 1097.0], [17.1, 1097.0], [17.2, 1097.0], [17.3, 1097.0], [17.4, 1097.0], [17.5, 1097.0], [17.6, 1098.0], [17.7, 1098.0], [17.8, 1098.0], [17.9, 1098.0], [18.0, 1098.0], [18.1, 1098.0], [18.2, 1098.0], [18.3, 1098.0], [18.4, 1098.0], [18.5, 1098.0], [18.6, 1098.0], [18.7, 1098.0], [18.8, 1099.0], [18.9, 1099.0], [19.0, 1099.0], [19.1, 1099.0], [19.2, 1099.0], [19.3, 1099.0], [19.4, 1099.0], [19.5, 1099.0], [19.6, 1099.0], [19.7, 1099.0], [19.8, 1099.0], [19.9, 1100.0], [20.0, 1100.0], [20.1, 1100.0], [20.2, 1100.0], [20.3, 1100.0], [20.4, 1100.0], [20.5, 1100.0], [20.6, 1100.0], [20.7, 1100.0], [20.8, 1100.0], [20.9, 1101.0], [21.0, 1101.0], [21.1, 1101.0], [21.2, 1101.0], [21.3, 1101.0], [21.4, 1101.0], [21.5, 1101.0], [21.6, 1101.0], [21.7, 1101.0], [21.8, 1102.0], [21.9, 1102.0], [22.0, 1102.0], [22.1, 1102.0], [22.2, 1102.0], [22.3, 1102.0], [22.4, 1102.0], [22.5, 1102.0], [22.6, 1103.0], [22.7, 1103.0], [22.8, 1103.0], [22.9, 1103.0], [23.0, 1103.0], [23.1, 1103.0], [23.2, 1104.0], [23.3, 1104.0], [23.4, 1104.0], [23.5, 1104.0], [23.6, 1104.0], [23.7, 1104.0], [23.8, 1105.0], [23.9, 1105.0], [24.0, 1105.0], [24.1, 1105.0], [24.2, 1106.0], [24.3, 1106.0], [24.4, 1106.0], [24.5, 1106.0], [24.6, 1107.0], [24.7, 1107.0], [24.8, 1107.0], [24.9, 1107.0], [25.0, 1108.0], [25.1, 1108.0], [25.2, 1108.0], [25.3, 1109.0], [25.4, 1109.0], [25.5, 1110.0], [25.6, 1110.0], [25.7, 1111.0], [25.8, 1111.0], [25.9, 1111.0], [26.0, 1112.0], [26.1, 1112.0], [26.2, 1113.0], [26.3, 1113.0], [26.4, 1114.0], [26.5, 1115.0], [26.6, 1115.0], [26.7, 1116.0], [26.8, 1116.0], [26.9, 1117.0], [27.0, 1117.0], [27.1, 1118.0], [27.2, 1119.0], [27.3, 1119.0], [27.4, 1120.0], [27.5, 1120.0], [27.6, 1121.0], [27.7, 1122.0], [27.8, 1122.0], [27.9, 1123.0], [28.0, 1124.0], [28.1, 1125.0], [28.2, 1125.0], [28.3, 1126.0], [28.4, 1127.0], [28.5, 1127.0], [28.6, 1128.0], [28.7, 1129.0], [28.8, 1130.0], [28.9, 1130.0], [29.0, 1131.0], [29.1, 1132.0], [29.2, 1133.0], [29.3, 1133.0], [29.4, 1134.0], [29.5, 1135.0], [29.6, 1136.0], [29.7, 1136.0], [29.8, 1137.0], [29.9, 1138.0], [30.0, 1139.0], [30.1, 1140.0], [30.2, 1140.0], [30.3, 1141.0], [30.4, 1142.0], [30.5, 1143.0], [30.6, 1144.0], [30.7, 1145.0], [30.8, 1146.0], [30.9, 1146.0], [31.0, 1147.0], [31.1, 1148.0], [31.2, 1149.0], [31.3, 1150.0], [31.4, 1151.0], [31.5, 1152.0], [31.6, 1153.0], [31.7, 1154.0], [31.8, 1155.0], [31.9, 1156.0], [32.0, 1157.0], [32.1, 1158.0], [32.2, 1159.0], [32.3, 1160.0], [32.4, 1161.0], [32.5, 1162.0], [32.6, 1163.0], [32.7, 1163.0], [32.8, 1164.0], [32.9, 1166.0], [33.0, 1166.0], [33.1, 1168.0], [33.2, 1169.0], [33.3, 1170.0], [33.4, 1171.0], [33.5, 1172.0], [33.6, 1173.0], [33.7, 1174.0], [33.8, 1175.0], [33.9, 1176.0], [34.0, 1178.0], [34.1, 1179.0], [34.2, 1180.0], [34.3, 1181.0], [34.4, 1182.0], [34.5, 1183.0], [34.6, 1185.0], [34.7, 1186.0], [34.8, 1187.0], [34.9, 1189.0], [35.0, 1190.0], [35.1, 1191.0], [35.2, 1192.0], [35.3, 1194.0], [35.4, 1195.0], [35.5, 1197.0], [35.6, 1198.0], [35.7, 1199.0], [35.8, 1201.0], [35.9, 1202.0], [36.0, 1204.0], [36.1, 1205.0], [36.2, 1206.0], [36.3, 1208.0], [36.4, 1210.0], [36.5, 1211.0], [36.6, 1212.0], [36.7, 1214.0], [36.8, 1216.0], [36.9, 1217.0], [37.0, 1219.0], [37.1, 1220.0], [37.2, 1222.0], [37.3, 1223.0], [37.4, 1225.0], [37.5, 1226.0], [37.6, 1228.0], [37.7, 1230.0], [37.8, 1231.0], [37.9, 1233.0], [38.0, 1235.0], [38.1, 1236.0], [38.2, 1238.0], [38.3, 1239.0], [38.4, 1241.0], [38.5, 1243.0], [38.6, 1245.0], [38.7, 1246.0], [38.8, 1248.0], [38.9, 1249.0], [39.0, 1251.0], [39.1, 1253.0], [39.2, 1255.0], [39.3, 1257.0], [39.4, 1258.0], [39.5, 1260.0], [39.6, 1262.0], [39.7, 1264.0], [39.8, 1266.0], [39.9, 1268.0], [40.0, 1270.0], [40.1, 1272.0], [40.2, 1273.0], [40.3, 1275.0], [40.4, 1277.0], [40.5, 1279.0], [40.6, 1281.0], [40.7, 1283.0], [40.8, 1285.0], [40.9, 1287.0], [41.0, 1289.0], [41.1, 1291.0], [41.2, 1293.0], [41.3, 1295.0], [41.4, 1297.0], [41.5, 1299.0], [41.6, 1301.0], [41.7, 1303.0], [41.8, 1305.0], [41.9, 1307.0], [42.0, 1309.0], [42.1, 1311.0], [42.2, 1314.0], [42.3, 1316.0], [42.4, 1318.0], [42.5, 1320.0], [42.6, 1322.0], [42.7, 1324.0], [42.8, 1326.0], [42.9, 1328.0], [43.0, 1331.0], [43.1, 1333.0], [43.2, 1335.0], [43.3, 1337.0], [43.4, 1339.0], [43.5, 1341.0], [43.6, 1343.0], [43.7, 1344.0], [43.8, 1346.0], [43.9, 1348.0], [44.0, 1350.0], [44.1, 1352.0], [44.2, 1354.0], [44.3, 1356.0], [44.4, 1358.0], [44.5, 1360.0], [44.6, 1363.0], [44.7, 1365.0], [44.8, 1367.0], [44.9, 1369.0], [45.0, 1371.0], [45.1, 1374.0], [45.2, 1376.0], [45.3, 1378.0], [45.4, 1381.0], [45.5, 1384.0], [45.6, 1386.0], [45.7, 1388.0], [45.8, 1391.0], [45.9, 1393.0], [46.0, 1396.0], [46.1, 1398.0], [46.2, 1401.0], [46.3, 1404.0], [46.4, 1406.0], [46.5, 1409.0], [46.6, 1411.0], [46.7, 1414.0], [46.8, 1417.0], [46.9, 1420.0], [47.0, 1422.0], [47.1, 1425.0], [47.2, 1428.0], [47.3, 1431.0], [47.4, 1434.0], [47.5, 1437.0], [47.6, 1439.0], [47.7, 1442.0], [47.8, 1445.0], [47.9, 1447.0], [48.0, 1451.0], [48.1, 1453.0], [48.2, 1456.0], [48.3, 1459.0], [48.4, 1462.0], [48.5, 1465.0], [48.6, 1468.0], [48.7, 1471.0], [48.8, 1474.0], [48.9, 1477.0], [49.0, 1480.0], [49.1, 1483.0], [49.2, 1486.0], [49.3, 1490.0], [49.4, 1493.0], [49.5, 1496.0], [49.6, 1499.0], [49.7, 1503.0], [49.8, 1506.0], [49.9, 1509.0], [50.0, 1513.0], [50.1, 1517.0], [50.2, 1520.0], [50.3, 1524.0], [50.4, 1528.0], [50.5, 1531.0], [50.6, 1534.0], [50.7, 1538.0], [50.8, 1541.0], [50.9, 1544.0], [51.0, 1548.0], [51.1, 1551.0], [51.2, 1554.0], [51.3, 1558.0], [51.4, 1561.0], [51.5, 1565.0], [51.6, 1568.0], [51.7, 1572.0], [51.8, 1575.0], [51.9, 1579.0], [52.0, 1582.0], [52.1, 1586.0], [52.2, 1589.0], [52.3, 1593.0], [52.4, 1596.0], [52.5, 1599.0], [52.6, 1603.0], [52.7, 1606.0], [52.8, 1609.0], [52.9, 1613.0], [53.0, 1616.0], [53.1, 1620.0], [53.2, 1624.0], [53.3, 1628.0], [53.4, 1632.0], [53.5, 1635.0], [53.6, 1639.0], [53.7, 1643.0], [53.8, 1646.0], [53.9, 1650.0], [54.0, 1654.0], [54.1, 1658.0], [54.2, 1662.0], [54.3, 1666.0], [54.4, 1671.0], [54.5, 1674.0], [54.6, 1678.0], [54.7, 1681.0], [54.8, 1685.0], [54.9, 1689.0], [55.0, 1693.0], [55.1, 1697.0], [55.2, 1701.0], [55.3, 1705.0], [55.4, 1709.0], [55.5, 1713.0], [55.6, 1718.0], [55.7, 1721.0], [55.8, 1725.0], [55.9, 1730.0], [56.0, 1734.0], [56.1, 1738.0], [56.2, 1742.0], [56.3, 1746.0], [56.4, 1751.0], [56.5, 1755.0], [56.6, 1759.0], [56.7, 1764.0], [56.8, 1769.0], [56.9, 1773.0], [57.0, 1777.0], [57.1, 1782.0], [57.2, 1786.0], [57.3, 1790.0], [57.4, 1795.0], [57.5, 1799.0], [57.6, 1804.0], [57.7, 1808.0], [57.8, 1812.0], [57.9, 1817.0], [58.0, 1822.0], [58.1, 1827.0], [58.2, 1832.0], [58.3, 1837.0], [58.4, 1843.0], [58.5, 1848.0], [58.6, 1853.0], [58.7, 1858.0], [58.8, 1864.0], [58.9, 1869.0], [59.0, 1875.0], [59.1, 1880.0], [59.2, 1886.0], [59.3, 1891.0], [59.4, 1897.0], [59.5, 1902.0], [59.6, 1907.0], [59.7, 1912.0], [59.8, 1918.0], [59.9, 1925.0], [60.0, 1930.0], [60.1, 1936.0], [60.2, 1942.0], [60.3, 1948.0], [60.4, 1953.0], [60.5, 1960.0], [60.6, 1965.0], [60.7, 1970.0], [60.8, 1976.0], [60.9, 1982.0], [61.0, 1987.0], [61.1, 1992.0], [61.2, 1998.0], [61.3, 2003.0], [61.4, 2009.0], [61.5, 2014.0], [61.6, 2020.0], [61.7, 2025.0], [61.8, 2030.0], [61.9, 2037.0], [62.0, 2043.0], [62.1, 2049.0], [62.2, 2055.0], [62.3, 2061.0], [62.4, 2067.0], [62.5, 2074.0], [62.6, 2080.0], [62.7, 2086.0], [62.8, 2093.0], [62.9, 2099.0], [63.0, 2105.0], [63.1, 2111.0], [63.2, 2118.0], [63.3, 2124.0], [63.4, 2130.0], [63.5, 2137.0], [63.6, 2142.0], [63.7, 2147.0], [63.8, 2152.0], [63.9, 2156.0], [64.0, 2162.0], [64.1, 2167.0], [64.2, 2173.0], [64.3, 2179.0], [64.4, 2185.0], [64.5, 2192.0], [64.6, 2198.0], [64.7, 2206.0], [64.8, 2214.0], [64.9, 2222.0], [65.0, 2231.0], [65.1, 2240.0], [65.2, 2250.0], [65.3, 2260.0], [65.4, 2269.0], [65.5, 2280.0], [65.6, 2290.0], [65.7, 2300.0], [65.8, 2311.0], [65.9, 2323.0], [66.0, 2333.0], [66.1, 2345.0], [66.2, 2357.0], [66.3, 2369.0], [66.4, 2381.0], [66.5, 2392.0], [66.6, 2403.0], [66.7, 2414.0], [66.8, 2425.0], [66.9, 2436.0], [67.0, 2449.0], [67.1, 2459.0], [67.2, 2470.0], [67.3, 2481.0], [67.4, 2493.0], [67.5, 2505.0], [67.6, 2517.0], [67.7, 2529.0], [67.8, 2541.0], [67.9, 2553.0], [68.0, 2564.0], [68.1, 2577.0], [68.2, 2590.0], [68.3, 2603.0], [68.4, 2617.0], [68.5, 2630.0], [68.6, 2644.0], [68.7, 2658.0], [68.8, 2672.0], [68.9, 2685.0], [69.0, 2698.0], [69.1, 2711.0], [69.2, 2726.0], [69.3, 2740.0], [69.4, 2754.0], [69.5, 2766.0], [69.6, 2777.0], [69.7, 2790.0], [69.8, 2804.0], [69.9, 2818.0], [70.0, 2830.0], [70.1, 2841.0], [70.2, 2854.0], [70.3, 2865.0], [70.4, 2879.0], [70.5, 2891.0], [70.6, 2905.0], [70.7, 2919.0], [70.8, 2931.0], [70.9, 2944.0], [71.0, 2957.0], [71.1, 2970.0], [71.2, 2983.0], [71.3, 2995.0], [71.4, 3007.0], [71.5, 3020.0], [71.6, 3034.0], [71.7, 3046.0], [71.8, 3058.0], [71.9, 3070.0], [72.0, 3083.0], [72.1, 3096.0], [72.2, 3110.0], [72.3, 3120.0], [72.4, 3130.0], [72.5, 3142.0], [72.6, 3152.0], [72.7, 3163.0], [72.8, 3173.0], [72.9, 3183.0], [73.0, 3194.0], [73.1, 3206.0], [73.2, 3219.0], [73.3, 3232.0], [73.4, 3245.0], [73.5, 3259.0], [73.6, 3276.0], [73.7, 3292.0], [73.8, 3309.0], [73.9, 3324.0], [74.0, 3343.0], [74.1, 3364.0], [74.2, 3384.0], [74.3, 3403.0], [74.4, 3420.0], [74.5, 3437.0], [74.6, 3455.0], [74.7, 3474.0], [74.8, 3491.0], [74.9, 3511.0], [75.0, 3531.0], [75.1, 3551.0], [75.2, 3572.0], [75.3, 3592.0], [75.4, 3614.0], [75.5, 3636.0], [75.6, 3658.0], [75.7, 3684.0], [75.8, 3711.0], [75.9, 3736.0], [76.0, 3761.0], [76.1, 3785.0], [76.2, 3806.0], [76.3, 3829.0], [76.4, 3851.0], [76.5, 3872.0], [76.6, 3893.0], [76.7, 3913.0], [76.8, 3933.0], [76.9, 3955.0], [77.0, 3975.0], [77.1, 3995.0], [77.2, 4014.0], [77.3, 4031.0], [77.4, 4048.0], [77.5, 4066.0], [77.6, 4086.0], [77.7, 4102.0], [77.8, 4122.0], [77.9, 4139.0], [78.0, 4155.0], [78.1, 4171.0], [78.2, 4187.0], [78.3, 4205.0], [78.4, 4220.0], [78.5, 4236.0], [78.6, 4252.0], [78.7, 4268.0], [78.8, 4287.0], [78.9, 4306.0], [79.0, 4328.0], [79.1, 4347.0], [79.2, 4368.0], [79.3, 4392.0], [79.4, 4417.0], [79.5, 4440.0], [79.6, 4467.0], [79.7, 4495.0], [79.8, 4521.0], [79.9, 4551.0], [80.0, 4580.0], [80.1, 4612.0], [80.2, 4645.0], [80.3, 4675.0], [80.4, 4708.0], [80.5, 4742.0], [80.6, 4775.0], [80.7, 4809.0], [80.8, 4840.0], [80.9, 4872.0], [81.0, 4902.0], [81.1, 4928.0], [81.2, 4956.0], [81.3, 4982.0], [81.4, 5006.0], [81.5, 5028.0], [81.6, 5052.0], [81.7, 5076.0], [81.8, 5100.0], [81.9, 5123.0], [82.0, 5148.0], [82.1, 5169.0], [82.2, 5187.0], [82.3, 5206.0], [82.4, 5224.0], [82.5, 5243.0], [82.6, 5262.0], [82.7, 5280.0], [82.8, 5298.0], [82.9, 5319.0], [83.0, 5344.0], [83.1, 5370.0], [83.2, 5394.0], [83.3, 5420.0], [83.4, 5445.0], [83.5, 5476.0], [83.6, 5508.0], [83.7, 5539.0], [83.8, 5573.0], [83.9, 5607.0], [84.0, 5640.0], [84.1, 5674.0], [84.2, 5712.0], [84.3, 5748.0], [84.4, 5786.0], [84.5, 5819.0], [84.6, 5852.0], [84.7, 5889.0], [84.8, 5918.0], [84.9, 5950.0], [85.0, 5978.0], [85.1, 6009.0], [85.2, 6040.0], [85.3, 6067.0], [85.4, 6096.0], [85.5, 6122.0], [85.6, 6146.0], [85.7, 6172.0], [85.8, 6196.0], [85.9, 6220.0], [86.0, 6241.0], [86.1, 6264.0], [86.2, 6289.0], [86.3, 6312.0], [86.4, 6337.0], [86.5, 6361.0], [86.6, 6386.0], [86.7, 6415.0], [86.8, 6442.0], [86.9, 6473.0], [87.0, 6503.0], [87.1, 6539.0], [87.2, 6570.0], [87.3, 6604.0], [87.4, 6641.0], [87.5, 6681.0], [87.6, 6723.0], [87.7, 6765.0], [87.8, 6810.0], [87.9, 6850.0], [88.0, 6895.0], [88.1, 6932.0], [88.2, 6972.0], [88.3, 7007.0], [88.4, 7043.0], [88.5, 7079.0], [88.6, 7111.0], [88.7, 7143.0], [88.8, 7176.0], [88.9, 7211.0], [89.0, 7245.0], [89.1, 7275.0], [89.2, 7301.0], [89.3, 7330.0], [89.4, 7358.0], [89.5, 7388.0], [89.6, 7418.0], [89.7, 7449.0], [89.8, 7482.0], [89.9, 7518.0], [90.0, 7553.0], [90.1, 7593.0], [90.2, 7637.0], [90.3, 7677.0], [90.4, 7719.0], [90.5, 7758.0], [90.6, 7800.0], [90.7, 7839.0], [90.8, 7885.0], [90.9, 7931.0], [91.0, 7977.0], [91.1, 8017.0], [91.2, 8057.0], [91.3, 8100.0], [91.4, 8141.0], [91.5, 8181.0], [91.6, 8218.0], [91.7, 8254.0], [91.8, 8289.0], [91.9, 8321.0], [92.0, 8353.0], [92.1, 8383.0], [92.2, 8417.0], [92.3, 8453.0], [92.4, 8491.0], [92.5, 8531.0], [92.6, 8564.0], [92.7, 8606.0], [92.8, 8643.0], [92.9, 8683.0], [93.0, 8722.0], [93.1, 8762.0], [93.2, 8806.0], [93.3, 8849.0], [93.4, 8894.0], [93.5, 8942.0], [93.6, 8993.0], [93.7, 9043.0], [93.8, 9088.0], [93.9, 9134.0], [94.0, 9180.0], [94.1, 9223.0], [94.2, 9266.0], [94.3, 9310.0], [94.4, 9350.0], [94.5, 9384.0], [94.6, 9419.0], [94.7, 9452.0], [94.8, 9484.0], [94.9, 9514.0], [95.0, 9546.0], [95.1, 9580.0], [95.2, 9616.0], [95.3, 9654.0], [95.4, 9697.0], [95.5, 9744.0], [95.6, 9790.0], [95.7, 9837.0], [95.8, 9882.0], [95.9, 9933.0], [96.0, 9985.0], [96.1, 10033.0], [96.2, 10062.0], [96.3, 10089.0], [96.4, 10114.0], [96.5, 10136.0], [96.6, 10164.0], [96.7, 10190.0], [96.8, 10216.0], [96.9, 10245.0], [97.0, 10274.0], [97.1, 10304.0], [97.2, 10332.0], [97.3, 10363.0], [97.4, 10390.0], [97.5, 10421.0], [97.6, 10450.0], [97.7, 10479.0], [97.8, 10509.0], [97.9, 10536.0], [98.0, 10565.0], [98.1, 10596.0], [98.2, 10631.0], [98.3, 10664.0], [98.4, 10699.0], [98.5, 10737.0], [98.6, 10772.0], [98.7, 10817.0], [98.8, 10857.0], [98.9, 10897.0], [99.0, 10941.0], [99.1, 10987.0], [99.2, 11032.0], [99.3, 11074.0], [99.4, 11117.0], [99.5, 11170.0], [99.6, 11234.0], [99.7, 11315.0], [99.8, 11467.0], [99.9, 13818.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 46678.0, "series": [{"data": [[0.0, 30839.0], [100.0, 1764.0], [200.0, 748.0], [300.0, 560.0], [400.0, 379.0], [500.0, 413.0], [600.0, 236.0], [700.0, 191.0], [800.0, 164.0], [900.0, 174.0], [1000.0, 23179.0], [1100.0, 46678.0], [1200.0, 17189.0], [1300.0, 13570.0], [1400.0, 10224.0], [1500.0, 8546.0], [1600.0, 7841.0], [1700.0, 6909.0], [1800.0, 5769.0], [1900.0, 5224.0], [2000.0, 4966.0], [2100.0, 5035.0], [2200.0, 3160.0], [2300.0, 2578.0], [2400.0, 2622.0], [2500.0, 2408.0], [2600.0, 2203.0], [2700.0, 2216.0], [2800.0, 2339.0], [2900.0, 2284.0], [3000.0, 2333.0], [3100.0, 2699.0], [3200.0, 2089.0], [3300.0, 1565.0], [3400.0, 1666.0], [3500.0, 1445.0], [3600.0, 1239.0], [3700.0, 1222.0], [3800.0, 1369.0], [3900.0, 1456.0], [4000.0, 1645.0], [4300.0, 1394.0], [4100.0, 1734.0], [4200.0, 1735.0], [4600.0, 918.0], [4400.0, 1129.0], [4500.0, 1023.0], [4700.0, 880.0], [4800.0, 934.0], [5100.0, 1379.0], [4900.0, 1140.0], [5000.0, 1243.0], [5300.0, 1221.0], [5200.0, 1597.0], [5400.0, 1018.0], [5500.0, 927.0], [5600.0, 845.0], [5700.0, 796.0], [5800.0, 876.0], [5900.0, 982.0], [6000.0, 1027.0], [6100.0, 1177.0], [6200.0, 1263.0], [6300.0, 1186.0], [6400.0, 1018.0], [6500.0, 882.0], [6600.0, 752.0], [6800.0, 684.0], [6900.0, 799.0], [6700.0, 689.0], [7000.0, 850.0], [7100.0, 881.0], [7200.0, 973.0], [7300.0, 1020.0], [7400.0, 904.0], [7500.0, 784.0], [7600.0, 711.0], [7700.0, 715.0], [7800.0, 685.0], [7900.0, 673.0], [8000.0, 710.0], [8100.0, 731.0], [8200.0, 844.0], [8300.0, 949.0], [8400.0, 794.0], [8700.0, 728.0], [8500.0, 770.0], [8600.0, 751.0], [8800.0, 676.0], [8900.0, 601.0], [9000.0, 603.0], [9100.0, 657.0], [9200.0, 677.0], [9300.0, 794.0], [9400.0, 929.0], [9700.0, 627.0], [9500.0, 871.0], [9600.0, 744.0], [9900.0, 576.0], [10000.0, 919.0], [10100.0, 1174.0], [9800.0, 634.0], [10200.0, 1023.0], [10300.0, 1003.0], [10500.0, 1001.0], [10700.0, 762.0], [10400.0, 1003.0], [10600.0, 875.0], [10800.0, 720.0], [10900.0, 661.0], [11100.0, 532.0], [11000.0, 700.0], [11200.0, 402.0], [11300.0, 255.0], [11400.0, 123.0], [11500.0, 51.0], [11700.0, 16.0], [11600.0, 27.0], [11800.0, 16.0], [12100.0, 9.0], [11900.0, 21.0], [12000.0, 10.0], [12200.0, 9.0], [12400.0, 9.0], [12300.0, 10.0], [12500.0, 10.0], [12600.0, 17.0], [12700.0, 5.0], [12800.0, 11.0], [12900.0, 2.0], [13000.0, 6.0], [13100.0, 3.0], [13200.0, 6.0], [13300.0, 6.0], [13500.0, 6.0], [13800.0, 9.0], [13700.0, 3.0], [13400.0, 3.0], [13600.0, 1.0], [13900.0, 24.0], [14100.0, 20.0], [14200.0, 31.0], [14000.0, 18.0], [14300.0, 31.0], [14700.0, 19.0], [14600.0, 7.0], [14500.0, 18.0], [14400.0, 22.0], [14800.0, 7.0], [14900.0, 10.0], [15300.0, 1.0], [15200.0, 4.0], [15000.0, 4.0], [15100.0, 4.0], [15700.0, 1.0], [15400.0, 1.0], [15600.0, 4.0], [15800.0, 2.0], [15900.0, 1.0], [16300.0, 1.0], [16000.0, 1.0], [16100.0, 1.0], [17100.0, 2.0], [17000.0, 1.0], [16400.0, 1.0], [17300.0, 1.0], [18400.0, 2.0], [18000.0, 2.0], [17600.0, 1.0], [19000.0, 1.0], [18800.0, 1.0], [19600.0, 2.0], [19800.0, 1.0], [20000.0, 2.0], [19500.0, 1.0], [20900.0, 2.0], [20800.0, 2.0], [21200.0, 7.0], [21000.0, 3.0], [21100.0, 1.0], [21300.0, 7.0], [21400.0, 5.0], [21500.0, 3.0], [21800.0, 4.0], [21600.0, 1.0], [21900.0, 1.0], [22000.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2963.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 146388.0, "series": [{"data": [[0.0, 2963.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 111576.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 146388.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 34026.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2685.400152122805, "minX": 1.68416238E12, "maxY": 3000.0, "series": [{"data": [[1.68416262E12, 3000.0], [1.68416244E12, 3000.0], [1.68416256E12, 3000.0], [1.68416238E12, 3000.0], [1.68416268E12, 2685.400152122805], [1.6841625E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416268E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 42.0, "minX": 7.0, "maxY": 11651.0, "series": [{"data": [[7.0, 11471.0], [8.0, 10870.0], [10.0, 11050.5], [11.0, 10682.0], [12.0, 10862.0], [13.0, 11021.0], [14.0, 10787.0], [15.0, 11124.0], [16.0, 11393.0], [17.0, 10748.0], [18.0, 11124.0], [19.0, 11067.0], [20.0, 10363.0], [21.0, 10888.0], [22.0, 11071.0], [23.0, 10989.0], [24.0, 10934.0], [25.0, 10533.0], [26.0, 11050.0], [27.0, 10175.0], [28.0, 11294.0], [29.0, 10873.0], [30.0, 10527.0], [31.0, 11065.0], [32.0, 10866.0], [35.0, 10033.0], [37.0, 11444.0], [36.0, 10676.0], [39.0, 11103.0], [38.0, 10556.5], [41.0, 10033.0], [40.0, 10194.0], [43.0, 10206.0], [42.0, 9870.0], [45.0, 10079.0], [44.0, 10218.0], [47.0, 10208.0], [46.0, 10113.0], [49.0, 9314.0], [48.0, 10080.0], [51.0, 10096.0], [50.0, 10516.0], [53.0, 9850.0], [52.0, 10891.0], [55.0, 10454.0], [54.0, 9534.0], [57.0, 11073.0], [56.0, 10035.0], [59.0, 10283.0], [58.0, 10476.0], [61.0, 10473.0], [60.0, 9602.0], [62.0, 10470.0], [67.0, 10202.0], [65.0, 10476.0], [64.0, 10240.5], [71.0, 10121.0], [70.0, 9946.5], [68.0, 9663.0], [75.0, 11102.0], [74.0, 10538.0], [73.0, 9940.0], [72.0, 11189.0], [79.0, 10483.5], [77.0, 10502.0], [76.0, 10993.0], [83.0, 10928.0], [82.0, 10073.0], [81.0, 10514.0], [80.0, 10716.0], [87.0, 9939.0], [86.0, 11023.0], [85.0, 10019.0], [84.0, 9396.0], [91.0, 9933.0], [90.0, 10076.0], [89.0, 10000.0], [88.0, 10134.0], [95.0, 9529.0], [94.0, 10376.5], [92.0, 11083.0], [99.0, 10840.0], [98.0, 9885.0], [97.0, 9310.0], [96.0, 9892.0], [103.0, 10008.0], [102.0, 9635.0], [101.0, 9590.0], [107.0, 9733.0], [105.0, 11376.0], [111.0, 10394.75], [108.0, 11080.0], [115.0, 10806.0], [114.0, 10239.0], [113.0, 10099.5], [118.0, 10158.0], [117.0, 9542.0], [116.0, 9687.0], [123.0, 9482.0], [122.0, 9609.0], [121.0, 9377.0], [120.0, 10435.0], [127.0, 9665.0], [126.0, 10386.5], [124.0, 9580.0], [135.0, 10070.0], [133.0, 9803.0], [132.0, 11133.0], [131.0, 9646.0], [130.0, 9649.0], [129.0, 9453.0], [128.0, 9341.0], [143.0, 10845.666666666666], [140.0, 9496.0], [139.0, 9300.0], [138.0, 9984.0], [137.0, 10145.0], [136.0, 10379.0], [151.0, 10671.0], [150.0, 9502.0], [149.0, 9290.0], [148.0, 10454.0], [147.0, 11186.0], [146.0, 8642.0], [145.0, 9539.0], [144.0, 10983.0], [159.0, 10498.0], [158.0, 8435.0], [157.0, 9166.0], [156.0, 9264.0], [155.0, 9640.0], [154.0, 10532.0], [153.0, 9510.0], [152.0, 10475.0], [166.0, 9926.0], [165.0, 9215.0], [164.0, 11063.0], [163.0, 9875.0], [162.0, 10513.0], [161.0, 9007.5], [175.0, 10615.0], [174.0, 11035.0], [173.0, 11080.0], [171.0, 10571.0], [170.0, 11054.0], [169.0, 10676.0], [168.0, 10650.0], [183.0, 10129.0], [182.0, 9396.0], [181.0, 10727.0], [180.0, 8890.0], [179.0, 9276.0], [178.0, 8480.0], [177.0, 10188.0], [190.0, 9951.0], [188.0, 9720.0], [187.0, 9915.0], [186.0, 10319.0], [184.0, 10228.0], [199.0, 8791.0], [198.0, 8131.0], [197.0, 9354.0], [196.0, 9126.0], [195.0, 9221.0], [194.0, 9060.0], [193.0, 9760.0], [207.0, 9850.0], [206.0, 9429.0], [205.0, 10883.0], [204.0, 10822.0], [203.0, 9118.0], [202.0, 9490.5], [200.0, 11235.0], [215.0, 8924.0], [214.0, 7732.0], [213.0, 9046.0], [212.0, 11380.0], [211.0, 9033.0], [210.0, 8757.0], [209.0, 10673.0], [208.0, 10762.0], [223.0, 9069.0], [222.0, 10109.0], [221.0, 10892.0], [220.0, 10288.0], [219.0, 10193.333333333334], [218.0, 10128.0], [231.0, 8816.0], [230.0, 8579.0], [229.0, 8637.0], [228.0, 10674.0], [227.0, 9204.0], [226.0, 9623.0], [225.0, 8634.0], [224.0, 9528.0], [238.0, 9234.0], [237.0, 8534.0], [236.0, 10622.0], [235.0, 9485.0], [234.0, 9591.0], [233.0, 9440.0], [232.0, 9221.0], [247.0, 9200.0], [246.0, 10468.0], [245.0, 7712.0], [244.0, 9462.0], [243.0, 9171.5], [241.0, 9933.0], [240.0, 8809.0], [255.0, 8850.0], [254.0, 10172.5], [253.0, 9093.0], [251.0, 10436.0], [250.0, 8869.0], [249.0, 10200.0], [269.0, 8960.0], [271.0, 10001.0], [268.0, 9967.0], [259.0, 10396.0], [258.0, 10665.0], [257.0, 10536.5], [267.0, 11233.0], [266.0, 8834.0], [265.0, 8643.0], [264.0, 10435.0], [263.0, 10710.0], [262.0, 8580.0], [261.0, 9133.0], [260.0, 7481.0], [285.0, 10140.0], [287.0, 10519.0], [284.0, 10769.0], [275.0, 7547.0], [274.0, 8665.0], [273.0, 8434.0], [272.0, 9961.0], [283.0, 9504.0], [282.0, 10836.0], [281.0, 10238.0], [280.0, 8671.0], [279.0, 8568.0], [278.0, 8301.0], [277.0, 8705.0], [276.0, 10197.0], [302.0, 8575.0], [303.0, 11081.0], [301.0, 9126.0], [300.0, 8575.0], [298.0, 10440.0], [297.0, 7586.0], [296.0, 10337.0], [295.0, 7450.0], [289.0, 10796.5], [291.0, 7426.0], [290.0, 10366.0], [294.0, 10238.0], [292.0, 10261.0], [318.0, 8958.0], [319.0, 11015.0], [317.0, 7461.0], [316.0, 9597.0], [315.0, 9569.0], [314.0, 10296.5], [312.0, 10280.0], [311.0, 10174.333333333334], [307.0, 7470.0], [306.0, 8827.0], [305.0, 7542.0], [304.0, 10325.0], [308.0, 10190.0], [323.0, 8598.0], [334.0, 9332.5], [332.0, 9740.0], [329.0, 7974.5], [327.0, 8495.5], [326.0, 9321.0], [322.0, 10263.0], [321.0, 7434.0], [320.0, 10438.0], [350.0, 10824.0], [351.0, 9888.0], [349.0, 8433.0], [348.0, 7225.0], [347.0, 7110.0], [346.0, 9851.0], [345.0, 11092.0], [344.0, 8626.0], [343.0, 10193.0], [336.0, 8411.0], [339.0, 8892.0], [338.0, 9891.5], [342.0, 8760.0], [341.0, 10889.0], [340.0, 10535.0], [366.0, 8572.0], [367.0, 6398.0], [365.0, 8139.0], [364.0, 8142.0], [363.0, 7494.0], [362.0, 9899.0], [361.0, 8909.0], [360.0, 9394.0], [359.0, 7437.0], [352.0, 7656.0], [355.0, 8721.0], [354.0, 8951.0], [358.0, 7072.0], [357.0, 8188.0], [356.0, 8972.0], [382.0, 10222.0], [383.0, 10368.0], [381.0, 7109.0], [380.0, 10338.0], [379.0, 9586.0], [378.0, 8014.0], [377.0, 8370.0], [376.0, 8510.0], [375.0, 9170.0], [369.0, 8894.0], [368.0, 7534.0], [371.0, 10478.0], [370.0, 8912.0], [374.0, 9518.0], [373.0, 8923.0], [372.0, 10118.0], [398.0, 10779.0], [399.0, 10685.0], [397.0, 8228.0], [396.0, 10451.0], [395.0, 9110.0], [394.0, 8780.0], [393.0, 8447.0], [392.0, 8259.0], [391.0, 8552.0], [385.0, 8526.0], [384.0, 10743.0], [387.0, 9896.0], [386.0, 7860.0], [390.0, 10482.0], [389.0, 10335.0], [388.0, 10012.0], [414.0, 9223.0], [415.0, 10328.0], [413.0, 10169.0], [412.0, 10759.0], [411.0, 10138.0], [410.0, 9131.0], [409.0, 10234.0], [408.0, 8295.0], [407.0, 7167.0], [400.0, 8205.0], [403.0, 6643.5], [401.0, 9981.0], [406.0, 10593.0], [405.0, 8066.0], [404.0, 9062.0], [419.0, 8189.0], [431.0, 9664.666666666666], [428.0, 8897.0], [418.0, 10249.0], [417.0, 8292.0], [416.0, 6151.0], [427.0, 8994.0], [426.0, 8422.0], [424.0, 8335.0], [423.0, 10163.0], [422.0, 6357.0], [421.0, 7520.0], [420.0, 6963.0], [446.0, 10191.0], [447.0, 10667.0], [445.0, 10668.0], [444.0, 7367.0], [443.0, 6248.0], [442.0, 11089.0], [441.0, 10661.0], [440.0, 10730.0], [439.0, 6254.0], [432.0, 9210.0], [435.0, 8179.0], [434.0, 8171.0], [438.0, 10696.0], [437.0, 6466.0], [436.0, 10106.0], [462.0, 10927.0], [463.0, 7027.0], [461.0, 6642.0], [460.0, 7696.0], [459.0, 8534.0], [458.0, 8368.0], [457.0, 9251.0], [456.0, 8907.0], [455.0, 11048.0], [449.0, 10944.0], [448.0, 7074.0], [451.0, 10240.0], [450.0, 8066.0], [454.0, 8713.0], [453.0, 6902.0], [452.0, 6614.0], [478.0, 6911.0], [477.0, 9181.5], [474.0, 8991.0], [472.0, 6457.5], [471.0, 7651.0], [470.0, 11134.0], [467.0, 10122.0], [483.0, 8630.5], [493.0, 9733.5], [491.0, 8837.75], [489.0, 8251.0], [487.0, 9066.0], [486.0, 8111.333333333333], [482.0, 8643.5], [481.0, 10868.0], [480.0, 8161.0], [510.0, 6174.0], [511.0, 6765.0], [509.0, 10184.0], [508.0, 11119.0], [507.0, 8421.0], [506.0, 6541.0], [505.0, 8808.0], [504.0, 10458.0], [503.0, 10819.0], [497.0, 6411.0], [496.0, 8674.25], [499.0, 6571.0], [498.0, 8828.0], [502.0, 10139.0], [501.0, 8487.5], [540.0, 10629.0], [542.0, 6320.0], [538.0, 5466.0], [518.0, 8221.0], [516.0, 10633.0], [514.0, 7747.0], [512.0, 10818.0], [534.0, 8673.5], [532.0, 8016.0], [530.0, 8281.0], [528.0, 8936.0], [526.0, 6330.0], [524.0, 9596.0], [522.0, 6501.0], [520.0, 6167.0], [572.0, 10659.0], [574.0, 5462.0], [568.0, 9701.5], [550.0, 9095.5], [548.0, 10496.0], [546.0, 8757.0], [544.0, 8544.0], [566.0, 8733.0], [564.0, 5278.0], [562.0, 8369.0], [560.0, 8710.0], [556.0, 10212.0], [554.0, 10944.0], [552.0, 8386.0], [602.0, 8794.0], [604.0, 8630.0], [600.0, 6614.0], [580.0, 8539.5], [578.0, 8877.0], [576.0, 6726.0], [598.0, 6108.0], [596.0, 7785.0], [594.0, 8454.0], [592.0, 8674.0], [590.0, 9785.0], [584.0, 6596.0], [636.0, 7083.0], [638.0, 7127.5], [634.0, 9187.0], [632.0, 8853.0], [628.0, 8659.0], [626.0, 9877.0], [624.0, 7096.0], [620.0, 10416.0], [614.0, 8245.0], [612.0, 10667.0], [610.0, 10598.0], [608.0, 10993.0], [616.0, 4910.0], [670.0, 6243.0], [660.0, 9275.0], [658.0, 9913.0], [656.0, 7399.0], [654.0, 5294.0], [642.0, 9222.0], [640.0, 5678.0], [652.0, 4883.0], [648.0, 7054.0], [646.0, 7614.0], [644.0, 7206.5], [698.0, 8327.0], [702.0, 11003.0], [696.0, 6095.0], [678.0, 10316.0], [674.0, 7667.5], [692.0, 8494.0], [690.0, 5893.0], [688.0, 7188.5], [686.0, 10413.0], [684.0, 8622.0], [682.0, 9346.0], [732.0, 9096.0], [734.0, 9678.0], [730.0, 8906.0], [728.0, 5249.0], [724.0, 9463.5], [722.0, 5430.0], [720.0, 8975.0], [718.0, 8254.0], [704.0, 5202.0], [710.0, 6615.0], [706.0, 8109.5], [716.0, 10944.0], [714.0, 5575.0], [712.0, 11388.0], [760.0, 5050.0], [764.0, 7902.0], [766.0, 7464.0], [762.0, 7148.5], [758.0, 8570.0], [754.0, 5566.0], [750.0, 8349.5], [738.0, 10599.0], [736.0, 8596.0], [742.0, 8468.0], [740.0, 9185.0], [748.0, 5113.0], [746.0, 4855.0], [744.0, 4743.0], [792.0, 7930.666666666667], [796.0, 11059.0], [798.0, 11193.0], [794.0, 8722.0], [788.0, 5899.0], [786.0, 6641.0], [782.0, 11207.0], [770.0, 9745.0], [768.0, 11118.5], [774.0, 10927.0], [772.0, 5496.0], [780.0, 9134.5], [778.0, 10823.0], [776.0, 5018.0], [828.0, 10031.0], [830.0, 7531.5], [826.0, 5811.0], [824.0, 9467.0], [822.0, 4326.0], [820.0, 9336.0], [816.0, 10041.0], [814.0, 5224.0], [802.0, 6273.0], [800.0, 5070.0], [806.0, 9853.0], [804.0, 8140.0], [812.0, 8377.0], [808.0, 7147.0], [838.0, 4563.0], [862.0, 8292.5], [860.0, 10145.0], [852.0, 10157.0], [850.0, 5387.0], [848.0, 8748.5], [846.0, 6747.333333333333], [842.0, 9704.0], [840.0, 7895.0], [836.0, 8908.0], [834.0, 5972.0], [832.0, 6395.0], [888.0, 4798.0], [892.0, 5743.0], [894.0, 9896.0], [890.0, 4925.0], [884.0, 7944.0], [882.0, 7650.5], [878.0, 7242.0], [866.0, 10041.0], [864.0, 6473.0], [870.0, 8246.2], [868.0, 10460.5], [876.0, 4908.0], [874.0, 5707.0], [924.0, 9481.0], [926.0, 5782.0], [922.0, 10255.0], [920.0, 9147.5], [916.0, 6995.0], [914.0, 9197.0], [912.0, 8142.0], [910.0, 7189.0], [900.0, 7442.8], [896.0, 8353.666666666666], [908.0, 6922.0], [904.0, 7233.0], [956.0, 4766.0], [958.0, 8081.0], [954.0, 7546.0], [952.0, 9626.0], [950.0, 5145.0], [948.0, 6469.0], [944.0, 10808.0], [942.0, 8305.0], [930.0, 5806.0], [928.0, 5120.0], [934.0, 7747.0], [932.0, 3984.0], [940.0, 5098.0], [938.0, 5558.0], [936.0, 4709.0], [988.0, 5616.0], [990.0, 7221.5], [986.0, 8025.0], [984.0, 3706.0], [982.0, 8703.0], [980.0, 9063.0], [978.0, 5622.0], [976.0, 11157.0], [974.0, 9621.0], [960.0, 3810.0], [964.0, 10773.0], [962.0, 10905.5], [972.0, 7711.0], [970.0, 4670.0], [968.0, 5661.0], [998.0, 7809.5], [1018.0, 8124.0], [1022.0, 7724.0], [1016.0, 4862.0], [1014.0, 4427.0], [1010.0, 7142.0], [1006.0, 10631.0], [1002.0, 8666.0], [1000.0, 6450.0], [996.0, 6662.0], [992.0, 10132.0], [1080.0, 4650.0], [1084.0, 8789.0], [1076.0, 9399.0], [1072.0, 8470.0], [1064.0, 3991.0], [1060.0, 7180.0], [1056.0, 10865.5], [1052.0, 6630.0], [1032.0, 4785.0], [1028.0, 4365.0], [1048.0, 10552.0], [1044.0, 4095.0], [1040.0, 3751.0], [1144.0, 11191.0], [1148.0, 11161.0], [1124.0, 4092.0], [1120.0, 10299.0], [1128.0, 7849.0], [1140.0, 6596.0], [1136.0, 8697.0], [1100.0, 9617.0], [1088.0, 4057.0], [1116.0, 7996.0], [1112.0, 9528.0], [1108.0, 10175.0], [1104.0, 4227.0], [1132.0, 11123.0], [1204.0, 8486.0], [1212.0, 11112.0], [1184.0, 9549.0], [1208.0, 2810.0], [1152.0, 3045.0], [1164.0, 6165.0], [1180.0, 10031.0], [1176.0, 4083.0], [1172.0, 4736.0], [1196.0, 3355.0], [1192.0, 7053.0], [1272.0, 4356.0], [1248.0, 3974.0], [1252.0, 9931.0], [1256.0, 2825.0], [1276.0, 6045.0], [1268.0, 4578.0], [1264.0, 8787.0], [1220.0, 4953.0], [1224.0, 9925.0], [1228.0, 8702.0], [1240.0, 4892.0], [1236.0, 5010.0], [1232.0, 9859.0], [1260.0, 6100.0], [1332.0, 4595.0], [1312.0, 8522.0], [1316.0, 7105.0], [1336.0, 5740.0], [1328.0, 6564.0], [1292.0, 3858.0], [1284.0, 11143.0], [1280.0, 10186.0], [1308.0, 3981.6666666666665], [1300.0, 4694.5], [1296.0, 7829.0], [1324.0, 6560.0], [1400.0, 8768.0], [1404.0, 9413.0], [1384.0, 7128.0], [1376.0, 10899.0], [1380.0, 3646.0], [1396.0, 5165.0], [1352.0, 1966.0], [1348.0, 7520.0], [1344.0, 5104.5], [1372.0, 4066.0], [1368.0, 10526.5], [1364.0, 6684.666666666667], [1388.0, 6520.0], [1464.0, 4252.0], [1468.0, 2631.0], [1440.0, 7157.0], [1444.0, 3309.5], [1448.0, 7532.5], [1460.0, 8097.0], [1456.0, 6440.0], [1420.0, 9029.0], [1416.0, 3744.0], [1412.0, 2828.0], [1432.0, 4214.0], [1428.0, 4211.0], [1452.0, 9917.0], [1480.0, 10813.0], [1504.0, 6905.0], [1520.0, 4217.0], [1484.0, 9909.0], [1476.0, 7072.5], [1500.0, 3717.0], [1496.0, 10902.0], [1492.0, 10365.0], [1488.0, 11088.0], [1516.0, 2219.0], [1508.0, 5457.0], [1588.0, 10122.0], [1576.0, 5326.0], [1568.0, 1604.0], [1572.0, 6068.0], [1584.0, 10254.0], [1548.0, 4251.0], [1564.0, 10080.0], [1560.0, 3787.0], [1556.0, 2810.0], [1580.0, 8142.0], [1656.0, 1818.0], [1632.0, 2261.0], [1636.0, 1109.0], [1640.0, 4693.0], [1652.0, 3741.0], [1648.0, 2416.0], [1612.0, 1773.0], [1600.0, 5989.0], [1628.0, 9185.0], [1624.0, 7806.0], [1620.0, 2251.0], [1616.0, 4067.0], [1644.0, 10915.0], [1720.0, 1885.0], [1724.0, 8426.0], [1704.0, 11216.0], [1696.0, 1727.0], [1700.0, 2521.0], [1716.0, 6446.0], [1712.0, 1093.0], [1672.0, 1107.5], [1668.0, 9925.5], [1692.0, 1958.0], [1688.0, 8074.0], [1680.0, 1962.0], [1708.0, 5614.0], [1784.0, 3444.0], [1760.0, 1428.0], [1764.0, 2686.0], [1768.0, 1838.5], [1788.0, 1303.0], [1780.0, 1447.0], [1776.0, 2868.0], [1728.0, 1597.0], [1736.0, 1410.0], [1732.0, 3277.0], [1740.0, 7302.0], [1756.0, 1163.0], [1752.0, 1177.0], [1748.0, 1248.0], [1744.0, 10941.0], [1772.0, 5710.0], [1796.0, 6330.5], [1840.0, 2710.0], [1848.0, 4344.0], [1792.0, 2876.0], [1800.0, 1101.0], [1820.0, 1314.5], [1816.0, 1581.0], [1812.0, 1095.0], [1808.0, 1926.0], [1836.0, 4579.0], [1824.0, 1272.0], [1908.0, 3901.0], [1916.0, 2300.0], [1888.0, 9824.0], [1892.0, 1218.0], [1912.0, 9482.0], [1856.0, 11188.0], [1864.0, 1090.0], [1868.0, 1093.0], [1884.0, 1637.0], [1880.0, 1102.0], [1876.0, 1870.0], [1872.0, 2024.0], [1900.0, 1094.0], [1896.0, 9233.0], [1968.0, 2778.5], [1980.0, 3630.0], [1952.0, 8989.0], [1972.0, 1429.0], [1924.0, 1188.0], [1928.0, 1219.0], [1932.0, 1095.0], [1944.0, 1206.0], [1940.0, 1877.0], [1936.0, 9571.0], [1964.0, 9381.0], [1956.0, 5212.0], [1992.0, 3925.0], [2028.0, 1091.0], [2040.0, 2154.6666666666665], [1996.0, 2876.0], [1988.0, 1885.0], [1984.0, 1097.0], [2008.0, 7342.0], [2004.0, 1107.0], [2000.0, 1100.0], [2024.0, 1637.5], [2020.0, 1091.0], [2016.0, 9048.0], [2160.0, 1109.0], [2120.0, 1190.0], [2136.0, 1269.0], [2168.0, 1109.0], [2152.0, 5223.0], [2072.0, 1700.0], [2064.0, 6004.0], [2056.0, 1095.0], [2048.0, 9091.0], [2096.0, 2197.0], [2088.0, 1106.0], [2080.0, 1128.0], [2296.0, 4053.0], [2240.0, 1097.0], [2248.0, 1300.0], [2256.0, 1097.0], [2288.0, 1098.0], [2176.0, 4215.0], [2184.0, 8677.0], [2192.0, 1173.0], [2200.0, 2691.5], [2232.0, 4109.0], [2224.0, 1109.0], [2216.0, 5885.0], [2208.0, 1093.0], [2320.0, 10078.0], [2400.0, 1285.5], [2376.0, 1846.0], [2384.0, 3455.3333333333335], [2304.0, 1420.0], [2328.0, 1854.0], [2360.0, 1412.0], [2352.0, 1112.3333333333333], [2336.0, 11139.0], [2392.0, 4162.0], [2528.0, 1476.0], [2552.0, 1188.0], [2520.0, 3079.3333333333335], [2496.0, 1350.0], [2504.0, 1097.0], [2512.0, 1595.5], [2448.0, 3362.0], [2456.0, 1093.0], [2480.0, 1096.0], [2472.0, 3470.5], [2664.0, 1101.0], [2656.0, 1092.0], [2624.0, 2588.5], [2632.0, 1265.0], [2648.0, 1346.0], [2680.0, 1678.5], [2584.0, 1309.0], [2576.0, 1344.0], [2568.0, 10130.0], [2560.0, 1174.0], [2616.0, 3646.666666666667], [2608.0, 1485.0], [2600.0, 2131.0], [2592.0, 4840.0], [2792.0, 1422.0], [2808.0, 3347.3333333333335], [2760.0, 1118.0], [2752.0, 2374.0], [2800.0, 3583.75], [2784.0, 4614.666666666667], [2688.0, 1173.0], [2696.0, 1494.0], [2712.0, 1104.0], [2744.0, 1310.0], [2736.0, 1102.0], [2928.0, 6487.666666666666], [2936.0, 4957.0], [2880.0, 2200.090909090909], [2896.0, 4566.0], [2904.0, 1096.0], [2920.0, 4414.2], [2912.0, 1287.3333333333333], [2824.0, 2669.5], [2840.0, 2849.75], [2872.0, 2167.5], [2864.0, 2407.6666666666665], [2856.0, 1541.0], [2848.0, 10201.2], [2944.0, 1228.0], [3000.0, 2748.914867031202], [2960.0, 1429.8], [2968.0, 1137.0], [2992.0, 2016.142857142857], [2984.0, 3338.9090909090914], [2169.0, 2004.0], [2129.0, 2293.0], [2113.0, 4063.0], [2137.0, 1207.0], [2161.0, 1111.0], [2145.0, 6109.0], [2073.0, 1090.0], [2065.0, 1196.0], [2057.0, 10204.0], [2049.0, 1839.0], [2105.0, 2036.0], [2097.0, 11081.0], [2089.0, 1096.0], [2081.0, 1100.0], [2289.0, 11070.0], [2241.0, 11000.0], [2249.0, 6099.0], [2257.0, 1116.0], [2265.0, 5673.5], [2281.0, 6306.5], [2273.0, 1313.5], [2193.0, 10782.0], [2185.0, 1448.0], [2177.0, 1102.0], [2233.0, 2334.0], [2225.0, 1199.0], [2217.0, 7628.0], [2209.0, 1096.0], [2409.0, 3967.75], [2425.0, 3727.0], [2377.0, 4452.0], [2417.0, 1095.0], [2321.0, 1132.0], [2313.0, 2074.0], [2305.0, 1486.0], [2361.0, 1112.0], [2345.0, 4815.5], [2337.0, 1389.0], [2545.0, 5714.0], [2553.0, 1216.0], [2505.0, 1595.0], [2513.0, 1213.0], [2521.0, 1407.0], [2537.0, 1495.0], [2529.0, 10255.0], [2441.0, 6587.0], [2457.0, 1097.0], [2489.0, 1094.0], [2481.0, 3585.0], [2473.0, 1096.0], [2465.0, 1364.0], [2673.0, 5516.0], [2625.0, 1210.0], [2633.0, 1220.0], [2641.0, 2394.6666666666665], [2681.0, 1334.0], [2665.0, 6258.0], [2657.0, 6798.5], [2577.0, 1589.0], [2569.0, 4242.0], [2561.0, 2217.0], [2617.0, 1098.0], [2609.0, 1434.0], [2601.0, 1293.0], [2801.0, 1981.0], [2761.0, 6087.4], [2769.0, 3099.0], [2777.0, 2080.5], [2809.0, 5328.0], [2785.0, 2091.0], [2689.0, 1097.0], [2697.0, 1395.0], [2713.0, 7575.0], [2729.0, 1114.0], [2721.0, 1276.0], [2921.0, 2928.333333333333], [2881.0, 3804.0952380952376], [2889.0, 1206.3333333333333], [2897.0, 6396.0], [2905.0, 2412.0], [2937.0, 4959.75], [2913.0, 6003.75], [2817.0, 4863.0], [2825.0, 4063.333333333333], [2833.0, 1359.5714285714287], [2873.0, 2863.0], [2865.0, 1606.0], [2857.0, 3696.333333333333], [2849.0, 2584.333333333333], [2945.0, 3211.1428571428573], [2993.0, 4191.75], [2953.0, 4344.5], [2961.0, 1566.125], [2969.0, 2335.727272727273], [2985.0, 4888.8], [2977.0, 5060.0], [1081.0, 5687.0], [1085.0, 9481.0], [1077.0, 5632.0], [1073.0, 6063.0], [1069.0, 8496.5], [1065.0, 4232.0], [1057.0, 8377.0], [1053.0, 9484.0], [1029.0, 4515.0], [1025.0, 7569.0], [1037.0, 8873.25], [1033.0, 9063.0], [1045.0, 5610.0], [1041.0, 9863.0], [1145.0, 10599.0], [1149.0, 7090.0], [1121.0, 9597.0], [1125.0, 9376.0], [1129.0, 5083.0], [1137.0, 10323.0], [1101.0, 9400.0], [1097.0, 7304.0], [1089.0, 7737.0], [1117.0, 6427.0], [1113.0, 5269.0], [1109.0, 5589.0], [1105.0, 4039.0], [1133.0, 10880.0], [1201.0, 5969.0], [1213.0, 5904.0], [1189.0, 5164.5], [1209.0, 4661.0], [1165.0, 2177.0], [1161.0, 10267.0], [1157.0, 6055.0], [1153.0, 6994.0], [1181.0, 5631.0], [1177.0, 7051.0], [1173.0, 10018.0], [1169.0, 6712.5], [1265.0, 10519.0], [1277.0, 10064.0], [1249.0, 8855.0], [1253.0, 7277.0], [1269.0, 11099.0], [1221.0, 4410.0], [1225.0, 10007.0], [1229.0, 4537.0], [1241.0, 4448.0], [1237.0, 8927.0], [1233.0, 4230.0], [1261.0, 7890.0], [1257.0, 5318.0], [1337.0, 3651.0], [1341.0, 10561.0], [1313.0, 8608.0], [1321.0, 6635.0], [1317.0, 2632.0], [1333.0, 5505.0], [1329.0, 8588.0], [1293.0, 8593.0], [1289.0, 10188.5], [1285.0, 10097.0], [1281.0, 5937.0], [1309.0, 5784.0], [1305.0, 8546.0], [1301.0, 2957.0], [1297.0, 10382.0], [1401.0, 11227.0], [1405.0, 5428.0], [1377.0, 4681.0], [1381.0, 9513.0], [1385.0, 11377.0], [1397.0, 7364.0], [1393.0, 5294.5], [1353.0, 4402.0], [1349.0, 4062.0], [1345.0, 4276.0], [1373.0, 8327.0], [1365.0, 7052.0], [1361.0, 8949.5], [1389.0, 8712.0], [1465.0, 9317.0], [1469.0, 7704.0], [1445.0, 2281.0], [1441.0, 2927.0], [1449.0, 2326.0], [1461.0, 2023.0], [1457.0, 3933.0], [1421.0, 2692.0], [1417.0, 2236.0], [1413.0, 5826.0], [1409.0, 9693.333333333334], [1437.0, 7073.5], [1433.0, 2094.0], [1429.0, 6481.0], [1425.0, 5827.0], [1453.0, 3412.0], [1521.0, 4032.0], [1529.0, 5778.0], [1505.0, 2957.0], [1533.0, 6905.666666666666], [1525.0, 9074.0], [1473.0, 7155.333333333333], [1477.0, 3902.0], [1481.0, 9318.0], [1485.0, 5509.0], [1501.0, 1091.0], [1493.0, 10580.0], [1489.0, 10297.0], [1585.0, 10058.0], [1597.0, 4031.3333333333335], [1569.0, 4237.0], [1593.0, 2997.0], [1541.0, 4772.666666666667], [1565.0, 4254.0], [1561.0, 10716.0], [1557.0, 8014.0], [1553.0, 6963.333333333334], [1577.0, 11210.0], [1573.0, 4019.0], [1649.0, 1926.0], [1657.0, 1904.0], [1661.0, 2707.0], [1653.0, 4530.0], [1605.0, 10092.0], [1609.0, 9653.0], [1613.0, 4696.0], [1629.0, 6088.0], [1625.0, 5188.0], [1621.0, 6594.0], [1617.0, 8180.0], [1721.0, 8062.0], [1697.0, 10397.0], [1701.0, 2716.0], [1705.0, 3226.0], [1725.0, 1105.0], [1717.0, 3636.0], [1713.0, 1221.0], [1693.0, 10056.0], [1665.0, 5886.5], [1673.0, 6785.0], [1669.0, 1399.0], [1677.0, 5359.5], [1689.0, 1571.0], [1685.0, 6724.0], [1709.0, 2680.0], [1781.0, 7280.0], [1789.0, 7502.0], [1769.0, 1243.0], [1765.0, 8883.0], [1785.0, 1262.0], [1777.0, 8861.0], [1741.0, 1088.0], [1733.0, 2518.0], [1729.0, 6848.0], [1757.0, 1097.0], [1749.0, 1102.0], [1745.0, 3788.0], [1797.0, 5023.0], [1845.0, 1097.5], [1841.0, 1187.0], [1805.0, 4173.0], [1793.0, 1095.0], [1821.0, 2995.0], [1817.0, 3958.0], [1813.0, 1983.0], [1809.0, 3593.0], [1837.0, 2008.0], [1829.0, 3649.0], [1825.0, 1093.0], [1909.0, 1094.0], [1917.0, 1102.0], [1889.0, 1513.0], [1897.0, 9017.0], [1913.0, 10182.0], [1905.0, 1469.0], [1865.0, 8290.0], [1861.0, 3677.0], [1881.0, 2841.0], [1873.0, 1098.0], [1901.0, 2022.0], [1973.0, 2867.0], [1981.0, 2241.0], [1957.0, 1106.0], [1961.0, 3374.5], [1977.0, 1184.0], [1969.0, 1097.0], [1933.0, 8698.0], [1929.0, 7443.0], [1925.0, 5166.0], [1921.0, 1120.5], [1949.0, 2507.5], [1945.0, 1101.0], [1941.0, 1101.0], [1937.0, 8648.0], [1965.0, 1125.0], [2041.0, 3651.0], [2045.0, 5271.5], [2017.0, 4085.0], [2025.0, 1102.0], [2037.0, 5794.5], [2033.0, 10816.0], [1997.0, 1162.0], [2013.0, 5269.5], [2005.0, 11113.0], [2001.0, 5384.0], [2170.0, 3916.0], [2122.0, 1396.0], [2130.0, 1094.0], [2138.0, 1712.0], [2162.0, 2824.0], [2154.0, 4925.0], [2146.0, 1100.0], [2050.0, 1786.0], [2106.0, 5064.0], [2098.0, 1136.0], [2090.0, 1089.0], [2082.0, 7415.0], [2290.0, 10210.0], [2250.0, 1103.0], [2298.0, 1479.0], [2266.0, 7629.0], [2282.0, 3671.0], [2274.0, 1248.0], [2178.0, 3721.0], [2186.0, 1266.0], [2194.0, 1567.0], [2202.0, 5881.5], [2234.0, 5370.0], [2226.0, 1461.0], [2218.0, 1404.0], [2210.0, 5849.0], [2418.0, 4673.4], [2370.0, 2431.0], [2378.0, 10625.0], [2386.0, 2105.5], [2426.0, 1189.0], [2314.0, 10084.0], [2322.0, 1096.0], [2330.0, 3157.0], [2362.0, 11066.0], [2354.0, 1193.5], [2346.0, 1094.0], [2338.0, 1450.0], [2546.0, 3495.0], [2538.0, 6269.0], [2522.0, 7486.0], [2498.0, 2330.5], [2514.0, 1382.0], [2554.0, 1187.0], [2530.0, 1228.0], [2434.0, 3189.0], [2442.0, 1212.0], [2450.0, 1800.0], [2458.0, 1092.0], [2474.0, 1329.0], [2466.0, 2430.428571428571], [2658.0, 2307.0], [2682.0, 1206.0], [2650.0, 1947.6666666666667], [2674.0, 1519.0], [2586.0, 3028.0], [2578.0, 1119.0], [2570.0, 10319.0], [2562.0, 1222.5], [2618.0, 1101.0], [2610.0, 6476.0], [2602.0, 1251.0], [2594.0, 1387.3333333333333], [2786.0, 5086.666666666667], [2754.0, 1494.25], [2778.0, 1120.0], [2794.0, 2827.666666666667], [2690.0, 1361.0], [2706.0, 5360.0], [2714.0, 2551.0], [2746.0, 2423.6666666666665], [2722.0, 43.5], [2938.0, 1747.6666666666665], [2930.0, 3295.0], [2882.0, 4910.428571428572], [2890.0, 7812.5], [2898.0, 1092.0], [2906.0, 2789.0], [2922.0, 1366.0], [2818.0, 1790.5], [2826.0, 585.5], [2834.0, 5347.2], [2842.0, 1096.0], [2874.0, 1869.5], [2866.0, 2910.4], [2858.0, 1625.25], [2946.0, 1453.0], [2954.0, 4361.272727272728], [2962.0, 1980.4999999999998], [2970.0, 1626.6666666666667], [2994.0, 1906.0833333333337], [2978.0, 568.5], [2163.0, 10105.0], [2115.0, 10087.0], [2123.0, 1108.0], [2131.0, 1090.0], [2139.0, 11112.0], [2155.0, 11017.0], [2147.0, 1104.0], [2075.0, 4479.5], [2067.0, 1458.5], [2059.0, 2800.5], [2051.0, 1099.0], [2107.0, 1093.0], [2099.0, 1369.0], [2091.0, 10034.0], [2083.0, 1738.0], [2283.0, 6223.0], [2291.0, 1106.0], [2243.0, 5329.5], [2251.0, 1448.0], [2267.0, 1401.0], [2275.0, 1927.0], [2203.0, 10491.0], [2187.0, 1096.0], [2179.0, 3814.0], [2235.0, 1103.0], [2227.0, 8589.0], [2219.0, 1098.0], [2211.0, 1756.0], [2315.0, 3690.0], [2387.0, 1099.0], [2411.0, 1473.0], [2331.0, 1189.0], [2307.0, 1097.0], [2363.0, 1348.0], [2347.0, 10794.0], [2339.0, 1695.0], [2395.0, 1222.5], [2547.0, 1094.0], [2499.0, 3690.0], [2507.0, 3622.5], [2515.0, 1720.0], [2555.0, 1291.0], [2539.0, 1411.0], [2531.0, 1095.0], [2443.0, 1362.0], [2451.0, 1469.0], [2491.0, 1373.5], [2483.0, 6198.5], [2475.0, 1579.0], [2467.0, 6219.0], [2675.0, 1246.0], [2667.0, 1678.6666666666667], [2627.0, 4918.5], [2635.0, 4296.0], [2643.0, 1420.5], [2651.0, 9153.5], [2683.0, 1353.0], [2659.0, 1104.0], [2587.0, 1702.0], [2579.0, 9071.0], [2563.0, 1283.0], [2619.0, 2456.0], [2611.0, 7954.0], [2595.0, 2558.0], [2811.0, 4903.333333333333], [2795.0, 3521.5], [2755.0, 1243.5], [2763.0, 4559.6], [2771.0, 3764.333333333334], [2779.0, 1448.25], [2803.0, 1864.0], [2787.0, 4353.666666666667], [2691.0, 4548.0], [2699.0, 5603.5], [2715.0, 1094.0], [2739.0, 1779.5], [2731.0, 2445.5], [2723.0, 11221.0], [2915.0, 3174.0], [2931.0, 5303.0], [2883.0, 1103.0], [2891.0, 1125.6666666666667], [2899.0, 3816.0], [2907.0, 4714.5], [2819.0, 1115.0], [2827.0, 1103.0], [2843.0, 1604.0], [2875.0, 989.75], [2867.0, 1234.0], [2851.0, 4558.333333333333], [2947.0, 2072.5714285714284], [2963.0, 6360.666666666667], [2995.0, 2253.230769230769], [2987.0, 1173.3333333333335], [2979.0, 6354.0], [541.0, 10938.0], [543.0, 8578.0], [539.0, 8374.0], [537.0, 9029.5], [535.0, 6457.0], [531.0, 10645.0], [529.0, 8528.0], [525.0, 8245.0], [515.0, 8955.0], [513.0, 8759.0], [519.0, 10918.0], [517.0, 5730.0], [523.0, 5550.0], [521.0, 8527.0], [573.0, 10315.0], [575.0, 6673.0], [571.0, 9317.333333333334], [551.0, 7544.0], [545.0, 9504.0], [565.0, 8877.0], [563.0, 8730.0], [561.0, 6006.0], [559.0, 10363.5], [557.0, 10534.0], [555.0, 8355.0], [553.0, 10443.0], [605.0, 5168.0], [607.0, 8768.5], [603.0, 8546.0], [601.0, 6125.0], [599.0, 5357.0], [597.0, 10338.0], [593.0, 9834.0], [591.0, 6266.0], [577.0, 8534.0], [583.0, 8670.5], [581.0, 10285.0], [589.0, 9506.5], [587.0, 10310.0], [585.0, 6056.0], [635.0, 9665.0], [639.0, 10509.0], [633.0, 5104.0], [615.0, 10442.0], [613.0, 6479.0], [611.0, 9543.0], [609.0, 9070.0], [631.0, 7138.0], [629.0, 10633.0], [625.0, 5074.0], [623.0, 7918.0], [621.0, 10965.0], [619.0, 8899.0], [617.0, 7049.0], [647.0, 10732.0], [669.0, 10072.0], [671.0, 8503.2], [667.0, 6077.0], [645.0, 9149.0], [641.0, 8872.0], [659.0, 4870.0], [657.0, 5946.0], [655.0, 8411.0], [653.0, 8021.0], [651.0, 8120.0], [649.0, 6259.0], [701.0, 9129.0], [703.0, 10789.0], [699.0, 6565.0], [697.0, 10239.0], [695.0, 8265.5], [693.0, 5483.0], [691.0, 10893.0], [689.0, 8717.0], [685.0, 5512.0], [679.0, 5923.0], [677.0, 6417.75], [683.0, 5267.0], [681.0, 6591.5], [731.0, 6832.0], [735.0, 4904.0], [729.0, 6487.0], [711.0, 8820.0], [709.0, 7042.0], [707.0, 4833.0], [727.0, 7671.5], [725.0, 5669.0], [721.0, 10920.0], [719.0, 5371.0], [717.0, 8686.0], [715.0, 6174.0], [713.0, 9999.0], [765.0, 8384.0], [763.0, 5403.0], [743.0, 6800.0], [741.0, 7146.0], [739.0, 5657.0], [737.0, 7676.0], [759.0, 4914.0], [757.0, 8154.5], [755.0, 8039.0], [753.0, 7839.5], [751.0, 6493.0], [747.0, 8572.0], [745.0, 5207.0], [793.0, 8381.0], [799.0, 5376.0], [797.0, 5410.0], [795.0, 9861.0], [789.0, 8948.0], [783.0, 7991.0], [771.0, 8624.0], [769.0, 9419.0], [781.0, 6215.0], [777.0, 9409.0], [775.0, 8530.0], [773.0, 5506.0], [827.0, 4393.0], [831.0, 7842.0], [825.0, 8673.0], [805.0, 9831.0], [803.0, 4999.0], [801.0, 6483.0], [823.0, 8773.0], [821.0, 6884.0], [819.0, 10084.5], [817.0, 10037.0], [815.0, 6395.0], [813.0, 5061.0], [811.0, 5709.0], [809.0, 7709.0], [853.0, 7855.0], [851.0, 7124.0], [849.0, 10699.0], [843.0, 10959.0], [841.0, 8611.0], [839.0, 9331.0], [835.0, 10160.0], [833.0, 5471.0], [891.0, 7980.0], [895.0, 5886.0], [889.0, 6658.0], [885.0, 8270.666666666666], [883.0, 9936.0], [881.0, 8332.0], [875.0, 4258.0], [873.0, 4508.0], [869.0, 10276.0], [927.0, 9047.0], [925.0, 6793.0], [923.0, 4455.0], [921.0, 7223.0], [917.0, 6200.0], [913.0, 8059.5], [907.0, 9698.0], [897.0, 4975.0], [957.0, 7722.0], [959.0, 6603.0], [955.0, 10030.0], [953.0, 6999.0], [951.0, 4629.0], [949.0, 8463.0], [947.0, 9702.5], [945.0, 9150.0], [943.0, 7397.0], [929.0, 9134.0], [933.0, 9965.0], [931.0, 5672.0], [941.0, 5095.0], [939.0, 4658.0], [937.0, 9118.0], [991.0, 8216.0], [987.0, 8296.0], [967.0, 8073.5], [965.0, 4799.0], [963.0, 4486.0], [983.0, 8678.0], [981.0, 4967.0], [979.0, 10326.0], [977.0, 6303.0], [975.0, 9812.0], [973.0, 6586.0], [971.0, 5652.0], [969.0, 4616.0], [1021.0, 9941.5], [1023.0, 4607.0], [1019.0, 6579.0], [1017.0, 4017.0], [1015.0, 5804.0], [1013.0, 5754.5], [1011.0, 8110.0], [1009.0, 6732.5], [1007.0, 6235.0], [993.0, 10156.0], [999.0, 8960.0], [995.0, 6163.0], [1005.0, 7787.5], [1003.0, 4519.0], [1001.0, 11001.0], [1082.0, 4087.0], [1086.0, 10651.0], [1078.0, 4085.0], [1074.0, 5763.0], [1070.0, 10787.0], [1066.0, 5635.0], [1062.0, 8071.0], [1058.0, 6245.0], [1054.0, 9550.0], [1030.0, 4611.0], [1026.0, 8020.0], [1050.0, 6774.0], [1046.0, 4791.0], [1042.0, 10154.0], [1138.0, 4369.0], [1150.0, 5081.0], [1126.0, 7790.0], [1142.0, 7439.0], [1094.0, 7007.333333333333], [1090.0, 8704.0], [1118.0, 10214.0], [1114.0, 7180.0], [1110.0, 4055.0], [1106.0, 9266.0], [1130.0, 4474.0], [1206.0, 8482.5], [1214.0, 5132.0], [1186.0, 7358.0], [1210.0, 8843.0], [1182.0, 8743.0], [1154.0, 4560.0], [1162.0, 3937.0], [1158.0, 4167.0], [1166.0, 9306.0], [1178.0, 5618.0], [1170.0, 6984.0], [1194.0, 7815.0], [1190.0, 6358.0], [1274.0, 5948.5], [1278.0, 3013.0], [1250.0, 6419.0], [1254.0, 6927.0], [1270.0, 5938.0], [1266.0, 4138.0], [1246.0, 8424.0], [1218.0, 7370.333333333333], [1222.0, 7205.0], [1226.0, 5731.0], [1230.0, 5500.0], [1242.0, 8181.0], [1238.0, 4063.0], [1234.0, 8435.0], [1258.0, 8653.0], [1330.0, 5878.0], [1338.0, 4082.0], [1342.0, 7483.5], [1314.0, 4002.0], [1318.0, 8511.0], [1334.0, 8327.0], [1294.0, 4024.0], [1290.0, 4536.0], [1286.0, 9158.0], [1282.0, 5654.0], [1310.0, 3935.0], [1302.0, 3638.0], [1298.0, 7844.0], [1326.0, 6312.0], [1358.0, 5423.0], [1406.0, 3854.0], [1382.0, 3212.0], [1402.0, 10489.0], [1354.0, 4269.0], [1350.0, 3737.0], [1346.0, 5082.0], [1374.0, 2096.0], [1370.0, 7221.5], [1366.0, 11205.0], [1390.0, 2229.0], [1386.0, 8644.0], [1458.0, 6458.0], [1470.0, 11119.0], [1442.0, 3357.0], [1446.0, 9423.0], [1450.0, 5943.0], [1466.0, 9487.0], [1418.0, 9583.0], [1414.0, 4345.0], [1410.0, 5958.0], [1438.0, 10408.0], [1434.0, 9603.0], [1430.0, 9414.0], [1426.0, 3579.0], [1454.0, 9426.0], [1486.0, 7724.0], [1522.0, 6934.0], [1510.0, 3908.5], [1534.0, 5258.0], [1482.0, 6355.0], [1478.0, 3794.0], [1474.0, 4413.0], [1502.0, 6464.0], [1494.0, 6426.0], [1518.0, 9007.0], [1514.0, 5803.333333333334], [1506.0, 4171.0], [1586.0, 10116.0], [1590.0, 3367.666666666667], [1594.0, 8365.666666666666], [1570.0, 10769.0], [1574.0, 6886.0], [1550.0, 8914.5], [1546.0, 5981.2], [1538.0, 7861.666666666667], [1566.0, 2793.0], [1562.0, 7908.0], [1558.0, 6816.0], [1554.0, 8277.0], [1582.0, 4275.5], [1578.0, 2817.0], [1658.0, 11214.0], [1650.0, 11174.0], [1662.0, 6767.0], [1634.0, 6716.0], [1638.0, 5820.0], [1642.0, 5918.5], [1654.0, 6007.0], [1610.0, 5968.0], [1630.0, 2281.0], [1626.0, 4430.0], [1622.0, 11439.0], [1618.0, 11049.0], [1646.0, 7121.0], [1678.0, 11172.0], [1726.0, 10736.0], [1698.0, 8697.0], [1702.0, 6134.0], [1670.0, 2673.0], [1666.0, 2363.0], [1694.0, 5507.0], [1690.0, 3875.0], [1686.0, 1095.0], [1682.0, 3416.5], [1710.0, 6455.0], [1706.0, 2237.0], [1786.0, 11252.0], [1790.0, 8109.0], [1762.0, 3559.0], [1766.0, 1679.0], [1770.0, 3914.0], [1782.0, 6409.0], [1778.0, 3921.0], [1758.0, 8433.0], [1730.0, 1101.0], [1738.0, 5362.5], [1754.0, 4111.0], [1750.0, 1099.0], [1746.0, 2618.0], [1774.0, 4734.0], [1794.0, 1250.0], [1830.0, 1101.0], [1854.0, 4761.666666666667], [1846.0, 9840.0], [1822.0, 1096.0], [1798.0, 1671.0], [1806.0, 3235.0], [1818.0, 1091.0], [1814.0, 2020.0], [1810.0, 1099.0], [1838.0, 1099.0], [1834.0, 1336.3333333333333], [1826.0, 2604.0], [1914.0, 1882.0], [1918.0, 3682.0], [1890.0, 11070.0], [1894.0, 6327.0], [1910.0, 1097.0], [1886.0, 5964.5], [1858.0, 1312.5], [1862.0, 4296.0], [1870.0, 1101.0], [1882.0, 4065.0], [1874.0, 1214.0], [1902.0, 1097.0], [1898.0, 6499.0], [1970.0, 1732.0], [1982.0, 1109.0], [1954.0, 6306.5], [1974.0, 1300.0], [1950.0, 1162.0], [1922.0, 1132.0], [1926.0, 5584.0], [1930.0, 7706.0], [1934.0, 1133.0], [1966.0, 1109.0], [1958.0, 1515.0], [1998.0, 1097.0], [2022.0, 1358.0], [2042.0, 2990.0], [2026.0, 6759.0], [2030.0, 1254.0], [2034.0, 2505.0], [1994.0, 5428.0], [1990.0, 1311.5], [1986.0, 1647.5], [2014.0, 3094.0], [2010.0, 1104.0], [2006.0, 1102.0], [2002.0, 8707.0], [2164.0, 7047.0], [2116.0, 1921.0], [2124.0, 1615.0], [2132.0, 5106.0], [2140.0, 1203.0], [2156.0, 1095.0], [2068.0, 6008.0], [2060.0, 10562.0], [2052.0, 10923.0], [2100.0, 9556.0], [2084.0, 1162.0], [2276.0, 1321.0], [2284.0, 1090.0], [2292.0, 2947.0], [2244.0, 3042.0], [2260.0, 1097.3333333333333], [2268.0, 1642.0], [2180.0, 2156.0], [2188.0, 11122.0], [2196.0, 4292.5], [2236.0, 1097.0], [2228.0, 1147.0], [2212.0, 1707.0], [2404.0, 3044.5], [2372.0, 3418.25], [2380.0, 1098.0], [2412.0, 1310.0], [2324.0, 5446.5], [2332.0, 1101.0], [2364.0, 3646.0], [2356.0, 1234.0], [2348.0, 1313.0], [2340.0, 1118.0], [2396.0, 1337.0], [2556.0, 1115.0], [2548.0, 11154.0], [2524.0, 3457.5], [2500.0, 1105.0], [2508.0, 10903.0], [2516.0, 3954.0], [2540.0, 1095.0], [2532.0, 1351.0], [2436.0, 3844.5], [2444.0, 1699.0], [2452.0, 11157.0], [2484.0, 5639.0], [2476.0, 1863.0], [2468.0, 9283.0], [2668.0, 6264.0], [2676.0, 2810.0], [2636.0, 2410.0], [2652.0, 3795.0], [2660.0, 2733.5], [2588.0, 2022.0], [2580.0, 1110.0], [2572.0, 5190.5], [2564.0, 5983.5], [2620.0, 1339.0], [2612.0, 5014.0], [2796.0, 3823.6666666666665], [2804.0, 1098.0], [2756.0, 1435.0], [2764.0, 1183.3333333333333], [2780.0, 1093.0], [2788.0, 3346.5], [2700.0, 1188.0], [2708.0, 1145.5], [2748.0, 1505.0], [2740.0, 1095.0], [2732.0, 1813.0], [2932.0, 5828.5], [2924.0, 2245.0], [2884.0, 3507.4285714285716], [2892.0, 1000.3333333333334], [2900.0, 5541.0], [2908.0, 763.0], [2940.0, 2868.833333333333], [2916.0, 2739.1666666666665], [2820.0, 6353.0], [2836.0, 1236.0], [2844.0, 1126.25], [2876.0, 2459.6666666666665], [2868.0, 5682.111111111111], [2860.0, 3724.5], [2852.0, 4672.0], [2948.0, 2432.8571428571427], [2964.0, 3037.3], [2972.0, 5105.666666666667], [2996.0, 759.5], [2988.0, 1328.0], [2980.0, 3045.176470588235], [2165.0, 1101.0], [2117.0, 10982.0], [2125.0, 1100.0], [2133.0, 1324.0], [2141.0, 1827.0], [2173.0, 1621.6666666666667], [2157.0, 1098.0], [2149.0, 6449.5], [2077.0, 2701.5], [2069.0, 3966.0], [2061.0, 1089.0], [2053.0, 1099.0], [2109.0, 2929.0], [2101.0, 1194.0], [2093.0, 6482.0], [2301.0, 1947.3333333333333], [2293.0, 1489.0], [2245.0, 4114.0], [2253.0, 9520.0], [2261.0, 1106.0], [2269.0, 1593.0], [2285.0, 7529.0], [2277.0, 8411.0], [2205.0, 1451.5], [2197.0, 3827.0], [2189.0, 1101.0], [2181.0, 1625.0], [2237.0, 1096.0], [2229.0, 1256.0], [2221.0, 1756.5], [2213.0, 1364.0], [2421.0, 2306.3333333333335], [2429.0, 10001.0], [2373.0, 4828.0], [2381.0, 1312.0], [2389.0, 3427.0], [2333.0, 2534.0], [2325.0, 1617.0], [2309.0, 1756.0], [2357.0, 1096.0], [2349.0, 1097.0], [2549.0, 1228.0], [2501.0, 1437.0], [2509.0, 1720.0], [2517.0, 1241.0], [2525.0, 6051.0], [2557.0, 1152.0], [2541.0, 1305.0], [2533.0, 1387.0], [2437.0, 1097.0], [2445.0, 1723.0], [2453.0, 1237.0], [2477.0, 1094.0], [2685.0, 2113.5], [2629.0, 1238.0], [2637.0, 42.0], [2645.0, 1140.5], [2669.0, 2211.0], [2589.0, 1662.0], [2581.0, 3690.0], [2573.0, 10073.0], [2565.0, 2882.0], [2613.0, 1097.0], [2605.0, 2215.666666666667], [2597.0, 4301.0], [2805.0, 956.5], [2797.0, 5845.0], [2757.0, 1892.75], [2773.0, 1149.8], [2781.0, 1240.0], [2813.0, 3895.2], [2789.0, 2929.0], [2693.0, 3320.0], [2709.0, 911.3333333333333], [2717.0, 3075.0], [2741.0, 1186.0], [2733.0, 4900.5], [2725.0, 3323.0], [2933.0, 6529.0], [2925.0, 7176.0], [2885.0, 2879.714285714286], [2893.0, 5078.5], [2901.0, 1987.857142857143], [2909.0, 2243.0], [2941.0, 1395.6666666666667], [2917.0, 2916.0], [2821.0, 5873.0], [2829.0, 4379.666666666667], [2837.0, 2212.714285714286], [2845.0, 4018.3333333333335], [2877.0, 2885.0], [2869.0, 4349.0], [2853.0, 6066.0], [2949.0, 2086.0], [2997.0, 3609.8999999999996], [2957.0, 2559.15], [2965.0, 1830.5000000000002], [2989.0, 1052.25], [1083.0, 3394.0], [1087.0, 5368.0], [1079.0, 5694.0], [1075.0, 11397.0], [1071.0, 11065.0], [1067.0, 8802.0], [1063.0, 5789.0], [1059.0, 8356.0], [1051.0, 4504.0], [1027.0, 5293.0], [1039.0, 8009.5], [1031.0, 4176.0], [1047.0, 8069.0], [1043.0, 10982.0], [1143.0, 7614.0], [1139.0, 10323.0], [1151.0, 4060.0], [1123.0, 6948.0], [1127.0, 3425.0], [1131.0, 9760.0], [1147.0, 8780.0], [1103.0, 7893.0], [1099.0, 7120.0], [1091.0, 4195.0], [1115.0, 6132.0], [1111.0, 9592.0], [1107.0, 10074.0], [1135.0, 4933.5], [1207.0, 4632.0], [1203.0, 4778.5], [1215.0, 6998.0], [1187.0, 6673.0], [1211.0, 6124.0], [1167.0, 9471.0], [1163.0, 10254.0], [1155.0, 4640.0], [1183.0, 4167.0], [1179.0, 7354.0], [1175.0, 6044.5], [1171.0, 8172.0], [1199.0, 8530.25], [1191.0, 8733.0], [1267.0, 3536.0], [1275.0, 7411.0], [1251.0, 4686.0], [1271.0, 5824.0], [1247.0, 11013.0], [1219.0, 10170.0], [1223.0, 3668.0], [1227.0, 5016.0], [1231.0, 3028.0], [1243.0, 11131.0], [1239.0, 4646.0], [1259.0, 5380.0], [1255.0, 9989.0], [1331.0, 4144.0], [1339.0, 2905.0], [1315.0, 10945.0], [1335.0, 3008.0], [1291.0, 8526.0], [1287.0, 10097.0], [1283.0, 3800.0], [1311.0, 5947.0], [1327.0, 3016.0], [1323.0, 6573.0], [1395.0, 4811.5], [1403.0, 5389.0], [1379.0, 6516.0], [1383.0, 9956.0], [1387.0, 10348.0], [1399.0, 5953.0], [1359.0, 4579.0], [1355.0, 2064.0], [1351.0, 2639.0], [1347.0, 10643.0], [1375.0, 2350.0], [1371.0, 6058.0], [1391.0, 8358.0], [1459.0, 6456.0], [1467.0, 10128.0], [1451.0, 10370.0], [1463.0, 3253.5], [1423.0, 8134.5], [1419.0, 4217.0], [1415.0, 3957.0], [1411.0, 5485.0], [1439.0, 8665.0], [1435.0, 11034.0], [1431.0, 7070.0], [1427.0, 8773.0], [1455.0, 2965.0], [1527.0, 3709.0], [1535.0, 1099.0], [1507.0, 2908.0], [1531.0, 6631.0], [1523.0, 2198.0], [1503.0, 1088.0], [1479.0, 10202.0], [1483.0, 2407.0], [1487.0, 1831.0], [1499.0, 3395.0], [1495.0, 10741.0], [1491.0, 10187.0], [1519.0, 10255.0], [1515.0, 4274.5], [1567.0, 9947.0], [1575.0, 7567.0], [1563.0, 3118.0], [1559.0, 5947.0], [1555.0, 9147.0], [1583.0, 1098.0], [1579.0, 10946.0], [1571.0, 1097.0], [1655.0, 6605.0], [1663.0, 7250.0], [1635.0, 10540.0], [1659.0, 1633.0], [1651.0, 1096.0], [1631.0, 11057.0], [1603.0, 2482.6666666666665], [1607.0, 2671.3333333333335], [1611.0, 2617.5], [1615.0, 6595.0], [1627.0, 1093.0], [1623.0, 9990.0], [1619.0, 3535.0], [1647.0, 5675.0], [1643.0, 8878.0], [1723.0, 1348.5], [1727.0, 1592.0], [1699.0, 2494.0], [1703.0, 2748.0], [1719.0, 3701.0], [1715.0, 4014.0], [1679.0, 8994.0], [1691.0, 1687.0], [1687.0, 1114.0], [1683.0, 1096.0], [1711.0, 1105.0], [1783.0, 2146.0], [1791.0, 1100.0], [1763.0, 1189.0], [1787.0, 1610.0], [1743.0, 1509.0], [1739.0, 8042.0], [1735.0, 7214.0], [1731.0, 1101.0], [1759.0, 2157.0], [1755.0, 2477.0], [1751.0, 5416.0], [1747.0, 1555.0], [1775.0, 1099.0], [1771.0, 1139.0], [1807.0, 1094.0], [1851.0, 7062.0], [1855.0, 7402.0], [1843.0, 1132.0], [1803.0, 1406.3333333333333], [1799.0, 4334.0], [1823.0, 2611.0], [1815.0, 1103.0], [1811.0, 1103.0], [1831.0, 1098.0], [1915.0, 1099.0], [1919.0, 1212.0], [1895.0, 11400.0], [1891.0, 4068.0], [1899.0, 6167.0], [1911.0, 1095.0], [1871.0, 1124.0], [1867.0, 2313.0], [1863.0, 11178.0], [1859.0, 10147.0], [1887.0, 1097.0], [1883.0, 4393.0], [1879.0, 1558.6666666666667], [1875.0, 1921.0], [1903.0, 1257.0], [1979.0, 1813.5], [1983.0, 5620.0], [1955.0, 1097.0], [1959.0, 1186.0], [1975.0, 3574.0], [1935.0, 1546.0], [1931.0, 11175.0], [1927.0, 3412.0], [1923.0, 1848.0], [1951.0, 1111.0], [1947.0, 1782.0], [1943.0, 6333.5], [1939.0, 3049.0], [1963.0, 3639.5], [2035.0, 1265.0], [2047.0, 1898.5], [2019.0, 3771.0], [2027.0, 1777.0], [2031.0, 1135.0], [2043.0, 1097.0], [1999.0, 1095.0], [1995.0, 1298.0], [1991.0, 3191.0], [1987.0, 1109.0], [2015.0, 8722.0], [2011.0, 3311.0], [2007.0, 1458.0], [2003.0, 3092.0], [2166.0, 1260.0], [2158.0, 1099.0], [2126.0, 11651.0], [2174.0, 5074.0], [2118.0, 8266.0], [2134.0, 7226.0], [2142.0, 1162.0], [2150.0, 2225.0], [2078.0, 1173.0], [2070.0, 9933.0], [2062.0, 1102.0], [2054.0, 2063.0], [2110.0, 1252.0], [2102.0, 7861.0], [2094.0, 3987.0], [2086.0, 1232.0], [2286.0, 2771.0], [2246.0, 5100.0], [2254.0, 1170.5], [2262.0, 1595.0], [2270.0, 1100.0], [2294.0, 1100.0], [2278.0, 6264.0], [2238.0, 1092.0], [2182.0, 2065.0], [2198.0, 1100.0], [2206.0, 3698.0], [2230.0, 8884.0], [2222.0, 1302.0], [2214.0, 5973.0], [2406.0, 1372.5], [2430.0, 9805.0], [2374.0, 1096.0], [2390.0, 1415.0], [2422.0, 4236.0], [2366.0, 1729.0], [2310.0, 1090.0], [2318.0, 1109.0], [2326.0, 9467.0], [2334.0, 1094.0], [2358.0, 2625.0], [2350.0, 6511.0], [2342.0, 2817.5], [2558.0, 1424.0], [2550.0, 1597.0], [2518.0, 1097.0], [2526.0, 1130.0], [2502.0, 6327.0], [2510.0, 1111.0], [2542.0, 1101.0], [2534.0, 1701.0], [2494.0, 1342.0], [2438.0, 6181.0], [2446.0, 1775.0], [2454.0, 10555.0], [2462.0, 6407.0], [2478.0, 1094.0], [2470.0, 9748.5], [2662.0, 1243.0], [2590.0, 1327.0], [2630.0, 1098.0], [2646.0, 8106.0], [2654.0, 4923.0], [2670.0, 958.0], [2582.0, 1424.0], [2574.0, 1144.0], [2566.0, 1312.0], [2622.0, 4713.5], [2606.0, 6800.5], [2598.0, 2207.0], [2798.0, 1136.0], [2814.0, 1350.0], [2758.0, 4292.333333333334], [2774.0, 1352.0], [2790.0, 42.0], [2702.0, 2675.5], [2710.0, 1440.0], [2718.0, 1392.0], [2750.0, 1505.3333333333333], [2742.0, 1315.0], [2926.0, 1327.0], [2886.0, 4686.0], [2902.0, 1665.0], [2934.0, 3579.8], [2918.0, 5435.666666666666], [2846.0, 5607.5], [2870.0, 1138.0], [2862.0, 3170.8], [2854.0, 4397.333333333333], [2958.0, 1389.0], [2950.0, 1226.5], [2966.0, 2965.9999999999995], [2974.0, 2302.1666666666665], [2998.0, 2157.625], [2990.0, 3076.8888888888887], [2167.0, 1685.0], [2159.0, 3087.0], [2175.0, 1353.0], [2127.0, 6803.0], [2135.0, 10585.0], [2143.0, 1177.0], [2079.0, 1095.0], [2071.0, 6188.0], [2063.0, 2737.0], [2055.0, 11069.0], [2111.0, 1096.0], [2103.0, 4096.0], [2095.0, 7381.0], [2087.0, 1856.0], [2295.0, 1721.0], [2255.0, 3604.0], [2247.0, 1706.0], [2263.0, 7842.5], [2271.0, 1501.0], [2287.0, 2716.0], [2279.0, 1092.0], [2207.0, 5906.0], [2191.0, 4469.5], [2183.0, 8734.0], [2239.0, 4345.0], [2231.0, 1100.0], [2223.0, 11055.0], [2215.0, 1097.0], [2335.0, 1360.0], [2327.0, 7013.0], [2375.0, 1405.0], [2391.0, 1770.0], [2423.0, 2311.0], [2319.0, 1893.0], [2311.0, 5542.333333333334], [2367.0, 5217.0], [2359.0, 1217.0], [2343.0, 3408.0], [2399.0, 1537.0], [2551.0, 1095.0], [2559.0, 8546.0], [2503.0, 1307.0], [2527.0, 1097.0], [2543.0, 5012.0], [2535.0, 2652.0], [2495.0, 1400.0], [2439.0, 1095.0], [2447.0, 6434.0], [2455.0, 1146.0], [2487.0, 4465.0], [2479.0, 1470.0], [2671.0, 1281.0], [2679.0, 8446.0], [2687.0, 1171.5], [2631.0, 11009.0], [2639.0, 6251.0], [2663.0, 1147.0], [2591.0, 1278.0], [2575.0, 1225.0], [2567.0, 6917.5], [2607.0, 1482.0], [2599.0, 1098.0], [2815.0, 1102.0], [2799.0, 1139.0], [2759.0, 6176.0], [2767.0, 6246.333333333333], [2775.0, 1160.5], [2783.0, 3526.25], [2791.0, 3637.5], [2751.0, 2768.0], [2695.0, 1953.0], [2703.0, 1297.0], [2711.0, 722.0], [2719.0, 1103.0], [2743.0, 1991.0], [2735.0, 1423.0], [2927.0, 3285.727272727273], [2895.0, 1114.5], [2943.0, 4928.666666666667], [2887.0, 1414.0], [2903.0, 1094.0], [2911.0, 4412.0], [2919.0, 2487.75], [2879.0, 2747.6666666666665], [2823.0, 3040.5], [2831.0, 2386.5], [2839.0, 2687.0], [2871.0, 3989.4285714285716], [2863.0, 1435.0], [2855.0, 1109.5], [2959.0, 3073.75], [2951.0, 3385.75], [2967.0, 1483.0], [2975.0, 4669.0], [2999.0, 4256.666666666666], [2991.0, 2274.0], [2983.0, 65.66666666666667]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2984.574681389895, 2780.7061124992365]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 130881.1, "minX": 1.68416238E12, "maxY": 670433.15, "series": [{"data": [[1.68416262E12, 670433.15], [1.68416244E12, 627486.1166666667], [1.68416256E12, 552971.1333333333], [1.68416238E12, 492656.85], [1.68416268E12, 149800.23333333334], [1.6841625E12, 590982.8333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68416262E12, 589969.5], [1.68416244E12, 541380.05], [1.68416256E12, 483233.8], [1.68416238E12, 406191.15], [1.68416268E12, 130881.1], [1.6841625E12, 514021.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416268E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2246.4541913251696, "minX": 1.68416238E12, "maxY": 3375.124118379225, "series": [{"data": [[1.68416262E12, 2749.389614971606], [1.68416244E12, 2926.2892629678395], [1.68416256E12, 2246.4541913251696], [1.68416238E12, 2944.4305524886327], [1.68416268E12, 3375.124118379225], [1.6841625E12, 2883.6782281066266]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416268E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2245.917016255905, "minX": 1.68416238E12, "maxY": 3374.9078965564836, "series": [{"data": [[1.68416262E12, 2749.1252646111184], [1.68416244E12, 2926.0021062837486], [1.68416256E12, 2245.917016255905], [1.68416238E12, 2824.053217329863], [1.68416268E12, 3374.9078965564836], [1.6841625E12, 2883.41506743192]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416268E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.01327617203706263, "minX": 1.68416238E12, "maxY": 471.8964139027481, "series": [{"data": [[1.68416262E12, 4.054962417548674], [1.68416244E12, 5.347536818174186], [1.68416256E12, 31.24887632032331], [1.68416238E12, 471.8964139027481], [1.68416268E12, 0.01327617203706263], [1.6841625E12, 4.3496601993028055]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416268E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.68416238E12, "maxY": 21877.0, "series": [{"data": [[1.68416262E12, 19657.0], [1.68416244E12, 20048.0], [1.68416256E12, 17145.0], [1.68416238E12, 21877.0], [1.68416268E12, 15118.0], [1.6841625E12, 17022.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68416262E12, 8651.900000000001], [1.68416244E12, 8658.800000000003], [1.68416256E12, 6337.0], [1.68416238E12, 7853.0], [1.68416268E12, 9634.0], [1.6841625E12, 7464.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68416262E12, 11016.990000000002], [1.68416244E12, 11031.980000000003], [1.68416256E12, 9693.950000000008], [1.68416238E12, 10363.980000000003], [1.68416268E12, 11175.98], [1.6841625E12, 10847.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68416262E12, 10144.95], [1.68416244E12, 10056.0], [1.68416256E12, 7435.9000000000015], [1.68416238E12, 8739.900000000001], [1.68416268E12, 10592.699999999999], [1.6841625E12, 9217.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68416262E12, 50.0], [1.68416244E12, 50.0], [1.68416256E12, 50.0], [1.68416238E12, 50.0], [1.68416268E12, 52.0], [1.6841625E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68416262E12, 1555.0], [1.68416244E12, 1898.5], [1.68416256E12, 1987.0], [1.68416238E12, 1476.5], [1.68416268E12, 1763.0], [1.6841625E12, 2163.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416268E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 8.0, "maxY": 12673.0, "series": [{"data": [[8.0, 10866.0], [41.0, 10640.5], [57.0, 4673.5], [60.0, 4540.0], [77.0, 10073.0], [100.0, 3708.5], [105.0, 9640.0], [126.0, 9217.0], [132.0, 5162.5], [139.0, 2155.0], [138.0, 246.0], [161.0, 8818.0], [194.0, 3984.0], [196.0, 8516.0], [209.0, 4365.0], [211.0, 2602.0], [257.0, 7691.0], [273.0, 4218.0], [291.0, 8016.0], [295.0, 6720.0], [294.0, 6984.0], [304.0, 8218.0], [306.0, 4247.0], [329.0, 7374.5], [372.0, 2154.0], [370.0, 5823.0], [424.0, 5168.0], [452.0, 4405.0], [453.0, 2635.0], [469.0, 5176.5], [479.0, 3433.0], [531.0, 1372.0], [516.0, 3552.0], [607.0, 3429.0], [591.0, 2980.0], [639.0, 4292.0], [652.0, 1246.0], [664.0, 1961.0], [674.0, 1640.0], [683.0, 1104.0], [755.0, 1877.0], [741.0, 2292.0], [766.0, 2938.5], [790.0, 1721.0], [785.0, 2149.0], [769.0, 2975.5], [824.0, 1572.0], [802.0, 1808.0], [851.0, 1133.0], [843.0, 1250.0], [888.0, 1655.0], [889.0, 1182.0], [874.0, 2761.0], [891.0, 2480.0], [895.0, 2671.0], [875.0, 2142.0], [878.0, 1134.0], [897.0, 1406.0], [913.0, 1140.0], [905.0, 2140.5], [956.0, 1352.0], [939.0, 1911.0], [934.0, 1915.0], [932.0, 1816.0], [936.0, 1628.0], [989.0, 1507.5], [985.0, 1954.5], [982.0, 1558.0], [984.0, 1890.0], [978.0, 1821.0], [987.0, 1572.0], [988.0, 1494.0], [991.0, 1155.0], [980.0, 1320.0], [981.0, 2542.0], [973.0, 1736.0], [1019.0, 1579.0], [999.0, 1716.5], [996.0, 2334.0], [1015.0, 2287.0], [1016.0, 1521.0], [1018.0, 1494.5], [1014.0, 1481.5], [1002.0, 1414.5], [1000.0, 1944.0], [1003.0, 1653.0], [994.0, 1513.0], [1006.0, 1658.0], [992.0, 1493.5], [1004.0, 1551.0], [997.0, 1517.0], [998.0, 1827.0], [1013.0, 1433.5], [1011.0, 1365.0], [1009.0, 1390.0], [1020.0, 1363.5], [1021.0, 1329.0], [1008.0, 1682.0], [1023.0, 1826.5], [1010.0, 1402.0], [1035.0, 1504.0], [1051.0, 1419.5], [1056.0, 2421.0], [1086.0, 1567.0], [1057.0, 1445.0], [1085.0, 1702.0], [1077.0, 1589.5], [1076.0, 1523.5], [1075.0, 2022.0], [1078.0, 1894.5], [1083.0, 1448.0], [1084.0, 1638.0], [1081.0, 1655.0], [1082.0, 1584.5], [1079.0, 2845.0], [1080.0, 1213.0], [1074.0, 1354.5], [1073.0, 1425.0], [1040.0, 1811.0], [1041.0, 2054.5], [1042.0, 1684.0], [1045.0, 1484.0], [1046.0, 2106.0], [1047.0, 1529.0], [1044.0, 1492.0], [1048.0, 1767.0], [1050.0, 1457.5], [1059.0, 1721.0], [1058.0, 1706.0], [1032.0, 1665.0], [1033.0, 1400.0], [1034.0, 1360.0], [1025.0, 1474.0], [1055.0, 2138.0], [1024.0, 1374.5], [1054.0, 1735.5], [1053.0, 1911.0], [1028.0, 1333.0], [1026.0, 1535.0], [1027.0, 1382.0], [1029.0, 1489.0], [1030.0, 1728.5], [1070.0, 1461.0], [1066.0, 1603.0], [1067.0, 1546.0], [1069.0, 1585.0], [1063.0, 3098.0], [1062.0, 1531.0], [1064.0, 1614.0], [1071.0, 1407.0], [1060.0, 1492.0], [1039.0, 1610.0], [1037.0, 1487.5], [1036.0, 1751.0], [1038.0, 1589.5], [1091.0, 1753.0], [1100.0, 1732.5], [1089.0, 1816.0], [1104.0, 1380.0], [1105.0, 1541.0], [1106.0, 1731.0], [1110.0, 1629.5], [1111.0, 1510.0], [1107.0, 1548.5], [1117.0, 1793.0], [1114.0, 1730.0], [1088.0, 2759.0], [1119.0, 1500.0], [1112.0, 1527.5], [1095.0, 1531.0], [1096.0, 2432.0], [1099.0, 1846.0], [1145.0, 1966.0], [1093.0, 2114.0], [1094.0, 1530.5], [1102.0, 2149.0], [1103.0, 1449.0], [1136.0, 1465.5], [1139.0, 1761.0], [1144.0, 1795.0], [1141.0, 1708.0], [1128.0, 2085.0], [1133.0, 1475.5], [1149.0, 1354.0], [1121.0, 2112.5], [1124.0, 1995.0], [1123.0, 1421.5], [1125.0, 1520.0], [1126.0, 2351.0], [1090.0, 1647.0], [1154.0, 2262.0], [1189.0, 1440.0], [1178.0, 1602.0], [1166.0, 1590.5], [1167.0, 1581.0], [1172.0, 1564.0], [1177.0, 1500.5], [1242.0, 2159.5], [1274.0, 2601.0], [1241.0, 1225.0], [1240.0, 1818.0], [1323.0, 1149.0], [1332.0, 1243.0], [1400.0, 1924.0], [1535.0, 1969.0], [1482.0, 2055.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[41.0, 10113.0], [57.0, 43.0], [60.0, 10285.0], [77.0, 10238.0], [105.0, 10148.0], [126.0, 10223.5], [138.0, 46.0], [161.0, 10122.0], [194.0, 41.0], [209.0, 10082.0], [211.0, 10073.0], [257.0, 10218.0], [291.0, 10125.0], [295.0, 65.5], [294.0, 10214.0], [304.0, 76.5], [306.0, 10265.0], [329.0, 10067.0], [372.0, 71.0], [370.0, 10119.0], [424.0, 78.0], [452.0, 73.0], [453.0, 82.0], [469.0, 5289.0], [531.0, 69.0], [516.0, 10452.0], [591.0, 65.0], [639.0, 53.0], [652.0, 5848.0], [664.0, 10057.0], [674.0, 45.0], [683.0, 307.5], [755.0, 10496.0], [741.0, 72.0], [790.0, 676.0], [785.0, 57.0], [769.0, 41.0], [802.0, 10104.0], [843.0, 77.0], [888.0, 10452.0], [889.0, 10362.0], [874.0, 47.0], [895.0, 10302.5], [897.0, 43.0], [905.0, 291.0], [956.0, 41.0], [939.0, 41.0], [934.0, 41.0], [932.0, 41.0], [936.0, 44.0], [989.0, 41.0], [985.0, 1177.0], [982.0, 41.0], [984.0, 41.0], [978.0, 82.0], [987.0, 42.0], [988.0, 42.0], [991.0, 88.0], [980.0, 73.0], [973.0, 937.0], [1019.0, 41.0], [999.0, 41.0], [996.0, 41.0], [1015.0, 41.0], [1016.0, 43.0], [1018.0, 41.0], [1014.0, 43.0], [1002.0, 42.0], [1000.0, 43.5], [1003.0, 41.0], [994.0, 204.0], [1006.0, 43.0], [992.0, 45.0], [1004.0, 41.0], [997.0, 42.0], [998.0, 41.0], [1013.0, 41.0], [1011.0, 41.0], [1009.0, 41.0], [1020.0, 42.0], [1021.0, 41.0], [1008.0, 41.0], [1023.0, 40.0], [1010.0, 44.0], [1035.0, 42.0], [1051.0, 42.0], [1056.0, 41.0], [1086.0, 41.0], [1057.0, 43.0], [1085.0, 42.0], [1077.0, 42.0], [1076.0, 41.0], [1075.0, 43.0], [1078.0, 68.5], [1083.0, 42.0], [1084.0, 42.0], [1081.0, 41.0], [1082.0, 41.0], [1079.0, 41.0], [1080.0, 41.0], [1074.0, 41.0], [1073.0, 42.0], [1040.0, 42.0], [1041.0, 41.0], [1042.0, 41.0], [1045.0, 42.0], [1046.0, 42.0], [1047.0, 45.0], [1044.0, 46.0], [1048.0, 41.0], [1050.0, 44.0], [1059.0, 41.0], [1058.0, 41.0], [1032.0, 42.0], [1033.0, 41.0], [1034.0, 42.0], [1070.0, 41.0], [1066.0, 41.0], [1067.0, 56.5], [1069.0, 41.0], [1063.0, 41.0], [1062.0, 41.0], [1064.0, 42.0], [1071.0, 42.0], [1060.0, 42.0], [1039.0, 42.0], [1037.0, 41.0], [1036.0, 41.0], [1038.0, 42.0], [1025.0, 41.0], [1055.0, 42.0], [1024.0, 46.0], [1054.0, 41.0], [1053.0, 41.0], [1028.0, 41.0], [1026.0, 41.0], [1027.0, 41.0], [1029.0, 46.0], [1030.0, 43.0], [1091.0, 42.0], [1100.0, 41.0], [1089.0, 43.0], [1104.0, 42.0], [1105.0, 43.0], [1106.0, 41.0], [1110.0, 41.0], [1111.0, 42.0], [1107.0, 42.0], [1117.0, 42.0], [1114.0, 42.0], [1088.0, 40.0], [1119.0, 42.0], [1112.0, 41.0], [1095.0, 75.0], [1096.0, 41.0], [1099.0, 41.0], [1145.0, 42.0], [1093.0, 42.0], [1094.0, 42.0], [1102.0, 41.0], [1103.0, 42.0], [1136.0, 41.0], [1139.0, 43.0], [1144.0, 45.0], [1141.0, 41.0], [1128.0, 41.0], [1133.0, 41.0], [1149.0, 615.0], [1121.0, 41.0], [1124.0, 41.0], [1123.0, 41.0], [1125.0, 42.0], [1126.0, 41.0], [1090.0, 43.0], [1154.0, 41.0], [1189.0, 46.0], [1178.0, 53.0], [1166.0, 42.0], [1167.0, 41.0], [1172.0, 43.0], [1177.0, 41.0], [1242.0, 42.0], [1274.0, 12673.0], [1241.0, 53.0], [1240.0, 476.0], [1323.0, 47.0], [1332.0, 67.0], [1400.0, 103.0], [1535.0, 334.0], [1482.0, 41.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1535.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 8.0, "maxY": 10866.0, "series": [{"data": [[8.0, 10866.0], [41.0, 10638.5], [57.0, 4666.0], [60.0, 4540.0], [77.0, 10073.0], [100.0, 3707.0], [105.0, 9639.0], [126.0, 9216.5], [132.0, 5162.5], [139.0, 2155.0], [138.0, 246.0], [161.0, 8818.0], [194.0, 3984.0], [196.0, 8516.0], [209.0, 4365.0], [211.0, 2601.5], [257.0, 7690.0], [273.0, 4218.0], [291.0, 8015.0], [295.0, 6720.0], [294.0, 6984.0], [304.0, 8218.0], [306.0, 4247.0], [329.0, 7374.0], [372.0, 2153.0], [370.0, 5822.5], [424.0, 5168.0], [452.0, 4405.0], [453.0, 2635.0], [469.0, 5176.5], [479.0, 3433.0], [531.0, 1369.0], [516.0, 3552.0], [607.0, 3429.0], [591.0, 2980.0], [639.0, 4292.0], [652.0, 1239.0], [664.0, 1961.0], [674.0, 1640.0], [683.0, 1104.0], [755.0, 1877.0], [741.0, 2292.0], [766.0, 2938.5], [790.0, 1721.0], [785.0, 2148.0], [769.0, 2975.0], [824.0, 1571.0], [802.0, 1808.0], [851.0, 1133.0], [843.0, 1248.0], [888.0, 1655.0], [889.0, 1182.0], [874.0, 2760.5], [891.0, 2480.0], [895.0, 2670.0], [875.0, 2142.0], [878.0, 1134.0], [897.0, 1406.0], [913.0, 1140.0], [905.0, 2139.0], [956.0, 1352.0], [939.0, 1910.0], [934.0, 1915.0], [932.0, 1814.0], [936.0, 1628.0], [989.0, 1507.5], [985.0, 1905.0], [982.0, 1558.0], [984.0, 1890.0], [978.0, 1819.0], [987.0, 1572.0], [988.0, 1493.0], [991.0, 1155.0], [980.0, 1320.0], [981.0, 2541.0], [973.0, 1735.0], [1019.0, 1579.0], [999.0, 1716.5], [996.0, 2334.0], [1015.0, 2286.5], [1016.0, 1520.0], [1018.0, 1494.0], [1014.0, 1481.5], [1002.0, 1413.5], [1000.0, 1944.0], [1003.0, 1653.0], [994.0, 1513.0], [1006.0, 1658.0], [992.0, 1491.5], [1004.0, 1551.0], [997.0, 1517.0], [998.0, 1827.0], [1013.0, 1433.5], [1011.0, 1365.0], [1009.0, 1389.0], [1020.0, 1363.5], [1021.0, 1329.0], [1008.0, 1682.0], [1023.0, 1826.0], [1010.0, 1402.0], [1035.0, 1503.0], [1051.0, 1418.5], [1056.0, 2421.0], [1086.0, 1567.0], [1057.0, 1445.0], [1085.0, 1701.5], [1077.0, 1589.0], [1076.0, 1523.5], [1075.0, 2022.0], [1078.0, 1890.5], [1083.0, 1448.0], [1084.0, 1637.0], [1081.0, 1655.0], [1082.0, 1584.5], [1079.0, 2845.0], [1080.0, 1213.0], [1074.0, 1354.0], [1073.0, 1425.0], [1040.0, 1811.0], [1041.0, 2054.5], [1042.0, 1684.0], [1045.0, 1479.0], [1046.0, 2105.0], [1047.0, 1528.5], [1044.0, 1492.0], [1048.0, 1767.0], [1050.0, 1457.5], [1059.0, 1721.0], [1058.0, 1706.0], [1032.0, 1665.0], [1033.0, 1398.0], [1034.0, 1359.0], [1025.0, 1474.0], [1055.0, 2138.0], [1024.0, 1374.5], [1054.0, 1735.5], [1053.0, 1910.0], [1028.0, 1333.0], [1026.0, 1534.0], [1027.0, 1382.0], [1029.0, 1488.5], [1030.0, 1728.5], [1070.0, 1461.0], [1066.0, 1603.0], [1067.0, 1542.0], [1069.0, 1585.0], [1063.0, 3098.0], [1062.0, 1530.5], [1064.0, 1612.5], [1071.0, 1407.0], [1060.0, 1492.0], [1039.0, 1610.0], [1037.0, 1487.5], [1036.0, 1750.0], [1038.0, 1589.5], [1091.0, 1753.0], [1100.0, 1732.0], [1089.0, 1816.0], [1104.0, 1380.0], [1105.0, 1541.0], [1106.0, 1730.5], [1110.0, 1629.5], [1111.0, 1509.5], [1107.0, 1548.0], [1117.0, 1793.0], [1114.0, 1730.0], [1088.0, 2758.0], [1119.0, 1500.0], [1112.0, 1527.5], [1095.0, 1529.0], [1096.0, 2432.0], [1099.0, 1846.0], [1145.0, 1966.0], [1093.0, 2114.0], [1094.0, 1530.5], [1102.0, 2148.0], [1103.0, 1447.0], [1136.0, 1465.5], [1139.0, 1761.0], [1144.0, 1794.0], [1141.0, 1708.0], [1128.0, 2084.5], [1133.0, 1475.5], [1149.0, 1354.0], [1121.0, 2112.5], [1124.0, 1995.0], [1123.0, 1420.5], [1125.0, 1520.0], [1126.0, 2351.0], [1090.0, 1647.0], [1154.0, 2262.0], [1189.0, 1438.0], [1178.0, 1602.0], [1166.0, 1590.5], [1167.0, 1581.0], [1172.0, 1563.0], [1177.0, 1500.5], [1242.0, 2158.5], [1274.0, 2601.0], [1241.0, 1225.0], [1240.0, 1815.0], [1323.0, 1149.0], [1332.0, 1242.0], [1400.0, 1863.0], [1535.0, 1961.0], [1482.0, 2054.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[41.0, 10113.0], [57.0, 43.0], [60.0, 10285.0], [77.0, 10238.0], [105.0, 10148.0], [126.0, 10223.5], [138.0, 46.0], [161.0, 10122.0], [194.0, 41.0], [209.0, 10082.0], [211.0, 10073.0], [257.0, 10218.0], [291.0, 10125.0], [295.0, 65.5], [294.0, 10214.0], [304.0, 76.5], [306.0, 10265.0], [329.0, 10067.0], [372.0, 71.0], [370.0, 10119.0], [424.0, 78.0], [452.0, 73.0], [453.0, 82.0], [469.0, 5289.0], [531.0, 69.0], [516.0, 10452.0], [591.0, 65.0], [639.0, 53.0], [652.0, 5848.0], [664.0, 10056.0], [674.0, 45.0], [683.0, 307.5], [755.0, 10496.0], [741.0, 72.0], [790.0, 676.0], [785.0, 57.0], [769.0, 41.0], [802.0, 10104.0], [843.0, 77.0], [888.0, 10452.0], [889.0, 10362.0], [874.0, 47.0], [895.0, 10302.5], [897.0, 43.0], [905.0, 291.0], [956.0, 41.0], [939.0, 41.0], [934.0, 41.0], [932.0, 41.0], [936.0, 44.0], [989.0, 41.0], [985.0, 87.0], [982.0, 41.0], [984.0, 41.0], [978.0, 82.0], [987.0, 42.0], [988.0, 42.0], [991.0, 88.0], [980.0, 73.0], [973.0, 937.0], [1019.0, 41.0], [999.0, 41.0], [996.0, 41.0], [1015.0, 41.0], [1016.0, 43.0], [1018.0, 41.0], [1014.0, 43.0], [1002.0, 42.0], [1000.0, 43.5], [1003.0, 41.0], [994.0, 204.0], [1006.0, 43.0], [992.0, 45.0], [1004.0, 41.0], [997.0, 42.0], [998.0, 41.0], [1013.0, 41.0], [1011.0, 41.0], [1009.0, 41.0], [1020.0, 42.0], [1021.0, 41.0], [1008.0, 41.0], [1023.0, 40.0], [1010.0, 44.0], [1035.0, 42.0], [1051.0, 42.0], [1056.0, 41.0], [1086.0, 41.0], [1057.0, 43.0], [1085.0, 42.0], [1077.0, 42.0], [1076.0, 41.0], [1075.0, 43.0], [1078.0, 68.5], [1083.0, 42.0], [1084.0, 42.0], [1081.0, 41.0], [1082.0, 41.0], [1079.0, 41.0], [1080.0, 41.0], [1074.0, 41.0], [1073.0, 42.0], [1040.0, 42.0], [1041.0, 41.0], [1042.0, 41.0], [1045.0, 42.0], [1046.0, 42.0], [1047.0, 45.0], [1044.0, 46.0], [1048.0, 41.0], [1050.0, 44.0], [1059.0, 41.0], [1058.0, 41.0], [1032.0, 42.0], [1033.0, 41.0], [1034.0, 42.0], [1070.0, 41.0], [1066.0, 41.0], [1067.0, 56.5], [1069.0, 41.0], [1063.0, 41.0], [1062.0, 41.0], [1064.0, 42.0], [1071.0, 42.0], [1060.0, 42.0], [1039.0, 42.0], [1037.0, 41.0], [1036.0, 41.0], [1038.0, 42.0], [1025.0, 41.0], [1055.0, 42.0], [1024.0, 46.0], [1054.0, 41.0], [1053.0, 41.0], [1028.0, 41.0], [1026.0, 41.0], [1027.0, 41.0], [1029.0, 46.0], [1030.0, 43.0], [1091.0, 42.0], [1100.0, 41.0], [1089.0, 42.0], [1104.0, 42.0], [1105.0, 43.0], [1106.0, 41.0], [1110.0, 41.0], [1111.0, 42.0], [1107.0, 42.0], [1117.0, 42.0], [1114.0, 42.0], [1088.0, 40.0], [1119.0, 42.0], [1112.0, 41.0], [1095.0, 75.0], [1096.0, 41.0], [1099.0, 41.0], [1145.0, 42.0], [1093.0, 42.0], [1094.0, 42.0], [1102.0, 41.0], [1103.0, 42.0], [1136.0, 41.0], [1139.0, 43.0], [1144.0, 45.0], [1141.0, 41.0], [1128.0, 41.0], [1133.0, 41.0], [1149.0, 615.0], [1121.0, 41.0], [1124.0, 41.0], [1123.0, 41.0], [1125.0, 42.0], [1126.0, 41.0], [1090.0, 43.0], [1154.0, 40.0], [1189.0, 46.0], [1178.0, 53.0], [1166.0, 42.0], [1167.0, 41.0], [1172.0, 43.0], [1177.0, 41.0], [1242.0, 41.0], [1274.0, 0.0], [1241.0, 53.0], [1240.0, 476.0], [1323.0, 47.0], [1332.0, 67.0], [1400.0, 101.0], [1535.0, 42.0], [1482.0, 41.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1535.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 191.13333333333333, "minX": 1.68416238E12, "maxY": 1086.5, "series": [{"data": [[1.68416262E12, 1086.5], [1.68416244E12, 997.0166666666667], [1.68416256E12, 905.0166666666667], [1.68416238E12, 804.7666666666667], [1.68416268E12, 191.13333333333333], [1.6841625E12, 931.45]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416268E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.4, "minX": 1.68416238E12, "maxY": 940.55, "series": [{"data": [[1.68416238E12, 1.4]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68416262E12, 940.55], [1.68416244E12, 894.4166666666666], [1.68416256E12, 782.1333333333333], [1.68416238E12, 682.1], [1.68416268E12, 211.68333333333334], [1.6841625E12, 837.9]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68416238E12, 5.316666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68416262E12, 145.95], [1.68416244E12, 102.6], [1.68416256E12, 107.8], [1.68416238E12, 65.95], [1.68416268E12, 29.35], [1.6841625E12, 108.73333333333333]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416268E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 29.35, "minX": 1.68416238E12, "maxY": 940.55, "series": [{"data": [[1.68416262E12, 940.55], [1.68416244E12, 894.4166666666666], [1.68416256E12, 782.1333333333333], [1.68416238E12, 682.1], [1.68416268E12, 211.68333333333334], [1.6841625E12, 837.9]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68416262E12, 145.95], [1.68416244E12, 102.6], [1.68416256E12, 107.8], [1.68416238E12, 72.66666666666667], [1.68416268E12, 29.35], [1.6841625E12, 108.73333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416268E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 29.35, "minX": 1.68416238E12, "maxY": 940.55, "series": [{"data": [[1.68416262E12, 940.55], [1.68416244E12, 894.4166666666666], [1.68416256E12, 782.1333333333333], [1.68416238E12, 682.1], [1.68416268E12, 211.68333333333334], [1.6841625E12, 837.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68416262E12, 145.95], [1.68416244E12, 102.6], [1.68416256E12, 107.8], [1.68416238E12, 72.66666666666667], [1.68416268E12, 29.35], [1.6841625E12, 108.73333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416268E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

