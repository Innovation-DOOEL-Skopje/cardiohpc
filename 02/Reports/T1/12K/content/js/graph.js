/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "maxY": 52826.0, "series": [{"data": [[0.0, 37.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 38.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 41.0], [5.1, 41.0], [5.2, 41.0], [5.3, 41.0], [5.4, 41.0], [5.5, 41.0], [5.6, 41.0], [5.7, 41.0], [5.8, 41.0], [5.9, 41.0], [6.0, 41.0], [6.1, 41.0], [6.2, 41.0], [6.3, 41.0], [6.4, 41.0], [6.5, 41.0], [6.6, 41.0], [6.7, 41.0], [6.8, 41.0], [6.9, 41.0], [7.0, 41.0], [7.1, 41.0], [7.2, 41.0], [7.3, 41.0], [7.4, 41.0], [7.5, 41.0], [7.6, 42.0], [7.7, 42.0], [7.8, 42.0], [7.9, 42.0], [8.0, 42.0], [8.1, 42.0], [8.2, 42.0], [8.3, 42.0], [8.4, 42.0], [8.5, 42.0], [8.6, 42.0], [8.7, 42.0], [8.8, 42.0], [8.9, 42.0], [9.0, 42.0], [9.1, 42.0], [9.2, 42.0], [9.3, 42.0], [9.4, 42.0], [9.5, 42.0], [9.6, 42.0], [9.7, 42.0], [9.8, 42.0], [9.9, 42.0], [10.0, 42.0], [10.1, 42.0], [10.2, 43.0], [10.3, 43.0], [10.4, 43.0], [10.5, 43.0], [10.6, 43.0], [10.7, 43.0], [10.8, 43.0], [10.9, 43.0], [11.0, 43.0], [11.1, 43.0], [11.2, 43.0], [11.3, 43.0], [11.4, 43.0], [11.5, 43.0], [11.6, 43.0], [11.7, 43.0], [11.8, 43.0], [11.9, 43.0], [12.0, 43.0], [12.1, 44.0], [12.2, 44.0], [12.3, 44.0], [12.4, 44.0], [12.5, 44.0], [12.6, 44.0], [12.7, 44.0], [12.8, 44.0], [12.9, 44.0], [13.0, 44.0], [13.1, 45.0], [13.2, 45.0], [13.3, 45.0], [13.4, 45.0], [13.5, 46.0], [13.6, 46.0], [13.7, 47.0], [13.8, 47.0], [13.9, 48.0], [14.0, 49.0], [14.1, 50.0], [14.2, 51.0], [14.3, 52.0], [14.4, 53.0], [14.5, 54.0], [14.6, 56.0], [14.7, 57.0], [14.8, 58.0], [14.9, 59.0], [15.0, 61.0], [15.1, 63.0], [15.2, 65.0], [15.3, 67.0], [15.4, 70.0], [15.5, 73.0], [15.6, 76.0], [15.7, 80.0], [15.8, 85.0], [15.9, 90.0], [16.0, 93.0], [16.1, 96.0], [16.2, 99.0], [16.3, 101.0], [16.4, 104.0], [16.5, 108.0], [16.6, 112.0], [16.7, 117.0], [16.8, 124.0], [16.9, 132.0], [17.0, 142.0], [17.1, 157.0], [17.2, 181.0], [17.3, 217.0], [17.4, 261.0], [17.5, 307.0], [17.6, 363.0], [17.7, 456.0], [17.8, 585.0], [17.9, 802.0], [18.0, 1089.0], [18.1, 1090.0], [18.2, 1091.0], [18.3, 1092.0], [18.4, 1092.0], [18.5, 1092.0], [18.6, 1093.0], [18.7, 1093.0], [18.8, 1093.0], [18.9, 1093.0], [19.0, 1094.0], [19.1, 1094.0], [19.2, 1094.0], [19.3, 1094.0], [19.4, 1094.0], [19.5, 1095.0], [19.6, 1095.0], [19.7, 1095.0], [19.8, 1095.0], [19.9, 1095.0], [20.0, 1095.0], [20.1, 1095.0], [20.2, 1096.0], [20.3, 1096.0], [20.4, 1096.0], [20.5, 1096.0], [20.6, 1096.0], [20.7, 1096.0], [20.8, 1096.0], [20.9, 1096.0], [21.0, 1097.0], [21.1, 1097.0], [21.2, 1097.0], [21.3, 1097.0], [21.4, 1097.0], [21.5, 1097.0], [21.6, 1097.0], [21.7, 1097.0], [21.8, 1098.0], [21.9, 1098.0], [22.0, 1098.0], [22.1, 1098.0], [22.2, 1098.0], [22.3, 1098.0], [22.4, 1098.0], [22.5, 1098.0], [22.6, 1098.0], [22.7, 1099.0], [22.8, 1099.0], [22.9, 1099.0], [23.0, 1099.0], [23.1, 1099.0], [23.2, 1099.0], [23.3, 1099.0], [23.4, 1099.0], [23.5, 1099.0], [23.6, 1100.0], [23.7, 1100.0], [23.8, 1100.0], [23.9, 1100.0], [24.0, 1100.0], [24.1, 1100.0], [24.2, 1100.0], [24.3, 1101.0], [24.4, 1101.0], [24.5, 1101.0], [24.6, 1101.0], [24.7, 1101.0], [24.8, 1101.0], [24.9, 1101.0], [25.0, 1101.0], [25.1, 1102.0], [25.2, 1102.0], [25.3, 1102.0], [25.4, 1102.0], [25.5, 1102.0], [25.6, 1102.0], [25.7, 1103.0], [25.8, 1103.0], [25.9, 1103.0], [26.0, 1103.0], [26.1, 1103.0], [26.2, 1104.0], [26.3, 1104.0], [26.4, 1104.0], [26.5, 1104.0], [26.6, 1104.0], [26.7, 1105.0], [26.8, 1105.0], [26.9, 1105.0], [27.0, 1105.0], [27.1, 1106.0], [27.2, 1106.0], [27.3, 1106.0], [27.4, 1106.0], [27.5, 1107.0], [27.6, 1107.0], [27.7, 1107.0], [27.8, 1108.0], [27.9, 1108.0], [28.0, 1109.0], [28.1, 1109.0], [28.2, 1109.0], [28.3, 1110.0], [28.4, 1110.0], [28.5, 1111.0], [28.6, 1111.0], [28.7, 1112.0], [28.8, 1112.0], [28.9, 1113.0], [29.0, 1114.0], [29.1, 1114.0], [29.2, 1115.0], [29.3, 1116.0], [29.4, 1117.0], [29.5, 1118.0], [29.6, 1118.0], [29.7, 1119.0], [29.8, 1120.0], [29.9, 1121.0], [30.0, 1122.0], [30.1, 1123.0], [30.2, 1124.0], [30.3, 1125.0], [30.4, 1126.0], [30.5, 1127.0], [30.6, 1128.0], [30.7, 1129.0], [30.8, 1130.0], [30.9, 1131.0], [31.0, 1132.0], [31.1, 1133.0], [31.2, 1134.0], [31.3, 1135.0], [31.4, 1136.0], [31.5, 1137.0], [31.6, 1139.0], [31.7, 1140.0], [31.8, 1141.0], [31.9, 1142.0], [32.0, 1143.0], [32.1, 1144.0], [32.2, 1145.0], [32.3, 1147.0], [32.4, 1148.0], [32.5, 1149.0], [32.6, 1150.0], [32.7, 1151.0], [32.8, 1152.0], [32.9, 1153.0], [33.0, 1155.0], [33.1, 1156.0], [33.2, 1157.0], [33.3, 1158.0], [33.4, 1159.0], [33.5, 1160.0], [33.6, 1161.0], [33.7, 1162.0], [33.8, 1163.0], [33.9, 1164.0], [34.0, 1165.0], [34.1, 1166.0], [34.2, 1167.0], [34.3, 1168.0], [34.4, 1170.0], [34.5, 1171.0], [34.6, 1172.0], [34.7, 1173.0], [34.8, 1174.0], [34.9, 1176.0], [35.0, 1177.0], [35.1, 1178.0], [35.2, 1179.0], [35.3, 1181.0], [35.4, 1182.0], [35.5, 1183.0], [35.6, 1185.0], [35.7, 1186.0], [35.8, 1187.0], [35.9, 1188.0], [36.0, 1190.0], [36.1, 1191.0], [36.2, 1192.0], [36.3, 1194.0], [36.4, 1195.0], [36.5, 1196.0], [36.6, 1198.0], [36.7, 1199.0], [36.8, 1200.0], [36.9, 1202.0], [37.0, 1203.0], [37.1, 1204.0], [37.2, 1206.0], [37.3, 1207.0], [37.4, 1209.0], [37.5, 1210.0], [37.6, 1212.0], [37.7, 1213.0], [37.8, 1215.0], [37.9, 1216.0], [38.0, 1218.0], [38.1, 1219.0], [38.2, 1221.0], [38.3, 1223.0], [38.4, 1224.0], [38.5, 1226.0], [38.6, 1227.0], [38.7, 1229.0], [38.8, 1230.0], [38.9, 1232.0], [39.0, 1233.0], [39.1, 1235.0], [39.2, 1237.0], [39.3, 1238.0], [39.4, 1240.0], [39.5, 1242.0], [39.6, 1243.0], [39.7, 1245.0], [39.8, 1247.0], [39.9, 1249.0], [40.0, 1250.0], [40.1, 1252.0], [40.2, 1253.0], [40.3, 1255.0], [40.4, 1256.0], [40.5, 1258.0], [40.6, 1260.0], [40.7, 1262.0], [40.8, 1263.0], [40.9, 1265.0], [41.0, 1267.0], [41.1, 1268.0], [41.2, 1270.0], [41.3, 1272.0], [41.4, 1274.0], [41.5, 1276.0], [41.6, 1277.0], [41.7, 1279.0], [41.8, 1281.0], [41.9, 1283.0], [42.0, 1285.0], [42.1, 1287.0], [42.2, 1288.0], [42.3, 1290.0], [42.4, 1292.0], [42.5, 1294.0], [42.6, 1296.0], [42.7, 1298.0], [42.8, 1300.0], [42.9, 1301.0], [43.0, 1303.0], [43.1, 1305.0], [43.2, 1307.0], [43.3, 1309.0], [43.4, 1311.0], [43.5, 1313.0], [43.6, 1315.0], [43.7, 1317.0], [43.8, 1318.0], [43.9, 1320.0], [44.0, 1322.0], [44.1, 1324.0], [44.2, 1326.0], [44.3, 1328.0], [44.4, 1330.0], [44.5, 1332.0], [44.6, 1334.0], [44.7, 1336.0], [44.8, 1338.0], [44.9, 1340.0], [45.0, 1343.0], [45.1, 1345.0], [45.2, 1347.0], [45.3, 1349.0], [45.4, 1352.0], [45.5, 1354.0], [45.6, 1356.0], [45.7, 1358.0], [45.8, 1360.0], [45.9, 1362.0], [46.0, 1365.0], [46.1, 1367.0], [46.2, 1369.0], [46.3, 1372.0], [46.4, 1374.0], [46.5, 1376.0], [46.6, 1378.0], [46.7, 1381.0], [46.8, 1383.0], [46.9, 1385.0], [47.0, 1388.0], [47.1, 1390.0], [47.2, 1393.0], [47.3, 1395.0], [47.4, 1398.0], [47.5, 1400.0], [47.6, 1403.0], [47.7, 1405.0], [47.8, 1407.0], [47.9, 1410.0], [48.0, 1412.0], [48.1, 1415.0], [48.2, 1418.0], [48.3, 1420.0], [48.4, 1423.0], [48.5, 1425.0], [48.6, 1428.0], [48.7, 1430.0], [48.8, 1433.0], [48.9, 1436.0], [49.0, 1438.0], [49.1, 1441.0], [49.2, 1444.0], [49.3, 1446.0], [49.4, 1449.0], [49.5, 1452.0], [49.6, 1455.0], [49.7, 1457.0], [49.8, 1460.0], [49.9, 1463.0], [50.0, 1466.0], [50.1, 1469.0], [50.2, 1471.0], [50.3, 1474.0], [50.4, 1477.0], [50.5, 1480.0], [50.6, 1483.0], [50.7, 1486.0], [50.8, 1488.0], [50.9, 1491.0], [51.0, 1494.0], [51.1, 1497.0], [51.2, 1500.0], [51.3, 1503.0], [51.4, 1506.0], [51.5, 1509.0], [51.6, 1512.0], [51.7, 1515.0], [51.8, 1518.0], [51.9, 1521.0], [52.0, 1524.0], [52.1, 1527.0], [52.2, 1530.0], [52.3, 1533.0], [52.4, 1536.0], [52.5, 1540.0], [52.6, 1543.0], [52.7, 1546.0], [52.8, 1549.0], [52.9, 1552.0], [53.0, 1556.0], [53.1, 1559.0], [53.2, 1563.0], [53.3, 1566.0], [53.4, 1570.0], [53.5, 1573.0], [53.6, 1577.0], [53.7, 1581.0], [53.8, 1584.0], [53.9, 1588.0], [54.0, 1592.0], [54.1, 1595.0], [54.2, 1599.0], [54.3, 1603.0], [54.4, 1607.0], [54.5, 1610.0], [54.6, 1614.0], [54.7, 1618.0], [54.8, 1622.0], [54.9, 1626.0], [55.0, 1630.0], [55.1, 1634.0], [55.2, 1638.0], [55.3, 1642.0], [55.4, 1647.0], [55.5, 1652.0], [55.6, 1656.0], [55.7, 1660.0], [55.8, 1664.0], [55.9, 1669.0], [56.0, 1673.0], [56.1, 1677.0], [56.2, 1681.0], [56.3, 1686.0], [56.4, 1690.0], [56.5, 1695.0], [56.6, 1699.0], [56.7, 1704.0], [56.8, 1709.0], [56.9, 1714.0], [57.0, 1718.0], [57.1, 1724.0], [57.2, 1729.0], [57.3, 1734.0], [57.4, 1739.0], [57.5, 1744.0], [57.6, 1749.0], [57.7, 1753.0], [57.8, 1758.0], [57.9, 1763.0], [58.0, 1768.0], [58.1, 1773.0], [58.2, 1778.0], [58.3, 1784.0], [58.4, 1789.0], [58.5, 1794.0], [58.6, 1800.0], [58.7, 1805.0], [58.8, 1811.0], [58.9, 1816.0], [59.0, 1822.0], [59.1, 1828.0], [59.2, 1834.0], [59.3, 1840.0], [59.4, 1845.0], [59.5, 1851.0], [59.6, 1857.0], [59.7, 1864.0], [59.8, 1869.0], [59.9, 1875.0], [60.0, 1882.0], [60.1, 1888.0], [60.2, 1895.0], [60.3, 1901.0], [60.4, 1907.0], [60.5, 1914.0], [60.6, 1920.0], [60.7, 1926.0], [60.8, 1933.0], [60.9, 1939.0], [61.0, 1946.0], [61.1, 1953.0], [61.2, 1959.0], [61.3, 1966.0], [61.4, 1972.0], [61.5, 1979.0], [61.6, 1987.0], [61.7, 1994.0], [61.8, 2000.0], [61.9, 2008.0], [62.0, 2015.0], [62.1, 2022.0], [62.2, 2028.0], [62.3, 2035.0], [62.4, 2042.0], [62.5, 2050.0], [62.6, 2057.0], [62.7, 2065.0], [62.8, 2073.0], [62.9, 2080.0], [63.0, 2088.0], [63.1, 2095.0], [63.2, 2102.0], [63.3, 2110.0], [63.4, 2117.0], [63.5, 2124.0], [63.6, 2132.0], [63.7, 2140.0], [63.8, 2148.0], [63.9, 2155.0], [64.0, 2162.0], [64.1, 2170.0], [64.2, 2178.0], [64.3, 2187.0], [64.4, 2196.0], [64.5, 2205.0], [64.6, 2214.0], [64.7, 2224.0], [64.8, 2233.0], [64.9, 2242.0], [65.0, 2251.0], [65.1, 2261.0], [65.2, 2270.0], [65.3, 2280.0], [65.4, 2290.0], [65.5, 2299.0], [65.6, 2309.0], [65.7, 2318.0], [65.8, 2329.0], [65.9, 2339.0], [66.0, 2349.0], [66.1, 2360.0], [66.2, 2371.0], [66.3, 2383.0], [66.4, 2393.0], [66.5, 2404.0], [66.6, 2416.0], [66.7, 2427.0], [66.8, 2438.0], [66.9, 2450.0], [67.0, 2460.0], [67.1, 2471.0], [67.2, 2483.0], [67.3, 2494.0], [67.4, 2506.0], [67.5, 2519.0], [67.6, 2531.0], [67.7, 2541.0], [67.8, 2553.0], [67.9, 2566.0], [68.0, 2578.0], [68.1, 2589.0], [68.2, 2601.0], [68.3, 2612.0], [68.4, 2625.0], [68.5, 2637.0], [68.6, 2649.0], [68.7, 2661.0], [68.8, 2674.0], [68.9, 2686.0], [69.0, 2700.0], [69.1, 2713.0], [69.2, 2726.0], [69.3, 2738.0], [69.4, 2753.0], [69.5, 2766.0], [69.6, 2778.0], [69.7, 2792.0], [69.8, 2804.0], [69.9, 2817.0], [70.0, 2831.0], [70.1, 2844.0], [70.2, 2857.0], [70.3, 2871.0], [70.4, 2886.0], [70.5, 2900.0], [70.6, 2914.0], [70.7, 2930.0], [70.8, 2944.0], [70.9, 2958.0], [71.0, 2974.0], [71.1, 2988.0], [71.2, 3003.0], [71.3, 3017.0], [71.4, 3031.0], [71.5, 3044.0], [71.6, 3059.0], [71.7, 3074.0], [71.8, 3088.0], [71.9, 3102.0], [72.0, 3116.0], [72.1, 3131.0], [72.2, 3145.0], [72.3, 3158.0], [72.4, 3174.0], [72.5, 3188.0], [72.6, 3202.0], [72.7, 3218.0], [72.8, 3233.0], [72.9, 3248.0], [73.0, 3263.0], [73.1, 3280.0], [73.2, 3296.0], [73.3, 3314.0], [73.4, 3332.0], [73.5, 3350.0], [73.6, 3367.0], [73.7, 3383.0], [73.8, 3399.0], [73.9, 3416.0], [74.0, 3433.0], [74.1, 3448.0], [74.2, 3466.0], [74.3, 3482.0], [74.4, 3498.0], [74.5, 3516.0], [74.6, 3535.0], [74.7, 3555.0], [74.8, 3574.0], [74.9, 3592.0], [75.0, 3611.0], [75.1, 3631.0], [75.2, 3652.0], [75.3, 3669.0], [75.4, 3689.0], [75.5, 3706.0], [75.6, 3726.0], [75.7, 3745.0], [75.8, 3764.0], [75.9, 3783.0], [76.0, 3805.0], [76.1, 3826.0], [76.2, 3844.0], [76.3, 3863.0], [76.4, 3882.0], [76.5, 3902.0], [76.6, 3922.0], [76.7, 3944.0], [76.8, 3963.0], [76.9, 3982.0], [77.0, 4004.0], [77.1, 4023.0], [77.2, 4043.0], [77.3, 4062.0], [77.4, 4081.0], [77.5, 4101.0], [77.6, 4119.0], [77.7, 4139.0], [77.8, 4160.0], [77.9, 4179.0], [78.0, 4200.0], [78.1, 4217.0], [78.2, 4236.0], [78.3, 4255.0], [78.4, 4274.0], [78.5, 4295.0], [78.6, 4313.0], [78.7, 4333.0], [78.8, 4351.0], [78.9, 4371.0], [79.0, 4392.0], [79.1, 4412.0], [79.2, 4434.0], [79.3, 4455.0], [79.4, 4474.0], [79.5, 4497.0], [79.6, 4518.0], [79.7, 4539.0], [79.8, 4560.0], [79.9, 4581.0], [80.0, 4605.0], [80.1, 4627.0], [80.2, 4652.0], [80.3, 4675.0], [80.4, 4696.0], [80.5, 4722.0], [80.6, 4742.0], [80.7, 4766.0], [80.8, 4790.0], [80.9, 4813.0], [81.0, 4837.0], [81.1, 4860.0], [81.2, 4885.0], [81.3, 4909.0], [81.4, 4934.0], [81.5, 4956.0], [81.6, 4977.0], [81.7, 5001.0], [81.8, 5026.0], [81.9, 5049.0], [82.0, 5071.0], [82.1, 5095.0], [82.2, 5120.0], [82.3, 5143.0], [82.4, 5167.0], [82.5, 5191.0], [82.6, 5216.0], [82.7, 5240.0], [82.8, 5266.0], [82.9, 5292.0], [83.0, 5319.0], [83.1, 5348.0], [83.2, 5374.0], [83.3, 5405.0], [83.4, 5434.0], [83.5, 5461.0], [83.6, 5490.0], [83.7, 5520.0], [83.8, 5548.0], [83.9, 5578.0], [84.0, 5607.0], [84.1, 5633.0], [84.2, 5657.0], [84.3, 5682.0], [84.4, 5710.0], [84.5, 5734.0], [84.6, 5760.0], [84.7, 5793.0], [84.8, 5823.0], [84.9, 5852.0], [85.0, 5882.0], [85.1, 5913.0], [85.2, 5946.0], [85.3, 5977.0], [85.4, 6006.0], [85.5, 6039.0], [85.6, 6068.0], [85.7, 6099.0], [85.8, 6131.0], [85.9, 6163.0], [86.0, 6195.0], [86.1, 6221.0], [86.2, 6253.0], [86.3, 6282.0], [86.4, 6311.0], [86.5, 6341.0], [86.6, 6373.0], [86.7, 6406.0], [86.8, 6439.0], [86.9, 6468.0], [87.0, 6500.0], [87.1, 6533.0], [87.2, 6570.0], [87.3, 6605.0], [87.4, 6643.0], [87.5, 6682.0], [87.6, 6719.0], [87.7, 6754.0], [87.8, 6795.0], [87.9, 6835.0], [88.0, 6873.0], [88.1, 6909.0], [88.2, 6943.0], [88.3, 6980.0], [88.4, 7016.0], [88.5, 7052.0], [88.6, 7089.0], [88.7, 7124.0], [88.8, 7157.0], [88.9, 7194.0], [89.0, 7229.0], [89.1, 7264.0], [89.2, 7299.0], [89.3, 7335.0], [89.4, 7371.0], [89.5, 7404.0], [89.6, 7436.0], [89.7, 7471.0], [89.8, 7513.0], [89.9, 7548.0], [90.0, 7584.0], [90.1, 7622.0], [90.2, 7660.0], [90.3, 7700.0], [90.4, 7738.0], [90.5, 7780.0], [90.6, 7818.0], [90.7, 7859.0], [90.8, 7895.0], [90.9, 7939.0], [91.0, 7979.0], [91.1, 8019.0], [91.2, 8067.0], [91.3, 8106.0], [91.4, 8150.0], [91.5, 8194.0], [91.6, 8236.0], [91.7, 8274.0], [91.8, 8314.0], [91.9, 8356.0], [92.0, 8392.0], [92.1, 8429.0], [92.2, 8466.0], [92.3, 8506.0], [92.4, 8548.0], [92.5, 8592.0], [92.6, 8635.0], [92.7, 8680.0], [92.8, 8722.0], [92.9, 8767.0], [93.0, 8814.0], [93.1, 8868.0], [93.2, 8914.0], [93.3, 8959.0], [93.4, 9007.0], [93.5, 9050.0], [93.6, 9096.0], [93.7, 9142.0], [93.8, 9188.0], [93.9, 9235.0], [94.0, 9284.0], [94.1, 9330.0], [94.2, 9376.0], [94.3, 9419.0], [94.4, 9458.0], [94.5, 9503.0], [94.6, 9552.0], [94.7, 9600.0], [94.8, 9645.0], [94.9, 9696.0], [95.0, 9751.0], [95.1, 9802.0], [95.2, 9854.0], [95.3, 9908.0], [95.4, 9960.0], [95.5, 10009.0], [95.6, 10052.0], [95.7, 10085.0], [95.8, 10114.0], [95.9, 10142.0], [96.0, 10173.0], [96.1, 10206.0], [96.2, 10237.0], [96.3, 10270.0], [96.4, 10303.0], [96.5, 10340.0], [96.6, 10377.0], [96.7, 10410.0], [96.8, 10447.0], [96.9, 10484.0], [97.0, 10521.0], [97.1, 10559.0], [97.2, 10602.0], [97.3, 10654.0], [97.4, 10692.0], [97.5, 10735.0], [97.6, 10788.0], [97.7, 10844.0], [97.8, 10904.0], [97.9, 10960.0], [98.0, 11008.0], [98.1, 11064.0], [98.2, 11128.0], [98.3, 11211.0], [98.4, 11344.0], [98.5, 11729.0], [98.6, 12111.0], [98.7, 12829.0], [98.8, 13649.0], [98.9, 14321.0], [99.0, 14786.0], [99.1, 15292.0], [99.2, 16039.0], [99.3, 16824.0], [99.4, 17669.0], [99.5, 18906.0], [99.6, 20322.0], [99.7, 21448.0], [99.8, 23464.0], [99.9, 26644.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 51066.0, "series": [{"data": [[0.0, 51066.0], [100.0, 3238.0], [32900.0, 2.0], [34500.0, 2.0], [33700.0, 2.0], [36100.0, 1.0], [34900.0, 2.0], [37300.0, 2.0], [36900.0, 1.0], [37700.0, 2.0], [40900.0, 2.0], [50100.0, 1.0], [200.0, 703.0], [51300.0, 2.0], [300.0, 504.0], [400.0, 292.0], [500.0, 225.0], [600.0, 151.0], [700.0, 129.0], [800.0, 95.0], [900.0, 90.0], [1000.0, 17491.0], [1100.0, 41619.0], [1200.0, 19041.0], [1300.0, 14694.0], [1400.0, 11679.0], [1500.0, 9548.0], [1600.0, 7539.0], [1700.0, 6247.0], [1800.0, 5311.0], [1900.0, 4726.0], [2000.0, 4329.0], [2100.0, 4006.0], [2200.0, 3358.0], [2300.0, 3002.0], [2400.0, 2794.0], [2500.0, 2643.0], [2600.0, 2554.0], [2800.0, 2308.0], [2700.0, 2405.0], [2900.0, 2157.0], [3000.0, 2213.0], [3100.0, 2190.0], [3200.0, 2007.0], [3300.0, 1837.0], [3400.0, 1905.0], [3500.0, 1663.0], [3600.0, 1649.0], [3700.0, 1624.0], [3800.0, 1606.0], [3900.0, 1554.0], [4000.0, 1621.0], [4200.0, 1659.0], [4300.0, 1610.0], [4100.0, 1582.0], [4500.0, 1474.0], [4400.0, 1490.0], [4600.0, 1380.0], [4700.0, 1330.0], [4800.0, 1309.0], [4900.0, 1374.0], [5000.0, 1334.0], [5100.0, 1306.0], [5300.0, 1099.0], [5200.0, 1247.0], [5400.0, 1121.0], [5500.0, 1059.0], [5600.0, 1223.0], [5800.0, 1066.0], [5700.0, 1137.0], [5900.0, 998.0], [6000.0, 1023.0], [6100.0, 1006.0], [6300.0, 1008.0], [6200.0, 1066.0], [6400.0, 993.0], [6500.0, 907.0], [6600.0, 820.0], [6700.0, 827.0], [6800.0, 817.0], [6900.0, 900.0], [7000.0, 871.0], [7100.0, 901.0], [7200.0, 887.0], [7300.0, 904.0], [7400.0, 864.0], [7500.0, 891.0], [7600.0, 790.0], [7700.0, 789.0], [7900.0, 753.0], [7800.0, 832.0], [8100.0, 722.0], [8000.0, 731.0], [8400.0, 840.0], [8300.0, 819.0], [8600.0, 730.0], [8700.0, 700.0], [8200.0, 774.0], [8500.0, 723.0], [8900.0, 683.0], [9000.0, 713.0], [9100.0, 682.0], [8800.0, 613.0], [9200.0, 668.0], [9300.0, 667.0], [9600.0, 653.0], [9400.0, 760.0], [9500.0, 650.0], [9700.0, 594.0], [10200.0, 969.0], [10000.0, 841.0], [10100.0, 1041.0], [9800.0, 596.0], [9900.0, 619.0], [10500.0, 803.0], [10300.0, 891.0], [10400.0, 847.0], [10600.0, 706.0], [10700.0, 629.0], [10800.0, 546.0], [10900.0, 582.0], [11200.0, 271.0], [11000.0, 567.0], [11100.0, 411.0], [11300.0, 174.0], [11600.0, 47.0], [11500.0, 55.0], [11700.0, 55.0], [11400.0, 101.0], [11800.0, 75.0], [12200.0, 51.0], [12100.0, 88.0], [12000.0, 102.0], [11900.0, 91.0], [12700.0, 30.0], [12300.0, 47.0], [12500.0, 31.0], [12600.0, 41.0], [12400.0, 26.0], [12800.0, 31.0], [13100.0, 50.0], [13000.0, 32.0], [12900.0, 39.0], [13200.0, 38.0], [13300.0, 48.0], [13400.0, 35.0], [13500.0, 29.0], [13700.0, 46.0], [13800.0, 37.0], [13600.0, 37.0], [13900.0, 36.0], [14000.0, 46.0], [14300.0, 64.0], [14100.0, 44.0], [14200.0, 74.0], [14500.0, 61.0], [14600.0, 57.0], [14800.0, 60.0], [14700.0, 89.0], [14400.0, 70.0], [15000.0, 75.0], [14900.0, 55.0], [15200.0, 51.0], [15100.0, 69.0], [15300.0, 58.0], [15800.0, 34.0], [15600.0, 33.0], [15400.0, 50.0], [15500.0, 38.0], [15700.0, 36.0], [16200.0, 34.0], [15900.0, 43.0], [16100.0, 37.0], [16300.0, 48.0], [16000.0, 43.0], [16400.0, 44.0], [16600.0, 33.0], [17200.0, 34.0], [16800.0, 44.0], [17000.0, 35.0], [17400.0, 29.0], [18200.0, 26.0], [17600.0, 37.0], [17800.0, 28.0], [18000.0, 25.0], [18400.0, 32.0], [19000.0, 25.0], [18600.0, 27.0], [18800.0, 17.0], [19200.0, 29.0], [19400.0, 20.0], [19600.0, 23.0], [20200.0, 26.0], [20000.0, 29.0], [19800.0, 16.0], [20400.0, 22.0], [20600.0, 32.0], [21000.0, 26.0], [21200.0, 28.0], [20800.0, 22.0], [21400.0, 20.0], [21600.0, 29.0], [21800.0, 22.0], [22000.0, 9.0], [22400.0, 14.0], [22200.0, 23.0], [23200.0, 14.0], [22600.0, 11.0], [23000.0, 12.0], [22800.0, 19.0], [23400.0, 7.0], [24000.0, 7.0], [23600.0, 9.0], [23800.0, 4.0], [24200.0, 6.0], [24400.0, 6.0], [24600.0, 16.0], [25400.0, 14.0], [25000.0, 3.0], [25200.0, 12.0], [24800.0, 5.0], [26600.0, 7.0], [26000.0, 14.0], [25600.0, 13.0], [25800.0, 11.0], [26200.0, 10.0], [26400.0, 10.0], [26800.0, 8.0], [27000.0, 12.0], [27400.0, 10.0], [27200.0, 10.0], [27600.0, 7.0], [28200.0, 2.0], [28400.0, 4.0], [28600.0, 6.0], [27800.0, 2.0], [28000.0, 1.0], [29400.0, 5.0], [29600.0, 6.0], [29000.0, 5.0], [28800.0, 3.0], [29200.0, 1.0], [30000.0, 4.0], [29800.0, 2.0], [30200.0, 8.0], [30600.0, 5.0], [30400.0, 4.0], [31400.0, 3.0], [30800.0, 3.0], [31000.0, 2.0], [31800.0, 2.0], [32600.0, 4.0], [32000.0, 2.0], [32200.0, 1.0], [33200.0, 1.0], [34000.0, 1.0], [32800.0, 2.0], [34400.0, 1.0], [36400.0, 1.0], [35200.0, 1.0], [36800.0, 1.0], [36000.0, 1.0], [37200.0, 1.0], [38800.0, 2.0], [41600.0, 1.0], [41200.0, 1.0], [50000.0, 2.0], [52800.0, 1.0], [51600.0, 1.0], [52400.0, 1.0], [33500.0, 3.0], [33100.0, 2.0], [34300.0, 2.0], [34700.0, 1.0], [36300.0, 1.0], [35900.0, 1.0], [37900.0, 1.0], [40700.0, 2.0], [41900.0, 1.0], [49100.0, 1.0], [17300.0, 35.0], [16700.0, 45.0], [16900.0, 52.0], [16500.0, 41.0], [17100.0, 29.0], [17500.0, 36.0], [17700.0, 29.0], [17900.0, 31.0], [18100.0, 22.0], [18300.0, 31.0], [18700.0, 15.0], [18900.0, 22.0], [19100.0, 25.0], [19300.0, 20.0], [18500.0, 21.0], [19500.0, 28.0], [19900.0, 13.0], [20100.0, 20.0], [19700.0, 15.0], [20300.0, 22.0], [20500.0, 39.0], [20700.0, 39.0], [21100.0, 24.0], [21500.0, 19.0], [21300.0, 13.0], [20900.0, 44.0], [21700.0, 20.0], [22500.0, 8.0], [22100.0, 16.0], [22300.0, 17.0], [21900.0, 18.0], [23300.0, 13.0], [23100.0, 17.0], [22900.0, 10.0], [23500.0, 9.0], [22700.0, 9.0], [24500.0, 14.0], [24100.0, 14.0], [23700.0, 10.0], [24300.0, 13.0], [23900.0, 6.0], [25500.0, 11.0], [25100.0, 13.0], [25300.0, 10.0], [24700.0, 5.0], [24900.0, 8.0], [26300.0, 10.0], [25900.0, 13.0], [26500.0, 9.0], [26100.0, 12.0], [25700.0, 10.0], [27300.0, 14.0], [26900.0, 12.0], [27100.0, 7.0], [26700.0, 4.0], [27500.0, 11.0], [28300.0, 2.0], [28500.0, 5.0], [27700.0, 10.0], [28100.0, 2.0], [28700.0, 4.0], [28900.0, 7.0], [29300.0, 2.0], [29500.0, 2.0], [29100.0, 2.0], [29700.0, 6.0], [29900.0, 5.0], [30700.0, 3.0], [30100.0, 5.0], [30500.0, 1.0], [30300.0, 2.0], [31100.0, 3.0], [30900.0, 2.0], [31300.0, 1.0], [31700.0, 2.0], [32500.0, 2.0], [32100.0, 3.0], [31900.0, 2.0], [32300.0, 1.0], [33400.0, 3.0], [33000.0, 2.0], [34600.0, 3.0], [33800.0, 1.0], [38600.0, 1.0], [37400.0, 1.0], [37000.0, 1.0], [49000.0, 1.0], [51400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 52800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2280.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 150331.0, "series": [{"data": [[0.0, 2280.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 105010.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 150331.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 56993.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2870.1866194188483, "minX": 1.68416334E12, "maxY": 3000.0, "series": [{"data": [[1.68416358E12, 3000.0], [1.6841634E12, 3000.0], [1.68416352E12, 3000.0], [1.68416334E12, 3000.0], [1.68416364E12, 2870.1866194188483], [1.68416346E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416364E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 567.0, "minX": 1.0, "maxY": 16752.0, "series": [{"data": [[2.0, 10980.0], [3.0, 10993.0], [4.0, 10648.0], [6.0, 10964.0], [7.0, 10696.0], [8.0, 11068.0], [9.0, 10473.0], [10.0, 9968.0], [11.0, 10502.0], [12.0, 10483.0], [13.0, 10647.0], [14.0, 11093.0], [15.0, 10638.0], [16.0, 10537.0], [17.0, 10570.0], [18.0, 10676.0], [19.0, 10619.0], [20.0, 10212.0], [21.0, 10237.0], [22.0, 11093.0], [23.0, 10782.0], [24.0, 10262.0], [25.0, 10786.0], [26.0, 10586.0], [27.0, 11076.0], [29.0, 10926.0], [30.0, 10409.0], [33.0, 10312.0], [32.0, 10763.0], [35.0, 10172.0], [34.0, 11062.0], [36.0, 11278.0], [39.0, 10546.666666666666], [41.0, 11050.0], [40.0, 10708.0], [43.0, 10146.0], [42.0, 10034.0], [45.0, 10870.0], [47.0, 11006.0], [46.0, 10112.0], [49.0, 10754.0], [48.0, 11023.0], [51.0, 10023.0], [50.0, 9560.0], [53.0, 11007.0], [52.0, 10710.0], [55.0, 10096.0], [54.0, 10016.0], [57.0, 10495.0], [56.0, 10767.0], [59.0, 10482.0], [58.0, 9989.0], [60.0, 10779.0], [63.0, 10569.0], [62.0, 10590.0], [67.0, 10573.0], [66.0, 10576.0], [65.0, 10845.0], [64.0, 10909.0], [71.0, 10689.0], [70.0, 9891.0], [69.0, 9148.0], [68.0, 10672.0], [75.0, 10683.0], [74.0, 10251.0], [73.0, 9484.0], [72.0, 10588.0], [79.0, 10577.0], [78.0, 10533.0], [77.0, 10850.0], [76.0, 8923.0], [81.0, 10598.0], [80.0, 9196.0], [87.0, 10218.5], [85.0, 10352.0], [84.0, 10344.0], [91.0, 10559.0], [90.0, 10567.5], [88.0, 9490.0], [95.0, 9585.0], [94.0, 10974.0], [93.0, 10547.0], [92.0, 8736.0], [99.0, 10097.0], [98.0, 10590.0], [96.0, 9309.0], [103.0, 10633.0], [102.0, 10600.0], [101.0, 10465.0], [100.0, 10685.0], [107.0, 10156.0], [106.0, 10980.0], [105.0, 10970.0], [104.0, 11175.0], [111.0, 11087.0], [110.0, 9232.0], [109.0, 11061.0], [108.0, 9085.0], [115.0, 8998.0], [114.0, 10293.0], [113.0, 10491.0], [119.0, 10867.0], [118.0, 10791.0], [117.0, 10514.5], [123.0, 8877.0], [122.0, 10512.0], [121.0, 9120.0], [120.0, 10735.0], [127.0, 10573.0], [126.0, 8725.0], [125.0, 8963.0], [124.0, 10746.0], [135.0, 10324.0], [134.0, 8760.0], [133.0, 9018.0], [132.0, 10058.0], [131.0, 10488.0], [130.0, 10465.0], [129.0, 10311.0], [128.0, 8889.0], [143.0, 10605.0], [142.0, 10424.0], [141.0, 10519.0], [140.0, 9615.5], [138.0, 10739.0], [137.0, 10670.0], [136.0, 10439.0], [151.0, 8485.0], [150.0, 10369.0], [149.0, 8908.5], [147.0, 10313.0], [146.0, 10572.0], [145.0, 10705.0], [144.0, 8437.0], [158.0, 8684.0], [157.0, 8268.0], [156.0, 8255.0], [155.0, 9185.0], [154.0, 8605.0], [153.0, 10510.0], [167.0, 8822.0], [166.0, 10526.0], [165.0, 10436.0], [164.0, 11337.0], [163.0, 10802.0], [162.0, 8584.0], [161.0, 10619.0], [160.0, 9617.5], [175.0, 11344.0], [174.0, 9154.0], [173.0, 9919.5], [171.0, 8863.5], [169.0, 10403.5], [182.0, 9065.0], [181.0, 10195.0], [180.0, 10041.0], [178.0, 11114.0], [177.0, 7722.0], [176.0, 9230.0], [191.0, 10621.0], [190.0, 10492.0], [189.0, 9264.0], [188.0, 8432.0], [187.0, 9079.0], [186.0, 8084.0], [185.0, 10470.0], [184.0, 9869.5], [199.0, 10503.0], [198.0, 8025.0], [197.0, 10250.0], [196.0, 10500.0], [195.0, 11229.0], [194.0, 10290.0], [193.0, 9051.0], [192.0, 8125.0], [207.0, 8361.0], [206.0, 8044.0], [205.0, 9257.0], [204.0, 9058.0], [203.0, 10420.0], [202.0, 11012.0], [201.0, 10405.0], [200.0, 11371.0], [215.0, 11071.0], [214.0, 8482.0], [213.0, 8432.0], [212.0, 11230.0], [211.0, 7646.0], [210.0, 10893.0], [209.0, 10977.0], [208.0, 10436.0], [223.0, 8109.0], [222.0, 8689.0], [221.0, 10041.0], [220.0, 9000.0], [219.0, 7813.0], [218.0, 7990.0], [217.0, 10170.0], [216.0, 10871.0], [231.0, 8701.0], [230.0, 8468.0], [229.0, 7637.0], [228.0, 10809.0], [227.0, 9043.0], [226.0, 8672.0], [225.0, 8052.0], [224.0, 7272.0], [239.0, 8656.0], [238.0, 7985.0], [237.0, 7880.0], [236.0, 7596.0], [235.0, 10636.5], [233.0, 11058.0], [232.0, 10964.0], [247.0, 8266.0], [246.0, 6934.0], [245.0, 9641.0], [244.0, 8440.0], [243.0, 10852.0], [242.0, 9167.0], [241.0, 7625.0], [240.0, 10675.0], [255.0, 8972.5], [253.0, 10521.0], [251.0, 8662.0], [250.0, 7091.0], [249.0, 9710.0], [248.0, 8405.0], [269.0, 10085.0], [270.0, 10604.0], [268.0, 10513.0], [259.0, 11113.0], [258.0, 7526.0], [257.0, 7304.0], [256.0, 8599.0], [267.0, 8235.0], [266.0, 10518.0], [265.0, 7397.0], [264.0, 8260.0], [263.0, 9239.666666666666], [260.0, 7020.0], [286.0, 9388.0], [287.0, 7241.0], [285.0, 7467.0], [284.0, 9248.0], [283.0, 7222.0], [282.0, 7457.0], [281.0, 9705.0], [280.0, 8511.0], [279.0, 7647.0], [272.0, 8037.0], [274.0, 9713.0], [273.0, 9252.0], [277.0, 8251.0], [276.0, 10612.5], [301.0, 9658.0], [303.0, 8961.5], [300.0, 10473.0], [291.0, 10851.0], [290.0, 8768.0], [289.0, 10649.0], [299.0, 8777.5], [297.0, 9445.0], [296.0, 10540.0], [295.0, 11405.0], [294.0, 8263.0], [293.0, 8113.0], [292.0, 7365.0], [318.0, 7892.0], [319.0, 9611.0], [317.0, 10586.0], [316.0, 7497.0], [315.0, 8411.0], [314.0, 7216.0], [313.0, 7723.0], [312.0, 10318.5], [311.0, 9528.0], [304.0, 8976.0], [307.0, 7274.0], [306.0, 7768.5], [309.0, 10614.0], [308.0, 8296.0], [334.0, 7471.0], [335.0, 9373.0], [333.0, 7039.0], [332.0, 9633.0], [331.0, 6989.0], [330.0, 8891.0], [329.0, 7312.0], [328.0, 10462.0], [327.0, 7064.0], [321.0, 8765.0], [320.0, 7986.0], [323.0, 9025.0], [322.0, 11124.0], [326.0, 7983.0], [325.0, 10604.0], [324.0, 8141.0], [348.0, 10362.0], [350.0, 9184.5], [351.0, 11062.0], [349.0, 8507.5], [346.0, 10368.0], [344.0, 10505.0], [342.0, 7341.0], [337.0, 7224.0], [336.0, 10434.0], [339.0, 10557.0], [338.0, 7226.0], [341.0, 9244.0], [340.0, 7100.0], [366.0, 7257.0], [367.0, 6831.0], [365.0, 10114.0], [364.0, 8334.0], [363.0, 6355.0], [362.0, 10379.0], [361.0, 9990.666666666666], [358.0, 8965.0], [355.0, 10537.0], [354.0, 7263.0], [353.0, 8037.0], [352.0, 7184.0], [356.0, 7190.0], [380.0, 10535.5], [383.0, 7837.0], [382.0, 7998.0], [381.0, 8933.0], [378.0, 8865.5], [374.0, 7036.0], [369.0, 8903.0], [368.0, 6975.0], [373.0, 7233.0], [372.0, 10506.0], [371.0, 7755.0], [370.0, 7267.0], [398.0, 7916.0], [399.0, 9667.0], [396.0, 7654.0], [387.0, 7700.0], [386.0, 10049.0], [385.0, 10226.0], [384.0, 11033.0], [395.0, 7046.0], [394.0, 8819.0], [393.0, 10051.0], [392.0, 9184.0], [391.0, 7322.5], [389.0, 6737.0], [388.0, 7729.0], [414.0, 8736.0], [415.0, 9946.0], [413.0, 10111.0], [412.0, 6809.0], [411.0, 10060.0], [410.0, 10707.0], [409.0, 7645.0], [408.0, 8351.0], [407.0, 10073.0], [401.0, 7714.0], [400.0, 8043.0], [403.0, 7558.0], [402.0, 6833.0], [406.0, 10673.0], [405.0, 9646.0], [404.0, 7435.0], [430.0, 9240.0], [431.0, 9883.0], [428.0, 7442.0], [418.0, 6729.0], [417.0, 9814.0], [416.0, 6810.0], [427.0, 7318.0], [426.0, 7708.0], [425.0, 8518.0], [424.0, 9690.0], [423.0, 8493.0], [422.0, 7425.0], [421.0, 9681.0], [420.0, 9171.5], [435.0, 7790.0], [446.0, 10241.0], [445.0, 7427.0], [443.0, 8363.0], [441.0, 8268.0], [438.0, 7329.0], [437.0, 7011.0], [436.0, 7383.0], [434.0, 6110.0], [433.0, 8811.0], [432.0, 10655.0], [451.0, 7527.0], [461.0, 10555.0], [463.0, 9411.5], [460.0, 8678.0], [450.0, 7655.0], [449.0, 6650.0], [448.0, 10364.5], [458.0, 8125.0], [456.0, 9808.0], [455.0, 8378.0], [454.0, 10003.0], [453.0, 7308.0], [452.0, 7769.0], [478.0, 10649.0], [479.0, 10581.0], [477.0, 8168.5], [467.0, 7146.0], [465.0, 8720.0], [464.0, 10206.0], [475.0, 7246.0], [474.0, 9617.0], [473.0, 6962.0], [471.0, 6728.0], [470.0, 6634.0], [469.0, 9621.5], [494.0, 9005.0], [495.0, 9887.0], [493.0, 10328.5], [483.0, 7418.0], [482.0, 8349.0], [481.0, 9625.5], [491.0, 9573.0], [490.0, 9669.0], [489.0, 7222.0], [488.0, 7160.0], [487.0, 10158.0], [486.0, 10517.0], [485.0, 6982.0], [484.0, 8945.0], [510.0, 7368.0], [511.0, 7933.0], [509.0, 6284.0], [508.0, 7136.0], [507.0, 7378.0], [506.0, 7630.0], [505.0, 6499.0], [504.0, 10316.0], [503.0, 8121.0], [497.0, 7304.0], [496.0, 9572.0], [499.0, 9188.0], [498.0, 7346.0], [501.0, 9680.0], [500.0, 10208.0], [540.0, 6949.0], [536.0, 8656.5], [518.0, 8830.0], [516.0, 7989.0], [514.0, 6335.0], [512.0, 8209.0], [534.0, 10556.0], [532.0, 9094.0], [530.0, 6913.0], [528.0, 8822.0], [526.0, 7711.5], [524.0, 7345.0], [522.0, 9753.0], [520.0, 10485.0], [572.0, 6841.0], [574.0, 8801.0], [570.0, 5953.0], [550.0, 8384.0], [548.0, 9987.0], [546.0, 9641.0], [544.0, 7627.0], [566.0, 9043.0], [562.0, 6937.0], [560.0, 7078.0], [558.0, 7235.0], [556.0, 7317.0], [554.0, 11134.0], [552.0, 10138.0], [604.0, 8988.0], [606.0, 6516.0], [602.0, 7860.0], [600.0, 9088.0], [598.0, 7765.0], [596.0, 6999.0], [594.0, 9858.0], [592.0, 10952.0], [590.0, 6949.0], [578.0, 7441.0], [576.0, 5792.0], [588.0, 8699.0], [586.0, 6752.0], [636.0, 9570.0], [638.0, 8128.0], [634.0, 6393.0], [632.0, 5337.0], [630.0, 6860.0], [628.0, 10482.0], [626.0, 7030.0], [624.0, 9753.0], [622.0, 9900.0], [610.0, 6479.0], [608.0, 6808.0], [614.0, 9803.0], [612.0, 6591.0], [620.0, 10582.0], [618.0, 9192.5], [616.0, 9825.0], [668.0, 9329.0], [670.0, 7233.0], [666.0, 9803.0], [664.0, 7007.5], [662.0, 7056.0], [660.0, 7425.0], [656.0, 7598.0], [652.0, 7344.0], [640.0, 7384.5], [646.0, 9760.0], [642.0, 8433.0], [650.0, 6350.0], [648.0, 6673.0], [700.0, 10325.0], [702.0, 10600.0], [698.0, 6903.0], [696.0, 6219.0], [694.0, 8246.0], [692.0, 8392.0], [690.0, 6635.0], [688.0, 9757.0], [686.0, 7227.5], [672.0, 9486.0], [678.0, 9525.0], [674.0, 10361.0], [684.0, 9441.0], [682.0, 6392.0], [680.0, 8014.0], [730.0, 7268.0], [732.0, 11004.0], [728.0, 8556.0], [710.0, 8377.0], [708.0, 10501.0], [706.0, 9652.0], [704.0, 8162.0], [726.0, 6586.0], [724.0, 7749.0], [722.0, 7293.0], [720.0, 9628.0], [718.0, 11190.0], [716.0, 5716.0], [714.0, 8468.0], [712.0, 7489.0], [764.0, 10190.0], [766.0, 7477.5], [762.0, 7509.666666666667], [758.0, 9227.0], [756.0, 6655.0], [752.0, 10515.0], [746.0, 10227.0], [744.0, 11135.0], [742.0, 8132.5], [740.0, 8563.0], [738.0, 11330.0], [736.0, 7012.666666666667], [796.0, 8570.666666666666], [798.0, 7342.0], [792.0, 8633.0], [774.0, 8088.0], [772.0, 10085.0], [770.0, 6783.0], [768.0, 6704.0], [788.0, 7508.0], [786.0, 6872.0], [784.0, 6556.5], [782.0, 5391.0], [780.0, 6041.0], [778.0, 8949.0], [776.0, 9788.0], [828.0, 7461.0], [830.0, 7574.0], [826.0, 6860.0], [824.0, 10357.0], [822.0, 4590.0], [820.0, 10418.0], [818.0, 7248.0], [816.0, 6791.0], [814.0, 8195.0], [802.0, 6327.0], [800.0, 7039.0], [812.0, 6975.0], [810.0, 7174.0], [860.0, 7473.0], [862.0, 9901.0], [856.0, 5549.0], [838.0, 4384.0], [836.0, 9931.0], [834.0, 8480.0], [832.0, 6015.0], [852.0, 9970.0], [850.0, 8967.0], [848.0, 6516.5], [846.0, 7477.0], [844.0, 7719.0], [842.0, 9005.0], [892.0, 6707.0], [894.0, 7825.0], [890.0, 9649.0], [888.0, 6643.0], [886.0, 6148.0], [884.0, 8265.0], [882.0, 4253.0], [880.0, 6504.0], [878.0, 8550.0], [864.0, 6226.0], [870.0, 7413.0], [866.0, 10100.0], [876.0, 5670.5], [874.0, 7720.0], [872.0, 7701.0], [924.0, 10715.0], [926.0, 9689.0], [922.0, 10078.5], [920.0, 5397.5], [918.0, 9671.0], [916.0, 6984.0], [914.0, 10248.0], [912.0, 6765.0], [910.0, 4414.0], [898.0, 7995.0], [896.0, 9714.0], [902.0, 7747.0], [900.0, 9743.0], [908.0, 4903.0], [906.0, 7711.0], [954.0, 4198.0], [958.0, 9450.0], [952.0, 4092.0], [934.0, 6190.0], [930.0, 6445.0], [948.0, 9995.0], [944.0, 7087.0], [942.0, 8601.0], [940.0, 10711.0], [938.0, 10914.0], [936.0, 10136.0], [988.0, 5867.0], [990.0, 10896.0], [986.0, 7200.0], [984.0, 7403.5], [982.0, 8435.0], [980.0, 7974.0], [978.0, 7102.0], [976.0, 5938.0], [974.0, 7560.0], [962.0, 4216.0], [960.0, 10594.0], [966.0, 5162.0], [964.0, 8342.5], [972.0, 6500.0], [970.0, 10676.0], [968.0, 7398.0], [1020.0, 5051.0], [1022.0, 5936.0], [1018.0, 8378.5], [1016.0, 8742.0], [1014.0, 11075.0], [1010.0, 10198.0], [1008.0, 9382.0], [1004.0, 10324.0], [994.0, 5140.0], [992.0, 9453.0], [998.0, 10621.0], [996.0, 9327.0], [1002.0, 6852.0], [1000.0, 3540.0], [1080.0, 4911.0], [1084.0, 9970.0], [1076.0, 8140.0], [1072.0, 8169.0], [1068.0, 6374.0], [1064.0, 8147.0], [1060.0, 8032.0], [1056.0, 7624.0], [1052.0, 7253.333333333333], [1028.0, 6377.0], [1024.0, 3951.0], [1036.0, 8128.0], [1032.0, 7916.0], [1048.0, 8228.0], [1044.0, 6994.0], [1040.0, 6080.0], [1144.0, 6229.0], [1148.0, 6467.0], [1140.0, 6187.0], [1136.0, 6774.0], [1132.0, 10088.0], [1128.0, 11084.0], [1124.0, 5741.0], [1120.0, 6799.0], [1116.0, 7805.5], [1092.0, 11052.0], [1088.0, 7476.0], [1100.0, 8024.0], [1096.0, 7550.0], [1112.0, 6311.0], [1108.0, 5656.0], [1104.0, 10896.0], [1208.0, 3956.0], [1212.0, 10638.0], [1184.0, 7586.0], [1188.0, 7407.0], [1192.0, 9655.0], [1200.0, 10668.0], [1164.0, 9308.0], [1160.0, 8360.0], [1152.0, 6684.0], [1180.0, 8340.0], [1176.0, 7426.0], [1172.0, 10399.0], [1168.0, 7617.0], [1196.0, 6131.0], [1272.0, 4057.0], [1276.0, 9002.0], [1248.0, 6117.0], [1252.0, 5927.0], [1256.0, 9142.0], [1268.0, 9480.5], [1264.0, 5278.5], [1228.0, 9397.0], [1224.0, 9955.0], [1220.0, 4336.0], [1216.0, 5541.0], [1244.0, 10318.0], [1240.0, 6768.5], [1236.0, 4308.0], [1232.0, 9139.0], [1260.0, 4338.0], [1332.0, 6903.0], [1340.0, 8258.0], [1312.0, 10357.0], [1320.0, 9529.0], [1336.0, 5928.0], [1328.0, 8496.0], [1292.0, 9306.0], [1288.0, 8070.0], [1284.0, 7454.0], [1280.0, 10213.0], [1308.0, 7570.0], [1324.0, 9009.0], [1400.0, 5115.5], [1380.0, 10930.0], [1384.0, 11893.0], [1404.0, 3419.0], [1396.0, 10860.0], [1392.0, 10198.0], [1348.0, 10096.0], [1352.0, 7871.0], [1356.0, 10535.0], [1372.0, 7335.5], [1368.0, 7893.0], [1360.0, 3772.0], [1388.0, 3499.0], [1456.0, 2161.0], [1464.0, 3762.0], [1444.0, 2786.0], [1448.0, 2271.0], [1468.0, 8903.0], [1460.0, 2370.0], [1408.0, 10523.0], [1412.0, 5706.0], [1416.0, 4643.0], [1420.0, 4235.0], [1436.0, 7342.5], [1432.0, 6251.0], [1428.0, 9052.0], [1424.0, 2350.0], [1452.0, 9662.0], [1528.0, 9084.0], [1504.0, 9902.0], [1508.0, 2710.0], [1512.0, 2152.0], [1532.0, 2553.0], [1524.0, 6360.0], [1520.0, 5204.0], [1472.0, 2269.0], [1476.0, 6541.0], [1480.0, 2964.0], [1484.0, 6288.0], [1500.0, 7555.0], [1492.0, 6277.0], [1488.0, 6853.0], [1516.0, 2360.0], [1592.0, 1605.0], [1596.0, 10366.0], [1568.0, 7622.0], [1576.0, 2951.5], [1584.0, 9868.0], [1548.0, 2126.0], [1540.0, 7410.0], [1536.0, 8857.0], [1564.0, 1514.0], [1560.0, 11013.0], [1556.0, 2132.0], [1552.0, 8590.0], [1580.0, 1977.0], [1656.0, 1772.0], [1632.0, 6925.0], [1636.0, 4332.0], [1640.0, 8678.0], [1660.0, 1907.0], [1652.0, 1866.0], [1648.0, 3095.0], [1600.0, 7383.5], [1604.0, 2199.0], [1612.0, 3049.0], [1628.0, 1749.0], [1624.0, 2928.0], [1616.0, 8592.0], [1644.0, 3353.0], [1716.0, 5685.0], [1724.0, 6304.0], [1700.0, 6718.0], [1720.0, 9946.0], [1664.0, 10541.0], [1668.0, 9319.0], [1672.0, 10335.0], [1676.0, 2541.0], [1692.0, 3832.666666666667], [1684.0, 2859.0], [1708.0, 4956.0], [1704.0, 2554.0], [1780.0, 6120.0], [1788.0, 1377.0], [1768.0, 2382.5], [1784.0, 6777.0], [1776.0, 8800.0], [1740.0, 6269.0], [1736.0, 2113.0], [1732.0, 1889.0], [1756.0, 1614.0], [1752.0, 5960.0], [1748.0, 1891.0], [1744.0, 2075.0], [1772.0, 8268.0], [1840.0, 6500.5], [1848.0, 7761.0], [1828.0, 10221.0], [1832.0, 1555.0], [1852.0, 10815.0], [1844.0, 1363.0], [1792.0, 1658.0], [1796.0, 7112.0], [1800.0, 2659.0], [1804.0, 4507.0], [1820.0, 3852.0], [1816.0, 2104.0], [1812.0, 1735.0], [1836.0, 10081.0], [1912.0, 1386.0], [1888.0, 1342.0], [1892.0, 1095.0], [1916.0, 1974.5], [1908.0, 1153.0], [1904.0, 1140.0], [1860.0, 1334.0], [1864.0, 1095.0], [1868.0, 2503.0], [1884.0, 1259.0], [1880.0, 1373.0], [1876.0, 1315.0], [1872.0, 3151.25], [1900.0, 1474.0], [1968.0, 3515.0], [1980.0, 2421.0], [1952.0, 1106.0], [1956.0, 1104.0], [1972.0, 1195.0], [1920.0, 1111.0], [1924.0, 1098.0], [1928.0, 10033.0], [1932.0, 1319.0], [1948.0, 1164.0], [1944.0, 1092.0], [1940.0, 1202.0], [1936.0, 4556.0], [1964.0, 6092.0], [1960.0, 1094.0], [2040.0, 1112.5], [2044.0, 6041.5], [2016.0, 2045.0], [2020.0, 10472.0], [2032.0, 1630.0], [1996.0, 2383.0], [1992.0, 2289.0], [1984.0, 8634.0], [2012.0, 5988.0], [2008.0, 5710.0], [2004.0, 1279.0], [2000.0, 1271.0], [2168.0, 1133.0], [2112.0, 1241.5], [2120.0, 1684.5], [2128.0, 1092.0], [2136.0, 1112.0], [2160.0, 5064.0], [2152.0, 1117.0], [2144.0, 8348.0], [2072.0, 1120.0], [2056.0, 1153.0], [2048.0, 1293.5], [2104.0, 1097.0], [2096.0, 2088.0], [2088.0, 1094.0], [2080.0, 1096.5], [2288.0, 5430.0], [2240.0, 1216.0], [2248.0, 9372.0], [2256.0, 7551.0], [2264.0, 1172.0], [2296.0, 1113.5], [2280.0, 9476.0], [2272.0, 1240.0], [2200.0, 1105.0], [2184.0, 8441.0], [2176.0, 1436.75], [2232.0, 1155.0], [2216.0, 1161.0], [2208.0, 8461.0], [2416.0, 4467.5], [2424.0, 2032.0], [2368.0, 1094.0], [2376.0, 1665.75], [2384.0, 1099.0], [2392.0, 10408.0], [2408.0, 1097.0], [2400.0, 1130.0], [2304.0, 1773.0], [2320.0, 1091.0], [2312.0, 1099.0], [2328.0, 2388.0], [2352.0, 2044.5], [2344.0, 1661.0], [2336.0, 3043.0], [2536.0, 8234.0], [2544.0, 5174.0], [2504.0, 1236.0], [2512.0, 1096.3333333333333], [2520.0, 1100.0], [2528.0, 1098.0], [2456.0, 1915.0], [2448.0, 1091.0], [2440.0, 2949.0], [2480.0, 1984.0], [2672.0, 4404.5], [2624.0, 3732.5], [2640.0, 1094.0], [2680.0, 1603.0], [2560.0, 1784.0], [2576.0, 1968.5], [2584.0, 10500.0], [2616.0, 2198.0], [2608.0, 6303.0], [2600.0, 4401.0], [2592.0, 4218.0], [2792.0, 3719.25], [2808.0, 2088.0], [2752.0, 5691.5], [2760.0, 5657.0], [2776.0, 1346.0], [2800.0, 2969.5714285714284], [2784.0, 2418.25], [2688.0, 5277.5], [2696.0, 1713.0], [2704.0, 1723.0], [2712.0, 1679.0], [2744.0, 1412.0], [2736.0, 2738.0], [2720.0, 1605.0], [2936.0, 1731.0], [2920.0, 1980.7222222222224], [2880.0, 2878.857142857143], [2888.0, 7314.0], [2896.0, 3155.0], [2904.0, 3655.0], [2928.0, 1153.0], [2912.0, 4717.0], [2816.0, 1145.0], [2832.0, 3952.0], [2840.0, 1389.0], [2872.0, 1657.4], [2864.0, 1155.5], [2856.0, 1880.3333333333335], [2848.0, 2246.0], [2944.0, 3318.75], [2952.0, 2826.6], [3000.0, 2787.083034536023], [2960.0, 1871.6666666666667], [2968.0, 5251.0], [2992.0, 716.8], [2984.0, 2602.6363636363635], [2976.0, 1361.5], [2161.0, 1102.0], [2169.0, 8215.0], [2121.0, 1096.0], [2129.0, 5969.0], [2137.0, 1096.0], [2049.0, 1159.0], [2057.0, 3028.0], [2065.0, 1178.3333333333333], [2073.0, 4031.0], [2097.0, 1421.0], [2089.0, 1097.0], [2081.0, 1102.0], [2297.0, 8368.0], [2289.0, 4531.0], [2257.0, 8513.0], [2241.0, 1581.0], [2249.0, 1104.0], [2265.0, 1558.0], [2281.0, 1093.0], [2273.0, 7544.0], [2201.0, 1093.0], [2193.0, 3433.0], [2185.0, 1111.0], [2233.0, 1092.0], [2217.0, 1538.5], [2417.0, 4279.0], [2425.0, 1101.0], [2385.0, 1342.0], [2393.0, 1095.0], [2401.0, 10718.0], [2313.0, 2025.0], [2321.0, 1104.0], [2329.0, 1792.0], [2361.0, 1101.0], [2337.0, 1108.0], [2545.0, 1100.0], [2553.0, 1762.5], [2513.0, 2138.0], [2521.0, 1957.0], [2529.0, 1657.0], [2433.0, 1804.5], [2449.0, 1100.0], [2457.0, 1207.0], [2489.0, 2191.0], [2465.0, 5587.5], [2673.0, 3200.5], [2625.0, 9185.0], [2633.0, 2476.0], [2649.0, 4886.5], [2681.0, 1853.0], [2665.0, 1479.5], [2657.0, 3356.5], [2561.0, 4277.0], [2577.0, 1592.0], [2585.0, 2046.0], [2617.0, 1381.0], [2609.0, 1646.0], [2601.0, 9119.0], [2801.0, 2529.0], [2809.0, 2485.0], [2753.0, 3475.0], [2761.0, 1092.0], [2769.0, 3733.75], [2777.0, 1122.0], [2793.0, 1093.0], [2785.0, 4647.0], [2697.0, 2681.0], [2705.0, 7158.0], [2745.0, 2789.0], [2737.0, 5819.0], [2729.0, 1689.0], [2721.0, 1600.0], [2929.0, 2153.333333333333], [2937.0, 1131.5], [2881.0, 2966.4000000000005], [2889.0, 2953.6666666666665], [2897.0, 2073.928571428571], [2905.0, 1095.0], [2921.0, 2145.1666666666665], [2913.0, 1215.5], [2817.0, 1156.0], [2825.0, 744.0], [2833.0, 999.25], [2873.0, 1865.5], [2865.0, 2423.6875], [2857.0, 9255.0], [2849.0, 2241.4999999999995], [2993.0, 3099.687500000001], [2945.0, 4773.0], [2953.0, 3978.6000000000004], [2969.0, 2426.7692307692314], [2985.0, 1446.0], [2977.0, 1101.0], [1081.0, 6810.0], [1085.0, 4677.0], [1077.0, 8101.0], [1073.0, 8061.0], [1069.0, 6700.0], [1065.0, 10014.0], [1061.0, 4042.0], [1057.0, 7364.0], [1049.0, 6853.5], [1037.0, 6081.0], [1033.0, 4041.0], [1029.0, 10240.0], [1025.0, 8561.0], [1041.0, 4829.0], [1145.0, 3098.0], [1149.0, 4160.0], [1141.0, 8277.0], [1137.0, 8936.0], [1133.0, 6117.0], [1129.0, 9846.0], [1125.0, 10621.0], [1121.0, 9916.0], [1117.0, 6532.0], [1093.0, 7561.0], [1089.0, 4686.0], [1101.0, 9903.0], [1097.0, 7516.0], [1113.0, 8140.0], [1109.0, 8543.0], [1105.0, 7526.0], [1209.0, 6540.0], [1185.0, 8624.0], [1193.0, 6213.0], [1213.0, 11158.0], [1205.0, 8877.0], [1201.0, 3437.0], [1153.0, 3110.0], [1157.0, 8485.5], [1161.0, 9197.0], [1165.0, 7907.0], [1181.0, 7578.0], [1177.0, 9347.0], [1169.0, 9812.0], [1197.0, 7620.0], [1269.0, 9384.0], [1277.0, 10782.0], [1249.0, 8534.0], [1253.0, 8508.0], [1257.0, 8405.0], [1273.0, 8112.0], [1265.0, 5952.0], [1229.0, 10702.0], [1221.0, 6392.0], [1217.0, 3191.0], [1245.0, 8577.0], [1241.0, 10786.0], [1237.0, 6269.0], [1233.0, 10266.0], [1261.0, 8142.0], [1337.0, 11004.0], [1341.0, 3769.0], [1313.0, 10310.0], [1321.0, 9422.0], [1333.0, 8086.0], [1329.0, 2847.0], [1293.0, 5320.0], [1289.0, 6852.0], [1309.0, 4351.0], [1305.0, 6796.666666666667], [1301.0, 7052.0], [1297.0, 10375.0], [1325.0, 4749.0], [1397.0, 7005.0], [1393.0, 3586.0], [1405.0, 9849.0], [1377.0, 8944.5], [1381.0, 4599.0], [1401.0, 6318.0], [1345.0, 8024.0], [1349.0, 6177.0], [1373.0, 9825.0], [1365.0, 5301.0], [1361.0, 10389.0], [1389.0, 4551.0], [1385.0, 4582.0], [1465.0, 2399.0], [1469.0, 5588.0], [1445.0, 2200.0], [1449.0, 2161.0], [1461.0, 6448.0], [1457.0, 6554.0], [1421.0, 4223.0], [1417.0, 3505.0], [1409.0, 4380.0], [1437.0, 6229.0], [1429.0, 9691.0], [1425.0, 7679.0], [1453.0, 7804.0], [1525.0, 3297.0], [1533.0, 6450.0], [1505.0, 1924.0], [1509.0, 10192.0], [1513.0, 8241.0], [1529.0, 9225.0], [1481.0, 7561.0], [1477.0, 8604.0], [1473.0, 9359.0], [1501.0, 10627.0], [1497.0, 5590.5], [1493.0, 8612.0], [1489.0, 9714.0], [1517.0, 8266.0], [1593.0, 10408.0], [1597.0, 10099.0], [1577.0, 9231.0], [1573.0, 9558.0], [1589.0, 6419.0], [1585.0, 8186.0], [1545.0, 6067.5], [1541.0, 5459.0], [1537.0, 9271.0], [1565.0, 2945.0], [1561.0, 6290.0], [1557.0, 5732.0], [1657.0, 1133.0], [1661.0, 2319.0], [1633.0, 3203.0], [1637.0, 3045.0], [1641.0, 2992.0], [1649.0, 10471.0], [1613.0, 2356.0], [1609.0, 7141.5], [1601.0, 4210.0], [1629.0, 2588.0], [1625.0, 6370.0], [1621.0, 7036.0], [1617.0, 10287.0], [1645.0, 8538.0], [1721.0, 1585.0], [1701.0, 10355.0], [1705.0, 5399.0], [1725.0, 8459.0], [1717.0, 4205.0], [1713.0, 7789.0], [1665.0, 3896.0], [1669.0, 7992.0], [1673.0, 2316.0], [1689.0, 5687.0], [1681.0, 7328.5], [1709.0, 1702.0], [1781.0, 8782.0], [1789.0, 1443.0], [1761.0, 1555.5], [1765.0, 7494.0], [1785.0, 1091.0], [1741.0, 2013.0], [1733.0, 2782.0], [1729.0, 13530.5], [1753.0, 8269.0], [1749.0, 1913.0], [1745.0, 2632.0], [1773.0, 1589.0], [1841.0, 1583.0], [1849.0, 3034.0], [1825.0, 4555.0], [1829.0, 1098.0], [1853.0, 1302.0], [1845.0, 1579.0], [1793.0, 2799.0], [1801.0, 1564.0], [1821.0, 2885.0], [1817.0, 2093.0], [1813.0, 1108.0], [1809.0, 1862.0], [1837.0, 1531.0], [1913.0, 1202.0], [1917.0, 1362.0], [1889.0, 1729.0], [1893.0, 10796.0], [1909.0, 1102.0], [1857.0, 3267.0], [1865.0, 4905.0], [1885.0, 8031.0], [1881.0, 3440.0], [1877.0, 1323.0], [1873.0, 1883.0], [1901.0, 1098.0], [1897.0, 4407.5], [1973.0, 1112.0], [1969.0, 11689.0], [1953.0, 1104.0], [1957.0, 1158.0], [1977.0, 2541.75], [1921.0, 10127.0], [1925.0, 1099.0], [1929.0, 2275.0], [1933.0, 1101.0], [1949.0, 1096.0], [1945.0, 2727.0], [1941.0, 8801.0], [1937.0, 1093.0], [1965.0, 9047.0], [1961.0, 1093.0], [2033.0, 1567.0], [2037.0, 1124.5], [2041.0, 1144.0], [2017.0, 1199.0], [1985.0, 1787.0], [1989.0, 1319.0], [1997.0, 1274.0], [2013.0, 1102.0], [2009.0, 2852.0], [2005.0, 1099.0], [2029.0, 1098.0], [2025.0, 2299.5], [2021.0, 1370.0], [2154.0, 2290.5], [2122.0, 1102.0], [2138.0, 7457.0], [2170.0, 1096.0], [2146.0, 1915.0], [2074.0, 5855.0], [2066.0, 3101.0], [2050.0, 9521.0], [2106.0, 3389.5], [2098.0, 1103.0], [2090.0, 1098.0], [2082.0, 3112.0], [2290.0, 10387.0], [2242.0, 1173.0], [2258.0, 9416.0], [2298.0, 3919.0], [2274.0, 1866.0], [2202.0, 3030.0], [2194.0, 1097.0], [2186.0, 1369.0], [2178.0, 8378.0], [2234.0, 6166.0], [2226.0, 2594.0], [2218.0, 1265.0], [2210.0, 6114.0], [2410.0, 6149.0], [2370.0, 2729.5], [2386.0, 9592.0], [2394.0, 1099.0], [2418.0, 4010.0], [2402.0, 10605.0], [2306.0, 2178.0], [2322.0, 2920.0], [2362.0, 3157.0], [2354.0, 1177.5], [2338.0, 1102.0], [2546.0, 1093.0], [2538.0, 10578.0], [2506.0, 1605.0], [2514.0, 1141.0], [2554.0, 1582.0], [2530.0, 1093.0], [2450.0, 1704.0], [2442.0, 4821.5], [2490.0, 1098.0], [2482.0, 9035.0], [2474.0, 1162.0], [2466.0, 3006.0], [2682.0, 1353.0], [2674.0, 2890.0], [2626.0, 1163.0], [2634.0, 9069.0], [2642.0, 5903.5], [2650.0, 1094.0], [2658.0, 1551.0], [2562.0, 1948.0], [2570.0, 3661.5], [2578.0, 1655.0], [2618.0, 5231.0], [2610.0, 3823.0], [2602.0, 1185.0], [2802.0, 4189.0], [2762.0, 1577.0], [2770.0, 8722.5], [2810.0, 567.0], [2794.0, 2880.0], [2786.0, 1035.5], [2690.0, 5568.0], [2698.0, 10049.0], [2706.0, 3446.0], [2714.0, 1330.0], [2746.0, 1417.0], [2738.0, 3047.0], [2730.0, 5391.0], [2938.0, 1302.6], [2882.0, 2982.714285714286], [2890.0, 2989.0], [2898.0, 8326.0], [2906.0, 3261.4], [2930.0, 5802.5], [2922.0, 3614.6], [2914.0, 3975.75], [2818.0, 1131.5], [2826.0, 1152.0], [2834.0, 572.0], [2842.0, 8459.5], [2874.0, 2584.666666666667], [2866.0, 9277.0], [2850.0, 4231.5], [2954.0, 1885.75], [2962.0, 2119.6], [2970.0, 1587.0], [2994.0, 2220.285714285714], [2986.0, 5772.750000000001], [2978.0, 4237.615384615386], [2155.0, 1336.0], [2163.0, 5968.0], [2115.0, 2345.3333333333335], [2123.0, 5262.0], [2131.0, 3791.5], [2139.0, 3092.0], [2147.0, 1250.0], [2059.0, 1793.0], [2075.0, 1103.0], [2099.0, 1424.0], [2091.0, 5553.0], [2275.0, 9806.0], [2299.0, 9929.0], [2251.0, 1687.5], [2259.0, 1803.0], [2267.0, 4749.5], [2203.0, 9952.0], [2187.0, 8696.0], [2179.0, 1277.0], [2235.0, 8127.0], [2403.0, 1196.0], [2379.0, 4780.333333333333], [2387.0, 1165.0], [2395.0, 1097.0], [2427.0, 1494.5], [2307.0, 1234.0], [2315.0, 1437.0], [2323.0, 1968.0], [2331.0, 1099.0], [2363.0, 1098.0], [2347.0, 2371.6666666666665], [2339.0, 10283.0], [2547.0, 5902.0], [2555.0, 11417.0], [2499.0, 3791.5], [2507.0, 1178.0], [2515.0, 1862.0], [2523.0, 1395.0], [2531.0, 1998.0], [2435.0, 4797.5], [2451.0, 4118.0], [2459.0, 2533.0], [2491.0, 1115.0], [2475.0, 1100.0], [2467.0, 1172.0], [2683.0, 9444.0], [2667.0, 2642.5], [2635.0, 4987.5], [2627.0, 2229.0], [2643.0, 1101.0], [2651.0, 2167.0], [2675.0, 1170.0], [2659.0, 1516.0], [2563.0, 9959.0], [2571.0, 3470.0], [2579.0, 1633.0], [2587.0, 3802.0], [2603.0, 3001.0], [2595.0, 5232.0], [2803.0, 2246.0], [2811.0, 3646.666666666667], [2755.0, 1475.5], [2763.0, 1461.5], [2771.0, 1345.0], [2779.0, 2894.0], [2795.0, 1138.5], [2787.0, 1483.0], [2699.0, 9161.0], [2707.0, 4009.0], [2715.0, 1288.5], [2747.0, 5164.0], [2739.0, 1718.0], [2731.0, 2110.0], [2723.0, 1182.5], [2931.0, 1776.6666666666667], [2883.0, 3999.4444444444443], [2891.0, 1512.0], [2899.0, 2732.5], [2907.0, 4397.555555555556], [2939.0, 1638.0], [2923.0, 5369.0], [2915.0, 1110.0], [2819.0, 1116.0], [2827.0, 1719.5], [2835.0, 4957.5], [2843.0, 3826.6666666666665], [2875.0, 1095.0], [2867.0, 5079.0], [2859.0, 2665.75], [2851.0, 1212.0], [2955.0, 3056.5], [2947.0, 3947.666666666667], [2963.0, 2489.25], [2971.0, 1094.0], [2995.0, 1750.0], [2987.0, 2347.9999999999995], [2979.0, 3210.0], [539.0, 8677.0], [541.0, 7415.0], [537.0, 6853.0], [533.0, 7030.0], [531.0, 7370.0], [529.0, 10350.0], [523.0, 7353.0], [519.0, 8642.0], [513.0, 6867.0], [573.0, 7208.0], [575.0, 7081.0], [571.0, 9952.0], [569.0, 6978.0], [567.0, 6534.0], [565.0, 8224.666666666666], [561.0, 10421.0], [559.0, 7828.0], [547.0, 10044.0], [545.0, 8322.0], [551.0, 8201.0], [549.0, 10119.0], [557.0, 10124.0], [555.0, 7330.0], [553.0, 6958.0], [605.0, 7086.0], [607.0, 7877.0], [603.0, 8617.5], [583.0, 10937.0], [581.0, 7225.0], [579.0, 10056.0], [577.0, 7736.0], [599.0, 10541.0], [597.0, 11129.0], [595.0, 7729.0], [593.0, 7719.0], [591.0, 16752.0], [589.0, 7091.0], [587.0, 10788.0], [585.0, 6901.0], [635.0, 8358.0], [637.0, 5060.0], [633.0, 8355.0], [615.0, 6746.0], [613.0, 9449.0], [611.0, 7769.0], [609.0, 6888.0], [631.0, 7276.0], [629.0, 9565.0], [627.0, 6771.0], [625.0, 11312.0], [623.0, 6638.0], [621.0, 9661.0], [619.0, 7949.0], [669.0, 9634.0], [671.0, 7880.0], [667.0, 5512.0], [665.0, 7409.0], [661.0, 7446.0], [659.0, 8379.0], [657.0, 7094.0], [655.0, 10512.0], [643.0, 5156.0], [641.0, 6316.0], [647.0, 10471.0], [645.0, 9825.5], [653.0, 7318.0], [651.0, 7658.0], [649.0, 7437.0], [701.0, 9716.0], [703.0, 9680.0], [699.0, 6477.0], [675.0, 8438.0], [673.0, 7463.0], [695.0, 8303.0], [693.0, 11440.0], [691.0, 11219.0], [689.0, 6426.0], [687.0, 6609.0], [683.0, 7440.0], [681.0, 9749.0], [731.0, 7061.0], [733.0, 7432.0], [729.0, 6156.0], [711.0, 4925.0], [709.0, 11191.0], [707.0, 9778.0], [705.0, 10352.0], [727.0, 8513.0], [725.0, 6377.0], [723.0, 7460.0], [721.0, 6143.0], [719.0, 9517.0], [717.0, 4979.0], [715.0, 10604.0], [713.0, 7326.0], [743.0, 7075.0], [767.0, 5841.0], [763.0, 6248.0], [759.0, 5848.0], [757.0, 10277.0], [753.0, 6367.0], [751.0, 10478.0], [747.0, 10210.0], [745.0, 6509.0], [739.0, 7050.0], [737.0, 8529.0], [797.0, 10305.0], [799.0, 5828.0], [793.0, 6329.0], [791.0, 8592.5], [789.0, 10113.0], [785.0, 11259.0], [781.0, 8275.0], [779.0, 10115.0], [775.0, 9481.0], [773.0, 5151.0], [771.0, 8686.0], [769.0, 6543.0], [829.0, 9795.0], [831.0, 8369.0], [827.0, 10881.0], [825.0, 7998.0], [823.0, 6925.0], [821.0, 9854.0], [819.0, 6945.0], [817.0, 11160.0], [815.0, 10973.0], [803.0, 10089.0], [801.0, 7106.0], [807.0, 7143.333333333333], [805.0, 9527.0], [813.0, 10204.0], [811.0, 7166.0], [809.0, 6259.5], [861.0, 10041.0], [863.0, 9634.0], [859.0, 10808.0], [857.0, 7713.0], [855.0, 8468.5], [853.0, 7948.0], [851.0, 7332.0], [849.0, 6286.0], [845.0, 8508.0], [835.0, 10931.0], [833.0, 4535.0], [839.0, 6939.0], [837.0, 9897.0], [843.0, 6451.0], [841.0, 8718.5], [893.0, 6801.0], [895.0, 10558.0], [891.0, 7284.0], [889.0, 6282.0], [887.0, 10064.0], [885.0, 10383.0], [883.0, 9627.0], [881.0, 6678.0], [879.0, 5470.0], [867.0, 6697.0], [865.0, 10811.0], [871.0, 4273.0], [869.0, 7957.5], [877.0, 9559.0], [873.0, 6672.0], [903.0, 6649.0], [925.0, 7307.0], [923.0, 8242.0], [917.0, 9257.0], [913.0, 4382.0], [911.0, 9089.0], [909.0, 6602.0], [907.0, 9626.0], [905.0, 7370.0], [901.0, 6245.0], [899.0, 6794.0], [957.0, 10340.0], [959.0, 10578.0], [953.0, 10232.0], [935.0, 6355.0], [933.0, 8940.0], [931.0, 7562.0], [929.0, 7366.666666666667], [951.0, 5880.0], [949.0, 8249.0], [947.0, 10306.0], [945.0, 6928.0], [943.0, 6017.0], [941.0, 8537.0], [939.0, 8289.0], [937.0, 6195.0], [989.0, 6865.0], [991.0, 7075.0], [987.0, 7959.0], [967.0, 8423.0], [965.0, 9467.0], [961.0, 6001.0], [981.0, 6486.0], [979.0, 7683.0], [977.0, 3785.0], [975.0, 8010.0], [973.0, 7595.0], [971.0, 9517.0], [969.0, 9681.0], [1021.0, 9923.0], [1023.0, 6332.0], [1019.0, 6958.0], [999.0, 10167.0], [997.0, 8081.0], [993.0, 8349.0], [1013.0, 6097.5], [1011.0, 5202.0], [1009.0, 6227.0], [1007.0, 7097.0], [1005.0, 6839.0], [1003.0, 4806.0], [1001.0, 6058.0], [1082.0, 10111.0], [1086.0, 6795.0], [1078.0, 11339.0], [1074.0, 10232.0], [1070.0, 5160.0], [1066.0, 6899.0], [1062.0, 11264.0], [1058.0, 7852.5], [1054.0, 6218.0], [1030.0, 6173.0], [1026.0, 9427.0], [1038.0, 9663.0], [1034.0, 9369.0], [1046.0, 8624.0], [1042.0, 5911.0], [1146.0, 5681.0], [1150.0, 7802.0], [1142.0, 8792.0], [1138.0, 6341.0], [1134.0, 9757.0], [1130.0, 4187.0], [1126.0, 7461.0], [1122.0, 6344.0], [1118.0, 8298.0], [1094.0, 9547.0], [1090.0, 6743.0], [1102.0, 10472.0], [1098.0, 4473.0], [1114.0, 9723.0], [1110.0, 3569.0], [1106.0, 9631.0], [1206.0, 8487.0], [1202.0, 6197.0], [1214.0, 8115.0], [1186.0, 4973.0], [1190.0, 5481.0], [1210.0, 2984.0], [1166.0, 7450.0], [1162.0, 8900.0], [1154.0, 4457.0], [1182.0, 6677.0], [1178.0, 8462.0], [1174.0, 7239.0], [1170.0, 8363.0], [1198.0, 5515.0], [1266.0, 2834.0], [1278.0, 3866.0], [1250.0, 7297.0], [1254.0, 6316.0], [1258.0, 8336.0], [1274.0, 7884.0], [1230.0, 10617.0], [1226.0, 9476.5], [1222.0, 4146.0], [1218.0, 8285.0], [1246.0, 4776.0], [1242.0, 9638.0], [1238.0, 9194.0], [1234.0, 6273.0], [1262.0, 6421.0], [1338.0, 3297.0], [1342.0, 8434.0], [1318.0, 6792.666666666667], [1314.0, 3668.0], [1322.0, 5924.0], [1334.0, 6450.0], [1294.0, 10142.0], [1290.0, 5938.0], [1286.0, 10341.5], [1282.0, 10370.5], [1306.0, 6330.0], [1302.0, 6839.0], [1298.0, 6161.0], [1326.0, 8524.0], [1402.0, 8852.0], [1406.0, 7716.0], [1378.0, 2562.0], [1382.0, 7733.0], [1386.0, 10026.0], [1398.0, 8853.0], [1394.0, 8001.0], [1374.0, 10321.0], [1346.0, 5592.0], [1350.0, 8067.0], [1354.0, 7523.0], [1358.0, 5664.5], [1366.0, 5345.0], [1390.0, 12193.0], [1466.0, 2482.0], [1470.0, 1982.0], [1442.0, 9792.333333333334], [1446.0, 8289.0], [1462.0, 2095.0], [1458.0, 2544.0], [1438.0, 8017.0], [1410.0, 10208.0], [1414.0, 7653.5], [1418.0, 2296.0], [1422.0, 2389.0], [1434.0, 9603.0], [1430.0, 5416.0], [1426.0, 2101.0], [1454.0, 2444.0], [1530.0, 8418.0], [1534.0, 8223.0], [1506.0, 7135.0], [1510.0, 7937.0], [1514.0, 1617.0], [1526.0, 8307.0], [1522.0, 5338.0], [1502.0, 7958.0], [1474.0, 2410.0], [1478.0, 4175.0], [1482.0, 3296.0], [1486.0, 6523.0], [1498.0, 7793.0], [1494.0, 8949.0], [1490.0, 4454.0], [1518.0, 7733.0], [1590.0, 10669.0], [1586.0, 9630.0], [1598.0, 1920.0], [1574.0, 3235.0], [1570.0, 2688.6666666666665], [1578.0, 5424.0], [1594.0, 9458.0], [1550.0, 4771.5], [1546.0, 2001.0], [1542.0, 4647.0], [1566.0, 9129.0], [1562.0, 2073.0], [1558.0, 3947.0], [1554.0, 6020.5], [1582.0, 3486.0], [1658.0, 2204.0], [1662.0, 8066.0], [1634.0, 10569.0], [1638.0, 8138.0], [1642.0, 6014.0], [1654.0, 7534.5], [1650.0, 2068.0], [1630.0, 7807.0], [1602.0, 6161.0], [1610.0, 3268.0], [1606.0, 2922.5], [1614.0, 1771.0], [1626.0, 2229.0], [1622.0, 8247.0], [1618.0, 2275.0], [1646.0, 7953.0], [1714.0, 1484.0], [1722.0, 1099.0], [1698.0, 6014.0], [1702.0, 5223.0], [1718.0, 1721.0], [1694.0, 6412.0], [1666.0, 1728.0], [1670.0, 1967.0], [1674.0, 2104.0], [1678.0, 3998.0], [1682.0, 8086.0], [1710.0, 2897.0], [1706.0, 6279.0], [1778.0, 3767.5], [1790.0, 1527.0], [1762.0, 8192.0], [1766.0, 3625.0], [1782.0, 1989.0], [1742.0, 8656.0], [1738.0, 5503.0], [1734.0, 5754.0], [1730.0, 4292.0], [1754.0, 4764.0], [1750.0, 7768.0], [1746.0, 1681.0], [1774.0, 2900.0], [1850.0, 2825.0], [1854.0, 1096.0], [1826.0, 1980.0], [1834.0, 2165.0], [1846.0, 11001.0], [1842.0, 1573.0], [1822.0, 1360.0], [1798.0, 3067.5], [1802.0, 3838.0], [1806.0, 2120.0], [1818.0, 1664.0], [1814.0, 1575.0], [1838.0, 1104.0], [1914.0, 1097.0], [1918.0, 3526.0], [1890.0, 1101.0], [1898.0, 8497.0], [1894.0, 1108.0], [1910.0, 9470.0], [1906.0, 1097.5], [1886.0, 1460.0], [1858.0, 1937.0], [1862.0, 1161.0], [1866.0, 2640.0], [1882.0, 1213.0], [1878.0, 1099.0], [1874.0, 6626.0], [1902.0, 5698.0], [1970.0, 2540.0], [1982.0, 3404.0], [1954.0, 2190.0], [1978.0, 1094.0], [1950.0, 1211.0], [1922.0, 1099.0], [1926.0, 1115.0], [1930.0, 10524.0], [1934.0, 6738.0], [1946.0, 8359.0], [1942.0, 1095.0], [1938.0, 9842.0], [1962.0, 7640.0], [1958.0, 1094.0], [2038.0, 1111.0], [2034.0, 1479.0], [2046.0, 5734.5], [2022.0, 1343.0], [2042.0, 1807.0], [1998.0, 1100.0], [1994.0, 5318.0], [1990.0, 1265.0], [1986.0, 8776.0], [2014.0, 9310.0], [2010.0, 7984.0], [2006.0, 1176.0], [2002.0, 7018.5], [2030.0, 1161.0], [2026.0, 2562.0], [2164.0, 8356.0], [2156.0, 5882.0], [2172.0, 1616.5], [2116.0, 1097.0], [2132.0, 7495.0], [2140.0, 10558.0], [2148.0, 1105.0], [2076.0, 2060.0], [2060.0, 5956.0], [2108.0, 2388.5], [2100.0, 1098.0], [2092.0, 1314.0], [2084.0, 2953.0], [2292.0, 5706.5], [2252.0, 1141.0], [2244.0, 1237.0], [2260.0, 1370.0], [2284.0, 1106.6666666666667], [2204.0, 1862.0], [2196.0, 5665.0], [2188.0, 1094.0], [2180.0, 1092.0], [2236.0, 2463.0], [2220.0, 1841.0], [2212.0, 1123.5], [2420.0, 1347.5], [2404.0, 8486.0], [2372.0, 3956.0], [2380.0, 8175.0], [2388.0, 10712.0], [2396.0, 10624.0], [2428.0, 9466.0], [2308.0, 9401.0], [2324.0, 5712.0], [2332.0, 1154.5], [2364.0, 1133.0], [2348.0, 1262.0], [2340.0, 1096.0], [2532.0, 1099.0], [2548.0, 1248.0], [2556.0, 1134.0], [2508.0, 1093.0], [2516.0, 10012.0], [2524.0, 1170.0], [2460.0, 9924.0], [2452.0, 1092.0], [2444.0, 1201.5], [2436.0, 1186.0], [2492.0, 8381.0], [2484.0, 5650.0], [2468.0, 1159.0], [2676.0, 1738.0], [2668.0, 1779.0], [2628.0, 1237.0], [2636.0, 7013.0], [2644.0, 2658.0], [2652.0, 8169.0], [2660.0, 1095.0], [2564.0, 1598.0], [2572.0, 3988.0], [2580.0, 2793.0], [2588.0, 5383.0], [2604.0, 1181.0], [2796.0, 818.5], [2788.0, 3935.5], [2812.0, 1330.0], [2756.0, 2178.0], [2764.0, 1652.0], [2772.0, 1995.5], [2780.0, 1472.0], [2804.0, 1092.0], [2716.0, 9306.0], [2748.0, 1289.5], [2740.0, 1696.0], [2732.0, 1594.0], [2932.0, 4459.0], [2924.0, 3491.666666666667], [2940.0, 5619.473684210525], [2884.0, 2446.5], [2892.0, 2814.0625], [2900.0, 5324.5], [2908.0, 2818.833333333333], [2916.0, 9589.0], [2820.0, 2199.0], [2828.0, 3177.5], [2836.0, 2181.0], [2876.0, 2825.4666666666667], [2868.0, 1335.888888888889], [2860.0, 2955.25], [2852.0, 2725.75], [2956.0, 1176.5], [2948.0, 1861.5714285714284], [2964.0, 3400.166666666667], [2972.0, 4510.4], [2996.0, 2832.166666666667], [2988.0, 6650.75], [2980.0, 4161.833333333333], [2157.0, 8587.0], [2117.0, 1107.0], [2141.0, 5662.0], [2165.0, 1271.0], [2149.0, 1096.0], [2109.0, 5102.0], [2053.0, 5480.666666666667], [2061.0, 10483.0], [2077.0, 2047.0], [2101.0, 1090.0], [2085.0, 1386.0], [2293.0, 1227.0], [2285.0, 1307.0], [2245.0, 1100.0], [2261.0, 1102.0], [2269.0, 1533.5], [2301.0, 3468.5], [2277.0, 4547.5], [2205.0, 1420.0], [2197.0, 1468.0], [2189.0, 9942.0], [2181.0, 1382.0], [2237.0, 1102.0], [2229.0, 3502.3333333333335], [2413.0, 1156.6666666666667], [2389.0, 2298.0], [2397.0, 1292.0], [2429.0, 9220.0], [2405.0, 1161.0], [2309.0, 1378.0], [2317.0, 5699.5], [2365.0, 1097.0], [2357.0, 4241.666666666667], [2341.0, 1319.0], [2541.0, 1758.0], [2509.0, 10341.0], [2525.0, 7136.0], [2557.0, 1095.0], [2533.0, 1194.0], [2437.0, 1807.0], [2445.0, 1747.0], [2453.0, 1856.0], [2461.0, 1610.0], [2469.0, 4988.0], [2685.0, 2315.5], [2629.0, 1103.0], [2645.0, 1094.0], [2653.0, 7074.0], [2669.0, 1102.0], [2661.0, 1585.0], [2565.0, 2012.0], [2573.0, 1427.0], [2589.0, 1141.0], [2613.0, 5183.333333333333], [2805.0, 8337.0], [2757.0, 1704.6666666666667], [2765.0, 1102.0], [2773.0, 2670.0], [2781.0, 1589.0], [2813.0, 1374.0], [2797.0, 10721.0], [2789.0, 1221.0], [2693.0, 4891.666666666667], [2701.0, 1956.6666666666665], [2709.0, 4230.0], [2717.0, 5446.0], [2749.0, 2472.0], [2741.0, 8337.0], [2725.0, 5531.0], [2933.0, 2092.8181818181815], [2885.0, 2346.230769230769], [2893.0, 2234.0], [2901.0, 5485.6], [2909.0, 3987.4], [2941.0, 7435.0], [2925.0, 3967.166666666667], [2917.0, 2080.0], [2821.0, 3222.0], [2829.0, 1493.4], [2837.0, 1098.0], [2845.0, 1151.5], [2877.0, 3193.0], [2869.0, 2951.0], [2861.0, 4847.6], [2949.0, 1867.1111111111109], [2997.0, 1404.6923076923076], [2957.0, 2320.6], [2965.0, 1101.0], [2973.0, 2777.6], [2989.0, 1471.0], [2981.0, 2634.6], [1079.0, 6841.0], [1083.0, 10067.0], [1075.0, 11234.0], [1071.0, 3753.0], [1067.0, 3668.0], [1063.0, 6884.0], [1055.0, 10325.0], [1047.0, 10677.5], [1039.0, 6865.0], [1035.0, 9882.0], [1031.0, 7943.0], [1027.0, 8333.0], [1147.0, 5141.0], [1151.0, 9323.0], [1143.0, 9416.0], [1139.0, 4696.0], [1135.0, 6978.0], [1131.0, 8786.0], [1127.0, 8620.0], [1123.0, 11016.0], [1119.0, 8619.0], [1095.0, 6417.0], [1091.0, 8500.0], [1103.0, 4639.0], [1099.0, 10162.0], [1111.0, 3559.0], [1107.0, 7726.0], [1211.0, 8842.0], [1215.0, 8898.0], [1191.0, 9376.0], [1187.0, 9672.0], [1195.0, 8723.0], [1207.0, 6229.0], [1203.0, 10734.0], [1183.0, 9662.0], [1155.0, 9888.0], [1159.0, 5171.5], [1163.0, 6428.0], [1167.0, 10389.0], [1179.0, 5573.0], [1175.0, 8259.0], [1171.0, 8247.0], [1199.0, 10885.0], [1275.0, 3856.0], [1279.0, 10237.0], [1251.0, 8532.0], [1255.0, 3930.0], [1271.0, 5894.5], [1231.0, 8326.0], [1227.0, 9766.0], [1219.0, 9799.0], [1247.0, 2790.0], [1243.0, 7557.0], [1235.0, 5106.0], [1259.0, 10777.0], [1331.0, 7782.0], [1343.0, 8413.0], [1315.0, 2378.0], [1319.0, 8070.0], [1339.0, 9624.0], [1295.0, 6000.0], [1291.0, 7621.0], [1287.0, 6751.0], [1311.0, 8218.5], [1307.0, 5989.0], [1299.0, 10291.0], [1323.0, 9236.0], [1407.0, 10098.0], [1379.0, 2626.0], [1395.0, 2317.0], [1375.0, 8232.0], [1351.0, 6959.0], [1359.0, 7797.0], [1355.0, 7037.0], [1367.0, 4192.0], [1363.0, 5784.5], [1391.0, 6356.0], [1383.0, 6689.0], [1459.0, 6428.0], [1471.0, 6170.0], [1443.0, 4240.0], [1447.0, 9958.0], [1451.0, 6693.0], [1467.0, 7540.0], [1423.0, 7635.0], [1419.0, 8778.0], [1439.0, 10573.0], [1431.0, 2352.0], [1427.0, 5800.0], [1455.0, 9335.0], [1531.0, 2247.0], [1535.0, 4409.0], [1507.0, 2364.0], [1515.0, 1895.0], [1527.0, 4879.0], [1523.0, 8317.0], [1483.0, 2075.0], [1479.0, 5412.0], [1475.0, 5117.0], [1503.0, 8330.0], [1499.0, 8349.0], [1495.0, 8311.0], [1491.0, 4143.0], [1519.0, 9331.0], [1551.0, 10304.0], [1587.0, 6358.0], [1595.0, 9217.0], [1591.0, 10367.0], [1547.0, 1924.0], [1543.0, 5635.0], [1539.0, 8716.0], [1563.0, 2981.0], [1559.0, 7843.0], [1555.0, 2048.0], [1583.0, 8293.0], [1579.0, 3202.0], [1655.0, 9408.0], [1651.0, 10133.0], [1663.0, 1904.0], [1635.0, 5875.0], [1639.0, 9820.0], [1643.0, 7367.0], [1659.0, 1693.0], [1615.0, 1918.0], [1611.0, 8528.0], [1607.0, 10471.0], [1603.0, 3990.0], [1631.0, 8614.0], [1627.0, 9299.0], [1619.0, 3039.0], [1647.0, 5871.0], [1719.0, 2169.0], [1727.0, 5795.0], [1703.0, 2487.0], [1723.0, 1802.0], [1715.0, 4729.0], [1695.0, 5936.0], [1667.0, 1556.0], [1671.0, 4971.0], [1679.0, 2017.0], [1687.0, 2248.0], [1711.0, 9245.0], [1783.0, 1141.0], [1791.0, 11168.0], [1771.0, 10328.666666666666], [1787.0, 5927.0], [1779.0, 5792.0], [1743.0, 5947.0], [1739.0, 8097.0], [1735.0, 8814.0], [1731.0, 8031.0], [1759.0, 1313.6666666666667], [1755.0, 11023.0], [1751.0, 2993.0], [1747.0, 1097.0], [1775.0, 9451.0], [1851.0, 4460.0], [1855.0, 6983.0], [1827.0, 1098.0], [1831.0, 4315.5], [1847.0, 8310.0], [1843.0, 1633.0], [1823.0, 2643.0], [1795.0, 3819.0], [1799.0, 10522.0], [1807.0, 4128.0], [1803.0, 1621.0], [1819.0, 5567.0], [1815.0, 1094.0], [1811.0, 6574.0], [1835.0, 1715.0], [1907.0, 1100.0], [1919.0, 1110.0], [1891.0, 2721.0], [1895.0, 1153.0], [1911.0, 7718.0], [1887.0, 1573.0], [1863.0, 9390.0], [1859.0, 6062.0], [1867.0, 1484.0], [1883.0, 1920.0], [1879.0, 1091.0], [1903.0, 2620.0], [1899.0, 1095.0], [1971.0, 2799.0], [1979.0, 1940.0], [1983.0, 1128.0], [1955.0, 7962.0], [1951.0, 1828.0], [1923.0, 1098.0], [1927.0, 1377.0], [1931.0, 1207.0], [1935.0, 1338.0], [1947.0, 2719.0], [1943.0, 1190.0], [1939.0, 1094.0], [1967.0, 1097.0], [1959.0, 1091.0], [2035.0, 2238.0], [2023.0, 6359.0], [2015.0, 1094.0], [1987.0, 10817.0], [1995.0, 1407.0], [1991.0, 5412.0], [1999.0, 5973.0], [2007.0, 2092.0], [2003.0, 8339.0], [2027.0, 1089.0], [2019.0, 5395.0], [2158.0, 1388.0], [2126.0, 1141.0], [2166.0, 1330.0], [2118.0, 1135.0], [2134.0, 5241.5], [2142.0, 1382.0], [2078.0, 1129.0], [2070.0, 1464.75], [2062.0, 1096.0], [2110.0, 3475.0], [2102.0, 9303.0], [2086.0, 2351.0], [2294.0, 1098.0], [2286.0, 1100.0], [2302.0, 1094.0], [2246.0, 1364.0], [2254.0, 1586.0], [2262.0, 1140.0], [2270.0, 6280.0], [2278.0, 5553.0], [2190.0, 1205.0], [2182.0, 1277.0], [2214.0, 2569.5], [2414.0, 1190.0], [2422.0, 3993.0], [2430.0, 1116.0], [2382.0, 9177.0], [2398.0, 1357.0], [2406.0, 1742.0], [2366.0, 1212.0], [2326.0, 2944.0], [2334.0, 6191.5], [2358.0, 8482.0], [2350.0, 1119.5], [2342.0, 7529.0], [2542.0, 3404.0], [2502.0, 6427.5], [2518.0, 1112.0], [2550.0, 6810.5], [2534.0, 2167.0], [2462.0, 1095.0], [2446.0, 7769.0], [2438.0, 1263.0], [2494.0, 4612.5], [2486.0, 5240.5], [2478.0, 5710.333333333334], [2470.0, 2220.0], [2670.0, 7463.0], [2686.0, 1092.0], [2654.0, 1110.0], [2678.0, 5532.0], [2662.0, 2138.0], [2622.0, 3535.5], [2566.0, 1430.0], [2574.0, 1223.0], [2590.0, 9646.0], [2606.0, 3919.0], [2598.0, 5739.666666666666], [2806.0, 2214.0000000000005], [2758.0, 9973.0], [2766.0, 2398.0], [2774.0, 5027.5], [2782.0, 1100.0], [2814.0, 7644.0], [2798.0, 2377.0], [2790.0, 874.3333333333334], [2750.0, 3444.0], [2710.0, 8342.0], [2718.0, 2545.0], [2742.0, 10482.0], [2734.0, 1947.6666666666667], [2726.0, 1094.0], [2934.0, 3537.0], [2942.0, 666.7142857142857], [2886.0, 2705.4], [2894.0, 2763.0909090909095], [2902.0, 1860.6666666666667], [2910.0, 2216.6666666666665], [2926.0, 4102.0666666666675], [2918.0, 966.0], [2822.0, 1070.0], [2830.0, 1674.5714285714284], [2846.0, 1210.0], [2878.0, 2299.5], [2862.0, 1289.5], [2854.0, 2460.222222222222], [2958.0, 3467.2500000000005], [2950.0, 2602.8333333333335], [2966.0, 1084.4], [2974.0, 5084.0], [2998.0, 2073.5555555555547], [2990.0, 5790.0], [2982.0, 1767.7142857142856], [2167.0, 1979.0], [2127.0, 2718.0], [2135.0, 2488.0], [2143.0, 3732.0], [2151.0, 2041.5], [2055.0, 4732.0], [2071.0, 1103.0], [2103.0, 9576.0], [2095.0, 3180.0], [2087.0, 1239.0], [2287.0, 2004.0], [2303.0, 1937.0], [2247.0, 4941.0], [2255.0, 3876.0], [2263.0, 1093.0], [2271.0, 1278.0], [2279.0, 4525.0], [2207.0, 4751.0], [2199.0, 1272.5], [2183.0, 2268.0], [2239.0, 5791.5], [2231.0, 1136.5], [2223.0, 1357.0], [2407.0, 1224.0], [2431.0, 9033.0], [2383.0, 2942.0], [2391.0, 5583.5], [2399.0, 1423.0], [2367.0, 1179.0], [2311.0, 4611.0], [2319.0, 3706.0], [2327.0, 2760.0], [2335.0, 1185.0], [2359.0, 5203.0], [2343.0, 2196.0], [2551.0, 1149.0], [2559.0, 2130.0], [2503.0, 4895.5], [2519.0, 8082.0], [2527.0, 1724.0], [2535.0, 1151.0], [2495.0, 1100.0], [2439.0, 10770.0], [2447.0, 1098.0], [2455.0, 5020.5], [2463.0, 1114.0], [2471.0, 7424.0], [2639.0, 3715.666666666667], [2631.0, 1615.0], [2647.0, 4933.5], [2655.0, 2759.0], [2663.0, 1616.0], [2583.0, 3708.666666666667], [2615.0, 7529.5], [2607.0, 9093.0], [2807.0, 1095.0], [2815.0, 2520.0], [2759.0, 1102.0], [2767.0, 1628.0], [2775.0, 7227.0], [2783.0, 2302.0], [2799.0, 1225.0], [2791.0, 1172.0], [2695.0, 5913.0], [2703.0, 1470.5], [2711.0, 1584.0], [2719.0, 1097.0], [2743.0, 1642.5], [2735.0, 1527.0], [2727.0, 1459.0], [2935.0, 3215.5], [2943.0, 1615.0], [2887.0, 3894.5], [2895.0, 1372.25], [2927.0, 4282.5], [2919.0, 2880.086956521739], [2879.0, 2637.157894736842], [2823.0, 1094.0], [2831.0, 4039.6666666666665], [2839.0, 933.6666666666667], [2847.0, 2847.3333333333335], [2871.0, 1907.3809523809523], [2863.0, 1268.125], [2855.0, 1522.25], [2959.0, 2185.5555555555557], [2951.0, 5542.0], [2967.0, 5418.0], [2975.0, 4225.2], [2999.0, 3072.75], [2991.0, 4070.0000000000005], [2983.0, 1841.5], [1.0, 11159.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2985.445116873358, 2817.1518400325263]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 184022.7, "minX": 1.68416334E12, "maxY": 686129.1666666666, "series": [{"data": [[1.68416358E12, 686129.1666666666], [1.6841634E12, 667188.1], [1.68416352E12, 675996.3333333334], [1.68416334E12, 259960.86666666667], [1.68416364E12, 350064.11666666664], [1.68416346E12, 548434.9333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68416358E12, 630395.85], [1.6841634E12, 590349.6], [1.68416352E12, 616531.25], [1.68416334E12, 184022.7], [1.68416364E12, 319238.75], [1.68416346E12, 494835.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416364E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2585.2832306875544, "minX": 1.68416334E12, "maxY": 3286.3291940232825, "series": [{"data": [[1.68416358E12, 2585.2832306875544], [1.6841634E12, 2773.7640724051194], [1.68416352E12, 2639.864234862376], [1.68416334E12, 3013.0714052211265], [1.68416364E12, 2851.7371226080813], [1.68416346E12, 3286.3291940232825]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416364E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2321.033064026511, "minX": 1.68416334E12, "maxY": 3285.515298377832, "series": [{"data": [[1.68416358E12, 2585.0802934378066], [1.6841634E12, 2673.3823417093013], [1.68416352E12, 2639.651170642203], [1.68416334E12, 2321.033064026511], [1.68416364E12, 2851.538256555605], [1.68416346E12, 3285.515298377832]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416364E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.401332388377035, "minX": 1.68416334E12, "maxY": 1277.9464811096075, "series": [{"data": [[1.68416358E12, 2.6912873078082553], [1.6841634E12, 114.98654242724993], [1.68416352E12, 2.8781064220183614], [1.68416334E12, 1277.9464811096075], [1.68416364E12, 1.401332388377035], [1.68416346E12, 9.397392051793181]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416364E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.68416334E12, "maxY": 52479.0, "series": [{"data": [[1.68416358E12, 19599.0], [1.6841634E12, 52479.0], [1.68416352E12, 20919.0], [1.68416334E12, 21891.0], [1.68416364E12, 18120.0], [1.68416346E12, 41949.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68416358E12, 8542.800000000003], [1.6841634E12, 7144.800000000003], [1.68416352E12, 8226.800000000003], [1.68416334E12, 5784.800000000003], [1.68416364E12, 9323.900000000001], [1.68416346E12, 6409.800000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68416358E12, 10837.980000000003], [1.6841634E12, 10738.970000000005], [1.68416352E12, 10936.0], [1.68416334E12, 12352.349999999991], [1.68416364E12, 11008.0], [1.68416346E12, 10336.94000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68416358E12, 9493.95], [1.6841634E12, 8540.0], [1.68416352E12, 9824.750000000004], [1.68416334E12, 8283.349999999999], [1.68416364E12, 10270.0], [1.68416346E12, 7704.950000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68416358E12, 51.0], [1.6841634E12, 52.0], [1.68416352E12, 51.0], [1.68416334E12, 60.0], [1.68416364E12, 50.0], [1.68416346E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68416358E12, 1618.0], [1.6841634E12, 1961.0], [1.68416352E12, 1564.5], [1.68416334E12, 1907.5], [1.68416364E12, 1700.0], [1.68416346E12, 1768.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416364E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 1.0, "maxY": 15010.0, "series": [{"data": [[14.0, 10743.5], [45.0, 10657.0], [73.0, 4573.0], [76.0, 10559.0], [101.0, 10170.0], [163.0, 8542.0], [197.0, 7835.0], [209.0, 4974.0], [231.0, 7767.0], [263.0, 7624.0], [283.0, 1768.0], [302.0, 7620.0], [329.0, 1625.0], [372.0, 1298.5], [369.0, 1113.0], [417.0, 5541.0], [420.0, 1398.0], [449.0, 1386.0], [476.0, 1222.0], [474.0, 4647.0], [489.0, 1471.0], [532.0, 1994.0], [537.0, 1691.0], [645.0, 1311.0], [793.0, 1265.0], [779.0, 2311.0], [806.0, 2154.5], [888.0, 1768.0], [886.0, 15010.0], [915.0, 1615.0], [964.0, 2661.5], [972.0, 2292.0], [1010.0, 2427.0], [1014.0, 2076.0], [1023.0, 1909.5], [1013.0, 1290.0], [997.0, 1711.0], [1055.0, 1846.0], [1080.0, 2233.0], [1067.0, 2058.0], [1062.0, 2268.0], [1064.0, 2007.5], [1056.0, 2280.0], [1086.0, 2101.0], [1085.0, 1817.5], [1082.0, 1579.5], [1078.0, 2715.0], [1079.0, 2132.0], [1071.0, 2749.0], [1069.0, 2215.0], [1046.0, 2441.0], [1045.0, 2598.0], [1041.0, 2177.0], [1040.0, 2075.0], [1043.0, 2178.5], [1037.0, 2576.5], [1073.0, 1785.0], [1074.0, 1682.0], [1077.0, 1617.0], [1048.0, 2728.0], [1054.0, 2590.5], [1050.0, 2131.0], [1049.0, 2333.5], [1047.0, 2549.5], [1096.0, 2104.5], [1110.0, 1928.0], [1112.0, 1979.0], [1113.0, 1597.0], [1115.0, 1654.0], [1111.0, 1592.0], [1148.0, 2018.0], [1116.0, 2004.0], [1090.0, 2207.0], [1119.0, 1596.0], [1088.0, 1570.5], [1118.0, 1583.0], [1117.0, 1493.0], [1092.0, 1769.5], [1091.0, 1555.0], [1128.0, 1809.0], [1129.0, 1592.5], [1126.0, 1647.0], [1125.0, 1603.0], [1127.0, 1563.0], [1124.0, 1745.0], [1123.0, 1648.0], [1151.0, 1819.0], [1149.0, 1548.5], [1150.0, 1634.0], [1121.0, 1605.0], [1097.0, 2236.5], [1099.0, 1654.5], [1102.0, 2315.0], [1100.0, 1540.0], [1136.0, 1605.0], [1142.0, 2091.5], [1141.0, 1636.0], [1137.0, 1550.0], [1139.0, 1597.0], [1138.0, 1606.0], [1140.0, 1536.0], [1143.0, 1828.0], [1145.0, 1720.0], [1144.0, 1765.5], [1147.0, 1763.5], [1146.0, 1650.0], [1130.0, 1972.0], [1134.0, 1834.0], [1135.0, 1623.0], [1133.0, 1681.0], [1132.0, 1607.0], [1105.0, 2084.0], [1104.0, 1610.0], [1107.0, 1693.0], [1109.0, 1702.0], [1202.0, 1601.5], [1178.0, 2379.0], [1152.0, 1682.0], [1153.0, 1581.0], [1154.0, 1577.0], [1181.0, 1584.0], [1182.0, 1543.0], [1183.0, 1607.5], [1174.0, 2408.0], [1176.0, 1595.5], [1173.0, 1690.5], [1172.0, 1662.0], [1171.0, 1560.0], [1169.0, 1607.0], [1168.0, 1690.5], [1192.0, 2014.0], [1196.0, 1961.0], [1193.0, 1450.0], [1195.0, 1577.0], [1155.0, 1765.5], [1159.0, 1655.0], [1164.0, 1684.0], [1163.0, 1538.5], [1165.0, 1623.0], [1166.0, 1537.5], [1167.0, 1559.0], [1160.0, 1701.0], [1162.0, 1608.5], [1157.0, 1773.0], [1156.0, 1622.0], [1158.0, 1601.0], [1208.0, 1949.0], [1184.0, 1868.0], [1214.0, 1677.5], [1187.0, 1575.0], [1188.0, 1566.5], [1190.0, 1549.0], [1191.0, 1547.5], [1189.0, 1580.0], [1185.0, 1574.0], [1204.0, 1861.0], [1207.0, 1522.0], [1219.0, 2047.0], [1236.0, 1777.5], [1272.0, 2740.0], [1220.0, 2094.0], [1222.0, 2029.0], [1217.0, 1506.0], [1216.0, 1734.5], [1242.0, 1677.0], [1240.0, 1598.5], [1288.0, 1895.0], [1285.0, 2404.0], [1296.0, 1986.0], [1358.0, 1430.0], [1355.0, 1565.5], [1394.0, 2542.0], [1370.0, 1861.0], [1457.0, 2222.0], [1442.0, 1812.5], [1444.0, 1245.0], [1641.0, 1537.5], [2082.0, 4765.5], [1.0, 10476.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[45.0, 10145.0], [76.0, 10158.0], [163.0, 10146.0], [197.0, 10364.5], [231.0, 10298.0], [263.0, 10186.5], [283.0, 460.0], [302.0, 10283.0], [329.0, 50.5], [476.0, 101.0], [474.0, 10133.0], [489.0, 329.0], [532.0, 12067.0], [537.0, 13070.5], [645.0, 14065.0], [793.0, 117.0], [779.0, 251.0], [806.0, 135.0], [888.0, 42.0], [886.0, 13208.0], [915.0, 10076.0], [964.0, 43.0], [972.0, 42.0], [1010.0, 66.0], [1014.0, 83.5], [1023.0, 42.0], [1013.0, 145.0], [997.0, 83.0], [1055.0, 68.5], [1080.0, 42.0], [1067.0, 427.0], [1062.0, 43.0], [1064.0, 41.0], [1056.0, 42.0], [1086.0, 43.0], [1085.0, 43.0], [1082.0, 41.0], [1078.0, 42.0], [1079.0, 42.0], [1071.0, 42.0], [1069.0, 42.0], [1046.0, 42.0], [1045.0, 42.0], [1041.0, 43.0], [1040.0, 76.0], [1043.0, 42.0], [1037.0, 42.0], [1073.0, 42.0], [1074.0, 43.0], [1077.0, 42.0], [1048.0, 42.0], [1054.0, 44.0], [1050.0, 44.0], [1049.0, 42.0], [1047.0, 42.0], [1096.0, 42.0], [1110.0, 44.0], [1112.0, 42.0], [1113.0, 41.0], [1115.0, 41.0], [1111.0, 41.0], [1148.0, 42.0], [1116.0, 42.0], [1090.0, 42.0], [1119.0, 42.0], [1088.0, 41.0], [1118.0, 42.0], [1117.0, 41.0], [1092.0, 67.0], [1091.0, 41.0], [1128.0, 42.0], [1129.0, 41.5], [1126.0, 42.0], [1125.0, 42.0], [1127.0, 41.0], [1124.0, 42.0], [1123.0, 42.0], [1151.0, 42.0], [1149.0, 42.0], [1150.0, 42.0], [1121.0, 42.0], [1097.0, 43.0], [1099.0, 42.0], [1102.0, 41.0], [1100.0, 41.0], [1136.0, 42.0], [1142.0, 42.0], [1141.0, 42.0], [1137.0, 41.0], [1139.0, 42.0], [1138.0, 41.0], [1140.0, 42.0], [1143.0, 44.5], [1145.0, 43.0], [1144.0, 42.0], [1147.0, 42.5], [1146.0, 42.0], [1130.0, 42.0], [1134.0, 70.0], [1135.0, 42.0], [1133.0, 42.0], [1132.0, 42.0], [1105.0, 42.0], [1104.0, 41.0], [1107.0, 42.0], [1109.0, 42.0], [1202.0, 42.0], [1178.0, 102.0], [1152.0, 43.0], [1153.0, 41.0], [1154.0, 41.0], [1181.0, 41.0], [1182.0, 41.0], [1183.0, 41.0], [1174.0, 43.0], [1176.0, 42.0], [1173.0, 42.0], [1172.0, 41.0], [1171.0, 42.0], [1169.0, 42.0], [1168.0, 42.0], [1192.0, 42.0], [1196.0, 165.0], [1193.0, 42.0], [1195.0, 41.0], [1155.0, 42.0], [1159.0, 41.0], [1164.0, 42.0], [1163.0, 41.0], [1165.0, 41.0], [1166.0, 41.0], [1167.0, 41.0], [1160.0, 42.0], [1162.0, 42.0], [1157.0, 42.0], [1156.0, 41.0], [1158.0, 42.0], [1208.0, 42.0], [1184.0, 43.0], [1214.0, 42.0], [1187.0, 42.0], [1188.0, 41.0], [1190.0, 41.0], [1191.0, 41.0], [1189.0, 42.0], [1185.0, 41.0], [1204.0, 42.0], [1207.0, 42.5], [1219.0, 43.0], [1236.0, 46.0], [1272.0, 42.0], [1220.0, 42.0], [1222.0, 43.0], [1217.0, 41.0], [1216.0, 42.0], [1242.0, 43.0], [1240.0, 41.0], [1288.0, 140.0], [1285.0, 160.0], [1296.0, 42.0], [1358.0, 66.5], [1355.0, 54.0], [1394.0, 108.0], [1370.0, 43.0], [1457.0, 216.0], [1442.0, 104.5], [1444.0, 74.0], [1641.0, 50.0], [2082.0, 60.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2082.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 15010.0, "series": [{"data": [[14.0, 10743.5], [45.0, 10657.0], [73.0, 4572.0], [76.0, 10556.0], [101.0, 10170.0], [163.0, 8542.0], [197.0, 7835.0], [209.0, 4973.0], [231.0, 7766.5], [263.0, 7624.0], [283.0, 1768.0], [302.0, 7620.0], [329.0, 1621.0], [372.0, 1298.5], [369.0, 1113.0], [417.0, 5540.0], [420.0, 1397.5], [449.0, 1386.0], [476.0, 1220.0], [474.0, 4647.0], [489.0, 1466.0], [532.0, 1969.0], [537.0, 1691.0], [645.0, 1309.5], [793.0, 1265.0], [779.0, 2311.0], [806.0, 2154.5], [888.0, 1768.0], [886.0, 15010.0], [915.0, 1615.0], [964.0, 2661.5], [972.0, 2292.0], [1010.0, 2427.0], [1014.0, 2076.0], [1023.0, 1909.5], [1013.0, 1290.0], [997.0, 1711.0], [1055.0, 1846.0], [1080.0, 2224.0], [1067.0, 2056.0], [1062.0, 2262.0], [1064.0, 2007.5], [1056.0, 2280.0], [1086.0, 2100.0], [1085.0, 1817.5], [1082.0, 1579.5], [1078.0, 2715.0], [1079.0, 2132.0], [1071.0, 2749.0], [1069.0, 2214.5], [1046.0, 2441.0], [1045.0, 2597.5], [1041.0, 2177.0], [1040.0, 2075.0], [1043.0, 2175.5], [1037.0, 2575.0], [1073.0, 1784.0], [1074.0, 1682.0], [1077.0, 1617.0], [1048.0, 2728.0], [1054.0, 2590.5], [1050.0, 2131.0], [1049.0, 2333.5], [1047.0, 2546.0], [1096.0, 2104.5], [1110.0, 1928.0], [1112.0, 1979.0], [1113.0, 1597.0], [1115.0, 1654.0], [1111.0, 1592.0], [1148.0, 2017.0], [1116.0, 2004.0], [1090.0, 2206.5], [1119.0, 1596.0], [1088.0, 1570.0], [1118.0, 1583.0], [1117.0, 1492.0], [1092.0, 1769.5], [1091.0, 1554.0], [1128.0, 1809.0], [1129.0, 1592.5], [1126.0, 1646.0], [1125.0, 1603.0], [1127.0, 1562.5], [1124.0, 1744.0], [1123.0, 1648.0], [1151.0, 1819.0], [1149.0, 1547.0], [1150.0, 1633.0], [1121.0, 1605.0], [1097.0, 2236.0], [1099.0, 1654.5], [1102.0, 2315.0], [1100.0, 1539.0], [1136.0, 1605.0], [1142.0, 2091.5], [1141.0, 1633.0], [1137.0, 1550.0], [1139.0, 1596.5], [1138.0, 1606.0], [1140.0, 1535.0], [1143.0, 1827.5], [1145.0, 1720.0], [1144.0, 1765.5], [1147.0, 1763.5], [1146.0, 1649.5], [1130.0, 1972.0], [1134.0, 1830.0], [1135.0, 1623.0], [1133.0, 1680.5], [1132.0, 1607.0], [1105.0, 2084.0], [1104.0, 1610.0], [1107.0, 1693.0], [1109.0, 1702.0], [1202.0, 1596.0], [1178.0, 2379.0], [1152.0, 1680.5], [1153.0, 1580.5], [1154.0, 1577.0], [1181.0, 1584.0], [1182.0, 1543.0], [1183.0, 1607.5], [1174.0, 2407.0], [1176.0, 1595.5], [1173.0, 1690.5], [1172.0, 1662.0], [1171.0, 1560.0], [1169.0, 1607.0], [1168.0, 1690.0], [1192.0, 2013.0], [1196.0, 1961.0], [1193.0, 1449.0], [1195.0, 1577.0], [1155.0, 1764.5], [1159.0, 1655.0], [1164.0, 1684.0], [1163.0, 1538.5], [1165.0, 1621.0], [1166.0, 1537.5], [1167.0, 1559.0], [1160.0, 1701.0], [1162.0, 1608.5], [1157.0, 1773.0], [1156.0, 1622.0], [1158.0, 1601.0], [1208.0, 1949.0], [1184.0, 1868.0], [1214.0, 1677.0], [1187.0, 1575.0], [1188.0, 1566.5], [1190.0, 1549.0], [1191.0, 1547.0], [1189.0, 1580.0], [1185.0, 1573.0], [1204.0, 1861.0], [1207.0, 1522.0], [1219.0, 2046.0], [1236.0, 1777.5], [1272.0, 2739.5], [1220.0, 2094.0], [1222.0, 2029.0], [1217.0, 1506.0], [1216.0, 1734.5], [1242.0, 1677.0], [1240.0, 1598.5], [1288.0, 1892.0], [1285.0, 2362.0], [1296.0, 1986.0], [1358.0, 1429.0], [1355.0, 1564.5], [1394.0, 2535.0], [1370.0, 1856.0], [1457.0, 2219.0], [1442.0, 1806.0], [1444.0, 1244.0], [1641.0, 1537.0], [2082.0, 4765.5], [1.0, 10476.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[45.0, 10145.0], [76.0, 10158.0], [163.0, 10146.0], [197.0, 10364.5], [231.0, 10298.0], [263.0, 10186.5], [283.0, 455.0], [302.0, 10283.0], [329.0, 50.5], [476.0, 101.0], [474.0, 10133.0], [489.0, 329.0], [532.0, 0.0], [537.0, 0.0], [645.0, 0.0], [793.0, 75.0], [779.0, 251.0], [806.0, 135.0], [888.0, 42.0], [886.0, 13208.0], [915.0, 10076.0], [964.0, 43.0], [972.0, 42.0], [1010.0, 46.0], [1014.0, 83.5], [1023.0, 42.0], [1013.0, 145.0], [997.0, 83.0], [1055.0, 67.5], [1080.0, 42.0], [1067.0, 43.5], [1062.0, 43.0], [1064.0, 41.0], [1056.0, 42.0], [1086.0, 43.0], [1085.0, 43.0], [1082.0, 41.0], [1078.0, 42.0], [1079.0, 42.0], [1071.0, 42.0], [1069.0, 42.0], [1046.0, 42.0], [1045.0, 42.0], [1041.0, 43.0], [1040.0, 76.0], [1043.0, 42.0], [1037.0, 42.0], [1073.0, 42.0], [1074.0, 43.0], [1077.0, 42.0], [1048.0, 42.0], [1054.0, 44.0], [1050.0, 44.0], [1049.0, 42.0], [1047.0, 42.0], [1096.0, 42.0], [1110.0, 41.0], [1112.0, 42.0], [1113.0, 41.0], [1115.0, 41.0], [1111.0, 41.0], [1148.0, 42.0], [1116.0, 42.0], [1090.0, 41.0], [1119.0, 42.0], [1088.0, 41.0], [1118.0, 42.0], [1117.0, 41.0], [1092.0, 67.0], [1091.0, 41.0], [1128.0, 42.0], [1129.0, 41.5], [1126.0, 42.0], [1125.0, 42.0], [1127.0, 41.0], [1124.0, 42.0], [1123.0, 42.0], [1151.0, 42.0], [1149.0, 42.0], [1150.0, 42.0], [1121.0, 42.0], [1097.0, 43.0], [1099.0, 42.0], [1102.0, 41.0], [1100.0, 41.0], [1136.0, 42.0], [1142.0, 42.0], [1141.0, 42.0], [1137.0, 41.0], [1139.0, 42.0], [1138.0, 41.0], [1140.0, 42.0], [1143.0, 44.5], [1145.0, 43.0], [1144.0, 42.0], [1147.0, 42.5], [1146.0, 42.0], [1130.0, 42.0], [1134.0, 66.0], [1135.0, 42.0], [1133.0, 42.0], [1132.0, 42.0], [1105.0, 42.0], [1104.0, 41.0], [1107.0, 42.0], [1109.0, 42.0], [1202.0, 42.0], [1178.0, 49.0], [1152.0, 41.0], [1153.0, 41.0], [1154.0, 41.0], [1181.0, 41.0], [1182.0, 41.0], [1183.0, 41.0], [1174.0, 43.0], [1176.0, 42.0], [1173.0, 42.0], [1172.0, 41.0], [1171.0, 42.0], [1169.0, 42.0], [1168.0, 42.0], [1192.0, 42.0], [1196.0, 165.0], [1193.0, 42.0], [1195.0, 41.0], [1155.0, 42.0], [1159.0, 41.0], [1164.0, 42.0], [1163.0, 41.0], [1165.0, 41.0], [1166.0, 41.0], [1167.0, 41.0], [1160.0, 42.0], [1162.0, 42.0], [1157.0, 42.0], [1156.0, 41.0], [1158.0, 42.0], [1208.0, 42.0], [1184.0, 43.0], [1214.0, 42.0], [1187.0, 42.0], [1188.0, 41.0], [1190.0, 41.0], [1191.0, 41.0], [1189.0, 42.0], [1185.0, 41.0], [1204.0, 42.0], [1207.0, 42.5], [1219.0, 42.0], [1236.0, 46.0], [1272.0, 42.0], [1220.0, 42.0], [1222.0, 43.0], [1217.0, 41.0], [1216.0, 42.0], [1242.0, 43.0], [1240.0, 41.0], [1288.0, 54.5], [1285.0, 160.0], [1296.0, 42.0], [1358.0, 52.0], [1355.0, 43.0], [1394.0, 44.0], [1370.0, 43.0], [1457.0, 58.0], [1442.0, 104.5], [1444.0, 72.0], [1641.0, 50.0], [2082.0, 60.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2082.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 406.8666666666667, "minX": 1.68416334E12, "maxY": 1160.9166666666667, "series": [{"data": [[1.68416358E12, 1160.9166666666667], [1.6841634E12, 1091.1], [1.68416352E12, 1135.45], [1.68416334E12, 406.8666666666667], [1.68416364E12, 537.9166666666666], [1.68416346E12, 911.3166666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416364E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68416334E12, "maxY": 930.65, "series": [{"data": [[1.6841634E12, 0.21666666666666667], [1.68416334E12, 2.0833333333333335]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68416358E12, 930.65], [1.6841634E12, 913.9], [1.68416352E12, 922.9333333333333], [1.68416334E12, 292.2], [1.68416364E12, 478.31666666666666], [1.68416346E12, 755.6833333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68416334E12, 8.883333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.6841634E12, 3.65], [1.68416334E12, 7.016666666666667], [1.68416346E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68416358E12, 230.3], [1.6841634E12, 173.3], [1.68416352E12, 212.48333333333332], [1.68416334E12, 46.7], [1.68416364E12, 109.6], [1.68416346E12, 155.61666666666667]], "isOverall": false, "label": "429", "isController": false}, {"data": [[1.6841634E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416364E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 64.68333333333334, "minX": 1.68416334E12, "maxY": 930.65, "series": [{"data": [[1.68416358E12, 930.65], [1.6841634E12, 913.9], [1.68416352E12, 922.9333333333333], [1.68416334E12, 292.2], [1.68416364E12, 478.31666666666666], [1.68416346E12, 755.6833333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68416358E12, 230.3], [1.6841634E12, 177.18333333333334], [1.68416352E12, 212.48333333333332], [1.68416334E12, 64.68333333333334], [1.68416364E12, 109.6], [1.68416346E12, 155.63333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416364E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 64.68333333333334, "minX": 1.68416334E12, "maxY": 930.65, "series": [{"data": [[1.68416358E12, 930.65], [1.6841634E12, 913.9], [1.68416352E12, 922.9333333333333], [1.68416334E12, 292.2], [1.68416364E12, 478.31666666666666], [1.68416346E12, 755.6833333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68416358E12, 230.3], [1.6841634E12, 177.18333333333334], [1.68416352E12, 212.48333333333332], [1.68416334E12, 64.68333333333334], [1.68416364E12, 109.6], [1.68416346E12, 155.63333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416364E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

