/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "maxY": 22143.0, "series": [{"data": [[0.0, 37.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 39.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 40.0], [1.8, 40.0], [1.9, 40.0], [2.0, 40.0], [2.1, 40.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 41.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 41.0], [4.6, 41.0], [4.7, 41.0], [4.8, 41.0], [4.9, 41.0], [5.0, 41.0], [5.1, 41.0], [5.2, 41.0], [5.3, 41.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 42.0], [6.3, 42.0], [6.4, 42.0], [6.5, 42.0], [6.6, 42.0], [6.7, 42.0], [6.8, 42.0], [6.9, 42.0], [7.0, 42.0], [7.1, 42.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 43.0], [7.7, 43.0], [7.8, 43.0], [7.9, 43.0], [8.0, 43.0], [8.1, 43.0], [8.2, 43.0], [8.3, 43.0], [8.4, 43.0], [8.5, 43.0], [8.6, 43.0], [8.7, 44.0], [8.8, 44.0], [8.9, 44.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 44.0], [9.4, 45.0], [9.5, 45.0], [9.6, 45.0], [9.7, 45.0], [9.8, 46.0], [9.9, 46.0], [10.0, 47.0], [10.1, 47.0], [10.2, 48.0], [10.3, 48.0], [10.4, 49.0], [10.5, 50.0], [10.6, 51.0], [10.7, 51.0], [10.8, 52.0], [10.9, 53.0], [11.0, 54.0], [11.1, 55.0], [11.2, 56.0], [11.3, 57.0], [11.4, 58.0], [11.5, 59.0], [11.6, 60.0], [11.7, 62.0], [11.8, 63.0], [11.9, 65.0], [12.0, 66.0], [12.1, 68.0], [12.2, 69.0], [12.3, 71.0], [12.4, 74.0], [12.5, 76.0], [12.6, 79.0], [12.7, 82.0], [12.8, 85.0], [12.9, 88.0], [13.0, 92.0], [13.1, 96.0], [13.2, 100.0], [13.3, 104.0], [13.4, 108.0], [13.5, 113.0], [13.6, 119.0], [13.7, 126.0], [13.8, 135.0], [13.9, 147.0], [14.0, 161.0], [14.1, 182.0], [14.2, 214.0], [14.3, 252.0], [14.4, 286.0], [14.5, 321.0], [14.6, 369.0], [14.7, 460.0], [14.8, 564.0], [14.9, 751.0], [15.0, 1046.0], [15.1, 1090.0], [15.2, 1091.0], [15.3, 1092.0], [15.4, 1092.0], [15.5, 1093.0], [15.6, 1093.0], [15.7, 1093.0], [15.8, 1094.0], [15.9, 1094.0], [16.0, 1094.0], [16.1, 1094.0], [16.2, 1095.0], [16.3, 1095.0], [16.4, 1095.0], [16.5, 1095.0], [16.6, 1095.0], [16.7, 1095.0], [16.8, 1096.0], [16.9, 1096.0], [17.0, 1096.0], [17.1, 1096.0], [17.2, 1096.0], [17.3, 1096.0], [17.4, 1097.0], [17.5, 1097.0], [17.6, 1097.0], [17.7, 1097.0], [17.8, 1097.0], [17.9, 1097.0], [18.0, 1097.0], [18.1, 1097.0], [18.2, 1098.0], [18.3, 1098.0], [18.4, 1098.0], [18.5, 1098.0], [18.6, 1098.0], [18.7, 1098.0], [18.8, 1098.0], [18.9, 1098.0], [19.0, 1099.0], [19.1, 1099.0], [19.2, 1099.0], [19.3, 1099.0], [19.4, 1099.0], [19.5, 1099.0], [19.6, 1099.0], [19.7, 1100.0], [19.8, 1100.0], [19.9, 1100.0], [20.0, 1100.0], [20.1, 1100.0], [20.2, 1100.0], [20.3, 1100.0], [20.4, 1100.0], [20.5, 1101.0], [20.6, 1101.0], [20.7, 1101.0], [20.8, 1101.0], [20.9, 1101.0], [21.0, 1101.0], [21.1, 1101.0], [21.2, 1102.0], [21.3, 1102.0], [21.4, 1102.0], [21.5, 1102.0], [21.6, 1102.0], [21.7, 1102.0], [21.8, 1102.0], [21.9, 1103.0], [22.0, 1103.0], [22.1, 1103.0], [22.2, 1103.0], [22.3, 1103.0], [22.4, 1103.0], [22.5, 1104.0], [22.6, 1104.0], [22.7, 1104.0], [22.8, 1104.0], [22.9, 1104.0], [23.0, 1104.0], [23.1, 1105.0], [23.2, 1105.0], [23.3, 1105.0], [23.4, 1105.0], [23.5, 1106.0], [23.6, 1106.0], [23.7, 1106.0], [23.8, 1106.0], [23.9, 1106.0], [24.0, 1107.0], [24.1, 1107.0], [24.2, 1107.0], [24.3, 1108.0], [24.4, 1108.0], [24.5, 1108.0], [24.6, 1108.0], [24.7, 1109.0], [24.8, 1109.0], [24.9, 1109.0], [25.0, 1110.0], [25.1, 1110.0], [25.2, 1110.0], [25.3, 1111.0], [25.4, 1111.0], [25.5, 1112.0], [25.6, 1112.0], [25.7, 1113.0], [25.8, 1113.0], [25.9, 1113.0], [26.0, 1114.0], [26.1, 1115.0], [26.2, 1115.0], [26.3, 1116.0], [26.4, 1116.0], [26.5, 1117.0], [26.6, 1117.0], [26.7, 1118.0], [26.8, 1119.0], [26.9, 1119.0], [27.0, 1120.0], [27.1, 1121.0], [27.2, 1121.0], [27.3, 1122.0], [27.4, 1123.0], [27.5, 1123.0], [27.6, 1124.0], [27.7, 1125.0], [27.8, 1126.0], [27.9, 1126.0], [28.0, 1127.0], [28.1, 1128.0], [28.2, 1129.0], [28.3, 1130.0], [28.4, 1130.0], [28.5, 1131.0], [28.6, 1132.0], [28.7, 1133.0], [28.8, 1134.0], [28.9, 1135.0], [29.0, 1135.0], [29.1, 1136.0], [29.2, 1137.0], [29.3, 1138.0], [29.4, 1139.0], [29.5, 1140.0], [29.6, 1141.0], [29.7, 1142.0], [29.8, 1143.0], [29.9, 1144.0], [30.0, 1145.0], [30.1, 1146.0], [30.2, 1147.0], [30.3, 1148.0], [30.4, 1149.0], [30.5, 1150.0], [30.6, 1151.0], [30.7, 1152.0], [30.8, 1153.0], [30.9, 1154.0], [31.0, 1155.0], [31.1, 1156.0], [31.2, 1157.0], [31.3, 1158.0], [31.4, 1159.0], [31.5, 1160.0], [31.6, 1161.0], [31.7, 1162.0], [31.8, 1163.0], [31.9, 1164.0], [32.0, 1165.0], [32.1, 1167.0], [32.2, 1168.0], [32.3, 1169.0], [32.4, 1170.0], [32.5, 1171.0], [32.6, 1172.0], [32.7, 1174.0], [32.8, 1175.0], [32.9, 1176.0], [33.0, 1177.0], [33.1, 1178.0], [33.2, 1180.0], [33.3, 1181.0], [33.4, 1182.0], [33.5, 1183.0], [33.6, 1185.0], [33.7, 1186.0], [33.8, 1187.0], [33.9, 1189.0], [34.0, 1190.0], [34.1, 1191.0], [34.2, 1192.0], [34.3, 1194.0], [34.4, 1195.0], [34.5, 1197.0], [34.6, 1198.0], [34.7, 1199.0], [34.8, 1201.0], [34.9, 1202.0], [35.0, 1203.0], [35.1, 1205.0], [35.2, 1206.0], [35.3, 1208.0], [35.4, 1209.0], [35.5, 1210.0], [35.6, 1212.0], [35.7, 1213.0], [35.8, 1215.0], [35.9, 1216.0], [36.0, 1218.0], [36.1, 1219.0], [36.2, 1220.0], [36.3, 1222.0], [36.4, 1223.0], [36.5, 1225.0], [36.6, 1226.0], [36.7, 1228.0], [36.8, 1229.0], [36.9, 1231.0], [37.0, 1233.0], [37.1, 1234.0], [37.2, 1236.0], [37.3, 1237.0], [37.4, 1239.0], [37.5, 1240.0], [37.6, 1242.0], [37.7, 1243.0], [37.8, 1245.0], [37.9, 1246.0], [38.0, 1248.0], [38.1, 1250.0], [38.2, 1251.0], [38.3, 1253.0], [38.4, 1254.0], [38.5, 1256.0], [38.6, 1258.0], [38.7, 1259.0], [38.8, 1261.0], [38.9, 1263.0], [39.0, 1264.0], [39.1, 1266.0], [39.2, 1268.0], [39.3, 1269.0], [39.4, 1271.0], [39.5, 1273.0], [39.6, 1274.0], [39.7, 1276.0], [39.8, 1278.0], [39.9, 1280.0], [40.0, 1281.0], [40.1, 1283.0], [40.2, 1285.0], [40.3, 1287.0], [40.4, 1288.0], [40.5, 1290.0], [40.6, 1292.0], [40.7, 1294.0], [40.8, 1295.0], [40.9, 1297.0], [41.0, 1299.0], [41.1, 1301.0], [41.2, 1302.0], [41.3, 1304.0], [41.4, 1306.0], [41.5, 1308.0], [41.6, 1310.0], [41.7, 1312.0], [41.8, 1313.0], [41.9, 1315.0], [42.0, 1317.0], [42.1, 1319.0], [42.2, 1321.0], [42.3, 1323.0], [42.4, 1325.0], [42.5, 1326.0], [42.6, 1328.0], [42.7, 1330.0], [42.8, 1332.0], [42.9, 1334.0], [43.0, 1336.0], [43.1, 1338.0], [43.2, 1340.0], [43.3, 1342.0], [43.4, 1344.0], [43.5, 1345.0], [43.6, 1347.0], [43.7, 1349.0], [43.8, 1351.0], [43.9, 1353.0], [44.0, 1355.0], [44.1, 1357.0], [44.2, 1359.0], [44.3, 1361.0], [44.4, 1363.0], [44.5, 1365.0], [44.6, 1367.0], [44.7, 1369.0], [44.8, 1371.0], [44.9, 1373.0], [45.0, 1375.0], [45.1, 1377.0], [45.2, 1379.0], [45.3, 1381.0], [45.4, 1384.0], [45.5, 1386.0], [45.6, 1388.0], [45.7, 1390.0], [45.8, 1392.0], [45.9, 1394.0], [46.0, 1396.0], [46.1, 1398.0], [46.2, 1401.0], [46.3, 1402.0], [46.4, 1405.0], [46.5, 1407.0], [46.6, 1409.0], [46.7, 1412.0], [46.8, 1414.0], [46.9, 1416.0], [47.0, 1419.0], [47.1, 1421.0], [47.2, 1423.0], [47.3, 1426.0], [47.4, 1428.0], [47.5, 1430.0], [47.6, 1433.0], [47.7, 1435.0], [47.8, 1437.0], [47.9, 1440.0], [48.0, 1442.0], [48.1, 1444.0], [48.2, 1447.0], [48.3, 1449.0], [48.4, 1452.0], [48.5, 1454.0], [48.6, 1457.0], [48.7, 1459.0], [48.8, 1462.0], [48.9, 1464.0], [49.0, 1467.0], [49.1, 1470.0], [49.2, 1472.0], [49.3, 1475.0], [49.4, 1478.0], [49.5, 1480.0], [49.6, 1483.0], [49.7, 1485.0], [49.8, 1488.0], [49.9, 1491.0], [50.0, 1494.0], [50.1, 1497.0], [50.2, 1500.0], [50.3, 1503.0], [50.4, 1506.0], [50.5, 1509.0], [50.6, 1512.0], [50.7, 1515.0], [50.8, 1518.0], [50.9, 1521.0], [51.0, 1524.0], [51.1, 1527.0], [51.2, 1530.0], [51.3, 1533.0], [51.4, 1536.0], [51.5, 1539.0], [51.6, 1542.0], [51.7, 1545.0], [51.8, 1549.0], [51.9, 1552.0], [52.0, 1555.0], [52.1, 1558.0], [52.2, 1561.0], [52.3, 1564.0], [52.4, 1568.0], [52.5, 1571.0], [52.6, 1574.0], [52.7, 1578.0], [52.8, 1581.0], [52.9, 1585.0], [53.0, 1588.0], [53.1, 1592.0], [53.2, 1595.0], [53.3, 1599.0], [53.4, 1602.0], [53.5, 1606.0], [53.6, 1609.0], [53.7, 1613.0], [53.8, 1617.0], [53.9, 1621.0], [54.0, 1625.0], [54.1, 1628.0], [54.2, 1632.0], [54.3, 1636.0], [54.4, 1640.0], [54.5, 1643.0], [54.6, 1647.0], [54.7, 1651.0], [54.8, 1655.0], [54.9, 1659.0], [55.0, 1663.0], [55.1, 1667.0], [55.2, 1671.0], [55.3, 1675.0], [55.4, 1679.0], [55.5, 1683.0], [55.6, 1687.0], [55.7, 1691.0], [55.8, 1696.0], [55.9, 1700.0], [56.0, 1704.0], [56.1, 1709.0], [56.2, 1713.0], [56.3, 1718.0], [56.4, 1722.0], [56.5, 1727.0], [56.6, 1731.0], [56.7, 1736.0], [56.8, 1741.0], [56.9, 1746.0], [57.0, 1750.0], [57.1, 1754.0], [57.2, 1759.0], [57.3, 1763.0], [57.4, 1768.0], [57.5, 1772.0], [57.6, 1777.0], [57.7, 1782.0], [57.8, 1788.0], [57.9, 1793.0], [58.0, 1798.0], [58.1, 1803.0], [58.2, 1807.0], [58.3, 1813.0], [58.4, 1818.0], [58.5, 1823.0], [58.6, 1828.0], [58.7, 1834.0], [58.8, 1839.0], [58.9, 1845.0], [59.0, 1850.0], [59.1, 1856.0], [59.2, 1862.0], [59.3, 1868.0], [59.4, 1874.0], [59.5, 1880.0], [59.6, 1886.0], [59.7, 1892.0], [59.8, 1898.0], [59.9, 1904.0], [60.0, 1910.0], [60.1, 1917.0], [60.2, 1923.0], [60.3, 1929.0], [60.4, 1935.0], [60.5, 1942.0], [60.6, 1948.0], [60.7, 1954.0], [60.8, 1960.0], [60.9, 1967.0], [61.0, 1974.0], [61.1, 1981.0], [61.2, 1988.0], [61.3, 1995.0], [61.4, 2003.0], [61.5, 2010.0], [61.6, 2017.0], [61.7, 2024.0], [61.8, 2032.0], [61.9, 2039.0], [62.0, 2046.0], [62.1, 2053.0], [62.2, 2061.0], [62.3, 2069.0], [62.4, 2077.0], [62.5, 2086.0], [62.6, 2094.0], [62.7, 2102.0], [62.8, 2110.0], [62.9, 2118.0], [63.0, 2126.0], [63.1, 2134.0], [63.2, 2144.0], [63.3, 2153.0], [63.4, 2161.0], [63.5, 2171.0], [63.6, 2180.0], [63.7, 2190.0], [63.8, 2201.0], [63.9, 2211.0], [64.0, 2220.0], [64.1, 2230.0], [64.2, 2239.0], [64.3, 2249.0], [64.4, 2260.0], [64.5, 2269.0], [64.6, 2279.0], [64.7, 2290.0], [64.8, 2301.0], [64.9, 2312.0], [65.0, 2323.0], [65.1, 2334.0], [65.2, 2345.0], [65.3, 2357.0], [65.4, 2368.0], [65.5, 2380.0], [65.6, 2393.0], [65.7, 2404.0], [65.8, 2416.0], [65.9, 2430.0], [66.0, 2442.0], [66.1, 2455.0], [66.2, 2468.0], [66.3, 2481.0], [66.4, 2492.0], [66.5, 2505.0], [66.6, 2519.0], [66.7, 2532.0], [66.8, 2546.0], [66.9, 2559.0], [67.0, 2574.0], [67.1, 2588.0], [67.2, 2603.0], [67.3, 2617.0], [67.4, 2632.0], [67.5, 2646.0], [67.6, 2660.0], [67.7, 2674.0], [67.8, 2689.0], [67.9, 2705.0], [68.0, 2720.0], [68.1, 2734.0], [68.2, 2749.0], [68.3, 2763.0], [68.4, 2777.0], [68.5, 2791.0], [68.6, 2805.0], [68.7, 2821.0], [68.8, 2835.0], [68.9, 2848.0], [69.0, 2862.0], [69.1, 2878.0], [69.2, 2892.0], [69.3, 2909.0], [69.4, 2922.0], [69.5, 2937.0], [69.6, 2951.0], [69.7, 2966.0], [69.8, 2982.0], [69.9, 2997.0], [70.0, 3013.0], [70.1, 3028.0], [70.2, 3041.0], [70.3, 3056.0], [70.4, 3070.0], [70.5, 3086.0], [70.6, 3101.0], [70.7, 3117.0], [70.8, 3132.0], [70.9, 3146.0], [71.0, 3162.0], [71.1, 3176.0], [71.2, 3191.0], [71.3, 3208.0], [71.4, 3227.0], [71.5, 3242.0], [71.6, 3259.0], [71.7, 3275.0], [71.8, 3291.0], [71.9, 3308.0], [72.0, 3326.0], [72.1, 3343.0], [72.2, 3359.0], [72.3, 3377.0], [72.4, 3393.0], [72.5, 3413.0], [72.6, 3430.0], [72.7, 3449.0], [72.8, 3469.0], [72.9, 3488.0], [73.0, 3507.0], [73.1, 3527.0], [73.2, 3546.0], [73.3, 3567.0], [73.4, 3586.0], [73.5, 3607.0], [73.6, 3627.0], [73.7, 3647.0], [73.8, 3669.0], [73.9, 3687.0], [74.0, 3706.0], [74.1, 3727.0], [74.2, 3748.0], [74.3, 3767.0], [74.4, 3787.0], [74.5, 3808.0], [74.6, 3830.0], [74.7, 3851.0], [74.8, 3872.0], [74.9, 3892.0], [75.0, 3913.0], [75.1, 3933.0], [75.2, 3953.0], [75.3, 3972.0], [75.4, 3995.0], [75.5, 4013.0], [75.6, 4032.0], [75.7, 4052.0], [75.8, 4071.0], [75.9, 4090.0], [76.0, 4108.0], [76.1, 4127.0], [76.2, 4145.0], [76.3, 4163.0], [76.4, 4181.0], [76.5, 4200.0], [76.6, 4220.0], [76.7, 4239.0], [76.8, 4257.0], [76.9, 4275.0], [77.0, 4292.0], [77.1, 4313.0], [77.2, 4333.0], [77.3, 4356.0], [77.4, 4378.0], [77.5, 4399.0], [77.6, 4420.0], [77.7, 4441.0], [77.8, 4463.0], [77.9, 4484.0], [78.0, 4508.0], [78.1, 4530.0], [78.2, 4552.0], [78.3, 4575.0], [78.4, 4597.0], [78.5, 4621.0], [78.6, 4645.0], [78.7, 4670.0], [78.8, 4693.0], [78.9, 4718.0], [79.0, 4742.0], [79.1, 4766.0], [79.2, 4789.0], [79.3, 4812.0], [79.4, 4836.0], [79.5, 4862.0], [79.6, 4886.0], [79.7, 4907.0], [79.8, 4929.0], [79.9, 4953.0], [80.0, 4977.0], [80.1, 4999.0], [80.2, 5021.0], [80.3, 5044.0], [80.4, 5065.0], [80.5, 5084.0], [80.6, 5106.0], [80.7, 5126.0], [80.8, 5147.0], [80.9, 5170.0], [81.0, 5193.0], [81.1, 5212.0], [81.2, 5231.0], [81.3, 5251.0], [81.4, 5273.0], [81.5, 5294.0], [81.6, 5316.0], [81.7, 5336.0], [81.8, 5358.0], [81.9, 5379.0], [82.0, 5401.0], [82.1, 5423.0], [82.2, 5445.0], [82.3, 5468.0], [82.4, 5491.0], [82.5, 5514.0], [82.6, 5540.0], [82.7, 5564.0], [82.8, 5591.0], [82.9, 5615.0], [83.0, 5640.0], [83.1, 5664.0], [83.2, 5691.0], [83.3, 5715.0], [83.4, 5740.0], [83.5, 5767.0], [83.6, 5795.0], [83.7, 5819.0], [83.8, 5846.0], [83.9, 5873.0], [84.0, 5899.0], [84.1, 5924.0], [84.2, 5950.0], [84.3, 5976.0], [84.4, 6004.0], [84.5, 6030.0], [84.6, 6055.0], [84.7, 6080.0], [84.8, 6108.0], [84.9, 6134.0], [85.0, 6160.0], [85.1, 6185.0], [85.2, 6210.0], [85.3, 6237.0], [85.4, 6264.0], [85.5, 6289.0], [85.6, 6314.0], [85.7, 6343.0], [85.8, 6367.0], [85.9, 6394.0], [86.0, 6423.0], [86.1, 6452.0], [86.2, 6478.0], [86.3, 6506.0], [86.4, 6533.0], [86.5, 6562.0], [86.6, 6589.0], [86.7, 6619.0], [86.8, 6649.0], [86.9, 6683.0], [87.0, 6715.0], [87.1, 6747.0], [87.2, 6783.0], [87.3, 6819.0], [87.4, 6854.0], [87.5, 6888.0], [87.6, 6919.0], [87.7, 6953.0], [87.8, 6986.0], [87.9, 7022.0], [88.0, 7052.0], [88.1, 7089.0], [88.2, 7124.0], [88.3, 7160.0], [88.4, 7197.0], [88.5, 7231.0], [88.6, 7264.0], [88.7, 7299.0], [88.8, 7334.0], [88.9, 7370.0], [89.0, 7404.0], [89.1, 7442.0], [89.2, 7478.0], [89.3, 7516.0], [89.4, 7551.0], [89.5, 7588.0], [89.6, 7630.0], [89.7, 7669.0], [89.8, 7709.0], [89.9, 7749.0], [90.0, 7792.0], [90.1, 7834.0], [90.2, 7876.0], [90.3, 7912.0], [90.4, 7951.0], [90.5, 7988.0], [90.6, 8026.0], [90.7, 8065.0], [90.8, 8107.0], [90.9, 8142.0], [91.0, 8178.0], [91.1, 8218.0], [91.2, 8254.0], [91.3, 8287.0], [91.4, 8323.0], [91.5, 8358.0], [91.6, 8389.0], [91.7, 8423.0], [91.8, 8459.0], [91.9, 8494.0], [92.0, 8530.0], [92.1, 8566.0], [92.2, 8601.0], [92.3, 8638.0], [92.4, 8673.0], [92.5, 8712.0], [92.6, 8752.0], [92.7, 8789.0], [92.8, 8831.0], [92.9, 8869.0], [93.0, 8912.0], [93.1, 8951.0], [93.2, 8993.0], [93.3, 9035.0], [93.4, 9078.0], [93.5, 9120.0], [93.6, 9160.0], [93.7, 9202.0], [93.8, 9240.0], [93.9, 9277.0], [94.0, 9317.0], [94.1, 9357.0], [94.2, 9394.0], [94.3, 9429.0], [94.4, 9467.0], [94.5, 9506.0], [94.6, 9546.0], [94.7, 9587.0], [94.8, 9628.0], [94.9, 9668.0], [95.0, 9713.0], [95.1, 9752.0], [95.2, 9793.0], [95.3, 9836.0], [95.4, 9874.0], [95.5, 9917.0], [95.6, 9966.0], [95.7, 10009.0], [95.8, 10049.0], [95.9, 10075.0], [96.0, 10102.0], [96.1, 10128.0], [96.2, 10152.0], [96.3, 10177.0], [96.4, 10205.0], [96.5, 10235.0], [96.6, 10265.0], [96.7, 10292.0], [96.8, 10320.0], [96.9, 10348.0], [97.0, 10378.0], [97.1, 10408.0], [97.2, 10436.0], [97.3, 10467.0], [97.4, 10497.0], [97.5, 10527.0], [97.6, 10561.0], [97.7, 10595.0], [97.8, 10626.0], [97.9, 10657.0], [98.0, 10691.0], [98.1, 10723.0], [98.2, 10756.0], [98.3, 10788.0], [98.4, 10820.0], [98.5, 10858.0], [98.6, 10896.0], [98.7, 10935.0], [98.8, 10975.0], [98.9, 11014.0], [99.0, 11056.0], [99.1, 11092.0], [99.2, 11142.0], [99.3, 11207.0], [99.4, 11283.0], [99.5, 11383.0], [99.6, 11660.0], [99.7, 12388.0], [99.8, 12849.0], [99.9, 13505.0], [100.0, 22143.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 48052.0, "series": [{"data": [[0.0, 42184.0], [100.0, 3083.0], [200.0, 913.0], [300.0, 629.0], [400.0, 339.0], [500.0, 261.0], [600.0, 170.0], [700.0, 131.0], [800.0, 109.0], [900.0, 105.0], [1000.0, 15027.0], [1100.0, 48052.0], [1200.0, 20190.0], [1300.0, 16397.0], [1400.0, 12889.0], [1500.0, 10020.0], [1600.0, 8210.0], [1700.0, 6873.0], [1800.0, 5724.0], [1900.0, 4899.0], [2000.0, 4168.0], [2100.0, 3577.0], [2300.0, 2791.0], [2200.0, 3217.0], [2400.0, 2547.0], [2500.0, 2295.0], [2600.0, 2220.0], [2800.0, 2195.0], [2700.0, 2197.0], [2900.0, 2143.0], [3000.0, 2163.0], [3100.0, 2119.0], [3300.0, 1855.0], [3200.0, 1912.0], [3400.0, 1709.0], [3500.0, 1606.0], [3600.0, 1596.0], [3700.0, 1579.0], [3800.0, 1541.0], [3900.0, 1552.0], [4000.0, 1672.0], [4100.0, 1758.0], [4200.0, 1710.0], [4300.0, 1508.0], [4500.0, 1409.0], [4600.0, 1344.0], [4400.0, 1478.0], [4800.0, 1367.0], [4700.0, 1322.0], [4900.0, 1381.0], [5000.0, 1489.0], [5100.0, 1495.0], [5200.0, 1568.0], [5300.0, 1495.0], [5400.0, 1410.0], [5500.0, 1288.0], [5600.0, 1284.0], [5700.0, 1229.0], [5800.0, 1225.0], [6000.0, 1240.0], [6100.0, 1238.0], [5900.0, 1216.0], [6300.0, 1212.0], [6200.0, 1230.0], [6400.0, 1129.0], [6600.0, 1008.0], [6500.0, 1151.0], [6800.0, 940.0], [6900.0, 971.0], [6700.0, 929.0], [7100.0, 882.0], [7000.0, 941.0], [7300.0, 905.0], [7200.0, 933.0], [7400.0, 885.0], [7500.0, 851.0], [7600.0, 779.0], [7700.0, 795.0], [7900.0, 851.0], [7800.0, 783.0], [8000.0, 810.0], [8100.0, 868.0], [8200.0, 906.0], [8300.0, 950.0], [8400.0, 905.0], [8500.0, 883.0], [8700.0, 829.0], [8600.0, 869.0], [8800.0, 793.0], [8900.0, 788.0], [9000.0, 745.0], [9200.0, 827.0], [9100.0, 782.0], [9400.0, 853.0], [9600.0, 771.0], [9500.0, 784.0], [9300.0, 835.0], [9700.0, 778.0], [9800.0, 788.0], [10100.0, 1253.0], [9900.0, 702.0], [10000.0, 990.0], [10200.0, 1105.0], [10300.0, 1096.0], [10400.0, 1090.0], [10600.0, 992.0], [10500.0, 972.0], [10700.0, 997.0], [10800.0, 879.0], [10900.0, 799.0], [11000.0, 817.0], [11100.0, 557.0], [11200.0, 404.0], [11300.0, 297.0], [11500.0, 93.0], [11400.0, 153.0], [11600.0, 68.0], [11700.0, 59.0], [11800.0, 33.0], [11900.0, 24.0], [12000.0, 36.0], [12200.0, 38.0], [12100.0, 29.0], [12500.0, 57.0], [12400.0, 35.0], [12300.0, 80.0], [12600.0, 45.0], [12700.0, 125.0], [12900.0, 69.0], [12800.0, 103.0], [13100.0, 39.0], [13200.0, 19.0], [13300.0, 36.0], [13000.0, 83.0], [13400.0, 24.0], [13800.0, 30.0], [13500.0, 29.0], [13700.0, 13.0], [13600.0, 27.0], [13900.0, 13.0], [14000.0, 8.0], [14100.0, 24.0], [14200.0, 26.0], [14300.0, 18.0], [14400.0, 18.0], [14500.0, 36.0], [14600.0, 3.0], [14700.0, 5.0], [14800.0, 4.0], [15100.0, 2.0], [14900.0, 4.0], [15000.0, 1.0], [15400.0, 3.0], [15500.0, 2.0], [15800.0, 1.0], [15600.0, 1.0], [15700.0, 1.0], [16100.0, 3.0], [16200.0, 1.0], [15900.0, 2.0], [16300.0, 1.0], [16700.0, 1.0], [16500.0, 1.0], [17300.0, 1.0], [17600.0, 1.0], [18400.0, 1.0], [17700.0, 1.0], [17800.0, 1.0], [18300.0, 1.0], [18000.0, 1.0], [19300.0, 4.0], [18900.0, 2.0], [19000.0, 2.0], [18600.0, 1.0], [18700.0, 2.0], [19400.0, 2.0], [18500.0, 1.0], [18800.0, 1.0], [19200.0, 2.0], [19600.0, 1.0], [20000.0, 2.0], [20100.0, 1.0], [20300.0, 2.0], [20200.0, 1.0], [20500.0, 2.0], [20900.0, 3.0], [21300.0, 1.0], [21000.0, 1.0], [21800.0, 3.0], [22100.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2364.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 156510.0, "series": [{"data": [[0.0, 2364.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 113111.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 156510.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 47785.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2547.06929911155, "minX": 1.68416304E12, "maxY": 3000.0, "series": [{"data": [[1.6841631E12, 3000.0], [1.68416322E12, 3000.0], [1.68416304E12, 3000.0], [1.68416334E12, 2547.06929911155], [1.68416316E12, 3000.0], [1.68416328E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416334E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.0, "maxY": 13667.0, "series": [{"data": [[2.0, 11234.0], [3.0, 11324.0], [4.0, 11148.0], [5.0, 10779.0], [6.0, 10644.0], [7.0, 11160.0], [8.0, 11095.0], [9.0, 11231.0], [10.0, 11252.0], [11.0, 10749.0], [13.0, 10044.5], [15.0, 10394.5], [16.0, 10843.0], [17.0, 10883.0], [18.0, 11058.0], [19.0, 10844.0], [20.0, 10770.0], [21.0, 11184.0], [22.0, 9702.0], [23.0, 10853.0], [24.0, 10436.0], [25.0, 11072.0], [26.0, 9631.0], [27.0, 11040.0], [28.0, 10759.0], [29.0, 10348.0], [30.0, 10143.0], [31.0, 9688.0], [33.0, 9885.0], [32.0, 10722.0], [35.0, 10108.0], [34.0, 10980.0], [37.0, 10901.0], [36.0, 9525.0], [39.0, 10956.0], [38.0, 10581.0], [41.0, 10669.0], [40.0, 10613.0], [43.0, 10441.0], [42.0, 10851.0], [45.0, 9946.5], [47.0, 9414.0], [46.0, 9051.0], [49.0, 9711.0], [48.0, 10743.0], [51.0, 11133.0], [50.0, 10295.0], [53.0, 9930.0], [52.0, 10846.0], [55.0, 10451.0], [54.0, 9409.0], [56.0, 9313.0], [59.0, 11274.0], [58.0, 10537.0], [61.0, 9996.5], [63.0, 10429.0], [62.0, 10499.0], [67.0, 10180.0], [66.0, 8815.0], [65.0, 9492.0], [64.0, 9542.0], [71.0, 9970.0], [70.0, 10193.0], [69.0, 8545.0], [68.0, 10523.0], [74.0, 9538.0], [73.0, 10436.5], [79.0, 10023.0], [78.0, 10433.0], [77.0, 9392.0], [83.0, 8816.0], [82.0, 10229.0], [80.0, 10997.0], [87.0, 10153.0], [86.0, 9219.0], [85.0, 9714.0], [84.0, 9621.0], [91.0, 10255.0], [90.0, 9137.0], [88.0, 9051.0], [95.0, 9921.0], [94.0, 9230.0], [93.0, 10278.0], [92.0, 9728.0], [99.0, 9451.0], [98.0, 10722.0], [97.0, 9007.0], [96.0, 8308.0], [103.0, 8549.0], [102.0, 10343.0], [101.0, 9322.0], [100.0, 8804.0], [107.0, 8916.0], [106.0, 10168.0], [105.0, 8402.0], [104.0, 10412.0], [111.0, 10322.0], [110.0, 9065.0], [109.0, 10124.0], [108.0, 8754.0], [115.0, 10263.0], [113.0, 8443.0], [112.0, 11091.0], [119.0, 10914.0], [118.0, 9375.0], [117.0, 8192.0], [116.0, 10875.0], [123.0, 10950.0], [122.0, 9465.0], [121.0, 9376.0], [120.0, 9037.0], [127.0, 10890.5], [125.0, 8700.0], [124.0, 9526.0], [134.0, 8529.5], [133.0, 9001.0], [131.0, 9465.0], [130.0, 8728.0], [129.0, 8357.0], [128.0, 8458.0], [143.0, 8659.0], [142.0, 8603.0], [141.0, 9621.0], [140.0, 11054.0], [139.0, 9743.0], [138.0, 8534.0], [137.0, 9853.0], [151.0, 9823.0], [150.0, 8578.0], [149.0, 10710.0], [148.0, 10571.0], [147.0, 8542.0], [146.0, 10713.0], [145.0, 9012.0], [144.0, 11517.0], [159.0, 8243.0], [158.0, 8051.0], [157.0, 11207.0], [156.0, 8593.0], [155.0, 8568.0], [154.0, 9195.0], [153.0, 7958.0], [152.0, 9896.0], [167.0, 8490.0], [166.0, 8475.0], [165.0, 8512.0], [164.0, 9452.0], [163.0, 11281.0], [162.0, 9079.0], [161.0, 8315.0], [160.0, 8902.0], [174.0, 9302.5], [172.0, 10204.0], [171.0, 11355.0], [170.0, 9178.0], [169.0, 10607.0], [168.0, 8435.0], [183.0, 9944.0], [182.0, 7082.0], [181.0, 8586.0], [180.0, 9542.0], [179.0, 10642.0], [178.0, 8354.0], [177.0, 9409.0], [176.0, 9132.5], [191.0, 8652.0], [190.0, 10118.0], [189.0, 9373.0], [188.0, 9830.0], [187.0, 8624.0], [186.0, 8526.0], [185.0, 8656.0], [184.0, 9788.0], [199.0, 9017.0], [198.0, 9291.0], [197.0, 10115.5], [196.0, 10115.0], [195.0, 10077.0], [194.0, 10240.0], [192.0, 10120.0], [207.0, 9819.0], [206.0, 9295.0], [205.0, 11081.0], [204.0, 9006.0], [203.0, 8203.0], [201.0, 8932.0], [200.0, 10895.0], [215.0, 9889.0], [214.0, 7124.0], [213.0, 9068.0], [212.0, 10608.0], [211.0, 9535.0], [210.0, 8584.0], [209.0, 8155.0], [208.0, 9296.0], [223.0, 8859.0], [222.0, 8872.0], [221.0, 9226.0], [219.0, 9854.0], [218.0, 8023.0], [217.0, 10939.0], [216.0, 9226.0], [231.0, 11186.0], [230.0, 8364.0], [229.0, 9906.0], [227.0, 10259.0], [226.0, 9689.5], [224.0, 8524.0], [239.0, 7913.0], [238.0, 10799.0], [237.0, 8921.0], [236.0, 7940.0], [234.0, 8957.0], [233.0, 9516.0], [247.0, 9153.0], [246.0, 10830.0], [245.0, 6977.0], [244.0, 10774.0], [243.0, 9599.0], [242.0, 8881.0], [241.0, 7255.0], [240.0, 9587.0], [255.0, 9027.0], [254.0, 9201.0], [253.0, 7272.0], [252.0, 8452.0], [250.0, 11035.0], [249.0, 7373.0], [248.0, 8328.0], [259.0, 8593.0], [271.0, 8872.0], [269.0, 10352.6], [266.0, 9811.0], [263.0, 8621.0], [262.0, 9936.0], [261.0, 8748.0], [260.0, 10789.0], [258.0, 8994.0], [257.0, 8146.0], [275.0, 8660.0], [286.0, 8396.0], [287.0, 13667.0], [285.0, 7656.5], [274.0, 10375.0], [273.0, 10860.0], [272.0, 8922.0], [283.0, 8799.0], [282.0, 10225.0], [279.0, 10874.0], [278.0, 9023.0], [277.0, 10362.0], [276.0, 9131.0], [291.0, 8627.0], [300.0, 9280.333333333334], [297.0, 11349.0], [296.0, 9175.0], [295.0, 7160.0], [294.0, 9297.0], [292.0, 8945.0], [290.0, 9014.0], [289.0, 8484.0], [288.0, 11094.0], [316.0, 9164.0], [319.0, 8814.0], [318.0, 9712.0], [317.0, 9674.0], [314.0, 8439.0], [311.0, 9061.0], [309.0, 8867.5], [307.0, 8754.0], [306.0, 7157.0], [305.0, 8663.0], [304.0, 9512.5], [334.0, 10020.0], [332.0, 8661.5], [330.0, 9241.0], [329.0, 9842.0], [327.0, 6570.0], [326.0, 9380.0], [325.0, 8773.0], [324.0, 9996.5], [322.0, 8133.5], [320.0, 9090.0], [339.0, 8947.0], [349.0, 6740.0], [351.0, 8162.0], [348.0, 7141.0], [338.0, 10333.0], [336.0, 9425.5], [347.0, 6404.5], [345.0, 6920.5], [343.0, 10616.0], [342.0, 8910.0], [341.0, 9873.0], [340.0, 10089.0], [356.0, 6695.0], [355.0, 10235.0], [354.0, 11097.0], [353.0, 8884.0], [352.0, 9377.0], [382.0, 9535.0], [383.0, 10255.0], [381.0, 8780.0], [380.0, 6928.0], [379.0, 6131.0], [378.0, 8758.0], [377.0, 10668.0], [376.0, 10971.0], [375.0, 8543.0], [371.0, 9202.666666666666], [370.0, 9123.75], [374.0, 6942.0], [372.0, 6852.0], [398.0, 6748.0], [399.0, 6237.0], [397.0, 10500.0], [396.0, 10854.0], [395.0, 8417.0], [394.0, 7079.0], [393.0, 7535.0], [392.0, 9929.0], [391.0, 6684.0], [385.0, 9342.0], [384.0, 8137.0], [387.0, 6078.0], [386.0, 7124.0], [390.0, 10394.0], [389.0, 9590.0], [414.0, 7225.0], [412.0, 10192.0], [403.0, 6728.0], [402.0, 7334.0], [401.0, 8563.0], [400.0, 8704.0], [411.0, 10548.0], [410.0, 8517.0], [409.0, 8682.0], [408.0, 7429.0], [407.0, 9358.0], [406.0, 8483.0], [405.0, 9921.0], [404.0, 5639.0], [430.0, 10359.0], [431.0, 8775.0], [429.0, 10752.0], [428.0, 10554.0], [427.0, 5702.0], [426.0, 8633.0], [425.0, 7427.5], [423.0, 8688.0], [419.0, 9498.0], [418.0, 10580.0], [417.0, 9884.0], [416.0, 9432.0], [421.0, 9771.0], [445.0, 5178.0], [447.0, 7530.5], [444.0, 9260.0], [435.0, 8561.0], [434.0, 10304.0], [433.0, 8335.0], [432.0, 9314.0], [443.0, 9252.0], [442.0, 8666.0], [441.0, 8542.0], [440.0, 6611.0], [439.0, 8596.0], [438.0, 11190.0], [437.0, 8789.0], [436.0, 7409.0], [461.0, 7093.0], [459.0, 8602.0], [458.0, 8928.0], [456.0, 10758.0], [455.0, 8398.0], [454.0, 9554.0], [453.0, 10928.0], [452.0, 8363.0], [451.0, 6500.0], [450.0, 8767.666666666666], [477.0, 8610.0], [476.0, 7618.0], [465.0, 9518.0], [464.0, 6504.0], [475.0, 9994.0], [474.0, 10284.0], [473.0, 8784.0], [472.0, 6958.0], [471.0, 8599.0], [470.0, 5728.0], [469.0, 7212.0], [494.0, 9467.0], [495.0, 6175.0], [493.0, 9478.0], [492.0, 5906.0], [491.0, 8610.0], [490.0, 6396.0], [489.0, 5821.0], [488.0, 5188.0], [487.0, 10448.0], [481.0, 6440.666666666667], [480.0, 10263.0], [483.0, 9365.0], [482.0, 10179.0], [486.0, 8740.0], [484.0, 8456.0], [510.0, 5491.0], [511.0, 10669.0], [509.0, 9428.5], [498.0, 10436.0], [497.0, 6330.5], [507.0, 8132.5], [505.0, 10050.0], [504.0, 8198.0], [503.0, 8831.5], [501.0, 5727.0], [500.0, 7522.0], [528.0, 5874.0], [534.0, 9415.0], [532.0, 4238.0], [530.0, 7059.0], [522.0, 8577.0], [520.0, 5702.0], [518.0, 5398.0], [516.0, 9102.0], [514.0, 6346.0], [512.0, 9451.0], [572.0, 6686.5], [574.0, 6069.0], [570.0, 10520.0], [568.0, 5551.5], [566.0, 7742.0], [564.0, 7178.0], [562.0, 7076.0], [560.0, 10271.0], [558.0, 5869.0], [556.0, 10743.0], [554.0, 7870.400000000001], [604.0, 11108.0], [606.0, 5248.0], [602.0, 10120.0], [600.0, 9627.0], [598.0, 5335.0], [596.0, 10115.0], [594.0, 9422.0], [592.0, 5138.0], [590.0, 6044.0], [578.0, 6982.0], [576.0, 5661.0], [582.0, 5883.5], [580.0, 7699.5], [588.0, 5316.0], [584.0, 5368.0], [624.0, 8777.0], [634.0, 6867.0], [630.0, 9394.5], [628.0, 6662.0], [626.0, 5682.5], [620.0, 6554.0], [618.0, 7580.333333333333], [610.0, 6569.0], [608.0, 5318.0], [664.0, 7733.0], [668.0, 7419.0], [670.0, 7717.0], [666.0, 8499.0], [658.0, 7302.0], [656.0, 8553.0], [654.0, 5111.0], [646.0, 7559.0], [642.0, 7168.0], [652.0, 10392.0], [650.0, 10066.0], [678.0, 7711.5], [700.0, 8726.0], [692.0, 7496.0], [688.0, 6663.0], [686.0, 9128.0], [682.0, 7688.0], [680.0, 10404.0], [676.0, 8088.0], [674.0, 9212.0], [672.0, 6724.5], [732.0, 5946.0], [734.0, 5751.0], [730.0, 9317.0], [728.0, 8772.0], [726.0, 5284.0], [722.0, 5561.0], [720.0, 6593.0], [718.0, 9308.0], [704.0, 9928.0], [708.0, 8245.0], [706.0, 7683.0], [716.0, 9120.0], [714.0, 10880.0], [712.0, 5337.0], [764.0, 4674.0], [766.0, 7100.5], [752.0, 5399.0], [754.0, 5796.0], [756.0, 9024.0], [762.0, 9276.0], [760.0, 6431.0], [742.0, 6049.0], [740.0, 4473.0], [738.0, 5313.0], [736.0, 4733.0], [750.0, 7359.666666666667], [748.0, 7900.0], [746.0, 7286.0], [744.0, 5847.0], [758.0, 9895.0], [774.0, 4867.0], [788.0, 7237.0], [786.0, 6947.0], [784.0, 7242.0], [772.0, 6051.0], [770.0, 5222.0], [768.0, 5995.0], [782.0, 6035.0], [780.0, 6011.0], [778.0, 5271.0], [828.0, 4941.0], [816.0, 7444.0], [818.0, 9780.0], [820.0, 5646.0], [830.0, 7212.0], [826.0, 6544.0], [824.0, 6077.0], [804.0, 8216.333333333334], [806.0, 5640.0], [814.0, 4879.0], [812.0, 6334.666666666667], [808.0, 7721.0], [822.0, 10317.0], [860.0, 7813.0], [856.0, 4437.5], [848.0, 5737.0], [852.0, 6067.5], [850.0, 4916.0], [862.0, 7352.0], [858.0, 5270.0], [832.0, 5324.0], [834.0, 5230.0], [836.0, 5823.0], [838.0, 10120.0], [846.0, 9117.0], [844.0, 4145.0], [842.0, 6030.0], [840.0, 6547.5], [854.0, 7367.0], [892.0, 10623.0], [880.0, 4497.0], [882.0, 4691.0], [884.0, 5618.0], [894.0, 5883.0], [890.0, 4340.0], [888.0, 5893.0], [864.0, 5511.0], [866.0, 10210.0], [868.0, 5209.0], [870.0, 5570.0], [878.0, 4415.0], [876.0, 10486.5], [874.0, 9017.5], [872.0, 6622.0], [886.0, 8463.0], [920.0, 5572.0], [924.0, 4087.0], [926.0, 6952.5], [912.0, 10483.0], [914.0, 9393.5], [922.0, 8025.0], [896.0, 7847.0], [898.0, 7523.0], [900.0, 10381.0], [902.0, 5620.5], [910.0, 8277.0], [908.0, 6698.5], [906.0, 10375.0], [904.0, 10502.0], [918.0, 7124.0], [916.0, 8428.0], [954.0, 8804.0], [958.0, 7730.0], [944.0, 8186.0], [946.0, 6347.0], [948.0, 9248.0], [956.0, 6292.0], [934.0, 4065.0], [932.0, 5642.0], [930.0, 10413.0], [928.0, 9959.0], [942.0, 7418.0], [940.0, 7087.0], [938.0, 8349.0], [936.0, 8834.0], [950.0, 8005.5], [984.0, 6449.5], [990.0, 4098.0], [974.0, 6731.333333333333], [960.0, 9858.0], [962.0, 4885.0], [964.0, 7394.0], [968.0, 11280.0], [982.0, 4963.0], [980.0, 5240.5], [978.0, 6313.5], [976.0, 6516.5], [996.0, 8317.0], [1016.0, 5021.5], [994.0, 7953.0], [1014.0, 7198.5], [1012.0, 7703.0], [1008.0, 5674.0], [1006.0, 6369.5], [1004.0, 8545.0], [1002.0, 7365.333333333333], [1028.0, 6964.0], [1056.0, 7798.5], [1080.0, 5909.5], [1076.0, 5729.0], [1024.0, 5937.0], [1032.0, 5814.0], [1036.0, 4257.0], [1048.0, 4920.0], [1044.0, 7607.0], [1040.0, 6151.0], [1064.0, 3984.0], [1060.0, 10218.0], [1144.0, 7798.333333333333], [1148.0, 6905.5], [1128.0, 7244.0], [1120.0, 6054.5], [1124.0, 5505.0], [1100.0, 7548.0], [1096.0, 6926.0], [1116.0, 5418.0], [1112.0, 7027.0], [1104.0, 8234.0], [1132.0, 3586.0], [1164.0, 3949.0], [1208.0, 3772.0], [1160.0, 7744.5], [1156.0, 4889.5], [1188.0, 11216.0], [1184.0, 7603.0], [1180.0, 7291.0], [1176.0, 6532.5], [1172.0, 7971.666666666667], [1272.0, 9640.5], [1276.0, 3083.0], [1268.0, 6853.0], [1224.0, 10470.0], [1244.0, 5092.0], [1236.0, 6987.5], [1232.0, 9995.0], [1260.0, 2287.0], [1256.0, 4461.0], [1284.0, 3461.0], [1292.0, 10641.0], [1332.0, 7508.0], [1328.0, 4731.0], [1324.0, 4686.333333333333], [1320.0, 5610.666666666667], [1280.0, 7439.0], [1288.0, 4318.0], [1308.0, 5013.0], [1300.0, 7935.0], [1296.0, 6590.5], [1352.0, 6346.0], [1404.0, 6130.0], [1388.0, 4034.0], [1380.0, 6877.0], [1372.0, 4998.0], [1344.0, 3238.0], [1348.0, 6181.0], [1356.0, 2079.0], [1368.0, 8922.0], [1360.0, 3484.5], [1468.0, 4908.666666666667], [1440.0, 4724.5], [1464.0, 10148.0], [1412.0, 3684.0], [1416.0, 5248.0], [1420.0, 4355.0], [1436.0, 10396.0], [1424.0, 10155.0], [1444.0, 8027.5], [1524.0, 8088.0], [1528.0, 1841.0], [1508.0, 2494.0], [1532.0, 1109.0], [1520.0, 6872.0], [1472.0, 2771.0], [1484.0, 6018.0], [1500.0, 3179.5], [1496.0, 8048.5], [1492.0, 2228.0], [1512.0, 9139.0], [1592.0, 2120.5], [1572.0, 1099.0], [1576.0, 4093.0], [1596.0, 3027.5], [1588.0, 6179.0], [1584.0, 1126.0], [1536.0, 5809.0], [1540.0, 1814.0], [1544.0, 1871.5], [1564.0, 1096.0], [1560.0, 3815.0], [1580.0, 10560.0], [1648.0, 1378.0], [1660.0, 4594.0], [1628.0, 1092.0], [1612.0, 5703.0], [1624.0, 3471.0], [1620.0, 8306.5], [1616.0, 1131.0], [1644.0, 10607.0], [1636.0, 5505.0], [1632.0, 10166.0], [1672.0, 4913.5], [1724.0, 3366.0], [1720.0, 6865.0], [1676.0, 9169.0], [1668.0, 6799.0], [1692.0, 3671.5], [1688.0, 5275.0], [1684.0, 8522.0], [1704.0, 4221.5], [1700.0, 1137.0], [1764.0, 1124.0], [1760.0, 3621.0], [1780.0, 2086.5], [1756.0, 1739.0], [1744.0, 1098.0], [1796.0, 1120.0], [1844.0, 8344.0], [1852.0, 5233.0], [1800.0, 8535.0], [1828.0, 3291.5], [1820.0, 1584.0], [1816.0, 8442.0], [1812.0, 7799.0], [1808.0, 8384.0], [1860.0, 5139.5], [1896.0, 1148.0], [1908.0, 1159.5], [1904.0, 1157.0], [1856.0, 1536.0], [1884.0, 2920.0], [1880.0, 4145.0], [1872.0, 1859.0], [1972.0, 4509.5], [1952.0, 3788.0], [1956.0, 7896.0], [1980.0, 1830.0], [1968.0, 3099.0], [1924.0, 1153.0], [1920.0, 6172.0], [1944.0, 1601.5], [1940.0, 2744.0], [1936.0, 1100.0], [2036.0, 3862.666666666667], [2044.0, 3688.666666666667], [2016.0, 4906.0], [2028.0, 3218.0], [2032.0, 1165.0], [1996.0, 3523.0], [1992.0, 1096.0], [1984.0, 1861.0], [2008.0, 1960.0], [2000.0, 3289.0], [2112.0, 1860.0], [2168.0, 5163.0], [2120.0, 1977.3333333333333], [2128.0, 1494.0], [2136.0, 3041.0], [2064.0, 1280.0], [2048.0, 1348.0], [2096.0, 2982.0], [2080.0, 1703.0], [2288.0, 1680.5], [2280.0, 2544.0], [2248.0, 1244.0], [2264.0, 1244.0], [2296.0, 1428.0], [2272.0, 7981.0], [2200.0, 1122.0], [2192.0, 1112.0], [2176.0, 4036.5], [2208.0, 3193.0], [2408.0, 7392.0], [2416.0, 3291.0], [2424.0, 1466.0], [2384.0, 1437.0], [2400.0, 2427.0], [2328.0, 3415.0], [2320.0, 1389.5], [2360.0, 1733.5], [2352.0, 1546.0], [2536.0, 2279.75], [2552.0, 5197.0], [2504.0, 1331.0], [2496.0, 1717.0], [2512.0, 4569.333333333334], [2520.0, 5432.5], [2440.0, 1313.0], [2448.0, 6170.0], [2456.0, 1343.5], [2488.0, 1166.0], [2472.0, 4924.5], [2664.0, 1631.0], [2624.0, 3367.0], [2632.0, 3307.0], [2648.0, 1253.5], [2672.0, 5675.0], [2656.0, 8697.0], [2584.0, 3445.0], [2560.0, 6662.5], [2616.0, 1316.0], [2608.0, 854.3333333333333], [2600.0, 4413.0], [2592.0, 4057.0], [2784.0, 3797.0], [2760.0, 1563.0], [2768.0, 3603.666666666667], [2808.0, 1156.0], [2712.0, 3867.6], [2704.0, 5099.0], [2696.0, 5075.5], [2688.0, 1302.5], [2736.0, 4897.5], [2728.0, 1255.0], [2928.0, 2456.5333333333333], [2880.0, 2899.5], [2896.0, 780.6666666666667], [2904.0, 420.0], [2920.0, 1997.6666666666667], [2912.0, 1361.6], [2840.0, 1166.0], [2816.0, 1460.0], [2864.0, 2732.3333333333335], [2856.0, 1605.0], [2848.0, 1337.0], [2952.0, 1275.111111111111], [2960.0, 3642.0], [3000.0, 2803.09334240204], [2944.0, 2552.833333333333], [2968.0, 3125.4166666666665], [2992.0, 4002.5], [2984.0, 2083.0], [2976.0, 2906.8], [2153.0, 2572.0], [2113.0, 3698.0], [2129.0, 1668.0], [2137.0, 1561.0], [2073.0, 4906.0], [2057.0, 1187.0], [2049.0, 5468.0], [2105.0, 1622.0], [2089.0, 7143.333333333333], [2081.0, 3138.0], [2297.0, 1465.0], [2241.0, 2351.6666666666665], [2257.0, 5325.0], [2249.0, 3866.5], [2281.0, 6802.0], [2273.0, 6132.0], [2201.0, 1798.0], [2193.0, 7778.0], [2185.0, 4032.5], [2233.0, 4599.5], [2225.0, 4114.333333333334], [2417.0, 7528.0], [2369.0, 2993.5], [2385.0, 1095.0], [2393.0, 1392.3333333333333], [2425.0, 8892.0], [2409.0, 1092.0], [2329.0, 6941.0], [2313.0, 6088.0], [2361.0, 1190.0], [2353.0, 3348.0], [2337.0, 5944.0], [2545.0, 2545.0], [2505.0, 1834.0], [2513.0, 5704.5], [2521.0, 10829.0], [2553.0, 9599.0], [2529.0, 4740.5], [2449.0, 1378.0], [2441.0, 1459.0], [2433.0, 1174.5], [2473.0, 2697.0], [2465.0, 1389.0], [2681.0, 3647.6666666666665], [2673.0, 1756.5], [2625.0, 4483.333333333333], [2633.0, 2158.0], [2641.0, 5049.333333333334], [2649.0, 2419.0], [2665.0, 6535.333333333333], [2657.0, 1341.0], [2585.0, 10315.0], [2577.0, 4124.333333333333], [2569.0, 1141.5], [2609.0, 1336.0], [2601.0, 2022.0], [2593.0, 8456.333333333334], [2801.0, 3273.0], [2793.0, 2350.0], [2753.0, 1144.0], [2761.0, 2765.6666666666665], [2777.0, 3491.0], [2809.0, 1595.0], [2785.0, 3111.5], [2713.0, 8789.0], [2705.0, 2902.0], [2697.0, 1567.0], [2689.0, 4571.333333333333], [2745.0, 4255.5], [2729.0, 2867.4], [2721.0, 3479.25], [2921.0, 2675.285714285714], [2937.0, 1253.142857142857], [2889.0, 1769.0], [2905.0, 8171.0], [2913.0, 5918.5], [2841.0, 1596.0], [2825.0, 2636.0], [2817.0, 1732.0], [2873.0, 1446.0], [2865.0, 1374.0], [2857.0, 1363.0], [2953.0, 4836.666666666667], [2993.0, 3210.0], [2961.0, 3244.2], [2969.0, 2538.375], [2985.0, 1901.0909090909095], [2977.0, 1260.3333333333333], [1029.0, 6413.0], [1081.0, 7259.0], [1077.0, 5015.0], [1033.0, 4403.0], [1025.0, 5261.0], [1053.0, 7745.0], [1045.0, 4251.0], [1041.0, 5827.0], [1069.0, 6590.0], [1065.0, 9852.0], [1061.0, 4810.0], [1057.0, 7091.0], [1097.0, 4591.0], [1141.0, 5950.0], [1137.0, 5439.5], [1101.0, 8127.0], [1093.0, 6815.8], [1117.0, 9486.0], [1113.0, 4019.0], [1109.0, 5705.5], [1129.0, 7917.0], [1121.0, 3472.0], [1213.0, 6146.0], [1185.0, 5917.0], [1201.0, 8357.0], [1177.0, 5165.0], [1173.0, 10731.0], [1169.0, 6826.5], [1197.0, 5531.4], [1269.0, 7996.0], [1253.0, 4470.0], [1249.0, 9342.0], [1273.0, 7453.0], [1265.0, 2547.5], [1229.0, 8362.0], [1221.0, 7986.5], [1241.0, 5776.5], [1237.0, 6649.0], [1233.0, 10215.0], [1257.0, 3485.0], [1329.0, 10710.0], [1341.0, 10258.0], [1289.0, 6908.0], [1281.0, 2439.0], [1321.0, 8116.0], [1317.0, 4592.0], [1309.0, 7090.333333333333], [1305.0, 6866.333333333333], [1297.0, 7536.0], [1405.0, 5058.0], [1377.0, 3863.5], [1393.0, 6113.0], [1353.0, 10451.0], [1357.0, 5828.0], [1365.0, 9353.0], [1361.0, 6169.0], [1385.0, 4579.0], [1461.0, 6249.5], [1449.0, 6070.5], [1469.0, 1126.0], [1445.0, 7340.0], [1457.0, 6695.0], [1413.0, 9241.0], [1409.0, 9329.0], [1433.0, 7780.0], [1429.0, 4470.0], [1425.0, 5786.0], [1453.0, 6531.5], [1525.0, 5335.0], [1533.0, 3633.0], [1505.0, 4344.0], [1513.0, 5587.0], [1509.0, 2865.0], [1521.0, 2101.0], [1481.0, 5616.0], [1477.0, 6281.0], [1489.0, 5431.5], [1541.0, 2970.0], [1573.0, 1112.0], [1569.0, 1556.0], [1549.0, 5331.5], [1565.0, 2724.0], [1561.0, 8766.0], [1557.0, 3066.5], [1553.0, 1097.0], [1657.0, 7943.0], [1633.0, 1193.0], [1637.0, 5745.0], [1641.0, 3738.5], [1661.0, 6686.0], [1653.0, 1099.0], [1649.0, 1103.0], [1601.0, 1126.5], [1605.0, 2666.0], [1609.0, 4284.0], [1613.0, 1130.0], [1625.0, 3559.0], [1621.0, 7007.0], [1617.0, 1130.0], [1645.0, 8383.0], [1717.0, 6126.0], [1705.0, 2255.0], [1713.0, 4779.5], [1665.0, 4293.0], [1669.0, 3271.0], [1693.0, 1121.0], [1689.0, 3534.0], [1709.0, 9557.5], [1701.0, 7158.0], [1697.0, 5512.5], [1785.0, 2968.5], [1789.0, 8518.0], [1769.0, 2188.0], [1765.0, 10566.0], [1777.0, 1753.0], [1741.0, 3361.0], [1729.0, 1150.5], [1757.0, 1431.5], [1753.0, 10257.0], [1749.0, 4644.0], [1745.0, 4529.0], [1773.0, 4394.5], [1841.0, 2291.0], [1849.0, 5495.0], [1833.0, 5152.5], [1825.0, 4355.0], [1829.0, 2964.0], [1805.0, 1128.5], [1801.0, 1221.0], [1797.0, 2081.0], [1793.0, 2092.0], [1809.0, 1187.0], [1837.0, 6653.0], [1917.0, 4050.0], [1913.0, 4893.333333333333], [1897.0, 1172.0], [1909.0, 2403.6666666666665], [1857.0, 1139.0], [1865.0, 3100.0], [1873.0, 5596.0], [1901.0, 1150.0], [1973.0, 6981.0], [1953.0, 5019.5], [1961.0, 6043.5], [1965.0, 1949.0], [1969.0, 1095.0], [1925.0, 4333.0], [1929.0, 3551.666666666667], [1949.0, 4522.5], [2041.0, 3934.5], [2021.0, 2196.0], [2033.0, 1108.0], [1997.0, 2364.0], [2009.0, 9311.0], [2001.0, 5149.0], [2162.0, 4034.333333333333], [2170.0, 5132.5], [2114.0, 1161.0], [2130.0, 1159.0], [2138.0, 3785.0], [2146.0, 1458.0], [2066.0, 2944.0], [2058.0, 1464.0], [2050.0, 3116.5], [2106.0, 1963.0], [2098.0, 3388.0], [2082.0, 5634.0], [2282.0, 3941.0], [2250.0, 1725.5], [2298.0, 3078.0], [2290.0, 1264.5], [2274.0, 1683.0], [2178.0, 1554.5], [2226.0, 1167.0], [2218.0, 6058.0], [2210.0, 4552.5], [2410.0, 1153.0], [2378.0, 1375.3333333333333], [2386.0, 1314.0], [2394.0, 1105.0], [2418.0, 1583.0], [2330.0, 1654.0], [2322.0, 1761.0], [2354.0, 1635.0], [2346.0, 1537.0], [2498.0, 5793.0], [2522.0, 3383.0], [2434.0, 1227.0], [2442.0, 1454.0], [2458.0, 6063.5], [2490.0, 2530.5], [2674.0, 2304.0], [2626.0, 1164.25], [2634.0, 2926.0], [2642.0, 2904.0], [2650.0, 1195.0], [2666.0, 4948.666666666667], [2658.0, 1084.0], [2586.0, 2047.0], [2578.0, 6372.0], [2570.0, 2254.0], [2562.0, 3654.0], [2618.0, 2457.333333333333], [2610.0, 9625.0], [2602.0, 5523.5], [2594.0, 1417.0], [2794.0, 3363.0], [2810.0, 1159.0], [2754.0, 10459.0], [2770.0, 1339.0], [2786.0, 2102.2], [2714.0, 1694.0], [2698.0, 1946.0], [2690.0, 39.0], [2738.0, 4648.25], [2730.0, 5432.0], [2930.0, 3385.4999999999995], [2882.0, 6761.75], [2898.0, 1277.6666666666667], [2906.0, 773.0], [2922.0, 4395.0], [2842.0, 4170.0], [2834.0, 3378.5], [2818.0, 2484.25], [2874.0, 2531.0], [2866.0, 1657.0], [2858.0, 1172.0], [2850.0, 1163.5], [2954.0, 2321.2], [2946.0, 2935.0], [2962.0, 1244.0], [2970.0, 1099.5], [2994.0, 4661.5], [2986.0, 2091.1111111111113], [2978.0, 880.5555555555553], [2155.0, 3862.5], [2115.0, 1202.0], [2123.0, 1840.0], [2131.0, 1655.0], [2075.0, 1950.5], [2067.0, 4327.5], [2059.0, 2451.5], [2107.0, 1163.0], [2091.0, 4860.5], [2139.0, 1958.0], [2291.0, 1757.0], [2243.0, 1611.0], [2267.0, 5383.6], [2299.0, 9311.0], [2275.0, 1751.0], [2195.0, 1485.5], [2187.0, 2481.0], [2235.0, 1294.6666666666667], [2227.0, 1138.0], [2219.0, 1770.0], [2211.0, 5000.0], [2427.0, 2926.0], [2371.0, 2822.5], [2387.0, 1106.0], [2395.0, 1102.0], [2411.0, 1523.0], [2403.0, 3279.0], [2323.0, 1361.0], [2355.0, 8825.0], [2347.0, 2989.0], [2339.0, 6617.5], [2539.0, 4765.25], [2515.0, 7935.5], [2523.0, 1105.0], [2547.0, 3469.3333333333335], [2531.0, 4387.666666666667], [2451.0, 5999.0], [2443.0, 1509.0], [2491.0, 1577.0], [2483.0, 4504.5], [2475.0, 2630.0], [2667.0, 8462.0], [2635.0, 1312.0], [2683.0, 6474.0], [2627.0, 1298.0], [2643.0, 2236.0], [2675.0, 1185.0], [2659.0, 1370.0], [2587.0, 1217.0], [2579.0, 4711.0], [2571.0, 1389.5], [2619.0, 5843.5], [2611.0, 1097.0], [2603.0, 1097.0], [2595.0, 1098.0], [2803.0, 2168.3333333333335], [2763.0, 1376.0], [2755.0, 2694.3333333333335], [2771.0, 4080.0], [2779.0, 3677.0], [2811.0, 2861.0], [2795.0, 3808.0], [2715.0, 4603.5], [2707.0, 5106.25], [2699.0, 1328.0], [2691.0, 1257.0], [2747.0, 1157.0], [2731.0, 39.0], [2723.0, 3339.3333333333335], [2931.0, 6609.0], [2915.0, 6143.5], [2883.0, 4170.5], [2891.0, 3923.0], [2899.0, 5051.0], [2907.0, 3103.333333333333], [2843.0, 2322.6], [2827.0, 4497.0], [2867.0, 1271.0], [2859.0, 1258.0], [2955.0, 2440.642857142857], [2963.0, 1207.0], [2971.0, 1100.0], [2995.0, 2943.047619047619], [2987.0, 1849.0], [2979.0, 1095.0], [529.0, 7080.0], [537.0, 9740.0], [535.0, 5296.0], [533.0, 8845.0], [531.0, 7639.0], [527.0, 6776.2], [513.0, 5717.0], [519.0, 6374.0], [517.0, 9582.0], [515.0, 9528.0], [575.0, 8062.0], [573.0, 6080.0], [569.0, 7937.0], [565.0, 6974.0], [563.0, 5941.0], [559.0, 8412.0], [557.0, 5669.0], [555.0, 9180.333333333334], [605.0, 7650.0], [607.0, 6140.0], [603.0, 5228.0], [601.0, 7738.0], [599.0, 7578.0], [597.0, 9644.0], [595.0, 9211.0], [593.0, 7365.0], [591.0, 7301.0], [577.0, 11123.0], [589.0, 5111.0], [587.0, 8345.5], [585.0, 7704.0], [639.0, 9531.25], [635.0, 9830.0], [631.0, 8094.0], [621.0, 9453.0], [615.0, 5743.5], [613.0, 7793.5], [611.0, 5831.0], [609.0, 5280.0], [657.0, 6100.0], [667.0, 9242.0], [663.0, 5932.5], [661.0, 9715.0], [659.0, 5942.0], [655.0, 8321.0], [653.0, 8062.0], [651.0, 9838.0], [647.0, 8371.0], [697.0, 6355.0], [701.0, 5860.5], [703.0, 5865.5], [699.0, 5335.0], [695.0, 5300.333333333333], [691.0, 6858.666666666667], [685.0, 8111.0], [675.0, 9811.0], [673.0, 9248.0], [683.0, 10955.0], [681.0, 7308.0], [733.0, 6356.0], [735.0, 6641.0], [731.0, 4991.0], [729.0, 5333.0], [727.0, 5246.0], [725.0, 5908.0], [723.0, 4416.0], [721.0, 9787.0], [717.0, 5930.0], [707.0, 8382.0], [705.0, 10669.0], [711.0, 6084.0], [709.0, 6358.0], [715.0, 8007.0], [713.0, 10172.0], [761.0, 4348.0], [767.0, 9301.0], [753.0, 5531.0], [755.0, 9216.0], [757.0, 10056.0], [763.0, 4318.0], [743.0, 6003.0], [741.0, 9808.0], [739.0, 4567.0], [751.0, 4645.0], [737.0, 6060.0], [759.0, 5617.0], [785.0, 6551.0], [787.0, 5715.0], [773.0, 6901.0], [771.0, 5689.0], [769.0, 8628.0], [781.0, 10003.0], [777.0, 5263.333333333333], [829.0, 7263.0], [831.0, 5874.0], [817.0, 9829.0], [819.0, 10361.0], [821.0, 5675.0], [827.0, 7310.0], [825.0, 8062.0], [815.0, 4907.0], [803.0, 8324.153846153848], [805.0, 7234.0], [807.0, 8688.0], [813.0, 6009.0], [809.0, 5995.0], [823.0, 8992.0], [859.0, 4634.0], [863.0, 9889.0], [849.0, 5975.0], [861.0, 5433.0], [857.0, 8139.0], [847.0, 6854.0], [833.0, 4810.0], [835.0, 7529.0], [837.0, 8994.0], [843.0, 10660.0], [841.0, 3921.0], [853.0, 9509.0], [893.0, 4090.0], [895.0, 5278.0], [881.0, 5749.0], [883.0, 6069.0], [885.0, 5012.0], [891.0, 6306.0], [889.0, 6224.0], [879.0, 7820.0], [865.0, 10330.0], [867.0, 10061.0], [869.0, 4224.0], [877.0, 5740.0], [887.0, 7809.0], [923.0, 5389.0], [915.0, 10591.0], [921.0, 5102.0], [911.0, 5553.0], [897.0, 9450.0], [899.0, 8048.0], [903.0, 4898.0], [909.0, 7297.0], [905.0, 7908.0], [919.0, 10376.0], [917.0, 8542.0], [957.0, 8873.0], [959.0, 10451.0], [945.0, 4596.0], [947.0, 3881.0], [955.0, 7448.0], [953.0, 6562.5], [935.0, 4594.0], [933.0, 3905.0], [931.0, 7554.0], [929.0, 9916.0], [943.0, 10624.0], [941.0, 8514.0], [939.0, 7773.0], [937.0, 6078.0], [951.0, 5817.0], [985.0, 4875.0], [991.0, 3885.0], [989.0, 7666.0], [987.0, 7078.5], [961.0, 10140.0], [963.0, 10553.0], [967.0, 6711.5], [965.0, 7425.0], [971.0, 5831.0], [969.0, 9105.0], [1021.0, 5892.0], [1023.0, 9236.5], [999.0, 6254.0], [995.0, 7906.0], [993.0, 8556.5], [1011.0, 5747.666666666667], [1005.0, 6047.0], [1074.0, 6675.75], [1082.0, 7231.0], [1086.0, 8117.0], [1078.0, 9812.0], [1054.0, 10039.0], [1026.0, 6388.0], [1030.0, 4803.0], [1034.0, 4752.0], [1038.0, 7373.5], [1050.0, 5011.5], [1046.0, 8624.0], [1042.0, 4750.0], [1070.0, 7663.0], [1066.0, 5974.0], [1146.0, 4939.5], [1150.0, 4093.0], [1122.0, 10026.0], [1126.0, 5348.5], [1138.0, 8120.0], [1102.0, 7159.0], [1098.0, 8063.0], [1094.0, 7829.0], [1118.0, 10014.0], [1114.0, 10016.0], [1110.0, 9389.0], [1106.0, 5653.5], [1134.0, 6012.0], [1130.0, 4496.0], [1166.0, 6883.5], [1206.0, 5709.666666666667], [1158.0, 6531.333333333333], [1154.0, 7082.5], [1198.0, 2501.0], [1194.0, 3970.0], [1182.0, 4034.5], [1178.0, 3031.0], [1174.0, 9932.0], [1218.0, 6132.333333333333], [1274.0, 4211.0], [1270.0, 9226.0], [1266.0, 8230.0], [1246.0, 10625.5], [1222.0, 5707.0], [1242.0, 4748.0], [1238.0, 5895.0], [1234.0, 3304.0], [1254.0, 6333.0], [1250.0, 10447.0], [1338.0, 6635.666666666667], [1330.0, 2667.0], [1326.0, 7355.5], [1314.0, 7036.333333333333], [1310.0, 7394.0], [1282.0, 6875.0], [1286.0, 8810.0], [1294.0, 7616.5], [1302.0, 11404.0], [1298.0, 2621.0], [1402.0, 6056.333333333333], [1406.0, 3995.0], [1398.0, 7636.666666666667], [1390.0, 5960.5], [1346.0, 8338.5], [1350.0, 6529.5], [1354.0, 2566.0], [1358.0, 5501.0], [1370.0, 2678.0], [1366.0, 3029.0], [1458.0, 2926.0], [1470.0, 9106.0], [1466.0, 1831.0], [1462.0, 11099.0], [1438.0, 4548.5], [1414.0, 5330.0], [1418.0, 4408.0], [1422.0, 7164.5], [1454.0, 7855.0], [1446.0, 8563.0], [1442.0, 6535.5], [1526.0, 8051.0], [1534.0, 1585.0], [1510.0, 1768.0], [1530.0, 4314.0], [1522.0, 3076.0], [1502.0, 9785.0], [1474.0, 6154.666666666667], [1486.0, 1805.5], [1494.0, 3231.5], [1490.0, 3503.0], [1518.0, 4809.666666666666], [1594.0, 3689.0], [1598.0, 5634.0], [1570.0, 1105.0], [1574.0, 10774.0], [1578.0, 1106.5], [1590.0, 4636.0], [1586.0, 4271.5], [1566.0, 1099.0], [1538.0, 3576.5], [1542.0, 7972.0], [1546.0, 3077.0], [1562.0, 1129.0], [1582.0, 1682.5], [1658.0, 8125.0], [1634.0, 1399.0], [1650.0, 10834.0], [1602.0, 10168.0], [1606.0, 3456.0], [1618.0, 7886.0], [1646.0, 5771.0], [1678.0, 7490.0], [1726.0, 1585.0], [1722.0, 3894.5], [1718.0, 2243.0], [1674.0, 4158.0], [1670.0, 8330.0], [1666.0, 5196.0], [1694.0, 8241.0], [1690.0, 3337.0], [1686.0, 1550.5], [1682.0, 4406.666666666667], [1702.0, 1138.0], [1698.0, 2168.0], [1778.0, 3381.0], [1786.0, 3440.0], [1790.0, 1105.0], [1782.0, 3378.0], [1742.0, 2376.0], [1738.0, 5712.666666666667], [1734.0, 6407.666666666666], [1754.0, 10322.0], [1750.0, 1899.0], [1746.0, 1093.0], [1774.0, 1465.0], [1770.0, 1944.0], [1766.0, 2824.0], [1854.0, 4615.0], [1846.0, 7806.0], [1842.0, 1128.0], [1802.0, 1125.0], [1814.0, 2102.5], [1810.0, 7656.0], [1870.0, 4004.333333333333], [1914.0, 1154.0], [1894.0, 5862.0], [1898.0, 4437.0], [1858.0, 3069.0], [1882.0, 3551.5], [1878.0, 2521.3333333333335], [1874.0, 1432.5], [1902.0, 5456.0], [1978.0, 1199.3333333333333], [1954.0, 3115.0], [1958.0, 7590.5], [1962.0, 1101.0], [1966.0, 1106.0], [1982.0, 7075.0], [1974.0, 3770.0], [1970.0, 1095.0], [1950.0, 1704.0], [1926.0, 1830.0], [1934.0, 4308.666666666666], [1946.0, 1093.0], [1942.0, 4547.0], [2018.0, 6685.5], [2046.0, 3664.0], [2026.0, 3265.333333333333], [2038.0, 1291.0], [1994.0, 2318.0], [1990.0, 4077.333333333333], [2006.0, 2419.5], [2030.0, 1590.5], [2164.0, 9972.0], [2124.0, 5005.0], [2076.0, 1580.0], [2060.0, 2107.0], [2108.0, 6052.5], [2100.0, 5452.0], [2092.0, 3676.0], [2140.0, 1174.0], [2292.0, 7365.0], [2300.0, 1432.0], [2244.0, 3397.0], [2252.0, 2143.0], [2284.0, 1270.0], [2276.0, 9426.0], [2204.0, 6111.0], [2196.0, 1111.0], [2188.0, 5776.5], [2180.0, 3047.0], [2236.0, 10411.0], [2228.0, 1145.0], [2212.0, 1133.0], [2332.0, 1433.5], [2388.0, 1610.0], [2420.0, 2379.5], [2412.0, 2221.0], [2324.0, 1919.5], [2316.0, 1143.0], [2364.0, 1588.3333333333333], [2356.0, 4854.0], [2348.0, 1174.0], [2340.0, 1350.0], [2540.0, 8922.0], [2508.0, 1782.3333333333333], [2516.0, 8847.0], [2524.0, 5079.333333333333], [2556.0, 1505.0], [2436.0, 1501.5], [2444.0, 1563.0], [2460.0, 3477.0], [2492.0, 7529.0], [2484.0, 3160.0], [2476.0, 3577.0], [2468.0, 1512.0], [2588.0, 4657.0], [2668.0, 1606.0], [2676.0, 3362.0], [2652.0, 1384.0], [2684.0, 9159.0], [2660.0, 1160.0], [2572.0, 6139.0], [2564.0, 5458.0], [2620.0, 1561.0], [2604.0, 1100.0], [2596.0, 1451.0], [2804.0, 2916.333333333333], [2796.0, 3101.5], [2764.0, 3303.0], [2772.0, 2717.6666666666665], [2780.0, 2823.0], [2812.0, 1278.3333333333333], [2788.0, 1255.0], [2716.0, 7452.0], [2708.0, 2525.0], [2700.0, 1405.0], [2692.0, 9410.0], [2748.0, 3540.0], [2740.0, 3205.0], [2732.0, 4623.5], [2724.0, 8690.0], [2932.0, 3870.333333333334], [2924.0, 1166.6666666666667], [2884.0, 1501.0], [2900.0, 1580.0], [2908.0, 742.0], [2940.0, 3148.4444444444443], [2916.0, 3357.666666666667], [2836.0, 3330.666666666667], [2820.0, 2882.0], [2876.0, 1926.6], [2860.0, 8464.5], [2852.0, 1315.75], [2956.0, 44.0], [2948.0, 2093.5], [2964.0, 1998.0], [2972.0, 1096.5], [2996.0, 3742.25], [2988.0, 1769.5], [2980.0, 2037.1724137931033], [2157.0, 1369.0], [2173.0, 1513.6666666666667], [2165.0, 1573.0], [2117.0, 1322.0], [2125.0, 7571.5], [2149.0, 5684.5], [2077.0, 1216.0], [2053.0, 1284.5], [2085.0, 5859.0], [2245.0, 9059.0], [2301.0, 1517.5], [2261.0, 5546.25], [2269.0, 1243.5], [2293.0, 2372.0], [2197.0, 1535.0], [2181.0, 5030.5], [2421.0, 1495.0], [2381.0, 2779.0], [2389.0, 1592.0], [2397.0, 1500.3333333333333], [2405.0, 2718.0], [2333.0, 4832.0], [2325.0, 1520.0], [2309.0, 2981.6666666666665], [2357.0, 5444.0], [2349.0, 1876.0], [2501.0, 2577.75], [2509.0, 3502.0], [2517.0, 2537.0], [2525.0, 1922.0], [2549.0, 2607.3333333333335], [2541.0, 5653.0], [2533.0, 1161.0], [2461.0, 1147.0], [2453.0, 1146.0], [2437.0, 1123.0], [2493.0, 4641.333333333333], [2485.0, 3513.5], [2469.0, 5986.0], [2685.0, 8333.0], [2629.0, 1376.6666666666667], [2637.0, 2425.0], [2645.0, 4081.5], [2653.0, 3422.5], [2677.0, 1173.0], [2669.0, 7680.0], [2661.0, 1283.0], [2589.0, 10903.0], [2581.0, 1485.0], [2573.0, 1250.0], [2565.0, 3449.0], [2621.0, 1233.3333333333333], [2613.0, 1898.0], [2605.0, 1702.0], [2597.0, 1683.0], [2717.0, 1804.0], [2757.0, 1425.1666666666665], [2765.0, 2702.75], [2781.0, 2064.6666666666665], [2701.0, 830.5], [2693.0, 3507.0], [2749.0, 4915.5], [2725.0, 7307.0], [2933.0, 2662.1428571428573], [2917.0, 10203.0], [2885.0, 1500.5], [2909.0, 2708.0], [2941.0, 2810.3333333333335], [2925.0, 1456.4], [2845.0, 5990.0], [2837.0, 2294.0], [2829.0, 7448.0], [2877.0, 2130.0], [2869.0, 1988.3333333333333], [2861.0, 1241.0], [2853.0, 1298.5], [2949.0, 3848.0], [2997.0, 3490.5714285714284], [2957.0, 45.0], [2965.0, 1112.0], [2973.0, 1173.0], [2989.0, 1148.0], [2981.0, 2688.25], [1031.0, 6919.0], [1039.0, 5643.0], [1063.0, 7621.5], [1035.0, 4038.0], [1027.0, 4139.0], [1051.0, 5917.0], [1047.0, 5986.0], [1043.0, 9047.0], [1067.0, 8747.0], [1059.0, 4216.5], [1099.0, 9865.0], [1127.0, 8329.0], [1151.0, 8942.0], [1103.0, 10449.0], [1095.0, 10970.0], [1115.0, 6991.0], [1111.0, 4932.0], [1107.0, 6096.0], [1135.0, 2883.0], [1131.0, 8090.0], [1123.0, 8350.0], [1215.0, 6367.0], [1187.0, 7797.5], [1211.0, 6091.0], [1203.0, 7976.0], [1167.0, 4231.0], [1163.0, 4041.6666666666665], [1199.0, 5002.0], [1191.0, 5932.666666666667], [1275.0, 5945.0], [1279.0, 6718.0], [1227.0, 6124.0], [1223.0, 7514.0], [1219.0, 4609.0], [1243.0, 4577.0], [1239.0, 10756.0], [1263.0, 2974.0], [1259.0, 6004.5], [1291.0, 8211.0], [1331.0, 2235.0], [1343.0, 4735.5], [1335.0, 6669.666666666667], [1287.0, 7025.0], [1283.0, 3498.0], [1311.0, 6322.0], [1303.0, 5694.0], [1299.0, 9320.0], [1399.0, 3025.0], [1407.0, 6162.0], [1379.0, 5092.5], [1403.0, 5671.0], [1395.0, 8004.0], [1375.0, 5003.0], [1347.0, 5391.0], [1355.0, 4962.0], [1367.0, 7007.0], [1363.0, 3260.0], [1391.0, 3109.0], [1387.0, 2987.0], [1383.0, 5124.333333333333], [1419.0, 4778.0], [1463.0, 10094.0], [1447.0, 1104.0], [1459.0, 6988.0], [1411.0, 6556.666666666667], [1435.0, 5064.333333333333], [1431.0, 3967.0], [1427.0, 5745.5], [1455.0, 5312.0], [1451.0, 7186.5], [1527.0, 4441.0], [1535.0, 1095.0], [1507.0, 2663.0], [1531.0, 5116.0], [1523.0, 1871.0], [1487.0, 4863.0], [1483.0, 7844.5], [1479.0, 8549.5], [1475.0, 8851.0], [1503.0, 5500.0], [1519.0, 1106.0], [1515.0, 5621.0], [1599.0, 3206.0], [1583.0, 1785.0], [1579.0, 1113.0], [1575.0, 1324.0], [1567.0, 1113.0], [1539.0, 1096.0], [1547.0, 4849.0], [1551.0, 1103.5], [1563.0, 5587.0], [1555.0, 4138.0], [1659.0, 5079.0], [1663.0, 4400.5], [1639.0, 2294.0], [1643.0, 3122.0], [1655.0, 5015.5], [1651.0, 7028.0], [1631.0, 5690.0], [1603.0, 1466.0], [1607.0, 1128.0], [1611.0, 4891.0], [1615.0, 2523.5], [1627.0, 6032.0], [1623.0, 1100.0], [1647.0, 5420.0], [1715.0, 7534.0], [1727.0, 5519.0], [1695.0, 10619.0], [1667.0, 1140.0], [1679.0, 1115.0], [1675.0, 1176.0], [1683.0, 8694.0], [1711.0, 3215.0], [1707.0, 5723.5], [1787.0, 1785.5], [1791.0, 1970.0], [1763.0, 1486.0], [1767.0, 3076.0], [1743.0, 1224.0], [1739.0, 3980.0], [1735.0, 1241.0], [1731.0, 3970.0], [1755.0, 1096.0], [1751.0, 10402.0], [1747.0, 10786.0], [1775.0, 3305.0], [1771.0, 7164.0], [1847.0, 1883.0], [1851.0, 1805.0], [1827.0, 1127.0], [1831.0, 5319.5], [1843.0, 10687.0], [1807.0, 5606.5], [1803.0, 2126.0], [1799.0, 3643.5], [1795.0, 5507.5], [1823.0, 3895.3333333333335], [1819.0, 6605.333333333333], [1815.0, 6217.0], [1839.0, 4479.0], [1835.0, 8931.5], [1911.0, 1164.0], [1919.0, 2664.5], [1891.0, 2981.75], [1899.0, 1152.5], [1887.0, 3224.0], [1863.0, 4636.333333333333], [1867.0, 3368.5], [1875.0, 7756.0], [1983.0, 1094.0], [1979.0, 1103.0], [1959.0, 1095.0], [1975.0, 1097.0], [1931.0, 1583.5], [1935.0, 1750.0], [1991.0, 2059.0], [2019.0, 1852.0], [2023.0, 4131.5], [1999.0, 3310.0], [1987.0, 5830.333333333333], [2015.0, 3178.0], [2011.0, 1907.0], [2007.0, 3885.0], [2003.0, 2136.5], [2031.0, 6122.0], [2174.0, 10030.0], [2134.0, 1561.0], [2150.0, 1307.0], [2070.0, 2846.0], [2110.0, 1899.0], [2086.0, 3499.0], [2142.0, 5719.0], [2278.0, 2847.0], [2294.0, 1583.0], [2254.0, 1514.5], [2270.0, 1478.0], [2286.0, 8066.0], [2206.0, 1901.0], [2190.0, 1461.0], [2238.0, 1191.0], [2230.0, 1161.5], [2222.0, 6794.666666666667], [2414.0, 1294.6666666666667], [2374.0, 1360.75], [2382.0, 1452.0], [2390.0, 3270.0], [2318.0, 3393.0], [2310.0, 2037.8], [2366.0, 3755.5], [2358.0, 5176.0], [2350.0, 1171.0], [2342.0, 1452.5], [2542.0, 1284.0], [2558.0, 8852.0], [2510.0, 9546.0], [2518.0, 3426.6666666666665], [2526.0, 9341.5], [2534.0, 3323.25], [2494.0, 2499.0], [2438.0, 1158.0], [2446.0, 1243.0], [2454.0, 2200.0], [2462.0, 2062.0], [2478.0, 4377.0], [2470.0, 5537.5], [2686.0, 1095.0], [2678.0, 2894.0], [2630.0, 1093.0], [2638.0, 2102.0], [2646.0, 1689.0], [2654.0, 1201.0], [2670.0, 8529.0], [2582.0, 6085.0], [2574.0, 1440.0], [2622.0, 8669.0], [2614.0, 6061.0], [2598.0, 6140.0], [2798.0, 1201.5], [2718.0, 5083.0], [2814.0, 3463.875], [2758.0, 5774.4], [2766.0, 1118.0], [2774.0, 4122.333333333334], [2806.0, 3418.5], [2702.0, 8479.0], [2694.0, 10559.5], [2734.0, 1166.5], [2726.0, 1153.0], [2942.0, 1099.0], [2934.0, 2241.5], [2894.0, 1360.3333333333333], [2886.0, 5776.333333333334], [2902.0, 3634.625], [2910.0, 5093.0], [2918.0, 1224.25], [2838.0, 5405.0], [2878.0, 3535.333333333333], [2862.0, 1816.3333333333333], [2958.0, 1279.25], [2950.0, 7835.0], [2966.0, 1430.5], [2974.0, 2038.3333333333333], [2998.0, 1921.5], [2990.0, 2017.8518518518515], [2982.0, 1572.5], [2079.0, 6189.0], [2159.0, 2044.0], [2127.0, 5027.0], [2135.0, 5292.0], [2071.0, 3005.0], [2063.0, 2799.0], [2055.0, 5022.0], [2111.0, 1529.0], [2103.0, 1176.3333333333333], [2143.0, 1232.5], [2199.0, 1489.0], [2295.0, 9230.0], [2271.0, 3866.0], [2207.0, 1131.5], [2191.0, 1121.0], [2183.0, 6286.0], [2239.0, 4948.0], [2215.0, 2713.0], [2407.0, 1250.5], [2423.0, 1508.0], [2383.0, 1335.0], [2431.0, 1767.75], [2375.0, 1131.0], [2391.0, 1529.0], [2335.0, 1506.5], [2327.0, 1356.0], [2311.0, 1815.0], [2367.0, 1321.0], [2351.0, 1737.0], [2543.0, 1846.0], [2551.0, 4493.0], [2503.0, 1510.5], [2519.0, 802.5], [2527.0, 4592.0], [2463.0, 1575.0], [2447.0, 1851.5], [2495.0, 4271.5], [2487.0, 2861.5], [2479.0, 1551.0], [2471.0, 8961.0], [2671.0, 3046.3333333333335], [2631.0, 3478.0], [2639.0, 1529.0], [2655.0, 3714.6666666666665], [2663.0, 1534.6666666666667], [2591.0, 5938.333333333333], [2575.0, 1430.0], [2567.0, 4554.5], [2623.0, 1203.0], [2615.0, 2543.0], [2607.0, 5197.0], [2791.0, 4246.4], [2759.0, 1251.0], [2767.0, 7014.0], [2775.0, 1838.0], [2783.0, 8502.0], [2799.0, 3796.5], [2719.0, 675.0], [2703.0, 1462.0], [2695.0, 6379.5], [2751.0, 8691.0], [2743.0, 4520.166666666667], [2735.0, 5203.0], [2727.0, 3921.333333333333], [2935.0, 1276.0], [2887.0, 1101.0], [2895.0, 3321.8181818181815], [2903.0, 1093.0], [2911.0, 2932.0], [2927.0, 2248.5], [2847.0, 2507.3333333333335], [2839.0, 2283.5], [2831.0, 3048.0], [2823.0, 1486.75], [2871.0, 5022.666666666667], [2855.0, 2905.8], [2959.0, 4374.5], [2951.0, 1394.0], [2967.0, 8809.0], [2975.0, 2846.833333333333], [2999.0, 3273.8333333333335], [2991.0, 1355.5], [2983.0, 902.65], [1.0, 11350.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2985.65159645996, 2828.5283860274494]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 91676.5, "minX": 1.68416304E12, "maxY": 673379.9, "series": [{"data": [[1.6841631E12, 655712.75], [1.68416322E12, 669783.1166666667], [1.68416304E12, 535079.1], [1.68416334E12, 104286.08333333333], [1.68416316E12, 660986.85], [1.68416328E12, 673379.9]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6841631E12, 577390.0], [1.68416322E12, 600404.15], [1.68416304E12, 419838.55], [1.68416334E12, 91676.5], [1.68416316E12, 587046.35], [1.68416328E12, 608485.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416334E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2676.0345053244996, "minX": 1.68416304E12, "maxY": 3532.3781836130415, "series": [{"data": [[1.6841631E12, 2803.9343260188625], [1.68416322E12, 2723.557828256183], [1.68416304E12, 3156.6616238342135], [1.68416334E12, 3532.3781836130415], [1.68416316E12, 2768.477762190326], [1.68416328E12, 2676.0345053244996]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416334E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2675.7013504670126, "minX": 1.68416304E12, "maxY": 3532.0159921026516, "series": [{"data": [[1.6841631E12, 2803.484764890245], [1.68416322E12, 2723.127488958885], [1.68416304E12, 2897.3271300164847], [1.68416334E12, 3532.0159921026516], [1.68416316E12, 2768.1735088719993], [1.68416328E12, 2675.7013504670126]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416334E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68416304E12, "maxY": 560.3830864666414, "series": [{"data": [[1.6841631E12, 25.53656739811924], [1.68416322E12, 9.303377899703213], [1.68416304E12, 560.3830864666414], [1.68416334E12, 0.0], [1.68416316E12, 4.1175019655603124], [1.68416328E12, 5.323249449699531]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416334E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.68416304E12, "maxY": 22143.0, "series": [{"data": [[1.6841631E12, 17815.0], [1.68416322E12, 20278.0], [1.68416304E12, 22143.0], [1.68416334E12, 16352.0], [1.68416316E12, 18301.0], [1.68416328E12, 19456.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6841631E12, 8063.0], [1.68416322E12, 8192.900000000001], [1.68416304E12, 7278.800000000003], [1.68416334E12, 9299.400000000001], [1.68416316E12, 9075.900000000001], [1.68416328E12, 8323.900000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6841631E12, 10945.950000000008], [1.68416322E12, 10891.0], [1.68416304E12, 10427.970000000005], [1.68416334E12, 11031.300000000003], [1.68416316E12, 11103.960000000006], [1.68416328E12, 10970.980000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6841631E12, 9761.95], [1.68416322E12, 9549.900000000001], [1.68416304E12, 8329.700000000004], [1.68416334E12, 10202.3], [1.68416316E12, 10450.95], [1.68416328E12, 9910.900000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6841631E12, 52.0], [1.68416322E12, 51.0], [1.68416304E12, 58.0], [1.68416334E12, 52.0], [1.68416316E12, 51.0], [1.68416328E12, 50.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6841631E12, 1554.0], [1.68416322E12, 1594.0], [1.68416304E12, 2067.0], [1.68416334E12, 2326.0], [1.68416316E12, 1530.5], [1.68416328E12, 1567.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416334E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 3.0, "maxY": 12427.0, "series": [{"data": [[3.0, 11324.0], [20.0, 10853.0], [42.0, 10436.0], [82.0, 9532.0], [114.0, 9017.0], [138.0, 8993.0], [166.0, 3369.5], [188.0, 8331.0], [254.0, 7235.5], [296.0, 6473.5], [354.0, 3774.0], [356.0, 1226.5], [390.0, 5746.5], [418.0, 1275.5], [455.0, 2134.0], [474.0, 1479.5], [691.0, 1561.5], [712.0, 2479.0], [786.0, 2079.0], [772.0, 2059.5], [822.0, 1713.0], [832.0, 2069.0], [872.0, 1680.0], [877.0, 2537.0], [882.0, 2627.5], [876.0, 2029.0], [917.0, 1471.5], [934.0, 2831.0], [957.0, 2868.0], [958.0, 1689.0], [947.0, 1496.0], [935.0, 1662.0], [956.0, 1705.0], [940.0, 1668.0], [977.0, 2529.0], [965.0, 1822.0], [978.0, 2959.0], [980.0, 2871.0], [979.0, 2782.0], [983.0, 2640.5], [962.0, 2711.0], [989.0, 2211.0], [987.0, 1533.0], [976.0, 1709.0], [969.0, 2460.0], [970.0, 2044.0], [973.0, 2045.0], [961.0, 2106.0], [999.0, 2073.0], [1020.0, 3045.0], [993.0, 2402.0], [1007.0, 2104.0], [996.0, 1954.5], [997.0, 1630.0], [994.0, 1783.0], [1011.0, 1765.0], [1014.0, 1589.5], [1021.0, 1597.5], [1002.0, 2086.5], [1001.0, 1681.5], [1000.0, 1537.0], [1004.0, 1543.5], [1016.0, 2487.0], [1017.0, 1585.0], [1073.0, 2675.0], [1026.0, 2703.0], [1072.0, 1564.0], [1038.0, 1494.0], [1036.0, 2088.0], [1031.0, 1959.0], [1034.0, 1634.0], [1033.0, 1608.0], [1058.0, 2233.0], [1079.0, 1857.0], [1086.0, 1624.0], [1085.0, 1526.0], [1080.0, 1438.5], [1081.0, 1521.0], [1083.0, 1679.0], [1084.0, 1551.5], [1074.0, 1611.0], [1075.0, 1569.5], [1077.0, 1546.5], [1076.0, 1525.0], [1087.0, 1671.0], [1057.0, 1606.0], [1043.0, 2991.0], [1041.0, 1438.0], [1048.0, 1732.5], [1049.0, 1488.0], [1067.0, 2316.5], [1068.0, 1584.5], [1066.0, 1483.0], [1060.0, 1629.0], [1062.0, 1605.0], [1063.0, 1564.0], [1059.0, 1519.5], [1065.0, 1541.5], [1070.0, 1677.0], [1071.0, 1540.5], [1069.0, 1772.0], [1028.0, 1773.0], [1029.0, 1747.0], [1030.0, 1958.0], [1050.0, 1879.0], [1054.0, 1656.0], [1055.0, 1585.0], [1051.0, 1981.5], [1053.0, 1524.0], [1052.0, 1872.5], [1088.0, 1792.0], [1104.0, 2322.0], [1105.0, 1562.0], [1108.0, 2045.0], [1107.0, 1560.0], [1119.0, 1524.0], [1114.0, 1614.0], [1113.0, 1537.0], [1111.0, 1512.0], [1110.0, 1668.5], [1112.0, 1527.0], [1116.0, 1478.0], [1117.0, 1585.5], [1118.0, 1534.5], [1109.0, 1525.0], [1106.0, 2398.5], [1132.0, 1590.0], [1127.0, 1515.0], [1128.0, 1627.0], [1130.0, 1537.0], [1131.0, 1700.0], [1135.0, 1586.0], [1133.0, 1564.0], [1134.0, 1570.0], [1123.0, 1554.0], [1122.0, 1655.0], [1121.0, 1526.0], [1151.0, 1688.0], [1120.0, 1571.0], [1143.0, 1619.0], [1146.0, 1666.0], [1149.0, 1547.5], [1145.0, 1678.0], [1142.0, 1575.0], [1150.0, 1598.0], [1141.0, 1716.5], [1140.0, 1622.0], [1139.0, 1611.0], [1138.0, 1458.5], [1100.0, 1490.0], [1098.0, 1523.5], [1096.0, 1623.5], [1101.0, 1543.5], [1103.0, 1581.0], [1136.0, 1517.0], [1102.0, 1716.5], [1125.0, 1614.0], [1089.0, 1529.5], [1090.0, 1448.0], [1092.0, 1585.0], [1091.0, 1685.5], [1094.0, 1541.5], [1093.0, 1559.0], [1095.0, 1583.0], [1203.0, 2035.5], [1186.0, 2002.5], [1174.0, 2223.0], [1198.0, 2504.5], [1193.0, 1535.0], [1157.0, 1566.0], [1164.0, 1586.0], [1162.0, 1721.0], [1160.0, 1648.5], [1159.0, 1611.0], [1161.0, 1562.5], [1154.0, 1591.0], [1156.0, 1522.5], [1188.0, 1607.0], [1173.0, 1781.5], [1172.0, 1663.0], [1199.0, 1475.0], [1177.0, 1633.5], [1176.0, 1628.0], [1248.0, 2140.0], [1244.0, 1751.0], [1256.0, 1645.0], [1289.0, 2055.5], [1286.0, 2033.0], [1327.0, 2775.0], [1307.0, 2507.0], [1331.0, 1566.0], [1309.0, 1737.0], [1361.0, 2000.0], [1463.0, 2362.5], [1432.0, 1817.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 10283.0], [42.0, 10143.0], [114.0, 10118.0], [138.0, 10189.0], [188.0, 10097.5], [254.0, 10424.5], [390.0, 10121.0], [691.0, 42.0], [712.0, 46.0], [786.0, 42.0], [772.0, 41.5], [822.0, 101.0], [832.0, 10257.0], [872.0, 9750.5], [877.0, 134.0], [882.0, 140.0], [876.0, 123.0], [917.0, 45.0], [934.0, 41.0], [957.0, 41.0], [958.0, 43.0], [947.0, 73.0], [935.0, 134.0], [956.0, 44.0], [940.0, 42.5], [977.0, 41.0], [965.0, 10706.5], [978.0, 42.0], [980.0, 41.0], [979.0, 41.0], [983.0, 41.0], [962.0, 42.0], [989.0, 41.0], [987.0, 100.0], [976.0, 42.0], [969.0, 41.0], [970.0, 42.0], [973.0, 41.0], [961.0, 42.0], [999.0, 41.0], [1020.0, 41.0], [993.0, 42.0], [1007.0, 41.0], [996.0, 41.0], [997.0, 126.5], [994.0, 42.0], [1011.0, 41.0], [1014.0, 43.0], [1021.0, 43.0], [1002.0, 41.0], [1001.0, 42.0], [1000.0, 51.0], [1004.0, 42.0], [1016.0, 85.5], [1017.0, 42.0], [1073.0, 41.0], [1026.0, 41.0], [1072.0, 45.0], [1038.0, 41.0], [1036.0, 43.0], [1031.0, 43.0], [1034.0, 45.0], [1033.0, 50.0], [1058.0, 42.0], [1079.0, 42.0], [1086.0, 42.0], [1085.0, 45.0], [1080.0, 42.0], [1081.0, 42.0], [1083.0, 45.0], [1084.0, 42.0], [1074.0, 42.0], [1075.0, 43.0], [1077.0, 44.0], [1076.0, 42.0], [1087.0, 42.0], [1057.0, 47.0], [1043.0, 41.0], [1041.0, 41.0], [1048.0, 42.0], [1049.0, 41.0], [1067.0, 42.0], [1068.0, 42.0], [1066.0, 42.0], [1060.0, 42.0], [1062.0, 43.0], [1063.0, 43.0], [1059.0, 42.0], [1065.0, 41.0], [1070.0, 52.0], [1071.0, 76.0], [1069.0, 43.0], [1028.0, 42.0], [1029.0, 43.0], [1030.0, 42.0], [1050.0, 41.0], [1054.0, 42.0], [1055.0, 42.0], [1051.0, 42.0], [1053.0, 41.0], [1052.0, 58.0], [1088.0, 42.0], [1104.0, 42.0], [1105.0, 42.0], [1108.0, 43.0], [1107.0, 42.0], [1119.0, 42.0], [1114.0, 42.0], [1113.0, 42.0], [1111.0, 44.0], [1110.0, 42.0], [1112.0, 43.0], [1116.0, 44.0], [1117.0, 42.0], [1118.0, 43.0], [1109.0, 42.0], [1106.0, 42.0], [1132.0, 44.0], [1127.0, 42.0], [1128.0, 43.0], [1130.0, 42.0], [1131.0, 41.0], [1135.0, 43.0], [1133.0, 47.0], [1134.0, 42.0], [1123.0, 42.0], [1122.0, 41.0], [1121.0, 42.0], [1151.0, 71.5], [1120.0, 42.0], [1143.0, 41.0], [1146.0, 43.0], [1149.0, 42.0], [1145.0, 42.0], [1142.0, 41.0], [1150.0, 42.0], [1141.0, 46.0], [1140.0, 50.0], [1139.0, 42.0], [1138.0, 59.0], [1100.0, 42.0], [1098.0, 42.0], [1096.0, 41.0], [1101.0, 43.0], [1103.0, 46.0], [1136.0, 44.0], [1102.0, 47.0], [1125.0, 42.0], [1089.0, 42.0], [1090.0, 42.0], [1092.0, 44.0], [1091.0, 42.0], [1094.0, 43.0], [1093.0, 43.0], [1095.0, 42.0], [1203.0, 42.0], [1186.0, 41.0], [1174.0, 64.0], [1198.0, 42.0], [1193.0, 42.0], [1157.0, 43.0], [1164.0, 42.0], [1162.0, 44.0], [1160.0, 42.0], [1159.0, 41.0], [1161.0, 42.0], [1154.0, 42.0], [1156.0, 41.0], [1188.0, 43.0], [1173.0, 75.0], [1172.0, 46.0], [1199.0, 85.5], [1177.0, 55.5], [1176.0, 51.0], [1248.0, 98.0], [1244.0, 84.0], [1256.0, 47.0], [1289.0, 752.0], [1286.0, 63.0], [1327.0, 310.5], [1307.0, 133.0], [1331.0, 82.5], [1309.0, 75.0], [1361.0, 11759.0], [1463.0, 12427.0], [1432.0, 41.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1463.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 11324.0, "series": [{"data": [[3.0, 11324.0], [20.0, 10853.0], [42.0, 10436.0], [82.0, 9531.5], [114.0, 9015.0], [138.0, 8993.0], [166.0, 3369.0], [188.0, 8331.0], [254.0, 7235.5], [296.0, 6473.0], [354.0, 3774.0], [356.0, 1224.5], [390.0, 5746.5], [418.0, 1275.5], [455.0, 2134.0], [474.0, 1479.5], [691.0, 1554.0], [712.0, 2479.0], [786.0, 2078.0], [772.0, 2059.5], [822.0, 1713.0], [832.0, 2069.0], [872.0, 1680.0], [877.0, 2534.0], [882.0, 2626.0], [876.0, 2029.0], [917.0, 1471.0], [934.0, 2831.0], [957.0, 2868.0], [958.0, 1689.0], [947.0, 1496.0], [935.0, 1654.0], [956.0, 1705.0], [940.0, 1668.0], [977.0, 2528.0], [965.0, 1816.0], [978.0, 2957.0], [980.0, 2871.0], [979.0, 2782.0], [983.0, 2640.5], [962.0, 2711.0], [989.0, 2211.0], [987.0, 1533.0], [976.0, 1708.0], [969.0, 2460.0], [970.0, 2044.0], [973.0, 2044.5], [961.0, 2106.0], [999.0, 2073.0], [1020.0, 3045.0], [993.0, 2402.0], [1007.0, 2103.5], [996.0, 1954.5], [997.0, 1629.0], [994.0, 1783.0], [1011.0, 1764.0], [1014.0, 1589.5], [1021.0, 1597.0], [1002.0, 2086.0], [1001.0, 1681.5], [1000.0, 1537.0], [1004.0, 1543.0], [1016.0, 2487.0], [1017.0, 1584.0], [1073.0, 2674.5], [1026.0, 2703.0], [1072.0, 1564.0], [1038.0, 1494.0], [1036.0, 2088.0], [1031.0, 1959.0], [1034.0, 1634.0], [1033.0, 1608.0], [1058.0, 2232.5], [1079.0, 1857.0], [1086.0, 1624.0], [1085.0, 1525.0], [1080.0, 1438.5], [1081.0, 1521.0], [1083.0, 1679.0], [1084.0, 1551.5], [1074.0, 1611.0], [1075.0, 1566.5], [1077.0, 1545.5], [1076.0, 1525.0], [1087.0, 1670.5], [1057.0, 1606.0], [1043.0, 2991.0], [1041.0, 1438.0], [1048.0, 1732.0], [1049.0, 1488.0], [1067.0, 2316.5], [1068.0, 1584.5], [1066.0, 1483.0], [1060.0, 1627.0], [1062.0, 1605.0], [1063.0, 1563.0], [1059.0, 1519.0], [1065.0, 1540.0], [1070.0, 1677.0], [1071.0, 1539.0], [1069.0, 1772.0], [1028.0, 1772.5], [1029.0, 1747.0], [1030.0, 1958.0], [1050.0, 1878.0], [1054.0, 1655.0], [1055.0, 1585.0], [1051.0, 1981.5], [1053.0, 1524.0], [1052.0, 1872.5], [1088.0, 1792.0], [1104.0, 2322.0], [1105.0, 1560.0], [1108.0, 2045.0], [1107.0, 1560.0], [1119.0, 1524.0], [1114.0, 1614.0], [1113.0, 1537.0], [1111.0, 1512.0], [1110.0, 1668.5], [1112.0, 1527.0], [1116.0, 1478.0], [1117.0, 1585.0], [1118.0, 1534.5], [1109.0, 1525.0], [1106.0, 2398.0], [1132.0, 1586.0], [1127.0, 1515.0], [1128.0, 1626.0], [1130.0, 1537.0], [1131.0, 1700.0], [1135.0, 1586.0], [1133.0, 1564.0], [1134.0, 1570.0], [1123.0, 1554.0], [1122.0, 1655.0], [1121.0, 1526.0], [1151.0, 1688.0], [1120.0, 1570.0], [1143.0, 1619.0], [1146.0, 1666.0], [1149.0, 1547.0], [1145.0, 1678.0], [1142.0, 1575.0], [1150.0, 1598.0], [1141.0, 1716.5], [1140.0, 1622.0], [1139.0, 1611.0], [1138.0, 1458.0], [1100.0, 1489.0], [1098.0, 1523.5], [1096.0, 1623.5], [1101.0, 1542.5], [1103.0, 1581.0], [1136.0, 1516.5], [1102.0, 1716.0], [1125.0, 1613.5], [1089.0, 1529.5], [1090.0, 1448.0], [1092.0, 1585.0], [1091.0, 1685.5], [1094.0, 1541.5], [1093.0, 1558.5], [1095.0, 1578.0], [1203.0, 2035.5], [1186.0, 1997.5], [1174.0, 2223.0], [1198.0, 2504.5], [1193.0, 1535.0], [1157.0, 1566.0], [1164.0, 1586.0], [1162.0, 1721.0], [1160.0, 1648.0], [1159.0, 1610.5], [1161.0, 1562.5], [1154.0, 1591.0], [1156.0, 1522.0], [1188.0, 1607.0], [1173.0, 1777.0], [1172.0, 1662.0], [1199.0, 1475.0], [1177.0, 1633.5], [1176.0, 1628.0], [1248.0, 2140.0], [1244.0, 1751.0], [1256.0, 1645.0], [1289.0, 2051.5], [1286.0, 2017.0], [1327.0, 2775.0], [1307.0, 2507.0], [1331.0, 1563.0], [1309.0, 1736.0], [1361.0, 2000.0], [1463.0, 2362.5], [1432.0, 1814.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 10283.0], [42.0, 10143.0], [114.0, 10118.0], [138.0, 10189.0], [188.0, 10097.5], [254.0, 10424.5], [390.0, 10121.0], [691.0, 42.0], [712.0, 46.0], [786.0, 42.0], [772.0, 41.5], [822.0, 101.0], [832.0, 10257.0], [872.0, 39.0], [877.0, 134.0], [882.0, 140.0], [876.0, 123.0], [917.0, 45.0], [934.0, 41.0], [957.0, 41.0], [958.0, 43.0], [947.0, 73.0], [935.0, 134.0], [956.0, 44.0], [940.0, 42.5], [977.0, 41.0], [965.0, 0.0], [978.0, 41.0], [980.0, 41.0], [979.0, 41.0], [983.0, 41.0], [962.0, 42.0], [989.0, 41.0], [987.0, 100.0], [976.0, 42.0], [969.0, 41.0], [970.0, 42.0], [973.0, 41.0], [961.0, 42.0], [999.0, 41.0], [1020.0, 41.0], [993.0, 42.0], [1007.0, 41.0], [996.0, 41.0], [997.0, 126.5], [994.0, 42.0], [1011.0, 41.0], [1014.0, 43.0], [1021.0, 43.0], [1002.0, 41.0], [1001.0, 42.0], [1000.0, 51.0], [1004.0, 42.0], [1016.0, 85.5], [1017.0, 42.0], [1073.0, 41.0], [1026.0, 41.0], [1072.0, 42.0], [1038.0, 41.0], [1036.0, 43.0], [1031.0, 43.0], [1034.0, 45.0], [1033.0, 50.0], [1058.0, 42.0], [1079.0, 42.0], [1086.0, 42.0], [1085.0, 45.0], [1080.0, 42.0], [1081.0, 42.0], [1083.0, 45.0], [1084.0, 42.0], [1074.0, 42.0], [1075.0, 43.0], [1077.0, 44.0], [1076.0, 42.0], [1087.0, 42.0], [1057.0, 47.0], [1043.0, 41.0], [1041.0, 41.0], [1048.0, 42.0], [1049.0, 41.0], [1067.0, 42.0], [1068.0, 42.0], [1066.0, 42.0], [1060.0, 42.0], [1062.0, 43.0], [1063.0, 43.0], [1059.0, 42.0], [1065.0, 41.0], [1070.0, 52.0], [1071.0, 76.0], [1069.0, 43.0], [1028.0, 42.0], [1029.0, 43.0], [1030.0, 42.0], [1050.0, 41.0], [1054.0, 42.0], [1055.0, 42.0], [1051.0, 42.0], [1053.0, 41.0], [1052.0, 58.0], [1088.0, 42.0], [1104.0, 42.0], [1105.0, 42.0], [1108.0, 43.0], [1107.0, 42.0], [1119.0, 42.0], [1114.0, 42.0], [1113.0, 42.0], [1111.0, 44.0], [1110.0, 42.0], [1112.0, 43.0], [1116.0, 44.0], [1117.0, 42.0], [1118.0, 43.0], [1109.0, 42.0], [1106.0, 42.0], [1132.0, 44.0], [1127.0, 42.0], [1128.0, 43.0], [1130.0, 42.0], [1131.0, 41.0], [1135.0, 43.0], [1133.0, 47.0], [1134.0, 42.0], [1123.0, 42.0], [1122.0, 41.0], [1121.0, 42.0], [1151.0, 71.5], [1120.0, 42.0], [1143.0, 41.0], [1146.0, 43.0], [1149.0, 42.0], [1145.0, 42.0], [1142.0, 41.0], [1150.0, 42.0], [1141.0, 46.0], [1140.0, 50.0], [1139.0, 42.0], [1138.0, 59.0], [1100.0, 42.0], [1098.0, 42.0], [1096.0, 41.0], [1101.0, 43.0], [1103.0, 46.0], [1136.0, 44.0], [1102.0, 47.0], [1125.0, 42.0], [1089.0, 42.0], [1090.0, 42.0], [1092.0, 44.0], [1091.0, 42.0], [1094.0, 43.0], [1093.0, 43.0], [1095.0, 42.0], [1203.0, 42.0], [1186.0, 41.0], [1174.0, 64.0], [1198.0, 42.0], [1193.0, 42.0], [1157.0, 43.0], [1164.0, 42.0], [1162.0, 44.0], [1160.0, 42.0], [1159.0, 41.0], [1161.0, 42.0], [1154.0, 42.0], [1156.0, 41.0], [1188.0, 43.0], [1173.0, 75.0], [1172.0, 46.0], [1199.0, 85.5], [1177.0, 55.5], [1176.0, 51.0], [1248.0, 98.0], [1244.0, 84.0], [1256.0, 47.0], [1289.0, 82.0], [1286.0, 63.0], [1327.0, 310.5], [1307.0, 133.0], [1331.0, 82.5], [1309.0, 75.0], [1361.0, 0.0], [1463.0, 0.0], [1432.0, 41.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1463.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 118.83333333333333, "minX": 1.68416304E12, "maxY": 1120.6166666666666, "series": [{"data": [[1.6841631E12, 1063.3333333333333], [1.68416322E12, 1105.7166666666667], [1.68416304E12, 839.9], [1.68416334E12, 118.83333333333333], [1.68416316E12, 1081.1], [1.68416328E12, 1120.6166666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416334E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68416304E12, "maxY": 927.1, "series": [{"data": [[1.68416304E12, 0.6666666666666666]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.6841631E12, 921.5166666666667], [1.68416322E12, 927.1], [1.68416304E12, 688.7333333333333], [1.68416334E12, 146.88333333333333], [1.68416316E12, 922.1833333333333], [1.68416328E12, 926.6666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68416304E12, 14.35]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.68416304E12, 1.6833333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.6841631E12, 141.81666666666666], [1.68416322E12, 178.61666666666667], [1.68416304E12, 84.45], [1.68416334E12, 21.95], [1.68416316E12, 158.93333333333334], [1.68416328E12, 193.93333333333334]], "isOverall": false, "label": "429", "isController": false}, {"data": [[1.68416304E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416334E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 21.95, "minX": 1.68416304E12, "maxY": 927.1, "series": [{"data": [[1.6841631E12, 921.5166666666667], [1.68416322E12, 927.1], [1.68416304E12, 688.7333333333333], [1.68416334E12, 146.88333333333333], [1.68416316E12, 922.1833333333333], [1.68416328E12, 926.6666666666666]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6841631E12, 141.81666666666666], [1.68416322E12, 178.61666666666667], [1.68416304E12, 101.16666666666667], [1.68416334E12, 21.95], [1.68416316E12, 158.93333333333334], [1.68416328E12, 193.93333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416334E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 21.95, "minX": 1.68416304E12, "maxY": 927.1, "series": [{"data": [[1.6841631E12, 921.5166666666667], [1.68416322E12, 927.1], [1.68416304E12, 688.7333333333333], [1.68416334E12, 146.88333333333333], [1.68416316E12, 922.1833333333333], [1.68416328E12, 926.6666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6841631E12, 141.81666666666666], [1.68416322E12, 178.61666666666667], [1.68416304E12, 101.16666666666667], [1.68416334E12, 21.95], [1.68416316E12, 158.93333333333334], [1.68416328E12, 193.93333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416334E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

