/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "maxY": 21178.0, "series": [{"data": [[0.0, 36.0], [0.1, 38.0], [0.2, 38.0], [0.3, 39.0], [0.4, 39.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 40.0], [1.1, 40.0], [1.2, 40.0], [1.3, 40.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 40.0], [1.8, 40.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 41.0], [2.3, 41.0], [2.4, 41.0], [2.5, 41.0], [2.6, 41.0], [2.7, 41.0], [2.8, 42.0], [2.9, 42.0], [3.0, 42.0], [3.1, 42.0], [3.2, 42.0], [3.3, 42.0], [3.4, 42.0], [3.5, 42.0], [3.6, 43.0], [3.7, 43.0], [3.8, 43.0], [3.9, 43.0], [4.0, 43.0], [4.1, 43.0], [4.2, 44.0], [4.3, 44.0], [4.4, 45.0], [4.5, 45.0], [4.6, 46.0], [4.7, 47.0], [4.8, 48.0], [4.9, 50.0], [5.0, 51.0], [5.1, 52.0], [5.2, 53.0], [5.3, 55.0], [5.4, 56.0], [5.5, 57.0], [5.6, 58.0], [5.7, 59.0], [5.8, 60.0], [5.9, 62.0], [6.0, 63.0], [6.1, 65.0], [6.2, 67.0], [6.3, 69.0], [6.4, 71.0], [6.5, 73.0], [6.6, 77.0], [6.7, 82.0], [6.8, 89.0], [6.9, 100.0], [7.0, 111.0], [7.1, 125.0], [7.2, 148.0], [7.3, 178.0], [7.4, 239.0], [7.5, 270.0], [7.6, 291.0], [7.7, 313.0], [7.8, 345.0], [7.9, 413.0], [8.0, 504.0], [8.1, 631.0], [8.2, 800.0], [8.3, 1011.0], [8.4, 1090.0], [8.5, 1091.0], [8.6, 1091.0], [8.7, 1092.0], [8.8, 1092.0], [8.9, 1092.0], [9.0, 1093.0], [9.1, 1093.0], [9.2, 1093.0], [9.3, 1093.0], [9.4, 1094.0], [9.5, 1094.0], [9.6, 1094.0], [9.7, 1094.0], [9.8, 1094.0], [9.9, 1094.0], [10.0, 1095.0], [10.1, 1095.0], [10.2, 1095.0], [10.3, 1095.0], [10.4, 1095.0], [10.5, 1095.0], [10.6, 1095.0], [10.7, 1096.0], [10.8, 1096.0], [10.9, 1096.0], [11.0, 1096.0], [11.1, 1096.0], [11.2, 1096.0], [11.3, 1096.0], [11.4, 1096.0], [11.5, 1097.0], [11.6, 1097.0], [11.7, 1097.0], [11.8, 1097.0], [11.9, 1097.0], [12.0, 1097.0], [12.1, 1097.0], [12.2, 1097.0], [12.3, 1097.0], [12.4, 1098.0], [12.5, 1098.0], [12.6, 1098.0], [12.7, 1098.0], [12.8, 1098.0], [12.9, 1098.0], [13.0, 1098.0], [13.1, 1098.0], [13.2, 1098.0], [13.3, 1098.0], [13.4, 1099.0], [13.5, 1099.0], [13.6, 1099.0], [13.7, 1099.0], [13.8, 1099.0], [13.9, 1099.0], [14.0, 1099.0], [14.1, 1099.0], [14.2, 1099.0], [14.3, 1100.0], [14.4, 1100.0], [14.5, 1100.0], [14.6, 1100.0], [14.7, 1100.0], [14.8, 1100.0], [14.9, 1100.0], [15.0, 1100.0], [15.1, 1100.0], [15.2, 1101.0], [15.3, 1101.0], [15.4, 1101.0], [15.5, 1101.0], [15.6, 1101.0], [15.7, 1101.0], [15.8, 1101.0], [15.9, 1101.0], [16.0, 1102.0], [16.1, 1102.0], [16.2, 1102.0], [16.3, 1102.0], [16.4, 1102.0], [16.5, 1102.0], [16.6, 1102.0], [16.7, 1103.0], [16.8, 1103.0], [16.9, 1103.0], [17.0, 1103.0], [17.1, 1103.0], [17.2, 1103.0], [17.3, 1104.0], [17.4, 1104.0], [17.5, 1104.0], [17.6, 1104.0], [17.7, 1104.0], [17.8, 1104.0], [17.9, 1105.0], [18.0, 1105.0], [18.1, 1105.0], [18.2, 1105.0], [18.3, 1105.0], [18.4, 1105.0], [18.5, 1106.0], [18.6, 1106.0], [18.7, 1106.0], [18.8, 1106.0], [18.9, 1107.0], [19.0, 1107.0], [19.1, 1107.0], [19.2, 1107.0], [19.3, 1107.0], [19.4, 1108.0], [19.5, 1108.0], [19.6, 1108.0], [19.7, 1108.0], [19.8, 1109.0], [19.9, 1109.0], [20.0, 1109.0], [20.1, 1110.0], [20.2, 1110.0], [20.3, 1110.0], [20.4, 1110.0], [20.5, 1111.0], [20.6, 1111.0], [20.7, 1111.0], [20.8, 1112.0], [20.9, 1112.0], [21.0, 1112.0], [21.1, 1113.0], [21.2, 1113.0], [21.3, 1114.0], [21.4, 1114.0], [21.5, 1114.0], [21.6, 1115.0], [21.7, 1115.0], [21.8, 1115.0], [21.9, 1116.0], [22.0, 1116.0], [22.1, 1117.0], [22.2, 1117.0], [22.3, 1117.0], [22.4, 1118.0], [22.5, 1118.0], [22.6, 1119.0], [22.7, 1119.0], [22.8, 1120.0], [22.9, 1120.0], [23.0, 1121.0], [23.1, 1121.0], [23.2, 1121.0], [23.3, 1122.0], [23.4, 1122.0], [23.5, 1123.0], [23.6, 1123.0], [23.7, 1124.0], [23.8, 1124.0], [23.9, 1125.0], [24.0, 1125.0], [24.1, 1126.0], [24.2, 1126.0], [24.3, 1127.0], [24.4, 1127.0], [24.5, 1128.0], [24.6, 1128.0], [24.7, 1129.0], [24.8, 1130.0], [24.9, 1130.0], [25.0, 1131.0], [25.1, 1131.0], [25.2, 1132.0], [25.3, 1132.0], [25.4, 1133.0], [25.5, 1133.0], [25.6, 1134.0], [25.7, 1135.0], [25.8, 1135.0], [25.9, 1136.0], [26.0, 1137.0], [26.1, 1137.0], [26.2, 1138.0], [26.3, 1139.0], [26.4, 1139.0], [26.5, 1140.0], [26.6, 1141.0], [26.7, 1142.0], [26.8, 1143.0], [26.9, 1144.0], [27.0, 1145.0], [27.1, 1145.0], [27.2, 1146.0], [27.3, 1147.0], [27.4, 1148.0], [27.5, 1149.0], [27.6, 1150.0], [27.7, 1151.0], [27.8, 1152.0], [27.9, 1153.0], [28.0, 1155.0], [28.1, 1156.0], [28.2, 1157.0], [28.3, 1158.0], [28.4, 1159.0], [28.5, 1160.0], [28.6, 1162.0], [28.7, 1163.0], [28.8, 1164.0], [28.9, 1166.0], [29.0, 1167.0], [29.1, 1168.0], [29.2, 1170.0], [29.3, 1171.0], [29.4, 1173.0], [29.5, 1174.0], [29.6, 1176.0], [29.7, 1177.0], [29.8, 1179.0], [29.9, 1181.0], [30.0, 1183.0], [30.1, 1184.0], [30.2, 1186.0], [30.3, 1187.0], [30.4, 1189.0], [30.5, 1191.0], [30.6, 1193.0], [30.7, 1195.0], [30.8, 1197.0], [30.9, 1199.0], [31.0, 1201.0], [31.1, 1203.0], [31.2, 1205.0], [31.3, 1208.0], [31.4, 1210.0], [31.5, 1212.0], [31.6, 1214.0], [31.7, 1216.0], [31.8, 1219.0], [31.9, 1221.0], [32.0, 1224.0], [32.1, 1226.0], [32.2, 1228.0], [32.3, 1231.0], [32.4, 1234.0], [32.5, 1236.0], [32.6, 1239.0], [32.7, 1241.0], [32.8, 1243.0], [32.9, 1245.0], [33.0, 1248.0], [33.1, 1250.0], [33.2, 1252.0], [33.3, 1255.0], [33.4, 1257.0], [33.5, 1259.0], [33.6, 1262.0], [33.7, 1265.0], [33.8, 1268.0], [33.9, 1270.0], [34.0, 1273.0], [34.1, 1276.0], [34.2, 1279.0], [34.3, 1282.0], [34.4, 1286.0], [34.5, 1290.0], [34.6, 1293.0], [34.7, 1296.0], [34.8, 1299.0], [34.9, 1302.0], [35.0, 1304.0], [35.1, 1307.0], [35.2, 1310.0], [35.3, 1313.0], [35.4, 1315.0], [35.5, 1318.0], [35.6, 1321.0], [35.7, 1323.0], [35.8, 1326.0], [35.9, 1328.0], [36.0, 1331.0], [36.1, 1334.0], [36.2, 1337.0], [36.3, 1340.0], [36.4, 1343.0], [36.5, 1345.0], [36.6, 1348.0], [36.7, 1351.0], [36.8, 1354.0], [36.9, 1357.0], [37.0, 1359.0], [37.1, 1362.0], [37.2, 1365.0], [37.3, 1367.0], [37.4, 1370.0], [37.5, 1372.0], [37.6, 1375.0], [37.7, 1378.0], [37.8, 1381.0], [37.9, 1383.0], [38.0, 1386.0], [38.1, 1388.0], [38.2, 1391.0], [38.3, 1394.0], [38.4, 1397.0], [38.5, 1400.0], [38.6, 1404.0], [38.7, 1407.0], [38.8, 1410.0], [38.9, 1414.0], [39.0, 1417.0], [39.1, 1420.0], [39.2, 1423.0], [39.3, 1426.0], [39.4, 1430.0], [39.5, 1433.0], [39.6, 1436.0], [39.7, 1440.0], [39.8, 1443.0], [39.9, 1446.0], [40.0, 1450.0], [40.1, 1453.0], [40.2, 1457.0], [40.3, 1460.0], [40.4, 1463.0], [40.5, 1467.0], [40.6, 1470.0], [40.7, 1474.0], [40.8, 1478.0], [40.9, 1481.0], [41.0, 1484.0], [41.1, 1488.0], [41.2, 1492.0], [41.3, 1496.0], [41.4, 1500.0], [41.5, 1504.0], [41.6, 1508.0], [41.7, 1511.0], [41.8, 1515.0], [41.9, 1519.0], [42.0, 1523.0], [42.1, 1527.0], [42.2, 1531.0], [42.3, 1535.0], [42.4, 1539.0], [42.5, 1544.0], [42.6, 1548.0], [42.7, 1552.0], [42.8, 1555.0], [42.9, 1559.0], [43.0, 1563.0], [43.1, 1566.0], [43.2, 1570.0], [43.3, 1574.0], [43.4, 1577.0], [43.5, 1581.0], [43.6, 1584.0], [43.7, 1588.0], [43.8, 1591.0], [43.9, 1595.0], [44.0, 1598.0], [44.1, 1601.0], [44.2, 1604.0], [44.3, 1608.0], [44.4, 1612.0], [44.5, 1616.0], [44.6, 1620.0], [44.7, 1624.0], [44.8, 1628.0], [44.9, 1632.0], [45.0, 1635.0], [45.1, 1639.0], [45.2, 1643.0], [45.3, 1646.0], [45.4, 1650.0], [45.5, 1653.0], [45.6, 1657.0], [45.7, 1661.0], [45.8, 1664.0], [45.9, 1668.0], [46.0, 1671.0], [46.1, 1675.0], [46.2, 1679.0], [46.3, 1683.0], [46.4, 1687.0], [46.5, 1691.0], [46.6, 1695.0], [46.7, 1699.0], [46.8, 1702.0], [46.9, 1706.0], [47.0, 1710.0], [47.1, 1713.0], [47.2, 1717.0], [47.3, 1721.0], [47.4, 1725.0], [47.5, 1729.0], [47.6, 1734.0], [47.7, 1739.0], [47.8, 1743.0], [47.9, 1748.0], [48.0, 1752.0], [48.1, 1756.0], [48.2, 1761.0], [48.3, 1765.0], [48.4, 1769.0], [48.5, 1773.0], [48.6, 1777.0], [48.7, 1782.0], [48.8, 1786.0], [48.9, 1791.0], [49.0, 1796.0], [49.1, 1800.0], [49.2, 1805.0], [49.3, 1809.0], [49.4, 1813.0], [49.5, 1817.0], [49.6, 1822.0], [49.7, 1827.0], [49.8, 1832.0], [49.9, 1837.0], [50.0, 1842.0], [50.1, 1847.0], [50.2, 1851.0], [50.3, 1856.0], [50.4, 1861.0], [50.5, 1865.0], [50.6, 1870.0], [50.7, 1875.0], [50.8, 1880.0], [50.9, 1884.0], [51.0, 1888.0], [51.1, 1894.0], [51.2, 1899.0], [51.3, 1904.0], [51.4, 1909.0], [51.5, 1914.0], [51.6, 1919.0], [51.7, 1924.0], [51.8, 1930.0], [51.9, 1934.0], [52.0, 1940.0], [52.1, 1945.0], [52.2, 1950.0], [52.3, 1955.0], [52.4, 1960.0], [52.5, 1965.0], [52.6, 1970.0], [52.7, 1975.0], [52.8, 1980.0], [52.9, 1984.0], [53.0, 1988.0], [53.1, 1992.0], [53.2, 1997.0], [53.3, 2001.0], [53.4, 2006.0], [53.5, 2010.0], [53.6, 2015.0], [53.7, 2019.0], [53.8, 2023.0], [53.9, 2028.0], [54.0, 2032.0], [54.1, 2036.0], [54.2, 2039.0], [54.3, 2043.0], [54.4, 2047.0], [54.5, 2051.0], [54.6, 2055.0], [54.7, 2059.0], [54.8, 2063.0], [54.9, 2066.0], [55.0, 2069.0], [55.1, 2072.0], [55.2, 2075.0], [55.3, 2079.0], [55.4, 2082.0], [55.5, 2085.0], [55.6, 2088.0], [55.7, 2092.0], [55.8, 2095.0], [55.9, 2098.0], [56.0, 2101.0], [56.1, 2105.0], [56.2, 2108.0], [56.3, 2111.0], [56.4, 2114.0], [56.5, 2116.0], [56.6, 2119.0], [56.7, 2122.0], [56.8, 2125.0], [56.9, 2128.0], [57.0, 2130.0], [57.1, 2132.0], [57.2, 2135.0], [57.3, 2137.0], [57.4, 2140.0], [57.5, 2142.0], [57.6, 2144.0], [57.7, 2146.0], [57.8, 2148.0], [57.9, 2150.0], [58.0, 2152.0], [58.1, 2154.0], [58.2, 2156.0], [58.3, 2158.0], [58.4, 2161.0], [58.5, 2163.0], [58.6, 2166.0], [58.7, 2169.0], [58.8, 2172.0], [58.9, 2176.0], [59.0, 2180.0], [59.1, 2185.0], [59.2, 2189.0], [59.3, 2193.0], [59.4, 2198.0], [59.5, 2203.0], [59.6, 2209.0], [59.7, 2215.0], [59.8, 2220.0], [59.9, 2227.0], [60.0, 2233.0], [60.1, 2241.0], [60.2, 2249.0], [60.3, 2256.0], [60.4, 2265.0], [60.5, 2276.0], [60.6, 2285.0], [60.7, 2294.0], [60.8, 2303.0], [60.9, 2313.0], [61.0, 2321.0], [61.1, 2331.0], [61.2, 2341.0], [61.3, 2351.0], [61.4, 2359.0], [61.5, 2368.0], [61.6, 2376.0], [61.7, 2384.0], [61.8, 2392.0], [61.9, 2400.0], [62.0, 2409.0], [62.1, 2417.0], [62.2, 2426.0], [62.3, 2434.0], [62.4, 2444.0], [62.5, 2453.0], [62.6, 2461.0], [62.7, 2469.0], [62.8, 2478.0], [62.9, 2487.0], [63.0, 2495.0], [63.1, 2503.0], [63.2, 2511.0], [63.3, 2519.0], [63.4, 2527.0], [63.5, 2535.0], [63.6, 2545.0], [63.7, 2553.0], [63.8, 2563.0], [63.9, 2572.0], [64.0, 2582.0], [64.1, 2592.0], [64.2, 2602.0], [64.3, 2612.0], [64.4, 2622.0], [64.5, 2631.0], [64.6, 2640.0], [64.7, 2649.0], [64.8, 2658.0], [64.9, 2668.0], [65.0, 2678.0], [65.1, 2688.0], [65.2, 2697.0], [65.3, 2706.0], [65.4, 2716.0], [65.5, 2726.0], [65.6, 2735.0], [65.7, 2744.0], [65.8, 2753.0], [65.9, 2763.0], [66.0, 2773.0], [66.1, 2783.0], [66.2, 2794.0], [66.3, 2804.0], [66.4, 2817.0], [66.5, 2829.0], [66.6, 2840.0], [66.7, 2850.0], [66.8, 2859.0], [66.9, 2868.0], [67.0, 2876.0], [67.1, 2884.0], [67.2, 2894.0], [67.3, 2903.0], [67.4, 2913.0], [67.5, 2924.0], [67.6, 2934.0], [67.7, 2943.0], [67.8, 2954.0], [67.9, 2963.0], [68.0, 2974.0], [68.1, 2984.0], [68.2, 2993.0], [68.3, 3002.0], [68.4, 3012.0], [68.5, 3021.0], [68.6, 3031.0], [68.7, 3040.0], [68.8, 3050.0], [68.9, 3058.0], [69.0, 3067.0], [69.1, 3077.0], [69.2, 3086.0], [69.3, 3094.0], [69.4, 3102.0], [69.5, 3111.0], [69.6, 3119.0], [69.7, 3126.0], [69.8, 3133.0], [69.9, 3140.0], [70.0, 3148.0], [70.1, 3155.0], [70.2, 3161.0], [70.3, 3167.0], [70.4, 3174.0], [70.5, 3181.0], [70.6, 3188.0], [70.7, 3196.0], [70.8, 3203.0], [70.9, 3210.0], [71.0, 3218.0], [71.1, 3226.0], [71.2, 3236.0], [71.3, 3245.0], [71.4, 3257.0], [71.5, 3268.0], [71.6, 3281.0], [71.7, 3295.0], [71.8, 3309.0], [71.9, 3325.0], [72.0, 3341.0], [72.1, 3356.0], [72.2, 3371.0], [72.3, 3385.0], [72.4, 3401.0], [72.5, 3416.0], [72.6, 3430.0], [72.7, 3443.0], [72.8, 3458.0], [72.9, 3472.0], [73.0, 3486.0], [73.1, 3501.0], [73.2, 3515.0], [73.3, 3529.0], [73.4, 3541.0], [73.5, 3553.0], [73.6, 3566.0], [73.7, 3578.0], [73.8, 3592.0], [73.9, 3606.0], [74.0, 3621.0], [74.1, 3637.0], [74.2, 3653.0], [74.3, 3669.0], [74.4, 3685.0], [74.5, 3700.0], [74.6, 3713.0], [74.7, 3726.0], [74.8, 3740.0], [74.9, 3755.0], [75.0, 3769.0], [75.1, 3785.0], [75.2, 3800.0], [75.3, 3817.0], [75.4, 3835.0], [75.5, 3854.0], [75.6, 3870.0], [75.7, 3889.0], [75.8, 3905.0], [75.9, 3923.0], [76.0, 3941.0], [76.1, 3958.0], [76.2, 3974.0], [76.3, 3990.0], [76.4, 4005.0], [76.5, 4020.0], [76.6, 4036.0], [76.7, 4052.0], [76.8, 4066.0], [76.9, 4082.0], [77.0, 4096.0], [77.1, 4109.0], [77.2, 4121.0], [77.3, 4135.0], [77.4, 4147.0], [77.5, 4158.0], [77.6, 4168.0], [77.7, 4179.0], [77.8, 4190.0], [77.9, 4200.0], [78.0, 4211.0], [78.1, 4220.0], [78.2, 4232.0], [78.3, 4242.0], [78.4, 4254.0], [78.5, 4265.0], [78.6, 4278.0], [78.7, 4289.0], [78.8, 4304.0], [78.9, 4319.0], [79.0, 4336.0], [79.1, 4355.0], [79.2, 4372.0], [79.3, 4391.0], [79.4, 4413.0], [79.5, 4433.0], [79.6, 4454.0], [79.7, 4475.0], [79.8, 4494.0], [79.9, 4515.0], [80.0, 4534.0], [80.1, 4556.0], [80.2, 4576.0], [80.3, 4596.0], [80.4, 4617.0], [80.5, 4638.0], [80.6, 4657.0], [80.7, 4680.0], [80.8, 4699.0], [80.9, 4722.0], [81.0, 4743.0], [81.1, 4764.0], [81.2, 4787.0], [81.3, 4806.0], [81.4, 4828.0], [81.5, 4849.0], [81.6, 4867.0], [81.7, 4889.0], [81.8, 4909.0], [81.9, 4928.0], [82.0, 4949.0], [82.1, 4971.0], [82.2, 4990.0], [82.3, 5011.0], [82.4, 5031.0], [82.5, 5054.0], [82.6, 5073.0], [82.7, 5096.0], [82.8, 5115.0], [82.9, 5133.0], [83.0, 5149.0], [83.1, 5163.0], [83.2, 5180.0], [83.3, 5195.0], [83.4, 5210.0], [83.5, 5224.0], [83.6, 5238.0], [83.7, 5252.0], [83.8, 5265.0], [83.9, 5279.0], [84.0, 5293.0], [84.1, 5307.0], [84.2, 5322.0], [84.3, 5338.0], [84.4, 5354.0], [84.5, 5374.0], [84.6, 5393.0], [84.7, 5413.0], [84.8, 5435.0], [84.9, 5457.0], [85.0, 5480.0], [85.1, 5503.0], [85.2, 5526.0], [85.3, 5550.0], [85.4, 5574.0], [85.5, 5600.0], [85.6, 5625.0], [85.7, 5648.0], [85.8, 5674.0], [85.9, 5702.0], [86.0, 5728.0], [86.1, 5754.0], [86.2, 5782.0], [86.3, 5813.0], [86.4, 5841.0], [86.5, 5867.0], [86.6, 5895.0], [86.7, 5921.0], [86.8, 5947.0], [86.9, 5973.0], [87.0, 5999.0], [87.1, 6023.0], [87.2, 6048.0], [87.3, 6070.0], [87.4, 6096.0], [87.5, 6120.0], [87.6, 6142.0], [87.7, 6165.0], [87.8, 6188.0], [87.9, 6209.0], [88.0, 6227.0], [88.1, 6247.0], [88.2, 6265.0], [88.3, 6284.0], [88.4, 6298.0], [88.5, 6314.0], [88.6, 6330.0], [88.7, 6348.0], [88.8, 6366.0], [88.9, 6388.0], [89.0, 6411.0], [89.1, 6436.0], [89.2, 6461.0], [89.3, 6490.0], [89.4, 6524.0], [89.5, 6560.0], [89.6, 6589.0], [89.7, 6616.0], [89.8, 6649.0], [89.9, 6681.0], [90.0, 6714.0], [90.1, 6752.0], [90.2, 6791.0], [90.3, 6826.0], [90.4, 6862.0], [90.5, 6897.0], [90.6, 6932.0], [90.7, 6970.0], [90.8, 7004.0], [90.9, 7036.0], [91.0, 7067.0], [91.1, 7102.0], [91.2, 7133.0], [91.3, 7165.0], [91.4, 7195.0], [91.5, 7224.0], [91.6, 7250.0], [91.7, 7276.0], [91.8, 7298.0], [91.9, 7323.0], [92.0, 7344.0], [92.1, 7367.0], [92.2, 7391.0], [92.3, 7416.0], [92.4, 7444.0], [92.5, 7474.0], [92.6, 7507.0], [92.7, 7546.0], [92.8, 7586.0], [92.9, 7623.0], [93.0, 7659.0], [93.1, 7695.0], [93.2, 7738.0], [93.3, 7781.0], [93.4, 7825.0], [93.5, 7866.0], [93.6, 7906.0], [93.7, 7948.0], [93.8, 7991.0], [93.9, 8037.0], [94.0, 8078.0], [94.1, 8119.0], [94.2, 8167.0], [94.3, 8209.0], [94.4, 8249.0], [94.5, 8289.0], [94.6, 8323.0], [94.7, 8354.0], [94.8, 8385.0], [94.9, 8416.0], [95.0, 8447.0], [95.1, 8482.0], [95.2, 8525.0], [95.3, 8571.0], [95.4, 8622.0], [95.5, 8672.0], [95.6, 8729.0], [95.7, 8785.0], [95.8, 8845.0], [95.9, 8909.0], [96.0, 8977.0], [96.1, 9043.0], [96.2, 9103.0], [96.3, 9163.0], [96.4, 9221.0], [96.5, 9278.0], [96.6, 9333.0], [96.7, 9386.0], [96.8, 9429.0], [96.9, 9469.0], [97.0, 9511.0], [97.1, 9561.0], [97.2, 9616.0], [97.3, 9675.0], [97.4, 9736.0], [97.5, 9800.0], [97.6, 9869.0], [97.7, 9941.0], [97.8, 10009.0], [97.9, 10064.0], [98.0, 10102.0], [98.1, 10146.0], [98.2, 10188.0], [98.3, 10238.0], [98.4, 10293.0], [98.5, 10342.0], [98.6, 10394.0], [98.7, 10440.0], [98.8, 10484.0], [98.9, 10526.0], [99.0, 10577.0], [99.1, 10631.0], [99.2, 10697.0], [99.3, 10776.0], [99.4, 10867.0], [99.5, 10960.0], [99.6, 11038.0], [99.7, 11122.0], [99.8, 11251.0], [99.9, 11501.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 45029.0, "series": [{"data": [[0.0, 18613.0], [100.0, 1194.0], [200.0, 809.0], [300.0, 670.0], [400.0, 297.0], [500.0, 209.0], [600.0, 205.0], [700.0, 132.0], [800.0, 113.0], [900.0, 146.0], [1000.0, 16038.0], [1100.0, 45029.0], [1200.0, 10527.0], [1300.0, 9852.0], [1400.0, 7842.0], [1500.0, 7199.0], [1600.0, 7209.0], [1700.0, 6354.0], [1800.0, 5767.0], [1900.0, 5551.0], [2000.0, 7217.0], [2100.0, 9420.0], [2200.0, 3573.0], [2300.0, 3053.0], [2400.0, 3155.0], [2500.0, 3003.0], [2600.0, 2866.0], [2700.0, 2761.0], [2800.0, 2705.0], [2900.0, 2734.0], [3000.0, 2956.0], [3100.0, 3725.0], [3200.0, 2658.0], [3300.0, 1764.0], [3400.0, 1909.0], [3500.0, 2054.0], [3700.0, 1888.0], [3600.0, 1741.0], [3800.0, 1506.0], [3900.0, 1634.0], [4000.0, 1784.0], [4100.0, 2342.0], [4200.0, 2386.0], [4300.0, 1519.0], [4400.0, 1320.0], [4500.0, 1322.0], [4600.0, 1311.0], [4700.0, 1249.0], [4800.0, 1319.0], [4900.0, 1321.0], [5000.0, 1286.0], [5100.0, 1655.0], [5200.0, 1926.0], [5300.0, 1587.0], [5400.0, 1210.0], [5500.0, 1109.0], [5600.0, 1054.0], [5800.0, 982.0], [5700.0, 996.0], [5900.0, 1033.0], [6000.0, 1108.0], [6100.0, 1202.0], [6300.0, 1473.0], [6200.0, 1487.0], [6400.0, 1015.0], [6500.0, 823.0], [6600.0, 864.0], [6700.0, 724.0], [6800.0, 770.0], [6900.0, 747.0], [7000.0, 826.0], [7100.0, 865.0], [7300.0, 1170.0], [7400.0, 923.0], [7200.0, 1056.0], [7500.0, 685.0], [7600.0, 751.0], [7800.0, 651.0], [7700.0, 620.0], [7900.0, 643.0], [8000.0, 619.0], [8100.0, 592.0], [8300.0, 832.0], [8400.0, 792.0], [8500.0, 603.0], [8200.0, 709.0], [8600.0, 521.0], [8700.0, 464.0], [8800.0, 430.0], [8900.0, 399.0], [9000.0, 450.0], [9100.0, 456.0], [9200.0, 450.0], [9400.0, 660.0], [9500.0, 534.0], [9600.0, 452.0], [9300.0, 534.0], [9700.0, 428.0], [9800.0, 390.0], [9900.0, 387.0], [10100.0, 617.0], [10000.0, 560.0], [10200.0, 519.0], [10300.0, 534.0], [10400.0, 614.0], [10500.0, 548.0], [10600.0, 429.0], [10700.0, 336.0], [10900.0, 309.0], [11000.0, 333.0], [11100.0, 249.0], [10800.0, 297.0], [11200.0, 153.0], [11300.0, 124.0], [11400.0, 80.0], [11500.0, 39.0], [11600.0, 25.0], [11700.0, 18.0], [11800.0, 10.0], [11900.0, 14.0], [12000.0, 22.0], [12100.0, 9.0], [12200.0, 10.0], [12300.0, 10.0], [12400.0, 11.0], [12500.0, 10.0], [12600.0, 5.0], [12700.0, 5.0], [12800.0, 6.0], [12900.0, 7.0], [13000.0, 5.0], [13100.0, 5.0], [13300.0, 4.0], [13200.0, 2.0], [13500.0, 4.0], [13400.0, 3.0], [13800.0, 2.0], [13600.0, 3.0], [13700.0, 1.0], [14200.0, 4.0], [14300.0, 2.0], [14000.0, 1.0], [14100.0, 1.0], [13900.0, 1.0], [14700.0, 1.0], [14800.0, 1.0], [14500.0, 1.0], [15300.0, 2.0], [15200.0, 1.0], [14900.0, 1.0], [15100.0, 2.0], [15700.0, 1.0], [15400.0, 1.0], [15600.0, 2.0], [15800.0, 1.0], [15500.0, 1.0], [15900.0, 3.0], [17100.0, 1.0], [16800.0, 2.0], [17300.0, 1.0], [16400.0, 1.0], [17500.0, 1.0], [18400.0, 1.0], [17600.0, 1.0], [17900.0, 1.0], [18700.0, 1.0], [18800.0, 1.0], [20200.0, 1.0], [19700.0, 1.0], [21100.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1441.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 157104.0, "series": [{"data": [[0.0, 1441.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 89611.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 157104.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 21711.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2905.1062524691724, "minX": 1.68416202E12, "maxY": 3000.0, "series": [{"data": [[1.68416214E12, 3000.0], [1.68416226E12, 3000.0], [1.68416208E12, 3000.0], [1.6841622E12, 3000.0], [1.68416202E12, 3000.0], [1.68416232E12, 2905.1062524691724]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416232E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.0, "maxY": 11106.0, "series": [{"data": [[2.0, 10371.0], [3.0, 10619.0], [4.0, 11015.0], [5.0, 11099.0], [6.0, 10017.0], [7.0, 10302.0], [8.0, 10482.0], [9.0, 10403.0], [10.0, 10414.0], [11.0, 8698.0], [12.0, 9124.0], [13.0, 9189.0], [14.0, 10566.0], [15.0, 9243.0], [16.0, 10710.0], [17.0, 11106.0], [18.0, 9013.0], [19.0, 9434.0], [20.0, 9145.0], [21.0, 9220.0], [22.0, 8797.0], [23.0, 8811.0], [24.0, 8527.0], [25.0, 8984.0], [26.0, 8003.0], [27.0, 8860.0], [29.0, 8289.5], [30.0, 9289.0], [31.0, 8736.0], [33.0, 9538.0], [32.0, 8844.0], [35.0, 8762.0], [34.0, 8738.0], [37.0, 9533.0], [36.0, 8749.0], [39.0, 8670.0], [38.0, 9469.0], [41.0, 9638.0], [40.0, 8725.0], [43.0, 10179.0], [42.0, 8648.0], [45.0, 8756.0], [44.0, 8974.0], [47.0, 8974.0], [46.0, 8676.0], [49.0, 10241.0], [48.0, 8473.0], [51.0, 9006.0], [50.0, 8570.0], [52.0, 8974.0], [55.0, 8853.0], [57.0, 8303.5], [58.0, 8673.0], [61.0, 7451.0], [60.0, 9400.5], [63.0, 8504.0], [62.0, 8119.0], [67.0, 7996.5], [65.0, 9266.0], [64.0, 8593.0], [71.0, 8134.0], [70.0, 8453.0], [69.0, 8054.0], [68.0, 8947.0], [75.0, 9307.0], [74.0, 8985.0], [73.0, 8305.0], [72.0, 9456.0], [79.0, 8312.0], [78.0, 9077.0], [77.0, 8307.0], [76.0, 9400.0], [83.0, 7968.0], [82.0, 9082.0], [81.0, 8228.0], [80.0, 8035.0], [87.0, 8323.0], [86.0, 8350.0], [85.0, 7937.0], [84.0, 8094.0], [91.0, 7616.5], [89.0, 8232.0], [88.0, 8921.0], [94.0, 8311.0], [93.0, 8497.0], [92.0, 8980.0], [98.0, 8769.0], [97.0, 8801.0], [96.0, 8564.0], [103.0, 7637.0], [102.0, 7417.0], [101.0, 8896.0], [100.0, 7972.5], [107.0, 8388.0], [106.0, 8086.0], [105.0, 7316.5], [111.0, 7488.0], [110.0, 8829.0], [109.0, 8187.0], [108.0, 6441.0], [114.0, 8205.0], [113.0, 9654.0], [112.0, 7582.0], [119.0, 8990.0], [118.0, 7025.0], [117.0, 8720.666666666666], [123.0, 8022.0], [121.0, 7801.0], [120.0, 7248.0], [126.0, 9770.0], [125.0, 10300.0], [124.0, 8546.0], [135.0, 7886.0], [134.0, 7425.0], [133.0, 8856.0], [132.0, 9057.0], [130.0, 8536.0], [129.0, 7615.0], [128.0, 7744.0], [143.0, 8417.0], [142.0, 8108.0], [141.0, 8423.0], [140.0, 8268.0], [139.0, 7586.5], [137.0, 8013.5], [151.0, 8870.0], [150.0, 7784.0], [149.0, 7855.0], [148.0, 7874.0], [146.0, 8497.0], [145.0, 7110.0], [144.0, 8520.0], [159.0, 7281.0], [158.0, 6836.0], [156.0, 7911.0], [155.0, 7797.0], [154.0, 8167.0], [153.0, 7049.0], [152.0, 6997.0], [167.0, 7911.0], [166.0, 8820.0], [165.0, 8055.0], [164.0, 8846.0], [163.0, 9135.0], [162.0, 7837.0], [161.0, 8402.0], [160.0, 8870.0], [175.0, 6928.0], [174.0, 7677.0], [173.0, 8350.0], [172.0, 8028.0], [171.0, 6931.0], [170.0, 7896.0], [169.0, 7244.0], [168.0, 9097.0], [183.0, 6891.0], [182.0, 7425.0], [181.0, 7666.0], [180.0, 6868.0], [179.0, 7666.0], [178.0, 7195.0], [177.0, 6610.0], [176.0, 8013.0], [191.0, 7388.0], [190.0, 6648.0], [189.0, 7691.0], [188.0, 6581.0], [187.0, 6502.0], [186.0, 6807.0], [185.0, 6537.0], [184.0, 8476.0], [199.0, 7814.0], [198.0, 6532.0], [197.0, 7627.0], [196.0, 7609.0], [195.0, 7875.0], [194.0, 6550.0], [193.0, 6648.0], [192.0, 7679.0], [207.0, 7977.0], [206.0, 8591.0], [204.0, 6679.0], [203.0, 7537.0], [202.0, 6706.0], [201.0, 6731.0], [200.0, 8576.0], [214.0, 7718.0], [213.0, 6049.0], [212.0, 7057.333333333333], [210.0, 7774.0], [208.0, 7239.0], [223.0, 6654.0], [222.0, 6278.0], [221.0, 8313.0], [220.0, 8121.0], [219.0, 6841.0], [218.0, 7686.0], [217.0, 6763.0], [216.0, 8112.0], [231.0, 6836.0], [230.0, 6583.0], [229.0, 6894.5], [227.0, 7499.666666666667], [224.0, 7124.0], [239.0, 8596.0], [238.0, 6546.0], [237.0, 7909.0], [236.0, 7354.0], [235.0, 6207.0], [234.0, 7313.0], [233.0, 8394.0], [232.0, 6621.0], [246.0, 7929.0], [245.0, 9544.0], [244.0, 7364.0], [243.0, 6478.0], [242.0, 7653.0], [241.0, 7560.0], [240.0, 6941.0], [255.0, 8203.0], [254.0, 6157.5], [252.0, 8211.0], [251.0, 8289.0], [250.0, 6116.0], [249.0, 7671.0], [248.0, 7606.5], [270.0, 7252.0], [269.0, 6882.5], [258.0, 7431.0], [257.0, 7931.0], [267.0, 8059.0], [266.0, 8483.0], [264.0, 6099.0], [263.0, 8063.0], [262.0, 7889.0], [261.0, 8547.0], [260.0, 6753.5], [275.0, 8396.0], [285.0, 6649.0], [287.0, 7857.0], [284.0, 6964.0], [282.0, 8065.5], [280.0, 8503.0], [279.0, 6465.0], [278.0, 6925.5], [276.0, 5942.0], [274.0, 6363.0], [273.0, 8485.0], [302.0, 9945.0], [303.0, 6759.0], [301.0, 7498.0], [300.0, 6403.0], [299.0, 7358.0], [298.0, 7711.5], [296.0, 7892.5], [295.0, 7345.0], [289.0, 6966.0], [291.0, 6602.0], [290.0, 7515.0], [293.0, 9498.0], [292.0, 8937.0], [318.0, 6566.0], [319.0, 8044.0], [317.0, 9955.0], [316.0, 7517.0], [315.0, 8861.0], [314.0, 8540.0], [312.0, 6259.0], [311.0, 5159.0], [305.0, 7048.0], [304.0, 7358.0], [307.0, 6742.0], [306.0, 7425.0], [310.0, 6794.0], [309.0, 7380.0], [308.0, 6800.0], [334.0, 6937.0], [335.0, 6815.333333333333], [333.0, 7317.0], [332.0, 8611.0], [331.0, 7723.0], [330.0, 7748.0], [329.0, 6835.5], [328.0, 9021.0], [324.0, 6978.0], [321.0, 8268.0], [320.0, 7338.0], [323.0, 7359.0], [322.0, 7897.0], [350.0, 6446.0], [351.0, 5895.0], [349.0, 5864.0], [348.0, 6238.5], [346.0, 5677.0], [345.0, 5819.0], [344.0, 6556.0], [343.0, 7346.0], [337.0, 7032.0], [336.0, 6652.0], [339.0, 7051.0], [338.0, 6600.0], [342.0, 6326.0], [341.0, 6438.0], [340.0, 7046.0], [366.0, 6963.0], [367.0, 7242.0], [365.0, 7301.0], [364.0, 5784.0], [363.0, 6888.0], [362.0, 6908.0], [361.0, 6309.0], [360.0, 6422.0], [358.0, 7401.0], [353.0, 5951.0], [352.0, 6897.0], [355.0, 6964.0], [354.0, 6613.0], [357.0, 8367.0], [356.0, 5959.0], [381.0, 5723.0], [382.0, 7141.0], [380.0, 8016.0], [371.0, 6368.0], [370.0, 8252.0], [369.0, 7260.0], [368.0, 7618.0], [379.0, 5130.0], [378.0, 7741.0], [377.0, 8204.0], [376.0, 4832.0], [375.0, 6737.0], [374.0, 6972.0], [373.0, 5749.0], [372.0, 6711.0], [398.0, 6287.0], [397.0, 7007.5], [395.0, 5104.0], [394.0, 6398.0], [393.0, 7736.0], [392.0, 7227.0], [391.0, 7843.0], [390.0, 6206.333333333333], [387.0, 6943.0], [386.0, 7837.0], [385.0, 6939.0], [384.0, 6539.5], [403.0, 7120.0], [414.0, 7234.0], [413.0, 8264.0], [412.0, 5944.25], [410.0, 6031.5], [406.0, 7104.0], [404.0, 5584.0], [402.0, 7349.0], [401.0, 7751.0], [400.0, 5989.5], [430.0, 7960.5], [428.0, 4877.0], [419.0, 6373.5], [417.0, 7079.0], [416.0, 6011.0], [427.0, 7428.0], [426.0, 6417.0], [425.0, 6924.0], [424.0, 7007.0], [423.0, 5880.0], [422.0, 8247.0], [421.0, 6596.0], [420.0, 5395.0], [446.0, 6914.0], [447.0, 7067.0], [445.0, 5906.0], [444.0, 6946.0], [443.0, 6055.0], [442.0, 7865.0], [441.0, 8246.0], [440.0, 5429.0], [439.0, 7020.0], [432.0, 6311.5], [434.0, 5612.0], [433.0, 5323.0], [437.0, 8192.0], [436.0, 5900.0], [462.0, 5048.0], [463.0, 5274.0], [461.0, 9450.0], [460.0, 8164.0], [459.0, 7339.0], [458.0, 6452.0], [456.0, 8073.0], [455.0, 8150.0], [448.0, 7911.0], [451.0, 5322.0], [450.0, 6203.0], [454.0, 7343.0], [453.0, 9021.0], [452.0, 6460.0], [477.0, 8162.0], [478.0, 7080.0], [476.0, 6935.0], [475.0, 6360.5], [473.0, 6493.0], [472.0, 4647.0], [471.0, 5699.0], [469.0, 6884.5], [467.0, 7323.0], [465.0, 8637.0], [494.0, 9188.0], [495.0, 6054.0], [493.0, 7109.5], [491.0, 5522.0], [490.0, 5025.0], [489.0, 7724.0], [487.0, 8130.0], [484.0, 7154.0], [483.0, 6542.0], [482.0, 8425.0], [481.0, 5310.0], [480.0, 5737.5], [510.0, 7332.0], [511.0, 5969.0], [509.0, 6835.0], [508.0, 6062.0], [507.0, 9499.0], [506.0, 7236.0], [505.0, 7283.0], [504.0, 5210.0], [503.0, 6123.0], [497.0, 8109.0], [496.0, 7434.0], [499.0, 7060.0], [498.0, 7437.0], [502.0, 5302.0], [501.0, 6798.0], [500.0, 5197.0], [538.0, 8313.0], [540.0, 7984.0], [536.0, 7209.0], [518.0, 8478.0], [516.0, 6798.5], [514.0, 8379.0], [512.0, 6822.0], [534.0, 5268.0], [532.0, 5663.5], [530.0, 5265.0], [528.0, 7332.0], [526.0, 6793.0], [524.0, 6000.0], [522.0, 7409.0], [520.0, 7109.0], [574.0, 6617.0], [572.0, 4997.0], [570.0, 5247.0], [564.0, 4768.0], [560.0, 5699.5], [558.0, 6678.0], [554.0, 7431.0], [550.0, 4417.0], [602.0, 6114.0], [606.0, 6719.0], [600.0, 4322.0], [582.0, 5164.0], [580.0, 6902.0], [578.0, 7873.0], [576.0, 6382.0], [598.0, 7970.0], [596.0, 4143.0], [594.0, 6959.0], [592.0, 4632.0], [590.0, 5442.0], [588.0, 4808.0], [586.0, 6879.0], [584.0, 6321.0], [634.0, 6298.0], [636.0, 6430.5], [632.0, 6301.0], [630.0, 4444.0], [628.0, 6330.0], [626.0, 6166.5], [622.0, 6109.0], [620.0, 6344.0], [614.0, 4712.0], [612.0, 5015.0], [610.0, 4641.0], [608.0, 7397.0], [664.0, 4929.0], [668.0, 6238.0], [670.0, 7132.5], [666.0, 6813.0], [662.0, 5685.0], [660.0, 4529.0], [654.0, 5550.0], [650.0, 5193.333333333333], [646.0, 7681.0], [644.0, 6622.0], [640.0, 4712.666666666667], [698.0, 5223.0], [682.0, 4215.0], [678.0, 6492.0], [676.0, 7640.0], [674.0, 5468.0], [672.0, 4517.0], [732.0, 6181.5], [726.0, 6433.333333333333], [760.0, 5852.666666666667], [758.0, 7618.0], [752.0, 6303.0], [746.0, 5886.0], [742.0, 5770.666666666667], [738.0, 5241.0], [796.0, 7358.5], [794.0, 5355.0], [786.0, 6387.0], [784.0, 4395.0], [782.0, 5112.0], [780.0, 6344.5], [776.0, 3868.0], [768.0, 7509.0], [828.0, 6387.0], [816.0, 7016.666666666667], [826.0, 5319.0], [802.0, 4295.0], [800.0, 7361.0], [810.0, 7294.0], [822.0, 5736.5], [860.0, 4269.0], [848.0, 4732.333333333333], [850.0, 6346.0], [852.0, 6302.0], [862.0, 4080.0], [858.0, 3864.0], [856.0, 5094.0], [834.0, 4805.0], [832.0, 6653.0], [836.0, 8235.0], [842.0, 5951.666666666667], [840.0, 7548.5], [854.0, 7669.0], [892.0, 4147.0], [888.0, 5243.0], [882.0, 6288.0], [880.0, 5850.0], [884.0, 5505.5], [894.0, 6303.0], [890.0, 5354.0], [864.0, 4263.0], [866.0, 4578.0], [868.0, 3841.0], [870.0, 6563.0], [878.0, 4454.0], [876.0, 3840.0], [874.0, 5452.0], [872.0, 5055.0], [886.0, 4175.0], [922.0, 3414.0], [926.0, 7283.0], [912.0, 4150.0], [914.0, 3708.0], [924.0, 3694.0], [902.0, 7960.0], [900.0, 4250.0], [898.0, 5842.0], [896.0, 6956.0], [908.0, 6264.0], [906.0, 6342.0], [904.0, 3252.0], [956.0, 3960.0], [944.0, 3878.5], [946.0, 3496.0], [948.0, 5030.0], [958.0, 6784.0], [954.0, 4991.0], [952.0, 7911.0], [942.0, 6493.0], [928.0, 6261.0], [930.0, 7989.0], [932.0, 6870.0], [934.0, 4972.0], [940.0, 4648.0], [936.0, 4014.0], [950.0, 4078.0], [964.0, 6584.0], [966.0, 3439.0], [990.0, 7096.0], [984.0, 6267.25], [962.0, 5557.0], [960.0, 6693.0], [980.0, 5642.5], [978.0, 5179.0], [972.0, 6156.0], [970.0, 5401.5], [968.0, 5769.0], [1018.0, 6027.0], [1022.0, 3836.0], [1008.0, 4150.0], [1010.0, 6517.0], [1016.0, 3386.0], [994.0, 5402.0], [1006.0, 6589.0], [1004.0, 4743.5], [1002.0, 5856.333333333333], [1000.0, 3249.5], [1014.0, 3379.0], [1012.0, 3961.0], [1080.0, 3255.0], [1056.0, 2791.0], [1060.0, 7090.0], [1064.0, 2660.0], [1084.0, 4338.5], [1076.0, 4789.0], [1072.0, 4282.0], [1024.0, 7027.0], [1028.0, 3360.0], [1032.0, 5424.0], [1036.0, 3323.0], [1052.0, 4745.0], [1048.0, 5836.0], [1044.0, 3936.0], [1040.0, 4338.0], [1068.0, 6919.0], [1140.0, 2862.0], [1120.0, 3408.0], [1124.0, 5500.5], [1144.0, 4618.5], [1116.0, 6804.0], [1088.0, 5301.0], [1092.0, 7999.0], [1100.0, 7327.0], [1112.0, 6675.5], [1104.0, 4071.0], [1132.0, 6218.0], [1164.0, 7314.0], [1212.0, 5024.0], [1204.0, 7502.0], [1200.0, 4124.0], [1160.0, 3587.0], [1156.0, 6264.0], [1152.0, 4010.0], [1180.0, 5764.0], [1172.0, 3284.0], [1168.0, 5769.0], [1192.0, 7013.0], [1272.0, 2691.0], [1276.0, 3299.0], [1248.0, 3821.0], [1252.0, 3776.0], [1268.0, 3802.0], [1264.0, 6488.0], [1224.0, 3783.0], [1216.0, 5821.5], [1244.0, 5986.5], [1240.0, 6997.0], [1236.0, 2759.0], [1232.0, 4778.333333333333], [1260.0, 6593.0], [1328.0, 4605.0], [1312.0, 3730.0], [1316.0, 6277.0], [1332.0, 4427.0], [1292.0, 5835.0], [1288.0, 5806.0], [1284.0, 6005.0], [1280.0, 4394.0], [1308.0, 3526.0], [1304.0, 2312.0], [1300.0, 5805.0], [1296.0, 5677.0], [1320.0, 6468.0], [1396.0, 4541.0], [1392.0, 3471.0], [1376.0, 3691.0], [1380.0, 3609.0], [1400.0, 1888.0], [1348.0, 3624.0], [1352.0, 4275.0], [1356.0, 6276.0], [1372.0, 6260.0], [1364.0, 6847.0], [1360.0, 3279.0], [1388.0, 7158.0], [1384.0, 4054.0], [1412.0, 2383.0], [1456.0, 2035.0], [1468.0, 6286.0], [1464.0, 3444.0], [1408.0, 3583.0], [1416.0, 6411.5], [1436.0, 5963.5], [1432.0, 4402.0], [1424.0, 2939.0], [1440.0, 7189.0], [1520.0, 1800.0], [1508.0, 1093.0], [1528.0, 1098.0], [1524.0, 5281.0], [1472.0, 6052.0], [1476.0, 5280.5], [1480.0, 2770.0], [1484.0, 3384.0], [1500.0, 1732.0], [1492.0, 6298.0], [1516.0, 2884.0], [1512.0, 5514.0], [1536.0, 6263.0], [1588.0, 4742.0], [1564.0, 1104.0], [1544.0, 2248.3333333333335], [1560.0, 1096.0], [1552.0, 2167.0], [1580.0, 6462.0], [1568.0, 6077.0], [1612.0, 5026.666666666667], [1604.0, 5382.0], [1644.0, 5261.0], [1640.0, 3618.75], [1628.0, 4645.5], [1624.0, 3816.5], [1620.0, 1106.0], [1712.0, 3873.0], [1720.0, 4152.0], [1672.0, 3692.6666666666665], [1668.0, 4489.333333333333], [1664.0, 3147.0], [1700.0, 4116.5], [1684.0, 4125.333333333333], [1680.0, 3027.5], [1760.0, 3619.0], [1764.0, 5614.0], [1784.0, 1977.0], [1780.0, 6355.0], [1776.0, 6811.0], [1736.0, 1315.0], [1732.0, 6850.0], [1768.0, 1467.0], [1848.0, 1104.0], [1824.0, 1459.0], [1828.0, 3676.0], [1832.0, 1925.5], [1852.0, 1109.0], [1844.0, 5564.0], [1840.0, 1542.0], [1792.0, 3929.5], [1804.0, 4822.0], [1820.0, 5048.0], [1812.0, 4078.0], [1808.0, 1999.0], [1836.0, 4145.0], [1864.0, 1364.0], [1888.0, 1207.0], [1908.0, 1320.0], [1868.0, 1260.0], [1860.0, 1096.0], [1856.0, 1427.0], [1880.0, 1596.0], [1876.0, 3490.0], [1872.0, 1385.0], [1972.0, 4077.0], [1980.0, 1423.0], [1956.0, 3713.5], [1960.0, 3448.0], [1932.0, 5108.0], [1924.0, 5888.0], [1920.0, 3931.0], [1940.0, 2745.0], [1936.0, 5291.0], [2036.0, 1476.0], [2040.0, 1394.0], [2044.0, 6550.0], [2024.0, 2929.0], [2032.0, 1175.0], [1992.0, 5334.0], [1996.0, 2675.0], [2012.0, 2420.0], [2004.0, 4149.0], [2000.0, 1302.0], [2144.0, 1643.0], [2128.0, 3594.0], [2168.0, 3388.0], [2152.0, 1394.0], [2072.0, 3669.0], [2064.0, 1564.0], [2048.0, 1531.0], [2096.0, 1102.0], [2088.0, 1177.0], [2080.0, 3501.0], [2280.0, 6339.0], [2288.0, 4156.0], [2240.0, 5180.5], [2256.0, 3787.0], [2272.0, 2984.0], [2200.0, 1308.0], [2232.0, 1095.0], [2224.0, 5522.0], [2216.0, 1092.0], [2208.0, 1921.0], [2416.0, 5287.0], [2368.0, 5926.0], [2384.0, 3545.0], [2392.0, 3253.3333333333335], [2424.0, 1113.0], [2408.0, 5325.0], [2400.0, 2650.0], [2320.0, 1224.0], [2304.0, 3878.0], [2360.0, 5644.0], [2352.0, 5681.0], [2344.0, 3113.0], [2336.0, 1866.0], [2528.0, 1103.0], [2496.0, 1076.0], [2512.0, 1093.0], [2552.0, 3219.0], [2448.0, 1462.5], [2488.0, 2648.0], [2480.0, 1102.0], [2472.0, 4130.25], [2464.0, 4080.25], [2632.0, 1923.0], [2624.0, 1937.0], [2640.0, 1956.6666666666667], [2648.0, 1576.0], [2680.0, 7328.0], [2656.0, 2003.0], [2576.0, 4921.0], [2616.0, 3816.0], [2800.0, 3479.0], [2752.0, 1204.0], [2768.0, 1495.0], [2808.0, 3496.5], [2688.0, 1715.0], [2704.0, 3449.0], [2712.0, 3691.0], [2736.0, 1228.0], [2728.0, 1224.5], [2928.0, 1559.0], [2936.0, 4005.5], [2880.0, 3023.25], [2888.0, 2320.0], [2896.0, 1376.6666666666667], [2904.0, 1706.5555555555554], [2920.0, 1988.25], [2824.0, 1114.0], [2872.0, 1825.25], [2864.0, 2688.0], [2848.0, 2700.6666666666665], [3000.0, 2802.7828800613675], [2944.0, 4018.0], [2992.0, 3705.285714285714], [2952.0, 3696.0], [2960.0, 3279.0], [2968.0, 3066.0], [2984.0, 2017.5], [2976.0, 1844.0], [2161.0, 2234.0], [2113.0, 2497.0], [2121.0, 1267.0], [2129.0, 1495.0], [2137.0, 2354.5], [2153.0, 1099.0], [2145.0, 2994.0], [2073.0, 1478.0], [2065.0, 6514.0], [2057.0, 1898.0], [2049.0, 1098.0], [2105.0, 2698.0], [2097.0, 1574.0], [2089.0, 2168.0], [2281.0, 2176.0], [2297.0, 6038.5], [2249.0, 4752.5], [2265.0, 4942.0], [2193.0, 1420.0], [2185.0, 2923.0], [2177.0, 1549.5], [2233.0, 3458.0], [2401.0, 1141.0], [2369.0, 2786.0], [2385.0, 4507.0], [2425.0, 1101.5], [2305.0, 3086.0], [2321.0, 4355.0], [2361.0, 2275.0], [2353.0, 2982.0], [2345.0, 4370.0], [2545.0, 3403.0], [2553.0, 1099.0], [2497.0, 1095.0], [2513.0, 5692.0], [2529.0, 3266.5], [2433.0, 3121.75], [2441.0, 3013.3333333333335], [2449.0, 1099.0], [2457.0, 3987.5], [2489.0, 5234.0], [2481.0, 4415.666666666667], [2673.0, 2975.0], [2625.0, 1697.0], [2633.0, 3531.0], [2641.0, 1100.0], [2649.0, 4028.0], [2665.0, 1375.6666666666667], [2657.0, 1565.3333333333333], [2577.0, 1098.0], [2569.0, 3393.5], [2561.0, 5232.333333333333], [2617.0, 1701.0], [2609.0, 1794.0], [2601.0, 1890.3333333333333], [2593.0, 3637.0], [2793.0, 2948.0], [2801.0, 2284.25], [2753.0, 1104.0], [2761.0, 1445.6666666666667], [2769.0, 1262.5], [2777.0, 3767.0], [2689.0, 3337.0], [2697.0, 2852.6666666666665], [2745.0, 4520.0], [2737.0, 1316.0], [2729.0, 3363.0], [2721.0, 3778.75], [2937.0, 4781.333333333333], [2921.0, 1648.0], [2881.0, 1588.2857142857144], [2889.0, 3768.5], [2897.0, 556.0], [2905.0, 1941.75], [2913.0, 2714.6666666666665], [2841.0, 1844.0], [2833.0, 4208.5], [2825.0, 2111.0], [2817.0, 5563.0], [2873.0, 2997.333333333333], [2865.0, 2392.0], [2849.0, 1239.0], [2993.0, 2750.5925925925926], [2945.0, 2635.3333333333335], [2953.0, 3796.0], [2985.0, 1263.3333333333333], [2977.0, 2446.0], [1081.0, 3390.0], [1085.0, 3941.0], [1057.0, 6870.0], [1061.0, 3080.0], [1065.0, 8026.0], [1077.0, 6360.0], [1073.0, 4974.0], [1037.0, 6167.0], [1033.0, 7576.0], [1025.0, 6981.0], [1053.0, 6367.0], [1049.0, 2711.0], [1045.0, 3403.0], [1041.0, 6152.0], [1069.0, 5247.0], [1145.0, 6905.0], [1149.0, 5229.0], [1125.0, 6356.0], [1121.0, 6814.0], [1141.0, 3722.0], [1137.0, 4325.666666666667], [1101.0, 7331.0], [1097.0, 5828.5], [1093.0, 7132.0], [1089.0, 7545.0], [1117.0, 3923.0], [1113.0, 3636.0], [1109.0, 3402.0], [1153.0, 6742.0], [1213.0, 4146.0], [1205.0, 2555.0], [1181.0, 7867.0], [1157.0, 8163.0], [1165.0, 7466.0], [1177.0, 5949.5], [1173.0, 6750.0], [1169.0, 7459.0], [1197.0, 4248.5], [1189.0, 5406.0], [1273.0, 5963.0], [1253.0, 7788.0], [1257.0, 4881.5], [1277.0, 6007.0], [1269.0, 4877.0], [1265.0, 3924.0], [1229.0, 6370.0], [1225.0, 4822.0], [1245.0, 3794.0], [1241.0, 5167.0], [1237.0, 4660.0], [1261.0, 5797.0], [1333.0, 5498.0], [1313.0, 5821.0], [1317.0, 2793.0], [1337.0, 3415.0], [1329.0, 3100.0], [1293.0, 3938.0], [1285.0, 3998.0], [1281.0, 6063.0], [1297.0, 4155.0], [1325.0, 3978.0], [1321.0, 7453.0], [1401.0, 3488.0], [1405.0, 5739.0], [1377.0, 4525.0], [1381.0, 3357.0], [1357.0, 3095.0], [1353.0, 5692.0], [1349.0, 3687.0], [1345.0, 3680.5], [1385.0, 4005.0], [1421.0, 6224.5], [1465.0, 2874.0], [1417.0, 4241.0], [1413.0, 6323.0], [1437.0, 2997.0], [1429.0, 4473.666666666667], [1425.0, 5944.5], [1453.0, 3995.5], [1449.0, 2572.0], [1445.0, 5728.0], [1525.0, 5879.0], [1513.0, 1101.0], [1533.0, 3758.0], [1505.0, 4133.5], [1477.0, 3053.0], [1473.0, 4382.0], [1481.0, 6234.0], [1485.0, 2810.0], [1501.0, 4093.0], [1497.0, 1208.0], [1493.0, 2118.0], [1489.0, 5822.0], [1517.0, 1097.0], [1585.0, 5030.0], [1589.0, 1113.0], [1549.0, 5951.0], [1545.0, 3954.0], [1581.0, 4841.0], [1565.0, 2947.5], [1561.0, 3061.6666666666665], [1553.0, 6089.0], [1657.0, 4249.666666666667], [1661.0, 4737.666666666667], [1649.0, 5198.0], [1609.0, 2279.6666666666665], [1617.0, 3198.5], [1645.0, 7141.0], [1633.0, 5497.0], [1677.0, 5111.333333333333], [1697.0, 5203.333333333333], [1721.0, 4640.0], [1713.0, 2990.0], [1669.0, 1112.0], [1665.0, 6432.0], [1693.0, 5618.666666666667], [1681.0, 6453.0], [1705.0, 4788.5], [1741.0, 2862.5], [1785.0, 3866.0], [1729.0, 4625.0], [1733.0, 2478.0], [1737.0, 1707.0], [1757.0, 6837.0], [1773.0, 2319.0], [1769.0, 4647.0], [1765.0, 4591.0], [1761.0, 3141.0], [1849.0, 4332.0], [1853.0, 1107.0], [1825.0, 1635.0], [1833.0, 1542.0], [1845.0, 3976.0], [1841.0, 1770.0], [1801.0, 4239.0], [1797.0, 3704.5], [1793.0, 2750.0], [1817.0, 3885.5], [1813.0, 1581.0], [1809.0, 1813.0], [1913.0, 4151.333333333333], [1893.0, 1106.0], [1901.0, 1112.0], [1917.0, 6394.0], [1905.0, 1621.0], [1869.0, 1100.0], [1865.0, 1098.0], [1861.0, 1093.0], [1857.0, 1098.5], [1877.0, 1284.0], [1873.0, 2693.0], [1929.0, 1695.3333333333333], [1953.0, 2376.0], [1969.0, 2516.5], [1933.0, 4813.0], [1925.0, 1108.0], [1921.0, 1111.0], [1945.0, 2845.5], [1941.0, 3837.0], [1937.0, 2789.0], [2041.0, 1223.0], [2017.0, 4017.5], [2021.0, 1256.0], [2025.0, 1548.0], [2045.0, 1103.0], [2037.0, 3733.0], [1989.0, 1151.5], [1993.0, 4793.0], [1997.0, 3119.0], [2013.0, 2793.0], [2009.0, 2450.0], [2005.0, 2172.0], [2001.0, 1566.0], [2170.0, 2731.5], [2146.0, 1455.0], [2114.0, 1749.3333333333333], [2066.0, 2579.0], [2058.0, 1509.0], [2050.0, 3319.0], [2098.0, 5360.0], [2274.0, 5356.0], [2202.0, 2776.0], [2250.0, 6355.0], [2242.0, 5824.5], [2266.0, 4198.0], [2290.0, 3160.5], [2194.0, 1781.0], [2186.0, 1102.0], [2178.0, 1882.0], [2226.0, 3557.5], [2218.0, 1583.5], [2210.0, 1101.0], [2410.0, 5252.0], [2418.0, 1396.0], [2378.0, 1910.0], [2386.0, 5902.0], [2394.0, 1827.0], [2402.0, 3656.0], [2322.0, 1190.0], [2314.0, 3293.666666666667], [2306.0, 1319.0], [2362.0, 4255.0], [2354.0, 1881.0], [2346.0, 5954.0], [2338.0, 3652.0], [2498.0, 3644.0], [2554.0, 1095.0], [2506.0, 1674.3333333333333], [2514.0, 3110.0], [2522.0, 3853.0], [2490.0, 2154.0], [2482.0, 4130.0], [2466.0, 5664.666666666667], [2586.0, 2624.0], [2682.0, 2606.5], [2626.0, 2470.0], [2642.0, 5467.0], [2650.0, 3817.0], [2674.0, 4237.0], [2578.0, 3174.0], [2570.0, 1240.0], [2562.0, 3544.0], [2618.0, 7384.0], [2610.0, 3861.0], [2594.0, 1099.0], [2802.0, 3383.4], [2794.0, 1655.0], [2754.0, 1300.0], [2762.0, 1619.0], [2770.0, 1240.0], [2778.0, 1958.0], [2810.0, 3951.0], [2786.0, 1425.75], [2698.0, 5095.0], [2706.0, 1870.5], [2714.0, 1340.5], [2746.0, 1116.6666666666667], [2738.0, 44.0], [2730.0, 1799.0], [2722.0, 1336.0], [2930.0, 2896.0], [2882.0, 433.6666666666667], [2890.0, 627.5], [2898.0, 1103.0], [2906.0, 1090.0], [2938.0, 6001.0], [2914.0, 2557.777777777778], [2842.0, 2171.1428571428573], [2834.0, 2595.0], [2818.0, 2317.5], [2874.0, 1808.0], [2866.0, 2903.2], [2858.0, 2443.333333333333], [2850.0, 2990.0], [2954.0, 4045.3], [2946.0, 4579.0], [2962.0, 1884.0], [2970.0, 3764.0], [2994.0, 1096.0], [2163.0, 1767.0], [2123.0, 2749.5], [2139.0, 3690.0], [2171.0, 3181.0], [2155.0, 2103.0], [2075.0, 1659.0], [2051.0, 1500.0], [2107.0, 3875.5], [2099.0, 1411.0], [2091.0, 1502.0], [2083.0, 2753.3333333333335], [2291.0, 2015.0], [2299.0, 3442.0], [2243.0, 1295.0], [2251.0, 5497.0], [2259.0, 4737.0], [2195.0, 1864.0], [2179.0, 1894.0], [2235.0, 5948.0], [2227.0, 1290.0], [2419.0, 1130.0], [2371.0, 2559.25], [2379.0, 3375.0], [2387.0, 3972.0], [2395.0, 2888.0], [2411.0, 2968.5], [2403.0, 5063.5], [2307.0, 1862.0], [2331.0, 2594.0], [2363.0, 1153.0], [2347.0, 6232.0], [2555.0, 5318.0], [2499.0, 1098.0], [2515.0, 6061.0], [2523.0, 3119.0], [2539.0, 5133.75], [2531.0, 2197.6666666666665], [2443.0, 2677.0], [2459.0, 2266.0], [2491.0, 1096.0], [2475.0, 2137.3333333333335], [2587.0, 1111.0], [2627.0, 7379.0], [2635.0, 2467.5], [2643.0, 3930.5], [2579.0, 3312.0], [2571.0, 5814.0], [2619.0, 3516.0], [2611.0, 7837.0], [2603.0, 2653.0], [2595.0, 6009.0], [2699.0, 2242.0], [2787.0, 1099.0], [2707.0, 2162.0], [2771.0, 1371.3333333333333], [2779.0, 2154.0], [2795.0, 4078.3333333333335], [2691.0, 3394.0], [2715.0, 2387.0], [2747.0, 1716.0], [2739.0, 1102.0], [2731.0, 3638.0], [2723.0, 1100.0], [2923.0, 2362.75], [2931.0, 962.0], [2939.0, 2678.8], [2891.0, 1908.0], [2899.0, 941.0], [2907.0, 1101.0], [2915.0, 2199.6666666666665], [2843.0, 4134.5], [2835.0, 1392.0], [2827.0, 1880.142857142857], [2819.0, 5563.0], [2875.0, 3279.0], [2867.0, 1103.0], [2851.0, 3293.0], [2955.0, 2653.6249999999995], [2947.0, 5986.0], [2971.0, 3160.5], [2995.0, 2900.1666666666665], [2987.0, 3084.230769230769], [2979.0, 3411.3749999999995], [539.0, 5484.0], [541.0, 7730.0], [537.0, 6918.0], [513.0, 6250.0], [535.0, 8923.0], [533.0, 5817.0], [529.0, 8319.0], [527.0, 7828.0], [525.0, 6799.0], [523.0, 9501.0], [521.0, 6219.0], [575.0, 7364.0], [569.0, 5599.5], [551.0, 7056.0], [549.0, 6707.875], [567.0, 5455.5], [565.0, 6390.0], [563.0, 5778.0], [561.0, 5336.0], [557.0, 5440.0], [555.0, 4493.0], [553.0, 6951.0], [605.0, 6032.0], [607.0, 4699.0], [603.0, 4634.0], [601.0, 7515.0], [599.0, 7228.0], [597.0, 4645.0], [595.0, 6560.0], [593.0, 4365.0], [591.0, 7530.0], [579.0, 7630.0], [577.0, 5581.0], [583.0, 6213.0], [581.0, 6196.0], [587.0, 4492.0], [585.0, 5957.0], [613.0, 7717.0], [637.0, 4031.0], [633.0, 4481.0], [611.0, 7359.0], [609.0, 4574.0], [631.0, 4670.0], [629.0, 7752.0], [627.0, 5271.0], [623.0, 7183.0], [621.0, 7397.0], [619.0, 6551.5], [617.0, 5453.666666666667], [671.0, 5138.0], [667.0, 4854.0], [647.0, 5534.0], [645.0, 7300.0], [643.0, 6069.5], [641.0, 8200.0], [663.0, 7657.0], [661.0, 5218.0], [659.0, 5708.0], [657.0, 5982.0], [655.0, 5997.0], [653.0, 5995.0], [651.0, 4893.0], [683.0, 8534.0], [681.0, 6395.0], [679.0, 5689.0], [677.0, 5021.0], [675.0, 6548.0], [673.0, 7209.0], [735.0, 5858.666666666667], [729.0, 6497.666666666667], [723.0, 6643.5], [721.0, 5619.5], [719.0, 5362.0], [763.0, 6734.333333333333], [765.0, 6338.0], [761.0, 4350.0], [759.0, 5346.0], [755.0, 6977.0], [751.0, 6140.333333333333], [747.0, 6859.666666666667], [745.0, 7494.0], [741.0, 4578.0], [737.0, 5370.0], [797.0, 6870.666666666667], [799.0, 4288.0], [795.0, 4000.0], [793.0, 4710.0], [791.0, 5979.5], [789.0, 6100.0], [787.0, 6945.0], [785.0, 4856.0], [783.0, 7602.0], [775.0, 6191.4], [771.0, 5492.6], [779.0, 6054.333333333333], [825.0, 6891.0], [819.0, 4942.5], [831.0, 5711.833333333334], [827.0, 4416.0], [807.0, 7923.0], [803.0, 5274.8], [813.0, 6640.0], [809.0, 7893.0], [823.0, 6097.0], [821.0, 6262.5], [861.0, 6675.0], [863.0, 6895.0], [851.0, 7122.0], [853.0, 4091.0], [859.0, 3881.0], [857.0, 6777.0], [845.0, 6521.857142857143], [835.0, 4039.0], [839.0, 6557.5], [837.0, 3666.0], [855.0, 3932.0], [891.0, 6243.0], [895.0, 4271.0], [885.0, 4448.0], [893.0, 6401.0], [889.0, 6591.0], [879.0, 5521.0], [865.0, 3229.0], [867.0, 3761.0], [869.0, 6010.0], [877.0, 6379.0], [875.0, 6875.0], [873.0, 4845.0], [887.0, 4457.0], [925.0, 4239.0], [927.0, 4710.0], [913.0, 3358.0], [915.0, 3409.0], [923.0, 4672.0], [921.0, 5972.5], [903.0, 6552.0], [901.0, 3371.0], [897.0, 5411.0], [911.0, 4955.5], [909.0, 3359.0], [907.0, 5835.0], [905.0, 4432.0], [919.0, 5839.5], [917.0, 3861.5], [957.0, 4574.0], [959.0, 5121.0], [945.0, 6444.0], [947.0, 7134.0], [949.0, 3790.0], [955.0, 2434.0], [953.0, 6368.0], [929.0, 4268.0], [931.0, 6783.0], [933.0, 4283.0], [935.0, 6128.0], [939.0, 5724.5], [937.0, 5888.0], [951.0, 3556.0], [965.0, 3987.0], [991.0, 5235.0], [989.0, 4265.25], [985.0, 3407.0], [963.0, 6176.0], [961.0, 6047.0], [977.0, 6073.0], [975.0, 6404.333333333333], [971.0, 6145.0], [1017.0, 7062.0], [1023.0, 6634.0], [1009.0, 4159.0], [1021.0, 5645.333333333333], [1007.0, 5703.0], [999.0, 6433.0], [997.0, 4180.0], [1005.0, 6237.0], [1015.0, 3458.0], [1013.0, 4917.0], [1082.0, 3911.0], [1086.0, 5013.0], [1058.0, 5018.0], [1062.0, 5003.0], [1066.0, 2910.0], [1078.0, 3277.0], [1074.0, 5522.0], [1054.0, 5824.0], [1026.0, 3604.0], [1030.0, 3681.5], [1034.0, 7058.0], [1038.0, 6053.0], [1050.0, 6119.0], [1046.0, 5123.0], [1042.0, 3309.0], [1070.0, 6436.0], [1138.0, 2547.0], [1146.0, 6814.0], [1150.0, 6280.0], [1122.0, 3912.0], [1142.0, 7827.0], [1090.0, 7099.0], [1094.0, 6791.0], [1114.0, 5929.0], [1110.0, 5416.0], [1106.0, 5337.0], [1134.0, 4990.5], [1130.0, 5324.666666666667], [1126.0, 3410.0], [1206.0, 3674.0], [1202.0, 3391.0], [1214.0, 6996.0], [1190.0, 4212.0], [1186.0, 3884.75], [1210.0, 4372.666666666667], [1162.0, 7185.5], [1158.0, 3203.0], [1154.0, 3882.0], [1182.0, 6047.0], [1170.0, 6284.0], [1198.0, 2541.0], [1266.0, 6061.0], [1274.0, 3478.0], [1250.0, 4720.0], [1258.0, 3583.0], [1254.0, 4034.0], [1270.0, 2752.0], [1226.0, 3804.0], [1218.0, 4098.0], [1246.0, 6084.0], [1242.0, 7789.0], [1238.0, 4609.0], [1234.0, 4640.5], [1262.0, 4082.0], [1334.0, 3088.0], [1338.0, 3123.0], [1318.0, 4765.0], [1342.0, 3569.6666666666665], [1314.0, 2105.0], [1294.0, 6581.0], [1282.0, 4292.0], [1302.0, 6287.0], [1298.0, 3806.0], [1326.0, 5984.0], [1322.0, 6577.0], [1394.0, 3927.5], [1402.0, 6198.0], [1406.0, 3225.0], [1378.0, 2460.0], [1374.0, 4550.0], [1346.0, 5867.0], [1350.0, 6746.0], [1358.0, 7356.0], [1370.0, 4665.0], [1366.0, 3141.6666666666665], [1362.0, 3173.0], [1386.0, 6727.0], [1382.0, 3238.0], [1458.0, 5000.5], [1442.0, 4179.5], [1438.0, 7192.0], [1410.0, 2677.6666666666665], [1414.0, 4198.0], [1434.0, 5523.0], [1426.0, 4956.0], [1454.0, 3934.0], [1450.0, 4710.0], [1446.0, 3409.0], [1522.0, 1102.0], [1530.0, 1098.0], [1534.0, 1101.0], [1506.0, 6199.0], [1510.0, 4166.0], [1502.0, 3126.0], [1474.0, 3854.0], [1478.0, 4377.0], [1482.0, 3074.0], [1486.0, 4021.5], [1498.0, 3256.5], [1518.0, 1094.0], [1514.0, 5837.0], [1598.0, 6777.666666666667], [1574.0, 4703.5], [1590.0, 4043.0], [1586.0, 5563.0], [1542.0, 6465.5], [1550.0, 1097.0], [1558.0, 1101.0], [1582.0, 3188.5], [1578.0, 3975.0], [1614.0, 3449.5], [1654.0, 4760.5], [1662.0, 3791.0], [1650.0, 4224.5], [1606.0, 6329.0], [1602.0, 2751.333333333333], [1638.0, 5760.0], [1630.0, 6826.0], [1622.0, 4454.0], [1714.0, 6861.0], [1726.0, 6260.0], [1718.0, 3575.3333333333335], [1710.0, 4457.25], [1782.0, 3718.5], [1786.0, 3528.0], [1790.0, 4666.0], [1762.0, 6825.0], [1754.0, 3799.6666666666665], [1742.0, 3087.0], [1734.0, 2635.0], [1730.0, 4177.0], [1746.0, 1685.0], [1774.0, 4215.0], [1770.0, 2790.5], [1766.0, 3895.0], [1850.0, 1105.0], [1854.0, 1104.0], [1826.0, 6137.0], [1830.0, 3182.5], [1834.0, 6107.0], [1846.0, 1785.0], [1842.0, 6669.0], [1822.0, 3186.5], [1794.0, 4553.0], [1802.0, 1588.0], [1798.0, 7004.0], [1806.0, 6197.5], [1818.0, 1095.0], [1814.0, 2946.0], [1810.0, 3723.0], [1838.0, 3496.0], [1866.0, 1093.0], [1910.0, 2316.0], [1918.0, 4588.5], [1890.0, 2514.0], [1894.0, 3463.0], [1870.0, 2208.0], [1862.0, 1102.0], [1858.0, 5023.0], [1886.0, 2193.6666666666665], [1882.0, 1412.0], [1878.0, 1172.0], [1874.0, 1348.0], [1902.0, 3966.0], [1978.0, 3766.5], [1954.0, 2817.1666666666665], [1958.0, 2631.0], [1966.0, 2879.333333333333], [1974.0, 2348.0], [1970.0, 5521.0], [1930.0, 5521.0], [1922.0, 2715.0], [1942.0, 1111.0], [2046.0, 1176.0], [2018.0, 3581.0], [2022.0, 1409.0], [2026.0, 1488.0], [2030.0, 3240.0], [2042.0, 1317.0], [2038.0, 5455.0], [2034.0, 2717.0], [1994.0, 1628.0], [1998.0, 1672.0], [2076.0, 1154.0], [2164.0, 1091.0], [2116.0, 1099.0], [2140.0, 1416.0], [2132.0, 1978.6666666666667], [2148.0, 1317.5], [2068.0, 2447.5], [2060.0, 4748.0], [2052.0, 4385.0], [2092.0, 4635.0], [2084.0, 2515.0], [2276.0, 2926.0], [2252.0, 6025.0], [2260.0, 2057.0], [2268.0, 2917.5], [2284.0, 5757.666666666667], [2188.0, 4425.0], [2180.0, 1439.0], [2236.0, 2947.0], [2228.0, 6146.0], [2212.0, 1722.6666666666667], [2428.0, 3825.333333333333], [2380.0, 1870.0], [2372.0, 1309.0], [2388.0, 2615.0], [2412.0, 1218.0], [2316.0, 1180.0], [2356.0, 4162.5], [2340.0, 3603.5], [2508.0, 1092.0], [2500.0, 2899.0], [2516.0, 1100.0], [2524.0, 1815.3333333333333], [2548.0, 5155.6], [2540.0, 3194.2], [2444.0, 1802.0], [2660.0, 4321.0], [2628.0, 3007.0], [2652.0, 3508.0], [2684.0, 1542.3333333333333], [2588.0, 4911.0], [2580.0, 1168.0], [2564.0, 2948.0], [2620.0, 3849.0], [2612.0, 1262.0], [2604.0, 2102.0], [2804.0, 4042.0], [2764.0, 1157.5], [2812.0, 1135.0], [2756.0, 1100.0], [2780.0, 42.0], [2788.0, 2813.25], [2692.0, 1471.0], [2700.0, 3451.0], [2708.0, 1941.0], [2716.0, 1912.0], [2740.0, 4357.0], [2732.0, 1474.0], [2724.0, 1358.5], [2932.0, 2406.25], [2924.0, 730.0], [2884.0, 4363.333333333333], [2892.0, 1902.75], [2900.0, 2785.6], [2940.0, 3491.75], [2916.0, 1818.5714285714287], [2844.0, 1307.0], [2836.0, 1618.75], [2828.0, 2618.0], [2876.0, 5446.0], [2868.0, 3659.666666666667], [2860.0, 3423.0], [2948.0, 2713.0], [2956.0, 1959.0], [2996.0, 3521.2], [2964.0, 2740.8], [2972.0, 1486.8], [2988.0, 1728.1428571428569], [2980.0, 4111.333333333333], [2157.0, 1403.0], [2125.0, 1407.5], [2133.0, 1388.0], [2141.0, 1425.0], [2173.0, 4684.0], [2149.0, 6213.0], [2077.0, 2043.0], [2101.0, 1096.5], [2085.0, 2508.0], [2301.0, 4063.0], [2245.0, 3448.5], [2181.0, 1490.0], [2237.0, 2044.0], [2229.0, 1354.0], [2221.0, 2926.3333333333335], [2213.0, 3109.0], [2429.0, 5876.0], [2421.0, 1109.0], [2381.0, 1109.0], [2373.0, 1714.5], [2389.0, 3127.0], [2397.0, 2856.5], [2413.0, 1098.0], [2405.0, 6007.5], [2309.0, 5986.0], [2317.0, 6284.0], [2325.0, 2805.0], [2333.0, 1880.5], [2365.0, 4352.5], [2357.0, 4255.0], [2349.0, 5526.0], [2541.0, 7385.0], [2549.0, 7420.0], [2501.0, 3195.0], [2517.0, 2047.0], [2493.0, 1102.5], [2437.0, 2681.75], [2445.0, 5867.0], [2453.0, 2977.3333333333335], [2461.0, 5424.0], [2485.0, 3310.333333333333], [2469.0, 1630.5], [2677.0, 3707.0], [2685.0, 1095.0], [2629.0, 5663.0], [2637.0, 1098.0], [2645.0, 1972.0], [2653.0, 3531.0], [2669.0, 3340.75], [2589.0, 1113.0], [2581.0, 1651.0], [2573.0, 3682.0], [2613.0, 3280.5], [2605.0, 1096.0], [2597.0, 1614.5], [2813.0, 4205.0], [2757.0, 1124.0], [2773.0, 4854.0], [2781.0, 1618.6666666666667], [2805.0, 1805.0], [2693.0, 744.5], [2701.0, 5061.0], [2709.0, 1492.5], [2717.0, 1100.0], [2749.0, 601.75], [2741.0, 1389.0], [2733.0, 1732.0], [2725.0, 5809.0], [2941.0, 3338.714285714286], [2893.0, 1136.0], [2901.0, 2384.6666666666665], [2909.0, 1650.25], [2917.0, 1266.0], [2845.0, 4176.5], [2837.0, 2571.5], [2829.0, 4823.0], [2821.0, 2738.3333333333335], [2877.0, 1259.0], [2869.0, 2115.6666666666665], [2861.0, 1304.0], [2853.0, 1425.5], [2949.0, 3996.3333333333335], [2957.0, 3471.0], [2973.0, 3461.5], [2989.0, 1215.5], [2981.0, 3824.0], [1075.0, 5318.0], [1087.0, 7354.0], [1059.0, 6034.0], [1063.0, 3207.0], [1067.0, 4933.0], [1079.0, 4968.0], [1039.0, 6131.0], [1035.0, 6010.0], [1031.0, 4964.0], [1027.0, 3404.0], [1055.0, 6167.0], [1047.0, 6946.0], [1043.0, 3731.0], [1071.0, 6450.0], [1099.0, 6680.5], [1139.0, 5190.0], [1151.0, 6848.0], [1147.0, 7049.0], [1095.0, 8208.0], [1091.0, 8001.0], [1119.0, 4015.0], [1107.0, 4788.0], [1131.0, 6413.0], [1127.0, 3113.0], [1163.0, 7348.0], [1203.0, 9505.0], [1191.0, 7296.0], [1207.0, 3825.0], [1155.0, 5171.0], [1159.0, 6362.0], [1167.0, 6736.0], [1179.0, 6655.5], [1171.0, 3886.0], [1199.0, 3785.0], [1195.0, 5274.333333333333], [1275.0, 3167.0], [1279.0, 4233.0], [1255.0, 4051.0], [1259.0, 3071.0], [1271.0, 3474.0], [1267.0, 4444.0], [1247.0, 4053.0], [1223.0, 5785.4], [1235.0, 4211.0], [1263.0, 7284.0], [1291.0, 4994.0], [1339.0, 3408.5], [1319.0, 5855.0], [1343.0, 4729.0], [1315.0, 3010.0], [1287.0, 5070.5], [1311.0, 3890.0], [1307.0, 3302.6666666666665], [1303.0, 4911.0], [1299.0, 4544.0], [1323.0, 2662.0], [1399.0, 3921.666666666667], [1383.0, 1912.0], [1407.0, 2230.0], [1379.0, 5605.0], [1395.0, 2457.0], [1359.0, 6284.0], [1355.0, 3097.5], [1351.0, 2794.0], [1347.0, 3299.0], [1371.0, 5658.0], [1367.0, 2277.0], [1391.0, 3432.6666666666665], [1387.0, 3474.0], [1467.0, 6306.5], [1471.0, 4207.0], [1463.0, 6491.0], [1459.0, 6238.0], [1423.0, 5279.0], [1419.0, 5080.0], [1439.0, 6247.0], [1455.0, 4976.0], [1479.0, 4637.0], [1527.0, 2027.5], [1523.0, 3779.0], [1503.0, 4456.0], [1487.0, 4456.0], [1499.0, 2225.0], [1495.0, 3966.0], [1491.0, 6521.0], [1519.0, 4015.0], [1515.0, 2969.0], [1511.0, 5963.0], [1507.0, 7081.0], [1551.0, 3200.0], [1595.0, 5244.0], [1599.0, 1128.0], [1591.0, 2163.0], [1547.0, 3052.5], [1539.0, 4920.0], [1579.0, 3404.5], [1571.0, 3432.333333333333], [1563.0, 4192.0], [1555.0, 3667.5], [1659.0, 2579.0], [1635.0, 2163.3333333333335], [1631.0, 1808.0], [1615.0, 6433.0], [1623.0, 5329.0], [1619.0, 3941.0], [1647.0, 3444.3333333333335], [1643.0, 2908.0], [1727.0, 4233.0], [1703.0, 4030.75], [1723.0, 4272.5], [1699.0, 1117.0], [1715.0, 5626.0], [1675.0, 3436.0], [1691.0, 6615.666666666667], [1687.0, 6911.0], [1711.0, 6771.0], [1707.0, 8517.0], [1779.0, 5407.0], [1763.0, 1682.0], [1787.0, 2799.0], [1783.0, 3578.0], [1759.0, 4893.5], [1731.0, 6234.0], [1739.0, 5431.5], [1743.0, 8877.0], [1751.0, 2691.75], [1747.0, 3051.0], [1843.0, 6195.0], [1851.0, 3665.0], [1827.0, 1591.0], [1847.0, 1095.0], [1807.0, 3711.0], [1803.0, 3765.0], [1795.0, 1923.0], [1819.0, 6749.0], [1815.0, 3668.0], [1811.0, 6169.0], [1839.0, 1098.0], [1835.0, 1092.0], [1907.0, 1834.5], [1891.0, 1146.0], [1895.0, 3471.5], [1899.0, 2351.25], [1915.0, 2455.5], [1871.0, 1185.0], [1867.0, 1101.0], [1863.0, 1097.0], [1883.0, 3372.0], [1879.0, 5595.0], [1875.0, 1094.0], [1903.0, 3487.0], [1975.0, 5318.5], [1971.0, 2600.0], [1983.0, 1926.3333333333333], [1963.0, 1824.0], [1927.0, 4798.0], [1923.0, 1388.0], [1943.0, 2618.0], [2043.0, 1199.0], [2047.0, 1215.0], [2019.0, 4415.0], [2027.0, 1228.0], [2031.0, 2672.0], [2035.0, 4636.0], [2015.0, 1608.5], [1987.0, 1562.25], [1991.0, 6211.0], [1995.0, 6251.0], [1999.0, 1222.0], [2011.0, 5791.0], [2007.0, 2707.5], [2003.0, 3733.5], [2078.0, 1183.0], [2150.0, 2021.0], [2126.0, 5302.0], [2166.0, 3183.5], [2070.0, 1093.0], [2054.0, 2135.0], [2110.0, 1116.0], [2102.0, 1448.0], [2094.0, 1169.0], [2086.0, 1163.0], [2206.0, 3569.5], [2302.0, 3995.0], [2262.0, 6347.0], [2294.0, 2583.0], [2190.0, 2204.5], [2238.0, 1097.0], [2222.0, 1372.0], [2214.0, 1358.0], [2326.0, 2082.0], [2422.0, 3967.0], [2430.0, 4234.0], [2374.0, 6136.0], [2382.0, 3229.0], [2398.0, 1104.0], [2318.0, 3133.0], [2366.0, 6143.0], [2358.0, 1097.0], [2350.0, 3808.5], [2550.0, 5826.0], [2502.0, 1158.0], [2558.0, 6568.0], [2510.0, 4495.333333333333], [2454.0, 2879.6666666666665], [2446.0, 1102.0], [2438.0, 4594.5], [2494.0, 7455.0], [2478.0, 4742.0], [2582.0, 6014.0], [2630.0, 3412.0], [2646.0, 3787.0], [2662.0, 3942.25], [2574.0, 3971.6666666666665], [2566.0, 3479.0], [2622.0, 2209.5], [2606.0, 1097.0], [2598.0, 1182.0], [2806.0, 1591.0], [2798.0, 3377.3333333333335], [2758.0, 591.5], [2766.0, 1269.0], [2774.0, 2299.6666666666665], [2782.0, 2445.714285714286], [2814.0, 2577.0], [2790.0, 2379.0], [2694.0, 3580.0], [2710.0, 1722.0], [2750.0, 1101.0], [2742.0, 1094.0], [2734.0, 1340.0], [2726.0, 1325.0], [2942.0, 5069.0], [2934.0, 1538.75], [2894.0, 3541.0], [2886.0, 3486.3333333333335], [2902.0, 2706.0], [2910.0, 2111.5454545454545], [2926.0, 2620.857142857143], [2918.0, 2795.4], [2846.0, 2307.6666666666665], [2838.0, 2535.0], [2822.0, 1093.0], [2870.0, 1098.0], [2958.0, 3395.5], [2966.0, 1794.8333333333333], [2974.0, 3128.333333333333], [2998.0, 3961.5], [2990.0, 3015.555555555556], [2982.0, 3410.75], [2167.0, 4224.0], [2159.0, 1100.5], [2175.0, 2643.0], [2119.0, 1589.6666666666667], [2127.0, 1412.0], [2135.0, 3761.5], [2151.0, 1114.0], [2079.0, 6283.0], [2063.0, 2579.75], [2055.0, 5727.0], [2111.0, 2214.0], [2095.0, 5962.0], [2087.0, 2095.0], [2295.0, 4385.333333333333], [2303.0, 4433.0], [2247.0, 5668.0], [2255.0, 1644.0], [2263.0, 2837.0], [2271.0, 3001.0], [2287.0, 2837.333333333333], [2279.0, 3681.0], [2207.0, 1295.0], [2199.0, 2364.25], [2191.0, 3015.0], [2183.0, 1793.5], [2231.0, 2648.5], [2223.0, 1296.0], [2215.0, 1648.0], [2415.0, 4164.0], [2375.0, 1096.0], [2383.0, 1523.5], [2391.0, 3191.0], [2423.0, 2266.0], [2407.0, 2698.0], [2367.0, 5375.0], [2311.0, 3702.0], [2359.0, 5887.0], [2351.0, 3118.0], [2343.0, 2281.333333333333], [2551.0, 4286.0], [2503.0, 3470.0], [2511.0, 1569.0], [2527.0, 2683.0], [2543.0, 3465.0], [2439.0, 1096.0], [2447.0, 5377.5], [2487.0, 4957.0], [2671.0, 1317.0], [2591.0, 3524.5], [2687.0, 2423.0], [2631.0, 1142.0], [2655.0, 1391.0], [2679.0, 3484.0], [2663.0, 1696.5], [2583.0, 2630.0], [2575.0, 4645.0], [2567.0, 2471.0], [2623.0, 5274.0], [2615.0, 2328.0], [2607.0, 6005.0], [2807.0, 3055.3636363636365], [2815.0, 3415.0], [2759.0, 572.0], [2767.0, 2051.6], [2783.0, 2313.0], [2791.0, 1394.0], [2751.0, 679.0], [2703.0, 3598.0], [2711.0, 2663.5], [2719.0, 1374.0], [2743.0, 1605.0], [2735.0, 1389.0], [2727.0, 5809.0], [2927.0, 1417.4], [2935.0, 2172.2], [2887.0, 2031.5], [2895.0, 1574.3333333333333], [2911.0, 2338.625], [2839.0, 2354.5], [2831.0, 1641.0], [2823.0, 3519.0], [2879.0, 2326.0], [2863.0, 1417.5], [2855.0, 2976.5], [2951.0, 2853.2], [2999.0, 3236.7272727272734], [2959.0, 3437.333333333333], [2967.0, 2052.2], [2975.0, 2014.75], [2991.0, 2035.0], [2983.0, 1864.6666666666667], [1.0, 11100.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2983.088984573887, 2822.6010738623777]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 43168.5, "minX": 1.68416202E12, "maxY": 616307.0166666667, "series": [{"data": [[1.68416214E12, 548753.85], [1.68416226E12, 547759.9333333333], [1.68416208E12, 616307.0166666667], [1.6841622E12, 592327.3666666667], [1.68416202E12, 51935.85], [1.68416232E12, 510712.23333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68416214E12, 466808.05], [1.68416226E12, 469278.7], [1.68416208E12, 523099.05], [1.6841622E12, 504501.3], [1.68416202E12, 43168.5], [1.68416232E12, 435241.65]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416232E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2644.719592105795, "minX": 1.68416202E12, "maxY": 3025.8816986680995, "series": [{"data": [[1.68416214E12, 2644.719592105795], [1.68416226E12, 2647.3398966328537], [1.68416208E12, 3025.8816986680995], [1.6841622E12, 2913.0499587414174], [1.68416202E12, 2796.259305729826], [1.68416232E12, 2855.7789907054957]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416232E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2643.950544763671, "minX": 1.68416202E12, "maxY": 3023.44193046183, "series": [{"data": [[1.68416214E12, 2643.950544763671], [1.68416226E12, 2646.664982450738], [1.68416208E12, 3023.44193046183], [1.6841622E12, 2912.66532127865], [1.68416202E12, 2768.1340443329136], [1.68416232E12, 2855.5067265506423]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416232E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.801176886449301, "minX": 1.68416202E12, "maxY": 1593.3808030112943, "series": [{"data": [[1.68416214E12, 21.686673645845463], [1.68416226E12, 28.24570910633709], [1.68416208E12, 119.60537969209592], [1.6841622E12, 26.478545545868695], [1.68416202E12, 1593.3808030112943], [1.68416232E12, 8.801176886449301]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416232E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.68416202E12, "maxY": 21178.0, "series": [{"data": [[1.68416214E12, 17389.0], [1.68416226E12, 18841.0], [1.68416208E12, 20252.0], [1.6841622E12, 21178.0], [1.68416202E12, 11163.0], [1.68416232E12, 17984.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68416214E12, 4550.800000000003], [1.68416226E12, 4756.9000000000015], [1.68416208E12, 8492.900000000001], [1.6841622E12, 8835.900000000001], [1.68416202E12, 8378.0], [1.68416232E12, 6415.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68416214E12, 8433.960000000006], [1.68416226E12, 8679.0], [1.68416208E12, 10996.980000000003], [1.6841622E12, 11020.980000000003], [1.68416202E12, 10596.43], [1.68416232E12, 10578.970000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68416214E12, 5581.800000000003], [1.68416226E12, 6088.800000000003], [1.68416208E12, 9763.95], [1.6841622E12, 10079.95], [1.68416202E12, 9916.150000000001], [1.68416232E12, 8118.850000000002]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68416214E12, 52.0], [1.68416226E12, 51.0], [1.68416208E12, 51.0], [1.6841622E12, 50.0], [1.68416202E12, 53.0], [1.68416232E12, 50.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68416214E12, 2102.0], [1.68416226E12, 2145.0], [1.68416208E12, 1784.0], [1.6841622E12, 1856.0], [1.68416202E12, 1260.0], [1.68416232E12, 2158.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416232E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 11100.0, "series": [{"data": [[7.0, 10482.0], [11.0, 1978.0], [28.0, 8998.5], [57.0, 8593.0], [108.0, 7846.0], [134.0, 5527.0], [147.0, 6626.0], [166.0, 7276.5], [180.0, 7130.0], [198.0, 3318.0], [209.0, 6459.5], [218.0, 6765.0], [239.0, 4979.5], [232.0, 6058.0], [246.0, 4192.0], [248.0, 2147.5], [264.0, 6914.5], [269.0, 6940.0], [284.0, 7400.0], [275.0, 4216.0], [290.0, 6003.5], [317.0, 2068.5], [310.0, 2231.0], [316.0, 6203.0], [328.0, 2197.0], [347.0, 6053.5], [360.0, 6003.5], [361.0, 6337.0], [376.0, 3515.0], [378.0, 3779.5], [371.0, 7225.0], [394.0, 5169.0], [402.0, 2939.0], [425.0, 3462.0], [423.0, 4407.0], [453.0, 6198.0], [455.0, 6297.5], [479.0, 4257.0], [478.0, 4465.0], [489.0, 2016.0], [485.0, 4932.0], [507.0, 3155.0], [526.0, 6218.0], [554.0, 1118.0], [563.0, 3257.0], [574.0, 4873.0], [581.0, 4019.0], [634.0, 2368.5], [661.0, 3587.0], [658.0, 2267.0], [686.0, 1116.0], [701.0, 2600.0], [687.0, 2815.5], [679.0, 3024.5], [690.0, 1626.0], [720.0, 2711.5], [707.0, 2314.0], [729.0, 2681.0], [765.0, 1503.5], [740.0, 2073.0], [756.0, 2905.0], [736.0, 2127.0], [778.0, 2319.0], [799.0, 1897.0], [798.0, 1127.0], [787.0, 2342.0], [773.0, 3087.0], [768.0, 1663.0], [828.0, 1401.5], [808.0, 3154.0], [827.0, 1546.0], [824.0, 3157.0], [829.0, 2472.0], [863.0, 1479.5], [860.0, 2890.0], [853.0, 1843.0], [852.0, 2166.5], [847.0, 1130.0], [839.0, 2077.0], [851.0, 2014.0], [870.0, 1776.0], [885.0, 2138.0], [880.0, 1848.0], [873.0, 1129.0], [894.0, 2336.0], [922.0, 2431.0], [915.0, 1321.0], [916.0, 1135.0], [926.0, 2027.0], [925.0, 1841.0], [904.0, 1433.0], [897.0, 2139.5], [920.0, 2051.0], [902.0, 2244.0], [898.0, 1123.0], [914.0, 1132.0], [927.0, 2146.5], [921.0, 3138.5], [954.0, 1420.0], [929.0, 1723.0], [939.0, 1796.0], [941.0, 1901.5], [942.0, 2619.0], [943.0, 1420.0], [948.0, 1521.0], [938.0, 1559.5], [958.0, 1190.5], [956.0, 2079.0], [955.0, 2139.0], [945.0, 2031.0], [946.0, 2260.0], [959.0, 1245.0], [949.0, 1557.0], [950.0, 1433.0], [951.0, 1730.0], [935.0, 1382.0], [953.0, 1131.0], [932.0, 1121.0], [984.0, 2097.0], [962.0, 1618.5], [982.0, 1706.5], [978.0, 1443.5], [979.0, 1472.5], [975.0, 1882.5], [966.0, 1907.0], [965.0, 1456.5], [967.0, 1111.0], [969.0, 2197.0], [968.0, 1134.0], [972.0, 1497.5], [973.0, 1711.0], [977.0, 1505.0], [991.0, 1539.0], [990.0, 1493.0], [988.0, 2002.5], [989.0, 1685.5], [987.0, 1450.0], [985.0, 1885.5], [986.0, 2132.0], [976.0, 2146.0], [999.0, 2857.0], [1000.0, 1908.0], [992.0, 2029.0], [993.0, 2132.5], [995.0, 1414.0], [996.0, 1128.0], [998.0, 1422.5], [1007.0, 1649.0], [1006.0, 2153.0], [1001.0, 1549.0], [1013.0, 1944.0], [1012.0, 1644.0], [1023.0, 1373.0], [1008.0, 2574.0], [1010.0, 2678.0], [1022.0, 1754.0], [1018.0, 1989.0], [1019.0, 1751.0], [1016.0, 1437.5], [1015.0, 1932.0], [1038.0, 1848.0], [1031.0, 1441.0], [1082.0, 1882.0], [1027.0, 1881.0], [1030.0, 2228.0], [1067.0, 2601.0], [1056.0, 2121.5], [1083.0, 2140.0], [1057.0, 1466.0], [1064.0, 1222.5], [1059.0, 2126.0], [1066.0, 2083.0], [1065.0, 2417.5], [1058.0, 1802.0], [1069.0, 2056.0], [1071.0, 2052.5], [1068.0, 1440.0], [1078.0, 1803.5], [1080.0, 2099.0], [1079.0, 1135.0], [1072.0, 2249.0], [1075.0, 2927.0], [1074.0, 2456.0], [1032.0, 1711.0], [1034.0, 2121.0], [1036.0, 1876.0], [1037.0, 1685.0], [1035.0, 2056.0], [1033.0, 2372.0], [1045.0, 1610.0], [1047.0, 1878.0], [1048.0, 1413.0], [1044.0, 2221.0], [1043.0, 2495.0], [1040.0, 1741.0], [1024.0, 2116.0], [1026.0, 2584.5], [1055.0, 2723.5], [1052.0, 2462.5], [1053.0, 1106.0], [1050.0, 1884.0], [1103.0, 2123.0], [1089.0, 1307.0], [1118.0, 2167.5], [1090.0, 2071.5], [1130.0, 1180.0], [1132.0, 1136.0], [1107.0, 1424.0], [1116.0, 2804.0], [1126.0, 2045.5], [1095.0, 2111.0], [1092.0, 1388.0], [1099.0, 2899.0], [1100.0, 3164.0], [1136.0, 1385.0], [1151.0, 2034.0], [1142.0, 2504.5], [1139.0, 1135.0], [1224.0, 1532.0], [1246.0, 2816.5], [1289.0, 2495.0], [1297.0, 2593.5], [1454.0, 2087.5], [1523.0, 1925.0], [1.0, 11100.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 69.0], [180.0, 47.0], [209.0, 275.0], [239.0, 324.0], [232.0, 461.0], [246.0, 10434.0], [248.0, 69.5], [264.0, 10357.0], [269.0, 10332.0], [284.0, 653.0], [317.0, 60.0], [316.0, 10093.5], [328.0, 53.5], [347.0, 10380.0], [361.0, 69.5], [376.0, 64.0], [371.0, 62.0], [402.0, 67.5], [423.0, 63.5], [453.0, 47.0], [455.0, 46.0], [478.0, 55.0], [489.0, 151.0], [485.0, 10408.0], [507.0, 10071.0], [526.0, 125.0], [554.0, 44.0], [574.0, 76.0], [634.0, 10101.5], [658.0, 10140.0], [686.0, 41.5], [701.0, 10170.0], [687.0, 44.0], [679.0, 41.0], [690.0, 58.0], [720.0, 63.0], [707.0, 58.0], [765.0, 196.0], [740.0, 10123.0], [756.0, 41.0], [736.0, 10088.5], [778.0, 98.0], [787.0, 63.0], [773.0, 52.5], [768.0, 10251.0], [828.0, 320.0], [808.0, 58.0], [827.0, 10491.0], [824.0, 42.0], [863.0, 305.0], [860.0, 71.0], [853.0, 78.0], [852.0, 41.0], [839.0, 69.5], [851.0, 72.5], [870.0, 77.0], [880.0, 58.0], [873.0, 10192.0], [922.0, 63.5], [915.0, 45.5], [926.0, 41.5], [925.0, 41.0], [904.0, 41.0], [897.0, 45.0], [920.0, 74.0], [898.0, 10469.5], [914.0, 51.0], [927.0, 41.0], [921.0, 41.0], [954.0, 42.0], [929.0, 41.5], [939.0, 41.0], [941.0, 684.0], [942.0, 53.0], [943.0, 42.0], [948.0, 41.0], [938.0, 42.0], [958.0, 313.0], [956.0, 44.0], [945.0, 41.0], [959.0, 52.0], [949.0, 42.0], [950.0, 42.0], [951.0, 42.0], [935.0, 41.0], [953.0, 10113.0], [984.0, 41.0], [962.0, 48.5], [982.0, 41.0], [978.0, 41.0], [979.0, 41.0], [975.0, 41.0], [966.0, 41.0], [965.0, 40.0], [967.0, 42.0], [969.0, 41.0], [968.0, 10173.0], [972.0, 41.0], [973.0, 42.0], [977.0, 41.0], [991.0, 41.0], [990.0, 41.0], [988.0, 41.0], [989.0, 41.0], [987.0, 41.0], [985.0, 42.0], [986.0, 53.0], [976.0, 43.0], [999.0, 89.0], [1000.0, 41.0], [992.0, 41.0], [993.0, 41.0], [995.0, 41.0], [996.0, 55.5], [998.0, 41.0], [1007.0, 41.0], [1006.0, 52.0], [1001.0, 41.0], [1013.0, 42.0], [1012.0, 43.0], [1023.0, 41.0], [1008.0, 40.5], [1010.0, 42.0], [1022.0, 41.0], [1018.0, 41.0], [1019.0, 43.0], [1016.0, 53.0], [1015.0, 41.0], [1038.0, 42.0], [1031.0, 42.0], [1082.0, 44.0], [1027.0, 43.0], [1030.0, 57.5], [1067.0, 42.0], [1056.0, 44.0], [1083.0, 41.0], [1057.0, 41.0], [1064.0, 41.0], [1059.0, 41.0], [1066.0, 40.0], [1065.0, 41.0], [1058.0, 41.0], [1069.0, 43.0], [1071.0, 45.0], [1068.0, 42.0], [1078.0, 43.0], [1080.0, 44.0], [1079.0, 61.0], [1072.0, 41.0], [1075.0, 43.0], [1074.0, 54.0], [1032.0, 44.0], [1034.0, 42.0], [1036.0, 41.0], [1037.0, 52.0], [1035.0, 41.0], [1033.0, 41.0], [1045.0, 42.0], [1047.0, 41.0], [1048.0, 41.0], [1044.0, 46.0], [1043.0, 43.0], [1040.0, 44.0], [1024.0, 41.0], [1026.0, 53.0], [1055.0, 66.0], [1052.0, 46.0], [1053.0, 267.0], [1050.0, 40.0], [1103.0, 254.0], [1089.0, 41.0], [1118.0, 48.0], [1090.0, 42.0], [1130.0, 277.0], [1132.0, 54.0], [1107.0, 66.0], [1116.0, 216.5], [1126.0, 60.0], [1095.0, 41.0], [1092.0, 49.5], [1099.0, 42.0], [1100.0, 122.0], [1136.0, 154.0], [1151.0, 62.5], [1142.0, 95.5], [1139.0, 54.0], [1224.0, 54.5], [1246.0, 56.0], [1289.0, 566.0], [1297.0, 78.0], [1454.0, 85.0], [1523.0, 293.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1523.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 11100.0, "series": [{"data": [[7.0, 10482.0], [11.0, 1978.0], [28.0, 8998.0], [57.0, 8593.0], [108.0, 7846.0], [134.0, 5527.0], [147.0, 6626.0], [166.0, 7276.5], [180.0, 7130.0], [198.0, 3318.0], [209.0, 6459.5], [218.0, 6765.0], [239.0, 4979.5], [232.0, 6058.0], [246.0, 4192.0], [248.0, 2147.0], [264.0, 6914.0], [269.0, 6940.0], [284.0, 7373.0], [275.0, 4216.0], [290.0, 6003.5], [317.0, 2067.5], [310.0, 2230.5], [316.0, 6203.0], [328.0, 2196.5], [347.0, 6053.5], [360.0, 6003.5], [361.0, 6330.0], [376.0, 3514.5], [378.0, 3779.5], [371.0, 7225.0], [394.0, 5168.5], [402.0, 2939.0], [425.0, 3462.0], [423.0, 4407.0], [453.0, 6198.0], [455.0, 6297.5], [479.0, 4257.0], [478.0, 4464.0], [489.0, 2015.0], [485.0, 4932.0], [507.0, 3154.5], [526.0, 6212.0], [554.0, 1117.5], [563.0, 3257.0], [574.0, 4873.0], [581.0, 4019.0], [634.0, 2368.5], [661.0, 3587.0], [658.0, 2267.0], [686.0, 1115.5], [701.0, 2600.0], [687.0, 2815.5], [679.0, 3024.5], [690.0, 1626.0], [720.0, 2711.5], [707.0, 2314.0], [729.0, 2681.0], [765.0, 1500.5], [740.0, 2072.0], [756.0, 2905.0], [736.0, 2127.0], [778.0, 2319.0], [799.0, 1897.0], [798.0, 1126.5], [787.0, 2342.0], [773.0, 3086.0], [768.0, 1663.0], [828.0, 1396.0], [808.0, 3154.0], [827.0, 1545.5], [824.0, 3157.0], [829.0, 2472.0], [863.0, 1479.0], [860.0, 2890.0], [853.0, 1841.0], [852.0, 2166.0], [847.0, 1129.0], [839.0, 2077.0], [851.0, 2014.0], [870.0, 1776.0], [885.0, 2138.0], [880.0, 1847.0], [873.0, 1129.0], [894.0, 2336.0], [922.0, 2431.0], [915.0, 1321.0], [916.0, 1135.0], [926.0, 2026.5], [925.0, 1841.0], [904.0, 1433.0], [897.0, 2139.5], [920.0, 2051.0], [902.0, 2243.5], [898.0, 1123.0], [914.0, 1132.0], [927.0, 2146.0], [921.0, 3138.0], [954.0, 1420.0], [929.0, 1723.0], [939.0, 1796.0], [941.0, 1882.0], [942.0, 2619.0], [943.0, 1420.0], [948.0, 1519.0], [938.0, 1559.5], [958.0, 1190.0], [956.0, 2079.0], [955.0, 2138.0], [945.0, 2031.0], [946.0, 2259.5], [959.0, 1243.0], [949.0, 1557.0], [950.0, 1433.0], [951.0, 1730.0], [935.0, 1382.0], [953.0, 1131.0], [932.0, 1120.0], [984.0, 2097.0], [962.0, 1618.5], [982.0, 1706.5], [978.0, 1443.5], [979.0, 1472.0], [975.0, 1882.5], [966.0, 1907.0], [965.0, 1456.0], [967.0, 1111.0], [969.0, 2196.5], [968.0, 1134.0], [972.0, 1497.5], [973.0, 1711.0], [977.0, 1504.0], [991.0, 1539.0], [990.0, 1493.0], [988.0, 2002.5], [989.0, 1685.5], [987.0, 1450.0], [985.0, 1885.5], [986.0, 2132.0], [976.0, 2142.0], [999.0, 2856.0], [1000.0, 1907.5], [992.0, 2028.5], [993.0, 2132.5], [995.0, 1414.0], [996.0, 1127.5], [998.0, 1421.5], [1007.0, 1649.0], [1006.0, 2153.0], [1001.0, 1548.5], [1013.0, 1944.0], [1012.0, 1644.0], [1023.0, 1373.0], [1008.0, 2574.0], [1010.0, 2677.0], [1022.0, 1754.0], [1018.0, 1988.0], [1019.0, 1750.0], [1016.0, 1437.0], [1015.0, 1931.5], [1038.0, 1848.0], [1031.0, 1441.0], [1082.0, 1882.0], [1027.0, 1880.0], [1030.0, 2228.0], [1067.0, 2596.0], [1056.0, 2119.5], [1083.0, 2140.0], [1057.0, 1466.0], [1064.0, 1222.0], [1059.0, 2126.0], [1066.0, 2082.0], [1065.0, 2417.5], [1058.0, 1802.0], [1069.0, 2056.0], [1071.0, 2052.5], [1068.0, 1440.0], [1078.0, 1803.5], [1080.0, 2099.0], [1079.0, 1134.0], [1072.0, 2249.0], [1075.0, 2927.0], [1074.0, 2456.0], [1032.0, 1711.0], [1034.0, 2121.0], [1036.0, 1876.0], [1037.0, 1685.0], [1035.0, 2056.0], [1033.0, 2371.0], [1045.0, 1610.0], [1047.0, 1877.0], [1048.0, 1413.0], [1044.0, 2221.0], [1043.0, 2495.0], [1040.0, 1741.0], [1024.0, 2115.5], [1026.0, 2584.0], [1055.0, 2723.5], [1052.0, 2462.0], [1053.0, 1105.0], [1050.0, 1884.0], [1103.0, 2123.0], [1089.0, 1306.0], [1118.0, 2167.0], [1090.0, 2071.0], [1130.0, 1178.0], [1132.0, 1135.5], [1107.0, 1423.0], [1116.0, 2800.0], [1126.0, 2044.0], [1095.0, 2111.0], [1092.0, 1388.0], [1099.0, 2899.0], [1100.0, 3164.0], [1136.0, 1383.0], [1151.0, 2033.0], [1142.0, 2504.5], [1139.0, 1134.0], [1224.0, 1532.0], [1246.0, 2812.5], [1289.0, 2495.0], [1297.0, 2591.0], [1454.0, 2081.0], [1523.0, 1925.0], [1.0, 11100.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 69.0], [180.0, 47.0], [209.0, 275.0], [239.0, 324.0], [232.0, 461.0], [246.0, 10434.0], [248.0, 69.5], [264.0, 10357.0], [269.0, 10332.0], [284.0, 653.0], [317.0, 60.0], [316.0, 10093.5], [328.0, 53.5], [347.0, 10380.0], [361.0, 69.5], [376.0, 64.0], [371.0, 62.0], [402.0, 67.5], [423.0, 63.5], [453.0, 47.0], [455.0, 46.0], [478.0, 55.0], [489.0, 151.0], [485.0, 10408.0], [507.0, 10071.0], [526.0, 125.0], [554.0, 44.0], [574.0, 76.0], [634.0, 10101.5], [658.0, 10140.0], [686.0, 41.5], [701.0, 10170.0], [687.0, 44.0], [679.0, 41.0], [690.0, 58.0], [720.0, 63.0], [707.0, 58.0], [765.0, 196.0], [740.0, 10123.0], [756.0, 41.0], [736.0, 10088.5], [778.0, 98.0], [787.0, 63.0], [773.0, 52.5], [768.0, 10251.0], [828.0, 320.0], [808.0, 58.0], [827.0, 10491.0], [824.0, 42.0], [863.0, 305.0], [860.0, 71.0], [853.0, 78.0], [852.0, 41.0], [839.0, 69.5], [851.0, 72.5], [870.0, 77.0], [880.0, 58.0], [873.0, 10192.0], [922.0, 63.5], [915.0, 45.5], [926.0, 41.5], [925.0, 41.0], [904.0, 41.0], [897.0, 45.0], [920.0, 74.0], [898.0, 10469.5], [914.0, 51.0], [927.0, 41.0], [921.0, 41.0], [954.0, 42.0], [929.0, 41.5], [939.0, 41.0], [941.0, 684.0], [942.0, 53.0], [943.0, 42.0], [948.0, 41.0], [938.0, 42.0], [958.0, 313.0], [956.0, 44.0], [945.0, 41.0], [959.0, 52.0], [949.0, 42.0], [950.0, 42.0], [951.0, 42.0], [935.0, 41.0], [953.0, 10113.0], [984.0, 41.0], [962.0, 44.0], [982.0, 41.0], [978.0, 41.0], [979.0, 41.0], [975.0, 41.0], [966.0, 41.0], [965.0, 40.0], [967.0, 42.0], [969.0, 41.0], [968.0, 10173.0], [972.0, 41.0], [973.0, 42.0], [977.0, 41.0], [991.0, 41.0], [990.0, 41.0], [988.0, 41.0], [989.0, 41.0], [987.0, 41.0], [985.0, 42.0], [986.0, 53.0], [976.0, 43.0], [999.0, 89.0], [1000.0, 41.0], [992.0, 41.0], [993.0, 41.0], [995.0, 41.0], [996.0, 55.5], [998.0, 41.0], [1007.0, 41.0], [1006.0, 52.0], [1001.0, 41.0], [1013.0, 42.0], [1012.0, 43.0], [1023.0, 41.0], [1008.0, 40.5], [1010.0, 42.0], [1022.0, 41.0], [1018.0, 41.0], [1019.0, 43.0], [1016.0, 53.0], [1015.0, 41.0], [1038.0, 42.0], [1031.0, 42.0], [1082.0, 43.0], [1027.0, 43.0], [1030.0, 57.5], [1067.0, 42.0], [1056.0, 44.0], [1083.0, 41.0], [1057.0, 41.0], [1064.0, 41.0], [1059.0, 41.0], [1066.0, 40.0], [1065.0, 41.0], [1058.0, 41.0], [1069.0, 43.0], [1071.0, 45.0], [1068.0, 42.0], [1078.0, 43.0], [1080.0, 44.0], [1079.0, 61.0], [1072.0, 41.0], [1075.0, 43.0], [1074.0, 54.0], [1032.0, 44.0], [1034.0, 42.0], [1036.0, 41.0], [1037.0, 52.0], [1035.0, 41.0], [1033.0, 41.0], [1045.0, 42.0], [1047.0, 41.0], [1048.0, 41.0], [1044.0, 46.0], [1043.0, 43.0], [1040.0, 44.0], [1024.0, 41.0], [1026.0, 53.0], [1055.0, 66.0], [1052.0, 46.0], [1053.0, 267.0], [1050.0, 40.0], [1103.0, 254.0], [1089.0, 41.0], [1118.0, 48.0], [1090.0, 42.0], [1130.0, 277.0], [1132.0, 54.0], [1107.0, 66.0], [1116.0, 216.5], [1126.0, 60.0], [1095.0, 41.0], [1092.0, 49.5], [1099.0, 42.0], [1100.0, 122.0], [1136.0, 154.0], [1151.0, 62.5], [1142.0, 95.5], [1139.0, 54.0], [1224.0, 54.5], [1246.0, 56.0], [1289.0, 566.0], [1297.0, 78.0], [1454.0, 85.0], [1523.0, 293.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1523.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 125.63333333333334, "minX": 1.68416202E12, "maxY": 967.55, "series": [{"data": [[1.68416214E12, 856.8166666666667], [1.68416226E12, 866.2333333333333], [1.68416208E12, 967.55], [1.6841622E12, 930.0], [1.68416202E12, 125.63333333333334], [1.68416232E12, 751.55]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416232E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68416202E12, "maxY": 892.6666666666666, "series": [{"data": [[1.68416202E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68416214E12, 792.1166666666667], [1.68416226E12, 786.6], [1.68416208E12, 892.6666666666666], [1.6841622E12, 853.55], [1.68416202E12, 75.3], [1.68416232E12, 735.7]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68416214E12, 0.016666666666666666], [1.68416208E12, 0.15], [1.68416202E12, 0.18333333333333332]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68416214E12, 67.56666666666666], [1.68416226E12, 77.63333333333334], [1.68416208E12, 70.68333333333334], [1.6841622E12, 75.55], [1.68416202E12, 4.2], [1.68416232E12, 65.85]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416232E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 4.4, "minX": 1.68416202E12, "maxY": 892.6666666666666, "series": [{"data": [[1.68416214E12, 792.1166666666667], [1.68416226E12, 786.6], [1.68416208E12, 892.6666666666666], [1.6841622E12, 853.55], [1.68416202E12, 75.3], [1.68416232E12, 735.7]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68416214E12, 67.58333333333333], [1.68416226E12, 77.63333333333334], [1.68416208E12, 70.83333333333333], [1.6841622E12, 75.55], [1.68416202E12, 4.4], [1.68416232E12, 65.85]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416232E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.4, "minX": 1.68416202E12, "maxY": 892.6666666666666, "series": [{"data": [[1.68416214E12, 792.1166666666667], [1.68416226E12, 786.6], [1.68416208E12, 892.6666666666666], [1.6841622E12, 853.55], [1.68416202E12, 75.3], [1.68416232E12, 735.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68416214E12, 67.58333333333333], [1.68416226E12, 77.63333333333334], [1.68416208E12, 70.83333333333333], [1.6841622E12, 75.55], [1.68416202E12, 4.4], [1.68416232E12, 65.85]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416232E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

