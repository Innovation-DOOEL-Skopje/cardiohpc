/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "maxY": 31651.0, "series": [{"data": [[0.0, 37.0], [0.1, 45.0], [0.2, 58.0], [0.3, 94.0], [0.4, 1091.0], [0.5, 1092.0], [0.6, 1093.0], [0.7, 1094.0], [0.8, 1094.0], [0.9, 1094.0], [1.0, 1095.0], [1.1, 1095.0], [1.2, 1095.0], [1.3, 1095.0], [1.4, 1096.0], [1.5, 1096.0], [1.6, 1096.0], [1.7, 1096.0], [1.8, 1096.0], [1.9, 1096.0], [2.0, 1096.0], [2.1, 1097.0], [2.2, 1097.0], [2.3, 1097.0], [2.4, 1097.0], [2.5, 1097.0], [2.6, 1097.0], [2.7, 1097.0], [2.8, 1098.0], [2.9, 1098.0], [3.0, 1098.0], [3.1, 1098.0], [3.2, 1098.0], [3.3, 1098.0], [3.4, 1098.0], [3.5, 1098.0], [3.6, 1098.0], [3.7, 1098.0], [3.8, 1099.0], [3.9, 1099.0], [4.0, 1099.0], [4.1, 1099.0], [4.2, 1099.0], [4.3, 1099.0], [4.4, 1099.0], [4.5, 1099.0], [4.6, 1099.0], [4.7, 1099.0], [4.8, 1099.0], [4.9, 1099.0], [5.0, 1100.0], [5.1, 1100.0], [5.2, 1100.0], [5.3, 1100.0], [5.4, 1100.0], [5.5, 1100.0], [5.6, 1100.0], [5.7, 1100.0], [5.8, 1100.0], [5.9, 1100.0], [6.0, 1100.0], [6.1, 1100.0], [6.2, 1101.0], [6.3, 1101.0], [6.4, 1101.0], [6.5, 1101.0], [6.6, 1101.0], [6.7, 1101.0], [6.8, 1101.0], [6.9, 1101.0], [7.0, 1101.0], [7.1, 1101.0], [7.2, 1101.0], [7.3, 1101.0], [7.4, 1101.0], [7.5, 1102.0], [7.6, 1102.0], [7.7, 1102.0], [7.8, 1102.0], [7.9, 1102.0], [8.0, 1102.0], [8.1, 1102.0], [8.2, 1102.0], [8.3, 1102.0], [8.4, 1102.0], [8.5, 1102.0], [8.6, 1102.0], [8.7, 1102.0], [8.8, 1103.0], [8.9, 1103.0], [9.0, 1103.0], [9.1, 1103.0], [9.2, 1103.0], [9.3, 1103.0], [9.4, 1103.0], [9.5, 1103.0], [9.6, 1103.0], [9.7, 1103.0], [9.8, 1103.0], [9.9, 1103.0], [10.0, 1103.0], [10.1, 1104.0], [10.2, 1104.0], [10.3, 1104.0], [10.4, 1104.0], [10.5, 1104.0], [10.6, 1104.0], [10.7, 1104.0], [10.8, 1104.0], [10.9, 1104.0], [11.0, 1104.0], [11.1, 1104.0], [11.2, 1104.0], [11.3, 1104.0], [11.4, 1105.0], [11.5, 1105.0], [11.6, 1105.0], [11.7, 1105.0], [11.8, 1105.0], [11.9, 1105.0], [12.0, 1105.0], [12.1, 1105.0], [12.2, 1105.0], [12.3, 1105.0], [12.4, 1105.0], [12.5, 1105.0], [12.6, 1106.0], [12.7, 1106.0], [12.8, 1106.0], [12.9, 1106.0], [13.0, 1106.0], [13.1, 1106.0], [13.2, 1106.0], [13.3, 1106.0], [13.4, 1106.0], [13.5, 1106.0], [13.6, 1106.0], [13.7, 1107.0], [13.8, 1107.0], [13.9, 1107.0], [14.0, 1107.0], [14.1, 1107.0], [14.2, 1107.0], [14.3, 1107.0], [14.4, 1107.0], [14.5, 1107.0], [14.6, 1107.0], [14.7, 1107.0], [14.8, 1108.0], [14.9, 1108.0], [15.0, 1108.0], [15.1, 1108.0], [15.2, 1108.0], [15.3, 1108.0], [15.4, 1108.0], [15.5, 1108.0], [15.6, 1108.0], [15.7, 1108.0], [15.8, 1109.0], [15.9, 1109.0], [16.0, 1109.0], [16.1, 1109.0], [16.2, 1109.0], [16.3, 1109.0], [16.4, 1109.0], [16.5, 1109.0], [16.6, 1109.0], [16.7, 1110.0], [16.8, 1110.0], [16.9, 1110.0], [17.0, 1110.0], [17.1, 1110.0], [17.2, 1110.0], [17.3, 1110.0], [17.4, 1110.0], [17.5, 1110.0], [17.6, 1111.0], [17.7, 1111.0], [17.8, 1111.0], [17.9, 1111.0], [18.0, 1111.0], [18.1, 1111.0], [18.2, 1111.0], [18.3, 1111.0], [18.4, 1112.0], [18.5, 1112.0], [18.6, 1112.0], [18.7, 1112.0], [18.8, 1112.0], [18.9, 1112.0], [19.0, 1112.0], [19.1, 1112.0], [19.2, 1113.0], [19.3, 1113.0], [19.4, 1113.0], [19.5, 1113.0], [19.6, 1113.0], [19.7, 1113.0], [19.8, 1113.0], [19.9, 1113.0], [20.0, 1114.0], [20.1, 1114.0], [20.2, 1114.0], [20.3, 1114.0], [20.4, 1114.0], [20.5, 1114.0], [20.6, 1114.0], [20.7, 1115.0], [20.8, 1115.0], [20.9, 1115.0], [21.0, 1115.0], [21.1, 1115.0], [21.2, 1115.0], [21.3, 1116.0], [21.4, 1116.0], [21.5, 1116.0], [21.6, 1116.0], [21.7, 1116.0], [21.8, 1116.0], [21.9, 1117.0], [22.0, 1117.0], [22.1, 1117.0], [22.2, 1117.0], [22.3, 1117.0], [22.4, 1117.0], [22.5, 1118.0], [22.6, 1118.0], [22.7, 1118.0], [22.8, 1118.0], [22.9, 1118.0], [23.0, 1119.0], [23.1, 1119.0], [23.2, 1119.0], [23.3, 1119.0], [23.4, 1119.0], [23.5, 1120.0], [23.6, 1120.0], [23.7, 1120.0], [23.8, 1120.0], [23.9, 1120.0], [24.0, 1121.0], [24.1, 1121.0], [24.2, 1121.0], [24.3, 1121.0], [24.4, 1122.0], [24.5, 1122.0], [24.6, 1122.0], [24.7, 1122.0], [24.8, 1123.0], [24.9, 1123.0], [25.0, 1123.0], [25.1, 1123.0], [25.2, 1123.0], [25.3, 1124.0], [25.4, 1124.0], [25.5, 1124.0], [25.6, 1124.0], [25.7, 1125.0], [25.8, 1125.0], [25.9, 1125.0], [26.0, 1126.0], [26.1, 1126.0], [26.2, 1126.0], [26.3, 1126.0], [26.4, 1127.0], [26.5, 1127.0], [26.6, 1127.0], [26.7, 1128.0], [26.8, 1128.0], [26.9, 1128.0], [27.0, 1129.0], [27.1, 1129.0], [27.2, 1129.0], [27.3, 1130.0], [27.4, 1130.0], [27.5, 1130.0], [27.6, 1131.0], [27.7, 1131.0], [27.8, 1132.0], [27.9, 1132.0], [28.0, 1132.0], [28.1, 1133.0], [28.2, 1133.0], [28.3, 1134.0], [28.4, 1134.0], [28.5, 1135.0], [28.6, 1135.0], [28.7, 1136.0], [28.8, 1136.0], [28.9, 1136.0], [29.0, 1137.0], [29.1, 1137.0], [29.2, 1138.0], [29.3, 1138.0], [29.4, 1139.0], [29.5, 1139.0], [29.6, 1140.0], [29.7, 1140.0], [29.8, 1140.0], [29.9, 1141.0], [30.0, 1141.0], [30.1, 1142.0], [30.2, 1142.0], [30.3, 1143.0], [30.4, 1143.0], [30.5, 1144.0], [30.6, 1144.0], [30.7, 1145.0], [30.8, 1146.0], [30.9, 1146.0], [31.0, 1147.0], [31.1, 1147.0], [31.2, 1148.0], [31.3, 1148.0], [31.4, 1149.0], [31.5, 1149.0], [31.6, 1150.0], [31.7, 1150.0], [31.8, 1151.0], [31.9, 1151.0], [32.0, 1152.0], [32.1, 1153.0], [32.2, 1153.0], [32.3, 1154.0], [32.4, 1154.0], [32.5, 1155.0], [32.6, 1156.0], [32.7, 1157.0], [32.8, 1157.0], [32.9, 1158.0], [33.0, 1159.0], [33.1, 1160.0], [33.2, 1161.0], [33.3, 1162.0], [33.4, 1163.0], [33.5, 1164.0], [33.6, 1166.0], [33.7, 1167.0], [33.8, 1168.0], [33.9, 1169.0], [34.0, 1171.0], [34.1, 1172.0], [34.2, 1173.0], [34.3, 1175.0], [34.4, 1176.0], [34.5, 1178.0], [34.6, 1180.0], [34.7, 1182.0], [34.8, 1183.0], [34.9, 1185.0], [35.0, 1187.0], [35.1, 1189.0], [35.2, 1191.0], [35.3, 1193.0], [35.4, 1195.0], [35.5, 1196.0], [35.6, 1198.0], [35.7, 1200.0], [35.8, 1202.0], [35.9, 1203.0], [36.0, 1205.0], [36.1, 1207.0], [36.2, 1208.0], [36.3, 1210.0], [36.4, 1212.0], [36.5, 1214.0], [36.6, 1216.0], [36.7, 1218.0], [36.8, 1220.0], [36.9, 1222.0], [37.0, 1224.0], [37.1, 1226.0], [37.2, 1228.0], [37.3, 1230.0], [37.4, 1232.0], [37.5, 1235.0], [37.6, 1236.0], [37.7, 1238.0], [37.8, 1240.0], [37.9, 1242.0], [38.0, 1244.0], [38.1, 1247.0], [38.2, 1249.0], [38.3, 1251.0], [38.4, 1253.0], [38.5, 1256.0], [38.6, 1258.0], [38.7, 1260.0], [38.8, 1263.0], [38.9, 1265.0], [39.0, 1267.0], [39.1, 1269.0], [39.2, 1271.0], [39.3, 1273.0], [39.4, 1275.0], [39.5, 1277.0], [39.6, 1279.0], [39.7, 1281.0], [39.8, 1284.0], [39.9, 1286.0], [40.0, 1289.0], [40.1, 1291.0], [40.2, 1293.0], [40.3, 1295.0], [40.4, 1297.0], [40.5, 1300.0], [40.6, 1302.0], [40.7, 1304.0], [40.8, 1307.0], [40.9, 1309.0], [41.0, 1312.0], [41.1, 1315.0], [41.2, 1318.0], [41.3, 1320.0], [41.4, 1323.0], [41.5, 1326.0], [41.6, 1328.0], [41.7, 1330.0], [41.8, 1332.0], [41.9, 1334.0], [42.0, 1336.0], [42.1, 1338.0], [42.2, 1340.0], [42.3, 1342.0], [42.4, 1344.0], [42.5, 1346.0], [42.6, 1348.0], [42.7, 1350.0], [42.8, 1353.0], [42.9, 1355.0], [43.0, 1357.0], [43.1, 1359.0], [43.2, 1361.0], [43.3, 1363.0], [43.4, 1365.0], [43.5, 1368.0], [43.6, 1370.0], [43.7, 1372.0], [43.8, 1375.0], [43.9, 1377.0], [44.0, 1380.0], [44.1, 1382.0], [44.2, 1384.0], [44.3, 1387.0], [44.4, 1389.0], [44.5, 1392.0], [44.6, 1394.0], [44.7, 1397.0], [44.8, 1399.0], [44.9, 1401.0], [45.0, 1403.0], [45.1, 1406.0], [45.2, 1408.0], [45.3, 1410.0], [45.4, 1413.0], [45.5, 1415.0], [45.6, 1418.0], [45.7, 1421.0], [45.8, 1424.0], [45.9, 1427.0], [46.0, 1430.0], [46.1, 1432.0], [46.2, 1435.0], [46.3, 1437.0], [46.4, 1440.0], [46.5, 1443.0], [46.6, 1446.0], [46.7, 1449.0], [46.8, 1452.0], [46.9, 1455.0], [47.0, 1457.0], [47.1, 1460.0], [47.2, 1463.0], [47.3, 1466.0], [47.4, 1469.0], [47.5, 1472.0], [47.6, 1475.0], [47.7, 1478.0], [47.8, 1482.0], [47.9, 1486.0], [48.0, 1489.0], [48.1, 1492.0], [48.2, 1496.0], [48.3, 1499.0], [48.4, 1502.0], [48.5, 1505.0], [48.6, 1507.0], [48.7, 1510.0], [48.8, 1513.0], [48.9, 1516.0], [49.0, 1518.0], [49.1, 1521.0], [49.2, 1524.0], [49.3, 1527.0], [49.4, 1530.0], [49.5, 1533.0], [49.6, 1536.0], [49.7, 1540.0], [49.8, 1543.0], [49.9, 1547.0], [50.0, 1550.0], [50.1, 1554.0], [50.2, 1557.0], [50.3, 1560.0], [50.4, 1563.0], [50.5, 1567.0], [50.6, 1570.0], [50.7, 1573.0], [50.8, 1575.0], [50.9, 1578.0], [51.0, 1581.0], [51.1, 1584.0], [51.2, 1586.0], [51.3, 1589.0], [51.4, 1592.0], [51.5, 1595.0], [51.6, 1598.0], [51.7, 1600.0], [51.8, 1603.0], [51.9, 1606.0], [52.0, 1609.0], [52.1, 1612.0], [52.2, 1615.0], [52.3, 1618.0], [52.4, 1621.0], [52.5, 1624.0], [52.6, 1627.0], [52.7, 1630.0], [52.8, 1633.0], [52.9, 1636.0], [53.0, 1639.0], [53.1, 1642.0], [53.2, 1645.0], [53.3, 1648.0], [53.4, 1650.0], [53.5, 1653.0], [53.6, 1656.0], [53.7, 1659.0], [53.8, 1662.0], [53.9, 1664.0], [54.0, 1667.0], [54.1, 1670.0], [54.2, 1672.0], [54.3, 1675.0], [54.4, 1677.0], [54.5, 1680.0], [54.6, 1682.0], [54.7, 1685.0], [54.8, 1688.0], [54.9, 1691.0], [55.0, 1694.0], [55.1, 1697.0], [55.2, 1699.0], [55.3, 1702.0], [55.4, 1704.0], [55.5, 1707.0], [55.6, 1710.0], [55.7, 1712.0], [55.8, 1714.0], [55.9, 1717.0], [56.0, 1719.0], [56.1, 1722.0], [56.2, 1724.0], [56.3, 1726.0], [56.4, 1729.0], [56.5, 1731.0], [56.6, 1733.0], [56.7, 1736.0], [56.8, 1738.0], [56.9, 1741.0], [57.0, 1743.0], [57.1, 1746.0], [57.2, 1749.0], [57.3, 1751.0], [57.4, 1754.0], [57.5, 1757.0], [57.6, 1760.0], [57.7, 1764.0], [57.8, 1767.0], [57.9, 1770.0], [58.0, 1773.0], [58.1, 1777.0], [58.2, 1780.0], [58.3, 1783.0], [58.4, 1787.0], [58.5, 1790.0], [58.6, 1793.0], [58.7, 1796.0], [58.8, 1799.0], [58.9, 1801.0], [59.0, 1804.0], [59.1, 1806.0], [59.2, 1810.0], [59.3, 1812.0], [59.4, 1815.0], [59.5, 1818.0], [59.6, 1821.0], [59.7, 1825.0], [59.8, 1828.0], [59.9, 1831.0], [60.0, 1834.0], [60.1, 1837.0], [60.2, 1840.0], [60.3, 1843.0], [60.4, 1846.0], [60.5, 1849.0], [60.6, 1852.0], [60.7, 1854.0], [60.8, 1857.0], [60.9, 1860.0], [61.0, 1863.0], [61.1, 1867.0], [61.2, 1870.0], [61.3, 1874.0], [61.4, 1877.0], [61.5, 1880.0], [61.6, 1883.0], [61.7, 1886.0], [61.8, 1889.0], [61.9, 1892.0], [62.0, 1895.0], [62.1, 1898.0], [62.2, 1901.0], [62.3, 1904.0], [62.4, 1907.0], [62.5, 1911.0], [62.6, 1915.0], [62.7, 1918.0], [62.8, 1922.0], [62.9, 1925.0], [63.0, 1928.0], [63.1, 1931.0], [63.2, 1934.0], [63.3, 1938.0], [63.4, 1941.0], [63.5, 1943.0], [63.6, 1946.0], [63.7, 1949.0], [63.8, 1952.0], [63.9, 1955.0], [64.0, 1957.0], [64.1, 1960.0], [64.2, 1963.0], [64.3, 1965.0], [64.4, 1969.0], [64.5, 1972.0], [64.6, 1975.0], [64.7, 1978.0], [64.8, 1982.0], [64.9, 1985.0], [65.0, 1988.0], [65.1, 1993.0], [65.2, 1996.0], [65.3, 1999.0], [65.4, 2002.0], [65.5, 2005.0], [65.6, 2008.0], [65.7, 2012.0], [65.8, 2014.0], [65.9, 2017.0], [66.0, 2020.0], [66.1, 2022.0], [66.2, 2025.0], [66.3, 2028.0], [66.4, 2031.0], [66.5, 2034.0], [66.6, 2037.0], [66.7, 2041.0], [66.8, 2043.0], [66.9, 2046.0], [67.0, 2049.0], [67.1, 2051.0], [67.2, 2054.0], [67.3, 2056.0], [67.4, 2059.0], [67.5, 2061.0], [67.6, 2064.0], [67.7, 2066.0], [67.8, 2068.0], [67.9, 2071.0], [68.0, 2073.0], [68.1, 2075.0], [68.2, 2077.0], [68.3, 2080.0], [68.4, 2082.0], [68.5, 2084.0], [68.6, 2087.0], [68.7, 2090.0], [68.8, 2092.0], [68.9, 2095.0], [69.0, 2098.0], [69.1, 2101.0], [69.2, 2104.0], [69.3, 2106.0], [69.4, 2109.0], [69.5, 2112.0], [69.6, 2114.0], [69.7, 2117.0], [69.8, 2120.0], [69.9, 2123.0], [70.0, 2126.0], [70.1, 2130.0], [70.2, 2133.0], [70.3, 2136.0], [70.4, 2139.0], [70.5, 2141.0], [70.6, 2144.0], [70.7, 2146.0], [70.8, 2148.0], [70.9, 2150.0], [71.0, 2152.0], [71.1, 2154.0], [71.2, 2156.0], [71.3, 2158.0], [71.4, 2159.0], [71.5, 2162.0], [71.6, 2164.0], [71.7, 2167.0], [71.8, 2170.0], [71.9, 2174.0], [72.0, 2178.0], [72.1, 2183.0], [72.2, 2189.0], [72.3, 2196.0], [72.4, 2202.0], [72.5, 2207.0], [72.6, 2213.0], [72.7, 2219.0], [72.8, 2226.0], [72.9, 2232.0], [73.0, 2240.0], [73.1, 2248.0], [73.2, 2254.0], [73.3, 2260.0], [73.4, 2266.0], [73.5, 2273.0], [73.6, 2279.0], [73.7, 2285.0], [73.8, 2291.0], [73.9, 2297.0], [74.0, 2303.0], [74.1, 2309.0], [74.2, 2314.0], [74.3, 2319.0], [74.4, 2325.0], [74.5, 2332.0], [74.6, 2337.0], [74.7, 2342.0], [74.8, 2347.0], [74.9, 2352.0], [75.0, 2356.0], [75.1, 2362.0], [75.2, 2367.0], [75.3, 2372.0], [75.4, 2377.0], [75.5, 2383.0], [75.6, 2389.0], [75.7, 2395.0], [75.8, 2401.0], [75.9, 2406.0], [76.0, 2413.0], [76.1, 2418.0], [76.2, 2424.0], [76.3, 2429.0], [76.4, 2435.0], [76.5, 2441.0], [76.6, 2447.0], [76.7, 2454.0], [76.8, 2461.0], [76.9, 2468.0], [77.0, 2475.0], [77.1, 2483.0], [77.2, 2488.0], [77.3, 2495.0], [77.4, 2501.0], [77.5, 2508.0], [77.6, 2514.0], [77.7, 2521.0], [77.8, 2529.0], [77.9, 2537.0], [78.0, 2547.0], [78.1, 2557.0], [78.2, 2566.0], [78.3, 2574.0], [78.4, 2583.0], [78.5, 2592.0], [78.6, 2601.0], [78.7, 2610.0], [78.8, 2617.0], [78.9, 2623.0], [79.0, 2632.0], [79.1, 2639.0], [79.2, 2647.0], [79.3, 2656.0], [79.4, 2665.0], [79.5, 2672.0], [79.6, 2679.0], [79.7, 2686.0], [79.8, 2693.0], [79.9, 2701.0], [80.0, 2710.0], [80.1, 2716.0], [80.2, 2723.0], [80.3, 2731.0], [80.4, 2739.0], [80.5, 2745.0], [80.6, 2752.0], [80.7, 2760.0], [80.8, 2767.0], [80.9, 2773.0], [81.0, 2780.0], [81.1, 2787.0], [81.2, 2794.0], [81.3, 2802.0], [81.4, 2811.0], [81.5, 2820.0], [81.6, 2830.0], [81.7, 2839.0], [81.8, 2848.0], [81.9, 2857.0], [82.0, 2866.0], [82.1, 2874.0], [82.2, 2883.0], [82.3, 2891.0], [82.4, 2899.0], [82.5, 2907.0], [82.6, 2915.0], [82.7, 2925.0], [82.8, 2936.0], [82.9, 2946.0], [83.0, 2954.0], [83.1, 2965.0], [83.2, 2974.0], [83.3, 2984.0], [83.4, 2993.0], [83.5, 3004.0], [83.6, 3013.0], [83.7, 3023.0], [83.8, 3032.0], [83.9, 3045.0], [84.0, 3054.0], [84.1, 3063.0], [84.2, 3072.0], [84.3, 3084.0], [84.4, 3095.0], [84.5, 3105.0], [84.6, 3116.0], [84.7, 3124.0], [84.8, 3133.0], [84.9, 3142.0], [85.0, 3152.0], [85.1, 3160.0], [85.2, 3169.0], [85.3, 3180.0], [85.4, 3192.0], [85.5, 3204.0], [85.6, 3216.0], [85.7, 3231.0], [85.8, 3247.0], [85.9, 3263.0], [86.0, 3280.0], [86.1, 3295.0], [86.2, 3312.0], [86.3, 3324.0], [86.4, 3340.0], [86.5, 3355.0], [86.6, 3368.0], [86.7, 3381.0], [86.8, 3395.0], [86.9, 3409.0], [87.0, 3426.0], [87.1, 3442.0], [87.2, 3459.0], [87.3, 3476.0], [87.4, 3493.0], [87.5, 3510.0], [87.6, 3529.0], [87.7, 3552.0], [87.8, 3574.0], [87.9, 3591.0], [88.0, 3607.0], [88.1, 3622.0], [88.2, 3637.0], [88.3, 3655.0], [88.4, 3675.0], [88.5, 3693.0], [88.6, 3712.0], [88.7, 3733.0], [88.8, 3753.0], [88.9, 3777.0], [89.0, 3797.0], [89.1, 3818.0], [89.2, 3841.0], [89.3, 3863.0], [89.4, 3886.0], [89.5, 3911.0], [89.6, 3929.0], [89.7, 3954.0], [89.8, 3975.0], [89.9, 3995.0], [90.0, 4017.0], [90.1, 4042.0], [90.2, 4062.0], [90.3, 4085.0], [90.4, 4106.0], [90.5, 4125.0], [90.6, 4146.0], [90.7, 4169.0], [90.8, 4186.0], [90.9, 4209.0], [91.0, 4232.0], [91.1, 4255.0], [91.2, 4281.0], [91.3, 4306.0], [91.4, 4334.0], [91.5, 4367.0], [91.6, 4401.0], [91.7, 4439.0], [91.8, 4479.0], [91.9, 4514.0], [92.0, 4551.0], [92.1, 4581.0], [92.2, 4619.0], [92.3, 4665.0], [92.4, 4703.0], [92.5, 4738.0], [92.6, 4778.0], [92.7, 4814.0], [92.8, 4860.0], [92.9, 4905.0], [93.0, 4943.0], [93.1, 4983.0], [93.2, 5015.0], [93.3, 5053.0], [93.4, 5086.0], [93.5, 5120.0], [93.6, 5158.0], [93.7, 5191.0], [93.8, 5228.0], [93.9, 5267.0], [94.0, 5302.0], [94.1, 5332.0], [94.2, 5380.0], [94.3, 5423.0], [94.4, 5477.0], [94.5, 5541.0], [94.6, 5605.0], [94.7, 5678.0], [94.8, 5743.0], [94.9, 5804.0], [95.0, 5852.0], [95.1, 5901.0], [95.2, 5968.0], [95.3, 6039.0], [95.4, 6111.0], [95.5, 6173.0], [95.6, 6227.0], [95.7, 6293.0], [95.8, 6353.0], [95.9, 6418.0], [96.0, 6518.0], [96.1, 6630.0], [96.2, 6758.0], [96.3, 6877.0], [96.4, 6982.0], [96.5, 7078.0], [96.6, 7194.0], [96.7, 7307.0], [96.8, 7401.0], [96.9, 7499.0], [97.0, 7630.0], [97.1, 7776.0], [97.2, 7926.0], [97.3, 8059.0], [97.4, 8175.0], [97.5, 8316.0], [97.6, 8440.0], [97.7, 8587.0], [97.8, 8785.0], [97.9, 9060.0], [98.0, 9345.0], [98.1, 9580.0], [98.2, 9961.0], [98.3, 10160.0], [98.4, 10332.0], [98.5, 10430.0], [98.6, 10570.0], [98.7, 10783.0], [98.8, 11064.0], [98.9, 11450.0], [99.0, 12421.0], [99.1, 13079.0], [99.2, 13972.0], [99.3, 14861.0], [99.4, 15287.0], [99.5, 15661.0], [99.6, 16117.0], [99.7, 16791.0], [99.8, 17903.0], [99.9, 20888.0], [100.0, 31651.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 53867.0, "series": [{"data": [[0.0, 533.0], [100.0, 37.0], [200.0, 24.0], [300.0, 19.0], [400.0, 5.0], [500.0, 5.0], [600.0, 5.0], [700.0, 7.0], [800.0, 1.0], [1000.0, 8038.0], [1100.0, 53867.0], [1200.0, 8455.0], [1300.0, 7617.0], [1400.0, 6104.0], [1500.0, 5847.0], [1600.0, 6232.0], [1700.0, 6362.0], [1800.0, 5809.0], [1900.0, 5519.0], [2000.0, 6586.0], [2100.0, 5797.0], [2200.0, 2760.0], [2300.0, 3225.0], [2400.0, 2801.0], [2500.0, 2113.0], [2600.0, 2282.0], [2700.0, 2413.0], [2800.0, 2009.0], [2900.0, 1849.0], [3000.0, 1719.0], [3100.0, 1787.0], [3200.0, 1167.0], [3300.0, 1239.0], [3400.0, 1058.0], [3500.0, 897.0], [3600.0, 1030.0], [3700.0, 839.0], [3800.0, 763.0], [3900.0, 832.0], [4000.0, 784.0], [4100.0, 850.0], [4300.0, 557.0], [4200.0, 739.0], [4400.0, 457.0], [4500.0, 522.0], [4600.0, 423.0], [4700.0, 447.0], [4800.0, 423.0], [4900.0, 452.0], [5000.0, 516.0], [5100.0, 489.0], [5200.0, 471.0], [5300.0, 459.0], [5400.0, 313.0], [5500.0, 286.0], [5600.0, 236.0], [5700.0, 290.0], [5800.0, 358.0], [5900.0, 245.0], [6100.0, 289.0], [6000.0, 262.0], [6200.0, 271.0], [6300.0, 297.0], [6400.0, 190.0], [6500.0, 151.0], [6600.0, 151.0], [6700.0, 146.0], [6800.0, 142.0], [6900.0, 178.0], [7000.0, 166.0], [7100.0, 152.0], [7300.0, 182.0], [7400.0, 182.0], [7200.0, 157.0], [7500.0, 133.0], [7600.0, 137.0], [7700.0, 111.0], [7800.0, 118.0], [7900.0, 115.0], [8000.0, 145.0], [8100.0, 154.0], [8300.0, 134.0], [8400.0, 130.0], [8500.0, 107.0], [8600.0, 85.0], [8700.0, 93.0], [8200.0, 124.0], [8900.0, 55.0], [9100.0, 71.0], [9200.0, 51.0], [8800.0, 65.0], [9000.0, 76.0], [9400.0, 74.0], [9500.0, 77.0], [9300.0, 59.0], [9700.0, 48.0], [9600.0, 63.0], [9900.0, 43.0], [9800.0, 33.0], [10000.0, 82.0], [10100.0, 109.0], [10200.0, 96.0], [10500.0, 106.0], [10400.0, 145.0], [10700.0, 84.0], [10300.0, 169.0], [10600.0, 79.0], [10800.0, 57.0], [11000.0, 64.0], [11100.0, 58.0], [11200.0, 44.0], [10900.0, 62.0], [11300.0, 35.0], [11600.0, 17.0], [11500.0, 18.0], [11700.0, 9.0], [11400.0, 25.0], [11900.0, 11.0], [12100.0, 22.0], [12200.0, 38.0], [12000.0, 7.0], [11800.0, 9.0], [12300.0, 21.0], [12400.0, 40.0], [12500.0, 31.0], [12600.0, 30.0], [12700.0, 20.0], [12900.0, 15.0], [12800.0, 8.0], [13200.0, 24.0], [13000.0, 56.0], [13300.0, 16.0], [13100.0, 60.0], [13400.0, 6.0], [13500.0, 8.0], [13600.0, 6.0], [13700.0, 17.0], [13800.0, 16.0], [14200.0, 21.0], [14300.0, 13.0], [13900.0, 12.0], [14000.0, 7.0], [14100.0, 12.0], [14400.0, 24.0], [14600.0, 25.0], [14500.0, 28.0], [14700.0, 24.0], [14800.0, 28.0], [14900.0, 41.0], [15200.0, 48.0], [15000.0, 30.0], [15100.0, 50.0], [15300.0, 44.0], [15400.0, 44.0], [15600.0, 40.0], [15500.0, 59.0], [15700.0, 30.0], [15800.0, 43.0], [16300.0, 35.0], [15900.0, 38.0], [16000.0, 41.0], [16100.0, 29.0], [16200.0, 24.0], [17200.0, 13.0], [17400.0, 17.0], [16400.0, 28.0], [16800.0, 15.0], [17000.0, 19.0], [16600.0, 16.0], [18200.0, 8.0], [17600.0, 11.0], [17800.0, 11.0], [18000.0, 9.0], [18400.0, 14.0], [18600.0, 10.0], [18800.0, 7.0], [19000.0, 1.0], [19200.0, 7.0], [19400.0, 7.0], [20000.0, 5.0], [19600.0, 9.0], [19800.0, 2.0], [20200.0, 1.0], [20400.0, 2.0], [20800.0, 5.0], [20600.0, 3.0], [21000.0, 6.0], [21400.0, 8.0], [21200.0, 2.0], [21800.0, 7.0], [21600.0, 3.0], [22400.0, 3.0], [23000.0, 4.0], [23200.0, 1.0], [22600.0, 1.0], [23400.0, 2.0], [23800.0, 1.0], [24600.0, 1.0], [26200.0, 8.0], [26400.0, 1.0], [26600.0, 9.0], [27400.0, 1.0], [27000.0, 4.0], [27600.0, 1.0], [28000.0, 4.0], [28400.0, 1.0], [28600.0, 2.0], [29200.0, 4.0], [28800.0, 4.0], [29000.0, 2.0], [29600.0, 1.0], [30000.0, 3.0], [29800.0, 1.0], [31600.0, 2.0], [16500.0, 24.0], [17300.0, 25.0], [16700.0, 30.0], [16900.0, 13.0], [17100.0, 17.0], [17500.0, 19.0], [17700.0, 12.0], [17900.0, 14.0], [18100.0, 13.0], [18300.0, 8.0], [18900.0, 9.0], [19100.0, 3.0], [18500.0, 9.0], [18700.0, 2.0], [19300.0, 7.0], [20100.0, 4.0], [19500.0, 2.0], [19700.0, 2.0], [19900.0, 3.0], [20300.0, 6.0], [20900.0, 4.0], [21100.0, 3.0], [20500.0, 6.0], [21300.0, 4.0], [20700.0, 2.0], [21500.0, 5.0], [22300.0, 3.0], [21700.0, 4.0], [22500.0, 4.0], [22100.0, 1.0], [22900.0, 3.0], [22700.0, 1.0], [23300.0, 1.0], [23500.0, 1.0], [23700.0, 1.0], [23900.0, 1.0], [24100.0, 1.0], [26300.0, 3.0], [26100.0, 4.0], [26500.0, 9.0], [26700.0, 4.0], [26900.0, 3.0], [27100.0, 2.0], [27300.0, 1.0], [28100.0, 2.0], [27900.0, 1.0], [28500.0, 8.0], [29100.0, 1.0], [28700.0, 4.0], [29500.0, 1.0], [28900.0, 1.0], [29300.0, 1.0], [29900.0, 1.0], [29700.0, 1.0], [30500.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 31600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 90000.0, "series": [{"data": [[0.0, 2.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 84131.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 90000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1185.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 24.14893617021276, "minX": 1.68416088E12, "maxY": 3000.0, "series": [{"data": [[1.684161E12, 3000.0], [1.68416118E12, 2794.2393295561897], [1.68416112E12, 3000.0], [1.68416124E12, 24.14893617021276], [1.68416094E12, 3000.0], [1.68416088E12, 3000.0], [1.68416106E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416124E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1094.0, "minX": 1.0, "maxY": 31651.0, "series": [{"data": [[2.0, 31603.0], [4.0, 30179.5], [5.0, 29650.0], [6.0, 29215.0], [8.0, 29677.5], [9.0, 29077.0], [10.0, 30025.0], [11.0, 30062.0], [12.0, 29745.0], [13.0, 28791.0], [14.0, 28828.0], [15.0, 28592.0], [16.0, 29005.0], [17.0, 28589.0], [18.0, 28579.0], [19.0, 28836.0], [20.0, 28949.0], [21.0, 28519.0], [22.0, 28777.0], [23.0, 28547.0], [24.0, 28775.0], [25.0, 29504.0], [27.0, 28704.0], [28.0, 28898.0], [30.0, 29039.5], [31.0, 28574.0], [33.0, 28912.0], [35.0, 29923.0], [34.0, 28504.0], [37.0, 28956.5], [39.0, 28170.0], [38.0, 29262.0], [41.0, 28268.0], [43.0, 28026.0], [42.0, 28024.0], [45.0, 27947.0], [44.0, 28061.0], [47.0, 27621.0], [46.0, 28130.0], [49.0, 27139.0], [48.0, 27311.0], [51.0, 27007.0], [50.0, 27021.0], [53.0, 26923.0], [52.0, 27006.0], [55.0, 27111.0], [54.0, 27019.0], [57.0, 26679.0], [56.0, 26680.0], [59.0, 26673.0], [58.0, 26675.0], [61.0, 26683.5], [63.0, 26634.0], [62.0, 26638.0], [67.0, 26602.0], [66.0, 26677.0], [65.0, 26928.0], [64.0, 26928.0], [71.0, 26526.0], [70.0, 26758.0], [69.0, 26599.0], [68.0, 26709.0], [75.0, 26569.0], [73.0, 26575.0], [72.0, 26577.0], [79.0, 26419.0], [78.0, 26544.0], [77.0, 26549.0], [76.0, 26565.0], [83.0, 26254.0], [81.0, 26188.0], [80.0, 26192.0], [87.0, 26263.0], [86.0, 26312.0], [85.0, 26330.0], [84.0, 26178.0], [90.0, 26250.0], [89.0, 26253.0], [88.0, 26238.0], [95.0, 27464.0], [94.0, 26222.0], [92.0, 26222.0], [99.0, 24183.0], [98.0, 23498.0], [97.0, 24620.0], [96.0, 26718.0], [103.0, 23397.0], [102.0, 23196.5], [100.0, 23505.0], [105.0, 22105.0], [104.0, 23985.0], [109.0, 23086.0], [115.0, 22645.0], [114.0, 22668.666666666668], [112.0, 23150.8], [119.0, 22433.0], [118.0, 21755.0], [117.0, 22518.0], [116.0, 23257.0], [123.0, 21665.0], [122.0, 21681.0], [121.0, 21723.0], [120.0, 21896.0], [127.0, 23038.0], [126.0, 22125.0], [124.0, 22338.0], [135.0, 21590.0], [134.0, 21401.0], [133.0, 21442.0], [132.0, 21426.0], [131.0, 21719.0], [130.0, 22309.0], [129.0, 21615.0], [128.0, 23047.0], [142.0, 21826.0], [141.0, 21231.0], [140.0, 22001.5], [138.0, 21481.0], [137.0, 21518.0], [136.0, 21128.0], [151.0, 21543.75], [149.0, 21842.0], [146.0, 20843.0], [145.0, 20906.0], [144.0, 21373.0], [159.0, 22395.0], [158.0, 21485.0], [157.0, 21556.0], [156.0, 21037.0], [155.0, 21064.0], [154.0, 21501.0], [153.0, 20950.0], [152.0, 21056.0], [167.0, 21385.0], [166.0, 20605.0], [165.0, 20732.0], [164.0, 20888.0], [163.0, 21525.0], [162.0, 21412.0], [161.0, 20548.0], [160.0, 21450.0], [173.0, 20150.0], [172.0, 20432.0], [171.0, 21352.0], [170.0, 20463.0], [169.0, 20657.0], [168.0, 21480.0], [183.0, 20321.0], [181.0, 20385.0], [179.0, 20822.0], [177.0, 20505.0], [191.0, 21835.0], [190.0, 20088.0], [188.0, 20456.0], [185.0, 20668.0], [199.0, 19432.0], [198.0, 19423.0], [197.0, 21144.0], [196.0, 20077.5], [194.0, 19822.0], [207.0, 19358.5], [205.0, 19375.0], [204.0, 20378.0], [203.0, 19635.0], [202.0, 19651.0], [201.0, 19638.0], [200.0, 19429.0], [215.0, 19425.0], [214.0, 19284.0], [213.0, 20217.0], [212.0, 19602.0], [211.0, 19179.0], [210.0, 19626.0], [209.0, 19215.0], [208.0, 19431.0], [223.0, 19221.0], [222.0, 18991.0], [221.0, 18958.0], [220.0, 19318.0], [219.0, 19473.0], [218.0, 19966.0], [217.0, 19964.0], [216.0, 19316.0], [231.0, 19260.0], [230.0, 18882.0], [229.0, 19361.0], [228.0, 19776.0], [227.0, 19394.0], [226.0, 21171.0], [225.0, 19896.0], [224.0, 19945.0], [239.0, 19643.0], [238.0, 18936.0], [237.0, 19136.0], [236.0, 18750.0], [235.0, 19610.0], [234.0, 18808.0], [233.0, 20667.0], [232.0, 18804.0], [247.0, 19042.0], [245.0, 19615.0], [244.0, 19456.0], [243.0, 19574.0], [242.0, 18656.0], [241.0, 18887.0], [240.0, 18629.0], [255.0, 18691.0], [254.0, 18470.0], [253.0, 20155.0], [252.0, 18551.0], [251.0, 18468.0], [250.0, 18898.0], [249.0, 18835.0], [248.0, 18744.0], [270.0, 18482.0], [271.0, 18676.0], [269.0, 18508.0], [268.0, 19297.0], [267.0, 18373.0], [266.0, 19221.0], [265.0, 18519.0], [264.0, 18642.0], [263.0, 20008.0], [257.0, 18400.0], [256.0, 18672.0], [259.0, 19248.0], [258.0, 18405.0], [262.0, 18614.0], [261.0, 18358.0], [260.0, 18344.0], [284.0, 18487.0], [283.0, 18450.5], [281.0, 18122.0], [280.0, 18637.0], [279.0, 18330.0], [273.0, 18465.0], [272.0, 18249.0], [278.0, 18169.0], [277.0, 18460.0], [276.0, 18458.0], [275.0, 5856.0], [274.0, 18225.0], [303.0, 17931.0], [302.0, 18136.666666666668], [299.0, 18600.666666666668], [296.0, 18498.0], [294.0, 18254.5], [292.0, 18216.0], [291.0, 18565.6], [290.0, 18751.0], [318.0, 17998.0], [315.0, 18114.0], [309.0, 17921.0], [308.0, 18029.5], [306.0, 18202.0], [305.0, 17941.5], [335.0, 17917.0], [333.0, 18328.0], [323.0, 18037.0], [321.0, 18130.75], [331.0, 17668.0], [330.0, 18052.0], [329.0, 17800.0], [328.0, 18150.0], [327.0, 18144.0], [325.0, 18048.333333333332], [324.0, 18897.0], [350.0, 17621.0], [351.0, 17737.0], [349.0, 17662.5], [347.0, 18567.0], [346.0, 18037.0], [345.0, 18398.0], [342.0, 17838.5], [340.0, 18147.0], [338.0, 17581.0], [337.0, 17595.0], [336.0, 17873.0], [355.0, 17514.0], [366.0, 18446.5], [367.0, 17371.0], [364.0, 17724.0], [362.0, 17713.5], [360.0, 17847.0], [359.0, 17587.333333333332], [357.0, 17485.0], [354.0, 17470.0], [353.0, 17597.0], [370.0, 17629.0], [382.0, 17318.0], [383.0, 17675.0], [380.0, 17469.0], [378.0, 17304.0], [376.0, 18253.0], [375.0, 17614.0], [373.0, 17760.333333333332], [369.0, 3465.0], [368.0, 17719.0], [396.0, 18911.0], [395.0, 17411.75], [391.0, 18145.0], [390.0, 18086.0], [388.0, 17272.666666666668], [385.0, 17240.0], [384.0, 17511.0], [415.0, 13325.0], [414.0, 17666.333333333332], [410.0, 17357.0], [409.0, 17102.0], [408.0, 17104.0], [407.0, 17457.5], [404.0, 17299.0], [402.0, 17380.0], [400.0, 17727.0], [428.0, 17173.5], [427.0, 16947.0], [424.0, 17392.0], [423.0, 17079.0], [422.0, 17435.0], [421.0, 17980.0], [420.0, 17129.5], [418.0, 17632.666666666668], [444.0, 17290.666666666668], [447.0, 16905.0], [446.0, 17756.0], [445.0, 17339.0], [442.0, 16885.0], [439.0, 17381.0], [438.0, 17160.0], [437.0, 17119.0], [436.0, 17119.555555555555], [461.0, 16669.0], [460.0, 16671.0], [459.0, 16686.0], [458.0, 17254.0], [456.0, 16740.0], [454.0, 16762.0], [453.0, 17164.0], [450.0, 16873.666666666668], [477.0, 17020.0], [479.0, 16718.0], [476.0, 16632.0], [466.0, 17066.0], [464.0, 16807.0], [475.0, 17066.0], [474.0, 17094.0], [473.0, 16851.0], [471.0, 17272.0], [469.0, 17094.0], [468.0, 17289.5], [494.0, 16650.0], [495.0, 16550.0], [493.0, 16565.0], [492.0, 16568.0], [491.0, 17581.0], [490.0, 16930.0], [489.0, 17168.5], [487.0, 17465.0], [482.0, 17031.0], [481.0, 16852.0], [480.0, 16732.0], [486.0, 16824.75], [510.0, 17438.0], [511.0, 16471.0], [509.0, 17384.0], [508.0, 16471.0], [507.0, 16448.0], [506.0, 16454.0], [505.0, 17387.0], [504.0, 16723.0], [503.0, 16485.0], [496.0, 16780.0], [499.0, 16519.0], [498.0, 16787.5], [502.0, 17469.0], [501.0, 16818.0], [500.0, 16492.0], [516.0, 16429.0], [542.0, 16310.0], [538.0, 17277.0], [534.0, 16349.0], [530.0, 16784.0], [528.0, 16383.0], [526.0, 17410.0], [524.0, 16388.0], [522.0, 17363.0], [514.0, 16709.0], [512.0, 16714.0], [568.0, 17948.0], [574.0, 16224.0], [572.0, 16159.0], [570.0, 16401.0], [566.0, 16380.0], [554.0, 16275.0], [552.0, 16291.0], [550.0, 16290.0], [548.0, 16307.0], [546.0, 16349.5], [544.0, 17398.0], [604.0, 16331.0], [606.0, 17737.0], [602.0, 17015.0], [600.0, 16485.0], [598.0, 16322.0], [596.0, 16077.0], [594.0, 16097.0], [592.0, 16108.0], [590.0, 16503.0], [578.0, 17112.0], [576.0, 16392.0], [582.0, 16378.0], [580.0, 16363.0], [588.0, 17030.0], [586.0, 16984.0], [584.0, 17759.0], [636.0, 16117.0], [638.0, 15867.0], [634.0, 15939.0], [632.0, 15930.0], [630.0, 15920.0], [628.0, 16235.0], [626.0, 16158.0], [624.0, 15924.0], [622.0, 16168.0], [610.0, 16337.0], [608.0, 16063.0], [614.0, 17128.0], [612.0, 16562.0], [620.0, 16067.0], [618.0, 16345.0], [616.0, 16302.0], [668.0, 16659.0], [670.0, 16263.0], [666.0, 15799.0], [664.0, 16759.0], [662.0, 16754.0], [660.0, 15832.0], [658.0, 16129.0], [656.0, 15852.0], [654.0, 17505.0], [642.0, 16138.0], [640.0, 16761.0], [646.0, 15867.0], [644.0, 15861.0], [652.0, 15845.0], [650.0, 15896.0], [648.0, 15858.0], [700.0, 1626.0], [702.0, 1658.0], [698.0, 15653.0], [696.0, 1541.0], [694.0, 15703.0], [692.0, 1511.0], [690.0, 16609.0], [688.0, 15702.0], [686.0, 16670.0], [674.0, 15779.0], [672.0, 15983.0], [678.0, 16041.0], [676.0, 15781.0], [684.0, 15837.0], [682.0, 15725.0], [680.0, 16007.0], [732.0, 15728.0], [734.0, 15952.0], [730.0, 16633.0], [728.0, 16556.0], [726.0, 16553.0], [724.0, 1893.0], [722.0, 15742.0], [720.0, 16099.0], [718.0, 16096.0], [706.0, 1728.0], [704.0, 16590.0], [710.0, 15671.0], [708.0, 15910.0], [716.0, 1803.0], [714.0, 1768.0], [712.0, 16057.0], [764.0, 15625.0], [766.0, 1428.0], [762.0, 15866.0], [760.0, 16070.0], [758.0, 15651.0], [756.0, 16529.0], [754.0, 15616.0], [752.0, 16077.0], [750.0, 15659.0], [738.0, 2212.0], [736.0, 16604.0], [742.0, 2265.0], [740.0, 2247.0], [748.0, 2388.0], [746.0, 2325.0], [744.0, 2323.0], [796.0, 15953.0], [798.0, 15729.0], [792.0, 15548.0], [774.0, 16074.0], [772.0, 16678.0], [770.0, 16512.0], [768.0, 16028.0], [790.0, 15780.0], [788.0, 15734.0], [786.0, 15582.0], [784.0, 15650.0], [782.0, 15551.0], [780.0, 1403.0], [778.0, 16641.0], [776.0, 15598.0], [828.0, 15553.0], [830.0, 15559.0], [826.0, 15941.0], [824.0, 15564.0], [822.0, 15808.0], [820.0, 15537.0], [818.0, 1372.0], [816.0, 1375.0], [814.0, 15540.0], [802.0, 15966.0], [800.0, 15810.0], [806.0, 1401.0], [804.0, 16588.0], [812.0, 16589.0], [810.0, 16498.0], [808.0, 15659.0], [860.0, 15997.0], [862.0, 15770.0], [858.0, 16399.0], [856.0, 15985.0], [854.0, 15509.0], [852.0, 15500.0], [850.0, 15549.0], [848.0, 1347.0], [846.0, 1360.0], [834.0, 16480.0], [832.0, 2255.0], [838.0, 15513.0], [836.0, 15549.0], [844.0, 1408.0], [840.0, 15548.0], [892.0, 15430.0], [894.0, 16413.0], [890.0, 15398.0], [888.0, 15430.0], [886.0, 16355.0], [884.0, 16299.0], [882.0, 1251.0], [880.0, 15408.0], [878.0, 15404.0], [866.0, 15519.0], [864.0, 15517.0], [870.0, 15706.0], [868.0, 16360.0], [876.0, 1239.0], [874.0, 15877.0], [872.0, 15680.0], [924.0, 1269.0], [926.0, 15630.0], [922.0, 1260.0], [920.0, 1251.0], [918.0, 15423.0], [916.0, 1258.0], [914.0, 1255.0], [912.0, 1252.0], [910.0, 15416.0], [898.0, 1247.0], [896.0, 1250.0], [902.0, 1306.0], [900.0, 15416.0], [908.0, 1245.0], [906.0, 1247.0], [904.0, 15875.0], [956.0, 1215.0], [958.0, 1209.0], [954.0, 1218.0], [952.0, 1221.0], [950.0, 1228.0], [948.0, 1224.0], [946.0, 1216.0], [944.0, 15361.0], [942.0, 1210.0], [930.0, 15626.0], [928.0, 1182.0], [934.0, 15583.0], [932.0, 1215.0], [940.0, 1213.0], [938.0, 1211.0], [936.0, 16278.0], [988.0, 15535.0], [990.0, 1181.0], [986.0, 1234.0], [984.0, 1228.0], [982.0, 1232.0], [980.0, 1229.0], [978.0, 16298.0], [976.0, 1224.0], [974.0, 1222.0], [962.0, 1218.0], [960.0, 15573.0], [966.0, 15740.0], [964.0, 1221.0], [972.0, 1222.0], [970.0, 15669.0], [968.0, 1217.0], [1020.0, 1204.0], [1022.0, 1195.0], [1018.0, 15271.0], [1016.0, 15259.0], [1014.0, 15243.0], [1012.0, 1202.0], [1010.0, 1247.0], [1008.0, 1194.0], [1006.0, 1191.0], [994.0, 1193.0], [992.0, 1185.0], [998.0, 1200.0], [996.0, 1198.0], [1004.0, 1188.0], [1002.0, 1212.0], [1000.0, 1190.0], [1080.0, 15247.0], [1084.0, 16217.0], [1076.0, 15224.0], [1072.0, 15226.0], [1068.0, 16176.0], [1064.0, 15488.0], [1060.0, 15661.0], [1056.0, 1222.0], [1052.0, 1214.0], [1028.0, 1203.0], [1024.0, 1206.0], [1036.0, 1208.0], [1032.0, 15576.0], [1048.0, 1225.0], [1044.0, 1205.0], [1040.0, 1207.0], [1144.0, 1304.0], [1148.0, 16069.0], [1140.0, 1305.0], [1136.0, 1299.0], [1132.0, 1307.0], [1128.0, 1331.0], [1124.0, 15419.0], [1120.0, 1284.0], [1116.0, 1292.0], [1088.0, 15203.0], [1100.0, 1271.0], [1092.0, 1292.0], [1112.0, 1279.0], [1108.0, 1352.0], [1104.0, 15453.0], [1208.0, 1351.0], [1212.0, 16822.0], [1204.0, 15119.0], [1200.0, 1270.0], [1196.0, 16069.0], [1192.0, 1267.0], [1188.0, 1274.0], [1184.0, 1277.0], [1180.0, 16091.0], [1156.0, 1268.0], [1152.0, 15247.0], [1164.0, 1272.0], [1160.0, 1263.0], [1176.0, 1271.0], [1172.0, 15295.0], [1168.0, 1329.0], [1272.0, 1302.0], [1276.0, 1392.0], [1268.0, 1410.0], [1264.0, 1302.0], [1260.0, 1298.0], [1256.0, 16756.0], [1252.0, 15171.0], [1248.0, 1344.0], [1244.0, 15240.0], [1220.0, 15094.0], [1216.0, 1324.0], [1228.0, 1292.0], [1224.0, 15503.0], [1240.0, 15347.0], [1236.0, 15085.0], [1232.0, 1306.0], [1336.0, 1283.0], [1340.0, 1639.0], [1332.0, 15225.0], [1328.0, 15206.0], [1324.0, 15105.0], [1320.0, 1361.0], [1316.0, 1305.0], [1312.0, 15243.0], [1308.0, 1304.0], [1284.0, 15316.0], [1280.0, 1520.0], [1292.0, 15039.0], [1288.0, 1122.0], [1304.0, 15449.0], [1300.0, 1307.0], [1296.0, 15960.0], [1400.0, 15332.0], [1404.0, 1317.0], [1396.0, 14925.0], [1392.0, 14927.0], [1388.0, 15185.0], [1384.0, 1338.0], [1380.0, 15197.0], [1376.0, 1298.0], [1372.0, 15207.0], [1348.0, 15847.0], [1344.0, 1469.0], [1356.0, 15303.0], [1352.0, 15384.0], [1368.0, 14948.0], [1364.0, 1285.0], [1360.0, 1287.0], [1468.0, 1299.0], [1464.0, 1296.0], [1448.0, 1477.0], [1460.0, 15240.0], [1456.0, 1295.0], [1420.0, 15085.0], [1416.0, 1158.0], [1412.0, 15349.0], [1408.0, 1334.0], [1452.0, 1298.0], [1444.0, 1291.0], [1440.0, 1285.0], [1436.0, 14844.0], [1432.0, 15237.0], [1428.0, 1507.0], [1424.0, 14849.0], [1528.0, 15573.0], [1504.0, 1318.0], [1508.0, 1407.0], [1512.0, 1388.0], [1532.0, 15554.0], [1524.0, 15577.0], [1520.0, 1259.0], [1472.0, 15249.0], [1476.0, 1333.0], [1480.0, 15648.0], [1484.0, 15199.0], [1500.0, 1308.0], [1496.0, 1303.0], [1492.0, 14940.0], [1488.0, 15226.0], [1516.0, 2046.0], [1592.0, 1237.0], [1568.0, 14880.0], [1572.0, 14817.0], [1576.0, 15584.0], [1596.0, 1275.0], [1588.0, 1231.0], [1584.0, 1276.0], [1536.0, 15110.0], [1540.0, 1310.0], [1544.0, 1270.0], [1548.0, 14903.0], [1564.0, 15691.0], [1560.0, 1277.0], [1556.0, 1272.0], [1552.0, 1274.0], [1580.0, 14982.0], [1656.0, 1273.0], [1632.0, 1292.0], [1636.0, 14982.0], [1640.0, 1261.0], [1660.0, 1274.0], [1652.0, 1282.0], [1648.0, 1269.0], [1600.0, 14823.0], [1604.0, 14820.0], [1608.0, 1417.0], [1612.0, 15509.0], [1628.0, 1305.0], [1624.0, 1295.0], [1620.0, 15575.0], [1616.0, 1259.0], [1644.0, 14983.0], [1720.0, 1919.0], [1696.0, 15391.0], [1700.0, 14719.0], [1704.0, 1312.0], [1724.0, 16097.0], [1716.0, 14718.0], [1712.0, 1311.0], [1664.0, 1286.0], [1668.0, 14902.0], [1672.0, 14939.0], [1676.0, 15433.0], [1692.0, 14730.0], [1688.0, 15412.0], [1684.0, 15368.0], [1680.0, 14874.0], [1708.0, 15394.0], [1784.0, 14507.0], [1760.0, 1218.0], [1764.0, 1228.0], [1768.0, 15907.0], [1788.0, 1135.0], [1780.0, 1132.0], [1776.0, 15175.0], [1728.0, 2057.0], [1732.0, 14451.0], [1736.0, 1295.0], [1740.0, 14643.0], [1756.0, 1267.0], [1752.0, 1224.0], [1748.0, 1222.0], [1744.0, 15315.0], [1772.0, 1132.0], [1848.0, 1200.0], [1824.0, 1186.0], [1828.0, 1201.0], [1832.0, 1226.0], [1852.0, 14342.0], [1844.0, 1180.0], [1840.0, 15069.0], [1792.0, 1142.0], [1800.0, 15171.0], [1820.0, 14683.0], [1816.0, 14614.0], [1812.0, 14633.0], [1808.0, 7946.0], [1836.0, 15154.0], [1912.0, 8774.0], [1888.0, 14807.0], [1892.0, 14873.0], [1896.0, 14835.0], [1916.0, 15499.0], [1908.0, 14079.0], [1904.0, 14737.0], [1856.0, 1111.0], [1860.0, 14278.0], [1864.0, 15674.0], [1868.0, 14457.0], [1884.0, 14378.0], [1880.0, 14472.0], [1876.0, 14450.0], [1872.0, 14109.0], [1900.0, 14107.0], [1976.0, 1168.0], [1952.0, 1187.0], [1956.0, 1140.0], [1960.0, 1132.0], [1980.0, 1161.0], [1972.0, 14596.0], [1968.0, 1240.0], [1920.0, 14702.0], [1924.0, 1107.0], [1928.0, 13783.0], [1932.0, 13737.0], [1948.0, 1178.0], [1944.0, 14577.0], [1940.0, 1165.0], [1936.0, 14660.0], [1964.0, 1201.0], [2040.0, 14440.0], [2016.0, 1169.0], [2020.0, 1149.0], [2024.0, 1188.0], [2044.0, 1163.0], [2036.0, 1143.0], [2032.0, 1162.0], [1984.0, 1161.0], [1988.0, 1167.0], [1992.0, 1128.0], [1996.0, 1120.0], [2012.0, 1125.0], [2008.0, 1119.0], [2004.0, 1136.0], [2000.0, 14497.0], [2028.0, 1165.0], [2160.0, 1213.0], [2112.0, 1110.0], [2120.0, 1143.0], [2128.0, 14945.0], [2168.0, 1182.0], [2152.0, 1186.0], [2144.0, 13551.0], [2048.0, 1134.0], [2056.0, 1149.0], [2064.0, 1112.0], [2072.0, 1154.0], [2104.0, 1134.0], [2096.0, 1124.0], [2088.0, 1120.0], [2080.0, 14465.0], [2136.0, 1187.0], [2280.0, 1182.0], [2296.0, 1137.0], [2248.0, 1187.0], [2240.0, 1175.0], [2256.0, 1180.0], [2264.0, 1170.0], [2272.0, 1137.0], [2200.0, 1234.0], [2192.0, 1175.0], [2184.0, 1288.0], [2176.0, 1227.0], [2232.0, 1155.0], [2224.0, 1202.0], [2216.0, 1232.0], [2208.0, 1177.0], [2416.0, 1135.0], [2408.0, 1134.0], [2424.0, 1150.0], [2368.0, 1117.0], [2376.0, 1118.0], [2384.0, 1190.0], [2392.0, 1132.0], [2400.0, 1134.0], [2304.0, 1184.0], [2312.0, 1171.0], [2320.0, 1154.0], [2328.0, 1150.0], [2360.0, 1123.0], [2352.0, 1162.0], [2344.0, 1158.0], [2336.0, 1159.0], [2544.0, 1169.0], [2536.0, 1149.0], [2552.0, 1178.0], [2496.0, 12968.0], [2504.0, 1129.0], [2512.0, 1161.0], [2520.0, 1135.0], [2528.0, 1172.0], [2432.0, 1209.0], [2440.0, 1291.0], [2448.0, 1208.0], [2456.0, 1182.0], [2488.0, 1160.0], [2480.0, 1170.0], [2472.0, 1174.0], [2464.0, 13278.0], [2672.0, 1165.0], [2680.0, 1169.0], [2624.0, 1182.0], [2632.0, 1189.0], [2640.0, 1153.0], [2648.0, 1118.0], [2664.0, 1114.0], [2656.0, 1131.0], [2560.0, 1148.0], [2568.0, 12676.0], [2576.0, 1120.0], [2616.0, 1191.0], [2608.0, 1173.0], [2600.0, 1160.0], [2592.0, 12643.0], [2808.0, 12447.0], [2792.0, 13205.0], [2752.0, 12419.0], [2760.0, 12671.0], [2768.0, 12442.0], [2776.0, 13926.0], [2800.0, 12223.0], [2784.0, 13129.0], [2688.0, 1103.0], [2696.0, 12686.0], [2704.0, 1138.0], [2712.0, 1098.0], [2744.0, 12538.0], [2736.0, 14068.0], [2728.0, 12836.0], [2720.0, 7334.0], [2936.0, 13768.0], [2920.0, 13187.0], [2880.0, 12497.0], [2888.0, 13887.0], [2896.0, 13033.0], [2904.0, 13831.0], [2928.0, 13144.0], [2912.0, 13803.0], [2816.0, 12544.0], [2824.0, 12219.0], [2832.0, 12700.0], [2840.0, 12461.0], [2872.0, 12657.0], [2864.0, 12437.0], [2856.0, 12378.0], [2848.0, 12453.0], [2944.0, 13130.0], [2960.0, 13056.0], [3000.0, 2111.106749690958], [2952.0, 13115.0], [2968.0, 13081.0], [2992.0, 13048.0], [2984.0, 13109.0], [2976.0, 13087.0], [2161.0, 1209.0], [2113.0, 13663.0], [2121.0, 1145.0], [2129.0, 13506.0], [2169.0, 1236.0], [2153.0, 1173.0], [2145.0, 1208.0], [2049.0, 1124.0], [2057.0, 1148.0], [2065.0, 1121.0], [2073.0, 1167.0], [2105.0, 1140.0], [2097.0, 1136.0], [2089.0, 1147.0], [2081.0, 1162.0], [2137.0, 1197.0], [2289.0, 1131.0], [2297.0, 1189.0], [2249.0, 1169.0], [2241.0, 1171.0], [2257.0, 1129.0], [2265.0, 1176.0], [2281.0, 1142.0], [2273.0, 1129.0], [2177.0, 1181.0], [2185.0, 1229.0], [2193.0, 1183.0], [2201.0, 1180.0], [2233.0, 1152.0], [2225.0, 1203.0], [2217.0, 1220.0], [2209.0, 1219.0], [2417.0, 1151.0], [2409.0, 1136.0], [2425.0, 1151.0], [2369.0, 1158.0], [2377.0, 1121.0], [2385.0, 1159.0], [2393.0, 1134.0], [2401.0, 1170.0], [2305.0, 1150.0], [2313.0, 1175.0], [2321.0, 1113.0], [2329.0, 1153.0], [2361.0, 1165.0], [2353.0, 1118.0], [2345.0, 1129.0], [2337.0, 1115.0], [2545.0, 1163.0], [2537.0, 1136.0], [2553.0, 1118.0], [2497.0, 1119.0], [2505.0, 1161.0], [2513.0, 1130.0], [2521.0, 1133.0], [2529.0, 1168.0], [2433.0, 1205.0], [2441.0, 13118.0], [2449.0, 1205.0], [2457.0, 1191.0], [2489.0, 1180.0], [2465.0, 1188.0], [2673.0, 1171.0], [2681.0, 1170.0], [2625.0, 1150.0], [2633.0, 1144.0], [2641.0, 1146.0], [2649.0, 1130.0], [2665.0, 1117.0], [2657.0, 1127.0], [2561.0, 1107.0], [2569.0, 1115.0], [2577.0, 1123.0], [2585.0, 1144.0], [2617.0, 1151.0], [2609.0, 1176.0], [2601.0, 1182.0], [2593.0, 1166.0], [2801.0, 13175.0], [2809.0, 13197.0], [2753.0, 12428.0], [2761.0, 13211.0], [2769.0, 12706.0], [2777.0, 12511.0], [2793.0, 13322.0], [2785.0, 12499.0], [2689.0, 1108.0], [2697.0, 1105.0], [2705.0, 1136.0], [2713.0, 1105.0], [2745.0, 12531.0], [2737.0, 12768.0], [2729.0, 12754.0], [2721.0, 1103.0], [2929.0, 13114.0], [2937.0, 13077.0], [2881.0, 12624.0], [2889.0, 13079.0], [2897.0, 13877.0], [2905.0, 13052.0], [2921.0, 13785.0], [2913.0, 13156.0], [2817.0, 12226.0], [2825.0, 12217.0], [2833.0, 12682.0], [2841.0, 12641.0], [2873.0, 13135.0], [2865.0, 12192.0], [2857.0, 13103.0], [2849.0, 12645.0], [2945.0, 13128.0], [2993.0, 12584.0], [2953.0, 13103.0], [2961.0, 14944.0], [2969.0, 13054.0], [2985.0, 13136.0], [2977.0, 13132.0], [1081.0, 15618.0], [1085.0, 1316.0], [1077.0, 15225.0], [1073.0, 15243.0], [1069.0, 16175.0], [1065.0, 15658.0], [1061.0, 15499.0], [1057.0, 1219.0], [1053.0, 15429.0], [1029.0, 15734.0], [1025.0, 15564.0], [1037.0, 1215.0], [1033.0, 1205.0], [1049.0, 15662.0], [1045.0, 1212.0], [1041.0, 1213.0], [1145.0, 1307.0], [1149.0, 1266.0], [1141.0, 1365.0], [1137.0, 15189.0], [1133.0, 1317.0], [1129.0, 15345.0], [1125.0, 15270.0], [1121.0, 1293.0], [1117.0, 1278.0], [1093.0, 1586.0], [1089.0, 15653.0], [1101.0, 16136.0], [1097.0, 8675.0], [1113.0, 1284.0], [1109.0, 1281.0], [1105.0, 15347.0], [1209.0, 1510.0], [1213.0, 15343.0], [1205.0, 16158.0], [1201.0, 1267.0], [1197.0, 15123.0], [1193.0, 15364.0], [1189.0, 1267.0], [1185.0, 1281.0], [1181.0, 15498.0], [1157.0, 1265.0], [1153.0, 15622.0], [1165.0, 1272.0], [1161.0, 1507.0], [1177.0, 15521.0], [1173.0, 15406.0], [1169.0, 1501.0], [1273.0, 1307.0], [1277.0, 1302.0], [1269.0, 1401.0], [1265.0, 1302.0], [1261.0, 1301.0], [1257.0, 1300.0], [1253.0, 1293.0], [1249.0, 15327.0], [1245.0, 1291.0], [1221.0, 1302.0], [1217.0, 1296.0], [1229.0, 15128.0], [1225.0, 15376.0], [1241.0, 15470.0], [1237.0, 16765.0], [1233.0, 1299.0], [1337.0, 15159.0], [1341.0, 1630.0], [1333.0, 1265.0], [1329.0, 15385.0], [1325.0, 15431.0], [1321.0, 15308.0], [1317.0, 1303.0], [1313.0, 16040.0], [1309.0, 15081.0], [1285.0, 1120.0], [1281.0, 15473.0], [1293.0, 1293.0], [1289.0, 1354.0], [1305.0, 1299.0], [1301.0, 15060.0], [1297.0, 1299.0], [1401.0, 1315.0], [1405.0, 15884.0], [1397.0, 1282.0], [1393.0, 14921.0], [1389.0, 1280.0], [1385.0, 1288.0], [1381.0, 15195.0], [1373.0, 1629.0], [1349.0, 1277.0], [1345.0, 15023.0], [1357.0, 1277.0], [1353.0, 1276.0], [1369.0, 15246.0], [1365.0, 15826.0], [1361.0, 15374.0], [1469.0, 1464.0], [1465.0, 15162.0], [1449.0, 1482.0], [1461.0, 1301.0], [1457.0, 1291.0], [1421.0, 15162.0], [1417.0, 15111.0], [1413.0, 15136.0], [1409.0, 1304.0], [1453.0, 1482.0], [1445.0, 1313.0], [1441.0, 15161.0], [1437.0, 1284.0], [1433.0, 1326.0], [1429.0, 1277.0], [1425.0, 15726.0], [1529.0, 1264.0], [1505.0, 15121.0], [1509.0, 1341.0], [1513.0, 1405.0], [1533.0, 15089.0], [1525.0, 15047.0], [1521.0, 1253.0], [1473.0, 15790.0], [1477.0, 1370.0], [1481.0, 15100.0], [1485.0, 14989.0], [1501.0, 1311.0], [1497.0, 1348.0], [1493.0, 15011.0], [1489.0, 1343.0], [1517.0, 15659.0], [1593.0, 1235.0], [1569.0, 1182.0], [1573.0, 16370.0], [1577.0, 1225.0], [1597.0, 1292.0], [1589.0, 15531.0], [1585.0, 1237.0], [1537.0, 1259.0], [1541.0, 1227.0], [1545.0, 14901.0], [1549.0, 1312.0], [1565.0, 15534.0], [1561.0, 15642.0], [1557.0, 14671.0], [1553.0, 1277.0], [1581.0, 1236.0], [1657.0, 1266.0], [1633.0, 1265.0], [1637.0, 1271.0], [1641.0, 14958.0], [1661.0, 14633.0], [1653.0, 1308.0], [1649.0, 1267.0], [1601.0, 1289.0], [1605.0, 1304.0], [1609.0, 14735.0], [1613.0, 1332.0], [1629.0, 1261.0], [1625.0, 1265.0], [1621.0, 1270.0], [1617.0, 1263.0], [1645.0, 14562.0], [1717.0, 1280.0], [1725.0, 2094.0], [1697.0, 1326.0], [1701.0, 14887.0], [1705.0, 14921.0], [1721.0, 1921.0], [1677.0, 14932.0], [1673.0, 14892.0], [1669.0, 14770.0], [1665.0, 15596.0], [1693.0, 14789.0], [1689.0, 14928.0], [1685.0, 15392.0], [1681.0, 14499.0], [1709.0, 14717.0], [1785.0, 14662.0], [1761.0, 1262.0], [1765.0, 14593.0], [1769.0, 15981.0], [1789.0, 1137.0], [1781.0, 1137.0], [1777.0, 1156.0], [1729.0, 14470.0], [1733.0, 14855.0], [1737.0, 1259.0], [1741.0, 14782.0], [1757.0, 1230.0], [1753.0, 1214.0], [1749.0, 14729.0], [1745.0, 1224.0], [1773.0, 15118.0], [1849.0, 14542.0], [1825.0, 1184.0], [1829.0, 1231.0], [1833.0, 1195.0], [1853.0, 15773.0], [1845.0, 1230.0], [1841.0, 15860.0], [1793.0, 1143.0], [1797.0, 15098.0], [1805.0, 15162.0], [1821.0, 15083.0], [1817.0, 1218.0], [1813.0, 1188.0], [1809.0, 15177.0], [1837.0, 1192.0], [1913.0, 1153.0], [1889.0, 14861.0], [1893.0, 14807.0], [1897.0, 14849.0], [1917.0, 14252.0], [1909.0, 1160.0], [1905.0, 14262.0], [1857.0, 1114.0], [1861.0, 14930.0], [1865.0, 14974.0], [1869.0, 14016.0], [1885.0, 14827.0], [1881.0, 14407.0], [1877.0, 13970.0], [1873.0, 15667.0], [1901.0, 14815.0], [1977.0, 14594.0], [1953.0, 1166.0], [1957.0, 1177.0], [1961.0, 1179.0], [1981.0, 1152.0], [1973.0, 1175.0], [1969.0, 1173.0], [1921.0, 1149.0], [1925.0, 1110.0], [1929.0, 15449.0], [1933.0, 14687.0], [1949.0, 1185.0], [1945.0, 13907.0], [1941.0, 1173.0], [1937.0, 1186.0], [1965.0, 1143.0], [2041.0, 1122.0], [2017.0, 1248.0], [2021.0, 1173.0], [2025.0, 8509.0], [2045.0, 1156.0], [2037.0, 1129.0], [2033.0, 1131.0], [1985.0, 1147.0], [1989.0, 1149.0], [1993.0, 1150.0], [1997.0, 1159.0], [2013.0, 1125.0], [2009.0, 1129.0], [2005.0, 14500.0], [2029.0, 1137.0], [2162.0, 1222.0], [2114.0, 14499.0], [2122.0, 13566.0], [2130.0, 1297.0], [2170.0, 1174.0], [2154.0, 1169.0], [2146.0, 13679.0], [2050.0, 1121.0], [2058.0, 1107.0], [2066.0, 1160.0], [2074.0, 1156.0], [2106.0, 1135.0], [2098.0, 13714.0], [2090.0, 1122.0], [2082.0, 1170.0], [2138.0, 1188.0], [2290.0, 1142.0], [2298.0, 1185.0], [2242.0, 1119.0], [2250.0, 1166.0], [2258.0, 1131.0], [2266.0, 1182.0], [2282.0, 1161.0], [2274.0, 1183.0], [2178.0, 1229.0], [2186.0, 1186.0], [2194.0, 1218.0], [2202.0, 1177.0], [2234.0, 1150.0], [2226.0, 1207.0], [2218.0, 1222.0], [2210.0, 1177.0], [2418.0, 1149.0], [2426.0, 1166.0], [2370.0, 1113.0], [2378.0, 1132.0], [2386.0, 1156.0], [2394.0, 1130.0], [2410.0, 13259.0], [2402.0, 1133.0], [2306.0, 1146.0], [2314.0, 1137.0], [2322.0, 1119.0], [2330.0, 1106.0], [2362.0, 1128.0], [2354.0, 1160.0], [2346.0, 1118.0], [2338.0, 1243.0], [2546.0, 1129.0], [2554.0, 1117.0], [2498.0, 12797.0], [2506.0, 1154.0], [2514.0, 1169.0], [2522.0, 1135.0], [2538.0, 1117.0], [2530.0, 1132.0], [2434.0, 1207.0], [2442.0, 1211.0], [2450.0, 1221.0], [2458.0, 1188.0], [2490.0, 12911.0], [2482.0, 1150.0], [2474.0, 1145.0], [2466.0, 1225.0], [2682.0, 1176.0], [2634.0, 1173.0], [2626.0, 1187.0], [2642.0, 1150.0], [2650.0, 1118.0], [2674.0, 1163.0], [2666.0, 12758.0], [2658.0, 1134.0], [2562.0, 1141.0], [2570.0, 1108.0], [2578.0, 1133.0], [2586.0, 1145.0], [2618.0, 1213.0], [2610.0, 1183.0], [2602.0, 1164.0], [2594.0, 13600.0], [2810.0, 13232.0], [2754.0, 12265.0], [2762.0, 12648.0], [2770.0, 12678.0], [2778.0, 12262.0], [2802.0, 12446.0], [2794.0, 12684.0], [2786.0, 12489.0], [2690.0, 1142.0], [2698.0, 1109.0], [2706.0, 1094.0], [2714.0, 1101.0], [2746.0, 12267.0], [2738.0, 13221.0], [2730.0, 12702.0], [2938.0, 13103.0], [2882.0, 13125.0], [2890.0, 13142.0], [2898.0, 13051.0], [2906.0, 13029.0], [2930.0, 13005.0], [2922.0, 13153.0], [2914.0, 13127.0], [2818.0, 13130.0], [2826.0, 12198.0], [2834.0, 12413.0], [2842.0, 13115.0], [2874.0, 12437.0], [2866.0, 12425.0], [2858.0, 12594.0], [2850.0, 13129.0], [2954.0, 13058.0], [2946.0, 13091.0], [2962.0, 13154.0], [2970.0, 12988.0], [2994.0, 11762.0], [2986.0, 13084.0], [2978.0, 13065.0], [2163.0, 1169.0], [2115.0, 15246.0], [2123.0, 1102.0], [2131.0, 1210.0], [2171.0, 1167.0], [2155.0, 1214.0], [2147.0, 1209.0], [2051.0, 1109.0], [2059.0, 14385.0], [2067.0, 13965.0], [2075.0, 1161.0], [2107.0, 1132.0], [2099.0, 1135.0], [2091.0, 1159.0], [2083.0, 1146.0], [2139.0, 1195.0], [2291.0, 1185.0], [2299.0, 1140.0], [2243.0, 1117.0], [2251.0, 13970.0], [2259.0, 1176.0], [2267.0, 13464.0], [2283.0, 1137.0], [2275.0, 1167.0], [2179.0, 1247.0], [2187.0, 1226.0], [2195.0, 13667.0], [2203.0, 1190.0], [2235.0, 1153.0], [2227.0, 1176.0], [2219.0, 1225.0], [2211.0, 1240.0], [2419.0, 12869.0], [2427.0, 1152.0], [2371.0, 1119.0], [2379.0, 1121.0], [2387.0, 1162.0], [2395.0, 1129.0], [2411.0, 1176.0], [2403.0, 13385.0], [2307.0, 1153.0], [2315.0, 1127.0], [2323.0, 12987.0], [2331.0, 1113.0], [2363.0, 1170.0], [2355.0, 1129.0], [2347.0, 1159.0], [2339.0, 1125.0], [2547.0, 1123.0], [2555.0, 12936.0], [2499.0, 1123.0], [2507.0, 1133.0], [2515.0, 1176.0], [2523.0, 1178.0], [2539.0, 1155.0], [2531.0, 1176.0], [2435.0, 1154.0], [2443.0, 1228.0], [2451.0, 1212.0], [2459.0, 1215.0], [2491.0, 13248.0], [2483.0, 1198.0], [2475.0, 1167.0], [2467.0, 13083.0], [2675.0, 1167.0], [2683.0, 1181.0], [2627.0, 1157.0], [2635.0, 1151.0], [2643.0, 1116.0], [2651.0, 1212.0], [2667.0, 12763.0], [2659.0, 1118.0], [2563.0, 1149.0], [2571.0, 12753.0], [2579.0, 1126.0], [2587.0, 1141.0], [2619.0, 1143.0], [2611.0, 1185.0], [2603.0, 1155.0], [2595.0, 13113.0], [2803.0, 12247.0], [2811.0, 12485.0], [2755.0, 13153.0], [2763.0, 12634.0], [2771.0, 12478.0], [2779.0, 12653.0], [2795.0, 12250.0], [2787.0, 13129.0], [2691.0, 1151.0], [2699.0, 1110.0], [2707.0, 1109.0], [2715.0, 1105.0], [2747.0, 12742.0], [2739.0, 12541.0], [2731.0, 12727.0], [2723.0, 1102.5], [2931.0, 13146.0], [2939.0, 13120.0], [2883.0, 13106.0], [2891.0, 13890.0], [2899.0, 12164.0], [2907.0, 13106.0], [2923.0, 13030.0], [2915.0, 13205.0], [2819.0, 13148.0], [2827.0, 13132.0], [2835.0, 12662.0], [2843.0, 12342.0], [2875.0, 12165.0], [2867.0, 12447.0], [2859.0, 12207.0], [2851.0, 12614.0], [2955.0, 13112.0], [2947.0, 13136.0], [2963.0, 13069.0], [2971.0, 13085.0], [2995.0, 12579.0], [2987.0, 13096.0], [2979.0, 13003.0], [541.0, 17271.333333333332], [543.0, 16470.0], [537.0, 17053.5], [519.0, 16732.666666666668], [515.0, 17457.0], [513.0, 16448.0], [535.0, 16364.0], [533.0, 16593.0], [529.0, 16364.0], [527.0, 16839.0], [525.0, 16380.0], [523.0, 16393.0], [521.0, 16779.5], [573.0, 16283.0], [575.0, 16565.0], [571.0, 16589.0], [569.0, 16433.0], [567.0, 16236.0], [565.0, 16674.0], [563.0, 16206.0], [561.0, 16847.0], [557.0, 16690.0], [547.0, 16703.0], [551.0, 16621.0], [549.0, 16266.0], [555.0, 17200.0], [553.0, 16528.0], [605.0, 16080.0], [607.0, 16328.0], [603.0, 16181.0], [601.0, 16386.0], [599.0, 17057.0], [597.0, 16085.0], [595.0, 16063.0], [593.0, 16068.0], [591.0, 17000.0], [579.0, 16162.0], [577.0, 17035.0], [583.0, 2764.0], [581.0, 16122.0], [589.0, 16113.0], [587.0, 16111.0], [585.0, 16113.0], [637.0, 15943.0], [639.0, 15893.0], [635.0, 15905.0], [633.0, 16062.0], [631.0, 16779.0], [629.0, 16321.0], [627.0, 16076.0], [625.0, 15906.0], [623.0, 16363.0], [611.0, 16332.0], [609.0, 16105.0], [615.0, 16337.0], [613.0, 16325.0], [621.0, 4137.0], [619.0, 16180.0], [617.0, 15940.0], [669.0, 15843.0], [671.0, 16120.0], [667.0, 15940.0], [665.0, 16081.0], [663.0, 16079.0], [661.0, 16308.0], [659.0, 16252.0], [657.0, 15835.0], [655.0, 16081.0], [643.0, 15864.0], [641.0, 15872.0], [647.0, 16783.0], [645.0, 16294.0], [653.0, 15834.0], [651.0, 16766.0], [649.0, 16831.0], [701.0, 1642.0], [703.0, 16065.0], [699.0, 1623.0], [679.0, 16040.0], [677.0, 15981.0], [675.0, 15835.0], [673.0, 16739.0], [695.0, 1502.0], [693.0, 17364.0], [691.0, 16065.0], [689.0, 15794.0], [687.0, 15850.0], [685.0, 16109.0], [683.0, 16157.0], [681.0, 16004.0], [733.0, 15719.0], [735.0, 2356.0], [731.0, 15934.0], [729.0, 1933.0], [727.0, 1918.0], [725.0, 15678.0], [723.0, 1893.0], [721.0, 15779.0], [719.0, 2187.0], [705.0, 15868.0], [711.0, 16099.0], [709.0, 16067.5], [717.0, 1924.0], [715.0, 15668.0], [713.0, 1753.0], [765.0, 15753.0], [767.0, 15739.0], [763.0, 15865.0], [761.0, 15699.0], [759.0, 16486.0], [757.0, 16084.0], [755.0, 15922.0], [753.0, 15653.0], [751.0, 16087.0], [739.0, 2275.0], [737.0, 15670.0], [743.0, 2270.0], [741.0, 2267.0], [749.0, 2486.0], [747.0, 16105.0], [745.0, 2295.0], [797.0, 15813.0], [799.0, 15813.0], [795.0, 15694.5], [793.0, 16513.0], [791.0, 15991.0], [789.0, 16009.0], [787.0, 15582.0], [785.0, 15945.0], [783.0, 15588.0], [771.0, 15866.0], [769.0, 16581.0], [775.0, 16018.0], [773.0, 15864.0], [781.0, 16591.0], [779.0, 15987.0], [777.0, 1405.0], [829.0, 16439.0], [831.0, 15604.0], [827.0, 15530.0], [825.0, 15748.0], [823.0, 15801.0], [821.0, 1387.0], [819.0, 15569.0], [817.0, 1377.0], [815.0, 15888.0], [803.0, 15949.0], [801.0, 16447.0], [807.0, 16444.0], [805.0, 16440.0], [813.0, 2291.0], [811.0, 15572.0], [809.0, 15638.0], [861.0, 15945.0], [863.0, 15502.0], [859.0, 15644.0], [857.0, 15611.0], [855.0, 15771.0], [853.0, 15883.0], [851.0, 15549.0], [849.0, 15611.0], [847.0, 1358.0], [835.0, 15519.0], [833.0, 17203.0], [839.0, 15862.0], [837.0, 15994.0], [845.0, 1373.0], [843.0, 9011.5], [841.0, 16406.0], [893.0, 1294.0], [895.0, 1250.0], [891.0, 1797.0], [889.0, 1264.0], [887.0, 1247.0], [885.0, 16462.0], [883.0, 15812.0], [881.0, 17137.0], [879.0, 1249.0], [867.0, 15512.0], [865.0, 16472.0], [871.0, 15438.0], [869.0, 15711.0], [877.0, 1236.0], [875.0, 16433.0], [873.0, 16303.0], [925.0, 1194.0], [927.0, 1178.0], [923.0, 1252.0], [921.0, 1296.0], [919.0, 1247.0], [917.0, 1253.0], [915.0, 1251.0], [913.0, 1246.0], [911.0, 15516.0], [899.0, 1245.0], [897.0, 1269.0], [903.0, 15422.0], [901.0, 1825.0], [909.0, 15387.0], [907.0, 15524.0], [905.0, 15420.0], [957.0, 1210.0], [959.0, 1221.0], [955.0, 15562.0], [953.0, 15348.0], [951.0, 1225.0], [949.0, 1220.0], [947.0, 15334.0], [945.0, 1212.0], [943.0, 15352.0], [931.0, 1220.0], [929.0, 1178.0], [935.0, 16259.0], [933.0, 1209.0], [941.0, 1219.0], [939.0, 1210.0], [937.0, 1207.0], [989.0, 1189.0], [991.0, 1184.0], [987.0, 1222.0], [985.0, 1230.0], [983.0, 1246.0], [981.0, 1668.0], [979.0, 1227.0], [977.0, 15329.0], [975.0, 1223.0], [963.0, 15469.0], [961.0, 15346.0], [967.0, 16248.0], [965.0, 16284.0], [973.0, 1226.0], [971.0, 1218.0], [969.0, 1231.0], [1021.0, 1200.0], [1023.0, 1196.0], [1019.0, 1202.0], [1017.0, 1239.0], [1015.0, 16204.0], [1013.0, 16291.0], [1011.0, 15626.0], [1009.0, 15269.0], [1007.0, 1197.0], [995.0, 1188.0], [993.0, 1191.0], [999.0, 1193.0], [997.0, 1188.0], [1005.0, 1194.0], [1003.0, 15687.0], [1001.0, 1522.0], [1082.0, 16919.0], [1086.0, 1278.0], [1078.0, 15321.0], [1074.0, 15583.0], [1070.0, 15555.0], [1066.0, 15485.0], [1062.0, 17017.0], [1058.0, 15522.0], [1054.0, 1214.0], [1030.0, 15352.0], [1026.0, 1207.0], [1038.0, 1211.0], [1034.0, 1208.0], [1050.0, 15382.0], [1046.0, 1207.0], [1042.0, 1511.0], [1146.0, 1263.0], [1150.0, 1275.0], [1142.0, 1319.0], [1138.0, 1300.0], [1134.0, 1311.0], [1130.0, 15511.0], [1126.0, 16162.0], [1122.0, 15648.0], [1118.0, 1283.0], [1094.0, 1278.0], [1090.0, 1283.0], [1102.0, 16204.0], [1098.0, 15274.0], [1114.0, 1282.0], [1110.0, 15216.0], [1106.0, 1302.0], [1210.0, 16766.0], [1214.0, 15109.0], [1206.0, 1277.0], [1202.0, 15225.0], [1198.0, 1307.0], [1194.0, 1271.0], [1190.0, 1263.0], [1186.0, 15382.0], [1182.0, 1275.0], [1158.0, 15152.0], [1154.0, 15146.0], [1166.0, 1274.0], [1162.0, 1264.0], [1178.0, 1267.0], [1174.0, 15143.0], [1170.0, 1341.0], [1274.0, 1389.0], [1278.0, 1299.0], [1270.0, 1427.0], [1266.0, 1404.0], [1262.0, 1298.0], [1258.0, 15052.0], [1254.0, 15051.0], [1250.0, 1290.0], [1246.0, 1290.0], [1222.0, 1322.0], [1218.0, 1352.0], [1230.0, 1294.0], [1226.0, 1295.0], [1242.0, 1299.0], [1238.0, 16009.0], [1234.0, 1306.0], [1338.0, 15415.0], [1342.0, 15843.0], [1334.0, 1308.0], [1330.0, 15918.0], [1326.0, 15338.0], [1322.0, 1262.0], [1318.0, 15288.0], [1314.0, 15501.0], [1310.0, 15048.0], [1286.0, 1120.0], [1282.0, 15041.0], [1294.0, 1294.0], [1290.0, 15990.0], [1306.0, 1296.0], [1302.0, 15231.0], [1298.0, 15423.0], [1402.0, 1311.0], [1406.0, 1310.0], [1398.0, 15864.0], [1394.0, 1283.0], [1390.0, 1298.0], [1386.0, 1291.0], [1382.0, 8240.0], [1378.0, 15422.0], [1374.0, 1304.0], [1350.0, 15320.0], [1346.0, 1315.0], [1358.0, 15274.0], [1354.0, 1276.0], [1370.0, 15283.0], [1366.0, 15155.0], [1362.0, 15910.0], [1470.0, 1473.0], [1450.0, 1297.0], [1466.0, 1308.0], [1462.0, 15718.0], [1458.0, 15106.0], [1422.0, 1336.0], [1418.0, 1158.0], [1414.0, 15124.0], [1410.0, 16562.0], [1454.0, 1297.0], [1446.0, 1291.0], [1442.0, 1282.0], [1438.0, 15240.0], [1434.0, 15720.0], [1430.0, 14849.0], [1426.0, 1277.0], [1530.0, 1343.0], [1534.0, 1259.0], [1506.0, 1298.0], [1510.0, 1302.0], [1514.0, 1302.0], [1526.0, 1262.0], [1522.0, 1255.0], [1502.0, 1346.0], [1474.0, 15146.0], [1478.0, 14946.0], [1482.0, 1309.0], [1498.0, 1344.0], [1494.0, 14744.0], [1490.0, 1342.0], [1518.0, 14979.0], [1594.0, 1230.0], [1598.0, 1235.0], [1570.0, 1180.0], [1574.0, 1232.0], [1578.0, 15070.0], [1590.0, 15470.0], [1586.0, 1265.0], [1566.0, 1281.0], [1538.0, 1262.0], [1542.0, 1260.0], [1546.0, 15094.0], [1550.0, 1285.0], [1562.0, 1277.0], [1558.0, 14939.0], [1554.0, 15109.0], [1582.0, 1233.0], [1658.0, 14976.0], [1662.0, 1287.0], [1634.0, 15011.0], [1638.0, 14996.0], [1642.0, 1266.0], [1654.0, 1274.0], [1650.0, 1267.0], [1630.0, 1262.0], [1602.0, 1261.0], [1606.0, 1302.0], [1610.0, 14590.0], [1614.0, 14939.0], [1626.0, 1261.0], [1622.0, 15525.0], [1618.0, 1311.0], [1646.0, 1267.0], [1722.0, 16102.0], [1726.0, 2013.0], [1698.0, 1336.0], [1702.0, 1332.0], [1706.0, 14936.0], [1718.0, 1276.0], [1714.0, 14723.0], [1694.0, 1332.0], [1666.0, 14774.0], [1670.0, 14793.0], [1674.0, 14539.0], [1678.0, 15480.0], [1690.0, 14741.0], [1686.0, 1335.0], [1682.0, 15397.0], [1710.0, 1318.0], [1786.0, 1141.0], [1790.0, 1135.0], [1762.0, 1220.0], [1766.0, 14247.0], [1770.0, 15199.0], [1782.0, 1135.0], [1778.0, 1130.0], [1758.0, 1230.0], [1730.0, 15389.0], [1734.0, 14695.0], [1738.0, 14798.0], [1742.0, 16028.0], [1754.0, 1220.0], [1750.0, 14719.0], [1746.0, 1232.0], [1774.0, 15917.0], [1850.0, 15128.0], [1854.0, 1138.0], [1826.0, 15169.0], [1830.0, 1196.0], [1834.0, 14238.0], [1846.0, 14270.0], [1842.0, 1202.0], [1822.0, 14543.0], [1798.0, 1140.0], [1794.0, 1147.0], [1806.0, 1139.0], [1818.0, 1208.0], [1814.0, 1215.0], [1810.0, 1208.0], [1838.0, 1192.0], [1914.0, 13837.0], [1918.0, 13810.0], [1890.0, 14351.0], [1894.0, 13901.0], [1898.0, 14828.0], [1910.0, 15481.0], [1906.0, 14279.0], [1886.0, 14322.0], [1858.0, 14477.0], [1862.0, 14988.0], [1866.0, 15029.0], [1870.0, 14995.0], [1878.0, 14865.0], [1874.0, 13981.0], [1902.0, 15572.0], [1978.0, 1121.0], [1982.0, 1148.0], [1954.0, 1166.0], [1958.0, 1134.0], [1962.0, 1172.0], [1974.0, 1173.0], [1970.0, 1179.0], [1950.0, 1192.0], [1922.0, 13776.0], [1926.0, 1107.0], [1930.0, 14812.0], [1934.0, 15492.0], [1946.0, 14159.0], [1942.0, 1165.0], [1938.0, 1166.0], [1966.0, 1139.0], [2042.0, 1172.0], [2046.0, 1125.0], [2018.0, 14478.0], [2022.0, 13741.0], [2026.0, 1133.0], [2038.0, 1116.0], [2034.0, 1176.0], [2014.0, 1162.0], [1986.0, 1149.0], [1990.0, 1114.0], [1994.0, 1123.0], [1998.0, 1125.0], [2010.0, 1131.0], [2006.0, 1143.0], [2002.0, 4865.5], [2030.0, 1186.0], [2164.0, 1174.0], [2172.0, 1225.0], [2116.0, 13379.0], [2124.0, 13511.0], [2132.0, 1185.0], [2156.0, 1213.0], [2148.0, 1204.0], [2108.0, 1135.0], [2052.0, 1104.0], [2060.0, 1148.0], [2068.0, 1103.0], [2076.0, 1162.0], [2100.0, 1117.0], [2092.0, 1114.0], [2084.0, 1161.0], [2140.0, 1211.0], [2300.0, 1174.0], [2244.0, 1163.0], [2252.0, 1150.0], [2260.0, 1132.0], [2268.0, 1129.0], [2292.0, 13018.0], [2284.0, 1139.0], [2276.0, 13999.0], [2204.0, 1280.0], [2196.0, 1188.0], [2188.0, 1229.0], [2180.0, 1175.0], [2236.0, 1155.0], [2228.0, 1208.0], [2220.0, 1173.0], [2212.0, 1224.0], [2428.0, 12918.0], [2372.0, 1161.0], [2380.0, 1166.0], [2388.0, 1157.0], [2396.0, 1146.0], [2420.0, 1145.0], [2412.0, 1154.0], [2404.0, 13341.0], [2308.0, 1185.0], [2316.0, 1163.0], [2324.0, 1118.0], [2332.0, 1166.0], [2364.0, 1156.0], [2356.0, 1166.0], [2348.0, 1164.0], [2340.0, 1165.0], [2556.0, 1161.0], [2500.0, 1118.0], [2508.0, 1126.0], [2516.0, 1125.0], [2524.0, 1169.0], [2548.0, 1125.0], [2540.0, 1120.0], [2532.0, 1184.0], [2436.0, 1215.0], [2444.0, 13046.0], [2452.0, 1223.0], [2460.0, 1234.0], [2492.0, 1133.0], [2484.0, 1170.0], [2476.0, 1224.0], [2468.0, 1186.0], [2684.0, 1172.0], [2676.0, 1174.0], [2628.0, 1150.0], [2636.0, 1190.0], [2644.0, 1122.0], [2652.0, 1121.0], [2668.0, 12754.0], [2660.0, 1119.0], [2564.0, 1111.0], [2572.0, 12747.0], [2580.0, 1138.0], [2588.0, 1158.0], [2620.0, 1205.0], [2612.0, 1171.0], [2604.0, 1155.0], [2596.0, 12933.0], [2804.0, 13206.0], [2796.0, 14066.0], [2812.0, 12515.0], [2756.0, 12317.0], [2764.0, 13314.0], [2772.0, 12426.0], [2780.0, 12508.0], [2788.0, 13164.0], [2692.0, 12624.0], [2700.0, 1117.0], [2708.0, 1096.0], [2716.0, 1100.0], [2748.0, 12265.0], [2740.0, 12541.0], [2732.0, 12298.0], [2724.0, 12555.0], [2932.0, 13037.0], [2924.0, 13000.0], [2940.0, 13770.0], [2884.0, 13050.0], [2892.0, 13162.0], [2900.0, 13899.0], [2908.0, 13858.0], [2916.0, 13109.0], [2820.0, 12555.0], [2828.0, 12219.0], [2836.0, 12197.0], [2844.0, 12448.0], [2876.0, 12472.0], [2868.0, 12658.0], [2860.0, 12631.0], [2852.0, 12181.0], [2956.0, 13788.0], [2948.0, 13770.0], [2964.0, 13107.0], [2972.0, 13046.0], [2996.0, 13356.0], [2988.0, 13058.0], [2980.0, 13051.0], [2165.0, 1175.0], [2173.0, 1181.0], [2117.0, 13758.0], [2125.0, 14155.0], [2133.0, 1184.0], [2157.0, 13242.0], [2149.0, 1211.0], [2109.0, 1111.0], [2053.0, 13778.0], [2061.0, 1106.0], [2069.0, 1108.0], [2077.0, 1125.0], [2101.0, 1129.0], [2093.0, 1119.0], [2085.0, 1151.0], [2141.0, 1216.0], [2301.0, 1183.0], [2245.0, 1173.0], [2253.0, 1132.0], [2261.0, 1135.0], [2269.0, 1135.0], [2293.0, 1137.0], [2285.0, 1142.0], [2277.0, 1142.0], [2237.0, 1137.0], [2181.0, 1217.0], [2189.0, 13169.0], [2197.0, 1229.0], [2205.0, 1177.0], [2229.0, 1222.0], [2221.0, 1184.0], [2213.0, 1198.0], [2429.0, 1161.0], [2373.0, 1122.0], [2381.0, 13376.0], [2389.0, 1164.0], [2397.0, 1140.0], [2421.0, 1160.0], [2413.0, 1177.0], [2405.0, 1134.0], [2309.0, 1146.0], [2317.0, 1118.0], [2325.0, 1163.0], [2333.0, 1157.0], [2365.0, 1130.0], [2357.0, 1163.0], [2349.0, 13206.0], [2341.0, 1156.0], [2557.0, 1151.0], [2501.0, 1126.0], [2509.0, 1124.0], [2517.0, 1167.0], [2525.0, 1174.0], [2549.0, 1124.0], [2541.0, 1116.0], [2533.0, 1182.0], [2437.0, 1215.0], [2445.0, 1330.0], [2453.0, 1235.0], [2461.0, 1186.0], [2493.0, 1158.0], [2485.0, 1148.0], [2477.0, 1221.0], [2469.0, 1227.0], [2677.0, 1169.0], [2629.0, 1189.0], [2637.0, 1190.0], [2645.0, 1120.0], [2653.0, 1123.0], [2685.0, 1139.0], [2669.0, 1170.0], [2661.0, 1116.0], [2565.0, 1103.0], [2573.0, 1112.0], [2581.0, 1127.0], [2589.0, 6900.0], [2621.0, 1151.0], [2613.0, 1143.0], [2605.0, 12884.0], [2597.0, 12842.0], [2805.0, 12227.0], [2757.0, 12553.0], [2765.0, 12287.0], [2773.0, 12599.0], [2781.0, 12728.0], [2813.0, 12248.0], [2797.0, 13252.0], [2789.0, 12505.0], [2693.0, 12693.0], [2709.0, 1101.0], [2717.0, 1109.0], [2749.0, 12507.0], [2741.0, 12410.0], [2733.0, 12388.0], [2725.0, 12609.0], [2933.0, 13890.0], [2885.0, 13190.0], [2893.0, 13110.0], [2901.0, 13037.0], [2909.0, 13162.0], [2941.0, 13082.0], [2925.0, 13082.0], [2917.0, 13055.0], [2821.0, 12195.0], [2829.0, 12199.0], [2837.0, 12189.0], [2845.0, 12650.0], [2877.0, 13072.0], [2869.0, 13193.0], [2861.0, 12205.0], [2853.0, 12451.0], [2949.0, 13775.0], [2997.0, 12576.0], [2957.0, 12993.0], [2965.0, 13097.0], [2973.0, 13744.0], [2989.0, 13016.0], [2981.0, 13914.0], [1083.0, 1329.0], [1087.0, 15310.0], [1079.0, 15232.0], [1075.0, 16136.0], [1071.0, 15660.0], [1067.0, 1694.0], [1063.0, 1604.0], [1059.0, 1221.0], [1055.0, 15437.0], [1031.0, 1194.0], [1027.0, 16197.0], [1039.0, 1207.0], [1035.0, 15497.0], [1051.0, 1500.0], [1047.0, 1214.0], [1043.0, 1221.0], [1147.0, 15150.0], [1151.0, 1314.0], [1143.0, 1307.0], [1139.0, 15438.0], [1135.0, 15211.0], [1131.0, 15210.0], [1127.0, 1288.0], [1123.0, 1398.0], [1119.0, 15206.0], [1095.0, 1276.0], [1091.0, 15287.0], [1103.0, 1319.0], [1099.0, 1292.0], [1115.0, 1284.0], [1111.0, 1557.0], [1107.0, 15216.0], [1211.0, 15533.0], [1215.0, 15122.0], [1207.0, 16819.0], [1203.0, 15115.0], [1199.0, 1340.0], [1195.0, 1274.0], [1191.0, 1462.0], [1187.0, 15381.0], [1183.0, 1465.0], [1159.0, 1510.0], [1155.0, 15580.0], [1167.0, 15380.0], [1163.0, 1267.0], [1179.0, 1279.0], [1175.0, 15582.0], [1171.0, 1281.0], [1275.0, 15070.0], [1279.0, 1421.0], [1271.0, 1307.0], [1267.0, 1398.0], [1263.0, 1308.0], [1259.0, 15092.0], [1255.0, 1294.0], [1251.0, 1297.0], [1247.0, 1302.0], [1223.0, 1335.0], [1219.0, 1308.0], [1231.0, 1308.0], [1227.0, 15073.0], [1243.0, 15989.0], [1235.0, 15334.0], [1339.0, 15445.0], [1343.0, 15867.0], [1335.0, 15110.0], [1331.0, 15263.0], [1327.0, 1257.0], [1323.0, 1252.0], [1319.0, 15261.0], [1315.0, 15031.0], [1311.0, 1317.0], [1287.0, 1121.0], [1283.0, 1304.0], [1295.0, 15392.0], [1291.0, 1294.0], [1307.0, 1316.0], [1303.0, 15937.0], [1299.0, 15042.0], [1403.0, 1315.0], [1407.0, 15149.0], [1399.0, 1311.0], [1395.0, 15162.0], [1391.0, 1282.0], [1387.0, 15183.0], [1383.0, 15183.0], [1379.0, 1240.0], [1375.0, 15242.0], [1351.0, 1278.0], [1347.0, 1625.0], [1359.0, 15894.0], [1355.0, 1279.0], [1371.0, 1292.0], [1367.0, 1284.0], [1363.0, 15209.0], [1471.0, 15054.0], [1451.0, 1304.0], [1467.0, 1310.0], [1463.0, 1298.0], [1459.0, 15075.0], [1423.0, 1322.0], [1419.0, 1284.0], [1415.0, 15109.0], [1411.0, 1352.0], [1455.0, 15748.0], [1447.0, 1295.0], [1443.0, 1286.0], [1439.0, 15848.0], [1435.0, 15284.0], [1431.0, 1287.0], [1427.0, 15087.0], [1531.0, 14919.0], [1535.0, 1306.0], [1507.0, 1406.0], [1511.0, 1355.0], [1527.0, 1255.0], [1523.0, 1253.0], [1503.0, 1308.0], [1475.0, 1332.0], [1479.0, 16444.0], [1483.0, 15231.0], [1487.0, 12226.0], [1499.0, 1304.0], [1495.0, 15143.0], [1491.0, 1309.0], [1519.0, 1258.0], [1595.0, 1245.0], [1599.0, 14956.0], [1571.0, 1176.0], [1575.0, 1226.0], [1579.0, 1258.0], [1591.0, 1282.0], [1587.0, 1230.0], [1567.0, 14892.0], [1539.0, 15144.0], [1543.0, 14912.0], [1547.0, 14632.0], [1551.0, 1308.0], [1563.0, 15545.0], [1559.0, 1319.0], [1555.0, 1324.0], [1583.0, 1228.0], [1659.0, 15449.0], [1663.0, 1288.0], [1635.0, 14577.0], [1639.0, 1277.0], [1643.0, 1267.0], [1655.0, 14806.0], [1651.0, 1282.0], [1631.0, 14967.0], [1603.0, 14825.0], [1607.0, 1261.0], [1611.0, 1267.0], [1615.0, 14746.0], [1627.0, 1275.0], [1623.0, 15502.0], [1619.0, 1266.0], [1647.0, 14568.0], [1723.0, 1483.6666666666667], [1727.0, 2038.0], [1699.0, 1331.0], [1703.0, 15370.0], [1707.0, 1340.0], [1719.0, 16118.0], [1715.0, 1279.0], [1679.0, 1374.0], [1675.0, 16142.0], [1671.0, 14746.0], [1667.0, 15417.0], [1695.0, 15495.0], [1691.0, 9426.0], [1687.0, 14503.0], [1683.0, 14501.0], [1711.0, 1313.0], [1787.0, 1139.0], [1791.0, 1147.0], [1763.0, 14689.0], [1767.0, 15208.0], [1771.0, 1126.0], [1783.0, 14673.0], [1779.0, 1136.0], [1759.0, 1227.0], [1731.0, 14411.0], [1735.0, 15356.0], [1739.0, 1269.0], [1743.0, 14360.0], [1755.0, 1215.0], [1751.0, 14372.0], [1747.0, 1258.0], [1775.0, 15900.0], [1851.0, 14991.0], [1855.0, 15078.0], [1827.0, 1186.0], [1831.0, 1187.0], [1835.0, 14658.0], [1847.0, 15165.0], [1843.0, 1245.0], [1823.0, 1189.0], [1795.0, 1150.0], [1799.0, 1139.0], [1807.0, 1193.0], [1819.0, 1233.0], [1815.0, 14190.0], [1811.0, 1215.0], [1839.0, 1191.0], [1915.0, 15485.0], [1919.0, 14780.0], [1891.0, 14154.0], [1895.0, 14874.0], [1899.0, 15518.0], [1911.0, 1147.0], [1907.0, 14721.0], [1887.0, 14865.0], [1859.0, 14282.0], [1863.0, 14998.0], [1867.0, 14939.0], [1871.0, 14955.0], [1883.0, 14530.5], [1879.0, 14467.0], [1875.0, 14940.0], [1903.0, 8796.0], [1979.0, 1127.0], [1983.0, 1146.0], [1955.0, 1130.0], [1959.0, 1145.0], [1963.0, 1176.0], [1975.0, 14593.0], [1971.0, 1142.0], [1951.0, 1187.0], [1923.0, 14051.0], [1927.0, 1102.0], [1931.0, 15401.0], [1935.0, 14802.0], [1947.0, 1174.0], [1943.0, 1167.0], [1939.0, 14719.0], [1967.0, 1142.0], [2043.0, 1179.0], [2047.0, 1129.0], [2019.0, 13823.0], [2023.0, 1188.0], [2027.0, 1176.0], [2039.0, 1116.0], [2035.0, 1177.0], [2015.0, 1125.0], [1987.0, 1136.0], [1991.0, 1113.0], [1995.0, 1120.0], [1999.0, 1127.0], [2011.0, 1127.0], [2007.0, 1170.0], [2003.0, 1142.0], [2031.0, 1172.0], [2166.0, 1209.0], [2174.0, 1180.0], [2118.0, 13624.0], [2126.0, 13280.0], [2134.0, 13492.0], [2158.0, 1219.0], [2150.0, 1173.0], [2110.0, 1118.0], [2054.0, 1110.0], [2062.0, 1155.0], [2070.0, 1152.0], [2078.0, 14363.0], [2102.0, 1123.0], [2094.0, 14382.0], [2086.0, 1113.0], [2142.0, 1205.0], [2294.0, 1182.0], [2302.0, 1180.0], [2246.0, 1164.0], [2254.0, 1172.0], [2262.0, 13045.0], [2270.0, 1136.0], [2286.0, 1182.0], [2278.0, 1184.0], [2238.0, 1126.0], [2182.0, 1181.0], [2190.0, 1234.0], [2198.0, 1181.0], [2206.0, 14049.0], [2230.0, 1169.0], [2222.0, 1178.0], [2214.0, 1202.0], [2422.0, 13140.0], [2430.0, 1268.0], [2374.0, 1165.0], [2382.0, 1114.0], [2390.0, 1188.0], [2398.0, 1176.0], [2414.0, 13185.0], [2406.0, 1179.0], [2366.0, 1184.0], [2310.0, 1136.0], [2318.0, 1141.0], [2326.0, 1113.0], [2334.0, 1169.0], [2358.0, 1119.0], [2350.0, 1124.0], [2342.0, 1170.0], [2550.0, 1117.0], [2558.0, 1117.0], [2502.0, 1120.0], [2510.0, 1135.0], [2518.0, 1170.0], [2526.0, 1181.0], [2542.0, 1159.0], [2534.0, 1138.0], [2494.0, 1159.0], [2438.0, 1211.0], [2446.0, 13286.0], [2454.0, 1223.0], [2462.0, 1188.0], [2486.0, 1159.0], [2478.0, 1178.0], [2470.0, 1217.0], [2678.0, 1165.0], [2686.0, 1157.0], [2630.0, 1148.0], [2638.0, 1146.0], [2646.0, 1154.0], [2654.0, 1119.0], [2670.0, 1168.0], [2662.0, 12904.0], [2622.0, 1197.0], [2566.0, 1151.0], [2574.0, 1120.0], [2582.0, 1131.0], [2590.0, 1123.0], [2614.0, 1207.0], [2606.0, 1169.0], [2598.0, 1166.0], [2806.0, 12247.0], [2814.0, 12592.0], [2758.0, 12733.0], [2766.0, 13191.0], [2774.0, 13260.0], [2782.0, 12281.0], [2798.0, 12293.0], [2790.0, 12655.0], [2694.0, 12696.0], [2702.0, 3932.5], [2710.0, 1105.0], [2718.0, 12475.0], [2750.0, 12503.0], [2742.0, 13319.0], [2734.0, 12289.0], [2726.0, 12747.0], [2934.0, 13076.0], [2942.0, 13100.0], [2886.0, 13812.0], [2894.0, 13075.0], [2902.0, 12389.0], [2910.0, 13860.0], [2926.0, 13136.0], [2918.0, 13068.0], [2822.0, 12205.0], [2830.0, 12196.0], [2838.0, 12182.0], [2846.0, 12207.0], [2878.0, 12402.0], [2870.0, 13160.0], [2862.0, 12403.0], [2854.0, 12410.0], [2958.0, 13101.0], [2950.0, 13072.0], [2966.0, 12989.0], [2974.0, 13049.0], [2998.0, 12581.0], [2990.0, 13016.0], [2982.0, 13044.0], [2167.0, 1203.0], [2175.0, 1184.0], [2119.0, 1145.0], [2127.0, 1249.0], [2135.0, 1197.0], [2159.0, 1175.0], [2151.0, 1170.0], [2111.0, 1107.0], [2055.0, 13962.0], [2063.0, 1149.0], [2071.0, 1151.0], [2079.0, 1157.0], [2103.0, 1124.0], [2095.0, 1158.0], [2087.0, 1115.0], [2143.0, 1203.0], [2295.0, 1180.0], [2303.0, 13038.0], [2247.0, 1121.0], [2255.0, 13337.0], [2263.0, 1184.0], [2271.0, 1130.0], [2287.0, 1143.0], [2279.0, 1179.0], [2239.0, 1135.0], [2183.0, 1190.0], [2191.0, 13353.0], [2199.0, 1229.0], [2207.0, 1218.0], [2231.0, 1209.0], [2223.0, 1180.0], [2215.0, 1178.0], [2423.0, 1165.0], [2431.0, 1205.0], [2375.0, 1162.0], [2383.0, 1158.0], [2391.0, 1176.0], [2399.0, 1177.0], [2415.0, 1137.0], [2407.0, 1170.0], [2367.0, 1172.0], [2311.0, 1137.0], [2319.0, 1151.0], [2327.0, 1153.0], [2335.0, 1150.0], [2359.0, 1165.0], [2351.0, 1169.0], [2343.0, 1118.0], [2551.0, 1162.0], [2559.0, 1163.0], [2503.0, 1152.0], [2511.0, 1119.0], [2519.0, 1138.0], [2527.0, 1175.0], [2543.0, 1175.0], [2535.0, 1135.0], [2495.0, 1118.0], [2439.0, 1219.0], [2447.0, 1216.0], [2455.0, 13025.0], [2463.0, 1181.0], [2487.0, 1189.0], [2479.0, 1179.0], [2471.0, 1183.0], [2679.0, 1174.0], [2687.0, 1156.0], [2631.0, 1185.0], [2639.0, 1148.0], [2647.0, 1118.0], [2655.0, 1124.0], [2671.0, 1175.0], [2663.0, 1117.0], [2623.0, 1143.0], [2567.0, 1157.0], [2575.0, 1122.0], [2583.0, 1137.0], [2591.0, 13581.0], [2615.0, 1302.0], [2607.0, 1134.0], [2599.0, 1158.0], [2807.0, 12554.0], [2815.0, 13928.0], [2759.0, 12262.0], [2767.0, 12246.0], [2775.0, 12496.0], [2783.0, 13162.0], [2799.0, 12639.0], [2791.0, 12508.0], [2751.0, 12302.0], [2695.0, 12581.0], [2703.0, 1141.0], [2711.0, 1104.0], [2719.0, 13430.0], [2743.0, 12311.0], [2735.0, 13251.0], [2727.0, 12570.0], [2935.0, 13136.0], [2943.0, 13122.0], [2887.0, 13841.0], [2895.0, 13879.0], [2903.0, 13021.0], [2911.0, 13150.0], [2927.0, 13823.0], [2919.0, 13071.0], [2879.0, 13089.0], [2823.0, 12221.0], [2831.0, 13211.0], [2839.0, 12402.0], [2847.0, 12179.0], [2871.0, 12660.0], [2863.0, 12371.0], [2855.0, 13259.0], [2959.0, 13067.0], [2951.0, 12990.0], [2967.0, 13064.0], [2975.0, 13062.0], [2999.0, 12567.0], [2991.0, 13755.0], [2983.0, 13726.0], [1.0, 31651.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2974.3444711894804, 2243.246255375924]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 425.35, "minX": 1.68416088E12, "maxY": 458324.3333333333, "series": [{"data": [[1.684161E12, 362201.31666666665], [1.68416118E12, 233332.7], [1.68416112E12, 458324.3333333333], [1.68416124E12, 523.4], [1.68416094E12, 443289.3333333333], [1.68416088E12, 106636.63333333333], [1.68416106E12, 341255.0333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.684161E12, 294649.9], [1.68416118E12, 191615.65], [1.68416112E12, 374841.95], [1.68416124E12, 425.35], [1.68416094E12, 360977.35], [1.68416088E12, 86554.2], [1.68416106E12, 277391.55]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416124E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1655.172246452469, "minX": 1.68416088E12, "maxY": 29019.85106382978, "series": [{"data": [[1.684161E12, 1655.172246452469], [1.68416118E12, 3262.546978281385], [1.68416112E12, 2446.360381458235], [1.68416124E12, 29019.85106382978], [1.68416094E12, 2124.178017295419], [1.68416088E12, 2983.9593393958507], [1.68416106E12, 1771.8117842811064]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416124E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1654.528195835123, "minX": 1.68416088E12, "maxY": 29019.808510638297, "series": [{"data": [[1.684161E12, 1654.528195835123], [1.68416118E12, 3255.9485363550584], [1.68416112E12, 2445.391598261723], [1.68416124E12, 29019.808510638297], [1.68416094E12, 2121.197468354439], [1.68416088E12, 2978.905822096791], [1.68416106E12, 1771.1780039803016]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416124E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68416088E12, "maxY": 972.0374202989408, "series": [{"data": [[1.684161E12, 91.34068431721896], [1.68416118E12, 138.92809254013133], [1.68416112E12, 127.01281989377007], [1.68416124E12, 0.0], [1.68416094E12, 103.93833813761167], [1.68416088E12, 972.0374202989408], [1.68416106E12, 118.39891031287706]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416124E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 54.0, "minX": 1.68416088E12, "maxY": 31651.0, "series": [{"data": [[1.684161E12, 12520.0], [1.68416118E12, 27464.0], [1.68416112E12, 14629.0], [1.68416124E12, 31651.0], [1.68416094E12, 17627.0], [1.68416088E12, 12263.0], [1.68416106E12, 11557.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.684161E12, 2753.9000000000015], [1.68416118E12, 8626.600000000064], [1.68416112E12, 5707.9000000000015], [1.68416124E12, 30032.4], [1.68416094E12, 2965.0], [1.68416088E12, 6026.0], [1.68416106E12, 2987.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.684161E12, 4867.0], [1.68416118E12, 19134.68000000021], [1.68416112E12, 10233.94000000001], [1.68416124E12, 31651.0], [1.68416094E12, 4978.0], [1.68416088E12, 9392.850000000004], [1.68416106E12, 6328.870000000021]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.684161E12, 3098.0], [1.68416118E12, 15274.0], [1.68416112E12, 7289.950000000001], [1.68416124E12, 31166.599999999995], [1.68416094E12, 3630.9500000000007], [1.68416088E12, 7250.5], [1.68416106E12, 3934.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.684161E12, 1090.0], [1.68416118E12, 54.0], [1.68416112E12, 1087.0], [1.68416124E12, 27621.0], [1.68416094E12, 64.0], [1.68416088E12, 1092.0], [1.68416106E12, 1089.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.684161E12, 1486.0], [1.68416118E12, 1503.0], [1.68416112E12, 2074.0], [1.68416124E12, 28828.0], [1.68416094E12, 1592.0], [1.68416088E12, 2251.0], [1.68416106E12, 1370.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416124E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 38.0, "minX": 1.0, "maxY": 30179.5, "series": [{"data": [[2.0, 30179.5], [3.0, 5484.0], [4.0, 9106.5], [5.0, 2434.0], [7.0, 15737.0], [9.0, 7690.5], [11.0, 8863.0], [14.0, 6908.0], [15.0, 5091.5], [16.0, 3476.0], [17.0, 4944.5], [18.0, 5180.0], [19.0, 22558.0], [20.0, 16984.5], [21.0, 6545.0], [23.0, 6267.0], [24.0, 4357.0], [26.0, 26321.0], [27.0, 1266.5], [28.0, 4121.5], [30.0, 3221.0], [32.0, 12764.0], [35.0, 4151.0], [36.0, 3052.0], [46.0, 21480.5], [54.0, 4083.0], [58.0, 19333.5], [63.0, 1596.0], [67.0, 3122.0], [69.0, 4439.0], [79.0, 2417.0], [101.0, 4436.5], [106.0, 1101.0], [107.0, 4021.0], [117.0, 2095.0], [147.0, 3019.0], [158.0, 2255.5], [163.0, 3613.0], [162.0, 1768.5], [160.0, 17163.0], [170.0, 2452.5], [176.0, 1622.0], [177.0, 4698.0], [184.0, 2154.0], [195.0, 1371.0], [206.0, 2831.0], [250.0, 1416.5], [273.0, 1896.0], [286.0, 2065.0], [282.0, 1347.0], [298.0, 3360.0], [303.0, 2046.0], [301.0, 1960.0], [295.0, 1513.0], [288.0, 2085.0], [290.0, 2345.5], [294.0, 12988.5], [312.0, 3569.0], [306.0, 3793.0], [307.0, 2091.5], [334.0, 2116.0], [331.0, 1683.0], [342.0, 1601.0], [344.0, 2804.5], [367.0, 5016.0], [355.0, 2032.5], [370.0, 2604.5], [369.0, 1142.0], [373.0, 15994.0], [399.0, 2205.0], [385.0, 3751.0], [389.0, 1196.0], [411.0, 1406.5], [423.0, 3371.0], [431.0, 2540.0], [433.0, 2156.0], [432.0, 1238.0], [466.0, 4197.5], [479.0, 2157.0], [470.0, 1979.0], [465.0, 1306.0], [493.0, 1161.0], [506.0, 1102.0], [536.0, 1131.0], [526.0, 2115.0], [525.0, 1644.0], [516.0, 1720.0], [553.0, 2018.0], [571.0, 1124.0], [575.0, 1101.0], [557.0, 2873.0], [577.0, 1170.0], [599.0, 1192.0], [596.0, 1169.0], [586.0, 1117.0], [590.0, 2766.0], [576.0, 2644.0], [602.0, 1124.0], [601.0, 1275.0], [604.0, 1123.0], [605.0, 1215.0], [607.0, 1118.0], [588.0, 2226.0], [628.0, 1921.0], [621.0, 1126.0], [612.0, 1105.0], [638.0, 2131.0], [629.0, 1507.0], [634.0, 1793.0], [614.0, 3468.0], [669.0, 1895.0], [671.0, 1122.0], [641.0, 1104.0], [667.0, 1664.0], [651.0, 1264.5], [644.0, 1122.0], [655.0, 1117.0], [661.0, 1395.0], [647.0, 2080.0], [675.0, 2741.0], [701.0, 1114.0], [690.0, 1102.0], [679.0, 2257.5], [711.0, 3131.0], [715.0, 1117.0], [720.0, 1423.0], [710.0, 1172.0], [723.0, 1769.0], [718.0, 2154.0], [716.0, 1121.0], [733.0, 1724.0], [714.0, 2577.5], [740.0, 1679.0], [762.0, 1785.5], [758.0, 1857.0], [761.0, 1699.0], [742.0, 1150.0], [748.0, 1996.0], [765.0, 1388.0], [746.0, 1127.0], [738.0, 1194.5], [739.0, 1649.0], [763.0, 1110.0], [792.0, 1203.0], [786.0, 2358.0], [793.0, 1536.0], [772.0, 2368.0], [824.0, 1451.0], [815.0, 3020.5], [816.0, 1343.5], [818.0, 1203.0], [823.0, 2129.0], [805.0, 1251.0], [828.0, 3119.5], [829.0, 1342.5], [811.0, 1906.0], [800.0, 2484.5], [830.0, 2346.5], [810.0, 1334.0], [837.0, 3056.0], [860.0, 3012.0], [863.0, 2979.5], [857.0, 1105.0], [843.0, 1139.0], [834.0, 1332.5], [852.0, 1835.0], [892.0, 3065.5], [889.0, 1370.0], [894.0, 1779.0], [893.0, 1111.0], [891.0, 1155.0], [880.0, 1902.0], [895.0, 1159.0], [872.0, 1270.0], [877.0, 2404.5], [874.0, 1267.5], [884.0, 1467.0], [885.0, 2304.5], [882.0, 1116.0], [865.0, 1754.0], [869.0, 1307.5], [888.0, 2662.5], [867.0, 2005.0], [903.0, 1130.0], [927.0, 1789.0], [913.0, 1381.5], [906.0, 1104.0], [911.0, 2225.0], [896.0, 1125.0], [924.0, 1663.0], [921.0, 1433.0], [920.0, 2475.0], [912.0, 1136.0], [919.0, 1130.0], [918.0, 1722.0], [897.0, 1422.0], [902.0, 1692.0], [900.0, 2457.0], [901.0, 1900.0], [899.0, 1102.0], [953.0, 1172.0], [943.0, 1134.0], [952.0, 1158.0], [934.0, 1526.0], [938.0, 1658.0], [937.0, 1652.0], [942.0, 1101.0], [939.0, 1690.0], [940.0, 1102.0], [956.0, 1689.0], [954.0, 1133.0], [931.0, 1906.0], [930.0, 1101.0], [928.0, 1882.0], [932.0, 1115.0], [933.0, 1372.0], [957.0, 1110.0], [951.0, 1741.0], [945.0, 2070.0], [946.0, 1949.5], [961.0, 1110.0], [963.0, 1121.0], [975.0, 3306.5], [982.0, 1799.0], [1037.0, 2203.0], [1042.0, 1114.0], [1090.0, 2137.0], [1156.0, 2264.0], [1260.0, 1351.0], [1270.0, 1125.0], [1442.0, 1903.5], [1.0, 6825.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[5.0, 43.5], [9.0, 48.0], [14.0, 10494.0], [21.0, 57.0], [23.0, 10313.0], [24.0, 10387.0], [27.0, 47.5], [28.0, 10110.5], [30.0, 10064.0], [106.0, 39.0], [147.0, 10396.5], [170.0, 10683.5], [195.0, 74.0], [206.0, 41.0], [286.0, 56.0], [295.0, 56.0], [301.0, 41.0], [294.0, 12276.5], [307.0, 141.0], [367.0, 10311.0], [355.0, 49.0], [370.0, 10397.5], [369.0, 63.0], [399.0, 60.0], [411.0, 51.0], [432.0, 40.5], [470.0, 49.0], [493.0, 71.0], [553.0, 283.0], [571.0, 69.5], [557.0, 10446.5], [590.0, 10341.0], [605.0, 45.0], [601.0, 213.0], [576.0, 60.0], [628.0, 83.0], [612.0, 59.0], [634.0, 53.5], [629.0, 10078.0], [671.0, 54.0], [651.0, 42.0], [647.0, 10361.0], [701.0, 10515.0], [690.0, 44.0], [679.0, 10403.0], [720.0, 78.0], [718.0, 44.0], [714.0, 10706.5], [758.0, 74.0], [761.0, 44.0], [762.0, 49.5], [748.0, 10168.0], [765.0, 58.5], [746.0, 10364.0], [739.0, 50.5], [792.0, 10086.0], [786.0, 50.5], [772.0, 10363.0], [811.0, 50.0], [816.0, 49.0], [830.0, 10336.5], [818.0, 373.0], [805.0, 57.0], [829.0, 14940.0], [837.0, 12330.0], [860.0, 12674.0], [863.0, 14250.0], [857.0, 44.0], [852.0, 10314.5], [891.0, 10312.0], [893.0, 10447.0], [894.0, 10338.0], [872.0, 60.0], [865.0, 1529.5], [895.0, 45.0], [869.0, 53.0], [867.0, 61.0], [877.0, 41.0], [874.0, 56.0], [885.0, 10457.0], [921.0, 52.0], [913.0, 10318.0], [906.0, 38.0], [911.0, 10066.5], [896.0, 10724.0], [912.0, 59.0], [919.0, 60.0], [903.0, 54.0], [901.0, 10106.0], [924.0, 41.0], [927.0, 57.0], [920.0, 46.0], [952.0, 39.0], [943.0, 10049.0], [953.0, 55.0], [954.0, 41.5], [938.0, 38.5], [937.0, 54.0], [939.0, 47.5], [951.0, 10234.0], [934.0, 5067.0], [928.0, 42.0], [961.0, 50.5], [963.0, 53.5], [975.0, 101.0], [982.0, 62.0], [1037.0, 169.5], [1042.0, 44.0], [1156.0, 82.0], [1260.0, 1260.0], [1270.0, 78.0], [1442.0, 3491.0], [1.0, 44.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1442.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 30179.5, "series": [{"data": [[2.0, 30179.5], [3.0, 5481.0], [4.0, 9106.5], [5.0, 2434.0], [7.0, 15737.0], [9.0, 7690.5], [11.0, 8848.0], [14.0, 6907.0], [15.0, 5090.5], [16.0, 3476.0], [17.0, 4943.0], [18.0, 5178.5], [19.0, 22558.0], [20.0, 16984.0], [21.0, 6545.0], [23.0, 6267.0], [24.0, 4357.0], [26.0, 26321.0], [27.0, 1266.5], [28.0, 4121.5], [30.0, 3221.0], [32.0, 12762.5], [35.0, 4151.0], [36.0, 3051.5], [46.0, 21480.5], [54.0, 4083.0], [58.0, 19333.5], [63.0, 1596.0], [67.0, 3122.0], [69.0, 4439.0], [79.0, 2415.0], [101.0, 4429.5], [106.0, 1101.0], [107.0, 4021.0], [117.0, 2095.0], [147.0, 3018.5], [158.0, 2255.5], [163.0, 3612.5], [162.0, 1768.5], [160.0, 17163.0], [170.0, 2452.5], [176.0, 1622.0], [177.0, 4698.0], [184.0, 2154.0], [195.0, 1371.0], [206.0, 2830.0], [250.0, 1416.5], [273.0, 1896.0], [286.0, 2065.0], [282.0, 1347.0], [298.0, 3358.0], [303.0, 2046.0], [301.0, 1960.0], [295.0, 1513.0], [288.0, 2085.0], [290.0, 2335.5], [294.0, 12988.5], [312.0, 3569.0], [306.0, 3793.0], [307.0, 2091.5], [334.0, 2116.0], [331.0, 1683.0], [342.0, 1601.0], [344.0, 2804.5], [367.0, 5015.5], [355.0, 2031.0], [370.0, 2604.0], [369.0, 1142.0], [373.0, 15994.0], [399.0, 2205.0], [385.0, 3751.0], [389.0, 1195.0], [411.0, 1406.0], [423.0, 3371.0], [431.0, 2540.0], [433.0, 2155.0], [432.0, 1238.0], [466.0, 4197.0], [479.0, 2157.0], [470.0, 1978.5], [465.0, 1306.0], [493.0, 1159.5], [506.0, 1102.0], [536.0, 1131.0], [526.0, 2114.5], [525.0, 1644.0], [516.0, 1713.0], [553.0, 2018.0], [571.0, 1124.0], [575.0, 1101.0], [557.0, 2873.0], [577.0, 1168.0], [599.0, 1192.0], [596.0, 1169.0], [586.0, 1117.0], [590.0, 2765.0], [576.0, 2643.0], [602.0, 1124.0], [601.0, 1273.0], [604.0, 1122.5], [605.0, 1215.0], [607.0, 1118.0], [588.0, 2225.0], [628.0, 1921.0], [621.0, 1125.0], [612.0, 1105.0], [638.0, 2130.0], [629.0, 1502.0], [634.0, 1792.5], [614.0, 3468.0], [669.0, 1895.0], [671.0, 1121.0], [641.0, 1104.0], [667.0, 1664.0], [651.0, 1264.0], [644.0, 1121.0], [655.0, 1116.0], [661.0, 1395.0], [647.0, 2080.0], [675.0, 2741.0], [701.0, 1113.5], [690.0, 1101.0], [679.0, 2225.0], [711.0, 3131.0], [715.0, 1117.0], [720.0, 1423.0], [710.0, 1171.0], [723.0, 1769.0], [718.0, 2154.0], [716.0, 1120.0], [733.0, 1716.0], [714.0, 2577.5], [740.0, 1676.0], [762.0, 1780.5], [758.0, 1857.0], [761.0, 1698.5], [742.0, 1149.0], [748.0, 1996.0], [765.0, 1388.0], [746.0, 1126.0], [738.0, 1194.5], [739.0, 1649.0], [763.0, 1110.0], [792.0, 1203.0], [786.0, 2358.0], [793.0, 1536.0], [772.0, 2368.0], [824.0, 1450.0], [815.0, 3020.0], [816.0, 1343.5], [818.0, 1200.0], [823.0, 2129.0], [805.0, 1244.0], [828.0, 3119.0], [829.0, 1341.0], [811.0, 1906.0], [800.0, 2484.5], [830.0, 2345.0], [810.0, 1334.0], [837.0, 3056.0], [860.0, 3012.0], [863.0, 2979.5], [857.0, 1104.0], [843.0, 1139.0], [834.0, 1332.0], [852.0, 1830.5], [892.0, 3065.5], [889.0, 1370.0], [894.0, 1779.0], [893.0, 1111.0], [891.0, 1155.0], [880.0, 1902.0], [895.0, 1159.0], [872.0, 1269.0], [877.0, 2404.5], [874.0, 1267.0], [884.0, 1465.5], [885.0, 2304.5], [882.0, 1116.0], [865.0, 1754.0], [869.0, 1306.5], [888.0, 2662.5], [867.0, 2005.0], [903.0, 1129.0], [927.0, 1789.0], [913.0, 1380.0], [906.0, 1103.0], [911.0, 2225.0], [896.0, 1125.0], [924.0, 1663.0], [921.0, 1432.0], [920.0, 2474.0], [912.0, 1136.0], [919.0, 1129.0], [918.0, 1721.5], [897.0, 1421.0], [902.0, 1692.0], [900.0, 2457.0], [901.0, 1900.0], [899.0, 1102.0], [953.0, 1172.0], [943.0, 1134.0], [952.0, 1158.0], [934.0, 1524.0], [938.0, 1658.0], [937.0, 1651.0], [942.0, 1101.0], [939.0, 1689.0], [940.0, 1101.0], [956.0, 1689.0], [954.0, 1133.0], [931.0, 1906.0], [930.0, 1101.0], [928.0, 1882.0], [932.0, 1115.0], [933.0, 1372.0], [957.0, 1110.0], [951.0, 1741.0], [945.0, 2070.0], [946.0, 1949.0], [961.0, 1110.0], [963.0, 1121.0], [975.0, 3301.5], [982.0, 1798.0], [1037.0, 2184.0], [1042.0, 1114.0], [1090.0, 2135.5], [1156.0, 2264.0], [1260.0, 1351.0], [1270.0, 1124.0], [1442.0, 1891.0], [1.0, 6823.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[5.0, 43.5], [9.0, 48.0], [14.0, 10494.0], [21.0, 57.0], [23.0, 10313.0], [24.0, 10387.0], [27.0, 47.5], [28.0, 10110.5], [30.0, 10064.0], [106.0, 39.0], [147.0, 10396.5], [170.0, 0.0], [195.0, 74.0], [206.0, 41.0], [286.0, 56.0], [295.0, 56.0], [301.0, 41.0], [294.0, 12276.5], [307.0, 141.0], [367.0, 10311.0], [355.0, 49.0], [370.0, 10397.5], [369.0, 63.0], [399.0, 60.0], [411.0, 51.0], [432.0, 40.5], [470.0, 49.0], [493.0, 71.0], [553.0, 283.0], [571.0, 69.5], [557.0, 10446.5], [590.0, 10341.0], [605.0, 45.0], [601.0, 160.0], [576.0, 60.0], [628.0, 81.5], [612.0, 59.0], [634.0, 53.5], [629.0, 10041.0], [671.0, 54.0], [651.0, 42.0], [647.0, 10361.0], [701.0, 10515.0], [690.0, 44.0], [679.0, 10403.0], [720.0, 78.0], [718.0, 44.0], [714.0, 10706.5], [758.0, 74.0], [761.0, 44.0], [762.0, 49.5], [748.0, 10168.0], [765.0, 58.5], [746.0, 10364.0], [739.0, 50.5], [792.0, 10086.0], [786.0, 50.5], [772.0, 10363.0], [811.0, 50.0], [816.0, 49.0], [830.0, 10336.5], [818.0, 289.0], [805.0, 57.0], [829.0, 14940.0], [837.0, 0.0], [860.0, 0.0], [863.0, 0.0], [857.0, 44.0], [852.0, 10314.5], [891.0, 10312.0], [893.0, 10447.0], [894.0, 10338.0], [872.0, 60.0], [865.0, 1529.5], [895.0, 45.0], [869.0, 53.0], [867.0, 61.0], [877.0, 41.0], [874.0, 56.0], [885.0, 10457.0], [921.0, 51.5], [913.0, 10318.0], [906.0, 38.0], [911.0, 10066.5], [896.0, 10724.0], [912.0, 59.0], [919.0, 60.0], [903.0, 54.0], [901.0, 10106.0], [924.0, 41.0], [927.0, 57.0], [920.0, 46.0], [952.0, 39.0], [943.0, 10049.0], [953.0, 55.0], [954.0, 41.5], [938.0, 38.5], [937.0, 54.0], [939.0, 47.5], [951.0, 10234.0], [934.0, 5067.0], [928.0, 42.0], [961.0, 50.5], [963.0, 53.5], [975.0, 101.0], [982.0, 62.0], [1037.0, 169.5], [1042.0, 44.0], [1156.0, 82.0], [1260.0, 1260.0], [1270.0, 78.0], [1442.0, 3491.0], [1.0, 44.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1442.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 209.41666666666666, "minX": 1.68416088E12, "maxY": 690.3333333333334, "series": [{"data": [[1.684161E12, 540.0], [1.68416118E12, 303.78333333333336], [1.68416112E12, 690.3333333333334], [1.68416094E12, 620.5833333333334], [1.68416088E12, 209.41666666666666], [1.68416106E12, 557.85]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416118E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68416088E12, "maxY": 682.6166666666667, "series": [{"data": [[1.684161E12, 541.4833333333333], [1.68416118E12, 345.96666666666664], [1.68416112E12, 682.6166666666667], [1.68416124E12, 0.7833333333333333], [1.68416094E12, 661.5333333333333], [1.68416088E12, 159.4], [1.68416106E12, 510.43333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68416118E12, 0.11666666666666667], [1.68416112E12, 0.016666666666666666], [1.68416094E12, 0.13333333333333333], [1.68416088E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.684161E12, 1.15], [1.68416118E12, 6.916666666666667], [1.68416112E12, 7.7], [1.68416094E12, 3.25], [1.68416106E12, 0.4166666666666667]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416124E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68416088E12, "maxY": 682.6166666666667, "series": [{"data": [[1.684161E12, 541.4833333333333], [1.68416118E12, 345.96666666666664], [1.68416112E12, 682.6166666666667], [1.68416124E12, 0.7833333333333333], [1.68416094E12, 661.5333333333333], [1.68416088E12, 159.4], [1.68416106E12, 510.43333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.684161E12, 1.15], [1.68416118E12, 7.033333333333333], [1.68416112E12, 7.716666666666667], [1.68416094E12, 3.3833333333333333], [1.68416088E12, 0.05], [1.68416106E12, 0.4166666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416124E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.68416088E12, "maxY": 682.6166666666667, "series": [{"data": [[1.684161E12, 541.4833333333333], [1.68416118E12, 345.96666666666664], [1.68416112E12, 682.6166666666667], [1.68416124E12, 0.7833333333333333], [1.68416094E12, 661.5333333333333], [1.68416088E12, 159.4], [1.68416106E12, 510.43333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.684161E12, 1.15], [1.68416118E12, 7.033333333333333], [1.68416112E12, 7.716666666666667], [1.68416094E12, 3.3833333333333333], [1.68416088E12, 0.05], [1.68416106E12, 0.4166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416124E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

