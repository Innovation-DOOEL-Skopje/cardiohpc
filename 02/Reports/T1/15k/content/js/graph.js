/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "maxY": 87398.0, "series": [{"data": [[0.0, 36.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 38.0], [0.5, 38.0], [0.6, 38.0], [0.7, 38.0], [0.8, 38.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 39.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 39.0], [3.2, 39.0], [3.3, 39.0], [3.4, 39.0], [3.5, 39.0], [3.6, 39.0], [3.7, 39.0], [3.8, 39.0], [3.9, 39.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 40.0], [5.5, 40.0], [5.6, 40.0], [5.7, 40.0], [5.8, 40.0], [5.9, 40.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 40.0], [6.4, 40.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 40.0], [6.9, 40.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 40.0], [7.6, 40.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 41.0], [8.3, 41.0], [8.4, 41.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 41.0], [10.6, 41.0], [10.7, 41.0], [10.8, 41.0], [10.9, 41.0], [11.0, 41.0], [11.1, 41.0], [11.2, 41.0], [11.3, 41.0], [11.4, 41.0], [11.5, 41.0], [11.6, 41.0], [11.7, 41.0], [11.8, 41.0], [11.9, 41.0], [12.0, 41.0], [12.1, 41.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 42.0], [12.8, 42.0], [12.9, 42.0], [13.0, 42.0], [13.1, 42.0], [13.2, 42.0], [13.3, 42.0], [13.4, 42.0], [13.5, 42.0], [13.6, 42.0], [13.7, 42.0], [13.8, 42.0], [13.9, 42.0], [14.0, 42.0], [14.1, 42.0], [14.2, 42.0], [14.3, 42.0], [14.4, 42.0], [14.5, 42.0], [14.6, 42.0], [14.7, 42.0], [14.8, 42.0], [14.9, 42.0], [15.0, 42.0], [15.1, 42.0], [15.2, 42.0], [15.3, 42.0], [15.4, 42.0], [15.5, 42.0], [15.6, 42.0], [15.7, 42.0], [15.8, 42.0], [15.9, 42.0], [16.0, 42.0], [16.1, 42.0], [16.2, 43.0], [16.3, 43.0], [16.4, 43.0], [16.5, 43.0], [16.6, 43.0], [16.7, 43.0], [16.8, 43.0], [16.9, 43.0], [17.0, 43.0], [17.1, 43.0], [17.2, 43.0], [17.3, 43.0], [17.4, 43.0], [17.5, 43.0], [17.6, 43.0], [17.7, 43.0], [17.8, 43.0], [17.9, 43.0], [18.0, 43.0], [18.1, 43.0], [18.2, 43.0], [18.3, 43.0], [18.4, 43.0], [18.5, 43.0], [18.6, 43.0], [18.7, 43.0], [18.8, 43.0], [18.9, 43.0], [19.0, 44.0], [19.1, 44.0], [19.2, 44.0], [19.3, 44.0], [19.4, 44.0], [19.5, 44.0], [19.6, 44.0], [19.7, 44.0], [19.8, 44.0], [19.9, 44.0], [20.0, 44.0], [20.1, 44.0], [20.2, 44.0], [20.3, 45.0], [20.4, 45.0], [20.5, 45.0], [20.6, 45.0], [20.7, 45.0], [20.8, 46.0], [20.9, 46.0], [21.0, 46.0], [21.1, 46.0], [21.2, 47.0], [21.3, 47.0], [21.4, 48.0], [21.5, 48.0], [21.6, 49.0], [21.7, 50.0], [21.8, 51.0], [21.9, 52.0], [22.0, 53.0], [22.1, 54.0], [22.2, 55.0], [22.3, 56.0], [22.4, 58.0], [22.5, 59.0], [22.6, 61.0], [22.7, 64.0], [22.8, 66.0], [22.9, 70.0], [23.0, 75.0], [23.1, 81.0], [23.2, 89.0], [23.3, 94.0], [23.4, 98.0], [23.5, 102.0], [23.6, 105.0], [23.7, 110.0], [23.8, 116.0], [23.9, 124.0], [24.0, 137.0], [24.1, 154.0], [24.2, 183.0], [24.3, 223.0], [24.4, 265.0], [24.5, 309.0], [24.6, 368.0], [24.7, 448.0], [24.8, 566.0], [24.9, 701.0], [25.0, 913.0], [25.1, 1089.0], [25.2, 1091.0], [25.3, 1091.0], [25.4, 1092.0], [25.5, 1092.0], [25.6, 1093.0], [25.7, 1093.0], [25.8, 1093.0], [25.9, 1093.0], [26.0, 1094.0], [26.1, 1094.0], [26.2, 1094.0], [26.3, 1094.0], [26.4, 1095.0], [26.5, 1095.0], [26.6, 1095.0], [26.7, 1095.0], [26.8, 1095.0], [26.9, 1095.0], [27.0, 1096.0], [27.1, 1096.0], [27.2, 1096.0], [27.3, 1096.0], [27.4, 1096.0], [27.5, 1096.0], [27.6, 1096.0], [27.7, 1097.0], [27.8, 1097.0], [27.9, 1097.0], [28.0, 1097.0], [28.1, 1097.0], [28.2, 1097.0], [28.3, 1097.0], [28.4, 1097.0], [28.5, 1098.0], [28.6, 1098.0], [28.7, 1098.0], [28.8, 1098.0], [28.9, 1098.0], [29.0, 1098.0], [29.1, 1098.0], [29.2, 1098.0], [29.3, 1098.0], [29.4, 1099.0], [29.5, 1099.0], [29.6, 1099.0], [29.7, 1099.0], [29.8, 1099.0], [29.9, 1099.0], [30.0, 1099.0], [30.1, 1100.0], [30.2, 1100.0], [30.3, 1100.0], [30.4, 1100.0], [30.5, 1100.0], [30.6, 1100.0], [30.7, 1100.0], [30.8, 1100.0], [30.9, 1101.0], [31.0, 1101.0], [31.1, 1101.0], [31.2, 1101.0], [31.3, 1101.0], [31.4, 1101.0], [31.5, 1102.0], [31.6, 1102.0], [31.7, 1102.0], [31.8, 1102.0], [31.9, 1102.0], [32.0, 1102.0], [32.1, 1103.0], [32.2, 1103.0], [32.3, 1103.0], [32.4, 1103.0], [32.5, 1103.0], [32.6, 1103.0], [32.7, 1104.0], [32.8, 1104.0], [32.9, 1104.0], [33.0, 1104.0], [33.1, 1105.0], [33.2, 1105.0], [33.3, 1105.0], [33.4, 1105.0], [33.5, 1106.0], [33.6, 1106.0], [33.7, 1106.0], [33.8, 1107.0], [33.9, 1107.0], [34.0, 1108.0], [34.1, 1108.0], [34.2, 1108.0], [34.3, 1109.0], [34.4, 1109.0], [34.5, 1110.0], [34.6, 1111.0], [34.7, 1111.0], [34.8, 1112.0], [34.9, 1113.0], [35.0, 1113.0], [35.1, 1114.0], [35.2, 1115.0], [35.3, 1116.0], [35.4, 1117.0], [35.5, 1118.0], [35.6, 1119.0], [35.7, 1120.0], [35.8, 1121.0], [35.9, 1123.0], [36.0, 1124.0], [36.1, 1125.0], [36.2, 1127.0], [36.3, 1128.0], [36.4, 1129.0], [36.5, 1130.0], [36.6, 1132.0], [36.7, 1133.0], [36.8, 1135.0], [36.9, 1136.0], [37.0, 1137.0], [37.1, 1139.0], [37.2, 1140.0], [37.3, 1142.0], [37.4, 1143.0], [37.5, 1144.0], [37.6, 1146.0], [37.7, 1147.0], [37.8, 1149.0], [37.9, 1150.0], [38.0, 1151.0], [38.1, 1153.0], [38.2, 1154.0], [38.3, 1156.0], [38.4, 1157.0], [38.5, 1158.0], [38.6, 1160.0], [38.7, 1161.0], [38.8, 1163.0], [38.9, 1164.0], [39.0, 1166.0], [39.1, 1167.0], [39.2, 1169.0], [39.3, 1170.0], [39.4, 1172.0], [39.5, 1173.0], [39.6, 1175.0], [39.7, 1176.0], [39.8, 1178.0], [39.9, 1180.0], [40.0, 1181.0], [40.1, 1183.0], [40.2, 1185.0], [40.3, 1186.0], [40.4, 1188.0], [40.5, 1190.0], [40.6, 1191.0], [40.7, 1193.0], [40.8, 1195.0], [40.9, 1196.0], [41.0, 1198.0], [41.1, 1200.0], [41.2, 1201.0], [41.3, 1203.0], [41.4, 1205.0], [41.5, 1206.0], [41.6, 1208.0], [41.7, 1210.0], [41.8, 1212.0], [41.9, 1214.0], [42.0, 1215.0], [42.1, 1217.0], [42.2, 1219.0], [42.3, 1221.0], [42.4, 1223.0], [42.5, 1224.0], [42.6, 1226.0], [42.7, 1228.0], [42.8, 1230.0], [42.9, 1232.0], [43.0, 1234.0], [43.1, 1236.0], [43.2, 1238.0], [43.3, 1240.0], [43.4, 1242.0], [43.5, 1244.0], [43.6, 1246.0], [43.7, 1248.0], [43.8, 1250.0], [43.9, 1252.0], [44.0, 1254.0], [44.1, 1256.0], [44.2, 1258.0], [44.3, 1260.0], [44.4, 1262.0], [44.5, 1264.0], [44.6, 1267.0], [44.7, 1269.0], [44.8, 1271.0], [44.9, 1273.0], [45.0, 1275.0], [45.1, 1278.0], [45.2, 1280.0], [45.3, 1283.0], [45.4, 1285.0], [45.5, 1287.0], [45.6, 1290.0], [45.7, 1292.0], [45.8, 1294.0], [45.9, 1296.0], [46.0, 1299.0], [46.1, 1301.0], [46.2, 1304.0], [46.3, 1306.0], [46.4, 1309.0], [46.5, 1311.0], [46.6, 1314.0], [46.7, 1316.0], [46.8, 1318.0], [46.9, 1321.0], [47.0, 1323.0], [47.1, 1326.0], [47.2, 1328.0], [47.3, 1331.0], [47.4, 1334.0], [47.5, 1336.0], [47.6, 1339.0], [47.7, 1342.0], [47.8, 1344.0], [47.9, 1347.0], [48.0, 1349.0], [48.1, 1352.0], [48.2, 1355.0], [48.3, 1357.0], [48.4, 1360.0], [48.5, 1363.0], [48.6, 1365.0], [48.7, 1368.0], [48.8, 1371.0], [48.9, 1374.0], [49.0, 1377.0], [49.1, 1379.0], [49.2, 1382.0], [49.3, 1385.0], [49.4, 1388.0], [49.5, 1391.0], [49.6, 1394.0], [49.7, 1397.0], [49.8, 1400.0], [49.9, 1403.0], [50.0, 1406.0], [50.1, 1409.0], [50.2, 1412.0], [50.3, 1415.0], [50.4, 1418.0], [50.5, 1422.0], [50.6, 1425.0], [50.7, 1428.0], [50.8, 1431.0], [50.9, 1435.0], [51.0, 1438.0], [51.1, 1442.0], [51.2, 1445.0], [51.3, 1449.0], [51.4, 1452.0], [51.5, 1455.0], [51.6, 1459.0], [51.7, 1462.0], [51.8, 1466.0], [51.9, 1469.0], [52.0, 1473.0], [52.1, 1476.0], [52.2, 1480.0], [52.3, 1483.0], [52.4, 1487.0], [52.5, 1491.0], [52.6, 1494.0], [52.7, 1498.0], [52.8, 1501.0], [52.9, 1505.0], [53.0, 1508.0], [53.1, 1512.0], [53.2, 1516.0], [53.3, 1520.0], [53.4, 1523.0], [53.5, 1527.0], [53.6, 1531.0], [53.7, 1535.0], [53.8, 1539.0], [53.9, 1542.0], [54.0, 1546.0], [54.1, 1551.0], [54.2, 1554.0], [54.3, 1558.0], [54.4, 1562.0], [54.5, 1566.0], [54.6, 1570.0], [54.7, 1574.0], [54.8, 1578.0], [54.9, 1581.0], [55.0, 1586.0], [55.1, 1590.0], [55.2, 1594.0], [55.3, 1598.0], [55.4, 1602.0], [55.5, 1606.0], [55.6, 1610.0], [55.7, 1614.0], [55.8, 1618.0], [55.9, 1622.0], [56.0, 1627.0], [56.1, 1631.0], [56.2, 1635.0], [56.3, 1640.0], [56.4, 1645.0], [56.5, 1650.0], [56.6, 1654.0], [56.7, 1659.0], [56.8, 1663.0], [56.9, 1667.0], [57.0, 1672.0], [57.1, 1677.0], [57.2, 1682.0], [57.3, 1687.0], [57.4, 1691.0], [57.5, 1696.0], [57.6, 1701.0], [57.7, 1705.0], [57.8, 1711.0], [57.9, 1716.0], [58.0, 1721.0], [58.1, 1726.0], [58.2, 1731.0], [58.3, 1736.0], [58.4, 1742.0], [58.5, 1747.0], [58.6, 1752.0], [58.7, 1757.0], [58.8, 1763.0], [58.9, 1768.0], [59.0, 1773.0], [59.1, 1778.0], [59.2, 1783.0], [59.3, 1789.0], [59.4, 1795.0], [59.5, 1800.0], [59.6, 1805.0], [59.7, 1812.0], [59.8, 1818.0], [59.9, 1824.0], [60.0, 1830.0], [60.1, 1836.0], [60.2, 1842.0], [60.3, 1848.0], [60.4, 1855.0], [60.5, 1861.0], [60.6, 1867.0], [60.7, 1873.0], [60.8, 1880.0], [60.9, 1886.0], [61.0, 1892.0], [61.1, 1898.0], [61.2, 1904.0], [61.3, 1910.0], [61.4, 1917.0], [61.5, 1924.0], [61.6, 1931.0], [61.7, 1938.0], [61.8, 1945.0], [61.9, 1952.0], [62.0, 1959.0], [62.1, 1966.0], [62.2, 1972.0], [62.3, 1979.0], [62.4, 1986.0], [62.5, 1993.0], [62.6, 2001.0], [62.7, 2008.0], [62.8, 2016.0], [62.9, 2022.0], [63.0, 2029.0], [63.1, 2037.0], [63.2, 2044.0], [63.3, 2051.0], [63.4, 2058.0], [63.5, 2065.0], [63.6, 2073.0], [63.7, 2081.0], [63.8, 2088.0], [63.9, 2096.0], [64.0, 2104.0], [64.1, 2112.0], [64.2, 2119.0], [64.3, 2128.0], [64.4, 2136.0], [64.5, 2145.0], [64.6, 2154.0], [64.7, 2162.0], [64.8, 2171.0], [64.9, 2180.0], [65.0, 2189.0], [65.1, 2198.0], [65.2, 2208.0], [65.3, 2218.0], [65.4, 2228.0], [65.5, 2237.0], [65.6, 2247.0], [65.7, 2257.0], [65.8, 2268.0], [65.9, 2279.0], [66.0, 2290.0], [66.1, 2301.0], [66.2, 2313.0], [66.3, 2325.0], [66.4, 2336.0], [66.5, 2349.0], [66.6, 2360.0], [66.7, 2372.0], [66.8, 2384.0], [66.9, 2396.0], [67.0, 2409.0], [67.1, 2422.0], [67.2, 2434.0], [67.3, 2447.0], [67.4, 2461.0], [67.5, 2473.0], [67.6, 2487.0], [67.7, 2501.0], [67.8, 2516.0], [67.9, 2529.0], [68.0, 2542.0], [68.1, 2556.0], [68.2, 2570.0], [68.3, 2585.0], [68.4, 2599.0], [68.5, 2613.0], [68.6, 2628.0], [68.7, 2642.0], [68.8, 2658.0], [68.9, 2672.0], [69.0, 2684.0], [69.1, 2698.0], [69.2, 2714.0], [69.3, 2727.0], [69.4, 2740.0], [69.5, 2754.0], [69.6, 2767.0], [69.7, 2781.0], [69.8, 2794.0], [69.9, 2808.0], [70.0, 2820.0], [70.1, 2834.0], [70.2, 2848.0], [70.3, 2862.0], [70.4, 2876.0], [70.5, 2890.0], [70.6, 2903.0], [70.7, 2916.0], [70.8, 2929.0], [70.9, 2942.0], [71.0, 2955.0], [71.1, 2969.0], [71.2, 2982.0], [71.3, 2994.0], [71.4, 3006.0], [71.5, 3019.0], [71.6, 3033.0], [71.7, 3045.0], [71.8, 3058.0], [71.9, 3071.0], [72.0, 3083.0], [72.1, 3094.0], [72.2, 3106.0], [72.3, 3120.0], [72.4, 3134.0], [72.5, 3147.0], [72.6, 3160.0], [72.7, 3173.0], [72.8, 3187.0], [72.9, 3200.0], [73.0, 3214.0], [73.1, 3229.0], [73.2, 3243.0], [73.3, 3257.0], [73.4, 3271.0], [73.5, 3286.0], [73.6, 3300.0], [73.7, 3316.0], [73.8, 3330.0], [73.9, 3346.0], [74.0, 3361.0], [74.1, 3375.0], [74.2, 3391.0], [74.3, 3407.0], [74.4, 3426.0], [74.5, 3442.0], [74.6, 3461.0], [74.7, 3477.0], [74.8, 3493.0], [74.9, 3511.0], [75.0, 3531.0], [75.1, 3548.0], [75.2, 3567.0], [75.3, 3583.0], [75.4, 3601.0], [75.5, 3620.0], [75.6, 3638.0], [75.7, 3656.0], [75.8, 3673.0], [75.9, 3689.0], [76.0, 3707.0], [76.1, 3726.0], [76.2, 3744.0], [76.3, 3762.0], [76.4, 3779.0], [76.5, 3797.0], [76.6, 3815.0], [76.7, 3834.0], [76.8, 3851.0], [76.9, 3869.0], [77.0, 3887.0], [77.1, 3904.0], [77.2, 3920.0], [77.3, 3937.0], [77.4, 3954.0], [77.5, 3970.0], [77.6, 3986.0], [77.7, 4003.0], [77.8, 4019.0], [77.9, 4036.0], [78.0, 4052.0], [78.1, 4067.0], [78.2, 4084.0], [78.3, 4098.0], [78.4, 4113.0], [78.5, 4128.0], [78.6, 4143.0], [78.7, 4158.0], [78.8, 4173.0], [78.9, 4189.0], [79.0, 4206.0], [79.1, 4222.0], [79.2, 4236.0], [79.3, 4251.0], [79.4, 4265.0], [79.5, 4281.0], [79.6, 4298.0], [79.7, 4314.0], [79.8, 4329.0], [79.9, 4346.0], [80.0, 4364.0], [80.1, 4381.0], [80.2, 4398.0], [80.3, 4416.0], [80.4, 4433.0], [80.5, 4450.0], [80.6, 4468.0], [80.7, 4486.0], [80.8, 4506.0], [80.9, 4524.0], [81.0, 4545.0], [81.1, 4563.0], [81.2, 4583.0], [81.3, 4602.0], [81.4, 4622.0], [81.5, 4644.0], [81.6, 4663.0], [81.7, 4683.0], [81.8, 4704.0], [81.9, 4724.0], [82.0, 4745.0], [82.1, 4764.0], [82.2, 4784.0], [82.3, 4803.0], [82.4, 4822.0], [82.5, 4842.0], [82.6, 4861.0], [82.7, 4881.0], [82.8, 4902.0], [82.9, 4920.0], [83.0, 4937.0], [83.1, 4956.0], [83.2, 4974.0], [83.3, 4993.0], [83.4, 5012.0], [83.5, 5031.0], [83.6, 5051.0], [83.7, 5070.0], [83.8, 5089.0], [83.9, 5108.0], [84.0, 5126.0], [84.1, 5144.0], [84.2, 5163.0], [84.3, 5184.0], [84.4, 5203.0], [84.5, 5222.0], [84.6, 5243.0], [84.7, 5262.0], [84.8, 5280.0], [84.9, 5299.0], [85.0, 5318.0], [85.1, 5337.0], [85.2, 5358.0], [85.3, 5381.0], [85.4, 5403.0], [85.5, 5425.0], [85.6, 5447.0], [85.7, 5470.0], [85.8, 5491.0], [85.9, 5516.0], [86.0, 5540.0], [86.1, 5563.0], [86.2, 5588.0], [86.3, 5610.0], [86.4, 5634.0], [86.5, 5658.0], [86.6, 5685.0], [86.7, 5710.0], [86.8, 5736.0], [86.9, 5761.0], [87.0, 5787.0], [87.1, 5813.0], [87.2, 5841.0], [87.3, 5866.0], [87.4, 5894.0], [87.5, 5919.0], [87.6, 5945.0], [87.7, 5972.0], [87.8, 5998.0], [87.9, 6022.0], [88.0, 6044.0], [88.1, 6068.0], [88.2, 6091.0], [88.3, 6116.0], [88.4, 6141.0], [88.5, 6167.0], [88.6, 6192.0], [88.7, 6216.0], [88.8, 6240.0], [88.9, 6265.0], [89.0, 6287.0], [89.1, 6313.0], [89.2, 6338.0], [89.3, 6362.0], [89.4, 6390.0], [89.5, 6417.0], [89.6, 6444.0], [89.7, 6471.0], [89.8, 6499.0], [89.9, 6527.0], [90.0, 6558.0], [90.1, 6589.0], [90.2, 6620.0], [90.3, 6649.0], [90.4, 6680.0], [90.5, 6713.0], [90.6, 6747.0], [90.7, 6780.0], [90.8, 6816.0], [90.9, 6853.0], [91.0, 6886.0], [91.1, 6921.0], [91.2, 6955.0], [91.3, 6996.0], [91.4, 7032.0], [91.5, 7066.0], [91.6, 7099.0], [91.7, 7132.0], [91.8, 7164.0], [91.9, 7196.0], [92.0, 7227.0], [92.1, 7259.0], [92.2, 7294.0], [92.3, 7327.0], [92.4, 7360.0], [92.5, 7390.0], [92.6, 7428.0], [92.7, 7468.0], [92.8, 7506.0], [92.9, 7545.0], [93.0, 7590.0], [93.1, 7635.0], [93.2, 7684.0], [93.3, 7733.0], [93.4, 7781.0], [93.5, 7831.0], [93.6, 7875.0], [93.7, 7927.0], [93.8, 7976.0], [93.9, 8022.0], [94.0, 8069.0], [94.1, 8114.0], [94.2, 8154.0], [94.3, 8200.0], [94.4, 8243.0], [94.5, 8283.0], [94.6, 8322.0], [94.7, 8364.0], [94.8, 8409.0], [94.9, 8457.0], [95.0, 8500.0], [95.1, 8548.0], [95.2, 8600.0], [95.3, 8651.0], [95.4, 8703.0], [95.5, 8753.0], [95.6, 8808.0], [95.7, 8870.0], [95.8, 8930.0], [95.9, 8994.0], [96.0, 9055.0], [96.1, 9114.0], [96.2, 9166.0], [96.3, 9220.0], [96.4, 9271.0], [96.5, 9318.0], [96.6, 9364.0], [96.7, 9415.0], [96.8, 9462.0], [96.9, 9514.0], [97.0, 9567.0], [97.1, 9623.0], [97.2, 9682.0], [97.3, 9748.0], [97.4, 9820.0], [97.5, 9894.0], [97.6, 9966.0], [97.7, 10043.0], [97.8, 10087.0], [97.9, 10134.0], [98.0, 10180.0], [98.1, 10229.0], [98.2, 10273.0], [98.3, 10318.0], [98.4, 10370.0], [98.5, 10417.0], [98.6, 10470.0], [98.7, 10523.0], [98.8, 10578.0], [98.9, 10639.0], [99.0, 10698.0], [99.1, 10760.0], [99.2, 10828.0], [99.3, 10906.0], [99.4, 10999.0], [99.5, 11089.0], [99.6, 11197.0], [99.7, 11398.0], [99.8, 13026.0], [99.9, 13521.0], [100.0, 87398.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 85831.0, "series": [{"data": [[0.0, 85831.0], [100.0, 2933.0], [200.0, 882.0], [300.0, 599.0], [400.0, 376.0], [500.0, 311.0], [600.0, 246.0], [700.0, 200.0], [800.0, 154.0], [900.0, 145.0], [1000.0, 18509.0], [1100.0, 40314.0], [1200.0, 18028.0], [1300.0, 13784.0], [1400.0, 10877.0], [1500.0, 9486.0], [1600.0, 8173.0], [1700.0, 7009.0], [1800.0, 5990.0], [1900.0, 5345.0], [2000.0, 4977.0], [2100.0, 4306.0], [2200.0, 3524.0], [2300.0, 3095.0], [2400.0, 2785.0], [2500.0, 2623.0], [2600.0, 2567.0], [2700.0, 2682.0], [2800.0, 2686.0], [2900.0, 2836.0], [3000.0, 2911.0], [3100.0, 2760.0], [3200.0, 2565.0], [3300.0, 2426.0], [3400.0, 2105.0], [3500.0, 2052.0], [3600.0, 2058.0], [3700.0, 2041.0], [3800.0, 2053.0], [3900.0, 2248.0], [4000.0, 2290.0], [4100.0, 2377.0], [4300.0, 2187.0], [4200.0, 2385.0], [4400.0, 2055.0], [4600.0, 1796.0], [4500.0, 1896.0], [70500.0, 1.0], [4700.0, 1850.0], [4800.0, 1854.0], [4900.0, 1999.0], [5000.0, 1902.0], [5100.0, 1922.0], [5200.0, 1922.0], [5300.0, 1769.0], [82500.0, 1.0], [83700.0, 1.0], [85700.0, 2.0], [5400.0, 1638.0], [5500.0, 1519.0], [5600.0, 1503.0], [87300.0, 2.0], [5700.0, 1412.0], [5800.0, 1360.0], [5900.0, 1422.0], [6000.0, 1559.0], [6100.0, 1464.0], [6200.0, 1546.0], [6300.0, 1401.0], [6500.0, 1226.0], [6600.0, 1176.0], [6400.0, 1336.0], [6700.0, 1089.0], [6900.0, 971.0], [6800.0, 1067.0], [7000.0, 1067.0], [7100.0, 1136.0], [7300.0, 1139.0], [7200.0, 1109.0], [7400.0, 945.0], [7500.0, 868.0], [7600.0, 768.0], [7800.0, 771.0], [7700.0, 763.0], [7900.0, 745.0], [8000.0, 792.0], [8100.0, 838.0], [8200.0, 886.0], [8300.0, 869.0], [8400.0, 813.0], [8600.0, 712.0], [8700.0, 690.0], [8500.0, 735.0], [8800.0, 612.0], [8900.0, 585.0], [9000.0, 593.0], [9100.0, 693.0], [9200.0, 725.0], [9300.0, 771.0], [9400.0, 726.0], [9500.0, 709.0], [9600.0, 599.0], [9700.0, 534.0], [10100.0, 802.0], [9800.0, 504.0], [9900.0, 484.0], [10000.0, 661.0], [10200.0, 813.0], [10500.0, 670.0], [10400.0, 706.0], [10300.0, 740.0], [10600.0, 594.0], [10700.0, 565.0], [10800.0, 498.0], [10900.0, 397.0], [11100.0, 328.0], [11200.0, 202.0], [11000.0, 409.0], [11300.0, 158.0], [11400.0, 79.0], [11700.0, 62.0], [11600.0, 20.0], [11500.0, 36.0], [11800.0, 31.0], [12000.0, 9.0], [11900.0, 23.0], [12100.0, 9.0], [12200.0, 10.0], [12300.0, 9.0], [12500.0, 6.0], [12400.0, 5.0], [12600.0, 13.0], [12700.0, 15.0], [12800.0, 24.0], [13000.0, 54.0], [12900.0, 5.0], [13100.0, 87.0], [13200.0, 68.0], [13300.0, 42.0], [13400.0, 124.0], [13500.0, 21.0], [13600.0, 26.0], [13700.0, 61.0], [13800.0, 47.0], [14000.0, 41.0], [14100.0, 19.0], [14200.0, 16.0], [14300.0, 16.0], [13900.0, 32.0], [14400.0, 7.0], [14500.0, 5.0], [14700.0, 22.0], [14600.0, 7.0], [14800.0, 2.0], [15000.0, 3.0], [15100.0, 1.0], [15200.0, 1.0], [15700.0, 4.0], [15800.0, 2.0], [15400.0, 2.0], [15500.0, 1.0], [16200.0, 1.0], [16100.0, 5.0], [16000.0, 2.0], [16400.0, 2.0], [17100.0, 2.0], [16600.0, 1.0], [16500.0, 2.0], [16800.0, 2.0], [16700.0, 1.0], [17400.0, 1.0], [18100.0, 1.0], [17500.0, 1.0], [17900.0, 1.0], [18000.0, 1.0], [18900.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 87300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2917.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 170811.0, "series": [{"data": [[0.0, 2917.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 102377.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 170811.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 90102.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2925.674314115956, "minX": 1.68416436E12, "maxY": 3000.0, "series": [{"data": [[1.68416442E12, 3000.0], [1.6841646E12, 3000.0], [1.68416448E12, 3000.0], [1.68416466E12, 2925.674314115956], [1.68416436E12, 3000.0], [1.68416454E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416466E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.0, "maxY": 87398.0, "series": [{"data": [[2.0, 87323.0], [3.0, 11115.0], [4.0, 10576.0], [6.0, 10559.0], [8.0, 10727.333333333334], [9.0, 10608.0], [10.0, 10687.0], [11.0, 10071.0], [12.0, 10181.0], [13.0, 10381.0], [14.0, 10229.0], [15.0, 10443.0], [16.0, 11193.0], [17.0, 11247.0], [18.0, 10066.0], [19.0, 10270.0], [20.0, 10317.0], [21.0, 85740.0], [22.0, 85752.0], [23.0, 9798.0], [24.0, 9771.0], [28.0, 9779.333333333334], [29.0, 9648.0], [31.0, 10248.0], [33.0, 10293.0], [35.0, 10928.0], [34.0, 9606.0], [37.0, 9490.0], [36.0, 9480.0], [39.0, 9557.0], [38.0, 9510.0], [41.0, 11035.0], [40.0, 11362.0], [43.0, 9149.0], [42.0, 9485.0], [45.0, 9619.0], [44.0, 9673.0], [47.0, 10362.0], [46.0, 9550.0], [49.0, 10282.0], [48.0, 9429.0], [50.0, 9404.0], [53.0, 10298.0], [52.0, 9857.0], [55.0, 10238.0], [54.0, 9462.0], [57.0, 11124.0], [56.0, 11195.0], [59.0, 9520.0], [58.0, 11324.0], [61.0, 9495.0], [60.0, 10469.0], [62.0, 10793.0], [67.0, 9578.0], [66.0, 8771.0], [65.0, 8972.0], [64.0, 9629.5], [70.0, 9570.0], [69.0, 10151.0], [68.0, 10105.0], [75.0, 8965.0], [72.0, 8778.0], [79.0, 9138.5], [78.0, 10764.0], [77.0, 9258.0], [76.0, 9709.5], [83.0, 10422.0], [81.0, 9641.5], [87.0, 9838.0], [86.0, 10932.0], [85.0, 8368.0], [84.0, 10738.0], [91.0, 10102.666666666666], [88.0, 8492.0], [95.0, 9256.0], [94.0, 8480.0], [93.0, 10013.0], [92.0, 8410.0], [99.0, 10113.0], [97.0, 10215.0], [96.0, 10467.0], [103.0, 8416.0], [102.0, 9107.0], [101.0, 11480.0], [100.0, 8605.0], [107.0, 8513.0], [106.0, 12746.0], [105.0, 9463.0], [104.0, 9703.0], [111.0, 10667.0], [110.0, 10525.0], [109.0, 10558.0], [108.0, 8378.0], [115.0, 9204.0], [114.0, 8357.0], [113.0, 8497.0], [112.0, 8350.0], [119.0, 8438.0], [118.0, 8315.0], [117.0, 10023.0], [116.0, 10583.0], [123.0, 8378.0], [122.0, 10760.0], [121.0, 10710.0], [120.0, 10048.0], [127.0, 10253.0], [126.0, 8257.0], [125.0, 8720.0], [124.0, 8772.0], [135.0, 83725.0], [134.0, 10253.666666666666], [131.0, 10556.0], [130.0, 9300.0], [128.0, 8332.0], [143.0, 8308.0], [142.0, 10167.0], [140.0, 11079.0], [139.0, 10123.0], [138.0, 10055.0], [137.0, 11015.0], [136.0, 9371.0], [151.0, 7858.0], [150.0, 10416.0], [149.0, 8856.0], [148.0, 8236.0], [147.0, 8670.0], [146.0, 8494.0], [145.0, 10642.0], [144.0, 8343.0], [157.0, 8980.0], [156.0, 8270.0], [155.0, 8303.0], [154.0, 10112.0], [152.0, 10147.0], [167.0, 9896.0], [166.0, 10406.0], [165.0, 10327.0], [164.0, 9105.5], [163.0, 8613.0], [162.0, 8609.0], [160.0, 8712.0], [174.0, 8077.0], [173.0, 10627.0], [172.0, 7647.0], [171.0, 8490.0], [170.0, 10612.0], [169.0, 8537.5], [183.0, 8485.0], [182.0, 10251.0], [181.0, 10884.0], [180.0, 8093.5], [178.0, 8820.0], [177.0, 10257.0], [176.0, 9738.0], [190.0, 10360.0], [189.0, 10307.0], [188.0, 7436.0], [187.0, 7674.0], [186.0, 10626.0], [185.0, 11356.0], [184.0, 7721.0], [199.0, 11328.0], [198.0, 7220.0], [197.0, 8419.0], [196.0, 10340.0], [195.0, 9031.5], [193.0, 10185.666666666666], [207.0, 8890.0], [206.0, 8938.0], [205.0, 7116.0], [204.0, 10517.0], [203.0, 13229.0], [202.0, 82553.0], [201.0, 8336.0], [200.0, 10136.0], [215.0, 8134.0], [213.0, 7257.0], [212.0, 8910.5], [210.0, 10548.0], [209.0, 10500.0], [208.0, 8316.0], [223.0, 10058.0], [221.0, 7523.0], [220.0, 10509.0], [219.0, 7792.0], [217.0, 7256.0], [216.0, 8419.0], [231.0, 8140.0], [230.0, 8415.5], [228.0, 10742.0], [227.0, 10630.0], [226.0, 9977.5], [224.0, 7917.0], [239.0, 10738.0], [238.0, 10302.0], [237.0, 7559.0], [236.0, 7347.0], [235.0, 10039.0], [234.0, 7028.0], [233.0, 7213.0], [232.0, 8275.0], [247.0, 10425.0], [246.0, 10889.0], [245.0, 8846.0], [243.0, 11184.0], [242.0, 8238.0], [241.0, 9508.0], [254.0, 6946.0], [253.0, 9446.0], [251.0, 8182.0], [250.0, 10544.0], [248.0, 6820.0], [270.0, 6893.0], [271.0, 8725.0], [269.0, 6671.0], [268.0, 6539.0], [267.0, 8285.0], [266.0, 8042.0], [265.0, 10206.0], [264.0, 10312.0], [263.0, 7004.0], [257.0, 7070.0], [256.0, 8164.5], [259.0, 9370.0], [258.0, 6955.0], [262.0, 8401.0], [261.0, 6882.0], [260.0, 6969.0], [286.0, 10491.0], [287.0, 9853.0], [285.0, 6559.0], [275.0, 8249.5], [273.0, 6998.0], [272.0, 10250.0], [283.0, 6922.0], [282.0, 8007.0], [281.0, 7241.0], [280.0, 8248.0], [279.0, 8628.0], [277.0, 8538.5], [300.0, 6782.666666666667], [302.0, 8923.0], [303.0, 10210.0], [301.0, 10518.0], [297.0, 7920.0], [296.0, 7328.0], [295.0, 10504.0], [289.0, 8690.0], [288.0, 9848.0], [294.0, 6250.0], [293.0, 6345.0], [292.0, 9491.666666666666], [318.0, 6265.0], [319.0, 7265.0], [317.0, 10564.0], [316.0, 7071.0], [315.0, 7523.0], [314.0, 10494.0], [313.0, 10542.0], [312.0, 9633.0], [311.0, 8073.0], [305.0, 7661.0], [304.0, 10575.0], [307.0, 6454.0], [306.0, 7678.0], [310.0, 6551.0], [309.0, 10496.0], [308.0, 6232.0], [333.0, 6843.0], [334.0, 6067.0], [332.0, 8367.0], [322.0, 6619.5], [320.0, 10518.0], [331.0, 7203.5], [330.0, 10576.0], [328.0, 6038.0], [327.0, 10606.0], [326.0, 9292.0], [325.0, 6484.0], [324.0, 8823.0], [350.0, 10541.0], [351.0, 10365.0], [349.0, 7110.0], [348.0, 8305.0], [347.0, 9224.0], [346.0, 6425.0], [345.0, 7997.0], [344.0, 10387.0], [343.0, 6430.0], [337.0, 6469.0], [336.0, 8434.5], [339.0, 8036.0], [338.0, 10146.0], [342.0, 10390.0], [341.0, 10309.0], [340.0, 6337.0], [366.0, 7133.0], [367.0, 6409.0], [365.0, 8323.0], [355.0, 6275.0], [354.0, 7110.0], [353.0, 6931.0], [352.0, 10360.0], [363.0, 7843.0], [361.0, 7994.0], [360.0, 8365.0], [359.0, 9101.0], [358.0, 6339.0], [357.0, 7032.0], [356.0, 7097.0], [382.0, 6096.0], [383.0, 6688.0], [381.0, 7110.0], [380.0, 7406.0], [379.0, 9209.0], [378.0, 8673.0], [377.0, 6329.0], [376.0, 6229.0], [375.0, 10644.0], [369.0, 10346.0], [368.0, 10411.0], [371.0, 8059.0], [370.0, 7527.0], [374.0, 10270.0], [373.0, 10540.0], [372.0, 7221.0], [387.0, 10398.0], [399.0, 7798.333333333333], [396.0, 9048.0], [395.0, 7169.0], [394.0, 9407.5], [392.0, 8026.0], [391.0, 10291.5], [389.0, 8777.0], [386.0, 6356.0], [385.0, 6384.0], [384.0, 9388.0], [414.0, 6157.0], [415.0, 5665.0], [413.0, 10445.0], [412.0, 8053.0], [411.0, 10623.0], [410.0, 6679.0], [409.0, 7898.0], [408.0, 6953.0], [407.0, 6738.0], [401.0, 7182.0], [400.0, 6360.0], [403.0, 6458.0], [402.0, 6284.0], [406.0, 8266.0], [404.0, 10202.0], [430.0, 5795.0], [431.0, 5995.0], [429.0, 7282.0], [428.0, 10379.0], [427.0, 6764.0], [426.0, 8890.0], [425.0, 6885.0], [424.0, 6824.0], [423.0, 7452.0], [416.0, 6915.0], [418.0, 5940.0], [417.0, 8263.0], [422.0, 10354.0], [421.0, 7283.666666666667], [445.0, 6620.0], [447.0, 5544.0], [444.0, 6767.0], [435.0, 6946.0], [434.0, 6555.0], [433.0, 6156.0], [432.0, 7782.0], [443.0, 5517.0], [442.0, 10996.0], [441.0, 5644.0], [440.0, 6492.0], [439.0, 5447.0], [438.0, 6207.0], [437.0, 9093.0], [436.0, 6056.0], [462.0, 5473.0], [463.0, 6205.0], [461.0, 7230.0], [460.0, 8532.0], [459.0, 4930.0], [458.0, 6397.0], [457.0, 9681.0], [456.0, 7366.5], [454.0, 5714.0], [449.0, 7076.0], [448.0, 5988.0], [451.0, 8732.0], [450.0, 7446.5], [453.0, 8624.0], [452.0, 8575.0], [476.0, 6375.666666666667], [478.0, 5367.0], [479.0, 6476.0], [477.0, 6332.0], [473.0, 9820.0], [472.0, 7327.0], [471.0, 8542.5], [465.0, 9712.0], [464.0, 10216.0], [467.0, 9635.0], [466.0, 10786.0], [470.0, 8738.0], [469.0, 9540.0], [494.0, 6131.0], [495.0, 5100.0], [493.0, 6260.0], [492.0, 6939.0], [491.0, 6314.0], [489.0, 13159.0], [488.0, 10477.0], [487.0, 10757.0], [480.0, 6672.0], [482.0, 7584.0], [481.0, 10755.0], [486.0, 5091.0], [485.0, 7427.0], [484.0, 7424.5], [510.0, 8349.0], [511.0, 6608.0], [509.0, 5242.0], [508.0, 7417.0], [507.0, 5521.0], [506.0, 5482.0], [505.0, 10709.0], [504.0, 7927.0], [502.0, 5240.0], [497.0, 5389.0], [496.0, 10733.0], [499.0, 7253.0], [498.0, 5238.0], [501.0, 4972.0], [500.0, 8416.0], [540.0, 10752.0], [536.0, 10775.0], [518.0, 10411.0], [516.0, 6261.0], [514.0, 6069.0], [512.0, 10241.0], [534.0, 4977.0], [532.0, 4728.0], [530.0, 6218.0], [528.0, 6093.0], [526.0, 8521.0], [524.0, 5924.5], [522.0, 10419.0], [520.0, 8783.0], [568.0, 7621.5], [572.0, 5756.0], [574.0, 10416.0], [570.0, 7177.0], [564.0, 7140.0], [562.0, 5112.0], [558.0, 6068.0], [546.0, 5241.0], [544.0, 5225.0], [550.0, 10324.0], [548.0, 8351.0], [556.0, 6067.0], [554.0, 6539.0], [552.0, 6592.0], [582.0, 6264.0], [606.0, 8632.666666666666], [600.0, 4971.0], [580.0, 11437.0], [578.0, 6290.0], [576.0, 8601.5], [598.0, 11185.0], [596.0, 5947.0], [592.0, 6847.5], [590.0, 5251.0], [588.0, 6685.0], [586.0, 4937.0], [584.0, 5912.0], [614.0, 10683.0], [638.0, 5016.0], [636.0, 11028.0], [612.0, 8414.0], [610.0, 10599.0], [608.0, 4715.0], [628.0, 8253.0], [626.0, 9561.0], [624.0, 5833.0], [622.0, 5164.0], [620.0, 4983.0], [618.0, 5289.0], [616.0, 6331.0], [668.0, 7481.0], [670.0, 6226.0], [666.0, 6892.0], [664.0, 6858.0], [662.0, 10304.0], [660.0, 8466.0], [658.0, 7991.0], [656.0, 11314.0], [654.0, 7273.0], [642.0, 5830.0], [640.0, 7580.5], [646.0, 6229.0], [644.0, 6230.0], [652.0, 10064.0], [648.0, 6084.0], [700.0, 5432.0], [702.0, 8376.0], [696.0, 4273.0], [694.0, 5652.0], [692.0, 6386.0], [690.0, 6803.0], [688.0, 5077.0], [680.0, 5739.0], [672.0, 6482.0], [676.0, 8948.0], [674.0, 4679.0], [678.0, 4835.0], [732.0, 6031.0], [734.0, 6656.0], [730.0, 6501.0], [728.0, 8230.333333333334], [724.0, 10996.0], [722.0, 7017.0], [720.0, 9405.0], [716.0, 9984.0], [710.0, 5623.0], [708.0, 7890.0], [704.0, 5710.0], [712.0, 7844.0], [762.0, 7490.0], [764.0, 6363.0], [760.0, 5356.5], [742.0, 4509.0], [740.0, 4215.0], [738.0, 6512.0], [758.0, 5343.0], [756.0, 4739.0], [754.0, 4418.0], [752.0, 4562.0], [748.0, 6168.0], [746.0, 5720.0], [774.0, 5561.0], [798.0, 6541.0], [796.0, 6496.0], [794.0, 5371.0], [790.0, 4399.0], [780.0, 8331.0], [776.0, 6367.0], [772.0, 10492.0], [770.0, 10622.0], [768.0, 5161.0], [828.0, 6333.0], [830.0, 4566.0], [826.0, 7566.0], [824.0, 10528.0], [822.0, 6169.5], [820.0, 8998.5], [818.0, 6644.0], [814.0, 6086.0], [802.0, 7297.5], [800.0, 6070.0], [806.0, 9776.0], [804.0, 5198.0], [810.0, 5219.0], [808.0, 4090.0], [858.0, 6077.0], [862.0, 10524.0], [856.0, 6300.5], [838.0, 5897.0], [836.0, 4085.0], [834.0, 4135.0], [832.0, 4850.0], [854.0, 10304.0], [850.0, 8817.0], [848.0, 9171.0], [846.0, 6537.0], [842.0, 10621.0], [840.0, 5792.5], [868.0, 4091.0], [892.0, 4547.0], [894.0, 5030.0], [890.0, 5366.0], [884.0, 4630.5], [882.0, 4275.0], [876.0, 4061.0], [874.0, 7790.0], [872.0, 6218.75], [866.0, 4542.0], [864.0, 9671.0], [924.0, 9152.0], [926.0, 5807.0], [922.0, 9314.0], [920.0, 6070.0], [918.0, 4905.0], [916.0, 4864.0], [912.0, 7593.0], [908.0, 9344.0], [902.0, 10505.5], [900.0, 7809.0], [898.0, 6666.0], [896.0, 5464.0], [904.0, 7992.5], [952.0, 7322.0], [956.0, 7531.0], [958.0, 8043.0], [954.0, 11259.0], [946.0, 7960.0], [944.0, 6958.0], [940.0, 6843.0], [934.0, 8673.5], [930.0, 6711.0], [938.0, 4904.0], [936.0, 10120.333333333334], [988.0, 6856.0], [990.0, 6543.0], [986.0, 3701.0], [984.0, 10991.0], [982.0, 5497.0], [980.0, 5530.0], [978.0, 8345.0], [976.0, 5495.0], [974.0, 5025.0], [962.0, 5928.0], [960.0, 11157.0], [966.0, 6977.0], [964.0, 7215.0], [972.0, 5985.0], [970.0, 6737.0], [968.0, 5247.0], [1020.0, 7562.0], [1022.0, 7456.0], [1018.0, 3533.0], [998.0, 5835.0], [996.0, 8626.0], [994.0, 3541.0], [992.0, 5457.0], [1014.0, 5517.0], [1012.0, 4434.0], [1010.0, 4863.0], [1008.0, 5350.0], [1004.0, 6366.0], [1002.0, 3735.0], [1000.0, 3599.0], [1036.0, 4849.0], [1080.0, 5301.0], [1084.0, 5588.0], [1072.0, 4140.0], [1032.0, 9616.0], [1028.0, 5470.0], [1024.0, 3756.5], [1068.0, 5420.0], [1064.0, 8507.0], [1052.0, 4433.5], [1048.0, 10741.0], [1044.0, 6724.5], [1040.0, 9728.0], [1144.0, 10640.0], [1148.0, 7432.0], [1120.0, 9483.0], [1124.0, 3681.0], [1140.0, 3387.0], [1136.0, 5641.0], [1100.0, 4194.0], [1096.0, 4399.0], [1092.0, 3073.0], [1088.0, 6767.0], [1116.0, 9477.0], [1112.0, 3080.0], [1108.0, 4050.0], [1104.0, 10377.0], [1132.0, 8494.0], [1128.0, 10829.0], [1200.0, 3424.0], [1184.0, 5032.0], [1208.0, 6102.0], [1204.0, 8437.0], [1152.0, 4048.0], [1156.0, 7999.0], [1160.0, 3388.0], [1164.0, 8508.5], [1180.0, 7323.0], [1176.0, 3616.0], [1168.0, 8242.5], [1196.0, 6288.0], [1192.0, 6411.0], [1268.0, 4067.5], [1272.0, 5171.5], [1248.0, 5715.0], [1276.0, 6020.0], [1264.0, 4238.0], [1216.0, 10342.0], [1220.0, 6288.0], [1228.0, 4193.0], [1224.0, 4281.0], [1240.0, 6194.0], [1232.0, 10587.0], [1260.0, 5804.0], [1332.0, 6494.0], [1328.0, 2893.0], [1340.0, 2595.0], [1280.0, 2909.0], [1284.0, 3921.0], [1288.0, 11086.0], [1292.0, 6268.0], [1304.0, 10911.0], [1296.0, 5012.0], [1324.0, 4741.5], [1396.0, 6699.0], [1392.0, 2716.0], [1404.0, 3541.0], [1376.0, 6084.0], [1400.0, 5395.0], [1344.0, 3073.0], [1352.0, 6749.0], [1372.0, 3587.0], [1368.0, 3582.0], [1364.0, 3487.0], [1360.0, 5799.0], [1384.0, 10719.0], [1380.0, 8060.0], [1460.0, 2351.0], [1464.0, 5207.5], [1448.0, 4101.0], [1440.0, 2313.0], [1444.0, 5500.0], [1420.0, 5393.5], [1416.0, 4146.0], [1412.0, 4815.0], [1408.0, 3967.0], [1436.0, 6911.0], [1432.0, 4044.0], [1428.0, 4827.0], [1452.0, 2598.0], [1528.0, 2118.0], [1532.0, 4477.0], [1504.0, 2954.0], [1508.0, 5313.0], [1524.0, 5074.0], [1476.0, 3260.0], [1480.0, 6708.0], [1484.0, 8493.5], [1500.0, 5544.0], [1496.0, 2426.0], [1488.0, 10511.0], [1516.0, 4379.0], [1512.0, 7181.0], [1584.0, 4354.0], [1596.0, 3273.0], [1568.0, 10661.0], [1592.0, 11132.0], [1564.0, 3608.5], [1540.0, 2261.0], [1544.0, 4332.0], [1548.0, 4499.0], [1560.0, 6485.0], [1556.0, 1931.0], [1552.0, 7228.0], [1580.0, 4964.5], [1576.0, 6322.0], [1656.0, 2704.0], [1660.0, 4255.0], [1632.0, 1698.0], [1636.0, 4042.0], [1628.0, 5888.0], [1600.0, 4318.0], [1604.0, 2852.0], [1608.0, 1837.0], [1624.0, 7847.0], [1620.0, 6021.0], [1644.0, 2180.0], [1640.0, 4334.0], [1716.0, 9959.0], [1704.0, 5142.0], [1696.0, 7061.0], [1700.0, 10244.0], [1676.0, 2263.0], [1672.0, 3880.0], [1668.0, 10379.0], [1664.0, 6231.0], [1692.0, 5232.5], [1688.0, 4030.0], [1684.0, 6323.0], [1680.0, 3975.0], [1708.0, 6166.0], [1736.0, 5255.0], [1768.0, 7223.5], [1788.0, 4553.0], [1740.0, 3143.0], [1732.0, 8315.0], [1728.0, 2795.0], [1772.0, 6873.0], [1760.0, 1647.0], [1756.0, 3998.0], [1752.0, 1852.0], [1748.0, 2960.0], [1744.0, 3775.0], [1844.0, 3428.0], [1852.0, 5262.0], [1828.0, 1696.0], [1832.0, 1697.0], [1840.0, 2904.5], [1800.0, 4720.0], [1796.0, 9816.5], [1792.0, 2321.0], [1820.0, 1802.0], [1816.0, 6188.0], [1812.0, 1806.0], [1808.0, 1725.0], [1836.0, 2627.0], [1908.0, 2076.5], [1916.0, 2531.0], [1888.0, 1523.0], [1896.0, 1674.0], [1912.0, 11220.0], [1904.0, 4069.5], [1868.0, 5225.0], [1864.0, 2812.0], [1860.0, 1810.0], [1856.0, 7880.0], [1884.0, 2901.0], [1880.0, 1944.0], [1876.0, 2965.0], [1872.0, 2270.5], [1976.0, 7535.0], [1952.0, 1570.0], [1956.0, 2090.0], [1960.0, 5344.0], [1980.0, 1856.0], [1972.0, 10060.0], [1968.0, 2608.0], [1920.0, 2486.0], [1924.0, 7666.0], [1928.0, 1399.0], [1932.0, 4699.5], [1948.0, 5689.0], [1944.0, 1591.5], [1940.0, 1100.0], [1936.0, 4177.0], [1964.0, 1098.0], [2032.0, 1359.0], [2040.0, 2623.0], [2016.0, 3732.5], [2020.0, 1117.0], [2024.0, 3486.0], [2028.0, 3640.0], [1984.0, 1444.0], [1988.0, 1110.0], [1992.0, 1104.0], [1996.0, 1210.0], [2012.0, 4343.0], [2004.0, 3352.0], [2160.0, 1231.0], [2168.0, 6948.0], [2112.0, 3386.0], [2120.0, 2073.0], [2128.0, 2271.0], [2136.0, 7868.0], [2152.0, 3174.0], [2144.0, 1108.0], [2072.0, 4834.0], [2064.0, 1099.5], [2056.0, 2556.0], [2104.0, 1127.0], [2096.0, 1398.0], [2288.0, 1092.0], [2240.0, 2730.0], [2248.0, 1105.0], [2256.0, 1305.0], [2264.0, 1147.0], [2280.0, 1215.0], [2176.0, 5985.0], [2200.0, 2115.0], [2232.0, 3678.0], [2216.0, 1987.5], [2208.0, 2376.0], [2424.0, 5074.0], [2368.0, 1103.0], [2384.0, 10561.0], [2392.0, 7222.0], [2408.0, 3748.0], [2304.0, 2298.5], [2312.0, 6061.0], [2320.0, 2154.0], [2328.0, 1098.0], [2360.0, 2439.0], [2344.0, 6857.0], [2336.0, 1734.0], [2552.0, 3904.0], [2512.0, 1618.0], [2496.0, 1188.0], [2504.0, 1484.0], [2520.0, 7034.0], [2544.0, 1143.0], [2536.0, 1106.0], [2528.0, 6079.0], [2456.0, 1655.3333333333333], [2440.0, 7540.0], [2432.0, 1109.0], [2480.0, 1166.0], [2464.0, 1100.0], [2656.0, 3624.0], [2624.0, 2827.3333333333335], [2640.0, 5375.0], [2664.0, 1799.0], [2576.0, 1708.0], [2568.0, 1813.0], [2616.0, 2878.0], [2608.0, 3597.5], [2600.0, 4755.333333333333], [2592.0, 5103.0], [2800.0, 1659.0], [2760.0, 1100.0], [2776.0, 1094.0], [2808.0, 3666.0], [2792.0, 8397.0], [2784.0, 3264.5], [2712.0, 2860.0], [2696.0, 2633.0], [2688.0, 1669.0], [2736.0, 5722.0], [2728.0, 5178.0], [2928.0, 1338.0], [2880.0, 1098.0], [2888.0, 1496.0], [2896.0, 573.5], [2904.0, 6229.0], [2936.0, 1860.0], [2920.0, 2201.0], [2912.0, 5480.0], [2816.0, 3051.0], [2832.0, 1114.0], [2840.0, 1271.0], [2872.0, 2672.7999999999997], [2864.0, 3428.0], [2856.0, 2499.0], [2848.0, 4360.5], [2944.0, 2235.5], [2952.0, 1670.3], [3000.0, 2436.6390282493726], [2968.0, 1695.8], [2992.0, 1922.4999999999998], [2984.0, 2149.25], [2976.0, 2888.2499999999995], [2169.0, 1109.0], [2113.0, 1297.0], [2121.0, 3093.0], [2129.0, 4480.0], [2137.0, 1267.0], [2161.0, 2336.0], [2153.0, 6628.0], [2145.0, 4632.0], [2073.0, 3247.0], [2057.0, 4417.0], [2049.0, 3809.0], [2105.0, 4606.0], [2097.0, 7389.0], [2081.0, 2443.5], [2289.0, 1718.0], [2241.0, 1720.0], [2249.0, 1137.0], [2257.0, 1976.0], [2297.0, 9007.0], [2281.0, 5353.0], [2273.0, 1682.0], [2201.0, 1153.0], [2193.0, 5001.5], [2233.0, 5464.0], [2225.0, 4149.666666666667], [2217.0, 6717.0], [2209.0, 1875.0], [2417.0, 4434.666666666667], [2377.0, 3290.333333333333], [2369.0, 4564.0], [2385.0, 1263.0], [2409.0, 4007.0], [2401.0, 4434.333333333333], [2329.0, 1177.0], [2321.0, 1118.0], [2305.0, 6019.0], [2361.0, 1172.0], [2353.0, 5824.0], [2345.0, 1261.0], [2337.0, 1103.0], [2457.0, 5773.0], [2529.0, 2799.0], [2553.0, 1827.0], [2497.0, 2159.0], [2505.0, 1277.0], [2521.0, 10323.0], [2449.0, 2306.5], [2489.0, 3177.0], [2481.0, 8340.0], [2465.0, 1944.0], [2681.0, 1310.5], [2633.0, 1912.5], [2641.0, 1384.0], [2649.0, 1571.0], [2673.0, 2874.0], [2657.0, 1103.0], [2585.0, 2855.6666666666665], [2577.0, 9281.0], [2569.0, 1634.0], [2617.0, 1111.0], [2601.0, 1109.0], [2593.0, 3052.0], [2793.0, 1627.0], [2753.0, 3113.0], [2761.0, 1461.0], [2769.0, 3971.0], [2777.0, 8212.0], [2801.0, 6062.0], [2785.0, 10284.0], [2713.0, 1099.0], [2697.0, 3989.0], [2689.0, 10427.0], [2745.0, 4020.5], [2737.0, 6066.0], [2721.0, 6108.0], [2921.0, 2032.25], [2929.0, 3235.0], [2881.0, 2902.3333333333335], [2889.0, 1399.5], [2897.0, 2967.0], [2905.0, 4174.0], [2913.0, 2690.2], [2817.0, 2647.0], [2825.0, 1453.5], [2833.0, 1102.0], [2841.0, 4316.333333333334], [2873.0, 39.0], [2865.0, 3639.0], [2849.0, 6515.0], [2993.0, 6314.25], [2945.0, 6267.0], [2953.0, 4581.833333333333], [2961.0, 2570.3333333333335], [2977.0, 2924.3], [1085.0, 5560.0], [1081.0, 3349.0], [1033.0, 3036.0], [1029.0, 3498.0], [1025.0, 4611.0], [1069.0, 4103.0], [1065.0, 10464.0], [1061.0, 7453.5], [1057.0, 5606.5], [1053.0, 5031.0], [1049.0, 5638.0], [1045.0, 9024.0], [1041.0, 3484.0], [1145.0, 6198.0], [1149.0, 6266.0], [1121.0, 6343.0], [1125.0, 3287.0], [1129.0, 4189.0], [1141.0, 7181.0], [1137.0, 4044.0], [1101.0, 4013.0], [1097.0, 7324.0], [1089.0, 5167.0], [1117.0, 6236.0], [1113.0, 6745.0], [1109.0, 6789.0], [1105.0, 4022.0], [1133.0, 3247.0], [1205.0, 10075.0], [1213.0, 4567.0], [1189.0, 4254.5], [1193.0, 6651.0], [1209.0, 8551.0], [1201.0, 3022.0], [1165.0, 8519.0], [1161.0, 4146.0], [1157.0, 5925.0], [1153.0, 4288.0], [1173.0, 3871.0], [1169.0, 3349.0], [1197.0, 6219.0], [1269.0, 6115.0], [1277.0, 10744.0], [1257.0, 5496.333333333333], [1249.0, 5988.0], [1217.0, 5192.0], [1225.0, 8934.0], [1229.0, 2852.0], [1245.0, 3060.5], [1241.0, 7331.0], [1237.0, 5095.5], [1233.0, 2903.0], [1261.0, 4518.0], [1253.0, 5461.5], [1329.0, 7279.0], [1337.0, 5487.5], [1313.0, 6230.5], [1317.0, 7524.0], [1341.0, 2933.0], [1333.0, 3036.0], [1281.0, 8077.0], [1285.0, 7191.0], [1293.0, 4885.0], [1309.0, 6367.333333333333], [1305.0, 5166.0], [1301.0, 10242.0], [1297.0, 5103.0], [1321.0, 2637.0], [1397.0, 3808.0], [1377.0, 5668.0], [1381.0, 5739.0], [1401.0, 6995.0], [1393.0, 3701.0], [1357.0, 6259.5], [1353.0, 3152.0], [1349.0, 5353.5], [1345.0, 5894.0], [1373.0, 3502.0], [1369.0, 3777.0], [1365.0, 2463.0], [1361.0, 6137.0], [1389.0, 10096.0], [1461.0, 8346.0], [1457.0, 6880.5], [1441.0, 2191.0], [1445.0, 4334.0], [1465.0, 4183.0], [1409.0, 3888.0], [1417.0, 4163.0], [1421.0, 8533.0], [1437.0, 4127.0], [1433.0, 3386.0], [1429.0, 3701.0], [1425.0, 4318.0], [1453.0, 2445.0], [1449.0, 9742.0], [1521.0, 4456.0], [1513.0, 4971.0], [1529.0, 5490.0], [1525.0, 7384.0], [1485.0, 5419.0], [1481.0, 7279.0], [1477.0, 7516.0], [1501.0, 2947.0], [1497.0, 4230.0], [1493.0, 3422.5], [1517.0, 10962.0], [1593.0, 6119.0], [1569.0, 9612.0], [1573.0, 5132.0], [1577.0, 6090.0], [1597.0, 2057.0], [1589.0, 4164.0], [1585.0, 2261.0], [1537.0, 9168.5], [1541.0, 6668.0], [1545.0, 6388.0], [1549.0, 1508.0], [1565.0, 2381.0], [1561.0, 8297.0], [1557.0, 9461.0], [1581.0, 4475.0], [1649.0, 8246.0], [1657.0, 5279.0], [1637.0, 4736.0], [1661.0, 2834.0], [1653.0, 6381.0], [1601.0, 1776.0], [1605.0, 5293.0], [1609.0, 5458.0], [1613.0, 2418.0], [1625.0, 2707.0], [1621.0, 4055.0], [1617.0, 4098.5], [1641.0, 5731.5], [1721.0, 2750.5], [1697.0, 11563.0], [1701.0, 1827.0], [1705.0, 3284.0], [1725.0, 3310.5], [1717.0, 6227.0], [1713.0, 6117.5], [1665.0, 3149.0], [1669.0, 4904.0], [1673.0, 1671.0], [1677.0, 5830.0], [1693.0, 9607.0], [1689.0, 4761.0], [1685.0, 2617.0], [1681.0, 6086.5], [1781.0, 5100.75], [1789.0, 6318.0], [1761.0, 4030.0], [1765.0, 3692.5], [1785.0, 6147.5], [1777.0, 3244.3333333333335], [1741.0, 2959.0], [1737.0, 4037.0], [1733.0, 3091.0], [1757.0, 6195.0], [1753.0, 5135.0], [1749.0, 5198.0], [1773.0, 6336.5], [1769.0, 2996.0], [1845.0, 2929.0], [1853.0, 1766.0], [1825.0, 3502.0], [1849.0, 4440.0], [1805.0, 1964.5], [1801.0, 3041.0], [1797.0, 1545.0], [1793.0, 6093.0], [1821.0, 6197.0], [1817.0, 6122.0], [1809.0, 6522.0], [1833.0, 4076.0], [1829.0, 10564.0], [1909.0, 4104.5], [1917.0, 5269.0], [1889.0, 7031.0], [1893.0, 1964.0], [1897.0, 1108.0], [1913.0, 1489.0], [1905.0, 1099.0], [1869.0, 1803.0], [1865.0, 1676.0], [1861.0, 2202.0], [1857.0, 4951.0], [1885.0, 5927.0], [1877.0, 1790.0], [1873.0, 1640.0], [1901.0, 1274.0], [1977.0, 1404.0], [1953.0, 3547.0], [1957.0, 2212.0], [1961.0, 1591.0], [1981.0, 6815.0], [1973.0, 2768.0], [1969.0, 1413.0], [1921.0, 6714.0], [1925.0, 4750.0], [1929.0, 6759.0], [1949.0, 1098.0], [1945.0, 4558.0], [1941.0, 1475.0], [1937.0, 3688.0], [1965.0, 1360.0], [2037.0, 6409.0], [2045.0, 1249.5], [2017.0, 9413.0], [2021.0, 3660.0], [2013.0, 1372.0], [1985.0, 1096.0], [1989.0, 1489.0], [1993.0, 5431.0], [1997.0, 1448.0], [2005.0, 2578.0], [2170.0, 5574.0], [2114.0, 1095.0], [2122.0, 1115.0], [2130.0, 2441.0], [2138.0, 1648.0], [2162.0, 1100.0], [2154.0, 1548.0], [2146.0, 6316.0], [2074.0, 8141.0], [2066.0, 1680.0], [2106.0, 1124.0], [2098.0, 5425.0], [2090.0, 2288.0], [2282.0, 1347.0], [2242.0, 1096.0], [2258.0, 6008.0], [2266.0, 1218.0], [2298.0, 5181.0], [2274.0, 1953.0], [2178.0, 4059.5], [2186.0, 4636.0], [2202.0, 2422.0], [2234.0, 1106.0], [2226.0, 1099.0], [2218.0, 7229.0], [2210.0, 1107.0], [2410.0, 1129.0], [2370.0, 1748.0], [2394.0, 2038.0], [2426.0, 1718.5], [2306.0, 2033.0], [2314.0, 4223.0], [2322.0, 1910.0], [2346.0, 3107.0], [2338.0, 1099.0], [2546.0, 1737.5], [2506.0, 1103.0], [2514.0, 5943.5], [2522.0, 1689.0], [2530.0, 4450.0], [2458.0, 1618.0], [2450.0, 1098.0], [2442.0, 2874.0], [2434.0, 3560.0], [2490.0, 7144.0], [2474.0, 3180.3333333333335], [2674.0, 2544.0], [2658.0, 6034.0], [2626.0, 1177.0], [2642.0, 1852.0], [2682.0, 5162.0], [2666.0, 1465.0], [2586.0, 1166.0], [2578.0, 1937.0], [2570.0, 3085.0], [2562.0, 1106.0], [2618.0, 5297.0], [2610.0, 5806.0], [2602.0, 3020.0], [2594.0, 1717.0], [2810.0, 1343.5], [2754.0, 6928.0], [2762.0, 1104.0], [2778.0, 1998.0], [2802.0, 1916.0], [2794.0, 3018.0], [2786.0, 10147.0], [2714.0, 3919.0], [2698.0, 5852.0], [2690.0, 1337.0], [2746.0, 6904.0], [2738.0, 2666.0], [2730.0, 1342.0], [2722.0, 10393.0], [2930.0, 1417.0], [2938.0, 2670.521739130435], [2882.0, 1599.0], [2890.0, 911.3333333333333], [2898.0, 1379.0], [2906.0, 1532.0], [2922.0, 1347.5], [2914.0, 1102.0], [2826.0, 1281.0], [2834.0, 457.0], [2842.0, 1373.5], [2874.0, 1096.0], [2866.0, 41.0], [2858.0, 4285.5], [2850.0, 2044.5000000000002], [2954.0, 1383.0], [2946.0, 2243.3333333333335], [2962.0, 3346.4285714285716], [2970.0, 2729.4444444444443], [2994.0, 437.0], [2986.0, 2738.0], [2978.0, 1568.4], [2163.0, 1231.0], [2155.0, 1101.0], [2115.0, 1110.0], [2123.0, 5263.0], [2131.0, 1847.0], [2171.0, 1109.0], [2147.0, 1104.0], [2075.0, 1098.0], [2067.0, 1100.0], [2059.0, 1097.0], [2051.0, 2072.5], [2107.0, 5620.0], [2099.0, 1262.0], [2091.0, 1304.0], [2083.0, 1383.5], [2299.0, 1094.0], [2251.0, 1126.5], [2243.0, 4613.0], [2259.0, 1113.0], [2291.0, 1682.5], [2203.0, 1194.0], [2195.0, 1100.0], [2235.0, 1095.0], [2227.0, 1097.0], [2219.0, 5349.0], [2211.0, 2843.0], [2427.0, 1157.0], [2371.0, 2835.0], [2379.0, 1294.0], [2395.0, 2103.0], [2419.0, 2793.0], [2403.0, 5880.5], [2331.0, 1094.0], [2315.0, 3781.0], [2307.0, 1089.0], [2355.0, 5806.5], [2347.0, 4356.0], [2339.0, 2109.0], [2539.0, 2634.0], [2499.0, 1205.0], [2507.0, 11100.0], [2555.0, 3969.0], [2531.0, 1132.0], [2459.0, 2313.0], [2451.0, 2819.0], [2443.0, 1659.0], [2435.0, 2048.0], [2491.0, 2445.0], [2483.0, 5155.0], [2467.0, 3678.0], [2683.0, 1152.0], [2627.0, 4978.5], [2635.0, 1462.3333333333333], [2643.0, 2705.0], [2651.0, 5263.5], [2675.0, 1105.0], [2667.0, 1092.0], [2659.0, 1324.0], [2579.0, 1336.0], [2571.0, 5913.0], [2563.0, 4583.5], [2619.0, 3588.0], [2611.0, 1105.0], [2603.0, 1107.0], [2595.0, 10616.0], [2795.0, 1098.0], [2755.0, 1692.0], [2763.0, 1933.0], [2811.0, 7005.0], [2787.0, 11185.0], [2715.0, 7004.0], [2707.0, 3075.25], [2699.0, 1101.0], [2691.0, 8105.0], [2747.0, 8041.0], [2731.0, 4157.0], [2931.0, 1713.5], [2883.0, 40.0], [2907.0, 1394.0], [2939.0, 1380.0], [2915.0, 2005.6666666666667], [2827.0, 1394.0], [2835.0, 1286.0], [2843.0, 1514.0], [2875.0, 1410.0], [2867.0, 5136.666666666667], [2859.0, 1604.0], [2955.0, 2217.5], [2947.0, 1841.8], [2963.0, 5132.0], [2971.0, 2092.2], [2995.0, 1099.0], [2987.0, 3862.5], [2979.0, 2665.6], [541.0, 7342.0], [543.0, 9504.5], [539.0, 6091.5], [537.0, 4886.0], [535.0, 7553.0], [533.0, 10382.0], [531.0, 10650.0], [529.0, 5705.0], [527.0, 6691.0], [513.0, 6641.0], [519.0, 9343.0], [515.0, 10351.0], [525.0, 7430.0], [521.0, 5715.0], [571.0, 10287.0], [573.0, 4945.0], [569.0, 7626.0], [551.0, 5352.0], [549.0, 8194.0], [547.0, 10301.0], [545.0, 6091.0], [567.0, 5055.0], [563.0, 8419.0], [561.0, 7459.0], [557.0, 5473.0], [555.0, 5124.0], [553.0, 10634.0], [603.0, 6878.5], [607.0, 10641.0], [601.0, 6057.0], [583.0, 7467.0], [581.0, 10259.0], [579.0, 7241.0], [577.0, 5012.0], [599.0, 10389.0], [597.0, 6096.0], [595.0, 5044.0], [593.0, 6519.0], [589.0, 6144.0], [587.0, 4933.0], [585.0, 10414.0], [635.0, 6990.0], [637.0, 6993.0], [633.0, 4903.0], [615.0, 9226.0], [613.0, 6865.0], [609.0, 8083.0], [631.0, 5839.5], [629.0, 9950.0], [625.0, 6173.0], [623.0, 5239.0], [621.0, 4953.0], [619.0, 5782.0], [617.0, 6239.0], [669.0, 4810.0], [671.0, 6538.0], [667.0, 4719.0], [647.0, 8295.0], [645.0, 8225.0], [643.0, 7119.0], [641.0, 7316.0], [663.0, 5882.0], [661.0, 6956.0], [659.0, 6350.0], [657.0, 5010.0], [655.0, 4977.0], [653.0, 10165.0], [651.0, 8708.5], [649.0, 6586.0], [701.0, 5584.0], [703.0, 4532.0], [699.0, 4717.5], [697.0, 8492.0], [695.0, 4711.0], [693.0, 5989.0], [691.0, 5643.0], [687.0, 5476.666666666667], [679.0, 4954.0], [677.0, 5674.0], [675.0, 4985.0], [673.0, 5715.0], [685.0, 7402.75], [711.0, 5308.0], [733.0, 5463.0], [735.0, 5233.0], [729.0, 5302.0], [725.0, 5271.0], [723.0, 15223.0], [719.0, 6433.0], [715.0, 6522.5], [713.0, 5240.0], [709.0, 4271.0], [707.0, 7626.0], [705.0, 8469.0], [765.0, 7747.0], [767.0, 4685.5], [763.0, 6406.0], [743.0, 10363.0], [741.0, 10005.0], [739.0, 7958.0], [737.0, 6392.0], [757.0, 6327.0], [755.0, 6157.0], [753.0, 6242.0], [751.0, 5903.0], [747.0, 10492.0], [745.0, 5372.0], [797.0, 7707.0], [793.0, 8444.0], [775.0, 5893.0], [773.0, 6773.0], [771.0, 5501.0], [769.0, 5291.0], [791.0, 5250.0], [789.0, 5206.0], [787.0, 9498.0], [785.0, 8880.5], [783.0, 8336.5], [781.0, 6054.0], [779.0, 6564.0], [777.0, 7973.0], [807.0, 5560.0], [827.0, 8040.0], [831.0, 10528.0], [825.0, 10174.0], [805.0, 4265.0], [801.0, 4347.0], [823.0, 5243.0], [817.0, 8710.0], [815.0, 10043.0], [813.0, 8199.5], [811.0, 4251.0], [809.0, 7223.0], [837.0, 4004.0], [859.0, 6952.0], [861.0, 5001.5], [857.0, 5197.0], [835.0, 5112.0], [833.0, 5208.0], [853.0, 4751.0], [851.0, 6303.0], [847.0, 4249.0], [845.0, 6868.0], [843.0, 4289.0], [841.0, 6445.0], [891.0, 6270.0], [893.0, 11181.0], [889.0, 6247.0], [887.0, 6540.666666666667], [881.0, 5767.0], [879.0, 6851.0], [875.0, 4288.0], [873.0, 5963.0], [869.0, 11318.0], [865.0, 6336.0], [925.0, 7171.0], [927.0, 5023.0], [923.0, 10818.0], [921.0, 5899.0], [919.0, 5384.0], [917.0, 5820.0], [915.0, 6031.5], [913.0, 5174.0], [911.0, 7893.5], [897.0, 6553.0], [909.0, 6817.0], [907.0, 5976.5], [957.0, 6042.0], [959.0, 6725.0], [955.0, 5205.0], [953.0, 6283.0], [951.0, 6880.0], [949.0, 5894.5], [947.0, 6151.0], [945.0, 7957.0], [943.0, 5029.5], [931.0, 6202.0], [929.0, 5853.5], [941.0, 5552.0], [939.0, 7329.0], [989.0, 5642.0], [991.0, 3706.0], [987.0, 5158.0], [985.0, 5485.5], [983.0, 5766.0], [979.0, 5334.0], [977.0, 3649.0], [975.0, 5380.0], [963.0, 6381.0], [961.0, 6047.0], [967.0, 4010.0], [965.0, 6078.0], [973.0, 3512.0], [971.0, 4211.0], [969.0, 6664.0], [1019.0, 6406.0], [1021.0, 4948.0], [1017.0, 11530.0], [999.0, 3498.0], [997.0, 6247.0], [995.0, 6359.0], [993.0, 5747.0], [1015.0, 3473.0], [1013.0, 7814.0], [1011.0, 6403.0], [1007.0, 6054.0], [1005.0, 4511.0], [1003.0, 5516.0], [1001.0, 6432.0], [1082.0, 4347.0], [1086.0, 4984.0], [1078.0, 6411.0], [1074.0, 4648.0], [1070.0, 4660.0], [1062.0, 4072.0], [1058.0, 6581.0], [1050.0, 2955.0], [1038.0, 8697.5], [1034.0, 7092.0], [1030.0, 5323.0], [1026.0, 6271.0], [1042.0, 3402.0], [1142.0, 2549.0], [1150.0, 4038.0], [1126.0, 9909.0], [1146.0, 4849.0], [1102.0, 10499.0], [1098.0, 5395.0], [1094.0, 4389.5], [1090.0, 7388.0], [1118.0, 3975.0], [1110.0, 6148.0], [1106.0, 5699.0], [1206.0, 7438.0], [1210.0, 5670.0], [1214.0, 4120.0], [1190.0, 5990.0], [1182.0, 4034.0], [1158.0, 5287.0], [1162.0, 3102.0], [1166.0, 5450.0], [1178.0, 8703.0], [1174.0, 2976.0], [1170.0, 6063.0], [1198.0, 3859.0], [1194.0, 10814.0], [1274.0, 11067.0], [1278.0, 5874.0], [1250.0, 5218.0], [1258.0, 6024.0], [1254.0, 5257.0], [1270.0, 2863.0], [1266.0, 8127.0], [1246.0, 10348.0], [1218.0, 5005.0], [1222.0, 8429.0], [1238.0, 3385.0], [1262.0, 6321.0], [1290.0, 6406.5], [1342.0, 10539.0], [1338.0, 2946.0], [1330.0, 7412.0], [1310.0, 6869.0], [1282.0, 2847.0], [1286.0, 7607.0], [1294.0, 4411.0], [1306.0, 4605.0], [1302.0, 5950.0], [1298.0, 5047.0], [1326.0, 5858.5], [1322.0, 5049.5], [1358.0, 2839.0], [1406.0, 6898.5], [1378.0, 3540.0], [1394.0, 4653.0], [1374.0, 4758.0], [1346.0, 3804.0], [1350.0, 8075.0], [1354.0, 11287.0], [1370.0, 6178.0], [1366.0, 6050.0], [1362.0, 2831.0], [1390.0, 3013.0], [1382.0, 5468.0], [1462.0, 4780.0], [1470.0, 8045.666666666667], [1442.0, 7216.0], [1446.0, 4167.0], [1458.0, 8579.0], [1422.0, 10581.0], [1418.0, 3061.0], [1414.0, 5257.5], [1410.0, 5580.0], [1438.0, 3407.0], [1434.0, 6295.0], [1430.0, 2517.0], [1426.0, 5569.0], [1454.0, 3008.0], [1450.0, 7078.0], [1522.0, 2061.0], [1534.0, 6637.5], [1506.0, 7016.5], [1510.0, 4173.5], [1530.0, 2063.0], [1502.0, 5773.0], [1474.0, 5267.333333333333], [1478.0, 5474.0], [1482.0, 10516.0], [1486.0, 5644.0], [1498.0, 4387.0], [1494.0, 3398.0], [1490.0, 5055.0], [1518.0, 5567.0], [1514.0, 2006.0], [1590.0, 5660.5], [1594.0, 2189.0], [1574.0, 5238.0], [1570.0, 6100.0], [1586.0, 11183.0], [1538.0, 3416.0], [1542.0, 6216.0], [1546.0, 2195.0], [1550.0, 9594.0], [1562.0, 3463.0], [1558.0, 6163.0], [1554.0, 2154.5], [1582.0, 2521.0], [1578.0, 4098.0], [1654.0, 10545.0], [1650.0, 2065.0], [1662.0, 7142.0], [1634.0, 1803.0], [1658.0, 6048.0], [1602.0, 6676.0], [1606.0, 8036.0], [1614.0, 1968.0], [1626.0, 2889.0], [1622.0, 2196.0], [1618.0, 6357.0], [1646.0, 3131.0], [1638.0, 2022.0], [1718.0, 3182.0], [1722.0, 1514.0], [1726.0, 1776.0], [1698.0, 5210.0], [1702.0, 1825.0], [1714.0, 7254.0], [1678.0, 5999.0], [1674.0, 6288.0], [1670.0, 4013.0], [1666.0, 5558.0], [1686.0, 1854.0], [1682.0, 5190.0], [1710.0, 2396.0], [1706.0, 3241.0], [1742.0, 4960.0], [1786.0, 2976.0], [1738.0, 7718.0], [1734.0, 5405.0], [1730.0, 6518.5], [1774.0, 10464.0], [1770.0, 4100.0], [1766.0, 3220.0], [1758.0, 1968.0], [1754.0, 1960.0], [1750.0, 1507.0], [1746.0, 5560.0], [1846.0, 7252.0], [1842.0, 7028.5], [1854.0, 1998.0], [1826.0, 1769.0], [1830.0, 5174.0], [1834.0, 1532.0], [1850.0, 7211.0], [1806.0, 4032.0], [1802.0, 1762.0], [1794.0, 7142.0], [1822.0, 4850.0], [1818.0, 11002.0], [1814.0, 3517.0], [1838.0, 6384.0], [1914.0, 1563.0], [1918.0, 6269.0], [1890.0, 1174.0], [1894.0, 3002.0], [1910.0, 8061.0], [1870.0, 7897.0], [1862.0, 1712.0], [1858.0, 6852.0], [1882.0, 4626.0], [1878.0, 2795.0], [1874.0, 6654.0], [1902.0, 1628.0], [1898.0, 1909.0], [1978.0, 4634.0], [1982.0, 6520.0], [1954.0, 1352.0], [1958.0, 1698.0], [1974.0, 10274.0], [1970.0, 5574.0], [1950.0, 5684.0], [1922.0, 2545.0], [1926.0, 4846.0], [1930.0, 1386.0], [1934.0, 2100.0], [1946.0, 3669.0], [1942.0, 4757.0], [1938.0, 1551.0], [1962.0, 1352.0], [2034.0, 1926.5], [2038.0, 3353.0], [2022.0, 1106.0], [2018.0, 1563.0], [2026.0, 3225.5], [2030.0, 2216.5], [2014.0, 1477.0], [1986.0, 1378.0], [1990.0, 1095.0], [1994.0, 5665.0], [1998.0, 1421.0], [2010.0, 3993.333333333333], [2006.0, 5399.0], [2002.0, 3096.0], [2164.0, 6329.0], [2116.0, 3092.0], [2124.0, 1126.0], [2132.0, 1093.0], [2140.0, 4838.5], [2156.0, 2012.0], [2148.0, 1215.0], [2068.0, 7879.0], [2060.0, 2887.0], [2100.0, 1098.0], [2092.0, 1097.0], [2084.0, 1100.0], [2292.0, 1215.0], [2300.0, 1098.0], [2252.0, 5393.0], [2244.0, 1304.0], [2260.0, 1354.0], [2268.0, 1218.0], [2284.0, 1369.0], [2276.0, 2809.0], [2236.0, 2114.0], [2188.0, 1299.5], [2196.0, 2263.0], [2204.0, 1160.0], [2212.0, 1414.0], [2412.0, 1840.0], [2428.0, 1092.0], [2372.0, 1713.0], [2388.0, 1588.3333333333333], [2396.0, 1855.0], [2420.0, 3276.0], [2308.0, 7035.0], [2324.0, 1197.5], [2332.0, 1579.0], [2364.0, 4520.666666666667], [2356.0, 9386.0], [2348.0, 2146.0], [2532.0, 1134.0], [2548.0, 1231.0], [2556.0, 4827.0], [2500.0, 2677.0], [2516.0, 5515.5], [2524.0, 2104.5], [2460.0, 1100.0], [2452.0, 7622.0], [2444.0, 1256.0], [2492.0, 1810.0], [2484.0, 9341.0], [2476.0, 1244.0], [2668.0, 3935.0], [2588.0, 2044.0], [2684.0, 1096.0], [2628.0, 8452.0], [2636.0, 1626.0], [2676.0, 11333.0], [2580.0, 5016.0], [2572.0, 1685.0], [2620.0, 1097.0], [2604.0, 7675.0], [2596.0, 3222.0], [2804.0, 2229.0], [2796.0, 4954.0], [2812.0, 1615.0], [2756.0, 1150.0], [2764.0, 2673.0], [2772.0, 7083.0], [2780.0, 4660.5], [2788.0, 5303.0], [2716.0, 1739.0], [2708.0, 7136.0], [2700.0, 1593.0], [2748.0, 4136.0], [2740.0, 1652.0], [2732.0, 1921.0], [2724.0, 1753.5], [2940.0, 2522.5714285714284], [2932.0, 2579.0], [2884.0, 8820.0], [2892.0, 6019.0], [2900.0, 3004.25], [2908.0, 41.0], [2924.0, 2363.1666666666665], [2916.0, 2788.0], [2820.0, 1396.3333333333333], [2828.0, 1437.0], [2836.0, 1218.0], [2844.0, 9272.0], [2876.0, 1531.5], [2868.0, 2659.0], [2860.0, 5767.0], [2852.0, 1800.6666666666667], [2948.0, 2134.3636363636365], [2956.0, 2359.125], [2964.0, 2142.5], [2972.0, 5802.0], [2996.0, 1220.0], [2980.0, 2007.0], [2149.0, 4401.0], [2165.0, 1105.0], [2125.0, 1245.0], [2173.0, 5399.0], [2133.0, 10859.0], [2141.0, 9746.0], [2077.0, 1200.0], [2069.0, 2276.0], [2061.0, 1099.0], [2053.0, 5955.5], [2109.0, 3011.0], [2101.0, 5537.0], [2085.0, 1113.0], [2293.0, 1175.0], [2301.0, 1991.0], [2245.0, 4403.0], [2253.0, 1117.0], [2269.0, 3635.3333333333335], [2205.0, 1291.0], [2189.0, 6165.0], [2181.0, 3153.0], [2237.0, 7408.0], [2229.0, 2864.5], [2213.0, 5430.0], [2421.0, 3966.0], [2405.0, 1373.0], [2389.0, 1183.0], [2397.0, 5052.0], [2429.0, 2082.0], [2333.0, 8258.0], [2317.0, 1511.5], [2309.0, 4347.0], [2365.0, 1102.0], [2349.0, 1098.0], [2341.0, 5282.5], [2549.0, 4527.5], [2501.0, 2965.0], [2509.0, 6644.0], [2557.0, 5356.0], [2453.0, 2185.0], [2445.0, 2372.0], [2437.0, 1943.5], [2493.0, 1098.0], [2485.0, 2808.0], [2469.0, 2058.0], [2661.0, 3615.0], [2653.0, 1610.5], [2685.0, 10329.0], [2669.0, 2972.0], [2589.0, 4602.0], [2581.0, 6226.0], [2573.0, 1100.0], [2565.0, 8396.666666666666], [2621.0, 1607.0], [2613.0, 1845.0], [2605.0, 1630.0], [2597.0, 1885.0], [2805.0, 1599.0], [2789.0, 1500.0], [2757.0, 3890.0], [2781.0, 6178.0], [2813.0, 1601.0], [2797.0, 8841.0], [2709.0, 3256.0], [2701.0, 5882.0], [2693.0, 6154.0], [2749.0, 6301.0], [2741.0, 1099.0], [2733.0, 2819.0], [2725.0, 1096.0], [2933.0, 638.5], [2885.0, 1119.0], [2893.0, 6266.0], [2909.0, 1413.0], [2941.0, 1328.0], [2925.0, 815.6666666666666], [2917.0, 1097.0], [2821.0, 3049.0], [2829.0, 1074.3333333333333], [2837.0, 1250.0], [2845.0, 1681.0], [2877.0, 2479.5], [2869.0, 8847.5], [2861.0, 3261.5], [2853.0, 1551.0], [2949.0, 1428.5], [2997.0, 2479.8999999999996], [2957.0, 2274.75], [2965.0, 1097.5], [2973.0, 1554.5], [2989.0, 3195.9999999999995], [2981.0, 39.5], [1035.0, 6064.0], [1083.0, 6647.0], [1075.0, 3445.0], [1071.0, 3947.0], [1067.0, 5789.0], [1059.0, 9895.0], [1055.0, 7339.0], [1047.0, 7561.0], [1031.0, 3945.0], [1027.0, 4244.0], [1143.0, 4100.0], [1151.0, 6458.0], [1123.0, 5878.5], [1127.0, 5267.0], [1131.0, 6550.0], [1139.0, 5651.0], [1103.0, 5401.0], [1119.0, 8673.0], [1091.0, 5560.0], [1099.0, 5683.0], [1095.0, 5826.0], [1115.0, 6705.0], [1107.0, 6146.0], [1135.0, 5765.5], [1211.0, 7247.0], [1215.0, 6380.0], [1187.0, 4482.333333333333], [1191.0, 3325.0], [1195.0, 5018.0], [1207.0, 4234.0], [1159.0, 4114.0], [1155.0, 5539.5], [1183.0, 10589.0], [1179.0, 10481.0], [1175.0, 3331.0], [1171.0, 6241.0], [1199.0, 5532.0], [1219.0, 2766.0], [1279.0, 4896.0], [1275.0, 11017.0], [1247.0, 3266.0], [1223.0, 5297.0], [1227.0, 3620.0], [1231.0, 4735.5], [1243.0, 2873.0], [1239.0, 4230.0], [1235.0, 7663.0], [1263.0, 3825.0], [1259.0, 5705.0], [1251.0, 4344.0], [1339.0, 5975.0], [1343.0, 7107.0], [1315.0, 10557.5], [1319.0, 6389.0], [1335.0, 5530.0], [1331.0, 5240.0], [1311.0, 5861.0], [1283.0, 6225.0], [1291.0, 4211.0], [1287.0, 6262.0], [1295.0, 8907.0], [1303.0, 10234.5], [1299.0, 6116.0], [1327.0, 2966.0], [1403.0, 2520.0], [1395.0, 6708.0], [1407.0, 5711.0], [1379.0, 2635.0], [1387.0, 8955.0], [1383.0, 5678.0], [1399.0, 4124.0], [1359.0, 7634.0], [1355.0, 6663.0], [1351.0, 5820.0], [1347.0, 4653.0], [1375.0, 5640.0], [1371.0, 2810.0], [1367.0, 5580.0], [1363.0, 3784.0], [1391.0, 7592.0], [1459.0, 10450.0], [1467.0, 5636.5], [1471.0, 4548.0], [1443.0, 5577.0], [1439.0, 5525.0], [1411.0, 5819.0], [1423.0, 6496.0], [1435.0, 5020.0], [1431.0, 7965.0], [1427.0, 2470.0], [1455.0, 3367.0], [1447.0, 5535.0], [1531.0, 4002.0], [1523.0, 7276.0], [1535.0, 5136.0], [1511.0, 4266.0], [1507.0, 3749.0], [1515.0, 5734.0], [1527.0, 4341.0], [1487.0, 2121.0], [1479.0, 8565.0], [1475.0, 4565.0], [1503.0, 4220.0], [1499.0, 5505.0], [1495.0, 7160.0], [1491.0, 2312.0], [1519.0, 2509.0], [1595.0, 2777.0], [1599.0, 3842.0], [1571.0, 3034.0], [1575.0, 8444.0], [1591.0, 2897.0], [1587.0, 3695.0], [1567.0, 4186.5], [1539.0, 6403.0], [1543.0, 3429.0], [1551.0, 5129.0], [1559.0, 9586.0], [1555.0, 1762.0], [1583.0, 3187.0], [1655.0, 5948.0], [1663.0, 7264.0], [1635.0, 2403.0], [1659.0, 5883.0], [1651.0, 7667.0], [1631.0, 4559.333333333333], [1607.0, 5242.0], [1611.0, 1778.0], [1615.0, 2275.0], [1627.0, 2208.0], [1623.0, 5823.0], [1619.0, 10423.0], [1643.0, 1848.5], [1723.0, 1835.0], [1727.0, 8025.0], [1699.0, 1796.0], [1703.0, 1825.0], [1719.0, 1971.0], [1715.0, 2749.0], [1695.0, 3421.0], [1667.0, 3053.0], [1671.0, 7928.0], [1675.0, 7419.0], [1691.0, 1685.0], [1683.0, 9359.0], [1711.0, 4926.0], [1707.0, 4024.0], [1783.0, 8420.0], [1791.0, 2929.0], [1763.0, 2000.5], [1787.0, 2654.0], [1735.0, 1781.0], [1731.0, 3249.0], [1759.0, 1705.0], [1755.0, 6764.0], [1751.0, 2294.0], [1747.0, 4469.0], [1807.0, 3929.0], [1847.0, 2323.0], [1827.0, 6740.0], [1855.0, 2390.0], [1803.0, 1348.0], [1799.0, 5724.0], [1823.0, 2534.0], [1819.0, 7190.0], [1815.0, 4704.0], [1811.0, 5754.5], [1831.0, 5957.0], [1915.0, 6791.0], [1919.0, 1375.0], [1891.0, 3656.0], [1895.0, 1105.0], [1911.0, 2370.0], [1867.0, 2521.5], [1863.0, 1608.0], [1859.0, 7850.0], [1887.0, 2364.0], [1883.0, 1856.0], [1879.0, 9971.0], [1875.0, 6478.0], [1899.0, 1532.0], [1979.0, 3319.0], [1983.0, 1721.0], [1959.0, 7987.0], [1963.0, 5718.0], [1975.0, 1118.0], [1971.0, 6095.0], [1951.0, 1477.0], [1923.0, 5376.0], [1927.0, 2111.0], [1947.0, 6668.0], [1939.0, 2499.0], [1967.0, 1159.0], [2039.0, 1110.0], [2035.0, 1371.0], [2047.0, 4551.5], [2019.0, 1303.0], [2031.0, 1093.0], [2043.0, 2042.3333333333335], [1987.0, 4497.0], [1991.0, 1472.0], [1995.0, 2337.0], [1999.0, 1153.0], [2011.0, 1331.0], [2007.0, 5509.0], [2003.0, 1100.0], [2174.0, 7304.0], [2158.0, 1673.0], [2150.0, 4413.0], [2166.0, 1600.0], [2118.0, 4284.5], [2126.0, 8396.0], [2134.0, 8535.0], [2142.0, 1247.0], [2078.0, 1199.0], [2070.0, 6636.0], [2062.0, 1607.0], [2054.0, 2147.0], [2110.0, 9442.0], [2102.0, 1141.0], [2086.0, 5312.0], [2190.0, 1095.0], [2278.0, 1778.0], [2294.0, 7175.0], [2302.0, 1098.0], [2246.0, 10525.0], [2254.0, 1111.0], [2182.0, 7403.0], [2198.0, 1583.5], [2230.0, 2500.0], [2222.0, 2887.6666666666665], [2214.0, 5399.0], [2414.0, 1342.0], [2422.0, 1233.0], [2382.0, 3698.0], [2398.0, 1100.0], [2406.0, 1104.0], [2366.0, 7431.0], [2310.0, 1116.0], [2318.0, 1322.0], [2334.0, 9301.0], [2358.0, 1584.5], [2350.0, 1101.0], [2342.0, 1195.0], [2550.0, 1565.0], [2542.0, 4474.0], [2558.0, 1158.0], [2502.0, 2845.0], [2510.0, 1192.0], [2518.0, 1401.0], [2526.0, 3983.0], [2534.0, 1604.0], [2462.0, 3064.0], [2446.0, 10297.0], [2438.0, 3336.0], [2494.0, 8926.0], [2486.0, 1162.0], [2478.0, 3341.0], [2470.0, 1292.0], [2670.0, 2078.0], [2630.0, 6507.0], [2646.0, 3086.666666666667], [2654.0, 1702.0], [2686.0, 1385.0], [2582.0, 2065.0], [2574.0, 1259.0], [2566.0, 1106.0], [2614.0, 7372.0], [2606.0, 4714.0], [2806.0, 2839.0], [2798.0, 7122.0], [2774.0, 2903.0], [2782.0, 2664.0], [2814.0, 1591.0], [2710.0, 8980.0], [2702.0, 7014.0], [2742.0, 1630.0], [2734.0, 1102.0], [2934.0, 1187.875], [2918.0, 6451.0], [2886.0, 3427.0], [2894.0, 1373.6666666666667], [2902.0, 4189.0], [2942.0, 998.6923076923076], [2926.0, 6597.0], [2822.0, 1544.0], [2830.0, 10462.0], [2838.0, 1994.0], [2846.0, 3569.0], [2878.0, 1267.0], [2870.0, 1100.0], [2862.0, 657.5], [2854.0, 5260.0], [2958.0, 1793.0], [2950.0, 3697.0], [2966.0, 4881.5], [2974.0, 8323.0], [2998.0, 1685.5], [2990.0, 2020.9999999999995], [2982.0, 2473.3333333333335], [2159.0, 4562.0], [2119.0, 1479.0], [2127.0, 1098.0], [2135.0, 1548.0], [2151.0, 4591.0], [2079.0, 2421.0], [2055.0, 1461.0], [2111.0, 5397.0], [2095.0, 1199.0], [2087.0, 1360.0], [2287.0, 5793.0], [2295.0, 3498.0], [2247.0, 1150.0], [2255.0, 1862.0], [2263.0, 3313.6666666666665], [2271.0, 4976.5], [2279.0, 1351.0], [2191.0, 10546.0], [2183.0, 1774.0], [2231.0, 5295.0], [2423.0, 1883.0], [2415.0, 1097.0], [2431.0, 3055.5], [2375.0, 4218.5], [2383.0, 1181.0], [2391.0, 4822.5], [2407.0, 3894.0], [2335.0, 10076.0], [2327.0, 4462.0], [2319.0, 4588.0], [2311.0, 1104.0], [2367.0, 1188.0], [2359.0, 5374.0], [2351.0, 3255.0], [2543.0, 1208.0], [2551.0, 5650.0], [2559.0, 7095.0], [2519.0, 7721.0], [2511.0, 1713.0], [2527.0, 1277.0], [2535.0, 2608.0], [2463.0, 4250.5], [2447.0, 1136.0], [2495.0, 2898.0], [2487.0, 1815.0], [2479.0, 2390.0], [2471.0, 3943.0], [2671.0, 3993.0], [2663.0, 1425.0], [2679.0, 7186.0], [2687.0, 3992.0], [2639.0, 2683.0], [2647.0, 2442.0], [2655.0, 1125.0], [2591.0, 3202.0], [2567.0, 5097.0], [2799.0, 1120.0], [2807.0, 7100.0], [2815.0, 1523.0], [2759.0, 6410.5], [2767.0, 1520.6666666666667], [2775.0, 2863.0], [2791.0, 1633.5], [2719.0, 3402.6666666666665], [2711.0, 10490.0], [2703.0, 6320.0], [2695.0, 8555.0], [2751.0, 3862.0], [2743.0, 5954.0], [2735.0, 1660.0], [2727.0, 1101.0], [2943.0, 1310.0], [2935.0, 587.1666666666667], [2887.0, 6295.5], [2895.0, 7251.0], [2903.0, 1623.0], [2911.0, 2481.5], [2927.0, 5422.0], [2919.0, 4155.2], [2879.0, 10429.0], [2823.0, 40.0], [2831.0, 3623.0], [2839.0, 1463.0], [2871.0, 3771.0], [2863.0, 1602.0], [2855.0, 4765.0], [2959.0, 921.5], [2951.0, 3542.5], [2967.0, 1904.5], [2975.0, 4166.875], [2999.0, 2617.0408163265306], [2991.0, 758.3333333333333], [2983.0, 1962.2307692307693], [1.0, 87398.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2987.6678954798763, 2461.6694492458214]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 74210.0, "minX": 1.68416436E12, "maxY": 738693.05, "series": [{"data": [[1.68416442E12, 738693.05], [1.6841646E12, 701790.55], [1.68416448E12, 703087.8833333333], [1.68416466E12, 579940.2333333333], [1.68416436E12, 101761.95], [1.68416454E12, 708023.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68416442E12, 679537.35], [1.6841646E12, 667138.85], [1.68416448E12, 665871.85], [1.68416466E12, 549887.05], [1.68416436E12, 74210.0], [1.68416454E12, 669890.05]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416466E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2420.348725756295, "minX": 1.68416436E12, "maxY": 2860.089809213582, "series": [{"data": [[1.68416442E12, 2420.348725756295], [1.6841646E12, 2435.925797305888], [1.68416448E12, 2441.3677372004936], [1.68416466E12, 2543.152449762164], [1.68416436E12, 2860.089809213582], [1.68416454E12, 2436.498682806233]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416466E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2339.7617131131187, "minX": 1.68416436E12, "maxY": 2542.9553661065484, "series": [{"data": [[1.68416442E12, 2339.7617131131187], [1.6841646E12, 2435.719264213162], [1.68416448E12, 2441.1641953327658], [1.68416466E12, 2542.9553661065484], [1.68416436E12, 2354.0435086086527], [1.68416454E12, 2436.300874076278]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416466E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 2.3978538865390893, "minX": 1.68416436E12, "maxY": 1769.0397859469535, "series": [{"data": [[1.68416442E12, 128.47983054213054], [1.6841646E12, 2.69210629841147], [1.68416448E12, 2.5933511831143123], [1.68416466E12, 2.3978538865390893], [1.68416436E12, 1769.0397859469535], [1.68416454E12, 2.4493184366598495]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416466E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.68416436E12, "maxY": 87398.0, "series": [{"data": [[1.68416442E12, 14355.0], [1.6841646E12, 17921.0], [1.68416448E12, 18913.0], [1.68416466E12, 87398.0], [1.68416436E12, 12053.0], [1.68416454E12, 18190.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68416442E12, 6960.9000000000015], [1.6841646E12, 7326.0], [1.68416448E12, 7713.0], [1.68416466E12, 7861.800000000003], [1.68416436E12, 7466.0], [1.68416454E12, 7465.800000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68416442E12, 9771.920000000013], [1.6841646E12, 10717.960000000006], [1.68416448E12, 10790.970000000005], [1.68416466E12, 10792.950000000008], [1.68416436E12, 11421.000000000002], [1.68416454E12, 10758.990000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68416442E12, 8199.95], [1.6841646E12, 8850.0], [1.68416448E12, 9638.850000000002], [1.68416466E12, 9152.0], [1.68416436E12, 9287.0], [1.68416454E12, 8987.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68416442E12, 51.0], [1.6841646E12, 50.0], [1.68416448E12, 50.0], [1.68416466E12, 51.0], [1.68416436E12, 52.0], [1.68416454E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68416442E12, 1933.0], [1.6841646E12, 1800.0], [1.68416448E12, 1844.0], [1.68416466E12, 2119.5], [1.68416436E12, 1599.0], [1.68416454E12, 1947.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416466E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 3.0, "maxY": 87323.0, "series": [{"data": [[3.0, 87323.0], [15.0, 10576.0], [35.0, 9711.0], [64.0, 9570.0], [95.0, 8841.0], [125.0, 8178.0], [143.0, 2903.0], [178.0, 3679.5], [176.0, 7175.5], [249.0, 6329.0], [291.0, 6073.5], [389.0, 5532.0], [504.0, 1760.5], [609.0, 3656.0], [922.0, 1848.0], [936.0, 2042.0], [929.0, 1948.5], [968.0, 1149.0], [1109.0, 1857.0], [1112.0, 1993.0], [1204.0, 1954.0], [1187.0, 2352.0], [1178.0, 1356.0], [1174.0, 1761.0], [1168.0, 1936.0], [1170.0, 1679.0], [1171.0, 2082.0], [1193.0, 2016.0], [1192.0, 1875.0], [1194.0, 1811.0], [1198.0, 1934.0], [1197.0, 1920.0], [1199.0, 1732.0], [1195.0, 1756.0], [1209.0, 2062.0], [1191.0, 1887.0], [1189.0, 1961.0], [1190.0, 1902.0], [1203.0, 1945.0], [1202.0, 1822.0], [1180.0, 1870.0], [1179.0, 1903.5], [1181.0, 1891.0], [1164.0, 1694.0], [1154.0, 1704.0], [1200.0, 1923.0], [1201.0, 1940.0], [1206.0, 1848.0], [1205.0, 1816.0], [1207.0, 2017.5], [1210.0, 1852.0], [1213.0, 1883.5], [1212.0, 1936.5], [1185.0, 1925.5], [1215.0, 1931.0], [1184.0, 1905.5], [1186.0, 1880.5], [1214.0, 1891.5], [1226.0, 1921.0], [1245.0, 2090.0], [1270.0, 1821.0], [1259.0, 2822.0], [1261.0, 1817.5], [1260.0, 1802.5], [1262.0, 1869.0], [1263.0, 1873.0], [1255.0, 1977.0], [1254.0, 1951.0], [1256.0, 1835.0], [1257.0, 1783.0], [1252.0, 1980.5], [1251.0, 1840.0], [1253.0, 1895.0], [1235.0, 2827.0], [1242.0, 2089.0], [1240.0, 1944.0], [1241.0, 1974.0], [1239.0, 1956.0], [1237.0, 1897.0], [1238.0, 1808.0], [1236.0, 1903.0], [1243.0, 1944.0], [1244.0, 1924.0], [1232.0, 2179.5], [1234.0, 2052.0], [1233.0, 1777.5], [1218.0, 2135.0], [1220.0, 1949.0], [1219.0, 1935.5], [1246.0, 2105.0], [1216.0, 1981.0], [1217.0, 1832.0], [1247.0, 1923.0], [1221.0, 2190.0], [1225.0, 1991.0], [1224.0, 1997.0], [1223.0, 1906.0], [1222.0, 1903.0], [1229.0, 1944.0], [1264.0, 1947.0], [1265.0, 1899.0], [1230.0, 1863.0], [1231.0, 1804.0], [1227.0, 1839.5], [1228.0, 1878.0], [1267.0, 2012.5], [1268.0, 1776.0], [1266.0, 2122.0], [1250.0, 2067.5], [1272.0, 2075.0], [1278.0, 1949.0], [1275.0, 1841.0], [1276.0, 1803.0], [1277.0, 1787.0], [1279.0, 1819.0], [1248.0, 1880.0], [1249.0, 1640.5], [1273.0, 1987.0], [1285.0, 2773.0], [1293.0, 2077.5], [1284.0, 2197.0], [1283.0, 1837.5], [1281.0, 1812.0], [1301.0, 1897.0], [1302.0, 2002.0], [1308.0, 1831.0], [1280.0, 1817.0], [1287.0, 2695.0], [1288.0, 2471.0], [1291.0, 2027.0], [1289.0, 1987.5], [1286.0, 1763.0], [1326.0, 1955.5], [1324.0, 1864.0], [1315.0, 1950.0], [1314.0, 1945.0], [1294.0, 1924.5], [1342.0, 1925.0], [1299.0, 1937.0], [1296.0, 1883.0], [1298.0, 1863.0], [1297.0, 1825.5], [1345.0, 1445.5], [1359.0, 1503.5], [1520.0, 2095.0], [1568.0, 1808.5], [1651.0, 2129.5], [1610.0, 1808.0], [1738.0, 2132.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[64.0, 10151.0], [95.0, 10135.0], [125.0, 10163.0], [249.0, 10090.0], [291.0, 10136.0], [389.0, 10178.0], [504.0, 5472.5], [609.0, 10259.0], [922.0, 46.0], [936.0, 327.5], [929.0, 42.0], [968.0, 49.0], [1109.0, 45.0], [1112.0, 42.0], [1204.0, 42.0], [1187.0, 41.0], [1178.0, 42.0], [1174.0, 41.0], [1168.0, 41.0], [1170.0, 43.0], [1171.0, 41.0], [1193.0, 42.0], [1192.0, 42.0], [1194.0, 41.0], [1198.0, 41.0], [1197.0, 41.0], [1199.0, 41.0], [1195.0, 41.0], [1209.0, 41.0], [1191.0, 41.0], [1189.0, 41.0], [1190.0, 41.0], [1203.0, 42.0], [1202.0, 41.0], [1180.0, 42.0], [1179.0, 43.0], [1181.0, 43.0], [1164.0, 41.0], [1154.0, 41.0], [1200.0, 41.0], [1201.0, 42.0], [1206.0, 41.0], [1205.0, 44.0], [1207.0, 42.0], [1210.0, 41.0], [1213.0, 41.0], [1212.0, 41.0], [1185.0, 42.0], [1215.0, 43.0], [1184.0, 43.0], [1186.0, 42.0], [1214.0, 41.0], [1226.0, 42.0], [1245.0, 41.0], [1270.0, 43.0], [1259.0, 41.0], [1261.0, 42.0], [1260.0, 42.0], [1262.0, 42.0], [1263.0, 41.0], [1255.0, 41.0], [1254.0, 41.0], [1256.0, 43.0], [1257.0, 42.0], [1252.0, 41.0], [1251.0, 41.0], [1253.0, 41.0], [1235.0, 41.0], [1242.0, 41.0], [1240.0, 41.0], [1241.0, 41.0], [1239.0, 41.0], [1237.0, 41.0], [1238.0, 42.0], [1236.0, 42.0], [1243.0, 41.0], [1244.0, 42.0], [1232.0, 43.0], [1234.0, 41.0], [1233.0, 50.0], [1218.0, 41.0], [1220.0, 41.0], [1219.0, 41.0], [1246.0, 41.0], [1216.0, 41.0], [1217.0, 42.0], [1247.0, 41.0], [1221.0, 41.0], [1225.0, 41.0], [1224.0, 41.0], [1223.0, 41.0], [1222.0, 41.0], [1229.0, 41.0], [1264.0, 41.0], [1265.0, 41.0], [1230.0, 41.0], [1231.0, 42.0], [1227.0, 42.0], [1228.0, 41.0], [1267.0, 41.0], [1268.0, 41.0], [1266.0, 41.0], [1250.0, 41.0], [1272.0, 42.0], [1278.0, 41.0], [1275.0, 41.0], [1276.0, 41.0], [1277.0, 42.0], [1279.0, 43.0], [1248.0, 41.0], [1249.0, 51.0], [1273.0, 41.5], [1285.0, 41.0], [1293.0, 41.0], [1284.0, 42.0], [1283.0, 42.0], [1281.0, 41.0], [1301.0, 41.0], [1302.0, 41.0], [1308.0, 41.0], [1280.0, 43.0], [1287.0, 41.0], [1288.0, 41.0], [1291.0, 41.0], [1289.0, 41.0], [1286.0, 42.0], [1326.0, 42.0], [1324.0, 41.0], [1315.0, 42.0], [1314.0, 41.0], [1294.0, 41.0], [1342.0, 41.0], [1299.0, 42.0], [1296.0, 41.0], [1298.0, 41.0], [1297.0, 41.0], [1345.0, 52.0], [1359.0, 45.0], [1520.0, 84.0], [1568.0, 55.0], [1651.0, 302.0], [1610.0, 74.0], [1738.0, 100.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1738.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 3.0, "maxY": 87323.0, "series": [{"data": [[3.0, 87323.0], [15.0, 10576.0], [35.0, 9711.0], [64.0, 9570.0], [95.0, 8841.0], [125.0, 8178.0], [143.0, 2902.0], [178.0, 3679.0], [176.0, 7175.0], [249.0, 6329.0], [291.0, 6073.5], [389.0, 5532.0], [504.0, 1760.5], [609.0, 3656.0], [922.0, 1848.0], [936.0, 2041.5], [929.0, 1948.5], [968.0, 1148.5], [1109.0, 1857.0], [1112.0, 1991.0], [1204.0, 1954.0], [1187.0, 2351.5], [1178.0, 1356.0], [1174.0, 1760.0], [1168.0, 1936.0], [1170.0, 1679.0], [1171.0, 2082.0], [1193.0, 2015.0], [1192.0, 1875.0], [1194.0, 1811.0], [1198.0, 1933.0], [1197.0, 1919.5], [1199.0, 1732.0], [1195.0, 1756.0], [1209.0, 2061.5], [1191.0, 1887.0], [1189.0, 1961.0], [1190.0, 1902.0], [1203.0, 1944.5], [1202.0, 1821.0], [1180.0, 1870.0], [1179.0, 1901.0], [1181.0, 1891.0], [1164.0, 1694.0], [1154.0, 1704.0], [1200.0, 1923.0], [1201.0, 1939.0], [1206.0, 1848.0], [1205.0, 1815.0], [1207.0, 2017.5], [1210.0, 1852.0], [1213.0, 1883.0], [1212.0, 1936.5], [1185.0, 1925.5], [1215.0, 1931.0], [1184.0, 1905.5], [1186.0, 1880.5], [1214.0, 1891.5], [1226.0, 1920.0], [1245.0, 2090.0], [1270.0, 1821.0], [1259.0, 2821.5], [1261.0, 1817.5], [1260.0, 1801.0], [1262.0, 1869.0], [1263.0, 1872.0], [1255.0, 1977.0], [1254.0, 1951.0], [1256.0, 1834.5], [1257.0, 1782.5], [1252.0, 1980.0], [1251.0, 1839.5], [1253.0, 1895.0], [1235.0, 2826.5], [1242.0, 2089.0], [1240.0, 1943.0], [1241.0, 1974.0], [1239.0, 1956.0], [1237.0, 1897.0], [1238.0, 1808.0], [1236.0, 1903.0], [1243.0, 1944.0], [1244.0, 1924.0], [1232.0, 2179.5], [1234.0, 2052.0], [1233.0, 1777.0], [1218.0, 2135.0], [1220.0, 1948.0], [1219.0, 1935.0], [1246.0, 2104.0], [1216.0, 1981.0], [1217.0, 1832.0], [1247.0, 1923.0], [1221.0, 2190.0], [1225.0, 1991.0], [1224.0, 1997.0], [1223.0, 1906.0], [1222.0, 1902.0], [1229.0, 1944.0], [1264.0, 1947.0], [1265.0, 1899.0], [1230.0, 1863.0], [1231.0, 1804.0], [1227.0, 1839.5], [1228.0, 1877.0], [1267.0, 2012.0], [1268.0, 1776.0], [1266.0, 2122.0], [1250.0, 2067.5], [1272.0, 2075.0], [1278.0, 1949.0], [1275.0, 1840.5], [1276.0, 1801.0], [1277.0, 1787.0], [1279.0, 1818.0], [1248.0, 1880.0], [1249.0, 1636.5], [1273.0, 1987.0], [1285.0, 2772.5], [1293.0, 2075.0], [1284.0, 2195.0], [1283.0, 1837.5], [1281.0, 1812.0], [1301.0, 1897.0], [1302.0, 2001.5], [1308.0, 1831.0], [1280.0, 1816.0], [1287.0, 2694.0], [1288.0, 2470.0], [1291.0, 2027.0], [1289.0, 1987.5], [1286.0, 1763.0], [1326.0, 1955.5], [1324.0, 1863.5], [1315.0, 1950.0], [1314.0, 1945.0], [1294.0, 1924.0], [1342.0, 1925.0], [1299.0, 1936.0], [1296.0, 1883.0], [1298.0, 1863.0], [1297.0, 1825.5], [1345.0, 1443.5], [1359.0, 1502.5], [1520.0, 2095.0], [1568.0, 1807.0], [1651.0, 2129.5], [1610.0, 1801.0], [1738.0, 2129.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[64.0, 10151.0], [95.0, 10135.0], [125.0, 10163.0], [249.0, 10090.0], [291.0, 10136.0], [389.0, 10178.0], [504.0, 5472.5], [609.0, 10259.0], [922.0, 46.0], [936.0, 327.5], [929.0, 42.0], [968.0, 49.0], [1109.0, 45.0], [1112.0, 42.0], [1204.0, 42.0], [1187.0, 41.0], [1178.0, 42.0], [1174.0, 41.0], [1168.0, 41.0], [1170.0, 43.0], [1171.0, 41.0], [1193.0, 42.0], [1192.0, 42.0], [1194.0, 41.0], [1198.0, 41.0], [1197.0, 41.0], [1199.0, 41.0], [1195.0, 41.0], [1209.0, 41.0], [1191.0, 41.0], [1189.0, 41.0], [1190.0, 41.0], [1203.0, 42.0], [1202.0, 41.0], [1180.0, 42.0], [1179.0, 43.0], [1181.0, 43.0], [1164.0, 41.0], [1154.0, 41.0], [1200.0, 41.0], [1201.0, 42.0], [1206.0, 41.0], [1205.0, 44.0], [1207.0, 42.0], [1210.0, 41.0], [1213.0, 41.0], [1212.0, 41.0], [1185.0, 42.0], [1215.0, 43.0], [1184.0, 43.0], [1186.0, 42.0], [1214.0, 41.0], [1226.0, 42.0], [1245.0, 41.0], [1270.0, 41.0], [1259.0, 41.0], [1261.0, 42.0], [1260.0, 42.0], [1262.0, 42.0], [1263.0, 41.0], [1255.0, 41.0], [1254.0, 41.0], [1256.0, 43.0], [1257.0, 42.0], [1252.0, 41.0], [1251.0, 41.0], [1253.0, 41.0], [1235.0, 41.0], [1242.0, 41.0], [1240.0, 41.0], [1241.0, 41.0], [1239.0, 41.0], [1237.0, 41.0], [1238.0, 42.0], [1236.0, 42.0], [1243.0, 41.0], [1244.0, 42.0], [1232.0, 43.0], [1234.0, 41.0], [1233.0, 50.0], [1218.0, 41.0], [1220.0, 41.0], [1219.0, 41.0], [1246.0, 41.0], [1216.0, 41.0], [1217.0, 42.0], [1247.0, 41.0], [1221.0, 41.0], [1225.0, 41.0], [1224.0, 41.0], [1223.0, 41.0], [1222.0, 41.0], [1229.0, 41.0], [1264.0, 41.0], [1265.0, 41.0], [1230.0, 41.0], [1231.0, 42.0], [1227.0, 42.0], [1228.0, 41.0], [1267.0, 41.0], [1268.0, 41.0], [1266.0, 41.0], [1250.0, 41.0], [1272.0, 42.0], [1278.0, 41.0], [1275.0, 41.0], [1276.0, 41.0], [1277.0, 42.0], [1279.0, 43.0], [1248.0, 41.0], [1249.0, 51.0], [1273.0, 41.5], [1285.0, 41.0], [1293.0, 41.0], [1284.0, 42.0], [1283.0, 42.0], [1281.0, 41.0], [1301.0, 41.0], [1302.0, 41.0], [1308.0, 41.0], [1280.0, 43.0], [1287.0, 41.0], [1288.0, 41.0], [1291.0, 41.0], [1289.0, 41.0], [1286.0, 42.0], [1326.0, 42.0], [1324.0, 41.0], [1315.0, 42.0], [1314.0, 41.0], [1294.0, 41.0], [1342.0, 41.0], [1299.0, 42.0], [1296.0, 41.0], [1298.0, 41.0], [1297.0, 41.0], [1345.0, 52.0], [1359.0, 44.0], [1520.0, 41.0], [1568.0, 43.5], [1651.0, 83.0], [1610.0, 74.0], [1738.0, 45.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1738.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 193.25, "minX": 1.68416436E12, "maxY": 1258.9333333333334, "series": [{"data": [[1.68416442E12, 1258.9333333333334], [1.6841646E12, 1228.6], [1.68416448E12, 1226.2666666666667], [1.68416466E12, 962.6833333333333], [1.68416436E12, 193.25], [1.68416454E12, 1233.7166666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416466E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.68416436E12, "maxY": 941.4, "series": [{"data": [[1.68416436E12, 0.36666666666666664]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68416442E12, 941.4], [1.6841646E12, 924.4], [1.68416448E12, 929.1], [1.68416466E12, 765.4833333333333], [1.68416436E12, 105.31666666666666], [1.68416454E12, 936.05]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68416442E12, 7.466666666666667], [1.68416436E12, 6.033333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.68416436E12, 0.2]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68416442E12, 310.05], [1.6841646E12, 304.21666666666664], [1.68416448E12, 297.18333333333334], [1.68416466E12, 247.2], [1.68416436E12, 31.35], [1.68416454E12, 297.6333333333333]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68416466E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 37.95, "minX": 1.68416436E12, "maxY": 941.4, "series": [{"data": [[1.68416442E12, 941.4], [1.6841646E12, 924.4], [1.68416448E12, 929.1], [1.68416466E12, 765.4833333333333], [1.68416436E12, 105.31666666666666], [1.68416454E12, 936.05]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68416442E12, 317.51666666666665], [1.6841646E12, 304.21666666666664], [1.68416448E12, 297.18333333333334], [1.68416466E12, 247.2], [1.68416436E12, 37.95], [1.68416454E12, 297.6333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416466E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 37.95, "minX": 1.68416436E12, "maxY": 941.4, "series": [{"data": [[1.68416442E12, 941.4], [1.6841646E12, 924.4], [1.68416448E12, 929.1], [1.68416466E12, 765.4833333333333], [1.68416436E12, 105.31666666666666], [1.68416454E12, 936.05]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68416442E12, 317.51666666666665], [1.6841646E12, 304.21666666666664], [1.68416448E12, 297.18333333333334], [1.68416466E12, 247.2], [1.68416436E12, 37.95], [1.68416454E12, 297.6333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68416466E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

