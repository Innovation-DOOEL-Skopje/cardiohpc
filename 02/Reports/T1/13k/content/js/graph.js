/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "maxY": 20264.0, "series": [{"data": [[0.0, 37.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 38.0], [0.5, 38.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 39.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 40.0], [5.5, 40.0], [5.6, 40.0], [5.7, 40.0], [5.8, 40.0], [5.9, 40.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 40.0], [6.4, 40.0], [6.5, 40.0], [6.6, 40.0], [6.7, 41.0], [6.8, 41.0], [6.9, 41.0], [7.0, 41.0], [7.1, 41.0], [7.2, 41.0], [7.3, 41.0], [7.4, 41.0], [7.5, 41.0], [7.6, 41.0], [7.7, 41.0], [7.8, 41.0], [7.9, 41.0], [8.0, 41.0], [8.1, 41.0], [8.2, 41.0], [8.3, 41.0], [8.4, 41.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 42.0], [10.0, 42.0], [10.1, 42.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 42.0], [10.6, 42.0], [10.7, 42.0], [10.8, 42.0], [10.9, 42.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 42.0], [11.9, 42.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 42.0], [12.8, 42.0], [12.9, 42.0], [13.0, 42.0], [13.1, 42.0], [13.2, 42.0], [13.3, 42.0], [13.4, 43.0], [13.5, 43.0], [13.6, 43.0], [13.7, 43.0], [13.8, 43.0], [13.9, 43.0], [14.0, 43.0], [14.1, 43.0], [14.2, 43.0], [14.3, 43.0], [14.4, 43.0], [14.5, 43.0], [14.6, 43.0], [14.7, 43.0], [14.8, 43.0], [14.9, 43.0], [15.0, 43.0], [15.1, 43.0], [15.2, 43.0], [15.3, 43.0], [15.4, 43.0], [15.5, 43.0], [15.6, 43.0], [15.7, 43.0], [15.8, 43.0], [15.9, 44.0], [16.0, 44.0], [16.1, 44.0], [16.2, 44.0], [16.3, 44.0], [16.4, 44.0], [16.5, 44.0], [16.6, 44.0], [16.7, 44.0], [16.8, 44.0], [16.9, 44.0], [17.0, 45.0], [17.1, 45.0], [17.2, 45.0], [17.3, 45.0], [17.4, 46.0], [17.5, 46.0], [17.6, 46.0], [17.7, 47.0], [17.8, 48.0], [17.9, 48.0], [18.0, 49.0], [18.1, 50.0], [18.2, 51.0], [18.3, 52.0], [18.4, 53.0], [18.5, 54.0], [18.6, 55.0], [18.7, 56.0], [18.8, 57.0], [18.9, 58.0], [19.0, 59.0], [19.1, 61.0], [19.2, 62.0], [19.3, 64.0], [19.4, 65.0], [19.5, 67.0], [19.6, 70.0], [19.7, 72.0], [19.8, 75.0], [19.9, 79.0], [20.0, 84.0], [20.1, 90.0], [20.2, 95.0], [20.3, 100.0], [20.4, 106.0], [20.5, 111.0], [20.6, 119.0], [20.7, 131.0], [20.8, 149.0], [20.9, 174.0], [21.0, 215.0], [21.1, 265.0], [21.2, 305.0], [21.3, 386.0], [21.4, 480.0], [21.5, 604.0], [21.6, 799.0], [21.7, 1088.0], [21.8, 1091.0], [21.9, 1092.0], [22.0, 1092.0], [22.1, 1092.0], [22.2, 1093.0], [22.3, 1093.0], [22.4, 1093.0], [22.5, 1094.0], [22.6, 1094.0], [22.7, 1094.0], [22.8, 1094.0], [22.9, 1095.0], [23.0, 1095.0], [23.1, 1095.0], [23.2, 1095.0], [23.3, 1095.0], [23.4, 1095.0], [23.5, 1096.0], [23.6, 1096.0], [23.7, 1096.0], [23.8, 1096.0], [23.9, 1096.0], [24.0, 1096.0], [24.1, 1096.0], [24.2, 1097.0], [24.3, 1097.0], [24.4, 1097.0], [24.5, 1097.0], [24.6, 1097.0], [24.7, 1097.0], [24.8, 1097.0], [24.9, 1097.0], [25.0, 1098.0], [25.1, 1098.0], [25.2, 1098.0], [25.3, 1098.0], [25.4, 1098.0], [25.5, 1098.0], [25.6, 1098.0], [25.7, 1098.0], [25.8, 1099.0], [25.9, 1099.0], [26.0, 1099.0], [26.1, 1099.0], [26.2, 1099.0], [26.3, 1099.0], [26.4, 1099.0], [26.5, 1099.0], [26.6, 1099.0], [26.7, 1100.0], [26.8, 1100.0], [26.9, 1100.0], [27.0, 1100.0], [27.1, 1100.0], [27.2, 1100.0], [27.3, 1100.0], [27.4, 1101.0], [27.5, 1101.0], [27.6, 1101.0], [27.7, 1101.0], [27.8, 1101.0], [27.9, 1101.0], [28.0, 1101.0], [28.1, 1101.0], [28.2, 1102.0], [28.3, 1102.0], [28.4, 1102.0], [28.5, 1102.0], [28.6, 1102.0], [28.7, 1102.0], [28.8, 1103.0], [28.9, 1103.0], [29.0, 1103.0], [29.1, 1103.0], [29.2, 1103.0], [29.3, 1104.0], [29.4, 1104.0], [29.5, 1104.0], [29.6, 1104.0], [29.7, 1104.0], [29.8, 1105.0], [29.9, 1105.0], [30.0, 1105.0], [30.1, 1106.0], [30.2, 1106.0], [30.3, 1106.0], [30.4, 1107.0], [30.5, 1107.0], [30.6, 1107.0], [30.7, 1108.0], [30.8, 1108.0], [30.9, 1109.0], [31.0, 1109.0], [31.1, 1109.0], [31.2, 1110.0], [31.3, 1111.0], [31.4, 1111.0], [31.5, 1112.0], [31.6, 1112.0], [31.7, 1113.0], [31.8, 1114.0], [31.9, 1115.0], [32.0, 1116.0], [32.1, 1117.0], [32.2, 1117.0], [32.3, 1118.0], [32.4, 1119.0], [32.5, 1120.0], [32.6, 1121.0], [32.7, 1122.0], [32.8, 1124.0], [32.9, 1125.0], [33.0, 1125.0], [33.1, 1127.0], [33.2, 1128.0], [33.3, 1129.0], [33.4, 1130.0], [33.5, 1131.0], [33.6, 1132.0], [33.7, 1133.0], [33.8, 1134.0], [33.9, 1135.0], [34.0, 1136.0], [34.1, 1137.0], [34.2, 1138.0], [34.3, 1139.0], [34.4, 1140.0], [34.5, 1141.0], [34.6, 1142.0], [34.7, 1143.0], [34.8, 1144.0], [34.9, 1146.0], [35.0, 1147.0], [35.1, 1148.0], [35.2, 1149.0], [35.3, 1150.0], [35.4, 1152.0], [35.5, 1153.0], [35.6, 1154.0], [35.7, 1156.0], [35.8, 1157.0], [35.9, 1158.0], [36.0, 1159.0], [36.1, 1161.0], [36.2, 1162.0], [36.3, 1163.0], [36.4, 1165.0], [36.5, 1166.0], [36.6, 1168.0], [36.7, 1169.0], [36.8, 1170.0], [36.9, 1172.0], [37.0, 1173.0], [37.1, 1175.0], [37.2, 1176.0], [37.3, 1178.0], [37.4, 1179.0], [37.5, 1181.0], [37.6, 1183.0], [37.7, 1184.0], [37.8, 1186.0], [37.9, 1188.0], [38.0, 1189.0], [38.1, 1191.0], [38.2, 1192.0], [38.3, 1194.0], [38.4, 1196.0], [38.5, 1198.0], [38.6, 1199.0], [38.7, 1201.0], [38.8, 1203.0], [38.9, 1204.0], [39.0, 1206.0], [39.1, 1208.0], [39.2, 1210.0], [39.3, 1211.0], [39.4, 1213.0], [39.5, 1215.0], [39.6, 1217.0], [39.7, 1219.0], [39.8, 1221.0], [39.9, 1222.0], [40.0, 1224.0], [40.1, 1226.0], [40.2, 1228.0], [40.3, 1230.0], [40.4, 1232.0], [40.5, 1234.0], [40.6, 1236.0], [40.7, 1237.0], [40.8, 1239.0], [40.9, 1241.0], [41.0, 1243.0], [41.1, 1245.0], [41.2, 1247.0], [41.3, 1249.0], [41.4, 1251.0], [41.5, 1253.0], [41.6, 1255.0], [41.7, 1257.0], [41.8, 1259.0], [41.9, 1261.0], [42.0, 1263.0], [42.1, 1265.0], [42.2, 1267.0], [42.3, 1269.0], [42.4, 1271.0], [42.5, 1274.0], [42.6, 1276.0], [42.7, 1278.0], [42.8, 1280.0], [42.9, 1282.0], [43.0, 1284.0], [43.1, 1287.0], [43.2, 1289.0], [43.3, 1291.0], [43.4, 1293.0], [43.5, 1295.0], [43.6, 1298.0], [43.7, 1300.0], [43.8, 1303.0], [43.9, 1305.0], [44.0, 1307.0], [44.1, 1309.0], [44.2, 1312.0], [44.3, 1314.0], [44.4, 1316.0], [44.5, 1319.0], [44.6, 1321.0], [44.7, 1323.0], [44.8, 1325.0], [44.9, 1328.0], [45.0, 1330.0], [45.1, 1333.0], [45.2, 1335.0], [45.3, 1337.0], [45.4, 1340.0], [45.5, 1342.0], [45.6, 1345.0], [45.7, 1347.0], [45.8, 1349.0], [45.9, 1351.0], [46.0, 1354.0], [46.1, 1356.0], [46.2, 1358.0], [46.3, 1361.0], [46.4, 1363.0], [46.5, 1366.0], [46.6, 1368.0], [46.7, 1371.0], [46.8, 1373.0], [46.9, 1375.0], [47.0, 1378.0], [47.1, 1381.0], [47.2, 1383.0], [47.3, 1386.0], [47.4, 1388.0], [47.5, 1391.0], [47.6, 1393.0], [47.7, 1396.0], [47.8, 1398.0], [47.9, 1401.0], [48.0, 1404.0], [48.1, 1407.0], [48.2, 1410.0], [48.3, 1413.0], [48.4, 1416.0], [48.5, 1419.0], [48.6, 1422.0], [48.7, 1425.0], [48.8, 1428.0], [48.9, 1431.0], [49.0, 1434.0], [49.1, 1437.0], [49.2, 1440.0], [49.3, 1444.0], [49.4, 1447.0], [49.5, 1450.0], [49.6, 1453.0], [49.7, 1456.0], [49.8, 1459.0], [49.9, 1463.0], [50.0, 1466.0], [50.1, 1469.0], [50.2, 1472.0], [50.3, 1476.0], [50.4, 1479.0], [50.5, 1483.0], [50.6, 1486.0], [50.7, 1489.0], [50.8, 1492.0], [50.9, 1496.0], [51.0, 1499.0], [51.1, 1503.0], [51.2, 1507.0], [51.3, 1510.0], [51.4, 1514.0], [51.5, 1517.0], [51.6, 1521.0], [51.7, 1525.0], [51.8, 1528.0], [51.9, 1532.0], [52.0, 1536.0], [52.1, 1540.0], [52.2, 1543.0], [52.3, 1547.0], [52.4, 1551.0], [52.5, 1555.0], [52.6, 1558.0], [52.7, 1562.0], [52.8, 1566.0], [52.9, 1570.0], [53.0, 1574.0], [53.1, 1578.0], [53.2, 1582.0], [53.3, 1586.0], [53.4, 1589.0], [53.5, 1593.0], [53.6, 1598.0], [53.7, 1602.0], [53.8, 1606.0], [53.9, 1611.0], [54.0, 1615.0], [54.1, 1619.0], [54.2, 1624.0], [54.3, 1628.0], [54.4, 1633.0], [54.5, 1637.0], [54.6, 1642.0], [54.7, 1646.0], [54.8, 1650.0], [54.9, 1655.0], [55.0, 1659.0], [55.1, 1664.0], [55.2, 1669.0], [55.3, 1673.0], [55.4, 1677.0], [55.5, 1682.0], [55.6, 1688.0], [55.7, 1692.0], [55.8, 1697.0], [55.9, 1702.0], [56.0, 1707.0], [56.1, 1712.0], [56.2, 1717.0], [56.3, 1721.0], [56.4, 1726.0], [56.5, 1731.0], [56.6, 1735.0], [56.7, 1741.0], [56.8, 1746.0], [56.9, 1751.0], [57.0, 1756.0], [57.1, 1761.0], [57.2, 1765.0], [57.3, 1770.0], [57.4, 1775.0], [57.5, 1780.0], [57.6, 1785.0], [57.7, 1791.0], [57.8, 1796.0], [57.9, 1802.0], [58.0, 1807.0], [58.1, 1812.0], [58.2, 1817.0], [58.3, 1823.0], [58.4, 1828.0], [58.5, 1834.0], [58.6, 1839.0], [58.7, 1845.0], [58.8, 1851.0], [58.9, 1857.0], [59.0, 1862.0], [59.1, 1868.0], [59.2, 1874.0], [59.3, 1880.0], [59.4, 1886.0], [59.5, 1892.0], [59.6, 1898.0], [59.7, 1905.0], [59.8, 1911.0], [59.9, 1919.0], [60.0, 1925.0], [60.1, 1931.0], [60.2, 1937.0], [60.3, 1944.0], [60.4, 1950.0], [60.5, 1957.0], [60.6, 1963.0], [60.7, 1970.0], [60.8, 1976.0], [60.9, 1982.0], [61.0, 1988.0], [61.1, 1994.0], [61.2, 2001.0], [61.3, 2007.0], [61.4, 2013.0], [61.5, 2019.0], [61.6, 2025.0], [61.7, 2031.0], [61.8, 2037.0], [61.9, 2044.0], [62.0, 2050.0], [62.1, 2056.0], [62.2, 2062.0], [62.3, 2068.0], [62.4, 2074.0], [62.5, 2080.0], [62.6, 2087.0], [62.7, 2093.0], [62.8, 2098.0], [62.9, 2104.0], [63.0, 2110.0], [63.1, 2116.0], [63.2, 2122.0], [63.3, 2127.0], [63.4, 2132.0], [63.5, 2138.0], [63.6, 2143.0], [63.7, 2148.0], [63.8, 2153.0], [63.9, 2158.0], [64.0, 2163.0], [64.1, 2169.0], [64.2, 2175.0], [64.3, 2181.0], [64.4, 2188.0], [64.5, 2195.0], [64.6, 2202.0], [64.7, 2209.0], [64.8, 2216.0], [64.9, 2224.0], [65.0, 2232.0], [65.1, 2238.0], [65.2, 2247.0], [65.3, 2256.0], [65.4, 2265.0], [65.5, 2274.0], [65.6, 2282.0], [65.7, 2292.0], [65.8, 2301.0], [65.9, 2309.0], [66.0, 2318.0], [66.1, 2326.0], [66.2, 2336.0], [66.3, 2345.0], [66.4, 2353.0], [66.5, 2361.0], [66.6, 2369.0], [66.7, 2378.0], [66.8, 2388.0], [66.9, 2397.0], [67.0, 2406.0], [67.1, 2415.0], [67.2, 2424.0], [67.3, 2435.0], [67.4, 2446.0], [67.5, 2458.0], [67.6, 2468.0], [67.7, 2479.0], [67.8, 2490.0], [67.9, 2502.0], [68.0, 2513.0], [68.1, 2524.0], [68.2, 2536.0], [68.3, 2548.0], [68.4, 2560.0], [68.5, 2572.0], [68.6, 2584.0], [68.7, 2596.0], [68.8, 2608.0], [68.9, 2620.0], [69.0, 2634.0], [69.1, 2647.0], [69.2, 2660.0], [69.3, 2672.0], [69.4, 2685.0], [69.5, 2698.0], [69.6, 2711.0], [69.7, 2725.0], [69.8, 2739.0], [69.9, 2752.0], [70.0, 2764.0], [70.1, 2778.0], [70.2, 2792.0], [70.3, 2806.0], [70.4, 2820.0], [70.5, 2834.0], [70.6, 2847.0], [70.7, 2859.0], [70.8, 2873.0], [70.9, 2886.0], [71.0, 2900.0], [71.1, 2914.0], [71.2, 2929.0], [71.3, 2942.0], [71.4, 2955.0], [71.5, 2966.0], [71.6, 2978.0], [71.7, 2990.0], [71.8, 3002.0], [71.9, 3015.0], [72.0, 3027.0], [72.1, 3039.0], [72.2, 3051.0], [72.3, 3063.0], [72.4, 3073.0], [72.5, 3084.0], [72.6, 3095.0], [72.7, 3106.0], [72.8, 3116.0], [72.9, 3127.0], [73.0, 3138.0], [73.1, 3149.0], [73.2, 3159.0], [73.3, 3172.0], [73.4, 3184.0], [73.5, 3195.0], [73.6, 3207.0], [73.7, 3219.0], [73.8, 3230.0], [73.9, 3243.0], [74.0, 3257.0], [74.1, 3271.0], [74.2, 3285.0], [74.3, 3300.0], [74.4, 3314.0], [74.5, 3330.0], [74.6, 3345.0], [74.7, 3360.0], [74.8, 3374.0], [74.9, 3391.0], [75.0, 3406.0], [75.1, 3419.0], [75.2, 3437.0], [75.3, 3453.0], [75.4, 3470.0], [75.5, 3489.0], [75.6, 3506.0], [75.7, 3524.0], [75.8, 3544.0], [75.9, 3563.0], [76.0, 3580.0], [76.1, 3599.0], [76.2, 3620.0], [76.3, 3641.0], [76.4, 3659.0], [76.5, 3677.0], [76.6, 3695.0], [76.7, 3715.0], [76.8, 3732.0], [76.9, 3751.0], [77.0, 3769.0], [77.1, 3789.0], [77.2, 3807.0], [77.3, 3826.0], [77.4, 3847.0], [77.5, 3864.0], [77.6, 3883.0], [77.7, 3902.0], [77.8, 3921.0], [77.9, 3939.0], [78.0, 3957.0], [78.1, 3977.0], [78.2, 3996.0], [78.3, 4013.0], [78.4, 4033.0], [78.5, 4051.0], [78.6, 4071.0], [78.7, 4089.0], [78.8, 4108.0], [78.9, 4124.0], [79.0, 4141.0], [79.1, 4157.0], [79.2, 4172.0], [79.3, 4188.0], [79.4, 4205.0], [79.5, 4220.0], [79.6, 4237.0], [79.7, 4253.0], [79.8, 4269.0], [79.9, 4287.0], [80.0, 4305.0], [80.1, 4325.0], [80.2, 4346.0], [80.3, 4367.0], [80.4, 4387.0], [80.5, 4408.0], [80.6, 4427.0], [80.7, 4449.0], [80.8, 4472.0], [80.9, 4496.0], [81.0, 4519.0], [81.1, 4542.0], [81.2, 4565.0], [81.3, 4588.0], [81.4, 4610.0], [81.5, 4630.0], [81.6, 4652.0], [81.7, 4676.0], [81.8, 4700.0], [81.9, 4725.0], [82.0, 4749.0], [82.1, 4770.0], [82.2, 4794.0], [82.3, 4818.0], [82.4, 4841.0], [82.5, 4863.0], [82.6, 4889.0], [82.7, 4913.0], [82.8, 4937.0], [82.9, 4959.0], [83.0, 4983.0], [83.1, 5006.0], [83.2, 5030.0], [83.3, 5053.0], [83.4, 5077.0], [83.5, 5100.0], [83.6, 5123.0], [83.7, 5145.0], [83.8, 5167.0], [83.9, 5189.0], [84.0, 5210.0], [84.1, 5230.0], [84.2, 5249.0], [84.3, 5270.0], [84.4, 5291.0], [84.5, 5314.0], [84.6, 5339.0], [84.7, 5365.0], [84.8, 5389.0], [84.9, 5418.0], [85.0, 5444.0], [85.1, 5471.0], [85.2, 5500.0], [85.3, 5529.0], [85.4, 5559.0], [85.5, 5588.0], [85.6, 5617.0], [85.7, 5648.0], [85.8, 5677.0], [85.9, 5709.0], [86.0, 5737.0], [86.1, 5767.0], [86.2, 5798.0], [86.3, 5830.0], [86.4, 5861.0], [86.5, 5892.0], [86.6, 5924.0], [86.7, 5956.0], [86.8, 5984.0], [86.9, 6014.0], [87.0, 6040.0], [87.1, 6068.0], [87.2, 6095.0], [87.3, 6125.0], [87.4, 6156.0], [87.5, 6185.0], [87.6, 6213.0], [87.7, 6240.0], [87.8, 6266.0], [87.9, 6294.0], [88.0, 6324.0], [88.1, 6352.0], [88.2, 6380.0], [88.3, 6412.0], [88.4, 6446.0], [88.5, 6480.0], [88.6, 6517.0], [88.7, 6551.0], [88.8, 6591.0], [88.9, 6628.0], [89.0, 6663.0], [89.1, 6698.0], [89.2, 6737.0], [89.3, 6775.0], [89.4, 6815.0], [89.5, 6854.0], [89.6, 6894.0], [89.7, 6933.0], [89.8, 6975.0], [89.9, 7016.0], [90.0, 7056.0], [90.1, 7097.0], [90.2, 7136.0], [90.3, 7173.0], [90.4, 7208.0], [90.5, 7241.0], [90.6, 7277.0], [90.7, 7312.0], [90.8, 7347.0], [90.9, 7375.0], [91.0, 7409.0], [91.1, 7444.0], [91.2, 7481.0], [91.3, 7521.0], [91.4, 7562.0], [91.5, 7600.0], [91.6, 7641.0], [91.7, 7682.0], [91.8, 7721.0], [91.9, 7760.0], [92.0, 7801.0], [92.1, 7840.0], [92.2, 7877.0], [92.3, 7921.0], [92.4, 7964.0], [92.5, 8006.0], [92.6, 8047.0], [92.7, 8088.0], [92.8, 8129.0], [92.9, 8171.0], [93.0, 8205.0], [93.1, 8244.0], [93.2, 8281.0], [93.3, 8313.0], [93.4, 8351.0], [93.5, 8388.0], [93.6, 8426.0], [93.7, 8468.0], [93.8, 8508.0], [93.9, 8552.0], [94.0, 8593.0], [94.1, 8644.0], [94.2, 8691.0], [94.3, 8745.0], [94.4, 8794.0], [94.5, 8850.0], [94.6, 8898.0], [94.7, 8951.0], [94.8, 9009.0], [94.9, 9062.0], [95.0, 9123.0], [95.1, 9174.0], [95.2, 9217.0], [95.3, 9261.0], [95.4, 9307.0], [95.5, 9349.0], [95.6, 9395.0], [95.7, 9442.0], [95.8, 9480.0], [95.9, 9524.0], [96.0, 9567.0], [96.1, 9612.0], [96.2, 9661.0], [96.3, 9712.0], [96.4, 9766.0], [96.5, 9817.0], [96.6, 9868.0], [96.7, 9923.0], [96.8, 9975.0], [96.9, 10027.0], [97.0, 10063.0], [97.1, 10097.0], [97.2, 10131.0], [97.3, 10164.0], [97.4, 10197.0], [97.5, 10234.0], [97.6, 10269.0], [97.7, 10309.0], [97.8, 10347.0], [97.9, 10387.0], [98.0, 10422.0], [98.1, 10459.0], [98.2, 10495.0], [98.3, 10534.0], [98.4, 10574.0], [98.5, 10614.0], [98.6, 10663.0], [98.7, 10712.0], [98.8, 10754.0], [98.9, 10803.0], [99.0, 10856.0], [99.1, 10906.0], [99.2, 10954.0], [99.3, 11001.0], [99.4, 11050.0], [99.5, 11106.0], [99.6, 11171.0], [99.7, 11258.0], [99.8, 11396.0], [99.9, 11969.0], [100.0, 20264.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 68642.0, "series": [{"data": [[0.0, 68642.0], [100.0, 2310.0], [200.0, 747.0], [300.0, 433.0], [400.0, 400.0], [500.0, 233.0], [600.0, 207.0], [700.0, 139.0], [800.0, 119.0], [900.0, 110.0], [1000.0, 16733.0], [1100.0, 40592.0], [1200.0, 17152.0], [1300.0, 14104.0], [1400.0, 10710.0], [1500.0, 8945.0], [1600.0, 7450.0], [1700.0, 6813.0], [1800.0, 5965.0], [1900.0, 5266.0], [2000.0, 5551.0], [2100.0, 5922.0], [2200.0, 4132.0], [2300.0, 3856.0], [2400.0, 3234.0], [2500.0, 2869.0], [2600.0, 2654.0], [2800.0, 2519.0], [2700.0, 2507.0], [2900.0, 2640.0], [3000.0, 2930.0], [3100.0, 3012.0], [3200.0, 2587.0], [3300.0, 2224.0], [3400.0, 2050.0], [3500.0, 1823.0], [3600.0, 1777.0], [3700.0, 1818.0], [3800.0, 1774.0], [3900.0, 1807.0], [4000.0, 1810.0], [4200.0, 2065.0], [4300.0, 1657.0], [4100.0, 2058.0], [4500.0, 1470.0], [4400.0, 1534.0], [4600.0, 1512.0], [4700.0, 1437.0], [4800.0, 1442.0], [4900.0, 1435.0], [5100.0, 1543.0], [5000.0, 1436.0], [5300.0, 1334.0], [5200.0, 1657.0], [5500.0, 1161.0], [5600.0, 1112.0], [5400.0, 1234.0], [5800.0, 1069.0], [5700.0, 1133.0], [6000.0, 1237.0], [6100.0, 1136.0], [5900.0, 1122.0], [6300.0, 1174.0], [6200.0, 1227.0], [6500.0, 928.0], [6600.0, 944.0], [6400.0, 976.0], [6700.0, 852.0], [6900.0, 844.0], [6800.0, 867.0], [7000.0, 821.0], [7100.0, 928.0], [7300.0, 1043.0], [7200.0, 970.0], [7400.0, 928.0], [7600.0, 837.0], [7500.0, 847.0], [7700.0, 851.0], [7800.0, 853.0], [7900.0, 803.0], [8000.0, 811.0], [8100.0, 878.0], [8200.0, 911.0], [8300.0, 934.0], [8400.0, 829.0], [8500.0, 810.0], [8700.0, 636.0], [8600.0, 697.0], [8800.0, 655.0], [9100.0, 673.0], [8900.0, 614.0], [9000.0, 596.0], [9200.0, 765.0], [9600.0, 694.0], [9300.0, 760.0], [9500.0, 761.0], [9400.0, 800.0], [9700.0, 637.0], [9800.0, 656.0], [9900.0, 631.0], [10000.0, 897.0], [10100.0, 1011.0], [10200.0, 903.0], [10400.0, 925.0], [10500.0, 853.0], [10300.0, 897.0], [10700.0, 730.0], [10600.0, 717.0], [10800.0, 659.0], [10900.0, 715.0], [11000.0, 646.0], [11100.0, 496.0], [11200.0, 349.0], [11300.0, 216.0], [11500.0, 69.0], [11600.0, 45.0], [11400.0, 122.0], [11700.0, 31.0], [11800.0, 42.0], [12000.0, 15.0], [11900.0, 28.0], [12200.0, 24.0], [12100.0, 20.0], [12500.0, 20.0], [12400.0, 20.0], [12300.0, 22.0], [12700.0, 9.0], [12600.0, 17.0], [12800.0, 10.0], [12900.0, 10.0], [13000.0, 10.0], [13200.0, 10.0], [13300.0, 9.0], [13100.0, 9.0], [13500.0, 7.0], [13600.0, 5.0], [13400.0, 4.0], [13800.0, 8.0], [13700.0, 7.0], [13900.0, 9.0], [14000.0, 6.0], [14100.0, 5.0], [14200.0, 4.0], [14300.0, 5.0], [14400.0, 3.0], [14500.0, 3.0], [14600.0, 4.0], [14800.0, 1.0], [14700.0, 1.0], [14900.0, 3.0], [15200.0, 5.0], [15100.0, 2.0], [15300.0, 2.0], [15000.0, 1.0], [15500.0, 3.0], [15400.0, 1.0], [15600.0, 2.0], [15700.0, 1.0], [15800.0, 2.0], [15900.0, 1.0], [16300.0, 2.0], [16100.0, 1.0], [16000.0, 2.0], [17300.0, 1.0], [17200.0, 2.0], [16500.0, 3.0], [17400.0, 1.0], [16700.0, 1.0], [17000.0, 1.0], [18200.0, 2.0], [17600.0, 1.0], [17900.0, 1.0], [18300.0, 2.0], [17700.0, 1.0], [18000.0, 1.0], [18800.0, 2.0], [19000.0, 1.0], [19400.0, 1.0], [19300.0, 1.0], [20200.0, 2.0], [20100.0, 1.0], [19700.0, 1.0], [19600.0, 1.0], [19900.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 20200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2528.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 163680.0, "series": [{"data": [[0.0, 2528.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 100037.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 163680.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 72230.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2664.504323405515, "minX": 1.6841637E12, "maxY": 3000.0, "series": [{"data": [[1.68416388E12, 3000.0], [1.6841637E12, 3000.0], [1.684164E12, 2664.504323405515], [1.68416382E12, 3000.0], [1.68416394E12, 3000.0], [1.68416376E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684164E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.0, "maxY": 11473.0, "series": [{"data": [[2.0, 10965.0], [3.0, 11287.0], [4.0, 10947.0], [5.0, 10996.0], [6.0, 10868.0], [7.0, 10606.0], [8.0, 10835.0], [9.0, 10728.0], [10.0, 10754.0], [11.0, 10814.0], [12.0, 11211.0], [13.0, 10795.0], [14.0, 10756.0], [15.0, 10077.0], [16.0, 10818.0], [17.0, 10825.0], [18.0, 11230.0], [19.0, 11265.0], [20.0, 10366.0], [21.0, 10425.0], [22.0, 10539.0], [23.0, 11213.0], [24.0, 10090.0], [25.0, 9753.0], [26.0, 11318.0], [27.0, 10053.0], [31.0, 10623.333333333334], [33.0, 10183.333333333334], [35.0, 9730.0], [34.0, 9999.0], [37.0, 10063.0], [36.0, 10540.0], [39.0, 9585.0], [38.0, 11421.0], [41.0, 9358.0], [40.0, 10903.0], [43.0, 10641.0], [42.0, 10553.0], [45.0, 9672.0], [44.0, 10828.0], [47.0, 9841.0], [46.0, 10550.0], [49.0, 10105.0], [48.0, 9914.0], [51.0, 10198.5], [53.0, 10482.0], [52.0, 10218.0], [55.0, 9401.0], [54.0, 10797.0], [57.0, 10882.0], [56.0, 9127.0], [59.0, 9322.0], [58.0, 10541.0], [61.0, 9353.0], [60.0, 9620.0], [63.0, 10536.0], [62.0, 9641.0], [67.0, 10735.0], [66.0, 9616.0], [65.0, 9760.5], [71.0, 9596.0], [70.0, 9603.0], [69.0, 10543.0], [68.0, 9530.0], [75.0, 10765.0], [74.0, 9754.0], [73.0, 10266.0], [79.0, 10663.0], [78.0, 10324.0], [77.0, 10379.0], [76.0, 10126.0], [82.0, 9596.0], [81.0, 10896.0], [80.0, 11282.0], [86.0, 10244.0], [85.0, 9952.0], [84.0, 10752.5], [90.0, 9200.0], [89.0, 9068.0], [88.0, 10176.0], [95.0, 9055.0], [94.0, 11316.0], [93.0, 10525.5], [99.0, 10219.0], [98.0, 8826.0], [97.0, 9880.0], [96.0, 9815.0], [103.0, 9387.0], [102.0, 8909.0], [101.0, 10143.0], [100.0, 11011.0], [107.0, 9239.0], [106.0, 10175.0], [105.0, 9260.0], [104.0, 9256.0], [111.0, 11204.0], [110.0, 10391.0], [109.0, 9892.5], [114.0, 9913.0], [113.0, 9321.0], [112.0, 10827.0], [119.0, 10320.0], [118.0, 8005.0], [117.0, 9702.0], [116.0, 9089.0], [123.0, 10278.0], [122.0, 10439.0], [121.0, 8728.0], [120.0, 11001.0], [127.0, 10402.0], [126.0, 9524.0], [125.0, 9773.0], [124.0, 9927.0], [135.0, 10721.0], [134.0, 9174.0], [133.0, 8586.0], [132.0, 8811.0], [131.0, 8303.0], [130.0, 9840.0], [129.0, 10402.0], [128.0, 8796.0], [143.0, 9476.0], [142.0, 9197.0], [141.0, 7870.0], [140.0, 9167.0], [139.0, 9199.0], [138.0, 10344.0], [137.0, 10408.0], [136.0, 8675.0], [151.0, 10439.0], [150.0, 10292.0], [149.0, 8287.0], [148.0, 9336.0], [147.0, 10258.0], [146.0, 9508.0], [145.0, 8303.0], [144.0, 10446.0], [159.0, 10516.5], [157.0, 10359.0], [156.0, 9401.0], [155.0, 8469.0], [154.0, 9323.0], [153.0, 8202.0], [152.0, 10425.0], [167.0, 10137.0], [166.0, 9602.0], [165.0, 10856.0], [164.0, 10356.0], [163.0, 10167.0], [162.0, 8435.0], [161.0, 9491.0], [160.0, 9574.0], [174.0, 8190.0], [173.0, 11191.0], [172.0, 10351.0], [171.0, 10365.0], [170.0, 8757.0], [169.0, 10620.0], [168.0, 10136.0], [183.0, 9312.0], [182.0, 9159.0], [181.0, 10294.0], [180.0, 10102.0], [179.0, 8174.0], [178.0, 7901.0], [177.0, 9371.0], [176.0, 9391.5], [191.0, 8590.0], [190.0, 8481.0], [189.0, 10108.0], [186.0, 8308.0], [185.0, 10389.0], [184.0, 8290.0], [199.0, 9786.0], [198.0, 8319.0], [197.0, 7989.0], [196.0, 10023.0], [195.0, 10393.0], [194.0, 8029.0], [193.0, 9641.333333333334], [207.0, 8985.0], [206.0, 9273.0], [205.0, 9073.0], [204.0, 10209.0], [203.0, 10154.0], [202.0, 9951.5], [200.0, 9512.0], [215.0, 10817.0], [214.0, 10137.0], [213.0, 8883.0], [210.0, 9481.0], [209.0, 10928.0], [208.0, 9114.0], [223.0, 7924.0], [222.0, 7568.0], [220.0, 9886.0], [219.0, 8906.0], [218.0, 10756.0], [217.0, 7677.0], [216.0, 7801.0], [231.0, 10835.0], [230.0, 7720.0], [229.0, 10661.0], [228.0, 9709.0], [227.0, 10499.0], [226.0, 7806.0], [225.0, 9473.0], [224.0, 8065.0], [239.0, 10119.0], [238.0, 7183.0], [237.0, 7588.0], [236.0, 8681.0], [235.0, 7695.0], [234.0, 8312.0], [233.0, 8716.0], [232.0, 10499.0], [247.0, 7620.0], [246.0, 9523.0], [245.0, 7171.0], [244.0, 9367.0], [243.0, 10068.0], [242.0, 9623.0], [241.0, 10244.0], [240.0, 10052.0], [255.0, 10185.0], [253.0, 7141.0], [252.0, 7405.0], [251.0, 7190.0], [250.0, 9229.0], [249.0, 8408.0], [248.0, 9225.0], [270.0, 9466.0], [271.0, 9603.0], [269.0, 8852.0], [268.0, 7991.0], [267.0, 10104.0], [266.0, 9335.0], [265.0, 7807.0], [264.0, 9760.5], [262.0, 10191.0], [257.0, 7516.0], [256.0, 10651.0], [259.0, 6766.0], [258.0, 8430.0], [261.0, 6968.0], [260.0, 10831.0], [286.0, 10267.0], [287.0, 7594.0], [285.0, 7321.0], [284.0, 8211.0], [282.0, 9553.0], [281.0, 7566.0], [280.0, 8288.0], [279.0, 10155.0], [272.0, 8192.0], [275.0, 7477.0], [273.0, 9711.0], [278.0, 9744.0], [277.0, 10234.0], [276.0, 8121.0], [302.0, 9493.0], [303.0, 10543.0], [301.0, 10528.0], [300.0, 7717.0], [299.0, 9523.0], [298.0, 8885.0], [297.0, 7017.0], [296.0, 7531.0], [295.0, 10527.0], [289.0, 8418.0], [288.0, 7408.0], [291.0, 10320.0], [290.0, 10285.0], [294.0, 9494.0], [293.0, 8543.5], [317.0, 7330.0], [319.0, 7776.5], [316.0, 8078.0], [307.0, 8207.5], [305.0, 10372.5], [315.0, 8038.0], [314.0, 11009.0], [313.0, 10170.0], [312.0, 11264.0], [311.0, 7189.0], [310.0, 8258.0], [309.0, 9381.0], [335.0, 8041.0], [334.0, 10001.0], [324.0, 10243.0], [323.0, 7443.0], [322.0, 7359.0], [321.0, 8222.0], [320.0, 10250.0], [350.0, 8113.0], [351.0, 9447.0], [349.0, 11013.0], [348.0, 7011.0], [347.0, 6643.0], [346.0, 8949.0], [345.0, 8168.0], [344.0, 9979.666666666666], [342.0, 8271.666666666666], [336.0, 10223.0], [338.0, 9022.2], [337.0, 8974.5], [341.0, 6955.0], [340.0, 10802.0], [366.0, 10775.0], [367.0, 9546.0], [365.0, 7535.0], [364.0, 9620.0], [363.0, 7832.0], [362.0, 9603.0], [361.0, 8903.0], [360.0, 10195.0], [359.0, 7610.0], [353.0, 9098.0], [352.0, 8695.0], [355.0, 6421.0], [354.0, 7948.0], [358.0, 9552.0], [357.0, 11220.0], [356.0, 8816.0], [382.0, 7176.0], [383.0, 9480.0], [381.0, 9620.0], [380.0, 7613.0], [379.0, 6545.0], [378.0, 8816.0], [377.0, 11218.0], [376.0, 8042.0], [375.0, 7761.0], [369.0, 7672.0], [368.0, 6558.0], [371.0, 11001.0], [370.0, 7859.0], [374.0, 11363.0], [373.0, 8304.0], [398.0, 7864.0], [399.0, 9463.0], [396.0, 9919.0], [387.0, 7814.0], [386.0, 6876.0], [385.0, 6680.0], [384.0, 7891.0], [394.0, 8613.0], [393.0, 10025.0], [392.0, 8575.0], [391.0, 10924.0], [390.0, 9726.0], [389.0, 10352.0], [388.0, 8076.0], [414.0, 9822.0], [415.0, 6193.0], [413.0, 9241.0], [412.0, 7345.0], [411.0, 5701.0], [410.0, 6398.0], [409.0, 9742.0], [408.0, 9833.0], [407.0, 9766.0], [403.0, 5730.0], [402.0, 10379.333333333334], [406.0, 7278.0], [405.0, 6442.0], [404.0, 7554.0], [429.0, 7520.0], [431.0, 7294.0], [428.0, 7142.0], [419.0, 9230.0], [418.0, 7188.0], [417.0, 7000.0], [426.0, 8537.0], [425.0, 8143.0], [424.0, 6645.0], [423.0, 8526.0], [422.0, 7682.0], [421.0, 6415.0], [420.0, 9565.0], [446.0, 9381.0], [447.0, 9498.0], [445.0, 9035.0], [444.0, 7629.0], [443.0, 8171.0], [442.0, 9470.0], [441.0, 7515.0], [440.0, 9129.0], [439.0, 9376.0], [432.0, 8342.0], [434.0, 10154.0], [433.0, 11076.0], [438.0, 9755.0], [437.0, 5557.0], [436.0, 8999.0], [462.0, 8559.0], [463.0, 7165.0], [461.0, 10184.0], [460.0, 7567.0], [459.0, 8522.0], [458.0, 6328.0], [457.0, 7462.0], [456.0, 6291.0], [455.0, 9696.0], [449.0, 9526.0], [448.0, 7805.0], [451.0, 7984.0], [450.0, 6878.0], [454.0, 10098.0], [453.0, 9526.0], [452.0, 7594.0], [477.0, 7082.5], [475.0, 8253.0], [473.0, 9388.0], [472.0, 9359.0], [471.0, 9995.0], [465.0, 6545.0], [470.0, 9588.0], [469.0, 5647.0], [468.0, 8315.0], [467.0, 9577.0], [466.0, 5241.0], [494.0, 9506.0], [495.0, 7389.0], [492.0, 11004.0], [482.0, 5447.0], [481.0, 10203.0], [480.0, 7819.333333333333], [491.0, 8228.0], [489.0, 10512.0], [488.0, 10106.0], [487.0, 9594.0], [486.0, 5936.0], [485.0, 6257.0], [484.0, 7022.0], [510.0, 7316.0], [511.0, 10047.0], [509.0, 8269.0], [508.0, 5553.0], [507.0, 10415.5], [505.0, 11303.0], [504.0, 6930.0], [503.0, 10347.0], [497.0, 5968.0], [496.0, 7645.0], [499.0, 8429.0], [498.0, 10659.0], [502.0, 8771.0], [500.0, 5990.0], [538.0, 9227.0], [540.0, 9008.0], [536.0, 9003.0], [534.0, 5882.0], [530.0, 7915.5], [528.0, 9782.333333333334], [520.0, 7434.5], [516.0, 6358.0], [514.0, 6963.0], [512.0, 8173.0], [572.0, 7364.0], [574.0, 7680.0], [570.0, 11129.0], [568.0, 5498.0], [566.0, 5757.0], [564.0, 9274.0], [562.0, 7039.0], [560.0, 10857.0], [558.0, 5844.0], [546.0, 8739.0], [544.0, 7968.0], [550.0, 5828.0], [548.0, 6115.0], [556.0, 8868.0], [554.0, 9255.0], [552.0, 9217.0], [602.0, 10994.0], [600.0, 7725.0], [582.0, 10834.0], [580.0, 5460.0], [578.0, 10028.0], [598.0, 11061.0], [596.0, 10347.0], [594.0, 8370.0], [592.0, 7363.5], [590.0, 9349.0], [588.0, 8527.0], [586.0, 6035.0], [584.0, 5855.0], [636.0, 7633.0], [638.0, 5249.0], [634.0, 6450.0], [632.0, 9719.0], [630.0, 8573.5], [628.0, 5097.0], [626.0, 7440.5], [624.0, 10492.0], [622.0, 9376.0], [610.0, 8759.0], [608.0, 7170.0], [614.0, 7028.0], [612.0, 5128.0], [620.0, 9489.0], [618.0, 4928.0], [616.0, 6072.0], [668.0, 6356.0], [670.0, 6302.5], [666.0, 6982.0], [664.0, 7592.0], [662.0, 8525.0], [660.0, 7412.0], [658.0, 8200.0], [654.0, 6209.0], [640.0, 8258.5], [646.0, 6193.0], [642.0, 5411.0], [650.0, 8872.0], [648.0, 6650.0], [700.0, 5327.0], [702.0, 9005.0], [698.0, 7127.0], [696.0, 5296.0], [692.0, 10104.5], [690.0, 6423.0], [688.0, 7137.0], [682.0, 8497.0], [676.0, 6013.0], [680.0, 9050.75], [730.0, 6988.0], [734.0, 11261.0], [728.0, 7891.0], [710.0, 6195.0], [708.0, 7966.0], [704.0, 9604.5], [726.0, 8239.0], [724.0, 10706.0], [722.0, 6951.0], [720.0, 10324.0], [718.0, 10103.0], [716.0, 6366.0], [714.0, 8266.5], [712.0, 6371.0], [762.0, 5323.0], [766.0, 5033.0], [760.0, 6083.0], [742.0, 7866.0], [740.0, 7360.0], [738.0, 9427.0], [736.0, 6001.0], [758.0, 5017.0], [756.0, 10243.0], [754.0, 6188.0], [752.0, 7887.333333333333], [750.0, 6610.666666666667], [748.0, 7234.0], [746.0, 7994.0], [744.0, 8254.0], [796.0, 10708.0], [798.0, 4887.0], [794.0, 6172.0], [792.0, 7928.0], [790.0, 10590.0], [788.0, 8935.0], [786.0, 8612.0], [784.0, 6890.0], [782.0, 6582.0], [770.0, 4946.0], [768.0, 8047.0], [774.0, 11188.0], [772.0, 9039.0], [780.0, 5277.0], [778.0, 8944.0], [776.0, 10163.0], [828.0, 7821.0], [830.0, 8978.0], [826.0, 6405.5], [824.0, 10624.0], [822.0, 6809.0], [820.0, 10554.0], [816.0, 7560.5], [814.0, 10973.0], [802.0, 4831.0], [800.0, 6617.0], [806.0, 10450.0], [804.0, 7195.0], [812.0, 4767.0], [810.0, 6282.0], [808.0, 4425.0], [856.0, 5451.0], [860.0, 6086.0], [862.0, 5560.0], [858.0, 5694.0], [854.0, 7824.0], [852.0, 10990.0], [846.0, 7658.0], [834.0, 7462.0], [832.0, 9785.0], [838.0, 6000.0], [836.0, 6159.0], [844.0, 10423.0], [842.0, 4796.0], [840.0, 5744.0], [890.0, 6641.0], [886.0, 7553.0], [882.0, 7158.0], [880.0, 8149.666666666667], [876.0, 6284.0], [864.0, 6075.0], [874.0, 6713.0], [872.0, 9496.0], [868.0, 4687.0], [866.0, 6461.0], [924.0, 7671.0], [926.0, 5309.0], [922.0, 6609.0], [920.0, 3587.0], [918.0, 8671.0], [916.0, 10401.0], [912.0, 7660.0], [910.0, 8174.0], [902.0, 9327.333333333334], [896.0, 4886.0], [908.0, 8287.0], [906.0, 8589.0], [958.0, 6093.0], [952.0, 4372.0], [948.0, 5489.0], [946.0, 4363.0], [942.0, 7226.5], [938.0, 8121.0], [936.0, 6335.666666666667], [930.0, 6431.0], [982.0, 10992.0], [980.0, 11149.0], [978.0, 9949.0], [974.0, 7399.0], [972.0, 6447.8], [966.0, 9005.0], [964.0, 8438.0], [960.0, 10433.0], [1020.0, 9987.0], [1022.0, 4952.0], [1018.0, 8214.0], [1016.0, 9218.0], [1014.0, 7558.0], [1012.0, 5847.0], [1008.0, 6530.0], [1006.0, 9304.0], [1002.0, 4018.0], [1000.0, 5931.0], [1080.0, 6722.0], [1084.0, 2810.0], [1076.0, 6104.0], [1072.0, 10904.0], [1068.0, 10184.0], [1064.0, 9891.0], [1060.0, 6852.0], [1052.0, 3481.0], [1024.0, 6812.0], [1032.0, 6555.0], [1028.0, 3840.0], [1048.0, 4989.0], [1044.0, 8107.0], [1140.0, 10635.0], [1148.0, 9769.0], [1120.0, 8285.0], [1124.0, 9790.0], [1128.0, 7703.0], [1136.0, 4350.0], [1100.0, 9912.0], [1096.0, 3972.0], [1092.0, 2906.0], [1088.0, 9866.0], [1116.0, 4041.0], [1112.0, 3379.0], [1108.0, 6727.0], [1104.0, 9702.0], [1132.0, 2741.0], [1200.0, 4475.0], [1208.0, 7758.0], [1188.0, 3186.0], [1212.0, 3045.0], [1204.0, 4175.0], [1152.0, 5490.0], [1156.0, 6644.0], [1160.0, 4372.0], [1164.0, 9475.0], [1180.0, 8532.5], [1176.0, 9568.0], [1172.0, 4680.0], [1168.0, 9611.0], [1196.0, 6757.0], [1268.0, 10308.0], [1276.0, 7012.5], [1248.0, 10207.0], [1252.0, 5026.5], [1256.0, 8032.0], [1272.0, 9819.0], [1264.0, 10475.0], [1228.0, 2846.0], [1220.0, 3540.0], [1216.0, 9594.0], [1244.0, 8324.0], [1240.0, 3116.0], [1236.0, 3083.0], [1232.0, 7520.0], [1260.0, 9913.0], [1336.0, 7067.0], [1340.0, 8179.5], [1316.0, 6009.0], [1320.0, 8216.0], [1332.0, 4143.0], [1328.0, 4063.0], [1292.0, 3019.0], [1288.0, 2825.0], [1284.0, 6318.5], [1280.0, 8286.0], [1304.0, 7145.0], [1300.0, 10480.0], [1296.0, 7097.0], [1324.0, 6022.0], [1400.0, 11307.0], [1392.0, 4926.0], [1376.0, 6894.0], [1384.0, 4891.0], [1380.0, 8289.0], [1404.0, 7096.0], [1396.0, 4799.0], [1344.0, 5137.0], [1348.0, 7491.0], [1352.0, 10463.0], [1372.0, 7883.0], [1368.0, 4119.0], [1364.0, 6911.0], [1360.0, 3018.0], [1388.0, 2850.0], [1460.0, 10076.0], [1468.0, 9298.0], [1440.0, 5207.0], [1464.0, 7471.0], [1408.0, 3630.0], [1412.0, 7339.0], [1416.0, 2380.0], [1420.0, 6760.0], [1436.0, 3337.0], [1432.0, 7755.0], [1428.0, 1684.0], [1424.0, 6371.0], [1448.0, 3849.0], [1444.0, 5512.0], [1528.0, 7491.0], [1504.0, 6398.5], [1508.0, 3919.0], [1512.0, 7348.0], [1532.0, 2463.0], [1524.0, 10806.0], [1520.0, 2435.0], [1472.0, 6906.0], [1476.0, 5685.0], [1480.0, 6788.0], [1484.0, 3579.0], [1500.0, 5627.5], [1492.0, 2915.5], [1488.0, 8693.0], [1516.0, 9703.0], [1588.0, 2396.0], [1584.0, 5378.0], [1596.0, 6144.0], [1568.0, 10294.0], [1592.0, 1100.0], [1536.0, 1107.0], [1540.0, 1100.0], [1564.0, 6025.666666666667], [1560.0, 7235.0], [1556.0, 9866.0], [1552.0, 2850.0], [1572.0, 7523.0], [1648.0, 4246.0], [1660.0, 1789.0], [1632.0, 9734.0], [1636.0, 9694.0], [1652.0, 7601.0], [1600.0, 2594.0], [1604.0, 2097.0], [1608.0, 3059.0], [1628.0, 4068.0], [1624.0, 5932.0], [1616.0, 1388.0], [1644.0, 2211.0], [1640.0, 2351.0], [1664.0, 7963.0], [1724.0, 1973.5], [1712.0, 6397.333333333334], [1676.0, 8372.5], [1692.0, 2271.0], [1688.0, 1843.0], [1684.0, 1095.0], [1680.0, 1560.5], [1704.0, 1719.5], [1700.0, 4953.0], [1784.0, 1897.0], [1788.0, 10428.0], [1780.0, 2127.0], [1772.0, 2192.3333333333335], [1768.0, 6011.5], [1764.0, 2429.5], [1756.0, 3479.0], [1728.0, 6831.5], [1732.0, 10198.0], [1752.0, 5380.0], [1748.0, 2250.0], [1844.0, 1935.0], [1848.0, 1947.0], [1824.0, 1885.0], [1828.0, 1099.0], [1840.0, 2127.0], [1792.0, 9022.5], [1800.0, 5096.0], [1820.0, 9889.0], [1812.0, 5445.666666666667], [1808.0, 1890.0], [1836.0, 3503.0], [1904.0, 1752.0], [1912.0, 1831.0], [1892.0, 1106.0], [1888.0, 5431.0], [1908.0, 9975.0], [1856.0, 1094.0], [1860.0, 1117.0], [1864.0, 1359.0], [1868.0, 4001.0], [1872.0, 4197.0], [1896.0, 1101.0], [1972.0, 1684.0], [1980.0, 4722.0], [1952.0, 2485.0], [1956.0, 1100.0], [1976.0, 7616.0], [1932.0, 4895.0], [1928.0, 1098.0], [1924.0, 2044.0], [1948.0, 1615.0], [1944.0, 3128.0], [1940.0, 1796.5], [1936.0, 5747.0], [1964.0, 1805.0], [2044.0, 1684.0], [2036.0, 6765.0], [2016.0, 8008.0], [2024.0, 1094.0], [2020.0, 1106.0], [2028.0, 1153.0], [2040.0, 1650.5], [2032.0, 1531.0], [1984.0, 2284.5], [1988.0, 5221.0], [1996.0, 2846.0], [2008.0, 3375.0], [2004.0, 1117.0], [2000.0, 8742.0], [2160.0, 6698.0], [2152.0, 5165.0], [2168.0, 1095.0], [2112.0, 9967.0], [2120.0, 3723.0], [2128.0, 1438.0], [2144.0, 1257.0], [2048.0, 4643.0], [2056.0, 2292.0], [2064.0, 1530.0], [2072.0, 2508.0], [2104.0, 4837.0], [2088.0, 1840.0], [2080.0, 1133.0], [2288.0, 3312.0], [2240.0, 1411.0], [2248.0, 1141.0], [2256.0, 1292.0], [2296.0, 1226.0], [2280.0, 4259.0], [2200.0, 1099.0], [2192.0, 6659.0], [2184.0, 3197.0], [2176.0, 1100.0], [2232.0, 1315.0], [2216.0, 2893.5], [2416.0, 1106.0], [2408.0, 5342.5], [2368.0, 1232.6666666666667], [2384.0, 1257.0], [2424.0, 7386.0], [2400.0, 1275.0], [2328.0, 1115.0], [2320.0, 1286.0], [2312.0, 1226.0], [2360.0, 4357.6], [2352.0, 3012.0], [2344.0, 1339.0], [2336.0, 1113.0], [2544.0, 8791.0], [2496.0, 8426.0], [2504.0, 1801.0], [2512.0, 1101.0], [2536.0, 3005.0], [2528.0, 1606.0], [2448.0, 2139.0], [2432.0, 1586.5], [2464.0, 1369.0], [2672.0, 5410.0], [2624.0, 4197.25], [2632.0, 1122.0], [2640.0, 5951.0], [2648.0, 1411.5], [2680.0, 2518.0], [2664.0, 1108.0], [2656.0, 9946.0], [2560.0, 5915.0], [2568.0, 1097.0], [2584.0, 1096.0], [2616.0, 2885.5], [2608.0, 7681.0], [2600.0, 1481.5], [2592.0, 1126.0], [2800.0, 10295.0], [2752.0, 1096.0], [2760.0, 2441.5], [2768.0, 4386.0], [2776.0, 1627.0], [2808.0, 1871.0], [2784.0, 1537.0], [2712.0, 8614.0], [2704.0, 10218.0], [2696.0, 9326.0], [2688.0, 6519.0], [2744.0, 4829.0], [2736.0, 2110.0], [2728.0, 1944.0], [2720.0, 1093.0], [2928.0, 1307.5], [2936.0, 1297.6666666666667], [2880.0, 3011.5], [2888.0, 1171.0], [2896.0, 4517.333333333334], [2904.0, 1168.5], [2920.0, 1309.0], [2912.0, 1786.0], [2824.0, 6039.5], [2832.0, 2052.0], [2840.0, 2778.0], [2864.0, 1099.0], [2856.0, 3410.0], [2848.0, 4727.0], [2944.0, 3130.5], [2960.0, 1751.2857142857142], [3000.0, 2534.814038376037], [2968.0, 2125.555555555556], [2992.0, 2052.0], [2984.0, 1832.4444444444443], [2976.0, 1402.0], [2161.0, 10425.0], [2113.0, 4685.0], [2121.0, 1976.0], [2129.0, 5308.0], [2137.0, 6122.0], [2153.0, 9923.0], [2145.0, 1098.0], [2049.0, 10056.0], [2057.0, 1225.0], [2065.0, 1103.0], [2073.0, 1241.0], [2105.0, 1105.0], [2097.0, 1506.0], [2089.0, 2030.0], [2081.0, 1270.0], [2281.0, 1215.0], [2249.0, 2379.0], [2241.0, 1498.0], [2265.0, 5540.5], [2297.0, 1262.0], [2273.0, 4415.0], [2201.0, 1725.0], [2193.0, 1987.0], [2185.0, 1133.0], [2177.0, 10460.0], [2233.0, 2318.0], [2225.0, 1385.0], [2217.0, 8428.0], [2209.0, 9919.5], [2417.0, 1339.0], [2369.0, 10645.0], [2393.0, 4016.0], [2425.0, 3405.0], [2329.0, 2419.0], [2321.0, 6525.0], [2313.0, 1310.0], [2305.0, 4680.5], [2361.0, 8226.0], [2345.0, 1168.0], [2337.0, 1099.0], [2545.0, 1776.5], [2513.0, 2001.0], [2497.0, 1977.0], [2553.0, 3850.0], [2433.0, 3116.0], [2441.0, 1757.0], [2449.0, 3793.0], [2457.0, 3768.0], [2481.0, 1423.0], [2473.0, 1348.0], [2465.0, 6953.333333333333], [2681.0, 10172.0], [2633.0, 1109.0], [2625.0, 1777.0], [2641.0, 8915.5], [2649.0, 10114.0], [2665.0, 3033.0], [2657.0, 3129.0], [2569.0, 1091.0], [2577.0, 2860.833333333333], [2617.0, 3106.0], [2609.0, 2011.0], [2801.0, 1743.0], [2793.0, 2164.6], [2761.0, 3320.0], [2769.0, 2600.0], [2777.0, 1096.0], [2809.0, 2064.0], [2697.0, 3733.0], [2745.0, 1329.5], [2737.0, 1102.0], [2729.0, 1104.0], [2937.0, 1101.5], [2881.0, 1097.0], [2889.0, 5567.0], [2897.0, 832.75], [2905.0, 7442.0], [2929.0, 3182.0], [2921.0, 8949.0], [2913.0, 3453.2500000000005], [2817.0, 2064.0], [2825.0, 1961.0], [2833.0, 8046.0], [2841.0, 1162.0], [2873.0, 7607.5], [2865.0, 1806.0], [2857.0, 2839.0], [2849.0, 42.0], [2945.0, 1036.0], [2993.0, 2016.8], [2953.0, 8782.0], [2961.0, 1352.0], [2969.0, 4542.333333333333], [2985.0, 5033.0], [2977.0, 3474.25], [1081.0, 5447.0], [1085.0, 5118.0], [1073.0, 6821.0], [1037.0, 7646.5], [1033.0, 8416.0], [1025.0, 10097.0], [1069.0, 9971.0], [1065.0, 5679.0], [1061.0, 8031.0], [1057.0, 8818.0], [1053.0, 8698.0], [1049.0, 11266.0], [1045.0, 8565.0], [1141.0, 8257.0], [1149.0, 9902.0], [1125.0, 3517.0], [1129.0, 5468.0], [1137.0, 6782.0], [1101.0, 9804.0], [1097.0, 4791.0], [1093.0, 7777.0], [1089.0, 4378.0], [1117.0, 8932.0], [1113.0, 7535.0], [1109.0, 3184.0], [1105.0, 10486.0], [1133.0, 4564.0], [1209.0, 5991.0], [1185.0, 5914.333333333333], [1189.0, 2745.0], [1193.0, 6883.5], [1213.0, 4421.0], [1205.0, 3371.0], [1201.0, 11151.0], [1177.0, 3357.0], [1153.0, 3018.0], [1157.0, 6562.0], [1161.0, 6080.0], [1165.0, 5913.0], [1173.0, 8365.0], [1169.0, 6961.0], [1197.0, 8644.0], [1269.0, 2676.0], [1257.0, 5908.0], [1273.0, 3820.0], [1249.0, 2385.0], [1253.0, 3503.0], [1265.0, 4506.0], [1229.0, 8389.0], [1225.0, 9651.0], [1221.0, 3009.0], [1217.0, 9233.0], [1245.0, 9682.0], [1241.0, 5025.0], [1237.0, 7448.0], [1261.0, 6920.0], [1337.0, 7223.0], [1341.0, 10157.0], [1317.0, 6636.0], [1321.0, 4582.0], [1333.0, 9521.0], [1329.0, 3827.0], [1293.0, 9352.0], [1289.0, 5197.0], [1285.0, 7192.0], [1281.0, 9842.0], [1305.0, 7907.0], [1301.0, 5456.0], [1297.0, 7052.0], [1325.0, 4781.0], [1401.0, 2492.0], [1377.0, 4494.0], [1381.0, 10812.0], [1385.0, 7928.0], [1405.0, 2799.0], [1397.0, 2804.0], [1393.0, 5037.0], [1345.0, 7932.0], [1349.0, 5104.0], [1353.0, 3168.0], [1357.0, 3668.5], [1373.0, 8514.0], [1369.0, 5108.0], [1365.0, 7871.0], [1361.0, 4178.0], [1389.0, 2724.0], [1465.0, 9970.0], [1469.0, 10691.0], [1441.0, 3367.0], [1445.0, 4803.0], [1449.0, 8676.0], [1457.0, 3067.5], [1421.0, 4998.0], [1417.0, 2817.0], [1413.0, 2830.0], [1409.0, 4844.0], [1437.0, 7568.0], [1433.0, 4306.0], [1429.0, 10770.0], [1425.0, 10353.0], [1453.0, 4904.5], [1529.0, 9735.0], [1505.0, 5199.0], [1509.0, 4530.0], [1513.0, 1965.0], [1533.0, 1915.0], [1525.0, 2484.0], [1521.0, 7675.0], [1501.0, 2347.0], [1473.0, 10075.0], [1477.0, 3283.0], [1481.0, 2471.0], [1485.0, 10373.0], [1497.0, 4943.333333333333], [1493.0, 9932.0], [1489.0, 8394.0], [1517.0, 7012.0], [1589.0, 5565.0], [1597.0, 4070.0], [1569.0, 10235.0], [1573.0, 7767.0], [1577.0, 3744.0], [1593.0, 4974.0], [1545.0, 5520.666666666666], [1565.0, 3956.0], [1561.0, 9723.0], [1557.0, 5411.0], [1553.0, 9704.0], [1581.0, 3611.0], [1653.0, 8371.0], [1649.0, 9567.0], [1661.0, 1675.0], [1633.0, 1097.0], [1637.0, 8452.0], [1657.0, 2165.0], [1601.0, 1105.0], [1605.0, 4423.0], [1609.0, 4947.0], [1613.0, 8765.5], [1629.0, 2116.0], [1625.0, 2064.0], [1621.0, 4435.5], [1617.0, 1361.0], [1645.0, 1101.0], [1641.0, 3253.0], [1721.0, 2378.0], [1725.0, 1127.0], [1717.0, 1643.0], [1709.0, 3143.6666666666665], [1697.0, 5462.0], [1673.0, 9729.0], [1689.0, 6632.5], [1789.0, 10212.0], [1769.0, 3439.0], [1785.0, 1096.0], [1781.0, 7188.0], [1777.0, 5920.0], [1749.0, 1134.0], [1745.0, 4098.5], [1773.0, 1914.0], [1845.0, 2159.0], [1841.0, 1333.0], [1825.0, 1938.0], [1829.0, 1769.0], [1849.0, 6135.5], [1793.0, 1096.0], [1797.0, 2703.5], [1805.0, 2280.0], [1817.0, 4013.0], [1813.0, 2346.0], [1809.0, 1147.0], [1837.0, 1874.0], [1833.0, 4891.0], [1905.0, 1447.0], [1917.0, 4188.5], [1889.0, 3490.4], [1909.0, 1429.0], [1861.0, 3034.0], [1865.0, 1763.0], [1869.0, 1100.0], [1881.0, 7998.0], [1901.0, 2818.6666666666665], [1893.0, 3260.0], [1973.0, 1095.0], [1977.0, 3931.0], [1961.0, 2095.0], [1953.0, 1104.0], [1957.0, 1972.0], [1969.0, 6580.0], [1933.0, 1714.0], [1929.0, 2585.0], [1921.0, 5089.0], [1949.0, 4380.0], [1945.0, 3540.0], [1965.0, 1427.0], [2045.0, 2426.0], [2033.0, 7962.0], [2025.0, 2184.0], [2029.0, 1283.0], [2017.0, 1331.0], [2021.0, 2264.0], [2041.0, 2790.0], [2037.0, 2242.0], [1985.0, 2740.0], [1989.0, 2191.0], [1993.0, 3604.5], [1997.0, 1108.0], [2013.0, 8729.5], [2009.0, 2300.0], [2005.0, 1300.0], [2001.0, 1380.0], [2162.0, 1254.0], [2170.0, 1482.5], [2114.0, 10039.0], [2122.0, 1796.0], [2130.0, 1484.0], [2138.0, 2621.0], [2154.0, 9868.0], [2146.0, 1255.0], [2058.0, 1211.0], [2066.0, 1414.0], [2074.0, 1245.0], [2106.0, 1099.0], [2098.0, 5189.0], [2090.0, 6994.0], [2082.0, 1418.0], [2290.0, 3883.5], [2250.0, 1245.0], [2242.0, 1099.0], [2298.0, 10936.0], [2282.0, 1299.0], [2274.0, 1543.0], [2202.0, 1274.0], [2186.0, 1313.0], [2178.0, 2248.0], [2234.0, 1243.0], [2218.0, 1304.0], [2210.0, 1477.0], [2410.0, 5616.5], [2370.0, 1249.0], [2378.0, 1129.6666666666667], [2386.0, 4363.0], [2394.0, 3513.0], [2402.0, 1916.5], [2330.0, 1203.0], [2322.0, 7522.0], [2314.0, 1344.0], [2306.0, 1283.0], [2362.0, 1153.0], [2554.0, 1317.0], [2506.0, 1110.5], [2522.0, 2428.3333333333335], [2514.0, 3215.0], [2546.0, 1097.0], [2538.0, 7087.5], [2530.0, 1579.5], [2450.0, 2186.0], [2434.0, 1274.0], [2490.0, 4269.0], [2482.0, 5418.0], [2474.0, 2230.0], [2674.0, 1359.5], [2642.0, 1409.0], [2650.0, 6907.0], [2682.0, 1178.0], [2658.0, 3253.0], [2570.0, 2868.0], [2578.0, 8348.0], [2602.0, 1911.5], [2802.0, 1104.0], [2794.0, 2014.0], [2754.0, 4236.0], [2762.0, 3733.0], [2810.0, 3294.5], [2714.0, 2110.0], [2706.0, 3110.0], [2698.0, 5176.0], [2738.0, 1989.0], [2730.0, 4008.0], [2722.0, 5221.5], [2922.0, 1521.0], [2882.0, 1482.0], [2890.0, 1426.0], [2898.0, 8114.5], [2906.0, 1102.4], [2930.0, 5036.5], [2914.0, 1099.0], [2818.0, 8134.0], [2826.0, 2924.5], [2834.0, 2589.0], [2842.0, 4446.0], [2874.0, 1638.0], [2866.0, 4696.0], [2858.0, 4381.0], [2850.0, 1591.0], [2946.0, 1189.0], [2954.0, 4407.25], [2962.0, 3280.5], [2970.0, 3090.75], [2994.0, 1284.0], [2986.0, 777.0], [2171.0, 1216.0], [2115.0, 1094.0], [2123.0, 1373.0], [2131.0, 10933.0], [2139.0, 2479.0], [2163.0, 1098.0], [2155.0, 2210.0], [2147.0, 7752.0], [2051.0, 2813.5], [2059.0, 1140.0], [2067.0, 9700.0], [2075.0, 10053.0], [2107.0, 1094.0], [2099.0, 3022.0], [2091.0, 3031.0], [2083.0, 9203.0], [2291.0, 1212.0], [2283.0, 6109.0], [2243.0, 8128.0], [2251.0, 2302.0], [2259.0, 1959.0], [2267.0, 1574.5], [2275.0, 1359.0], [2203.0, 1407.0], [2179.0, 1314.0], [2235.0, 1113.0], [2227.0, 5593.5], [2219.0, 1105.0], [2211.0, 2047.0], [2403.0, 3000.0], [2411.0, 1236.0], [2427.0, 2623.0], [2371.0, 1098.0], [2379.0, 9897.0], [2331.0, 1101.0], [2323.0, 2058.0], [2307.0, 1100.0], [2363.0, 1110.0], [2355.0, 2278.6666666666665], [2539.0, 5710.5], [2547.0, 1315.0], [2555.0, 2775.0], [2515.0, 5481.0], [2499.0, 3840.0], [2435.0, 2373.0], [2443.0, 1940.0], [2451.0, 8433.0], [2459.0, 1240.0], [2475.0, 2326.0], [2675.0, 1153.0], [2683.0, 10338.0], [2627.0, 3163.5], [2635.0, 5315.0], [2659.0, 1520.0], [2563.0, 3035.3333333333335], [2571.0, 9395.0], [2579.0, 1592.0], [2587.0, 4698.333333333333], [2619.0, 4763.333333333333], [2611.0, 1233.0], [2603.0, 9782.0], [2595.0, 5380.666666666667], [2795.0, 2377.0], [2811.0, 1112.0], [2755.0, 5567.0], [2763.0, 2374.0], [2771.0, 4309.5], [2779.0, 1522.0], [2787.0, 5783.666666666666], [2715.0, 4415.5], [2691.0, 3548.6666666666665], [2747.0, 1791.5], [2739.0, 1175.0], [2723.0, 1194.6666666666667], [2931.0, 4704.0], [2883.0, 1711.0], [2891.0, 1935.0], [2899.0, 2605.0], [2907.0, 1096.0], [2939.0, 3211.3333333333335], [2923.0, 2888.0], [2915.0, 770.5], [2819.0, 1758.2], [2827.0, 3208.0], [2835.0, 1100.0], [2875.0, 3023.0], [2867.0, 1945.8], [2859.0, 1576.0], [2851.0, 4493.0], [2955.0, 4118.888888888888], [2947.0, 1131.0], [2963.0, 1355.0], [2971.0, 1716.0], [2995.0, 1099.0], [2987.0, 5942.25], [2979.0, 3093.7999999999997], [543.0, 7601.0], [541.0, 9986.0], [539.0, 11237.0], [537.0, 7170.0], [533.0, 7819.0], [525.0, 7195.0], [515.0, 8627.0], [513.0, 9974.0], [573.0, 11148.0], [575.0, 10377.0], [571.0, 9436.0], [569.0, 7849.0], [567.0, 7215.0], [565.0, 10011.0], [563.0, 9107.0], [561.0, 9979.0], [559.0, 8582.0], [547.0, 5715.0], [545.0, 5708.0], [551.0, 11212.0], [549.0, 7171.0], [557.0, 6349.0], [553.0, 9989.0], [605.0, 6743.0], [607.0, 8407.5], [603.0, 10407.0], [601.0, 9003.0], [599.0, 6310.0], [597.0, 10769.0], [593.0, 7392.0], [589.0, 7179.0], [583.0, 7829.0], [581.0, 7821.0], [579.0, 10935.0], [577.0, 6505.5], [585.0, 9089.0], [615.0, 5553.0], [635.0, 7549.0], [637.0, 6728.0], [633.0, 6052.0], [613.0, 7520.0], [611.0, 6137.0], [609.0, 8296.0], [631.0, 7401.0], [627.0, 6483.0], [623.0, 6348.0], [621.0, 6561.0], [619.0, 9467.0], [617.0, 5707.0], [667.0, 8952.0], [665.0, 5325.0], [663.0, 8970.0], [659.0, 7364.0], [657.0, 7791.5], [655.0, 5370.0], [653.0, 9764.0], [651.0, 7489.0], [647.0, 10682.0], [641.0, 7299.0], [699.0, 7010.0], [701.0, 6518.0], [697.0, 9663.0], [675.0, 6179.0], [673.0, 9361.666666666666], [695.0, 8663.0], [693.0, 10287.0], [689.0, 6597.0], [687.0, 7355.0], [685.0, 6296.0], [683.0, 9513.0], [681.0, 9864.0], [731.0, 4956.0], [733.0, 8586.5], [729.0, 6041.0], [711.0, 7164.0], [709.0, 7216.0], [707.0, 8131.0], [705.0, 5918.0], [727.0, 10124.0], [725.0, 6786.0], [723.0, 5290.0], [721.0, 9456.0], [719.0, 10812.0], [717.0, 11163.0], [715.0, 9963.0], [765.0, 8417.5], [767.0, 8155.0], [763.0, 7963.0], [761.0, 8662.0], [759.0, 8133.0], [757.0, 8384.0], [755.0, 6744.0], [753.0, 10394.0], [745.0, 7341.0], [743.0, 10398.0], [741.0, 6708.0], [797.0, 8040.0], [799.0, 9458.0], [795.0, 6021.0], [793.0, 9110.0], [791.0, 9054.0], [789.0, 4601.0], [787.0, 10589.0], [785.0, 5870.0], [783.0, 5393.0], [771.0, 7631.0], [769.0, 4617.0], [775.0, 8715.0], [773.0, 5020.0], [781.0, 5811.0], [779.0, 8044.0], [777.0, 6120.0], [829.0, 5861.0], [831.0, 8872.0], [827.0, 10865.0], [807.0, 3776.0], [805.0, 8934.0], [801.0, 4801.0], [823.0, 9692.0], [821.0, 6704.0], [819.0, 6453.5], [817.0, 10429.0], [813.0, 8882.0], [811.0, 4832.0], [809.0, 6657.0], [861.0, 7706.0], [863.0, 7394.0], [859.0, 7804.0], [857.0, 9924.0], [853.0, 5076.0], [851.0, 8100.5], [849.0, 10408.0], [847.0, 8815.0], [833.0, 7546.0], [837.0, 7825.0], [835.0, 7851.0], [845.0, 6707.0], [843.0, 10185.0], [841.0, 4582.0], [889.0, 7065.5], [893.0, 5426.0], [895.0, 7292.666666666667], [891.0, 8105.0], [887.0, 6331.0], [885.0, 5264.0], [877.0, 4826.5], [873.0, 9452.0], [871.0, 8129.0], [869.0, 9337.0], [867.0, 4738.0], [865.0, 6042.0], [925.0, 8051.0], [927.0, 10382.0], [923.0, 6576.0], [919.0, 5214.0], [917.0, 4523.0], [915.0, 9163.333333333334], [911.0, 9260.0], [909.0, 5103.0], [903.0, 6474.0], [899.0, 6925.0], [897.0, 6039.0], [955.0, 9956.666666666666], [951.0, 8713.0], [949.0, 5570.0], [945.0, 6394.5], [943.0, 6781.0], [939.0, 9431.0], [937.0, 8122.0], [933.0, 7209.666666666667], [929.0, 6853.5], [991.0, 7020.25], [987.0, 9422.5], [983.0, 7153.0], [981.0, 10119.0], [979.0, 5950.0], [977.0, 9237.5], [975.0, 6191.0], [973.0, 6707.0], [967.0, 7145.0], [965.0, 6886.0], [963.0, 6948.0], [961.0, 7512.5], [1021.0, 3688.0], [1023.0, 4424.0], [1019.0, 9451.0], [1017.0, 4945.0], [1015.0, 6999.0], [1013.0, 3841.0], [1011.0, 8435.0], [1007.0, 6960.0], [993.0, 7716.0], [999.0, 8190.5], [997.0, 10717.0], [1005.0, 8267.0], [1003.0, 5553.0], [1001.0, 4090.0], [1082.0, 4478.0], [1086.0, 9640.0], [1078.0, 7153.5], [1074.0, 7897.0], [1070.0, 7586.0], [1066.0, 9932.0], [1062.0, 5028.0], [1058.0, 5039.0], [1054.0, 10163.0], [1030.0, 7709.0], [1026.0, 5951.0], [1038.0, 5185.0], [1034.0, 3756.0], [1050.0, 3796.0], [1046.0, 5229.0], [1042.0, 5723.333333333333], [1142.0, 3352.0], [1138.0, 7474.0], [1150.0, 6564.0], [1122.0, 5799.5], [1126.0, 7845.0], [1130.0, 4321.0], [1146.0, 6001.0], [1102.0, 5781.0], [1098.0, 8213.0], [1094.0, 4837.0], [1090.0, 3894.0], [1118.0, 8585.0], [1114.0, 3151.0], [1110.0, 10892.0], [1134.0, 9573.0], [1210.0, 6884.0], [1214.0, 8292.0], [1186.0, 3145.0], [1194.0, 2643.0], [1190.0, 6235.0], [1206.0, 9540.0], [1202.0, 10082.0], [1182.0, 4709.5], [1158.0, 6069.0], [1162.0, 4163.0], [1166.0, 9827.0], [1178.0, 9927.0], [1174.0, 4351.0], [1170.0, 5420.0], [1198.0, 4313.0], [1274.0, 9198.0], [1278.0, 6601.0], [1250.0, 9763.0], [1258.0, 3998.0], [1270.0, 6343.0], [1230.0, 10087.0], [1226.0, 6337.0], [1222.0, 9798.0], [1218.0, 9568.0], [1246.0, 6505.0], [1242.0, 7184.0], [1238.0, 5444.0], [1234.0, 8901.0], [1262.0, 7932.0], [1330.0, 6638.0], [1342.0, 2639.0], [1314.0, 5760.5], [1322.0, 6451.0], [1338.0, 7742.0], [1294.0, 2725.0], [1290.0, 10292.0], [1286.0, 9850.0], [1282.0, 10255.0], [1310.0, 7996.0], [1306.0, 3017.0], [1302.0, 10338.0], [1298.0, 10447.0], [1326.0, 11473.0], [1398.0, 8897.0], [1406.0, 10029.0], [1378.0, 8220.0], [1402.0, 3122.0], [1394.0, 3461.0], [1374.0, 2754.0], [1346.0, 2912.0], [1350.0, 9852.0], [1358.0, 9160.0], [1354.0, 7852.0], [1370.0, 3509.0], [1362.0, 5504.0], [1390.0, 10178.0], [1458.0, 4549.0], [1470.0, 9701.0], [1442.0, 4413.0], [1462.0, 10353.0], [1438.0, 4959.0], [1410.0, 4414.0], [1414.0, 4574.0], [1422.0, 10121.0], [1434.0, 10227.0], [1430.0, 7826.0], [1426.0, 10128.0], [1454.0, 7826.0], [1450.0, 4386.0], [1530.0, 9592.0], [1534.0, 5630.0], [1506.0, 2505.0], [1510.0, 4054.0], [1514.0, 2438.0], [1526.0, 9640.0], [1522.0, 6403.0], [1502.0, 2532.0], [1474.0, 10249.0], [1478.0, 2688.0], [1482.0, 2474.0], [1486.0, 4917.0], [1498.0, 2257.0], [1494.0, 9542.0], [1490.0, 2333.0], [1518.0, 7314.0], [1550.0, 5291.0], [1594.0, 1380.0], [1570.0, 2864.0], [1586.0, 4243.0], [1566.0, 4171.0], [1538.0, 3333.5], [1542.0, 3218.0], [1546.0, 1097.0], [1558.0, 2943.0], [1554.0, 4365.0], [1582.0, 2488.0], [1578.0, 4411.0], [1574.0, 1095.0], [1650.0, 1094.0], [1658.0, 9859.0], [1638.0, 5332.0], [1654.0, 2027.0], [1630.0, 7692.0], [1602.0, 1095.0], [1606.0, 10979.0], [1614.0, 1096.0], [1610.0, 10129.0], [1626.0, 7599.0], [1622.0, 3210.0], [1618.0, 1102.0], [1646.0, 1097.0], [1642.0, 3234.0], [1678.0, 1984.0], [1726.0, 6829.0], [1722.0, 6368.5], [1718.0, 4056.0], [1674.0, 2105.0], [1670.0, 5271.25], [1666.0, 5432.0], [1686.0, 1727.0], [1682.0, 1108.0], [1706.0, 3676.5], [1702.0, 4978.5], [1790.0, 10086.0], [1762.0, 2531.0], [1730.0, 1518.5], [1734.0, 7659.333333333333], [1742.0, 6033.333333333334], [1738.0, 6062.0], [1750.0, 6051.5], [1746.0, 1134.0], [1842.0, 1902.0], [1850.0, 1105.0], [1826.0, 7801.0], [1846.0, 1098.0], [1822.0, 1210.5], [1794.0, 4144.0], [1798.0, 10300.0], [1806.0, 4777.0], [1802.0, 6171.0], [1814.0, 1887.0], [1838.0, 1729.0], [1834.0, 1878.0], [1830.0, 1104.0], [1866.0, 4057.0], [1914.0, 4708.0], [1910.0, 10491.0], [1906.0, 2035.0], [1882.0, 1100.0], [1858.0, 8505.0], [1862.0, 1302.0], [1870.0, 7174.0], [1878.0, 6535.333333333333], [1874.0, 1961.5], [1902.0, 1096.0], [1898.0, 1998.5], [1894.0, 9053.0], [1978.0, 3825.0], [1982.0, 6966.0], [1954.0, 2221.0], [1962.0, 2032.0], [1958.0, 1375.0], [1974.0, 7733.0], [1970.0, 7652.0], [1934.0, 1759.0], [1930.0, 3827.0], [1926.0, 1749.0], [1950.0, 1683.0], [1946.0, 2837.0], [1942.0, 1214.5], [1938.0, 8581.0], [1966.0, 1273.0], [2042.0, 1435.0], [2046.0, 2395.0], [2018.0, 1224.0], [2030.0, 1096.0], [2038.0, 2349.0], [2034.0, 4827.0], [2014.0, 11027.0], [1986.0, 10814.0], [1994.0, 2416.0], [1998.0, 3700.0], [2010.0, 2608.0], [2006.0, 2442.0], [2002.0, 1145.0], [2172.0, 1279.0], [2116.0, 2050.0], [2124.0, 3950.0], [2132.0, 2233.0], [2140.0, 4006.0], [2164.0, 10056.0], [2156.0, 10479.0], [2148.0, 7655.0], [2052.0, 10985.0], [2060.0, 1791.0], [2068.0, 1292.0], [2076.0, 1457.0], [2108.0, 1513.0], [2092.0, 8601.0], [2084.0, 3768.0], [2300.0, 6318.0], [2284.0, 2268.0], [2244.0, 9466.0], [2252.0, 1369.0], [2260.0, 1365.3333333333333], [2268.0, 1097.0], [2276.0, 9170.0], [2204.0, 1092.0], [2196.0, 1568.3333333333333], [2188.0, 1494.5], [2236.0, 3437.0], [2220.0, 2419.0], [2212.0, 1105.0], [2420.0, 2486.333333333333], [2372.0, 1569.5], [2396.0, 5606.5], [2428.0, 2345.0], [2412.0, 1100.0], [2332.0, 1118.0], [2316.0, 5813.0], [2308.0, 7221.0], [2364.0, 3929.0], [2348.0, 3382.3333333333335], [2340.0, 1190.3333333333333], [2540.0, 1461.0], [2556.0, 6894.0], [2500.0, 2472.5], [2508.0, 5578.0], [2524.0, 1135.5], [2548.0, 8946.0], [2532.0, 5302.333333333333], [2460.0, 1092.0], [2452.0, 2155.0], [2436.0, 1314.0], [2492.0, 1201.6666666666667], [2468.0, 1304.3333333333333], [2676.0, 1743.0], [2684.0, 10242.0], [2628.0, 1578.0], [2636.0, 6891.333333333333], [2668.0, 4419.0], [2660.0, 1914.5], [2620.0, 2658.0], [2564.0, 1760.0], [2572.0, 1095.0], [2580.0, 3401.0], [2612.0, 1591.0], [2604.0, 8398.0], [2796.0, 4926.0], [2764.0, 10562.0], [2772.0, 1430.0], [2812.0, 1111.0], [2716.0, 1096.0], [2708.0, 2044.0], [2700.0, 2497.0], [2692.0, 8145.0], [2748.0, 1092.0], [2740.0, 1100.0], [2732.0, 1739.3333333333333], [2724.0, 1291.0], [2932.0, 1103.0], [2940.0, 1389.0], [2884.0, 2210.0], [2892.0, 1736.3333333333333], [2900.0, 1516.0], [2908.0, 1157.0], [2924.0, 981.5], [2916.0, 4854.5], [2820.0, 2023.6666666666667], [2828.0, 1103.0], [2836.0, 2834.2], [2844.0, 1423.6666666666667], [2876.0, 1099.0], [2868.0, 1516.5], [2860.0, 5311.0], [2852.0, 1735.0], [2956.0, 1097.0], [2964.0, 2653.5], [2972.0, 2632.6], [2996.0, 2012.6], [2988.0, 790.3333333333333], [2980.0, 931.4], [2165.0, 1733.0], [2149.0, 1121.0], [2117.0, 1104.0], [2125.0, 1709.0], [2141.0, 1262.0], [2173.0, 1245.0], [2157.0, 1094.0], [2053.0, 4917.0], [2061.0, 6792.0], [2069.0, 1102.0], [2077.0, 7873.0], [2109.0, 1108.0], [2101.0, 3209.5], [2085.0, 1099.0], [2285.0, 1231.0], [2293.0, 4929.5], [2245.0, 2078.0], [2253.0, 1944.0], [2189.0, 1106.0], [2181.0, 2217.0], [2237.0, 1154.0], [2229.0, 5690.0], [2221.0, 1299.0], [2213.0, 2378.0], [2405.0, 1127.0], [2381.0, 1746.3333333333333], [2389.0, 7725.0], [2397.0, 1098.0], [2413.0, 7366.0], [2333.0, 1927.0], [2317.0, 1172.0], [2309.0, 1106.0], [2365.0, 1144.0], [2341.0, 5409.0], [2541.0, 1094.0], [2517.0, 1370.0], [2557.0, 2093.0], [2549.0, 6359.0], [2445.0, 5903.0], [2453.0, 4932.0], [2461.0, 4144.0], [2493.0, 1168.0], [2485.0, 2935.0], [2477.0, 2303.0], [2469.0, 1110.0], [2685.0, 2034.0], [2637.0, 2531.0], [2645.0, 4273.333333333334], [2653.0, 1293.0], [2677.0, 1150.0], [2565.0, 1105.0], [2573.0, 1863.0], [2589.0, 1102.0], [2605.0, 1370.0], [2597.0, 2210.5], [2805.0, 4669.333333333334], [2797.0, 1496.0], [2757.0, 2964.5], [2765.0, 1108.0], [2781.0, 9185.0], [2813.0, 4299.0], [2789.0, 5833.5], [2717.0, 1610.0], [2709.0, 2350.0], [2701.0, 10207.0], [2693.0, 1563.0], [2749.0, 1922.0], [2741.0, 1125.0], [2733.0, 1109.0], [2725.0, 1481.0], [2933.0, 2503.2857142857147], [2885.0, 1248.5], [2893.0, 1104.5], [2909.0, 3017.25], [2941.0, 1227.6666666666667], [2925.0, 4625.0], [2917.0, 3250.416666666667], [2829.0, 1564.5], [2837.0, 3054.6666666666665], [2845.0, 1096.0], [2877.0, 1397.0], [2869.0, 4320.0], [2861.0, 1635.0], [2853.0, 1096.0], [2949.0, 2908.2499999999995], [2997.0, 645.0], [2957.0, 1336.0], [2965.0, 2144.777777777778], [2973.0, 1236.0], [2989.0, 3235.0], [2981.0, 1034.4], [1083.0, 5577.0], [1087.0, 8575.0], [1079.0, 5677.0], [1075.0, 8129.0], [1071.0, 9941.0], [1067.0, 6068.0], [1063.0, 8379.0], [1059.0, 5268.0], [1055.0, 6472.0], [1031.0, 8090.0], [1027.0, 8250.0], [1039.0, 8712.0], [1035.0, 10803.0], [1051.0, 3821.0], [1047.0, 10228.0], [1043.0, 5985.0], [1143.0, 10440.0], [1139.0, 10425.0], [1151.0, 8476.0], [1123.0, 9381.0], [1127.0, 5586.0], [1131.0, 7537.0], [1147.0, 7946.0], [1103.0, 9126.0], [1099.0, 7890.0], [1091.0, 5626.0], [1119.0, 5362.0], [1115.0, 10353.0], [1111.0, 5224.0], [1107.0, 8321.0], [1135.0, 10484.0], [1211.0, 8330.0], [1215.0, 8159.0], [1187.0, 8352.0], [1191.0, 4967.0], [1207.0, 10079.0], [1203.0, 2791.0], [1155.0, 7084.0], [1159.0, 3475.0], [1163.0, 4478.0], [1167.0, 9528.0], [1175.0, 7813.0], [1171.0, 2251.0], [1199.0, 5276.0], [1231.0, 4123.0], [1271.0, 4748.0], [1255.0, 5150.0], [1267.0, 3509.0], [1227.0, 5097.0], [1223.0, 5163.0], [1219.0, 8254.0], [1247.0, 6165.0], [1243.0, 9118.0], [1239.0, 4166.0], [1235.0, 6101.0], [1263.0, 2755.0], [1259.0, 7772.0], [1331.0, 6523.0], [1343.0, 8018.0], [1319.0, 7639.0], [1323.0, 3804.0], [1335.0, 3700.5], [1295.0, 3069.0], [1291.0, 5205.0], [1287.0, 3646.0], [1299.0, 9943.0], [1327.0, 10328.0], [1403.0, 10093.0], [1407.0, 8286.0], [1379.0, 4724.0], [1383.0, 2860.0], [1387.0, 5556.5], [1399.0, 2377.0], [1395.0, 3833.0], [1375.0, 3727.0], [1347.0, 4063.0], [1351.0, 2170.0], [1355.0, 2866.0], [1359.0, 2831.0], [1371.0, 2880.0], [1367.0, 6841.0], [1363.0, 9932.0], [1391.0, 9776.0], [1463.0, 7817.0], [1459.0, 5309.0], [1471.0, 6566.0], [1443.0, 3526.0], [1447.0, 9826.0], [1451.0, 2014.0], [1467.0, 9601.5], [1423.0, 2660.0], [1419.0, 8967.5], [1415.0, 2759.0], [1439.0, 2508.0], [1435.0, 6645.0], [1431.0, 9028.0], [1427.0, 9410.0], [1455.0, 2604.0], [1531.0, 6719.0], [1535.0, 2157.0], [1507.0, 8442.0], [1511.0, 10187.0], [1515.0, 10370.0], [1527.0, 10746.0], [1523.0, 3926.0], [1475.0, 10777.0], [1479.0, 2182.0], [1483.0, 10014.0], [1487.0, 2394.0], [1519.0, 2458.0], [1595.0, 2245.0], [1599.0, 6822.5], [1571.0, 9998.0], [1575.0, 2318.0], [1579.0, 7211.0], [1591.0, 4859.5], [1587.0, 2923.0], [1551.0, 4413.0], [1547.0, 2045.0], [1539.0, 7759.0], [1567.0, 7809.0], [1559.0, 2159.0], [1555.0, 1341.0], [1583.0, 7789.0], [1659.0, 9112.0], [1663.0, 1668.5], [1635.0, 4217.5], [1639.0, 3552.0], [1631.0, 9499.0], [1603.0, 9609.0], [1607.0, 1105.0], [1611.0, 3318.0], [1615.0, 9785.0], [1627.0, 1849.0], [1623.0, 8402.0], [1619.0, 1098.0], [1647.0, 6608.0], [1643.0, 9518.0], [1715.0, 4973.0], [1695.0, 3363.0], [1671.0, 4555.0], [1691.0, 3403.5], [1683.0, 3315.5], [1739.0, 2983.0], [1787.0, 6182.0], [1783.0, 3646.3333333333335], [1779.0, 1252.0], [1759.0, 4402.666666666667], [1755.0, 2274.6666666666665], [1751.0, 9865.0], [1747.0, 10459.0], [1775.0, 1375.0], [1843.0, 1438.0], [1851.0, 3598.0], [1855.0, 3730.0], [1827.0, 1693.0], [1831.0, 3932.0], [1823.0, 10414.0], [1795.0, 2982.0], [1803.0, 1101.0], [1799.0, 2707.0], [1807.0, 10890.0], [1819.0, 4486.5], [1815.0, 2128.0], [1839.0, 4876.0], [1835.0, 1103.0], [1907.0, 7457.0], [1919.0, 2547.0], [1891.0, 3052.0], [1915.0, 1307.0], [1883.0, 4705.666666666666], [1859.0, 3512.0], [1863.0, 2151.0], [1867.0, 9788.0], [1871.0, 1908.0], [1875.0, 1105.0], [1903.0, 1105.0], [1895.0, 1812.0], [1975.0, 1096.0], [1979.0, 6822.0], [1955.0, 1740.0], [1959.0, 8173.0], [1935.0, 8026.0], [1931.0, 3316.0], [1927.0, 1905.0], [1923.0, 2138.5], [1951.0, 7621.0], [1947.0, 9502.0], [1943.0, 5624.0], [1967.0, 1112.0], [1963.0, 4010.0], [2019.0, 7708.0], [2043.0, 1490.0], [2027.0, 3413.0], [2031.0, 1164.0], [2023.0, 1329.5], [2035.0, 3861.0], [2015.0, 1961.0], [1987.0, 9270.0], [1991.0, 3400.5], [1999.0, 10743.0], [2011.0, 1486.0], [2007.0, 3374.0], [2003.0, 1102.0], [2166.0, 1444.0], [2174.0, 5675.0], [2118.0, 1092.0], [2134.0, 2944.0], [2142.0, 1479.0], [2158.0, 1708.0], [2150.0, 10520.0], [2110.0, 5237.0], [2054.0, 1100.0], [2062.0, 1287.0], [2070.0, 10981.0], [2102.0, 1218.0], [2094.0, 2102.5], [2086.0, 7500.0], [2294.0, 1184.0], [2286.0, 1104.0], [2246.0, 4646.0], [2254.0, 3346.0], [2262.0, 3047.5], [2270.0, 1839.5], [2278.0, 1220.5], [2198.0, 1257.0], [2190.0, 1480.0], [2182.0, 3382.0], [2238.0, 9998.0], [2222.0, 1402.0], [2214.0, 1864.0], [2406.0, 1127.0], [2430.0, 3956.5], [2382.0, 1094.0], [2390.0, 2214.75], [2334.0, 2097.0], [2326.0, 4000.333333333333], [2350.0, 5569.0], [2342.0, 1387.0], [2558.0, 1096.0], [2550.0, 8318.0], [2502.0, 3891.5], [2510.0, 1110.5], [2526.0, 1111.0], [2454.0, 1226.0], [2438.0, 1110.5], [2494.0, 1251.0], [2478.0, 1387.0], [2670.0, 7478.0], [2638.0, 1097.0], [2686.0, 1801.0], [2646.0, 1138.0], [2654.0, 1593.5], [2582.0, 1450.0], [2590.0, 1362.0], [2614.0, 4686.5], [2606.0, 11162.0], [2598.0, 5833.0], [2798.0, 10204.0], [2758.0, 1158.5], [2766.0, 1194.0], [2774.0, 1362.5], [2782.0, 1827.0], [2806.0, 1997.0], [2790.0, 832.3333333333333], [2718.0, 4553.0], [2710.0, 1102.0], [2702.0, 4577.0], [2694.0, 1307.6666666666665], [2726.0, 3095.0], [2934.0, 1811.5], [2918.0, 9651.0], [2886.0, 883.3333333333334], [2894.0, 2202.0], [2902.0, 1109.3333333333333], [2910.0, 1396.0], [2942.0, 2551.25], [2822.0, 5287.5], [2830.0, 1472.0], [2846.0, 7281.0], [2878.0, 3022.0], [2870.0, 4569.0], [2862.0, 10415.0], [2998.0, 2204.9230769230767], [2966.0, 2376.4999999999995], [2974.0, 2010.7499999999995], [2990.0, 624.0], [2982.0, 2955.857142857143], [2175.0, 1110.0], [2167.0, 1098.0], [2119.0, 1530.0], [2127.0, 5239.0], [2135.0, 2183.0], [2143.0, 6080.0], [2159.0, 6622.0], [2111.0, 3642.0], [2055.0, 1108.0], [2063.0, 1158.0], [2071.0, 1357.0], [2079.0, 1413.5], [2103.0, 1490.0], [2095.0, 1169.0], [2087.0, 9677.0], [2295.0, 1101.0], [2303.0, 7551.0], [2255.0, 8449.0], [2263.0, 1534.0], [2287.0, 2678.0], [2207.0, 1985.3333333333333], [2199.0, 1219.0], [2191.0, 1095.0], [2183.0, 1110.0], [2239.0, 2576.0], [2231.0, 6109.5], [2223.0, 1168.0], [2423.0, 1551.6666666666667], [2375.0, 4235.75], [2383.0, 1316.0], [2399.0, 1134.0], [2415.0, 8907.5], [2335.0, 1241.0], [2319.0, 1714.0], [2311.0, 5801.5], [2351.0, 6038.0], [2343.0, 1223.0], [2503.0, 1096.0], [2559.0, 6115.5], [2527.0, 6902.5], [2519.0, 2958.0], [2511.0, 9807.0], [2543.0, 6484.333333333334], [2535.0, 6883.0], [2495.0, 5318.0], [2439.0, 6346.0], [2447.0, 4419.0], [2455.0, 1118.0], [2487.0, 3433.6666666666665], [2479.0, 10517.0], [2471.0, 5402.0], [2663.0, 2614.0], [2679.0, 1115.3333333333333], [2631.0, 2316.3333333333335], [2655.0, 1553.0], [2671.0, 1104.0], [2567.0, 1997.5], [2583.0, 1425.0], [2591.0, 9767.0], [2607.0, 2528.0], [2807.0, 4622.0], [2799.0, 4835.0], [2815.0, 1597.5], [2767.0, 2325.333333333333], [2775.0, 1196.0], [2783.0, 5550.0], [2791.0, 2523.0], [2719.0, 1578.0], [2711.0, 3989.0], [2703.0, 1251.3333333333333], [2695.0, 1890.0], [2751.0, 6291.5], [2743.0, 5528.333333333334], [2735.0, 3757.5], [2727.0, 1765.0], [2935.0, 3078.0], [2927.0, 2382.6666666666665], [2943.0, 1304.0], [2887.0, 1136.0], [2895.0, 1761.0], [2903.0, 2111.5], [2919.0, 1192.0], [2879.0, 11217.0], [2823.0, 6747.0], [2831.0, 10615.0], [2839.0, 1842.3333333333333], [2847.0, 1095.0], [2871.0, 1646.0], [2863.0, 9291.0], [2855.0, 9231.0], [2959.0, 2096.0], [2951.0, 5554.75], [2967.0, 3240.75], [2975.0, 1388.0], [2999.0, 573.5], [2991.0, 2635.75], [2983.0, 6149.666666666666], [1.0, 10941.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2986.588096609799, 2563.1123421227703]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 122455.55, "minX": 1.6841637E12, "maxY": 697928.3666666667, "series": [{"data": [[1.68416388E12, 697928.3666666667], [1.6841637E12, 489919.75], [1.684164E12, 134355.65], [1.68416382E12, 685966.35], [1.68416394E12, 694776.45], [1.68416376E12, 610634.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68416388E12, 650477.8], [1.6841637E12, 440173.9], [1.684164E12, 122455.55], [1.68416382E12, 634767.0], [1.68416394E12, 652839.85], [1.68416376E12, 559833.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684164E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2483.7029097963186, "minX": 1.6841637E12, "maxY": 3202.4803783903685, "series": [{"data": [[1.68416388E12, 2504.7562468696065], [1.6841637E12, 2656.082422186349], [1.684164E12, 3202.4803783903685], [1.68416382E12, 2570.763102366698], [1.68416394E12, 2498.923894811281], [1.68416376E12, 2483.7029097963186]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684164E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2483.2871807306788, "minX": 1.6841637E12, "maxY": 3202.2732983519413, "series": [{"data": [[1.68416388E12, 2504.508375535648], [1.6841637E12, 2589.885471378045], [1.684164E12, 3202.2732983519413], [1.68416382E12, 2570.4611206159298], [1.68416394E12, 2498.703577914251], [1.68416376E12, 2483.2871807306788]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684164E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6841637E12, "maxY": 431.19594939813277, "series": [{"data": [[1.68416388E12, 3.0563470421281336], [1.6841637E12, 431.19594939813277], [1.684164E12, 0.0], [1.68416382E12, 5.916752209865985], [1.68416394E12, 3.3004560766320123], [1.68416376E12, 165.36721629485987]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684164E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 51.0, "minX": 1.6841637E12, "maxY": 20264.0, "series": [{"data": [[1.68416388E12, 19351.0], [1.6841637E12, 15918.0], [1.684164E12, 17061.0], [1.68416382E12, 20264.0], [1.68416394E12, 19983.0], [1.68416376E12, 16372.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68416388E12, 8040.9000000000015], [1.6841637E12, 6630.0], [1.684164E12, 9541.400000000001], [1.68416382E12, 8099.700000000004], [1.68416394E12, 8235.0], [1.68416376E12, 7216.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68416388E12, 11015.990000000002], [1.6841637E12, 9135.930000000011], [1.684164E12, 11053.35], [1.68416382E12, 10920.980000000003], [1.68416394E12, 10910.980000000003], [1.68416376E12, 10203.970000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68416388E12, 9788.0], [1.6841637E12, 7826.0], [1.684164E12, 10298.050000000001], [1.68416382E12, 9833.500000000007], [1.68416394E12, 9710.850000000002], [1.68416376E12, 8448.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68416388E12, 51.0], [1.6841637E12, 51.0], [1.684164E12, 51.0], [1.68416382E12, 51.0], [1.68416394E12, 51.0], [1.68416376E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68416388E12, 1702.0], [1.6841637E12, 2263.5], [1.684164E12, 2074.0], [1.68416382E12, 1787.0], [1.68416394E12, 1729.0], [1.68416376E12, 1774.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684164E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 1.0, "maxY": 10947.0, "series": [{"data": [[7.0, 10947.0], [37.0, 10615.5], [72.0, 9952.0], [99.0, 9481.0], [114.0, 3254.0], [125.0, 1125.0], [130.0, 1206.0], [131.0, 2207.5], [148.0, 8885.0], [181.0, 2659.0], [198.0, 8086.0], [232.0, 7641.5], [249.0, 5011.0], [271.0, 7320.0], [320.0, 1309.5], [344.0, 5346.0], [341.0, 4743.0], [390.0, 5904.0], [406.0, 3421.5], [432.0, 4854.5], [462.0, 3173.5], [482.0, 2213.5], [587.0, 2007.0], [580.0, 3403.5], [618.0, 3602.0], [707.0, 4307.0], [740.0, 4322.5], [794.0, 2680.0], [815.0, 2359.0], [862.0, 2030.0], [860.0, 2216.5], [871.0, 2035.0], [891.0, 1388.0], [874.0, 2378.0], [901.0, 2277.0], [922.0, 1711.0], [898.0, 1134.0], [921.0, 2140.0], [930.0, 1751.0], [988.0, 1754.0], [1053.0, 1764.0], [1068.0, 3054.5], [1085.0, 2337.0], [1070.0, 1689.0], [1066.0, 1569.0], [1074.0, 1694.0], [1145.0, 2073.0], [1113.0, 2417.0], [1111.0, 1579.0], [1104.0, 2241.0], [1106.0, 1539.0], [1147.0, 1283.5], [1146.0, 2206.0], [1138.0, 2233.0], [1116.0, 2215.0], [1118.0, 1726.0], [1094.0, 2152.0], [1096.0, 1729.0], [1136.0, 1773.5], [1101.0, 1726.0], [1092.0, 1619.0], [1148.0, 5417.0], [1131.0, 2996.5], [1150.0, 1748.0], [1120.0, 1591.5], [1122.0, 1746.0], [1123.0, 1583.0], [1124.0, 1741.0], [1127.0, 1753.0], [1126.0, 1691.0], [1132.0, 2225.5], [1135.0, 1706.5], [1133.0, 1769.0], [1141.0, 2762.0], [1143.0, 1580.5], [1144.0, 1677.0], [1160.0, 2352.0], [1214.0, 2481.0], [1180.0, 1950.0], [1181.0, 1742.0], [1179.0, 2496.0], [1174.0, 1803.0], [1175.0, 1692.5], [1176.0, 1660.0], [1177.0, 1773.0], [1178.0, 1765.0], [1170.0, 1793.0], [1171.0, 1876.0], [1169.0, 1676.0], [1168.0, 1690.0], [1173.0, 1743.0], [1198.0, 1942.0], [1199.0, 1781.0], [1197.0, 1657.0], [1193.0, 1811.0], [1189.0, 2165.5], [1191.0, 1829.0], [1192.0, 1737.0], [1190.0, 1705.0], [1215.0, 1858.0], [1184.0, 1745.0], [1187.0, 1799.0], [1188.0, 1761.0], [1186.0, 1721.5], [1185.0, 1740.0], [1195.0, 1918.5], [1196.0, 1766.0], [1207.0, 2025.0], [1203.0, 1741.0], [1204.0, 1725.5], [1205.0, 1633.0], [1206.0, 1633.0], [1208.0, 1809.5], [1202.0, 1717.5], [1201.0, 1751.0], [1212.0, 1760.0], [1211.0, 1702.0], [1213.0, 1724.0], [1209.0, 1830.5], [1163.0, 2257.0], [1162.0, 1898.0], [1165.0, 1657.5], [1166.0, 1729.0], [1167.0, 1733.0], [1200.0, 1374.0], [1158.0, 1517.0], [1159.0, 1760.0], [1157.0, 1756.5], [1156.0, 2295.0], [1183.0, 1808.0], [1152.0, 1786.0], [1153.0, 1722.0], [1155.0, 1689.0], [1154.0, 1649.0], [1182.0, 2008.0], [1220.0, 1943.0], [1230.0, 1929.0], [1246.0, 4679.0], [1279.0, 1396.0], [1216.0, 2750.0], [1217.0, 3133.0], [1219.0, 1706.0], [1218.0, 1848.5], [1231.0, 2177.5], [1273.0, 1693.0], [1271.0, 1716.0], [1243.0, 1959.0], [1238.0, 3113.0], [1242.0, 1773.5], [1240.0, 1693.0], [1235.0, 1766.0], [1236.0, 1701.0], [1237.0, 1746.0], [1233.0, 1844.5], [1234.0, 1760.0], [1245.0, 3129.5], [1244.0, 1667.0], [1258.0, 2163.0], [1254.0, 1840.5], [1256.0, 1801.5], [1261.0, 2874.5], [1263.0, 1859.0], [1249.0, 2765.0], [1253.0, 2191.0], [1225.0, 2700.0], [1227.0, 1689.5], [1228.0, 1625.5], [1226.0, 1737.0], [1224.0, 1141.0], [1221.0, 1766.0], [1340.0, 2399.5], [1301.0, 3152.0], [1287.0, 1668.0], [1308.0, 1942.0], [1464.0, 1746.0], [1488.0, 1164.0], [1518.0, 2471.5], [1511.0, 1569.0], [1628.0, 1497.0], [1728.0, 2670.0], [1.0, 10941.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[37.0, 10090.0], [72.0, 10156.0], [99.0, 10145.5], [130.0, 109.0], [131.0, 42.0], [148.0, 10243.0], [198.0, 10310.0], [232.0, 10515.5], [249.0, 2632.0], [271.0, 10304.0], [344.0, 10108.0], [341.0, 67.0], [390.0, 73.0], [462.0, 10122.5], [482.0, 64.0], [587.0, 773.0], [580.0, 10262.0], [618.0, 10098.0], [707.0, 79.5], [740.0, 4547.5], [862.0, 42.0], [874.0, 65.0], [901.0, 41.0], [922.0, 10368.0], [930.0, 45.0], [988.0, 47.0], [1053.0, 53.0], [1068.0, 41.0], [1085.0, 41.0], [1070.0, 41.0], [1066.0, 80.0], [1074.0, 164.0], [1145.0, 43.0], [1113.0, 42.0], [1111.0, 57.0], [1104.0, 41.0], [1106.0, 41.0], [1147.0, 63.0], [1146.0, 41.0], [1138.0, 62.0], [1116.0, 41.0], [1118.0, 41.0], [1094.0, 41.0], [1096.0, 69.0], [1136.0, 41.0], [1101.0, 43.0], [1092.0, 41.0], [1148.0, 41.0], [1131.0, 41.0], [1150.0, 41.0], [1120.0, 86.5], [1122.0, 41.0], [1123.0, 41.0], [1124.0, 41.0], [1127.0, 41.0], [1126.0, 42.0], [1132.0, 41.0], [1135.0, 41.0], [1133.0, 41.0], [1141.0, 42.0], [1143.0, 42.0], [1144.0, 41.0], [1160.0, 41.0], [1214.0, 41.0], [1180.0, 43.0], [1181.0, 43.0], [1179.0, 41.0], [1174.0, 41.0], [1175.0, 41.0], [1176.0, 44.0], [1177.0, 41.0], [1178.0, 41.0], [1170.0, 42.0], [1171.0, 44.0], [1169.0, 41.0], [1168.0, 41.0], [1173.0, 42.0], [1198.0, 41.0], [1199.0, 41.0], [1197.0, 41.0], [1193.0, 41.0], [1189.0, 41.0], [1191.0, 41.0], [1192.0, 41.0], [1190.0, 41.0], [1215.0, 41.0], [1184.0, 42.0], [1187.0, 41.0], [1188.0, 41.0], [1186.0, 42.0], [1185.0, 43.0], [1195.0, 41.0], [1196.0, 42.0], [1207.0, 42.0], [1203.0, 44.0], [1204.0, 41.0], [1205.0, 42.0], [1206.0, 41.0], [1208.0, 42.0], [1202.0, 41.0], [1201.0, 41.0], [1212.0, 41.0], [1211.0, 41.0], [1213.0, 41.0], [1209.0, 42.0], [1163.0, 41.0], [1162.0, 41.0], [1165.0, 43.0], [1166.0, 41.0], [1167.0, 41.0], [1200.0, 42.0], [1158.0, 41.0], [1159.0, 41.0], [1157.0, 42.0], [1156.0, 43.0], [1183.0, 41.0], [1152.0, 42.0], [1153.0, 41.0], [1155.0, 41.0], [1154.0, 41.0], [1182.0, 42.0], [1220.0, 42.0], [1230.0, 41.0], [1246.0, 42.0], [1279.0, 43.0], [1216.0, 41.0], [1217.0, 43.0], [1219.0, 41.0], [1218.0, 47.0], [1231.0, 42.0], [1273.0, 41.0], [1271.0, 41.0], [1243.0, 41.0], [1238.0, 42.0], [1242.0, 42.0], [1240.0, 41.0], [1235.0, 41.0], [1236.0, 41.0], [1237.0, 41.0], [1233.0, 41.0], [1234.0, 41.0], [1245.0, 41.0], [1244.0, 41.0], [1258.0, 41.0], [1254.0, 42.0], [1256.0, 42.0], [1261.0, 41.0], [1263.0, 44.0], [1249.0, 41.0], [1253.0, 42.0], [1225.0, 41.0], [1227.0, 41.0], [1228.0, 41.0], [1226.0, 42.0], [1224.0, 46.0], [1221.0, 42.0], [1340.0, 58.0], [1301.0, 41.0], [1287.0, 81.0], [1308.0, 49.0], [1464.0, 59.5], [1488.0, 55.0], [1518.0, 47.0], [1511.0, 46.0], [1628.0, 74.5], [1728.0, 48.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1728.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 1.0, "maxY": 10947.0, "series": [{"data": [[7.0, 10947.0], [37.0, 10615.5], [72.0, 9952.0], [99.0, 9481.0], [114.0, 3253.5], [125.0, 1125.0], [130.0, 1206.0], [131.0, 2184.5], [148.0, 8885.0], [181.0, 2659.0], [198.0, 8086.0], [232.0, 7641.0], [249.0, 5010.0], [271.0, 7320.0], [320.0, 1309.5], [344.0, 5345.0], [341.0, 4743.0], [390.0, 5904.0], [406.0, 3421.5], [432.0, 4854.5], [462.0, 3173.5], [482.0, 2213.5], [587.0, 2007.0], [580.0, 3398.0], [618.0, 3601.0], [707.0, 4307.0], [740.0, 4322.5], [794.0, 2680.0], [815.0, 2359.0], [862.0, 2030.0], [860.0, 2216.5], [871.0, 2034.0], [891.0, 1388.0], [874.0, 2378.0], [901.0, 2277.0], [922.0, 1711.0], [898.0, 1134.0], [921.0, 2140.0], [930.0, 1751.0], [988.0, 1751.0], [1053.0, 1764.0], [1068.0, 3054.5], [1085.0, 2336.5], [1070.0, 1685.0], [1066.0, 1568.0], [1074.0, 1687.0], [1145.0, 2073.0], [1113.0, 2417.0], [1111.0, 1579.0], [1104.0, 2241.0], [1106.0, 1539.0], [1147.0, 1283.0], [1146.0, 2206.0], [1138.0, 2233.0], [1116.0, 2215.0], [1118.0, 1726.0], [1094.0, 2152.0], [1096.0, 1729.0], [1136.0, 1773.0], [1101.0, 1723.0], [1092.0, 1619.0], [1148.0, 5417.0], [1131.0, 2996.0], [1150.0, 1748.0], [1120.0, 1589.5], [1122.0, 1745.5], [1123.0, 1582.5], [1124.0, 1740.0], [1127.0, 1753.0], [1126.0, 1691.0], [1132.0, 2225.5], [1135.0, 1705.0], [1133.0, 1769.0], [1141.0, 2762.0], [1143.0, 1580.0], [1144.0, 1676.0], [1160.0, 2352.0], [1214.0, 2481.0], [1180.0, 1950.0], [1181.0, 1742.0], [1179.0, 2496.0], [1174.0, 1803.0], [1175.0, 1692.5], [1176.0, 1658.0], [1177.0, 1772.0], [1178.0, 1764.0], [1170.0, 1793.0], [1171.0, 1876.0], [1169.0, 1675.5], [1168.0, 1690.0], [1173.0, 1743.0], [1198.0, 1942.0], [1199.0, 1781.0], [1197.0, 1657.0], [1193.0, 1811.0], [1189.0, 2165.5], [1191.0, 1829.0], [1192.0, 1736.0], [1190.0, 1705.0], [1215.0, 1858.0], [1184.0, 1744.0], [1187.0, 1799.0], [1188.0, 1760.5], [1186.0, 1721.0], [1185.0, 1740.0], [1195.0, 1918.5], [1196.0, 1765.0], [1207.0, 2023.5], [1203.0, 1741.0], [1204.0, 1725.5], [1205.0, 1633.0], [1206.0, 1632.0], [1208.0, 1809.5], [1202.0, 1717.5], [1201.0, 1751.0], [1212.0, 1759.0], [1211.0, 1702.0], [1213.0, 1723.5], [1209.0, 1830.5], [1163.0, 2257.0], [1162.0, 1898.0], [1165.0, 1657.0], [1166.0, 1728.0], [1167.0, 1733.0], [1200.0, 1373.0], [1158.0, 1517.0], [1159.0, 1760.0], [1157.0, 1756.5], [1156.0, 2292.0], [1183.0, 1808.0], [1152.0, 1785.0], [1153.0, 1722.0], [1155.0, 1688.5], [1154.0, 1649.0], [1182.0, 2008.0], [1220.0, 1943.0], [1230.0, 1929.0], [1246.0, 4679.0], [1279.0, 1396.0], [1216.0, 2750.0], [1217.0, 3132.0], [1219.0, 1706.0], [1218.0, 1847.5], [1231.0, 2177.0], [1273.0, 1692.5], [1271.0, 1715.0], [1243.0, 1958.5], [1238.0, 3113.0], [1242.0, 1773.0], [1240.0, 1693.0], [1235.0, 1765.5], [1236.0, 1701.0], [1237.0, 1746.0], [1233.0, 1844.5], [1234.0, 1760.0], [1245.0, 3129.0], [1244.0, 1667.0], [1258.0, 2163.0], [1254.0, 1840.5], [1256.0, 1801.0], [1261.0, 2874.0], [1263.0, 1858.5], [1249.0, 2764.0], [1253.0, 2190.0], [1225.0, 2700.0], [1227.0, 1688.5], [1228.0, 1625.5], [1226.0, 1737.0], [1224.0, 1141.0], [1221.0, 1766.0], [1340.0, 2399.5], [1301.0, 3152.0], [1287.0, 1662.5], [1308.0, 1941.5], [1464.0, 1741.0], [1488.0, 1162.0], [1518.0, 2471.5], [1511.0, 1569.0], [1628.0, 1492.0], [1728.0, 2670.0], [1.0, 10941.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[37.0, 10090.0], [72.0, 10156.0], [99.0, 10145.5], [130.0, 109.0], [131.0, 42.0], [148.0, 10243.0], [198.0, 10310.0], [232.0, 10515.5], [249.0, 2632.0], [271.0, 10304.0], [344.0, 10108.0], [341.0, 67.0], [390.0, 73.0], [462.0, 10122.5], [482.0, 64.0], [587.0, 773.0], [580.0, 10262.0], [618.0, 10098.0], [707.0, 79.5], [740.0, 4547.5], [862.0, 42.0], [874.0, 65.0], [901.0, 41.0], [922.0, 10368.0], [930.0, 45.0], [988.0, 47.0], [1053.0, 53.0], [1068.0, 41.0], [1085.0, 41.0], [1070.0, 41.0], [1066.0, 80.0], [1074.0, 164.0], [1145.0, 43.0], [1113.0, 42.0], [1111.0, 57.0], [1104.0, 41.0], [1106.0, 41.0], [1147.0, 63.0], [1146.0, 41.0], [1138.0, 61.0], [1116.0, 41.0], [1118.0, 41.0], [1094.0, 41.0], [1096.0, 69.0], [1136.0, 41.0], [1101.0, 43.0], [1092.0, 41.0], [1148.0, 41.0], [1131.0, 41.0], [1150.0, 41.0], [1120.0, 86.5], [1122.0, 41.0], [1123.0, 41.0], [1124.0, 41.0], [1127.0, 41.0], [1126.0, 42.0], [1132.0, 41.0], [1135.0, 41.0], [1133.0, 41.0], [1141.0, 42.0], [1143.0, 42.0], [1144.0, 41.0], [1160.0, 41.0], [1214.0, 41.0], [1180.0, 41.0], [1181.0, 43.0], [1179.0, 41.0], [1174.0, 41.0], [1175.0, 41.0], [1176.0, 44.0], [1177.0, 41.0], [1178.0, 41.0], [1170.0, 42.0], [1171.0, 44.0], [1169.0, 41.0], [1168.0, 41.0], [1173.0, 42.0], [1198.0, 41.0], [1199.0, 41.0], [1197.0, 41.0], [1193.0, 41.0], [1189.0, 41.0], [1191.0, 41.0], [1192.0, 41.0], [1190.0, 41.0], [1215.0, 41.0], [1184.0, 42.0], [1187.0, 41.0], [1188.0, 41.0], [1186.0, 42.0], [1185.0, 43.0], [1195.0, 41.0], [1196.0, 42.0], [1207.0, 42.0], [1203.0, 44.0], [1204.0, 41.0], [1205.0, 42.0], [1206.0, 41.0], [1208.0, 42.0], [1202.0, 41.0], [1201.0, 41.0], [1212.0, 41.0], [1211.0, 41.0], [1213.0, 41.0], [1209.0, 42.0], [1163.0, 41.0], [1162.0, 41.0], [1165.0, 43.0], [1166.0, 41.0], [1167.0, 41.0], [1200.0, 42.0], [1158.0, 41.0], [1159.0, 41.0], [1157.0, 42.0], [1156.0, 43.0], [1183.0, 41.0], [1152.0, 42.0], [1153.0, 41.0], [1155.0, 41.0], [1154.0, 41.0], [1182.0, 42.0], [1220.0, 42.0], [1230.0, 41.0], [1246.0, 42.0], [1279.0, 43.0], [1216.0, 41.0], [1217.0, 43.0], [1219.0, 41.0], [1218.0, 47.0], [1231.0, 42.0], [1273.0, 41.0], [1271.0, 41.0], [1243.0, 41.0], [1238.0, 42.0], [1242.0, 42.0], [1240.0, 41.0], [1235.0, 41.0], [1236.0, 41.0], [1237.0, 41.0], [1233.0, 41.0], [1234.0, 41.0], [1245.0, 41.0], [1244.0, 41.0], [1258.0, 41.0], [1254.0, 42.0], [1256.0, 42.0], [1261.0, 41.0], [1263.0, 44.0], [1249.0, 41.0], [1253.0, 42.0], [1225.0, 41.0], [1227.0, 41.0], [1228.0, 41.0], [1226.0, 42.0], [1224.0, 46.0], [1221.0, 42.0], [1340.0, 58.0], [1301.0, 41.0], [1287.0, 81.0], [1308.0, 49.0], [1464.0, 59.5], [1488.0, 55.0], [1518.0, 47.0], [1511.0, 46.0], [1628.0, 74.5], [1728.0, 43.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1728.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 175.51666666666668, "minX": 1.6841637E12, "maxY": 1202.2833333333333, "series": [{"data": [[1.68416388E12, 1197.9333333333334], [1.6841637E12, 845.0], [1.684164E12, 175.51666666666668], [1.68416382E12, 1169.0], [1.68416394E12, 1202.2833333333333], [1.68416376E12, 1051.5166666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684164E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6841637E12, "maxY": 934.9666666666667, "series": [{"data": [[1.6841637E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68416388E12, 934.9666666666667], [1.6841637E12, 637.6833333333333], [1.684164E12, 183.86666666666667], [1.68416382E12, 925.3166666666667], [1.68416394E12, 925.0333333333333], [1.68416376E12, 830.55]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6841637E12, 4.8]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.6841637E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68416388E12, 262.96666666666664], [1.6841637E12, 172.95], [1.684164E12, 41.65], [1.68416382E12, 243.68333333333334], [1.68416394E12, 277.25], [1.68416376E12, 200.45]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684164E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 41.65, "minX": 1.6841637E12, "maxY": 934.9666666666667, "series": [{"data": [[1.68416388E12, 934.9666666666667], [1.6841637E12, 637.6833333333333], [1.684164E12, 183.86666666666667], [1.68416382E12, 925.3166666666667], [1.68416394E12, 925.0333333333333], [1.68416376E12, 830.55]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68416388E12, 262.96666666666664], [1.6841637E12, 177.83333333333334], [1.684164E12, 41.65], [1.68416382E12, 243.68333333333334], [1.68416394E12, 277.25], [1.68416376E12, 200.45]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684164E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 41.65, "minX": 1.6841637E12, "maxY": 934.9666666666667, "series": [{"data": [[1.68416388E12, 934.9666666666667], [1.6841637E12, 637.6833333333333], [1.684164E12, 183.86666666666667], [1.68416382E12, 925.3166666666667], [1.68416394E12, 925.0333333333333], [1.68416376E12, 830.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68416388E12, 262.96666666666664], [1.6841637E12, 177.83333333333334], [1.684164E12, 41.65], [1.68416382E12, 243.68333333333334], [1.68416394E12, 277.25], [1.68416376E12, 200.45]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684164E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

