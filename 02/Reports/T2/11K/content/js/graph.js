/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "maxY": 22473.0, "series": [{"data": [[0.0, 13.0], [0.1, 38.0], [0.2, 38.0], [0.3, 39.0], [0.4, 39.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 40.0], [1.0, 40.0], [1.1, 40.0], [1.2, 40.0], [1.3, 40.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 40.0], [1.8, 40.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 41.0], [2.3, 41.0], [2.4, 41.0], [2.5, 41.0], [2.6, 41.0], [2.7, 41.0], [2.8, 41.0], [2.9, 42.0], [3.0, 42.0], [3.1, 42.0], [3.2, 42.0], [3.3, 42.0], [3.4, 42.0], [3.5, 42.0], [3.6, 42.0], [3.7, 42.0], [3.8, 42.0], [3.9, 43.0], [4.0, 43.0], [4.1, 43.0], [4.2, 43.0], [4.3, 43.0], [4.4, 43.0], [4.5, 43.0], [4.6, 43.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 44.0], [5.1, 45.0], [5.2, 45.0], [5.3, 45.0], [5.4, 46.0], [5.5, 46.0], [5.6, 46.0], [5.7, 47.0], [5.8, 47.0], [5.9, 47.0], [6.0, 48.0], [6.1, 48.0], [6.2, 49.0], [6.3, 49.0], [6.4, 50.0], [6.5, 50.0], [6.6, 50.0], [6.7, 51.0], [6.8, 51.0], [6.9, 52.0], [7.0, 53.0], [7.1, 53.0], [7.2, 54.0], [7.3, 54.0], [7.4, 55.0], [7.5, 56.0], [7.6, 57.0], [7.7, 58.0], [7.8, 59.0], [7.9, 60.0], [8.0, 62.0], [8.1, 64.0], [8.2, 67.0], [8.3, 73.0], [8.4, 87.0], [8.5, 106.0], [8.6, 173.0], [8.7, 238.0], [8.8, 337.0], [8.9, 631.0], [9.0, 909.0], [9.1, 1091.0], [9.2, 1092.0], [9.3, 1093.0], [9.4, 1093.0], [9.5, 1094.0], [9.6, 1094.0], [9.7, 1094.0], [9.8, 1094.0], [9.9, 1095.0], [10.0, 1095.0], [10.1, 1095.0], [10.2, 1095.0], [10.3, 1095.0], [10.4, 1095.0], [10.5, 1096.0], [10.6, 1096.0], [10.7, 1096.0], [10.8, 1096.0], [10.9, 1096.0], [11.0, 1096.0], [11.1, 1096.0], [11.2, 1096.0], [11.3, 1097.0], [11.4, 1097.0], [11.5, 1097.0], [11.6, 1097.0], [11.7, 1097.0], [11.8, 1097.0], [11.9, 1097.0], [12.0, 1097.0], [12.1, 1097.0], [12.2, 1097.0], [12.3, 1098.0], [12.4, 1098.0], [12.5, 1098.0], [12.6, 1098.0], [12.7, 1098.0], [12.8, 1098.0], [12.9, 1098.0], [13.0, 1098.0], [13.1, 1098.0], [13.2, 1098.0], [13.3, 1098.0], [13.4, 1098.0], [13.5, 1099.0], [13.6, 1099.0], [13.7, 1099.0], [13.8, 1099.0], [13.9, 1099.0], [14.0, 1099.0], [14.1, 1099.0], [14.2, 1099.0], [14.3, 1099.0], [14.4, 1099.0], [14.5, 1099.0], [14.6, 1099.0], [14.7, 1099.0], [14.8, 1099.0], [14.9, 1100.0], [15.0, 1100.0], [15.1, 1100.0], [15.2, 1100.0], [15.3, 1100.0], [15.4, 1100.0], [15.5, 1100.0], [15.6, 1100.0], [15.7, 1100.0], [15.8, 1100.0], [15.9, 1100.0], [16.0, 1100.0], [16.1, 1100.0], [16.2, 1100.0], [16.3, 1100.0], [16.4, 1101.0], [16.5, 1101.0], [16.6, 1101.0], [16.7, 1101.0], [16.8, 1101.0], [16.9, 1101.0], [17.0, 1101.0], [17.1, 1101.0], [17.2, 1101.0], [17.3, 1101.0], [17.4, 1101.0], [17.5, 1101.0], [17.6, 1101.0], [17.7, 1101.0], [17.8, 1101.0], [17.9, 1102.0], [18.0, 1102.0], [18.1, 1102.0], [18.2, 1102.0], [18.3, 1102.0], [18.4, 1102.0], [18.5, 1102.0], [18.6, 1102.0], [18.7, 1102.0], [18.8, 1102.0], [18.9, 1102.0], [19.0, 1102.0], [19.1, 1102.0], [19.2, 1102.0], [19.3, 1102.0], [19.4, 1103.0], [19.5, 1103.0], [19.6, 1103.0], [19.7, 1103.0], [19.8, 1103.0], [19.9, 1103.0], [20.0, 1103.0], [20.1, 1103.0], [20.2, 1103.0], [20.3, 1103.0], [20.4, 1103.0], [20.5, 1103.0], [20.6, 1103.0], [20.7, 1103.0], [20.8, 1104.0], [20.9, 1104.0], [21.0, 1104.0], [21.1, 1104.0], [21.2, 1104.0], [21.3, 1104.0], [21.4, 1104.0], [21.5, 1104.0], [21.6, 1104.0], [21.7, 1104.0], [21.8, 1104.0], [21.9, 1104.0], [22.0, 1104.0], [22.1, 1105.0], [22.2, 1105.0], [22.3, 1105.0], [22.4, 1105.0], [22.5, 1105.0], [22.6, 1105.0], [22.7, 1105.0], [22.8, 1105.0], [22.9, 1105.0], [23.0, 1105.0], [23.1, 1105.0], [23.2, 1105.0], [23.3, 1106.0], [23.4, 1106.0], [23.5, 1106.0], [23.6, 1106.0], [23.7, 1106.0], [23.8, 1106.0], [23.9, 1106.0], [24.0, 1106.0], [24.1, 1106.0], [24.2, 1106.0], [24.3, 1106.0], [24.4, 1107.0], [24.5, 1107.0], [24.6, 1107.0], [24.7, 1107.0], [24.8, 1107.0], [24.9, 1107.0], [25.0, 1107.0], [25.1, 1107.0], [25.2, 1107.0], [25.3, 1107.0], [25.4, 1108.0], [25.5, 1108.0], [25.6, 1108.0], [25.7, 1108.0], [25.8, 1108.0], [25.9, 1108.0], [26.0, 1108.0], [26.1, 1108.0], [26.2, 1108.0], [26.3, 1109.0], [26.4, 1109.0], [26.5, 1109.0], [26.6, 1109.0], [26.7, 1109.0], [26.8, 1109.0], [26.9, 1109.0], [27.0, 1109.0], [27.1, 1110.0], [27.2, 1110.0], [27.3, 1110.0], [27.4, 1110.0], [27.5, 1110.0], [27.6, 1110.0], [27.7, 1110.0], [27.8, 1110.0], [27.9, 1111.0], [28.0, 1111.0], [28.1, 1111.0], [28.2, 1111.0], [28.3, 1111.0], [28.4, 1111.0], [28.5, 1111.0], [28.6, 1112.0], [28.7, 1112.0], [28.8, 1112.0], [28.9, 1112.0], [29.0, 1112.0], [29.1, 1113.0], [29.2, 1113.0], [29.3, 1113.0], [29.4, 1113.0], [29.5, 1113.0], [29.6, 1113.0], [29.7, 1114.0], [29.8, 1114.0], [29.9, 1114.0], [30.0, 1114.0], [30.1, 1114.0], [30.2, 1114.0], [30.3, 1115.0], [30.4, 1115.0], [30.5, 1115.0], [30.6, 1115.0], [30.7, 1116.0], [30.8, 1116.0], [30.9, 1116.0], [31.0, 1116.0], [31.1, 1117.0], [31.2, 1117.0], [31.3, 1117.0], [31.4, 1117.0], [31.5, 1118.0], [31.6, 1118.0], [31.7, 1118.0], [31.8, 1118.0], [31.9, 1119.0], [32.0, 1119.0], [32.1, 1119.0], [32.2, 1120.0], [32.3, 1120.0], [32.4, 1120.0], [32.5, 1121.0], [32.6, 1121.0], [32.7, 1121.0], [32.8, 1122.0], [32.9, 1122.0], [33.0, 1122.0], [33.1, 1123.0], [33.2, 1123.0], [33.3, 1123.0], [33.4, 1124.0], [33.5, 1124.0], [33.6, 1125.0], [33.7, 1125.0], [33.8, 1125.0], [33.9, 1126.0], [34.0, 1126.0], [34.1, 1127.0], [34.2, 1127.0], [34.3, 1128.0], [34.4, 1128.0], [34.5, 1129.0], [34.6, 1129.0], [34.7, 1130.0], [34.8, 1130.0], [34.9, 1131.0], [35.0, 1131.0], [35.1, 1132.0], [35.2, 1133.0], [35.3, 1133.0], [35.4, 1134.0], [35.5, 1135.0], [35.6, 1135.0], [35.7, 1136.0], [35.8, 1137.0], [35.9, 1137.0], [36.0, 1138.0], [36.1, 1139.0], [36.2, 1140.0], [36.3, 1140.0], [36.4, 1141.0], [36.5, 1142.0], [36.6, 1143.0], [36.7, 1143.0], [36.8, 1144.0], [36.9, 1145.0], [37.0, 1146.0], [37.1, 1147.0], [37.2, 1147.0], [37.3, 1148.0], [37.4, 1149.0], [37.5, 1150.0], [37.6, 1151.0], [37.7, 1153.0], [37.8, 1154.0], [37.9, 1155.0], [38.0, 1156.0], [38.1, 1157.0], [38.2, 1158.0], [38.3, 1159.0], [38.4, 1161.0], [38.5, 1162.0], [38.6, 1164.0], [38.7, 1165.0], [38.8, 1167.0], [38.9, 1168.0], [39.0, 1170.0], [39.1, 1172.0], [39.2, 1174.0], [39.3, 1175.0], [39.4, 1177.0], [39.5, 1179.0], [39.6, 1181.0], [39.7, 1183.0], [39.8, 1185.0], [39.9, 1186.0], [40.0, 1188.0], [40.1, 1190.0], [40.2, 1191.0], [40.3, 1193.0], [40.4, 1194.0], [40.5, 1196.0], [40.6, 1198.0], [40.7, 1200.0], [40.8, 1201.0], [40.9, 1203.0], [41.0, 1205.0], [41.1, 1207.0], [41.2, 1208.0], [41.3, 1211.0], [41.4, 1213.0], [41.5, 1215.0], [41.6, 1217.0], [41.7, 1219.0], [41.8, 1222.0], [41.9, 1224.0], [42.0, 1226.0], [42.1, 1229.0], [42.2, 1231.0], [42.3, 1234.0], [42.4, 1237.0], [42.5, 1240.0], [42.6, 1243.0], [42.7, 1246.0], [42.8, 1249.0], [42.9, 1252.0], [43.0, 1256.0], [43.1, 1259.0], [43.2, 1262.0], [43.3, 1266.0], [43.4, 1269.0], [43.5, 1271.0], [43.6, 1274.0], [43.7, 1277.0], [43.8, 1280.0], [43.9, 1283.0], [44.0, 1286.0], [44.1, 1289.0], [44.2, 1292.0], [44.3, 1295.0], [44.4, 1298.0], [44.5, 1301.0], [44.6, 1304.0], [44.7, 1307.0], [44.8, 1310.0], [44.9, 1313.0], [45.0, 1315.0], [45.1, 1318.0], [45.2, 1321.0], [45.3, 1324.0], [45.4, 1326.0], [45.5, 1329.0], [45.6, 1332.0], [45.7, 1335.0], [45.8, 1337.0], [45.9, 1341.0], [46.0, 1343.0], [46.1, 1347.0], [46.2, 1350.0], [46.3, 1353.0], [46.4, 1356.0], [46.5, 1359.0], [46.6, 1363.0], [46.7, 1366.0], [46.8, 1370.0], [46.9, 1373.0], [47.0, 1377.0], [47.1, 1380.0], [47.2, 1384.0], [47.3, 1388.0], [47.4, 1392.0], [47.5, 1396.0], [47.6, 1401.0], [47.7, 1405.0], [47.8, 1409.0], [47.9, 1413.0], [48.0, 1417.0], [48.1, 1421.0], [48.2, 1426.0], [48.3, 1430.0], [48.4, 1434.0], [48.5, 1439.0], [48.6, 1443.0], [48.7, 1446.0], [48.8, 1450.0], [48.9, 1454.0], [49.0, 1458.0], [49.1, 1462.0], [49.2, 1465.0], [49.3, 1468.0], [49.4, 1472.0], [49.5, 1475.0], [49.6, 1478.0], [49.7, 1482.0], [49.8, 1485.0], [49.9, 1489.0], [50.0, 1492.0], [50.1, 1496.0], [50.2, 1499.0], [50.3, 1503.0], [50.4, 1506.0], [50.5, 1509.0], [50.6, 1513.0], [50.7, 1517.0], [50.8, 1520.0], [50.9, 1523.0], [51.0, 1527.0], [51.1, 1531.0], [51.2, 1535.0], [51.3, 1539.0], [51.4, 1542.0], [51.5, 1546.0], [51.6, 1550.0], [51.7, 1554.0], [51.8, 1558.0], [51.9, 1561.0], [52.0, 1565.0], [52.1, 1568.0], [52.2, 1572.0], [52.3, 1576.0], [52.4, 1581.0], [52.5, 1584.0], [52.6, 1589.0], [52.7, 1593.0], [52.8, 1597.0], [52.9, 1601.0], [53.0, 1605.0], [53.1, 1608.0], [53.2, 1612.0], [53.3, 1616.0], [53.4, 1619.0], [53.5, 1622.0], [53.6, 1626.0], [53.7, 1629.0], [53.8, 1632.0], [53.9, 1635.0], [54.0, 1638.0], [54.1, 1642.0], [54.2, 1646.0], [54.3, 1650.0], [54.4, 1654.0], [54.5, 1658.0], [54.6, 1662.0], [54.7, 1666.0], [54.8, 1670.0], [54.9, 1674.0], [55.0, 1678.0], [55.1, 1681.0], [55.2, 1685.0], [55.3, 1689.0], [55.4, 1692.0], [55.5, 1696.0], [55.6, 1700.0], [55.7, 1705.0], [55.8, 1709.0], [55.9, 1713.0], [56.0, 1717.0], [56.1, 1721.0], [56.2, 1726.0], [56.3, 1729.0], [56.4, 1733.0], [56.5, 1737.0], [56.6, 1740.0], [56.7, 1744.0], [56.8, 1748.0], [56.9, 1751.0], [57.0, 1754.0], [57.1, 1758.0], [57.2, 1761.0], [57.3, 1765.0], [57.4, 1769.0], [57.5, 1773.0], [57.6, 1777.0], [57.7, 1781.0], [57.8, 1785.0], [57.9, 1789.0], [58.0, 1793.0], [58.1, 1797.0], [58.2, 1801.0], [58.3, 1805.0], [58.4, 1810.0], [58.5, 1814.0], [58.6, 1818.0], [58.7, 1822.0], [58.8, 1826.0], [58.9, 1830.0], [59.0, 1833.0], [59.1, 1837.0], [59.2, 1841.0], [59.3, 1845.0], [59.4, 1849.0], [59.5, 1852.0], [59.6, 1856.0], [59.7, 1860.0], [59.8, 1864.0], [59.9, 1867.0], [60.0, 1871.0], [60.1, 1875.0], [60.2, 1878.0], [60.3, 1882.0], [60.4, 1885.0], [60.5, 1888.0], [60.6, 1892.0], [60.7, 1896.0], [60.8, 1900.0], [60.9, 1904.0], [61.0, 1908.0], [61.1, 1912.0], [61.2, 1917.0], [61.3, 1921.0], [61.4, 1925.0], [61.5, 1930.0], [61.6, 1934.0], [61.7, 1938.0], [61.8, 1942.0], [61.9, 1946.0], [62.0, 1949.0], [62.1, 1953.0], [62.2, 1957.0], [62.3, 1962.0], [62.4, 1966.0], [62.5, 1970.0], [62.6, 1974.0], [62.7, 1977.0], [62.8, 1981.0], [62.9, 1984.0], [63.0, 1988.0], [63.1, 1991.0], [63.2, 1994.0], [63.3, 1997.0], [63.4, 2001.0], [63.5, 2004.0], [63.6, 2008.0], [63.7, 2012.0], [63.8, 2017.0], [63.9, 2021.0], [64.0, 2026.0], [64.1, 2031.0], [64.2, 2035.0], [64.3, 2040.0], [64.4, 2046.0], [64.5, 2051.0], [64.6, 2056.0], [64.7, 2060.0], [64.8, 2065.0], [64.9, 2070.0], [65.0, 2074.0], [65.1, 2078.0], [65.2, 2082.0], [65.3, 2086.0], [65.4, 2090.0], [65.5, 2093.0], [65.6, 2097.0], [65.7, 2101.0], [65.8, 2105.0], [65.9, 2108.0], [66.0, 2113.0], [66.1, 2116.0], [66.2, 2120.0], [66.3, 2124.0], [66.4, 2128.0], [66.5, 2132.0], [66.6, 2135.0], [66.7, 2138.0], [66.8, 2141.0], [66.9, 2144.0], [67.0, 2147.0], [67.1, 2149.0], [67.2, 2152.0], [67.3, 2154.0], [67.4, 2157.0], [67.5, 2160.0], [67.6, 2163.0], [67.7, 2166.0], [67.8, 2170.0], [67.9, 2175.0], [68.0, 2180.0], [68.1, 2185.0], [68.2, 2190.0], [68.3, 2195.0], [68.4, 2201.0], [68.5, 2206.0], [68.6, 2212.0], [68.7, 2218.0], [68.8, 2223.0], [68.9, 2229.0], [69.0, 2234.0], [69.1, 2241.0], [69.2, 2247.0], [69.3, 2253.0], [69.4, 2259.0], [69.5, 2266.0], [69.6, 2272.0], [69.7, 2278.0], [69.8, 2284.0], [69.9, 2290.0], [70.0, 2297.0], [70.1, 2302.0], [70.2, 2309.0], [70.3, 2316.0], [70.4, 2323.0], [70.5, 2332.0], [70.6, 2340.0], [70.7, 2347.0], [70.8, 2355.0], [70.9, 2363.0], [71.0, 2372.0], [71.1, 2378.0], [71.2, 2386.0], [71.3, 2393.0], [71.4, 2401.0], [71.5, 2410.0], [71.6, 2418.0], [71.7, 2427.0], [71.8, 2437.0], [71.9, 2448.0], [72.0, 2458.0], [72.1, 2467.0], [72.2, 2478.0], [72.3, 2488.0], [72.4, 2498.0], [72.5, 2510.0], [72.6, 2521.0], [72.7, 2530.0], [72.8, 2539.0], [72.9, 2550.0], [73.0, 2560.0], [73.1, 2570.0], [73.2, 2578.0], [73.3, 2586.0], [73.4, 2595.0], [73.5, 2604.0], [73.6, 2612.0], [73.7, 2621.0], [73.8, 2628.0], [73.9, 2636.0], [74.0, 2646.0], [74.1, 2656.0], [74.2, 2665.0], [74.3, 2675.0], [74.4, 2685.0], [74.5, 2694.0], [74.6, 2704.0], [74.7, 2714.0], [74.8, 2724.0], [74.9, 2735.0], [75.0, 2745.0], [75.1, 2755.0], [75.2, 2765.0], [75.3, 2775.0], [75.4, 2783.0], [75.5, 2792.0], [75.6, 2802.0], [75.7, 2810.0], [75.8, 2819.0], [75.9, 2829.0], [76.0, 2837.0], [76.1, 2846.0], [76.2, 2854.0], [76.3, 2866.0], [76.4, 2876.0], [76.5, 2885.0], [76.6, 2894.0], [76.7, 2905.0], [76.8, 2917.0], [76.9, 2927.0], [77.0, 2938.0], [77.1, 2950.0], [77.2, 2961.0], [77.3, 2973.0], [77.4, 2984.0], [77.5, 2994.0], [77.6, 3005.0], [77.7, 3015.0], [77.8, 3027.0], [77.9, 3038.0], [78.0, 3050.0], [78.1, 3061.0], [78.2, 3072.0], [78.3, 3082.0], [78.4, 3094.0], [78.5, 3107.0], [78.6, 3118.0], [78.7, 3128.0], [78.8, 3139.0], [78.9, 3149.0], [79.0, 3158.0], [79.1, 3168.0], [79.2, 3177.0], [79.3, 3186.0], [79.4, 3195.0], [79.5, 3205.0], [79.6, 3215.0], [79.7, 3226.0], [79.8, 3236.0], [79.9, 3249.0], [80.0, 3262.0], [80.1, 3274.0], [80.2, 3286.0], [80.3, 3298.0], [80.4, 3311.0], [80.5, 3322.0], [80.6, 3335.0], [80.7, 3347.0], [80.8, 3359.0], [80.9, 3374.0], [81.0, 3391.0], [81.1, 3408.0], [81.2, 3422.0], [81.3, 3437.0], [81.4, 3452.0], [81.5, 3465.0], [81.6, 3483.0], [81.7, 3503.0], [81.8, 3523.0], [81.9, 3540.0], [82.0, 3557.0], [82.1, 3573.0], [82.2, 3589.0], [82.3, 3605.0], [82.4, 3622.0], [82.5, 3640.0], [82.6, 3655.0], [82.7, 3672.0], [82.8, 3686.0], [82.9, 3704.0], [83.0, 3720.0], [83.1, 3741.0], [83.2, 3759.0], [83.3, 3777.0], [83.4, 3798.0], [83.5, 3816.0], [83.6, 3835.0], [83.7, 3852.0], [83.8, 3868.0], [83.9, 3887.0], [84.0, 3906.0], [84.1, 3926.0], [84.2, 3943.0], [84.3, 3963.0], [84.4, 3982.0], [84.5, 4003.0], [84.6, 4022.0], [84.7, 4041.0], [84.8, 4060.0], [84.9, 4079.0], [85.0, 4100.0], [85.1, 4115.0], [85.2, 4131.0], [85.3, 4148.0], [85.4, 4163.0], [85.5, 4177.0], [85.6, 4192.0], [85.7, 4208.0], [85.8, 4222.0], [85.9, 4236.0], [86.0, 4249.0], [86.1, 4265.0], [86.2, 4280.0], [86.3, 4296.0], [86.4, 4313.0], [86.5, 4332.0], [86.6, 4352.0], [86.7, 4372.0], [86.8, 4396.0], [86.9, 4420.0], [87.0, 4444.0], [87.1, 4468.0], [87.2, 4493.0], [87.3, 4520.0], [87.4, 4544.0], [87.5, 4574.0], [87.6, 4603.0], [87.7, 4631.0], [87.8, 4658.0], [87.9, 4687.0], [88.0, 4713.0], [88.1, 4740.0], [88.2, 4767.0], [88.3, 4795.0], [88.4, 4821.0], [88.5, 4847.0], [88.6, 4875.0], [88.7, 4906.0], [88.8, 4941.0], [88.9, 4974.0], [89.0, 5006.0], [89.1, 5040.0], [89.2, 5079.0], [89.3, 5116.0], [89.4, 5145.0], [89.5, 5178.0], [89.6, 5210.0], [89.7, 5238.0], [89.8, 5265.0], [89.9, 5293.0], [90.0, 5320.0], [90.1, 5346.0], [90.2, 5377.0], [90.3, 5409.0], [90.4, 5445.0], [90.5, 5486.0], [90.6, 5525.0], [90.7, 5573.0], [90.8, 5627.0], [90.9, 5676.0], [91.0, 5722.0], [91.1, 5768.0], [91.2, 5819.0], [91.3, 5866.0], [91.4, 5920.0], [91.5, 5966.0], [91.6, 6012.0], [91.7, 6064.0], [91.8, 6123.0], [91.9, 6171.0], [92.0, 6220.0], [92.1, 6266.0], [92.2, 6306.0], [92.3, 6350.0], [92.4, 6390.0], [92.5, 6432.0], [92.6, 6481.0], [92.7, 6529.0], [92.8, 6585.0], [92.9, 6647.0], [93.0, 6715.0], [93.1, 6773.0], [93.2, 6839.0], [93.3, 6902.0], [93.4, 6958.0], [93.5, 7024.0], [93.6, 7090.0], [93.7, 7163.0], [93.8, 7231.0], [93.9, 7297.0], [94.0, 7355.0], [94.1, 7407.0], [94.2, 7466.0], [94.3, 7532.0], [94.4, 7602.0], [94.5, 7693.0], [94.6, 7794.0], [94.7, 7884.0], [94.8, 7980.0], [94.9, 8066.0], [95.0, 8159.0], [95.1, 8255.0], [95.2, 8345.0], [95.3, 8436.0], [95.4, 8521.0], [95.5, 8606.0], [95.6, 8712.0], [95.7, 8828.0], [95.8, 8946.0], [95.9, 9048.0], [96.0, 9158.0], [96.1, 9267.0], [96.2, 9376.0], [96.3, 9471.0], [96.4, 9563.0], [96.5, 9664.0], [96.6, 9777.0], [96.7, 9880.0], [96.8, 9993.0], [96.9, 10066.0], [97.0, 10103.0], [97.1, 10136.0], [97.2, 10168.0], [97.3, 10209.0], [97.4, 10247.0], [97.5, 10289.0], [97.6, 10331.0], [97.7, 10376.0], [97.8, 10420.0], [97.9, 10465.0], [98.0, 10510.0], [98.1, 10562.0], [98.2, 10625.0], [98.3, 10699.0], [98.4, 10770.0], [98.5, 10851.0], [98.6, 10928.0], [98.7, 11001.0], [98.8, 11061.0], [98.9, 11129.0], [99.0, 11222.0], [99.1, 11329.0], [99.2, 11481.0], [99.3, 11791.0], [99.4, 12161.0], [99.5, 12518.0], [99.6, 12942.0], [99.7, 13368.0], [99.8, 13907.0], [99.9, 14895.0], [100.0, 22473.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 57177.0, "series": [{"data": [[0.0, 18733.0], [100.0, 420.0], [200.0, 240.0], [300.0, 136.0], [400.0, 90.0], [500.0, 52.0], [600.0, 111.0], [700.0, 60.0], [800.0, 65.0], [900.0, 47.0], [1000.0, 12905.0], [1100.0, 57177.0], [1200.0, 8315.0], [1300.0, 6903.0], [1400.0, 5855.0], [1500.0, 5837.0], [1600.0, 6027.0], [1700.0, 5726.0], [1800.0, 5777.0], [1900.0, 5694.0], [2000.0, 5133.0], [2100.0, 5987.0], [2200.0, 3712.0], [2300.0, 2918.0], [2400.0, 2314.0], [2500.0, 2280.0], [2600.0, 2447.0], [2800.0, 2398.0], [2700.0, 2252.0], [2900.0, 1983.0], [3000.0, 1967.0], [3100.0, 2217.0], [3200.0, 1923.0], [3300.0, 1621.0], [3400.0, 1417.0], [3500.0, 1287.0], [3600.0, 1349.0], [3700.0, 1173.0], [3800.0, 1241.0], [3900.0, 1147.0], [4000.0, 1137.0], [4100.0, 1433.0], [4300.0, 1085.0], [4200.0, 1494.0], [4500.0, 789.0], [4400.0, 921.0], [4600.0, 807.0], [4700.0, 804.0], [4800.0, 807.0], [4900.0, 673.0], [5000.0, 607.0], [5100.0, 683.0], [5200.0, 794.0], [5300.0, 765.0], [5400.0, 580.0], [5500.0, 477.0], [5600.0, 458.0], [5700.0, 453.0], [5800.0, 458.0], [6100.0, 437.0], [5900.0, 466.0], [6000.0, 406.0], [6200.0, 496.0], [6300.0, 525.0], [6400.0, 501.0], [6500.0, 394.0], [6600.0, 346.0], [6700.0, 358.0], [6800.0, 342.0], [6900.0, 369.0], [7000.0, 330.0], [7100.0, 302.0], [7200.0, 344.0], [7300.0, 390.0], [7400.0, 376.0], [7500.0, 322.0], [7600.0, 238.0], [7700.0, 224.0], [7900.0, 231.0], [7800.0, 241.0], [8100.0, 243.0], [8000.0, 254.0], [8200.0, 239.0], [8300.0, 232.0], [8400.0, 256.0], [8500.0, 261.0], [8600.0, 217.0], [8700.0, 195.0], [8800.0, 186.0], [9000.0, 220.0], [8900.0, 201.0], [9100.0, 188.0], [9200.0, 206.0], [9300.0, 204.0], [9500.0, 246.0], [9400.0, 231.0], [9600.0, 222.0], [9700.0, 188.0], [9800.0, 205.0], [9900.0, 205.0], [10000.0, 407.0], [10200.0, 539.0], [10100.0, 641.0], [10300.0, 509.0], [10400.0, 491.0], [10500.0, 411.0], [10700.0, 296.0], [10600.0, 307.0], [10800.0, 293.0], [10900.0, 292.0], [11000.0, 348.0], [11100.0, 258.0], [11200.0, 235.0], [11300.0, 157.0], [11400.0, 134.0], [11500.0, 91.0], [11700.0, 51.0], [11600.0, 60.0], [11800.0, 59.0], [12000.0, 59.0], [11900.0, 53.0], [12100.0, 70.0], [12200.0, 71.0], [12300.0, 56.0], [12400.0, 56.0], [12500.0, 44.0], [12600.0, 69.0], [12700.0, 51.0], [12800.0, 54.0], [12900.0, 53.0], [13000.0, 53.0], [13100.0, 47.0], [13200.0, 63.0], [13300.0, 37.0], [13400.0, 36.0], [13500.0, 41.0], [13600.0, 46.0], [13700.0, 44.0], [13800.0, 39.0], [13900.0, 31.0], [14000.0, 26.0], [14100.0, 22.0], [14200.0, 22.0], [14300.0, 28.0], [14400.0, 24.0], [14500.0, 24.0], [14600.0, 15.0], [14700.0, 13.0], [14800.0, 19.0], [14900.0, 12.0], [15000.0, 9.0], [15100.0, 10.0], [15300.0, 10.0], [15200.0, 9.0], [15500.0, 9.0], [15400.0, 9.0], [15600.0, 13.0], [15800.0, 7.0], [15700.0, 10.0], [15900.0, 7.0], [16000.0, 9.0], [16100.0, 8.0], [16200.0, 6.0], [16300.0, 8.0], [16600.0, 2.0], [16400.0, 4.0], [16800.0, 4.0], [17000.0, 3.0], [17400.0, 4.0], [17200.0, 3.0], [17600.0, 1.0], [17800.0, 2.0], [18400.0, 1.0], [18000.0, 2.0], [19200.0, 2.0], [19400.0, 1.0], [19600.0, 1.0], [20400.0, 2.0], [20800.0, 1.0], [21800.0, 1.0], [22000.0, 1.0], [22200.0, 1.0], [22400.0, 1.0], [16700.0, 6.0], [16900.0, 4.0], [17100.0, 4.0], [16500.0, 5.0], [17500.0, 6.0], [17700.0, 5.0], [18100.0, 2.0], [17900.0, 2.0], [18300.0, 3.0], [18500.0, 1.0], [19100.0, 1.0], [19500.0, 2.0], [19700.0, 2.0], [20100.0, 1.0], [21100.0, 1.0], [22100.0, 1.0], [21900.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 96.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 107976.0, "series": [{"data": [[0.0, 96.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 91101.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 107976.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 22090.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.6842042E12, "maxY": 3000.0, "series": [{"data": [[1.68420444E12, 3000.0], [1.68420426E12, 3000.0], [1.68420456E12, 6.0], [1.68420438E12, 3000.0], [1.6842042E12, 3000.0], [1.6842045E12, 2884.6613810481344], [1.68420432E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420456E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.0, "maxY": 11483.0, "series": [{"data": [[2.0, 10659.0], [3.0, 10940.0], [4.0, 10659.0], [5.0, 10446.0], [6.0, 10697.0], [7.0, 10659.0], [8.0, 10296.0], [9.0, 10545.0], [10.0, 10076.0], [11.0, 10312.0], [12.0, 10109.0], [13.0, 9480.0], [14.0, 9940.0], [15.0, 9974.0], [16.0, 9937.0], [17.0, 9575.0], [18.0, 9912.0], [19.0, 9732.0], [20.0, 9524.0], [21.0, 9882.0], [22.0, 9891.0], [23.0, 9590.0], [24.0, 9849.0], [25.0, 9863.0], [26.0, 9520.0], [27.0, 9831.0], [28.0, 9823.0], [29.0, 9805.0], [30.0, 9804.0], [31.0, 9772.0], [38.0, 9694.333333333334], [41.0, 9549.5], [40.0, 9656.0], [43.0, 9443.0], [42.0, 9459.0], [45.0, 9068.0], [44.0, 11303.0], [47.0, 9003.0], [46.0, 8803.0], [48.0, 9007.0], [51.0, 8739.0], [50.0, 8809.5], [53.0, 10717.0], [52.0, 8948.0], [55.0, 10982.0], [54.0, 8329.0], [57.0, 10627.0], [56.0, 8866.0], [58.0, 8856.0], [61.0, 9362.0], [60.0, 8828.0], [63.0, 8836.0], [62.0, 10853.0], [67.0, 10928.0], [66.0, 8700.0], [65.0, 9356.0], [64.0, 8823.0], [71.0, 9293.0], [70.0, 11483.0], [69.0, 10951.0], [68.0, 8484.0], [74.0, 8583.0], [73.0, 9249.0], [72.0, 8753.0], [79.0, 8511.0], [78.0, 8553.0], [77.0, 8568.0], [76.0, 9751.0], [83.0, 10301.0], [82.0, 8210.0], [81.0, 8530.0], [80.0, 8188.0], [87.0, 8358.0], [86.0, 8474.0], [85.0, 9030.0], [84.0, 8517.0], [90.0, 10248.0], [89.0, 8447.0], [88.0, 8419.0], [95.0, 8941.0], [94.0, 8128.0], [93.0, 10603.0], [92.0, 10391.0], [99.0, 10544.0], [98.0, 10560.0], [97.0, 10517.0], [96.0, 10522.0], [103.0, 9827.0], [102.0, 8010.0], [101.0, 10930.0], [100.0, 8279.0], [106.0, 9908.0], [105.0, 8481.0], [104.0, 9769.0], [111.0, 7922.0], [110.0, 7905.0], [109.0, 10083.0], [108.0, 9264.5], [115.0, 7867.0], [114.0, 9661.0], [113.0, 9755.0], [112.0, 8464.0], [119.0, 9605.0], [118.0, 9840.0], [117.0, 7836.0], [116.0, 10630.0], [123.0, 7790.0], [122.0, 9628.0], [121.0, 7668.0], [120.0, 7789.0], [127.0, 10102.0], [125.0, 8847.0], [135.0, 7732.0], [134.0, 10523.0], [133.0, 7743.0], [132.0, 9931.0], [131.0, 9726.0], [130.0, 10469.0], [129.0, 7772.0], [128.0, 7377.0], [143.0, 10912.0], [142.0, 7625.0], [141.0, 7677.0], [140.0, 9706.0], [139.0, 8228.0], [138.0, 10929.0], [137.0, 10479.0], [136.0, 9633.0], [150.0, 8460.0], [149.0, 10304.0], [148.0, 7564.0], [147.0, 8943.5], [159.0, 9493.0], [158.0, 7421.0], [157.0, 9202.0], [156.0, 10213.0], [155.0, 7985.0], [154.0, 7341.0], [153.0, 7999.0], [152.0, 8155.666666666667], [166.0, 9886.5], [164.0, 10639.0], [163.0, 9225.0], [162.0, 7391.0], [161.0, 9203.0], [160.0, 7392.0], [175.0, 8783.0], [174.0, 10281.0], [173.0, 10495.0], [172.0, 10061.0], [171.0, 11100.0], [170.0, 10114.0], [169.0, 7870.0], [168.0, 8369.0], [183.0, 6870.0], [182.0, 6881.0], [181.0, 9612.5], [179.0, 10627.0], [178.0, 10067.0], [177.0, 9057.0], [176.0, 10681.0], [191.0, 7307.0], [190.0, 6536.0], [189.0, 6216.0], [188.0, 6812.0], [187.0, 9612.0], [186.0, 6727.0], [185.0, 9571.0], [184.0, 9637.0], [199.0, 8897.0], [198.0, 7262.0], [197.0, 10562.0], [196.0, 10547.0], [195.0, 10062.0], [194.0, 7279.0], [193.0, 10658.0], [192.0, 6654.0], [207.0, 10412.5], [205.0, 10159.0], [204.0, 10666.0], [203.0, 9442.0], [202.0, 7254.0], [201.0, 7256.0], [200.0, 6480.0], [215.0, 10085.0], [214.0, 8783.0], [213.0, 6278.0], [212.0, 10763.0], [211.0, 6693.0], [210.0, 9464.0], [209.0, 10517.0], [208.0, 9454.0], [223.0, 8796.0], [222.0, 10047.0], [221.0, 10487.0], [220.0, 6654.0], [219.0, 10552.0], [218.0, 11040.0], [217.0, 6662.0], [216.0, 7209.0], [231.0, 6454.0], [230.0, 6986.0], [229.0, 10399.0], [228.0, 8482.0], [227.0, 6469.0], [226.0, 10050.5], [224.0, 7150.0], [239.0, 8231.0], [238.0, 6951.0], [237.0, 6283.0], [236.0, 6402.0], [235.0, 10946.0], [234.0, 8297.0], [233.0, 9220.0], [232.0, 10313.0], [245.0, 6373.0], [244.0, 9168.0], [243.0, 6410.0], [242.0, 9192.0], [241.0, 6292.0], [240.0, 9195.0], [255.0, 8164.0], [254.0, 6306.0], [253.0, 8424.0], [252.0, 9132.0], [251.0, 6369.0], [250.0, 6361.0], [249.0, 9603.0], [248.0, 8513.666666666666], [270.0, 6080.0], [271.0, 6073.0], [269.0, 5654.0], [268.0, 6081.0], [267.0, 10136.0], [266.0, 10125.0], [265.0, 8028.0], [264.0, 10066.0], [263.0, 10117.0], [256.0, 6333.0], [259.0, 10489.0], [257.0, 10394.0], [262.0, 8058.0], [261.0, 10090.0], [260.0, 11257.0], [286.0, 9916.0], [287.0, 8550.0], [285.0, 7986.0], [284.0, 9574.0], [283.0, 9898.5], [281.0, 7843.0], [280.0, 9946.0], [279.0, 11001.0], [273.0, 6126.0], [272.0, 10428.0], [275.0, 9851.0], [274.0, 6010.0], [278.0, 10694.0], [277.0, 10067.0], [276.0, 5986.0], [302.0, 5686.0], [303.0, 7560.0], [301.0, 10558.0], [300.0, 5707.0], [299.0, 5713.0], [298.0, 8505.0], [297.0, 5722.0], [296.0, 5355.0], [295.0, 5728.0], [289.0, 5774.0], [288.0, 10089.0], [291.0, 7768.0], [290.0, 9673.0], [294.0, 5629.0], [293.0, 6283.0], [292.0, 9814.0], [318.0, 10790.0], [319.0, 10808.0], [316.0, 9460.0], [306.0, 10512.0], [305.0, 8276.0], [315.0, 5648.0], [314.0, 8444.0], [313.0, 7656.0], [312.0, 9820.0], [311.0, 7790.0], [310.0, 5669.0], [309.0, 8643.666666666666], [334.0, 7602.0], [335.0, 8403.0], [333.0, 5506.0], [332.0, 5623.0], [331.0, 10484.0], [330.0, 6609.0], [329.0, 5274.0], [327.0, 6168.0], [320.0, 10857.0], [323.0, 7301.0], [321.0, 9828.0], [326.0, 6169.0], [325.0, 5652.0], [324.0, 10817.0], [349.0, 7641.0], [350.0, 5126.0], [348.0, 10521.0], [339.0, 9925.0], [338.0, 10794.0], [337.0, 5227.0], [336.0, 5619.0], [347.0, 9822.0], [346.0, 4970.0], [345.0, 8994.0], [344.0, 11107.0], [343.0, 6111.0], [342.0, 5171.0], [341.0, 5211.0], [340.0, 7765.0], [366.0, 10585.0], [367.0, 7567.0], [365.0, 8188.0], [364.0, 5232.0], [363.0, 5946.0], [362.0, 5257.0], [361.0, 5128.0], [360.0, 5421.0], [359.0, 5992.0], [355.0, 5528.0], [354.0, 6328.75], [358.0, 10587.0], [357.0, 10655.0], [356.0, 10345.0], [383.0, 9702.5], [381.0, 8249.5], [371.0, 9340.0], [370.0, 5362.0], [369.0, 7965.0], [379.0, 8147.0], [378.0, 5072.0], [377.0, 7356.0], [376.0, 5360.0], [375.0, 10207.0], [374.0, 5901.0], [373.0, 7537.0], [372.0, 10533.0], [397.0, 9462.0], [399.0, 9380.0], [396.0, 5287.0], [387.0, 9132.0], [386.0, 10789.0], [385.0, 9455.0], [384.0, 7124.0], [395.0, 5816.0], [394.0, 5832.0], [393.0, 5267.0], [392.0, 5843.0], [391.0, 9695.0], [390.0, 5836.0], [389.0, 4974.0], [388.0, 5321.0], [414.0, 10299.0], [415.0, 9495.0], [412.0, 10105.0], [403.0, 4962.0], [402.0, 10186.0], [401.0, 7995.0], [411.0, 5070.0], [410.0, 5232.0], [409.0, 10376.0], [408.0, 5779.0], [407.0, 9071.0], [406.0, 10466.0], [405.0, 5250.0], [404.0, 10459.0], [430.0, 5147.0], [431.0, 5153.0], [429.0, 7865.0], [428.0, 6040.5], [426.0, 4585.0], [425.0, 5178.0], [424.0, 5172.0], [423.0, 5722.0], [417.0, 5236.0], [416.0, 7397.0], [419.0, 10399.0], [418.0, 5060.0], [422.0, 7335.0], [421.0, 10132.0], [420.0, 5209.0], [447.0, 4173.0], [446.0, 7419.333333333333], [435.0, 7231.0], [434.0, 5117.0], [433.0, 5659.0], [432.0, 5673.0], [443.0, 4464.0], [442.0, 10961.0], [441.0, 4692.0], [440.0, 5450.0], [439.0, 10968.0], [438.0, 5062.0], [437.0, 5611.0], [436.0, 9992.0], [460.0, 8589.0], [462.0, 4704.0], [463.0, 4110.0], [461.0, 7507.0], [458.0, 4738.0], [457.0, 10348.0], [455.0, 6552.0], [454.0, 4596.0], [451.0, 7542.0], [450.0, 10991.0], [449.0, 7456.0], [478.0, 6821.0], [479.0, 4532.0], [477.0, 4646.0], [476.0, 7393.0], [475.0, 7869.0], [474.0, 5200.0], [472.0, 4541.0], [471.0, 4235.0], [464.0, 9635.0], [466.0, 4122.0], [465.0, 5226.0], [470.0, 5207.0], [469.0, 7434.0], [468.0, 4402.0], [494.0, 9474.0], [495.0, 7342.0], [493.0, 8507.5], [483.0, 11036.0], [482.0, 4637.0], [481.0, 4524.0], [480.0, 6533.0], [491.0, 4623.0], [490.0, 4330.0], [488.0, 5156.0], [487.0, 7390.0], [486.0, 5172.0], [485.0, 4364.0], [510.0, 10052.0], [511.0, 5122.0], [508.0, 8397.0], [499.0, 7191.0], [497.0, 4352.0], [496.0, 4271.0], [507.0, 7384.0], [506.0, 9541.0], [505.0, 4610.0], [504.0, 6662.0], [503.0, 6266.0], [501.0, 4022.0], [500.0, 4610.0], [518.0, 10521.0], [542.0, 7969.666666666667], [540.0, 5101.0], [532.0, 10497.0], [522.0, 10707.0], [520.0, 6352.0], [516.0, 8429.0], [514.0, 9766.0], [512.0, 9533.0], [572.0, 6373.0], [574.0, 5290.0], [570.0, 4939.0], [568.0, 4949.0], [566.0, 8692.0], [564.0, 4458.0], [560.0, 5645.5], [558.0, 5955.0], [544.0, 4506.5], [550.0, 4557.0], [546.0, 5897.5], [556.0, 5902.666666666667], [552.0, 6724.0], [600.0, 9343.5], [604.0, 6422.0], [606.0, 10320.0], [602.0, 4280.0], [596.0, 7541.0], [592.0, 3741.0], [588.0, 7097.0], [586.0, 10238.0], [582.0, 10284.0], [578.0, 7127.0], [576.0, 8105.0], [636.0, 4117.5], [638.0, 10362.5], [634.0, 6308.0], [614.0, 9184.0], [612.0, 10242.0], [610.0, 4131.0], [608.0, 8530.0], [630.0, 10400.666666666666], [626.0, 8222.0], [624.0, 4430.0], [622.0, 4221.0], [620.0, 3991.0], [616.0, 7208.0], [668.0, 5878.0], [670.0, 6895.0], [666.0, 4182.0], [664.0, 7935.0], [662.0, 9453.0], [658.0, 11146.0], [656.0, 4701.0], [654.0, 6281.333333333333], [644.0, 6944.0], [640.0, 5964.0], [650.0, 4708.0], [648.0, 6956.0], [700.0, 7474.0], [702.0, 4240.0], [698.0, 3706.0], [696.0, 3426.0], [694.0, 10101.0], [692.0, 5930.0], [688.0, 3762.0], [686.0, 5893.0], [674.0, 4370.5], [672.0, 4637.0], [678.0, 4604.0], [676.0, 7909.0], [684.0, 5343.5], [682.0, 3769.0], [680.0, 6220.0], [732.0, 10633.0], [734.0, 6363.0], [730.0, 5518.0], [728.0, 4210.0], [726.0, 7031.0], [724.0, 4219.0], [722.0, 8747.0], [720.0, 10754.0], [718.0, 3695.0], [706.0, 3691.0], [704.0, 3131.0], [710.0, 7035.0], [708.0, 9438.5], [714.0, 3571.0], [712.0, 3397.0], [740.0, 5613.0], [754.0, 5938.5], [752.0, 5626.0], [750.0, 5747.0], [748.0, 7410.0], [746.0, 3555.0], [744.0, 3493.0], [742.0, 3340.0], [738.0, 3625.0], [736.0, 3619.0], [796.0, 5338.25], [794.0, 7408.0], [792.0, 4129.0], [788.0, 4389.0], [782.0, 4646.0], [780.0, 2995.0], [778.0, 4133.0], [770.0, 4127.0], [806.0, 3588.0], [828.0, 6791.0], [824.0, 6605.5], [822.0, 11226.0], [820.0, 6794.0], [814.0, 7759.2], [810.0, 9510.0], [808.0, 5761.0], [804.0, 7469.666666666667], [800.0, 4631.8], [858.0, 3333.0], [856.0, 6703.0], [854.0, 6307.0], [850.0, 6310.5], [848.0, 5918.666666666666], [842.0, 5755.0], [840.0, 5235.0], [834.0, 10581.0], [832.0, 3237.0], [890.0, 3864.0], [892.0, 3305.0], [888.0, 3217.0], [870.0, 5531.0], [866.0, 6937.5], [864.0, 2875.0], [886.0, 10329.0], [884.0, 5363.0], [882.0, 8251.0], [880.0, 7676.0], [878.0, 5516.0], [876.0, 6591.0], [900.0, 10924.0], [920.0, 3250.0], [924.0, 5280.0], [922.0, 6724.0], [898.0, 4928.0], [910.0, 3148.0], [908.0, 9998.0], [906.0, 6060.0], [904.0, 5455.0], [918.0, 6649.0], [916.0, 3250.0], [956.0, 3144.0], [958.0, 2776.0], [944.0, 3190.0], [946.0, 6472.0], [954.0, 3149.0], [932.0, 3110.0], [934.0, 6272.0], [942.0, 8206.0], [940.0, 7424.0], [938.0, 2621.0], [936.0, 3756.0], [950.0, 3716.0], [990.0, 10758.6], [980.0, 10143.0], [966.0, 2831.0], [960.0, 4554.0], [970.0, 3152.0], [968.0, 5155.0], [982.0, 3677.0], [978.0, 3147.0], [976.0, 10565.0], [1016.0, 5084.0], [1020.0, 10146.0], [1012.0, 10127.0], [1010.0, 10120.0], [996.0, 5301.0], [992.0, 2788.0], [1006.0, 9370.0], [1002.0, 5903.0], [1000.0, 3659.0], [1014.0, 3642.0], [1080.0, 2191.0], [1060.0, 2781.0], [1064.0, 7469.0], [1084.0, 9725.0], [1076.0, 2583.5], [1072.0, 2687.0], [1024.0, 5816.0], [1032.0, 5225.0], [1036.0, 5627.0], [1052.0, 2977.0], [1048.0, 6296.0], [1044.0, 5050.0], [1040.0, 5816.0], [1068.0, 10376.0], [1140.0, 2549.0], [1148.0, 3916.5], [1120.0, 5326.0], [1124.0, 10150.0], [1128.0, 5316.0], [1136.0, 4566.0], [1100.0, 5408.0], [1096.0, 5413.0], [1092.0, 6498.0], [1088.0, 5420.0], [1116.0, 2612.0], [1112.0, 6482.0], [1108.0, 8638.0], [1132.0, 5350.0], [1208.0, 3023.5], [1212.0, 8817.0], [1192.0, 4156.5], [1188.0, 3755.5], [1204.0, 3021.0], [1200.0, 2489.0], [1164.0, 10152.0], [1160.0, 4692.0], [1180.0, 2513.0], [1176.0, 2515.0], [1168.0, 4678.0], [1196.0, 6300.0], [1264.0, 9937.0], [1272.0, 2414.0], [1248.0, 2331.0], [1252.0, 9917.0], [1268.0, 4051.5], [1224.0, 6742.5], [1228.0, 8407.0], [1244.0, 6823.0], [1240.0, 2453.0], [1236.0, 6790.0], [1232.0, 9038.0], [1260.0, 2442.0], [1256.0, 6346.0], [1336.0, 5023.0], [1312.0, 3990.5], [1316.0, 3973.0], [1320.0, 6295.0], [1340.0, 10455.0], [1332.0, 1988.0], [1328.0, 4392.0], [1280.0, 2948.0], [1284.0, 4585.0], [1288.0, 2923.0], [1292.0, 6156.0], [1308.0, 7171.0], [1300.0, 5444.5], [1324.0, 2281.0], [1352.0, 7087.0], [1392.0, 2724.0], [1404.0, 1992.5], [1396.0, 4320.0], [1344.0, 6338.0], [1356.0, 1763.0], [1372.0, 2710.0], [1368.0, 7078.5], [1364.0, 6410.0], [1360.0, 8597.0], [1380.0, 7398.0], [1376.0, 8192.0], [1460.0, 2075.0], [1468.0, 4850.0], [1440.0, 1982.0], [1444.0, 7023.0], [1448.0, 2622.0], [1464.0, 8882.0], [1420.0, 2653.0], [1416.0, 4873.0], [1412.0, 3890.0], [1408.0, 9210.0], [1432.0, 8512.0], [1428.0, 2652.0], [1424.0, 3427.0], [1452.0, 2630.0], [1524.0, 5359.0], [1532.0, 6074.5], [1504.0, 1660.0], [1508.0, 5762.0], [1528.0, 1944.0], [1520.0, 5295.0], [1484.0, 5215.0], [1480.0, 5254.0], [1476.0, 5385.0], [1472.0, 3171.5], [1496.0, 6806.0], [1516.0, 6861.0], [1512.0, 1614.0], [1588.0, 1099.0], [1584.0, 2789.5], [1596.0, 1096.0], [1568.0, 1790.0], [1572.0, 6607.0], [1592.0, 1096.0], [1536.0, 1941.0], [1540.0, 1920.0], [1544.0, 1331.0], [1548.0, 5183.0], [1564.0, 3967.0], [1560.0, 1958.5], [1556.0, 1844.0], [1552.0, 1764.0], [1580.0, 1099.0], [1576.0, 1692.0], [1612.0, 1379.0], [1652.0, 1311.0], [1644.0, 1531.5], [1620.0, 1654.0], [1600.0, 1093.0], [1604.0, 1095.0], [1672.0, 1645.5], [1704.0, 1493.5], [1724.0, 1592.5714285714287], [1712.0, 1632.0], [1668.0, 1699.0], [1692.0, 1523.0], [1688.0, 1584.5], [1684.0, 1640.0], [1708.0, 1632.0], [1784.0, 1630.0], [1780.0, 1630.0], [1768.0, 1522.3333333333333], [1764.0, 1569.5], [1760.0, 1637.0], [1736.0, 1633.0], [1732.0, 1408.0], [1752.0, 1591.3333333333333], [1848.0, 1626.0], [1852.0, 1618.0], [1844.0, 1618.0], [1836.0, 1628.5], [1800.0, 1887.5], [1796.0, 1691.25], [1804.0, 2162.0], [1816.0, 1621.0], [1904.0, 4035.0], [1912.0, 2085.0], [1916.0, 5617.0], [1908.0, 6543.0], [1868.0, 9218.0], [1864.0, 4387.0], [1856.0, 1795.3333333333333], [1884.0, 4360.0], [1880.0, 1582.0], [1872.0, 3382.0], [1892.0, 4562.5], [1972.0, 3443.0], [1980.0, 4230.0], [1956.0, 3261.0], [1952.0, 5644.666666666667], [1960.0, 4701.0], [1964.0, 7386.0], [1968.0, 3517.0], [1932.0, 3655.0], [1928.0, 1372.0], [1924.0, 3659.0], [1920.0, 4787.0], [1948.0, 4191.0], [1936.0, 4241.0], [2040.0, 1942.5], [2044.0, 4600.0], [2016.0, 5496.0], [2024.0, 1089.0], [2028.0, 3304.0], [2036.0, 4200.0], [2032.0, 7621.5], [1984.0, 5472.0], [1988.0, 1437.0], [1992.0, 3515.0], [2012.0, 3595.0], [2008.0, 8987.0], [2160.0, 5020.0], [2152.0, 1195.0], [2168.0, 3331.0], [2112.0, 1840.0], [2120.0, 5311.0], [2128.0, 5100.0], [2136.0, 1251.0], [2144.0, 2980.0], [2048.0, 4179.0], [2056.0, 8946.0], [2064.0, 1908.0], [2104.0, 9546.0], [2096.0, 6296.0], [2088.0, 3520.0], [2080.0, 5176.0], [2280.0, 1096.5], [2240.0, 1099.0], [2248.0, 1102.6666666666667], [2256.0, 3072.0], [2296.0, 4952.0], [2176.0, 3316.0], [2192.0, 5591.0], [2200.0, 1653.0], [2232.0, 3880.0], [2224.0, 1108.0], [2216.0, 4205.5], [2400.0, 4211.0], [2376.0, 1512.0], [2384.0, 3133.0], [2368.0, 4848.0], [2392.0, 3729.0], [2304.0, 8137.0], [2320.0, 8139.0], [2360.0, 2829.0], [2352.0, 3002.0], [2344.0, 1554.0], [2336.0, 10242.5], [2544.0, 1133.0], [2552.0, 1132.0], [2536.0, 1134.5], [2432.0, 3376.0], [2440.0, 7937.0], [2456.0, 1322.0], [2464.0, 9945.0], [2664.0, 1116.6666666666667], [2672.0, 1118.0], [2640.0, 1120.25], [2648.0, 1117.0], [2584.0, 1127.5], [2568.0, 1129.0], [2560.0, 1131.0], [2608.0, 1124.0], [2600.0, 1128.0], [2592.0, 1130.0], [2792.0, 5326.0], [2760.0, 1100.75], [2768.0, 1098.8333333333333], [2776.0, 1097.5], [2800.0, 2473.0], [2704.0, 1113.0], [2744.0, 1107.0], [2728.0, 1109.0], [2720.0, 1112.0], [2928.0, 2095.5714285714284], [2936.0, 1661.5], [2896.0, 3129.7333333333336], [2880.0, 2080.6666666666665], [2888.0, 3648.0], [2904.0, 9329.0], [2920.0, 2783.75], [2912.0, 4227.25], [2840.0, 2388.0], [2872.0, 4994.75], [2864.0, 2398.0], [2856.0, 4509.153846153846], [2848.0, 5941.5], [2944.0, 5210.333333333333], [2960.0, 3735.0], [3000.0, 2363.5156316896273], [2952.0, 3319.5], [2968.0, 1839.6052631578948], [2992.0, 3982.7027027027025], [2984.0, 4177.375], [2976.0, 2902.111111111111], [2153.0, 8821.0], [2161.0, 10392.0], [2113.0, 4091.0], [2121.0, 3119.0], [2129.0, 5588.0], [2145.0, 5051.0], [2073.0, 4267.666666666667], [2065.0, 4161.0], [2057.0, 1935.0], [2049.0, 8917.0], [2105.0, 5087.0], [2097.0, 3504.0], [2089.0, 3394.0], [2289.0, 1268.3333333333333], [2249.0, 1103.0], [2265.0, 1099.5], [2297.0, 4322.0], [2273.0, 1101.0], [2177.0, 4393.0], [2185.0, 5492.5], [2193.0, 1132.0], [2201.0, 3866.0], [2233.0, 3886.0], [2225.0, 1103.0], [2217.0, 1375.0], [2209.0, 4359.5], [2417.0, 4229.0], [2425.0, 3595.0], [2369.0, 1522.0], [2377.0, 9199.0], [2385.0, 5133.0], [2393.0, 1476.0], [2409.0, 4918.5], [2401.0, 1462.0], [2329.0, 4713.2], [2313.0, 3750.5], [2305.0, 4904.0], [2361.0, 5135.0], [2353.0, 3794.0], [2345.0, 1548.0], [2545.0, 1131.0], [2537.0, 1136.0], [2553.0, 1131.0], [2433.0, 3666.0], [2441.0, 1387.0], [2449.0, 3244.0], [2457.0, 5729.0], [2489.0, 1148.0], [2681.0, 1116.25], [2625.0, 1121.25], [2633.0, 1120.1666666666667], [2649.0, 1118.0], [2665.0, 1116.0], [2585.0, 1127.0], [2577.0, 1128.5], [2569.0, 1131.0], [2617.0, 1123.0], [2609.0, 1125.5], [2785.0, 1095.5], [2801.0, 3217.0], [2809.0, 3758.3333333333335], [2793.0, 3228.0], [2689.0, 1115.5], [2697.0, 1113.0], [2705.0, 1113.0], [2713.0, 1112.5], [2745.0, 1105.5], [2721.0, 1110.0], [2921.0, 1138.5], [2889.0, 4605.857142857143], [2897.0, 7161.0], [2905.0, 4380.375], [2929.0, 886.7777777777778], [2913.0, 2250.0], [2833.0, 5413.0], [2825.0, 3774.0], [2817.0, 3702.6], [2873.0, 3397.6], [2865.0, 7094.5], [2849.0, 2690.5], [2945.0, 6268.0], [2993.0, 2738.0], [2953.0, 3270.166666666667], [2961.0, 969.6666666666667], [2969.0, 2136.3999999999996], [2985.0, 4924.333333333334], [2977.0, 3705.1666666666665], [1077.0, 2523.0], [1085.0, 4815.0], [1057.0, 4597.5], [1061.0, 5033.0], [1081.0, 2672.0], [1025.0, 9018.0], [1029.0, 5238.5], [1033.0, 3056.0], [1037.0, 5829.0], [1053.0, 3495.0], [1049.0, 3005.0], [1045.0, 5180.0], [1041.0, 5152.0], [1069.0, 2735.0], [1065.0, 3375.0], [1137.0, 2567.0], [1149.0, 6462.0], [1121.0, 5377.0], [1125.0, 10144.0], [1145.0, 5323.0], [1089.0, 2646.0], [1097.0, 6422.0], [1117.0, 6423.0], [1113.0, 2619.0], [1109.0, 10252.0], [1105.0, 5373.25], [1133.0, 8715.0], [1129.0, 2564.0], [1201.0, 2330.0], [1213.0, 2169.0], [1185.0, 8764.0], [1205.0, 9495.0], [1165.0, 2516.0], [1161.0, 3056.0], [1157.0, 3914.5], [1153.0, 4828.0], [1173.0, 8061.0], [1169.0, 4291.0], [1197.0, 2494.0], [1269.0, 5201.0], [1277.0, 5487.0], [1249.0, 6244.0], [1253.0, 7780.0], [1257.0, 4310.0], [1273.0, 2948.0], [1265.0, 1854.0], [1229.0, 2479.0], [1225.0, 3013.0], [1221.0, 5624.5], [1217.0, 4224.75], [1245.0, 2153.0], [1241.0, 2462.0], [1237.0, 9504.0], [1261.0, 2314.0], [1289.0, 5179.0], [1329.0, 5043.0], [1313.0, 4454.0], [1333.0, 6053.0], [1309.0, 2137.0], [1281.0, 5674.0], [1285.0, 6234.0], [1293.0, 10010.0], [1305.0, 6313.0], [1297.0, 3262.5], [1321.0, 8190.0], [1317.0, 7598.0], [1401.0, 4589.0], [1405.0, 1648.0], [1377.0, 2174.0], [1381.0, 5415.0], [1397.0, 2127.0], [1353.0, 2207.0], [1357.0, 4944.0], [1373.0, 8248.0], [1369.0, 7373.0], [1361.0, 2160.0], [1389.0, 2189.0], [1385.0, 2073.5], [1465.0, 2604.0], [1449.0, 2621.0], [1469.0, 4793.0], [1441.0, 4822.0], [1445.0, 8146.0], [1461.0, 6367.0], [1421.0, 5953.0], [1417.0, 5991.0], [1413.0, 2128.0], [1409.0, 5898.0], [1437.0, 1820.5], [1433.0, 1531.0], [1429.0, 5931.0], [1425.0, 2108.0], [1453.0, 9114.0], [1477.0, 4180.0], [1521.0, 6864.0], [1513.0, 4315.0], [1533.0, 2480.0], [1473.0, 2027.0], [1481.0, 2576.0], [1485.0, 4827.0], [1501.0, 5415.5], [1497.0, 5311.0], [1489.0, 7239.0], [1517.0, 1980.0], [1505.0, 1842.0], [1585.0, 1100.0], [1597.0, 1097.0], [1573.0, 1114.0], [1589.0, 1104.0], [1549.0, 4625.0], [1545.0, 8887.0], [1537.0, 1816.0], [1565.0, 9424.0], [1561.0, 1251.0], [1557.0, 5681.0], [1553.0, 5653.0], [1577.0, 1091.0], [1657.0, 1486.5], [1653.0, 1642.0], [1645.0, 1180.0], [1641.0, 1533.0], [1629.0, 1334.0], [1605.0, 1098.0], [1613.0, 1532.0], [1625.0, 1656.0], [1717.0, 1492.8333333333333], [1721.0, 1635.75], [1677.0, 1525.0], [1673.0, 1326.0], [1665.0, 1640.0], [1701.0, 1635.0], [1697.0, 1437.5], [1693.0, 1649.0], [1681.0, 1609.0], [1741.0, 1841.0], [1777.0, 1722.6666666666667], [1733.0, 1446.0], [1757.0, 1549.5], [1749.0, 1631.0], [1745.0, 1564.5], [1773.0, 1625.8], [1761.0, 2159.0], [1853.0, 1620.0], [1825.0, 1628.0], [1845.0, 2147.0], [1841.0, 1499.0], [1801.0, 1295.0], [1797.0, 1684.3333333333333], [1813.0, 1323.0], [1833.0, 1501.0], [1829.0, 1617.5], [1905.0, 3514.0], [1917.0, 3675.0], [1889.0, 6477.0], [1913.0, 5376.0], [1857.0, 1617.0], [1861.0, 1554.5], [1865.0, 1488.0], [1869.0, 3757.0], [1885.0, 4970.0], [1881.0, 5391.0], [1877.0, 6438.0], [1873.0, 5911.0], [1901.0, 6734.5], [1893.0, 5401.0], [1977.0, 4768.5], [1981.0, 1979.0], [1953.0, 4216.0], [1957.0, 1454.0], [1961.0, 1987.0], [1965.0, 8952.0], [1973.0, 6291.0], [1969.0, 1985.0], [1933.0, 2021.0], [1929.0, 1495.0], [1925.0, 4778.0], [1921.0, 8483.0], [1949.0, 3506.0], [1945.0, 4973.0], [1941.0, 3649.0], [1937.0, 5297.0], [2041.0, 8465.0], [2017.0, 1957.0], [2021.0, 3902.5], [2045.0, 5933.0], [2037.0, 7365.0], [2033.0, 9048.0], [1985.0, 3609.0], [1989.0, 6360.0], [1993.0, 1440.0], [2009.0, 1965.0], [2001.0, 4846.666666666667], [2162.0, 1704.0], [2154.0, 1722.0], [2122.0, 3115.0], [2130.0, 4048.0], [2170.0, 6310.5], [2146.0, 3985.0], [2050.0, 1932.0], [2058.0, 1398.0], [2066.0, 5186.0], [2074.0, 4109.0], [2106.0, 6495.0], [2098.0, 5581.0], [2090.0, 4697.0], [2290.0, 1094.0], [2298.0, 8699.0], [2242.0, 1108.0], [2258.0, 3750.0], [2266.0, 1101.0], [2282.0, 1356.5], [2178.0, 4361.0], [2186.0, 5475.0], [2202.0, 6299.0], [2234.0, 1099.0], [2210.0, 1640.0], [2418.0, 7065.0], [2426.0, 1428.0], [2370.0, 5226.0], [2378.0, 3136.0], [2386.0, 6139.0], [2394.0, 1478.0], [2306.0, 5381.0], [2322.0, 4853.75], [2330.0, 10247.0], [2362.0, 1529.0], [2354.0, 3173.0], [2346.0, 7997.0], [2338.0, 3793.0], [2554.0, 1130.0], [2442.0, 3600.0], [2450.0, 3560.0], [2466.0, 1251.5], [2578.0, 1129.75], [2650.0, 1116.5], [2658.0, 1116.0], [2586.0, 1127.5], [2562.0, 1130.0], [2618.0, 1121.0], [2602.0, 1127.25], [2594.0, 1126.0], [2802.0, 4465.0], [2794.0, 2709.0], [2810.0, 4257.5], [2754.0, 1101.2], [2762.0, 1102.0], [2770.0, 1099.0], [2786.0, 305.75], [2690.0, 1113.0], [2746.0, 1105.0], [2738.0, 1107.0], [2730.0, 1108.2], [2722.0, 1110.0], [2930.0, 2432.0], [2938.0, 937.1111111111109], [2882.0, 3747.5], [2898.0, 546.8947368421053], [2906.0, 3983.0], [2922.0, 3583.0], [2914.0, 4322.5], [2842.0, 4195.666666666667], [2834.0, 4447.8], [2826.0, 1354.6666666666667], [2818.0, 42.0], [2874.0, 4813.666666666667], [2866.0, 4513.0], [2858.0, 2818.0], [2850.0, 4201.0], [2954.0, 4029.571428571429], [2946.0, 2722.0], [2962.0, 60.0], [2970.0, 2123.0], [2994.0, 3304.384615384615], [2986.0, 4132.0], [2978.0, 3047.4444444444443], [2171.0, 3257.0], [2123.0, 3057.0], [2131.0, 4812.0], [2139.0, 6519.0], [2163.0, 1180.0], [2155.0, 5487.0], [2147.0, 1740.0], [2075.0, 3139.0], [2067.0, 6332.0], [2059.0, 4168.0], [2051.0, 6724.0], [2107.0, 5121.0], [2099.0, 6182.0], [2091.0, 6235.0], [2275.0, 1100.0], [2291.0, 1096.0], [2203.0, 1114.0], [2299.0, 5187.0], [2283.0, 1096.0], [2179.0, 1148.0], [2187.0, 6310.0], [2195.0, 6120.5], [2235.0, 1102.0], [2227.0, 1373.0], [2219.0, 5209.0], [2211.0, 1106.0], [2427.0, 3678.0], [2371.0, 3718.0], [2379.0, 3686.0], [2395.0, 3111.0], [2419.0, 2896.0], [2411.0, 4260.5], [2403.0, 5698.5], [2315.0, 4341.333333333333], [2307.0, 1609.0], [2363.0, 1528.0], [2347.0, 3133.0], [2339.0, 7024.5], [2531.0, 1136.0], [2547.0, 1134.5], [2491.0, 1145.0], [2435.0, 2171.0], [2443.0, 5264.0], [2451.0, 5693.0], [2459.0, 1309.0], [2467.0, 1250.0], [2675.0, 1116.5], [2683.0, 1114.25], [2627.0, 1122.0], [2635.0, 1120.5], [2643.0, 1119.2], [2667.0, 1117.5], [2659.0, 1117.0], [2571.0, 1128.0], [2563.0, 1131.0], [2619.0, 1123.0], [2595.0, 1126.5], [2787.0, 4815.0], [2771.0, 1100.0], [2691.0, 1113.0], [2699.0, 1113.6], [2707.0, 1111.6666666666667], [2715.0, 1112.5], [2723.0, 1110.0], [2939.0, 41.166666666666664], [2883.0, 4332.333333333334], [2899.0, 5074.0], [2907.0, 2835.0], [2931.0, 1673.6666666666665], [2923.0, 1118.0], [2843.0, 4301.5], [2835.0, 4263.0], [2827.0, 2686.6666666666665], [2819.0, 3251.333333333333], [2875.0, 3124.7142857142853], [2867.0, 5182.0], [2859.0, 7198.0], [2851.0, 5273.5], [2955.0, 3958.181818181818], [2947.0, 4300.879310344828], [2963.0, 54.0], [2971.0, 1729.0], [2995.0, 3263.0000000000005], [2987.0, 3098.5555555555557], [2979.0, 4261.6], [519.0, 5122.0], [539.0, 7347.0], [537.0, 5413.666666666667], [535.0, 7398.333333333333], [527.0, 5837.0], [525.0, 6691.0], [523.0, 6492.0], [521.0, 6616.0], [517.0, 8477.0], [515.0, 10422.0], [513.0, 4595.0], [571.0, 4900.0], [575.0, 7142.0], [569.0, 10646.0], [567.0, 4425.0], [565.0, 4450.0], [563.0, 4984.5], [561.0, 8488.0], [553.0, 8492.0], [549.0, 4495.0], [551.0, 5743.333333333333], [603.0, 4813.0], [607.0, 9276.5], [601.0, 8448.0], [583.0, 4867.0], [581.0, 7297.0], [579.0, 10378.0], [577.0, 10631.0], [599.0, 7071.0], [597.0, 4828.0], [595.0, 6220.0], [593.0, 4184.0], [591.0, 5702.0], [589.0, 9522.0], [587.0, 4326.0], [585.0, 9507.5], [613.0, 4783.0], [639.0, 6367.0], [633.0, 8935.0], [631.0, 4205.0], [627.0, 7003.0], [625.0, 8510.0], [621.0, 6260.0], [619.0, 5503.0], [617.0, 6404.0], [611.0, 4783.0], [609.0, 4787.0], [669.0, 7880.0], [671.0, 4642.0], [667.0, 4663.0], [647.0, 4185.5], [645.0, 4177.0], [643.0, 9710.5], [641.0, 10563.0], [663.0, 4133.0], [661.0, 10083.5], [659.0, 6272.0], [657.0, 3809.0], [655.0, 4161.0], [651.0, 6952.0], [649.0, 4181.0], [701.0, 5874.0], [703.0, 3376.0], [697.0, 3597.0], [679.0, 4598.0], [677.0, 6193.0], [675.0, 4629.0], [695.0, 3175.0], [693.0, 3661.0], [691.0, 7407.0], [689.0, 4448.0], [687.0, 3956.0], [685.0, 4002.0], [681.0, 9885.0], [731.0, 4179.0], [735.0, 3621.0], [729.0, 8773.0], [711.0, 4224.0], [709.0, 6474.0], [705.0, 4241.0], [727.0, 6457.0], [725.0, 5759.0], [723.0, 11309.0], [721.0, 6460.0], [719.0, 4228.0], [717.0, 7152.5], [715.0, 9954.0], [713.0, 4221.0], [747.0, 3478.0], [743.0, 3043.0], [741.0, 4149.0], [739.0, 6403.0], [737.0, 3505.0], [793.0, 3192.0], [791.0, 4965.5], [785.0, 5925.333333333334], [779.0, 7673.5], [777.0, 3592.0], [773.0, 4868.5], [771.0, 4453.5], [769.0, 3602.0], [825.0, 5756.0], [829.0, 4967.0], [831.0, 5483.0], [827.0, 6313.0], [823.0, 9781.0], [817.0, 5318.666666666666], [811.0, 7691.0], [809.0, 3298.0], [805.0, 5407.0], [803.0, 7889.0], [861.0, 5854.666666666667], [863.0, 7843.0], [857.0, 6234.0], [855.0, 3119.0], [853.0, 6799.0], [851.0, 5403.0], [845.0, 5453.5], [841.0, 5412.0], [837.0, 6873.666666666667], [835.0, 5758.0], [833.0, 4123.5], [893.0, 5103.0], [895.0, 4391.0], [891.0, 3309.0], [889.0, 5498.0], [887.0, 2756.0], [885.0, 6109.0], [883.0, 2984.0], [881.0, 6160.0], [879.0, 2826.0], [867.0, 6220.0], [871.0, 3421.0], [869.0, 7204.5], [877.0, 5465.0], [875.0, 5051.0], [873.0, 7047.5], [921.0, 7095.0], [927.0, 10285.0], [913.0, 5702.5], [923.0, 3777.0], [911.0, 5249.0], [897.0, 3295.0], [899.0, 7119.0], [903.0, 5190.5], [901.0, 9821.0], [909.0, 9581.0], [905.0, 3164.0], [917.0, 3250.0], [915.0, 7612.5], [953.0, 3450.5], [957.0, 6922.0], [945.0, 3736.0], [955.0, 5319.0], [943.0, 7482.0], [929.0, 7492.5], [935.0, 3761.0], [941.0, 9574.0], [939.0, 3752.0], [937.0, 3220.0], [951.0, 5354.0], [949.0, 4261.5], [947.0, 3200.0], [963.0, 3700.5], [985.0, 10419.5], [967.0, 8164.0], [965.0, 6155.0], [975.0, 8331.0], [973.0, 5324.0], [971.0, 5936.0], [969.0, 3159.0], [983.0, 10390.0], [981.0, 3677.0], [977.0, 3161.0], [1019.0, 4172.5], [1023.0, 3402.0], [1009.0, 10099.5], [1011.0, 4968.0], [1017.0, 3102.0], [999.0, 3390.0], [997.0, 10194.0], [995.0, 6039.0], [993.0, 5926.0], [1005.0, 5591.5], [1003.0, 3132.0], [1001.0, 3662.0], [1015.0, 3095.0], [1013.0, 5155.0], [1082.0, 2669.0], [1086.0, 2638.0], [1058.0, 3451.0], [1062.0, 4912.0], [1066.0, 2716.0], [1078.0, 2688.0], [1074.0, 2696.0], [1054.0, 4955.0], [1026.0, 3604.0], [1030.0, 3603.0], [1038.0, 3054.0], [1050.0, 5774.0], [1046.0, 3002.0], [1042.0, 5819.0], [1070.0, 2140.0], [1142.0, 2177.0], [1138.0, 5277.0], [1150.0, 4655.0], [1122.0, 8985.0], [1126.0, 2550.0], [1130.0, 4566.0], [1146.0, 3848.0], [1098.0, 9633.0], [1094.0, 7715.5], [1118.0, 6413.0], [1114.0, 2626.0], [1134.0, 3100.0], [1202.0, 5269.0], [1210.0, 3884.0], [1186.0, 2501.5], [1206.0, 7490.0], [1162.0, 3060.0], [1182.0, 2496.0], [1178.0, 4646.5], [1174.0, 5271.0], [1170.0, 3045.0], [1198.0, 6625.0], [1266.0, 6220.0], [1278.0, 2123.0], [1250.0, 2982.0], [1270.0, 5158.0], [1246.0, 4221.0], [1218.0, 5189.0], [1222.0, 9051.0], [1230.0, 2479.0], [1242.0, 6339.0], [1238.0, 6266.0], [1234.0, 6847.5], [1262.0, 7814.0], [1254.0, 5211.0], [1338.0, 8506.5], [1342.0, 4398.0], [1314.0, 2316.0], [1322.0, 9727.0], [1334.0, 4411.0], [1330.0, 2256.0], [1310.0, 5043.0], [1282.0, 5186.0], [1290.0, 2923.0], [1294.0, 8371.0], [1306.0, 4257.5], [1302.0, 7438.0], [1298.0, 4519.0], [1326.0, 2805.5], [1350.0, 7146.5], [1406.0, 8025.0], [1402.0, 1951.0], [1394.0, 2424.5], [1374.0, 2713.0], [1346.0, 2494.5], [1354.0, 9282.0], [1358.0, 4370.0], [1370.0, 4960.0], [1366.0, 4489.5], [1362.0, 4974.0], [1382.0, 4947.0], [1378.0, 2177.0], [1466.0, 4238.0], [1470.0, 6107.0], [1446.0, 2627.0], [1450.0, 9648.0], [1462.0, 2611.0], [1458.0, 6981.666666666667], [1422.0, 5934.0], [1418.0, 2009.0], [1414.0, 4912.0], [1410.0, 4920.0], [1434.0, 2118.0], [1430.0, 4279.0], [1426.0, 6356.0], [1454.0, 4864.0], [1530.0, 4109.5], [1534.0, 1932.0], [1506.0, 2538.0], [1510.0, 5921.0], [1526.0, 1669.0], [1486.0, 2576.0], [1478.0, 2048.0], [1474.0, 6225.0], [1502.0, 4715.0], [1494.0, 3533.0], [1490.0, 2042.0], [1586.0, 1095.0], [1594.0, 1326.0], [1570.0, 2032.5], [1574.0, 1103.0], [1566.0, 5596.0], [1542.0, 7000.0], [1546.0, 4023.0], [1550.0, 3652.0], [1562.0, 1502.0], [1558.0, 1842.0], [1554.0, 1474.0], [1582.0, 1099.0], [1578.0, 1100.0], [1662.0, 1443.0], [1638.0, 1646.0], [1634.0, 1096.0], [1602.0, 1094.0], [1606.0, 1106.0], [1666.0, 1637.8], [1718.0, 1573.5], [1714.0, 2170.0], [1694.0, 1524.0], [1670.0, 1198.0], [1690.0, 1363.5], [1686.0, 1703.5], [1682.0, 1635.0], [1710.0, 1467.0], [1706.0, 1632.0], [1702.0, 1634.5], [1790.0, 1627.0], [1782.0, 1574.5], [1762.0, 1627.0], [1754.0, 1627.0], [1730.0, 1579.5], [1742.0, 1506.0], [1738.0, 1572.0], [1750.0, 1601.0], [1746.0, 1573.75], [1834.0, 1622.0], [1850.0, 1616.0], [1838.0, 1616.0], [1822.0, 1541.3333333333333], [1794.0, 1626.0], [1806.0, 1636.0], [1810.0, 1590.75], [1870.0, 2118.0], [1918.0, 1096.0], [1914.0, 1098.0], [1906.0, 9784.0], [1866.0, 1599.0], [1862.0, 1620.0], [1858.0, 1615.0], [1886.0, 2104.0], [1882.0, 2103.0], [1878.0, 3432.0], [1874.0, 5830.0], [1898.0, 5402.0], [1982.0, 1977.0], [1954.0, 4244.0], [1958.0, 5251.0], [1962.0, 1444.0], [1966.0, 8457.0], [1978.0, 4769.0], [1974.0, 1976.0], [1970.0, 1986.0], [1926.0, 3659.0], [1922.0, 3666.0], [1942.0, 3548.0], [1938.0, 4243.0], [2038.0, 6732.0], [2018.0, 1421.0], [2022.0, 4166.0], [2030.0, 6583.0], [2046.0, 4814.0], [2034.0, 1949.0], [1990.0, 1447.0], [1994.0, 3475.0], [2006.0, 5633.5], [2002.0, 5374.333333333333], [2172.0, 5038.0], [2116.0, 4924.333333333333], [2124.0, 4079.0], [2132.0, 1790.0], [2140.0, 7468.0], [2164.0, 3284.0], [2156.0, 5314.0], [2148.0, 5025.0], [2052.0, 5528.0], [2060.0, 5208.0], [2068.0, 4137.0], [2076.0, 5192.0], [2108.0, 1855.0], [2100.0, 4111.0], [2092.0, 5598.0], [2084.0, 5035.25], [2284.0, 1094.0], [2292.0, 1094.0], [2244.0, 1102.0], [2252.0, 1100.0], [2276.0, 2020.6666666666667], [2180.0, 8775.0], [2188.0, 3197.0], [2196.0, 7318.0], [2204.0, 1647.0], [2212.0, 5383.0], [2380.0, 3692.0], [2388.0, 5517.5], [2420.0, 6122.0], [2412.0, 1457.0], [2404.0, 6120.0], [2340.0, 10240.0], [2396.0, 1475.0], [2540.0, 1134.3333333333333], [2548.0, 1132.0], [2532.0, 1136.0], [2436.0, 6127.0], [2444.0, 6043.0], [2452.0, 1342.0], [2460.0, 1310.0], [2468.0, 3430.0], [2660.0, 1115.0], [2668.0, 1116.3333333333333], [2636.0, 1120.5], [2644.0, 1120.5], [2588.0, 1130.0], [2580.0, 1133.0], [2572.0, 1129.0], [2620.0, 1121.0], [2612.0, 1125.75], [2804.0, 3347.75], [2764.0, 1102.0], [2780.0, 1096.8333333333333], [2812.0, 3884.3333333333335], [2796.0, 3368.0], [2788.0, 42.25], [2692.0, 1114.3333333333333], [2708.0, 1113.0], [2716.0, 1112.0], [2748.0, 1102.8], [2740.0, 1106.3333333333333], [2732.0, 1107.0], [2724.0, 1110.3333333333333], [2916.0, 3599.8333333333335], [2940.0, 40.857142857142854], [2884.0, 3726.666666666667], [2900.0, 3607.0], [2908.0, 5090.333333333333], [2836.0, 3648.0], [2820.0, 39.0], [2876.0, 5843.333333333333], [2868.0, 4632.0], [2860.0, 3149.0], [2852.0, 3879.75], [2956.0, 3423.2800000000007], [2948.0, 3415.5], [2964.0, 1245.923076923077], [2972.0, 2047.8125], [2996.0, 3713.8333333333335], [2988.0, 3624.5555555555557], [2980.0, 2486.1111111111113], [2173.0, 1697.0], [2117.0, 7365.0], [2125.0, 1827.0], [2133.0, 5041.0], [2141.0, 3025.0], [2165.0, 9392.0], [2157.0, 6052.0], [2149.0, 3026.0], [2077.0, 1359.0], [2069.0, 1901.0], [2109.0, 1310.0], [2101.0, 6191.0], [2093.0, 4134.0], [2293.0, 1094.0], [2277.0, 1100.0], [2261.0, 1103.0], [2253.0, 2183.0], [2269.0, 1101.0], [2181.0, 1666.0], [2189.0, 8132.0], [2197.0, 3830.0], [2237.0, 1100.0], [2229.0, 1102.5], [2421.0, 4804.0], [2429.0, 1412.0], [2381.0, 5154.0], [2389.0, 3687.0], [2397.0, 1474.0], [2413.0, 3090.0], [2405.0, 5115.0], [2333.0, 7492.333333333333], [2325.0, 3720.3333333333335], [2309.0, 2415.0], [2365.0, 7181.5], [2357.0, 5022.0], [2341.0, 4851.0], [2549.0, 1134.6666666666667], [2541.0, 1132.5], [2525.0, 1141.5714285714287], [2557.0, 1131.5], [2437.0, 1408.0], [2445.0, 4630.0], [2453.0, 1342.0], [2461.0, 5009.0], [2469.0, 2694.0], [2677.0, 1115.4285714285713], [2637.0, 1119.0], [2645.0, 1119.0], [2653.0, 1118.6666666666667], [2685.0, 1114.0], [2661.0, 1118.0], [2581.0, 1132.0], [2573.0, 1129.0], [2565.0, 1127.5], [2605.0, 1126.5555555555557], [2597.0, 1127.2], [2789.0, 41.5], [2797.0, 3207.0], [2805.0, 5262.0], [2765.0, 1099.5], [2773.0, 1099.25], [2693.0, 1113.0], [2709.0, 1112.3333333333333], [2741.0, 1105.0], [2733.0, 1108.0], [2725.0, 1109.25], [2933.0, 1799.0], [2925.0, 48.57142857142857], [2885.0, 3788.3999999999996], [2893.0, 4860.285714285715], [2901.0, 4188.5], [2909.0, 2874.0], [2941.0, 1111.2083333333335], [2917.0, 1454.0], [2845.0, 5533.5], [2821.0, 4236.0], [2869.0, 2450.0], [2861.0, 4851.666666666667], [2949.0, 4196.679999999999], [2997.0, 4159.333333333333], [2957.0, 3743.846153846154], [2965.0, 2249.0], [2973.0, 2640.764705882353], [2989.0, 3775.8461538461543], [2981.0, 3615.8571428571427], [1079.0, 2554.0], [1087.0, 3183.0], [1059.0, 5671.0], [1083.0, 2536.0], [1055.0, 5678.0], [1027.0, 7073.0], [1031.0, 3051.0], [1039.0, 5816.0], [1051.0, 8935.0], [1047.0, 5729.0], [1071.0, 2456.0], [1067.0, 6119.0], [1143.0, 3076.0], [1151.0, 6350.0], [1123.0, 10052.0], [1127.0, 3107.0], [1139.0, 2555.0], [1119.0, 2612.0], [1091.0, 2899.0], [1095.0, 3173.0], [1103.0, 2640.0], [1099.0, 4485.0], [1115.0, 4789.0], [1111.0, 6437.5], [1107.0, 4283.5], [1135.0, 5790.0], [1131.0, 3106.0], [1167.0, 3566.5], [1203.0, 7391.0], [1191.0, 4664.0], [1211.0, 8405.0], [1163.0, 2147.0], [1159.0, 3874.0], [1155.0, 5841.5], [1183.0, 3532.0], [1179.0, 5288.0], [1175.0, 5871.0], [1171.0, 3041.0], [1199.0, 6376.0], [1195.0, 4288.25], [1275.0, 3807.0], [1279.0, 2942.0], [1251.0, 5226.0], [1255.0, 5221.0], [1259.0, 2703.0], [1271.0, 9432.0], [1231.0, 5848.0], [1227.0, 9053.5], [1219.0, 2109.0], [1247.0, 2993.0], [1243.0, 5245.0], [1239.0, 2993.0], [1235.0, 5242.0], [1263.0, 1847.0], [1331.0, 4213.0], [1339.0, 9869.0], [1343.0, 6609.5], [1335.0, 6041.0], [1287.0, 4270.0], [1291.0, 8758.0], [1295.0, 5113.0], [1307.0, 2369.0], [1303.0, 4394.0], [1327.0, 5054.0], [1319.0, 3695.5], [1395.0, 2162.0], [1407.0, 4177.0], [1379.0, 4288.0], [1399.0, 1881.5], [1375.0, 9638.0], [1351.0, 2490.5], [1347.0, 2220.0], [1355.0, 4291.0], [1359.0, 6329.0], [1371.0, 5490.0], [1363.0, 8173.0], [1387.0, 3467.0], [1383.0, 2695.0], [1459.0, 2615.0], [1467.0, 2606.0], [1443.0, 3723.5], [1447.0, 2086.0], [1419.0, 6997.0], [1415.0, 4918.0], [1411.0, 8063.0], [1439.0, 4946.0], [1435.0, 4893.0], [1431.0, 2642.0], [1427.0, 2642.0], [1455.0, 2613.0], [1451.0, 2089.0], [1475.0, 4224.0], [1527.0, 1950.0], [1523.0, 4031.0], [1503.0, 2008.0], [1479.0, 8440.0], [1483.0, 5533.5], [1487.0, 2568.0], [1499.0, 1727.0], [1495.0, 2015.0], [1491.0, 2566.0], [1519.0, 3847.0], [1515.0, 3651.5], [1507.0, 1988.0], [1591.0, 1095.5], [1587.0, 1099.0], [1599.0, 1097.5], [1571.0, 1745.0], [1575.0, 1097.0], [1595.0, 1102.0], [1551.0, 1743.0], [1547.0, 5119.0], [1543.0, 1926.5], [1539.0, 1817.0], [1567.0, 4563.0], [1563.0, 4581.0], [1555.0, 3630.0], [1579.0, 1099.0], [1663.0, 1646.0], [1659.0, 1404.0], [1635.0, 1100.0], [1611.0, 1597.5], [1607.0, 1653.0], [1615.0, 1098.0], [1623.0, 1096.0], [1719.0, 1642.0], [1727.0, 1630.3333333333333], [1715.0, 1632.0], [1679.0, 1649.0], [1675.0, 1544.75], [1699.0, 1494.6666666666667], [1695.0, 1637.5], [1683.0, 1566.0], [1779.0, 1230.0], [1787.0, 1759.0], [1791.0, 1790.0], [1783.0, 1235.0], [1743.0, 1630.0], [1739.0, 1634.0], [1735.0, 1640.0], [1731.0, 1437.5], [1755.0, 1628.5], [1775.0, 1627.3333333333333], [1771.0, 1486.0], [1847.0, 1880.0], [1851.0, 1624.0], [1843.0, 1883.0], [1819.0, 1751.75], [1807.0, 1584.6666666666667], [1803.0, 1624.0], [1831.0, 1757.0], [1827.0, 1628.6666666666667], [1907.0, 1568.0], [1915.0, 3342.0], [1891.0, 2109.0], [1911.0, 4618.666666666667], [1887.0, 1572.0], [1859.0, 1605.0], [1863.0, 1603.0], [1867.0, 3366.0], [1871.0, 5414.0], [1883.0, 6974.0], [1879.0, 1457.0], [1875.0, 8653.0], [1899.0, 6506.0], [1895.0, 3219.5], [1979.0, 3610.0], [1983.0, 5341.0], [1955.0, 3582.0], [1959.0, 4209.0], [1963.0, 4229.0], [1967.0, 5324.0], [1975.0, 1446.0], [1971.0, 5262.0], [1935.0, 4730.5], [1931.0, 3138.0], [1927.0, 2024.0], [1923.0, 2028.0], [1947.0, 4833.0], [1943.0, 4838.0], [1939.0, 4263.0], [2035.0, 1420.0], [2047.0, 5215.0], [2019.0, 5544.0], [2023.0, 8399.0], [2043.0, 6598.5], [2015.0, 4850.25], [1987.0, 7164.0], [1991.0, 1974.0], [1999.0, 1425.0], [1995.0, 1432.0], [2011.0, 1435.0], [2007.0, 3946.5], [2003.0, 5660.0], [2166.0, 6059.0], [2174.0, 1689.0], [2126.0, 3163.0], [2134.0, 3414.0], [2158.0, 5307.0], [2150.0, 3116.0], [2110.0, 4089.0], [2054.0, 4393.0], [2062.0, 8590.0], [2070.0, 1908.0], [2078.0, 5438.0], [2094.0, 3222.0], [2086.0, 4412.0], [2286.0, 1095.0], [2246.0, 1103.5], [2262.0, 1099.0], [2294.0, 7405.0], [2238.0, 1102.0], [2182.0, 1670.0], [2190.0, 7429.0], [2198.0, 3219.0], [2206.0, 6908.0], [2230.0, 1102.0], [2214.0, 3894.0], [2406.0, 1459.0], [2414.0, 3088.0], [2374.0, 4289.666666666667], [2382.0, 4794.0], [2390.0, 2724.0], [2366.0, 6145.0], [2318.0, 3234.0], [2334.0, 2836.0], [2358.0, 4911.0], [2350.0, 4641.0], [2342.0, 9244.0], [2398.0, 1472.0], [2534.0, 1134.3333333333333], [2542.0, 1132.0], [2558.0, 1128.0], [2550.0, 1132.0], [2438.0, 2990.0], [2446.0, 4998.0], [2454.0, 3533.0], [2462.0, 4013.0], [2470.0, 1170.0], [2662.0, 1118.0], [2582.0, 1128.5], [2630.0, 1121.0], [2638.0, 1121.0], [2646.0, 1119.5], [2686.0, 1114.3333333333335], [2574.0, 1131.0], [2566.0, 1128.0], [2622.0, 1122.0], [2614.0, 1123.3333333333333], [2606.0, 1125.2], [2814.0, 3404.0], [2758.0, 1101.25], [2766.0, 1100.0], [2782.0, 1096.0], [2806.0, 3213.0], [2798.0, 4719.75], [2790.0, 1334.0], [2694.0, 1112.0], [2702.0, 1113.5], [2710.0, 1112.0], [2742.0, 1106.0], [2934.0, 44.0], [2886.0, 4043.666666666667], [2894.0, 3416.1], [2902.0, 4763.583333333334], [2910.0, 5020.5], [2942.0, 4613.5], [2926.0, 47.57142857142857], [2918.0, 4074.857142857143], [2846.0, 2474.0], [2838.0, 3930.8], [2830.0, 3301.6666666666665], [2878.0, 4011.25], [2870.0, 2521.0], [2862.0, 9159.0], [2854.0, 4679.0], [2958.0, 3761.5], [2966.0, 1481.0], [2974.0, 3822.956521739131], [2998.0, 2124.75], [2982.0, 4472.9333333333325], [2159.0, 6365.0], [2151.0, 4480.0], [2167.0, 3216.0], [2175.0, 1159.0], [2119.0, 3208.0], [2127.0, 4064.0], [2143.0, 2240.0], [2079.0, 1896.0], [2063.0, 5627.0], [2055.0, 1386.0], [2111.0, 4099.0], [2103.0, 8097.0], [2095.0, 5164.0], [2087.0, 1884.0], [2199.0, 4990.0], [2263.0, 1098.0], [2271.0, 1098.0], [2295.0, 3860.0], [2239.0, 1101.0], [2183.0, 9353.0], [2191.0, 5248.0], [2207.0, 1646.0], [2231.0, 1103.0], [2223.0, 1638.4], [2415.0, 1451.0], [2423.0, 1440.5], [2375.0, 5928.0], [2383.0, 3743.0], [2391.0, 4773.0], [2399.0, 3103.0], [2407.0, 1456.0], [2319.0, 4071.5], [2311.0, 5606.0], [2367.0, 4738.0], [2359.0, 4941.0], [2351.0, 8643.0], [2343.0, 8101.0], [2559.0, 1128.0], [2527.0, 1136.25], [2439.0, 5219.0], [2447.0, 1357.0], [2455.0, 1322.0], [2463.0, 4761.0], [2471.0, 606.5], [2663.0, 1117.0], [2671.0, 1117.5], [2687.0, 1116.0], [2639.0, 1120.0], [2647.0, 1121.0], [2655.0, 1117.3333333333333], [2591.0, 1135.0], [2583.0, 1128.5], [2623.0, 1121.6666666666667], [2615.0, 1124.0], [2799.0, 2289.0], [2807.0, 3741.0], [2815.0, 5861.0], [2775.0, 1098.0], [2783.0, 1096.5], [2791.0, 4246.0], [2751.0, 1102.6666666666667], [2695.0, 1113.5], [2703.0, 1113.0], [2711.0, 1112.0], [2719.0, 1111.0], [2735.0, 1106.5], [2727.0, 1111.5], [2943.0, 4127.571428571428], [2935.0, 43.4], [2887.0, 5316.0], [2895.0, 4010.1666666666665], [2903.0, 5047.166666666667], [2911.0, 5119.333333333333], [2919.0, 2003.6666666666667], [2847.0, 6072.333333333333], [2839.0, 2469.0], [2831.0, 4960.0], [2823.0, 2846.333333333333], [2879.0, 2486.0], [2871.0, 7060.6], [2863.0, 6062.5], [2959.0, 3190.5], [2951.0, 4511.666666666667], [2967.0, 1433.0], [2975.0, 3050.263157894737], [2999.0, 3400.875], [2991.0, 3745.5], [2983.0, 4277.0], [1.0, 10874.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2979.370816629977, 2397.377284046541]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 99.55, "minX": 1.6842042E12, "maxY": 574153.5333333333, "series": [{"data": [[1.68420444E12, 449665.2833333333], [1.68420426E12, 574153.5333333333], [1.68420456E12, 109.26666666666667], [1.68420438E12, 433653.11666666664], [1.6842042E12, 3421.2833333333333], [1.6842045E12, 410467.51666666666], [1.68420432E12, 448286.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68420444E12, 390579.9], [1.68420426E12, 488926.25], [1.68420456E12, 99.55], [1.68420438E12, 375575.0], [1.6842042E12, 2796.45], [1.6842045E12, 355565.45], [1.68420432E12, 388453.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420456E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1998.499427320613, "minX": 1.6842042E12, "maxY": 10560.272727272728, "series": [{"data": [[1.68420444E12, 1999.7359531036518], [1.68420426E12, 3527.181443260808], [1.68420456E12, 10560.272727272728], [1.68420438E12, 2063.0880240963907], [1.6842042E12, 5927.576051779935], [1.6842045E12, 1998.499427320613], [1.68420432E12, 2034.7494350348604]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420456E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1998.2637633943425, "minX": 1.6842042E12, "maxY": 10560.0, "series": [{"data": [[1.68420444E12, 1999.4903264672344], [1.68420426E12, 3517.411765793769], [1.68420456E12, 10560.0], [1.68420438E12, 2062.8667710843333], [1.6842042E12, 5924.524271844654], [1.6842045E12, 1998.2637633943425], [1.68420432E12, 2034.5109847866918]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420456E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6842042E12, "maxY": 4139.304207119746, "series": [{"data": [[1.68420444E12, 43.29365833314031], [1.68420426E12, 315.8647174138201], [1.68420456E12, 0.0], [1.68420438E12, 104.10592771084258], [1.6842042E12, 4139.304207119746], [1.6842045E12, 39.2255084120237], [1.68420432E12, 27.49013349486301]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420456E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 54.0, "minX": 1.6842042E12, "maxY": 22473.0, "series": [{"data": [[1.68420444E12, 16981.0], [1.68420426E12, 22473.0], [1.68420456E12, 10940.0], [1.68420438E12, 12820.0], [1.6842042E12, 8685.0], [1.6842045E12, 14970.0], [1.68420432E12, 17208.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68420444E12, 3326.9000000000015], [1.68420426E12, 8744.900000000001], [1.68420456E12, 10940.0], [1.68420438E12, 5119.0], [1.6842042E12, 7913.0], [1.6842045E12, 4824.9000000000015], [1.68420432E12, 3005.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68420444E12, 7322.94000000001], [1.68420426E12, 11198.0], [1.68420456E12, 10940.0], [1.68420438E12, 9467.990000000002], [1.6842042E12, 8556.92], [1.6842045E12, 9725.990000000002], [1.68420432E12, 6651.950000000008]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68420444E12, 4223.0], [1.68420426E12, 10265.800000000003], [1.68420456E12, 10940.0], [1.68420438E12, 6228.950000000001], [1.6842042E12, 8194.05], [1.6842045E12, 6328.850000000002], [1.68420432E12, 3786.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68420444E12, 54.0], [1.68420426E12, 1089.0], [1.68420456E12, 10312.0], [1.68420438E12, 54.0], [1.6842042E12, 1104.0], [1.6842045E12, 75.0], [1.68420432E12, 54.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68420444E12, 1623.0], [1.68420426E12, 1667.0], [1.68420456E12, 10659.0], [1.68420438E12, 1823.0], [1.6842042E12, 6279.5], [1.6842045E12, 1986.0], [1.68420432E12, 1373.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420456E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 5.0, "maxY": 12155.0, "series": [{"data": [[5.0, 5694.0], [7.0, 7665.0], [8.0, 3220.5], [10.0, 5076.0], [11.0, 10659.0], [13.0, 7203.0], [17.0, 4091.0], [23.0, 2154.0], [24.0, 6167.0], [25.0, 2158.0], [27.0, 6117.0], [30.0, 6355.0], [33.0, 9732.0], [34.0, 5150.0], [43.0, 2278.0], [42.0, 2151.5], [45.0, 7472.0], [50.0, 4920.5], [52.0, 1302.0], [53.0, 7066.0], [56.0, 8861.0], [62.0, 3671.0], [68.0, 7287.0], [73.0, 7757.5], [80.0, 6919.0], [81.0, 7680.5], [87.0, 3665.0], [85.0, 2670.0], [88.0, 2175.0], [91.0, 3146.0], [90.0, 2806.5], [96.0, 9032.0], [102.0, 10624.0], [104.0, 8344.0], [111.0, 2009.5], [117.0, 2582.0], [138.0, 8904.0], [143.0, 7889.5], [145.0, 3287.0], [150.0, 7560.0], [158.0, 1103.0], [164.0, 2172.0], [171.0, 3007.0], [174.0, 6866.0], [205.0, 7817.0], [204.0, 2624.0], [209.0, 9891.5], [214.0, 6217.0], [231.0, 2201.5], [228.0, 1148.0], [240.0, 2171.0], [258.0, 4940.0], [280.0, 2383.5], [279.0, 5619.0], [291.0, 2150.0], [295.0, 1962.0], [307.0, 2805.0], [305.0, 5407.0], [349.0, 2795.0], [341.0, 1115.0], [359.0, 4394.5], [363.0, 2537.0], [380.0, 1939.0], [392.0, 4882.0], [419.0, 1635.0], [427.0, 3317.5], [416.0, 4632.0], [447.0, 6771.0], [485.0, 4240.0], [483.0, 1620.0], [557.0, 11698.5], [559.0, 3407.5], [546.0, 1266.0], [544.0, 3569.0], [548.0, 1112.0], [562.0, 2071.0], [590.0, 1789.0], [577.0, 1109.0], [595.0, 3289.0], [636.0, 2312.5], [621.0, 1102.0], [620.0, 1480.5], [638.0, 2263.0], [612.0, 1166.5], [624.0, 2557.0], [659.0, 1104.0], [643.0, 4324.0], [656.0, 2311.5], [681.0, 1430.0], [696.0, 1101.0], [699.0, 3177.0], [701.0, 1584.0], [683.0, 1726.0], [731.0, 1101.0], [734.0, 1104.0], [732.0, 1122.0], [728.0, 1101.0], [717.0, 1513.0], [729.0, 1107.0], [739.0, 1129.0], [765.0, 12155.0], [744.0, 2246.5], [757.0, 1131.0], [766.0, 1115.0], [743.0, 1193.0], [762.0, 1114.0], [746.0, 1100.0], [750.0, 1100.0], [749.0, 1115.0], [736.0, 2041.0], [737.0, 1101.0], [760.0, 2289.0], [780.0, 1725.0], [772.0, 1692.0], [791.0, 2972.0], [790.0, 2087.5], [804.0, 1201.0], [818.0, 1469.0], [808.0, 1633.0], [820.0, 2059.0], [809.0, 1954.0], [807.0, 1100.0], [815.0, 1633.0], [813.0, 1695.0], [824.0, 1875.0], [821.0, 1791.0], [838.0, 1130.0], [861.0, 1140.0], [854.0, 1653.5], [844.0, 1111.0], [859.0, 2875.5], [867.0, 2073.0], [864.0, 1949.5], [874.0, 3136.5], [893.0, 3089.0], [872.0, 1160.0], [880.0, 2093.0], [894.0, 1208.0], [879.0, 1580.0], [875.0, 1124.0], [866.0, 1118.0], [869.0, 1531.0], [892.0, 1383.0], [920.0, 2083.0], [926.0, 2202.0], [901.0, 3066.0], [902.0, 1810.0], [914.0, 2991.5], [912.0, 1253.5], [918.0, 1622.5], [916.0, 1740.5], [915.0, 1820.5], [921.0, 2366.5], [922.0, 1373.5], [924.0, 1463.0], [925.0, 1825.0], [905.0, 1632.0], [904.0, 1932.0], [906.0, 2357.0], [908.0, 2106.0], [909.0, 1591.0], [952.0, 1321.0], [945.0, 2472.0], [941.0, 2079.0], [942.0, 1119.0], [929.0, 1349.0], [943.0, 1121.0], [930.0, 1593.5], [932.0, 1532.0], [931.0, 1128.0], [935.0, 1568.0], [934.0, 1191.0], [950.0, 1601.0], [951.0, 2762.5], [948.0, 1101.0], [957.0, 1495.0], [954.0, 1101.0], [958.0, 1762.0], [944.0, 1837.0], [959.0, 2514.5], [940.0, 1220.0], [939.0, 1722.0], [936.0, 1984.5], [937.0, 1117.0], [987.0, 2893.0], [990.0, 1493.0], [980.0, 2588.5], [981.0, 1509.0], [982.0, 1437.5], [983.0, 1645.0], [985.0, 1472.0], [986.0, 1491.5], [962.0, 1799.0], [964.0, 1151.0], [966.0, 2087.0], [989.0, 1563.5], [991.0, 1457.0], [978.0, 1453.0], [988.0, 1384.0], [971.0, 1156.0], [973.0, 1308.0], [974.0, 1454.5], [975.0, 2441.5], [960.0, 1466.0], [1020.0, 1363.0], [997.0, 1400.0], [1001.0, 1259.0], [1014.0, 1443.0], [1016.0, 1192.0], [1018.0, 2773.0], [1023.0, 1573.0], [1017.0, 1118.0], [1021.0, 1961.0], [1008.0, 1105.0], [1029.0, 1743.0], [1053.0, 1196.5], [1035.0, 1827.0], [1033.0, 1323.0], [1030.0, 1215.0], [1036.0, 1142.0], [1038.0, 3053.5], [1072.0, 1876.0], [1073.0, 1918.5], [1050.0, 1297.5], [1041.0, 1891.0], [1043.0, 1102.0], [1076.0, 1111.0], [1077.0, 2137.0], [1079.0, 2311.0], [1083.0, 2329.0], [1062.0, 1102.0], [1068.0, 1154.0], [1060.0, 1635.0], [1058.0, 1126.0], [1051.0, 1858.0], [1052.0, 1858.5], [1028.0, 1808.0], [1025.0, 1100.0], [1027.0, 2722.5], [1146.0, 1461.5], [1132.0, 1756.0], [1109.0, 2088.0], [1130.0, 2138.0], [1134.0, 1111.0], [1119.0, 1111.0], [1118.0, 1912.0], [1113.0, 1940.0], [1111.0, 1938.0], [1124.0, 1899.5], [1176.0, 1116.0], [1173.0, 1778.0], [1159.0, 1121.0], [1179.0, 1685.0], [1245.0, 2226.0], [1359.0, 1119.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[5.0, 44.0], [7.0, 41.0], [11.0, 10186.0], [24.0, 10366.0], [30.0, 41.0], [34.0, 10488.0], [43.0, 10595.0], [53.0, 362.5], [56.0, 10395.5], [62.0, 170.0], [68.0, 10094.0], [73.0, 10174.0], [80.0, 6958.5], [81.0, 7046.0], [88.0, 59.0], [90.0, 50.5], [96.0, 10258.0], [102.0, 46.0], [104.0, 10199.5], [111.0, 42.0], [117.0, 43.0], [138.0, 5324.5], [143.0, 10058.0], [145.0, 61.5], [150.0, 10345.0], [158.0, 43.0], [164.0, 45.0], [171.0, 10168.0], [174.0, 11170.0], [205.0, 10405.0], [209.0, 47.0], [214.0, 10238.0], [231.0, 10568.0], [228.0, 47.0], [240.0, 55.0], [258.0, 102.0], [279.0, 465.0], [291.0, 56.0], [295.0, 10333.0], [307.0, 53.0], [305.0, 10241.5], [349.0, 40.0], [341.0, 43.5], [359.0, 10286.0], [380.0, 10357.0], [392.0, 5471.0], [419.0, 42.5], [427.0, 51.0], [416.0, 10147.0], [447.0, 10506.0], [485.0, 43.5], [557.0, 10933.0], [559.0, 10330.0], [546.0, 10080.0], [544.0, 56.0], [548.0, 556.5], [562.0, 42.0], [590.0, 10174.0], [621.0, 41.0], [638.0, 43.0], [624.0, 45.0], [659.0, 532.0], [643.0, 50.0], [696.0, 10500.0], [699.0, 82.0], [701.0, 41.0], [731.0, 40.0], [734.0, 42.0], [743.0, 40.0], [765.0, 41.0], [744.0, 59.0], [757.0, 10194.0], [746.0, 44.0], [750.0, 43.5], [760.0, 67.0], [766.0, 245.0], [736.0, 47.0], [737.0, 44.0], [791.0, 70.0], [818.0, 10141.0], [808.0, 10275.0], [820.0, 50.0], [807.0, 42.0], [824.0, 50.0], [821.0, 44.0], [838.0, 53.0], [861.0, 41.0], [854.0, 10470.5], [859.0, 41.0], [867.0, 40.0], [874.0, 41.5], [893.0, 43.0], [872.0, 47.0], [880.0, 53.0], [894.0, 45.0], [879.0, 10530.0], [866.0, 42.0], [892.0, 71.0], [875.0, 1039.0], [920.0, 42.0], [926.0, 49.0], [901.0, 41.0], [902.0, 10169.5], [914.0, 42.0], [918.0, 42.0], [915.0, 100.0], [921.0, 42.0], [922.0, 43.0], [924.0, 43.0], [925.0, 47.0], [905.0, 42.0], [906.0, 10142.0], [908.0, 40.5], [909.0, 2789.0], [952.0, 43.0], [945.0, 41.0], [941.0, 42.0], [929.0, 45.0], [943.0, 52.0], [930.0, 43.0], [932.0, 43.0], [931.0, 129.0], [935.0, 42.0], [950.0, 48.0], [951.0, 43.0], [957.0, 43.0], [954.0, 42.0], [958.0, 43.0], [944.0, 313.0], [959.0, 49.0], [940.0, 5043.5], [939.0, 266.0], [936.0, 51.0], [937.0, 10499.0], [987.0, 41.0], [990.0, 42.0], [980.0, 41.5], [981.0, 10068.5], [982.0, 42.0], [983.0, 42.0], [985.0, 43.0], [986.0, 55.0], [962.0, 54.0], [964.0, 554.0], [966.0, 58.0], [989.0, 10054.0], [991.0, 45.0], [978.0, 42.0], [988.0, 43.0], [971.0, 48.0], [973.0, 42.0], [974.0, 43.0], [975.0, 41.0], [960.0, 43.0], [1020.0, 46.0], [997.0, 43.0], [1001.0, 52.0], [1014.0, 43.0], [1016.0, 41.0], [1018.0, 53.0], [1023.0, 47.0], [1017.0, 758.0], [1021.0, 60.0], [1008.0, 49.0], [1029.0, 43.0], [1053.0, 42.0], [1035.0, 43.0], [1033.0, 100.0], [1030.0, 50.0], [1036.0, 50.0], [1038.0, 41.0], [1072.0, 46.0], [1073.0, 48.0], [1050.0, 41.0], [1041.0, 60.0], [1043.0, 42.0], [1076.0, 57.0], [1077.0, 42.0], [1079.0, 42.0], [1083.0, 41.0], [1062.0, 41.0], [1068.0, 46.0], [1060.0, 46.0], [1058.0, 54.0], [1051.0, 44.0], [1052.0, 53.0], [1028.0, 51.0], [1025.0, 48.0], [1027.0, 41.0], [1146.0, 46.0], [1132.0, 40.0], [1109.0, 44.0], [1130.0, 44.0], [1134.0, 47.0], [1119.0, 51.0], [1118.0, 41.0], [1113.0, 55.0], [1111.0, 41.0], [1124.0, 50.0], [1176.0, 40.0], [1173.0, 40.0], [1159.0, 44.5], [1179.0, 57.0], [1245.0, 42.0], [1359.0, 44.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1359.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 5.0, "maxY": 12155.0, "series": [{"data": [[5.0, 5694.0], [7.0, 7665.0], [8.0, 3220.0], [10.0, 5075.5], [11.0, 10659.0], [13.0, 7203.0], [17.0, 4090.0], [23.0, 2154.0], [24.0, 6167.0], [25.0, 2158.0], [27.0, 6117.0], [30.0, 6355.0], [33.0, 9732.0], [34.0, 5149.5], [43.0, 2278.0], [42.0, 2151.5], [45.0, 7472.0], [50.0, 4920.5], [52.0, 1302.0], [53.0, 7066.0], [56.0, 8861.0], [62.0, 3671.0], [68.0, 7287.0], [73.0, 7757.0], [80.0, 6919.0], [81.0, 7680.5], [87.0, 3665.0], [85.0, 2669.0], [88.0, 2175.0], [91.0, 3146.0], [90.0, 2806.0], [96.0, 9032.0], [102.0, 10624.0], [104.0, 8343.5], [111.0, 2009.0], [117.0, 2582.0], [138.0, 8904.0], [143.0, 7889.5], [145.0, 3286.0], [150.0, 7559.0], [158.0, 1103.0], [164.0, 2171.0], [171.0, 3006.5], [174.0, 6866.0], [205.0, 7817.0], [204.0, 2623.5], [209.0, 9889.5], [214.0, 6217.0], [231.0, 2201.5], [228.0, 1148.0], [240.0, 2171.0], [258.0, 4940.0], [280.0, 2383.0], [279.0, 5619.0], [291.0, 2150.0], [295.0, 1961.0], [307.0, 2804.0], [305.0, 5407.0], [349.0, 2794.5], [341.0, 1115.0], [359.0, 4394.5], [363.0, 2536.0], [380.0, 1939.0], [392.0, 4882.0], [419.0, 1635.0], [427.0, 3317.5], [416.0, 4631.0], [447.0, 6771.0], [485.0, 4240.0], [483.0, 1620.0], [557.0, 11697.5], [559.0, 3407.0], [546.0, 1266.0], [544.0, 3569.0], [548.0, 1111.0], [562.0, 2070.5], [590.0, 1789.0], [577.0, 1108.0], [595.0, 3289.0], [636.0, 2312.5], [621.0, 1101.0], [620.0, 1480.0], [638.0, 2263.0], [612.0, 1166.0], [624.0, 2556.5], [659.0, 1104.0], [643.0, 4323.0], [656.0, 2311.0], [681.0, 1429.0], [696.0, 1101.0], [699.0, 3177.0], [701.0, 1583.0], [683.0, 1726.0], [731.0, 1101.0], [734.0, 1104.0], [732.0, 1122.0], [728.0, 1100.0], [717.0, 1513.0], [729.0, 1107.0], [739.0, 1128.0], [765.0, 12155.0], [744.0, 2246.0], [757.0, 1130.0], [766.0, 1115.0], [743.0, 1193.0], [762.0, 1114.0], [746.0, 1100.0], [750.0, 1100.0], [749.0, 1115.0], [736.0, 2041.0], [737.0, 1101.0], [760.0, 2289.0], [780.0, 1725.0], [772.0, 1692.0], [791.0, 2972.0], [790.0, 2087.5], [804.0, 1200.5], [818.0, 1469.0], [808.0, 1633.0], [820.0, 2058.0], [809.0, 1954.0], [807.0, 1100.0], [815.0, 1632.0], [813.0, 1695.0], [824.0, 1874.0], [821.0, 1791.0], [838.0, 1130.0], [861.0, 1138.0], [854.0, 1653.5], [844.0, 1111.0], [859.0, 2874.5], [867.0, 2072.5], [864.0, 1948.5], [874.0, 3136.5], [893.0, 3088.0], [872.0, 1160.0], [880.0, 2093.0], [894.0, 1208.0], [879.0, 1579.5], [875.0, 1123.0], [866.0, 1118.0], [869.0, 1531.0], [892.0, 1382.0], [920.0, 2083.0], [926.0, 2202.0], [901.0, 3066.0], [902.0, 1809.5], [914.0, 2991.5], [912.0, 1253.5], [918.0, 1622.0], [916.0, 1740.5], [915.0, 1820.5], [921.0, 2366.5], [922.0, 1373.5], [924.0, 1454.0], [925.0, 1825.0], [905.0, 1632.0], [904.0, 1931.5], [906.0, 2357.0], [908.0, 2105.5], [909.0, 1591.0], [952.0, 1320.0], [945.0, 2472.0], [941.0, 2079.0], [942.0, 1119.0], [929.0, 1349.0], [943.0, 1121.0], [930.0, 1593.0], [932.0, 1532.0], [931.0, 1127.0], [935.0, 1567.0], [934.0, 1191.0], [950.0, 1601.0], [951.0, 2762.5], [948.0, 1101.0], [957.0, 1495.0], [954.0, 1100.0], [958.0, 1762.0], [944.0, 1837.0], [959.0, 2514.5], [940.0, 1220.0], [939.0, 1718.5], [936.0, 1984.5], [937.0, 1116.5], [987.0, 2892.5], [990.0, 1493.0], [980.0, 2588.5], [981.0, 1509.0], [982.0, 1437.5], [983.0, 1645.0], [985.0, 1470.0], [986.0, 1491.5], [962.0, 1798.0], [964.0, 1151.0], [966.0, 2087.0], [989.0, 1563.0], [991.0, 1457.0], [978.0, 1453.0], [988.0, 1384.0], [971.0, 1156.0], [973.0, 1307.0], [974.0, 1454.5], [975.0, 2441.5], [960.0, 1462.0], [1020.0, 1362.0], [997.0, 1400.0], [1001.0, 1258.5], [1014.0, 1443.0], [1016.0, 1192.0], [1018.0, 2773.0], [1023.0, 1573.0], [1017.0, 1118.0], [1021.0, 1961.0], [1008.0, 1105.0], [1029.0, 1743.0], [1053.0, 1196.5], [1035.0, 1826.0], [1033.0, 1322.0], [1030.0, 1214.5], [1036.0, 1142.0], [1038.0, 3053.5], [1072.0, 1875.0], [1073.0, 1918.0], [1050.0, 1297.0], [1041.0, 1891.0], [1043.0, 1102.0], [1076.0, 1111.0], [1077.0, 2137.0], [1079.0, 2310.0], [1083.0, 2329.0], [1062.0, 1102.0], [1068.0, 1154.0], [1060.0, 1635.0], [1058.0, 1126.0], [1051.0, 1858.0], [1052.0, 1858.5], [1028.0, 1808.0], [1025.0, 1100.0], [1027.0, 2722.5], [1146.0, 1460.5], [1132.0, 1756.0], [1109.0, 2087.0], [1130.0, 2138.0], [1134.0, 1111.0], [1119.0, 1111.0], [1118.0, 1911.0], [1113.0, 1940.0], [1111.0, 1937.5], [1124.0, 1899.0], [1176.0, 1116.0], [1173.0, 1777.5], [1159.0, 1121.0], [1179.0, 1684.5], [1245.0, 2226.0], [1359.0, 1119.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[5.0, 44.0], [7.0, 41.0], [11.0, 10186.0], [24.0, 10366.0], [30.0, 41.0], [34.0, 10488.0], [43.0, 10595.0], [53.0, 362.5], [56.0, 10395.5], [62.0, 170.0], [68.0, 10094.0], [73.0, 10174.0], [80.0, 6958.5], [81.0, 7046.0], [88.0, 59.0], [90.0, 50.5], [96.0, 10258.0], [102.0, 46.0], [104.0, 10199.5], [111.0, 42.0], [117.0, 43.0], [138.0, 5324.5], [143.0, 10058.0], [145.0, 61.5], [150.0, 10345.0], [158.0, 43.0], [164.0, 45.0], [171.0, 10168.0], [174.0, 11170.0], [205.0, 10405.0], [209.0, 47.0], [214.0, 10238.0], [231.0, 10568.0], [228.0, 47.0], [240.0, 55.0], [258.0, 102.0], [279.0, 465.0], [291.0, 56.0], [295.0, 10333.0], [307.0, 53.0], [305.0, 10241.5], [349.0, 40.0], [341.0, 43.5], [359.0, 10286.0], [380.0, 10357.0], [392.0, 5471.0], [419.0, 42.5], [427.0, 51.0], [416.0, 10147.0], [447.0, 43.0], [485.0, 43.5], [557.0, 0.0], [559.0, 10330.0], [546.0, 10080.0], [544.0, 56.0], [548.0, 556.5], [562.0, 42.0], [590.0, 10174.0], [621.0, 41.0], [638.0, 43.0], [624.0, 45.0], [659.0, 531.5], [643.0, 50.0], [696.0, 10500.0], [699.0, 82.0], [701.0, 41.0], [731.0, 40.0], [734.0, 42.0], [743.0, 40.0], [765.0, 41.0], [744.0, 59.0], [757.0, 10194.0], [746.0, 44.0], [750.0, 43.5], [760.0, 67.0], [766.0, 245.0], [736.0, 47.0], [737.0, 44.0], [791.0, 70.0], [818.0, 10141.0], [808.0, 10275.0], [820.0, 50.0], [807.0, 42.0], [824.0, 50.0], [821.0, 44.0], [838.0, 53.0], [861.0, 41.0], [854.0, 10470.5], [859.0, 41.0], [867.0, 40.0], [874.0, 41.5], [893.0, 43.0], [872.0, 47.0], [880.0, 53.0], [894.0, 45.0], [879.0, 10530.0], [866.0, 42.0], [892.0, 71.0], [875.0, 1039.0], [920.0, 42.0], [926.0, 49.0], [901.0, 41.0], [902.0, 10169.5], [914.0, 42.0], [918.0, 42.0], [915.0, 100.0], [921.0, 42.0], [922.0, 43.0], [924.0, 43.0], [925.0, 47.0], [905.0, 42.0], [906.0, 10142.0], [908.0, 40.5], [909.0, 2789.0], [952.0, 43.0], [945.0, 41.0], [941.0, 42.0], [929.0, 45.0], [943.0, 52.0], [930.0, 43.0], [932.0, 43.0], [931.0, 129.0], [935.0, 42.0], [950.0, 48.0], [951.0, 43.0], [957.0, 43.0], [954.0, 42.0], [958.0, 43.0], [944.0, 313.0], [959.0, 49.0], [940.0, 5043.5], [939.0, 266.0], [936.0, 51.0], [937.0, 10499.0], [987.0, 41.0], [990.0, 42.0], [980.0, 41.5], [981.0, 10068.5], [982.0, 42.0], [983.0, 42.0], [985.0, 43.0], [986.0, 55.0], [962.0, 54.0], [964.0, 554.0], [966.0, 58.0], [989.0, 10054.0], [991.0, 45.0], [978.0, 42.0], [988.0, 43.0], [971.0, 48.0], [973.0, 42.0], [974.0, 43.0], [975.0, 41.0], [960.0, 43.0], [1020.0, 46.0], [997.0, 43.0], [1001.0, 52.0], [1014.0, 43.0], [1016.0, 41.0], [1018.0, 53.0], [1023.0, 47.0], [1017.0, 758.0], [1021.0, 60.0], [1008.0, 49.0], [1029.0, 43.0], [1053.0, 42.0], [1035.0, 43.0], [1033.0, 100.0], [1030.0, 50.0], [1036.0, 50.0], [1038.0, 41.0], [1072.0, 46.0], [1073.0, 48.0], [1050.0, 41.0], [1041.0, 60.0], [1043.0, 42.0], [1076.0, 57.0], [1077.0, 42.0], [1079.0, 42.0], [1083.0, 41.0], [1062.0, 41.0], [1068.0, 46.0], [1060.0, 46.0], [1058.0, 54.0], [1051.0, 44.0], [1052.0, 53.0], [1028.0, 51.0], [1025.0, 48.0], [1027.0, 41.0], [1146.0, 46.0], [1132.0, 40.0], [1109.0, 44.0], [1130.0, 44.0], [1134.0, 47.0], [1119.0, 51.0], [1118.0, 41.0], [1113.0, 55.0], [1111.0, 41.0], [1124.0, 50.0], [1176.0, 40.0], [1173.0, 40.0], [1159.0, 44.5], [1179.0, 57.0], [1245.0, 42.0], [1359.0, 44.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1359.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 55.15, "minX": 1.6842042E12, "maxY": 874.5833333333334, "series": [{"data": [[1.68420444E12, 713.85], [1.68420426E12, 874.5833333333334], [1.68420438E12, 692.9833333333333], [1.6842042E12, 55.15], [1.6842045E12, 629.3833333333333], [1.68420432E12, 721.7666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6842045E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6842042E12, "maxY": 826.2333333333333, "series": [{"data": [[1.68420444E12, 0.016666666666666666], [1.68420426E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68420444E12, 641.2166666666667], [1.68420426E12, 826.2333333333333], [1.68420456E12, 0.15], [1.68420438E12, 619.7333333333333], [1.6842042E12, 5.1], [1.6842045E12, 586.7666666666667], [1.68420432E12, 640.35]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68420426E12, 0.16666666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68420426E12, 0.65]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68420444E12, 78.08333333333333], [1.68420426E12, 74.01666666666667], [1.68420456E12, 0.03333333333333333], [1.68420438E12, 71.93333333333334], [1.6842042E12, 0.05], [1.6842045E12, 68.05], [1.68420432E12, 75.03333333333333]], "isOverall": false, "label": "429", "isController": false}, {"data": [[1.68420426E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420456E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6842042E12, "maxY": 826.2333333333333, "series": [{"data": [[1.68420444E12, 641.2166666666667], [1.68420426E12, 826.2333333333333], [1.68420456E12, 0.15], [1.68420438E12, 619.7333333333333], [1.6842042E12, 5.1], [1.6842045E12, 586.7666666666667], [1.68420432E12, 640.35]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68420444E12, 78.1], [1.68420426E12, 74.96666666666667], [1.68420456E12, 0.03333333333333333], [1.68420438E12, 71.93333333333334], [1.6842042E12, 0.05], [1.6842045E12, 68.05], [1.68420432E12, 75.03333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420456E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6842042E12, "maxY": 826.2333333333333, "series": [{"data": [[1.68420444E12, 641.2166666666667], [1.68420426E12, 826.2333333333333], [1.68420456E12, 0.15], [1.68420438E12, 619.7333333333333], [1.6842042E12, 5.1], [1.6842045E12, 586.7666666666667], [1.68420432E12, 640.35]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68420444E12, 78.1], [1.68420426E12, 74.96666666666667], [1.68420456E12, 0.03333333333333333], [1.68420438E12, 71.93333333333334], [1.6842042E12, 0.05], [1.6842045E12, 68.05], [1.68420432E12, 75.03333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420456E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

