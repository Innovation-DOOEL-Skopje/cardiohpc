/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 100423.0, "series": [{"data": [[0.0, 0.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 39.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 40.0], [1.8, 40.0], [1.9, 40.0], [2.0, 40.0], [2.1, 40.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 41.0], [4.6, 41.0], [4.7, 41.0], [4.8, 41.0], [4.9, 41.0], [5.0, 41.0], [5.1, 41.0], [5.2, 41.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 42.0], [6.3, 42.0], [6.4, 42.0], [6.5, 42.0], [6.6, 42.0], [6.7, 42.0], [6.8, 42.0], [6.9, 42.0], [7.0, 43.0], [7.1, 43.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 43.0], [7.7, 43.0], [7.8, 43.0], [7.9, 43.0], [8.0, 43.0], [8.1, 43.0], [8.2, 43.0], [8.3, 43.0], [8.4, 44.0], [8.5, 44.0], [8.6, 44.0], [8.7, 44.0], [8.8, 44.0], [8.9, 45.0], [9.0, 45.0], [9.1, 46.0], [9.2, 46.0], [9.3, 47.0], [9.4, 48.0], [9.5, 48.0], [9.6, 49.0], [9.7, 50.0], [9.8, 51.0], [9.9, 51.0], [10.0, 52.0], [10.1, 53.0], [10.2, 54.0], [10.3, 55.0], [10.4, 55.0], [10.5, 56.0], [10.6, 57.0], [10.7, 58.0], [10.8, 59.0], [10.9, 60.0], [11.0, 61.0], [11.1, 62.0], [11.2, 64.0], [11.3, 65.0], [11.4, 66.0], [11.5, 68.0], [11.6, 69.0], [11.7, 72.0], [11.8, 82.0], [11.9, 93.0], [12.0, 100.0], [12.1, 108.0], [12.2, 127.0], [12.3, 161.0], [12.4, 239.0], [12.5, 338.0], [12.6, 611.0], [12.7, 1089.0], [12.8, 1091.0], [12.9, 1091.0], [13.0, 1092.0], [13.1, 1092.0], [13.2, 1092.0], [13.3, 1092.0], [13.4, 1093.0], [13.5, 1093.0], [13.6, 1093.0], [13.7, 1093.0], [13.8, 1093.0], [13.9, 1093.0], [14.0, 1094.0], [14.1, 1094.0], [14.2, 1094.0], [14.3, 1094.0], [14.4, 1094.0], [14.5, 1094.0], [14.6, 1094.0], [14.7, 1094.0], [14.8, 1095.0], [14.9, 1095.0], [15.0, 1095.0], [15.1, 1095.0], [15.2, 1095.0], [15.3, 1095.0], [15.4, 1095.0], [15.5, 1095.0], [15.6, 1095.0], [15.7, 1095.0], [15.8, 1096.0], [15.9, 1096.0], [16.0, 1096.0], [16.1, 1096.0], [16.2, 1096.0], [16.3, 1096.0], [16.4, 1096.0], [16.5, 1096.0], [16.6, 1096.0], [16.7, 1096.0], [16.8, 1096.0], [16.9, 1096.0], [17.0, 1096.0], [17.1, 1096.0], [17.2, 1097.0], [17.3, 1097.0], [17.4, 1097.0], [17.5, 1097.0], [17.6, 1097.0], [17.7, 1097.0], [17.8, 1097.0], [17.9, 1097.0], [18.0, 1097.0], [18.1, 1097.0], [18.2, 1097.0], [18.3, 1097.0], [18.4, 1097.0], [18.5, 1097.0], [18.6, 1098.0], [18.7, 1098.0], [18.8, 1098.0], [18.9, 1098.0], [19.0, 1098.0], [19.1, 1098.0], [19.2, 1098.0], [19.3, 1098.0], [19.4, 1098.0], [19.5, 1098.0], [19.6, 1098.0], [19.7, 1098.0], [19.8, 1098.0], [19.9, 1098.0], [20.0, 1099.0], [20.1, 1099.0], [20.2, 1099.0], [20.3, 1099.0], [20.4, 1099.0], [20.5, 1099.0], [20.6, 1099.0], [20.7, 1099.0], [20.8, 1099.0], [20.9, 1099.0], [21.0, 1099.0], [21.1, 1099.0], [21.2, 1099.0], [21.3, 1099.0], [21.4, 1100.0], [21.5, 1100.0], [21.6, 1100.0], [21.7, 1100.0], [21.8, 1100.0], [21.9, 1100.0], [22.0, 1100.0], [22.1, 1100.0], [22.2, 1100.0], [22.3, 1100.0], [22.4, 1100.0], [22.5, 1100.0], [22.6, 1100.0], [22.7, 1100.0], [22.8, 1101.0], [22.9, 1101.0], [23.0, 1101.0], [23.1, 1101.0], [23.2, 1101.0], [23.3, 1101.0], [23.4, 1101.0], [23.5, 1101.0], [23.6, 1101.0], [23.7, 1101.0], [23.8, 1101.0], [23.9, 1102.0], [24.0, 1102.0], [24.1, 1102.0], [24.2, 1102.0], [24.3, 1102.0], [24.4, 1102.0], [24.5, 1102.0], [24.6, 1102.0], [24.7, 1102.0], [24.8, 1102.0], [24.9, 1103.0], [25.0, 1103.0], [25.1, 1103.0], [25.2, 1103.0], [25.3, 1103.0], [25.4, 1103.0], [25.5, 1103.0], [25.6, 1103.0], [25.7, 1104.0], [25.8, 1104.0], [25.9, 1104.0], [26.0, 1104.0], [26.1, 1104.0], [26.2, 1104.0], [26.3, 1104.0], [26.4, 1105.0], [26.5, 1105.0], [26.6, 1105.0], [26.7, 1105.0], [26.8, 1105.0], [26.9, 1105.0], [27.0, 1106.0], [27.1, 1106.0], [27.2, 1106.0], [27.3, 1106.0], [27.4, 1106.0], [27.5, 1106.0], [27.6, 1107.0], [27.7, 1107.0], [27.8, 1107.0], [27.9, 1107.0], [28.0, 1108.0], [28.1, 1108.0], [28.2, 1108.0], [28.3, 1108.0], [28.4, 1108.0], [28.5, 1109.0], [28.6, 1109.0], [28.7, 1109.0], [28.8, 1109.0], [28.9, 1110.0], [29.0, 1110.0], [29.1, 1110.0], [29.2, 1110.0], [29.3, 1111.0], [29.4, 1111.0], [29.5, 1111.0], [29.6, 1112.0], [29.7, 1112.0], [29.8, 1112.0], [29.9, 1113.0], [30.0, 1113.0], [30.1, 1113.0], [30.2, 1113.0], [30.3, 1114.0], [30.4, 1114.0], [30.5, 1114.0], [30.6, 1115.0], [30.7, 1115.0], [30.8, 1116.0], [30.9, 1116.0], [31.0, 1116.0], [31.1, 1117.0], [31.2, 1117.0], [31.3, 1117.0], [31.4, 1118.0], [31.5, 1118.0], [31.6, 1119.0], [31.7, 1119.0], [31.8, 1119.0], [31.9, 1120.0], [32.0, 1120.0], [32.1, 1121.0], [32.2, 1121.0], [32.3, 1121.0], [32.4, 1122.0], [32.5, 1122.0], [32.6, 1123.0], [32.7, 1123.0], [32.8, 1124.0], [32.9, 1124.0], [33.0, 1125.0], [33.1, 1125.0], [33.2, 1126.0], [33.3, 1126.0], [33.4, 1127.0], [33.5, 1127.0], [33.6, 1128.0], [33.7, 1128.0], [33.8, 1129.0], [33.9, 1129.0], [34.0, 1130.0], [34.1, 1130.0], [34.2, 1131.0], [34.3, 1132.0], [34.4, 1132.0], [34.5, 1133.0], [34.6, 1133.0], [34.7, 1134.0], [34.8, 1135.0], [34.9, 1135.0], [35.0, 1136.0], [35.1, 1137.0], [35.2, 1137.0], [35.3, 1138.0], [35.4, 1139.0], [35.5, 1140.0], [35.6, 1140.0], [35.7, 1141.0], [35.8, 1142.0], [35.9, 1143.0], [36.0, 1144.0], [36.1, 1145.0], [36.2, 1146.0], [36.3, 1147.0], [36.4, 1148.0], [36.5, 1149.0], [36.6, 1150.0], [36.7, 1151.0], [36.8, 1152.0], [36.9, 1153.0], [37.0, 1154.0], [37.1, 1155.0], [37.2, 1157.0], [37.3, 1158.0], [37.4, 1159.0], [37.5, 1160.0], [37.6, 1162.0], [37.7, 1163.0], [37.8, 1165.0], [37.9, 1166.0], [38.0, 1168.0], [38.1, 1169.0], [38.2, 1171.0], [38.3, 1172.0], [38.4, 1174.0], [38.5, 1176.0], [38.6, 1177.0], [38.7, 1179.0], [38.8, 1181.0], [38.9, 1183.0], [39.0, 1185.0], [39.1, 1187.0], [39.2, 1189.0], [39.3, 1190.0], [39.4, 1192.0], [39.5, 1194.0], [39.6, 1196.0], [39.7, 1199.0], [39.8, 1201.0], [39.9, 1203.0], [40.0, 1205.0], [40.1, 1207.0], [40.2, 1210.0], [40.3, 1212.0], [40.4, 1214.0], [40.5, 1217.0], [40.6, 1219.0], [40.7, 1222.0], [40.8, 1225.0], [40.9, 1228.0], [41.0, 1231.0], [41.1, 1234.0], [41.2, 1237.0], [41.3, 1240.0], [41.4, 1242.0], [41.5, 1245.0], [41.6, 1248.0], [41.7, 1251.0], [41.8, 1254.0], [41.9, 1258.0], [42.0, 1261.0], [42.1, 1265.0], [42.2, 1268.0], [42.3, 1271.0], [42.4, 1275.0], [42.5, 1278.0], [42.6, 1281.0], [42.7, 1285.0], [42.8, 1289.0], [42.9, 1293.0], [43.0, 1297.0], [43.1, 1301.0], [43.2, 1305.0], [43.3, 1308.0], [43.4, 1312.0], [43.5, 1316.0], [43.6, 1320.0], [43.7, 1323.0], [43.8, 1327.0], [43.9, 1331.0], [44.0, 1335.0], [44.1, 1339.0], [44.2, 1343.0], [44.3, 1347.0], [44.4, 1350.0], [44.5, 1354.0], [44.6, 1358.0], [44.7, 1362.0], [44.8, 1367.0], [44.9, 1371.0], [45.0, 1375.0], [45.1, 1380.0], [45.2, 1385.0], [45.3, 1390.0], [45.4, 1395.0], [45.5, 1400.0], [45.6, 1405.0], [45.7, 1411.0], [45.8, 1415.0], [45.9, 1421.0], [46.0, 1426.0], [46.1, 1432.0], [46.2, 1436.0], [46.3, 1442.0], [46.4, 1447.0], [46.5, 1451.0], [46.6, 1456.0], [46.7, 1460.0], [46.8, 1465.0], [46.9, 1469.0], [47.0, 1474.0], [47.1, 1478.0], [47.2, 1483.0], [47.3, 1488.0], [47.4, 1493.0], [47.5, 1499.0], [47.6, 1504.0], [47.7, 1509.0], [47.8, 1514.0], [47.9, 1519.0], [48.0, 1523.0], [48.1, 1528.0], [48.2, 1532.0], [48.3, 1537.0], [48.4, 1542.0], [48.5, 1546.0], [48.6, 1550.0], [48.7, 1554.0], [48.8, 1559.0], [48.9, 1563.0], [49.0, 1568.0], [49.1, 1572.0], [49.2, 1577.0], [49.3, 1582.0], [49.4, 1587.0], [49.5, 1592.0], [49.6, 1598.0], [49.7, 1603.0], [49.8, 1608.0], [49.9, 1613.0], [50.0, 1618.0], [50.1, 1623.0], [50.2, 1628.0], [50.3, 1633.0], [50.4, 1637.0], [50.5, 1642.0], [50.6, 1646.0], [50.7, 1651.0], [50.8, 1656.0], [50.9, 1661.0], [51.0, 1665.0], [51.1, 1670.0], [51.2, 1675.0], [51.3, 1680.0], [51.4, 1686.0], [51.5, 1691.0], [51.6, 1696.0], [51.7, 1701.0], [51.8, 1706.0], [51.9, 1711.0], [52.0, 1716.0], [52.1, 1720.0], [52.2, 1724.0], [52.3, 1728.0], [52.4, 1732.0], [52.5, 1737.0], [52.6, 1741.0], [52.7, 1745.0], [52.8, 1749.0], [52.9, 1754.0], [53.0, 1759.0], [53.1, 1763.0], [53.2, 1768.0], [53.3, 1772.0], [53.4, 1777.0], [53.5, 1781.0], [53.6, 1786.0], [53.7, 1791.0], [53.8, 1796.0], [53.9, 1801.0], [54.0, 1806.0], [54.1, 1810.0], [54.2, 1815.0], [54.3, 1820.0], [54.4, 1825.0], [54.5, 1830.0], [54.6, 1835.0], [54.7, 1839.0], [54.8, 1844.0], [54.9, 1849.0], [55.0, 1853.0], [55.1, 1858.0], [55.2, 1863.0], [55.3, 1867.0], [55.4, 1872.0], [55.5, 1877.0], [55.6, 1882.0], [55.7, 1887.0], [55.8, 1892.0], [55.9, 1897.0], [56.0, 1902.0], [56.1, 1907.0], [56.2, 1912.0], [56.3, 1917.0], [56.4, 1923.0], [56.5, 1928.0], [56.6, 1933.0], [56.7, 1937.0], [56.8, 1942.0], [56.9, 1946.0], [57.0, 1951.0], [57.1, 1956.0], [57.2, 1961.0], [57.3, 1966.0], [57.4, 1971.0], [57.5, 1976.0], [57.6, 1981.0], [57.7, 1985.0], [57.8, 1990.0], [57.9, 1994.0], [58.0, 1999.0], [58.1, 2003.0], [58.2, 2008.0], [58.3, 2012.0], [58.4, 2017.0], [58.5, 2022.0], [58.6, 2026.0], [58.7, 2030.0], [58.8, 2035.0], [58.9, 2039.0], [59.0, 2043.0], [59.1, 2048.0], [59.2, 2052.0], [59.3, 2056.0], [59.4, 2060.0], [59.5, 2065.0], [59.6, 2069.0], [59.7, 2073.0], [59.8, 2078.0], [59.9, 2082.0], [60.0, 2087.0], [60.1, 2091.0], [60.2, 2095.0], [60.3, 2099.0], [60.4, 2102.0], [60.5, 2106.0], [60.6, 2109.0], [60.7, 2112.0], [60.8, 2116.0], [60.9, 2119.0], [61.0, 2122.0], [61.1, 2126.0], [61.2, 2129.0], [61.3, 2134.0], [61.4, 2138.0], [61.5, 2141.0], [61.6, 2144.0], [61.7, 2147.0], [61.8, 2149.0], [61.9, 2151.0], [62.0, 2154.0], [62.1, 2156.0], [62.2, 2158.0], [62.3, 2161.0], [62.4, 2164.0], [62.5, 2166.0], [62.6, 2169.0], [62.7, 2173.0], [62.8, 2176.0], [62.9, 2180.0], [63.0, 2184.0], [63.1, 2189.0], [63.2, 2194.0], [63.3, 2200.0], [63.4, 2207.0], [63.5, 2214.0], [63.6, 2222.0], [63.7, 2230.0], [63.8, 2238.0], [63.9, 2247.0], [64.0, 2257.0], [64.1, 2267.0], [64.2, 2279.0], [64.3, 2290.0], [64.4, 2299.0], [64.5, 2310.0], [64.6, 2322.0], [64.7, 2333.0], [64.8, 2344.0], [64.9, 2356.0], [65.0, 2369.0], [65.1, 2380.0], [65.2, 2392.0], [65.3, 2404.0], [65.4, 2417.0], [65.5, 2428.0], [65.6, 2439.0], [65.7, 2450.0], [65.8, 2464.0], [65.9, 2476.0], [66.0, 2489.0], [66.1, 2503.0], [66.2, 2517.0], [66.3, 2529.0], [66.4, 2541.0], [66.5, 2555.0], [66.6, 2569.0], [66.7, 2582.0], [66.8, 2596.0], [66.9, 2609.0], [67.0, 2622.0], [67.1, 2634.0], [67.2, 2647.0], [67.3, 2661.0], [67.4, 2676.0], [67.5, 2691.0], [67.6, 2703.0], [67.7, 2715.0], [67.8, 2728.0], [67.9, 2740.0], [68.0, 2752.0], [68.1, 2762.0], [68.2, 2772.0], [68.3, 2782.0], [68.4, 2792.0], [68.5, 2803.0], [68.6, 2814.0], [68.7, 2824.0], [68.8, 2834.0], [68.9, 2845.0], [69.0, 2857.0], [69.1, 2869.0], [69.2, 2881.0], [69.3, 2892.0], [69.4, 2904.0], [69.5, 2915.0], [69.6, 2924.0], [69.7, 2937.0], [69.8, 2950.0], [69.9, 2960.0], [70.0, 2971.0], [70.1, 2981.0], [70.2, 2992.0], [70.3, 3003.0], [70.4, 3014.0], [70.5, 3024.0], [70.6, 3034.0], [70.7, 3043.0], [70.8, 3052.0], [70.9, 3061.0], [71.0, 3070.0], [71.1, 3079.0], [71.2, 3088.0], [71.3, 3096.0], [71.4, 3105.0], [71.5, 3112.0], [71.6, 3121.0], [71.7, 3129.0], [71.8, 3136.0], [71.9, 3145.0], [72.0, 3152.0], [72.1, 3160.0], [72.2, 3167.0], [72.3, 3173.0], [72.4, 3180.0], [72.5, 3187.0], [72.6, 3194.0], [72.7, 3202.0], [72.8, 3211.0], [72.9, 3220.0], [73.0, 3230.0], [73.1, 3241.0], [73.2, 3252.0], [73.3, 3264.0], [73.4, 3277.0], [73.5, 3288.0], [73.6, 3300.0], [73.7, 3313.0], [73.8, 3328.0], [73.9, 3342.0], [74.0, 3357.0], [74.1, 3373.0], [74.2, 3390.0], [74.3, 3407.0], [74.4, 3423.0], [74.5, 3441.0], [74.6, 3459.0], [74.7, 3476.0], [74.8, 3495.0], [74.9, 3515.0], [75.0, 3535.0], [75.1, 3555.0], [75.2, 3576.0], [75.3, 3595.0], [75.4, 3614.0], [75.5, 3635.0], [75.6, 3654.0], [75.7, 3675.0], [75.8, 3696.0], [75.9, 3717.0], [76.0, 3737.0], [76.1, 3758.0], [76.2, 3776.0], [76.3, 3795.0], [76.4, 3814.0], [76.5, 3832.0], [76.6, 3849.0], [76.7, 3869.0], [76.8, 3888.0], [76.9, 3904.0], [77.0, 3922.0], [77.1, 3939.0], [77.2, 3955.0], [77.3, 3971.0], [77.4, 3986.0], [77.5, 4002.0], [77.6, 4018.0], [77.7, 4034.0], [77.8, 4049.0], [77.9, 4064.0], [78.0, 4078.0], [78.1, 4092.0], [78.2, 4106.0], [78.3, 4118.0], [78.4, 4129.0], [78.5, 4141.0], [78.6, 4151.0], [78.7, 4162.0], [78.8, 4173.0], [78.9, 4182.0], [79.0, 4193.0], [79.1, 4204.0], [79.2, 4213.0], [79.3, 4224.0], [79.4, 4233.0], [79.5, 4242.0], [79.6, 4254.0], [79.7, 4266.0], [79.8, 4279.0], [79.9, 4293.0], [80.0, 4308.0], [80.1, 4323.0], [80.2, 4341.0], [80.3, 4355.0], [80.4, 4371.0], [80.5, 4389.0], [80.6, 4408.0], [80.7, 4426.0], [80.8, 4448.0], [80.9, 4469.0], [81.0, 4491.0], [81.1, 4511.0], [81.2, 4538.0], [81.3, 4567.0], [81.4, 4591.0], [81.5, 4618.0], [81.6, 4645.0], [81.7, 4674.0], [81.8, 4703.0], [81.9, 4734.0], [82.0, 4760.0], [82.1, 4791.0], [82.2, 4818.0], [82.3, 4845.0], [82.4, 4873.0], [82.5, 4900.0], [82.6, 4926.0], [82.7, 4952.0], [82.8, 4975.0], [82.9, 4999.0], [83.0, 5020.0], [83.1, 5040.0], [83.2, 5060.0], [83.3, 5080.0], [83.4, 5097.0], [83.5, 5114.0], [83.6, 5133.0], [83.7, 5150.0], [83.8, 5166.0], [83.9, 5182.0], [84.0, 5194.0], [84.1, 5209.0], [84.2, 5222.0], [84.3, 5236.0], [84.4, 5249.0], [84.5, 5263.0], [84.6, 5279.0], [84.7, 5292.0], [84.8, 5308.0], [84.9, 5325.0], [85.0, 5343.0], [85.1, 5362.0], [85.2, 5382.0], [85.3, 5404.0], [85.4, 5430.0], [85.5, 5457.0], [85.6, 5486.0], [85.7, 5516.0], [85.8, 5548.0], [85.9, 5580.0], [86.0, 5614.0], [86.1, 5647.0], [86.2, 5684.0], [86.3, 5724.0], [86.4, 5765.0], [86.5, 5806.0], [86.6, 5843.0], [86.7, 5890.0], [86.8, 5931.0], [86.9, 5966.0], [87.0, 6001.0], [87.1, 6036.0], [87.2, 6070.0], [87.3, 6099.0], [87.4, 6128.0], [87.5, 6156.0], [87.6, 6182.0], [87.7, 6207.0], [87.8, 6229.0], [87.9, 6248.0], [88.0, 6269.0], [88.1, 6287.0], [88.2, 6303.0], [88.3, 6321.0], [88.4, 6340.0], [88.5, 6361.0], [88.6, 6384.0], [88.7, 6407.0], [88.8, 6435.0], [88.9, 6459.0], [89.0, 6491.0], [89.1, 6523.0], [89.2, 6555.0], [89.3, 6596.0], [89.4, 6633.0], [89.5, 6670.0], [89.6, 6711.0], [89.7, 6754.0], [89.8, 6800.0], [89.9, 6848.0], [90.0, 6896.0], [90.1, 6944.0], [90.2, 6989.0], [90.3, 7037.0], [90.4, 7080.0], [90.5, 7116.0], [90.6, 7148.0], [90.7, 7177.0], [90.8, 7207.0], [90.9, 7233.0], [91.0, 7261.0], [91.1, 7288.0], [91.2, 7310.0], [91.3, 7329.0], [91.4, 7349.0], [91.5, 7371.0], [91.6, 7390.0], [91.7, 7412.0], [91.8, 7437.0], [91.9, 7465.0], [92.0, 7494.0], [92.1, 7526.0], [92.2, 7561.0], [92.3, 7596.0], [92.4, 7638.0], [92.5, 7676.0], [92.6, 7716.0], [92.7, 7766.0], [92.8, 7819.0], [92.9, 7877.0], [93.0, 7933.0], [93.1, 7993.0], [93.2, 8047.0], [93.3, 8094.0], [93.4, 8140.0], [93.5, 8185.0], [93.6, 8221.0], [93.7, 8256.0], [93.8, 8291.0], [93.9, 8322.0], [94.0, 8353.0], [94.1, 8382.0], [94.2, 8411.0], [94.3, 8440.0], [94.4, 8471.0], [94.5, 8501.0], [94.6, 8536.0], [94.7, 8581.0], [94.8, 8628.0], [94.9, 8679.0], [95.0, 8733.0], [95.1, 8798.0], [95.2, 8865.0], [95.3, 8924.0], [95.4, 8997.0], [95.5, 9071.0], [95.6, 9136.0], [95.7, 9199.0], [95.8, 9253.0], [95.9, 9308.0], [96.0, 9355.0], [96.1, 9399.0], [96.2, 9432.0], [96.3, 9469.0], [96.4, 9504.0], [96.5, 9543.0], [96.6, 9591.0], [96.7, 9633.0], [96.8, 9687.0], [96.9, 9746.0], [97.0, 9810.0], [97.1, 9885.0], [97.2, 9967.0], [97.3, 10039.0], [97.4, 10081.0], [97.5, 10118.0], [97.6, 10159.0], [97.7, 10201.0], [97.8, 10238.0], [97.9, 10276.0], [98.0, 10311.0], [98.1, 10343.0], [98.2, 10372.0], [98.3, 10403.0], [98.4, 10435.0], [98.5, 10468.0], [98.6, 10497.0], [98.7, 10529.0], [98.8, 10562.0], [98.9, 10597.0], [99.0, 10635.0], [99.1, 10680.0], [99.2, 10734.0], [99.3, 10788.0], [99.4, 10856.0], [99.5, 10946.0], [99.6, 11050.0], [99.7, 11136.0], [99.8, 11249.0], [99.9, 11391.0], [100.0, 100423.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 51577.0, "series": [{"data": [[0.0, 33659.0], [100.0, 1055.0], [200.0, 336.0], [300.0, 152.0], [400.0, 92.0], [500.0, 97.0], [600.0, 60.0], [700.0, 79.0], [800.0, 43.0], [900.0, 29.0], [1000.0, 24496.0], [1100.0, 51577.0], [1200.0, 9315.0], [1300.0, 6801.0], [1400.0, 5732.0], [1500.0, 5949.0], [1600.0, 5689.0], [1700.0, 6214.0], [1800.0, 5816.0], [1900.0, 5820.0], [2000.0, 6482.0], [2100.0, 8333.0], [2200.0, 3121.0], [2300.0, 2409.0], [2400.0, 2289.0], [2500.0, 2119.0], [2600.0, 2103.0], [2700.0, 2506.0], [2800.0, 2495.0], [2900.0, 2557.0], [3000.0, 3018.0], [3100.0, 3713.0], [3300.0, 1845.0], [3200.0, 2634.0], [3400.0, 1590.0], [3500.0, 1417.0], [3600.0, 1374.0], [3700.0, 1434.0], [3800.0, 1540.0], [3900.0, 1710.0], [4000.0, 1891.0], [4200.0, 2504.0], [4100.0, 2533.0], [4300.0, 1710.0], [4400.0, 1377.0], [4500.0, 1086.0], [4600.0, 1002.0], [4700.0, 958.0], [4800.0, 1037.0], [5000.0, 1433.0], [5100.0, 1752.0], [4900.0, 1133.0], [5300.0, 1498.0], [5200.0, 1992.0], [5600.0, 814.0], [5400.0, 1049.0], [5500.0, 854.0], [5800.0, 666.0], [5700.0, 674.0], [5900.0, 771.0], [6000.0, 857.0], [6100.0, 1045.0], [6300.0, 1373.0], [6200.0, 1419.0], [6600.0, 719.0], [6500.0, 799.0], [6400.0, 1012.0], [6800.0, 593.0], [6700.0, 650.0], [6900.0, 577.0], [7100.0, 891.0], [7000.0, 672.0], [7200.0, 1077.0], [7300.0, 1368.0], [7400.0, 1054.0], [7500.0, 816.0], [7600.0, 690.0], [7800.0, 501.0], [7700.0, 596.0], [7900.0, 481.0], [8000.0, 552.0], [8100.0, 628.0], [8300.0, 955.0], [8600.0, 565.0], [8200.0, 828.0], [8400.0, 920.0], [8500.0, 694.0], [8700.0, 440.0], [8800.0, 460.0], [9000.0, 394.0], [9100.0, 448.0], [9200.0, 511.0], [8900.0, 385.0], [9400.0, 794.0], [9700.0, 464.0], [9300.0, 618.0], [9600.0, 575.0], [9500.0, 643.0], [9800.0, 386.0], [9900.0, 357.0], [10000.0, 561.0], [10100.0, 695.0], [10200.0, 759.0], [10300.0, 903.0], [10500.0, 845.0], [10600.0, 643.0], [10700.0, 506.0], [10400.0, 897.0], [10800.0, 378.0], [11100.0, 275.0], [10900.0, 287.0], [11000.0, 297.0], [11200.0, 223.0], [11600.0, 20.0], [11500.0, 39.0], [11400.0, 97.0], [11300.0, 194.0], [11700.0, 6.0], [12100.0, 4.0], [12000.0, 5.0], [11800.0, 8.0], [12200.0, 4.0], [11900.0, 2.0], [12600.0, 5.0], [12300.0, 4.0], [12500.0, 1.0], [12700.0, 5.0], [12400.0, 2.0], [13200.0, 7.0], [12800.0, 4.0], [13100.0, 3.0], [12900.0, 4.0], [13000.0, 2.0], [13300.0, 1.0], [13400.0, 3.0], [13600.0, 2.0], [13800.0, 3.0], [13700.0, 4.0], [13500.0, 3.0], [14300.0, 2.0], [14100.0, 1.0], [13900.0, 1.0], [14600.0, 1.0], [14500.0, 2.0], [14400.0, 1.0], [15000.0, 1.0], [15600.0, 1.0], [15400.0, 1.0], [15700.0, 1.0], [15900.0, 2.0], [16000.0, 2.0], [16300.0, 1.0], [17000.0, 1.0], [16800.0, 1.0], [16900.0, 1.0], [17100.0, 1.0], [18000.0, 1.0], [18800.0, 1.0], [19000.0, 1.0], [100000.0, 2.0], [100400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 100400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 458.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 145972.0, "series": [{"data": [[0.0, 458.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 97953.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 145972.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 36586.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.6842066E12, "maxY": 3000.0, "series": [{"data": [[1.68420672E12, 3000.0], [1.6842069E12, 2905.62448760995], [1.6842066E12, 3000.0], [1.68420678E12, 3000.0], [1.68420696E12, 7.0], [1.68420666E12, 3000.0], [1.68420684E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420696E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 38.0, "minX": 6.0, "maxY": 100423.0, "series": [{"data": [[6.0, 100423.0], [7.0, 100055.0], [8.0, 100062.0], [9.0, 9907.0], [11.0, 9847.5], [13.0, 9777.0], [14.0, 9389.0], [15.0, 9442.0], [16.0, 9516.0], [17.0, 10233.0], [18.0, 10269.0], [19.0, 9535.0], [20.0, 10216.0], [21.0, 9136.0], [22.0, 9510.0], [23.0, 9293.0], [24.0, 9457.0], [25.0, 9380.0], [26.0, 9365.0], [27.0, 10010.0], [28.0, 9322.0], [29.0, 12258.0], [30.0, 12141.0], [31.0, 9147.0], [33.0, 8960.0], [32.0, 9029.0], [35.0, 9036.0], [34.0, 9730.0], [36.0, 8973.0], [43.0, 9308.0], [42.0, 9022.666666666666], [45.0, 8578.0], [44.0, 8089.0], [46.0, 9322.0], [49.0, 9247.0], [48.0, 9317.5], [51.0, 8447.0], [50.0, 8485.0], [53.0, 9240.0], [52.0, 8569.0], [55.0, 8533.0], [54.0, 8535.0], [57.0, 9690.0], [56.0, 9219.0], [59.0, 9070.0], [61.0, 8453.0], [60.0, 8461.0], [63.0, 9143.0], [62.0, 8454.0], [67.0, 9108.0], [66.0, 9382.0], [64.0, 8063.0], [71.0, 8391.0], [70.0, 9589.0], [69.0, 8295.0], [68.0, 8406.0], [75.0, 9073.0], [74.0, 8381.0], [73.0, 8678.5], [79.0, 8345.0], [78.0, 8352.0], [77.0, 9048.0], [76.0, 7915.0], [83.0, 8954.0], [82.0, 8967.0], [81.0, 9486.0], [80.0, 8208.0], [87.0, 8005.0], [86.0, 8161.0], [85.0, 8927.0], [84.0, 15780.0], [90.0, 8716.0], [89.0, 8747.0], [88.0, 9258.0], [95.0, 7859.0], [94.0, 8005.0], [93.0, 8708.0], [92.0, 8337.5], [99.0, 9161.0], [98.0, 8610.0], [97.0, 8671.0], [96.0, 7985.0], [103.0, 7876.0], [102.0, 8610.0], [101.0, 8659.0], [100.0, 8668.0], [107.0, 7877.0], [105.0, 8507.0], [111.0, 8498.666666666666], [108.0, 8575.0], [115.0, 8226.0], [113.0, 8818.0], [119.0, 8833.0], [118.0, 10622.0], [117.0, 8341.0], [116.0, 7647.0], [123.0, 7595.0], [122.0, 8295.0], [121.0, 7616.0], [120.0, 8819.0], [126.0, 10462.0], [125.0, 8276.0], [124.0, 7109.0], [134.0, 8224.0], [133.0, 7326.0], [132.0, 8241.0], [131.0, 8252.0], [130.0, 8760.0], [129.0, 8758.0], [128.0, 8519.5], [143.0, 10385.0], [142.0, 10184.0], [141.0, 8169.0], [140.0, 7475.0], [139.0, 7443.0], [138.0, 10314.0], [137.0, 8344.0], [151.0, 10374.0], [150.0, 8089.0], [149.0, 8583.0], [148.0, 8590.0], [147.0, 8614.0], [146.0, 7413.0], [145.0, 8115.0], [144.0, 7432.0], [159.0, 7346.0], [158.0, 8290.0], [156.0, 7357.0], [155.0, 8064.0], [154.0, 7140.0], [153.0, 10277.0], [152.0, 8075.0], [167.0, 7908.5], [165.0, 7919.5], [163.0, 10103.0], [162.0, 10314.5], [160.0, 8045.0], [175.0, 8464.0], [174.0, 8472.0], [173.0, 8231.5], [171.0, 8506.0], [170.0, 7314.0], [169.0, 10307.0], [168.0, 8016.0], [183.0, 10841.0], [182.0, 7707.0], [181.0, 9916.0], [180.0, 8325.0], [179.0, 8381.0], [178.0, 17148.0], [177.0, 9988.0], [176.0, 8437.0], [191.0, 7628.0], [190.0, 8129.0], [189.0, 8123.0], [188.0, 7644.0], [187.0, 8136.0], [186.0, 7645.0], [185.0, 9947.0], [184.0, 8185.0], [199.0, 6493.0], [198.0, 7528.0], [197.0, 8075.0], [196.0, 9892.0], [195.0, 9847.0], [194.0, 8101.5], [192.0, 8105.0], [203.0, 7983.0], [202.0, 7518.0], [201.0, 6845.0], [200.0, 10690.0], [215.0, 7834.0], [214.0, 9570.0], [213.0, 7346.0], [212.0, 7995.0], [211.0, 8131.5], [210.0, 7284.0], [209.0, 7982.5], [223.0, 6596.0], [222.0, 7197.5], [220.0, 9507.0], [219.0, 9603.0], [218.0, 7259.0], [217.0, 8548.0], [231.0, 7717.0], [230.0, 7734.0], [229.0, 7203.0], [228.0, 7754.0], [227.0, 10411.0], [226.0, 10416.0], [225.0, 10420.0], [224.0, 7769.0], [239.0, 7706.0], [238.0, 7711.0], [237.0, 6476.0], [236.0, 6520.0], [235.0, 7991.5], [233.0, 6499.0], [232.0, 6531.0], [247.0, 7651.0], [246.0, 7189.0], [245.0, 9477.0], [244.0, 9474.0], [243.0, 7686.0], [242.0, 9489.0], [241.0, 10871.0], [240.0, 9493.0], [255.0, 7592.0], [254.0, 6380.0], [253.0, 9410.0], [252.0, 7627.0], [251.0, 9406.0], [250.0, 9428.0], [249.0, 7144.0], [248.0, 7136.0], [270.0, 10691.0], [271.0, 9305.0], [269.0, 7533.0], [268.0, 7543.0], [267.0, 9337.0], [266.0, 7543.0], [265.0, 9296.0], [264.0, 6282.0], [262.0, 6365.0], [256.0, 7096.0], [259.0, 8581.0], [257.0, 7100.0], [261.0, 7072.0], [260.0, 10737.0], [286.0, 6978.0], [287.0, 6269.0], [285.0, 9271.0], [284.0, 9264.0], [283.0, 7477.0], [282.0, 9196.0], [281.0, 6128.0], [280.0, 6985.0], [279.0, 7500.0], [273.0, 6280.0], [272.0, 7495.0], [275.0, 7001.0], [274.0, 7513.0], [278.0, 7486.0], [277.0, 6958.0], [276.0, 9295.0], [302.0, 5895.0], [303.0, 7420.0], [301.0, 9213.0], [300.0, 9213.0], [299.0, 9230.0], [298.0, 6255.0], [297.0, 6944.0], [296.0, 10618.0], [295.0, 7196.0], [288.0, 9884.0], [291.0, 7730.0], [289.0, 9254.0], [293.0, 6258.0], [292.0, 7456.0], [318.0, 9594.0], [319.0, 7087.0], [317.0, 10305.0], [316.0, 6649.0], [315.0, 10314.0], [314.0, 5985.0], [313.0, 7276.0], [312.0, 9119.0], [311.0, 7340.0], [305.0, 7405.0], [304.0, 9196.0], [307.0, 5977.0], [306.0, 6194.0], [310.0, 10017.0], [309.0, 7376.0], [308.0, 9173.0], [333.0, 8810.0], [334.0, 7013.0], [332.0, 10200.0], [322.0, 7080.0], [321.0, 8872.0], [320.0, 7095.0], [331.0, 8839.0], [330.0, 8033.5], [328.0, 8839.0], [327.0, 8843.0], [326.0, 9718.0], [325.0, 9572.0], [324.0, 7965.5], [350.0, 8591.0], [351.0, 6781.0], [349.0, 9417.0], [348.0, 5640.0], [347.0, 9305.0], [346.0, 5685.0], [345.0, 5686.0], [343.0, 7082.5], [337.0, 5689.0], [336.0, 6172.5], [339.0, 6482.0], [338.0, 10143.0], [341.0, 5730.0], [340.0, 8735.0], [366.0, 5507.0], [367.0, 9870.0], [365.0, 8494.0], [364.0, 9870.0], [363.0, 5403.0], [362.0, 6230.0], [361.0, 6231.0], [360.0, 6724.0], [359.0, 5553.0], [353.0, 9222.0], [352.0, 6273.0], [355.0, 8548.0], [354.0, 9194.0], [358.0, 6205.0], [357.0, 8547.0], [356.0, 11073.0], [371.0, 9125.0], [381.0, 5463.0], [382.0, 6643.0], [380.0, 7895.0], [370.0, 9862.0], [369.0, 6678.0], [368.0, 9861.0], [377.0, 6125.0], [376.0, 6165.0], [375.0, 5472.0], [374.0, 6167.0], [373.0, 8456.0], [372.0, 6179.0], [398.0, 8392.0], [399.0, 9228.0], [397.0, 8396.0], [396.0, 6599.0], [395.0, 8422.0], [394.0, 7705.5], [392.0, 6096.0], [391.0, 5315.0], [384.0, 7331.0], [387.0, 9291.0], [386.0, 8445.0], [390.0, 10985.0], [389.0, 6046.0], [414.0, 5142.0], [415.0, 9150.0], [413.0, 10823.0], [412.0, 6015.0], [411.0, 9696.0], [410.0, 9177.0], [409.0, 6040.5], [407.0, 5249.0], [400.0, 6085.0], [403.0, 7521.0], [401.0, 9215.0], [406.0, 8338.0], [405.0, 6047.0], [404.0, 9204.0], [430.0, 5951.0], [431.0, 5944.0], [429.0, 9604.0], [428.0, 8237.0], [427.0, 9097.0], [426.0, 8373.5], [424.0, 9632.0], [423.0, 8942.0], [417.0, 5891.5], [419.0, 5984.0], [418.0, 9134.0], [422.0, 8898.0], [421.0, 9006.0], [420.0, 9026.0], [446.0, 5030.0], [447.0, 5025.0], [445.0, 5892.0], [444.0, 8892.0], [443.0, 9026.0], [442.0, 5889.0], [441.0, 5196.0], [440.0, 8181.0], [439.0, 9052.0], [432.0, 8990.0], [435.0, 9002.0], [434.0, 7043.5], [438.0, 5210.0], [437.0, 6389.0], [436.0, 8197.0], [462.0, 5863.0], [463.0, 9522.0], [461.0, 10710.0], [460.0, 6348.0], [459.0, 5168.0], [458.0, 9016.0], [457.0, 9023.0], [456.0, 5837.0], [455.0, 8166.0], [448.0, 6367.0], [451.0, 5183.0], [450.0, 7387.0], [454.0, 9005.0], [453.0, 5129.0], [452.0, 5183.0], [478.0, 5065.0], [479.0, 5066.0], [477.0, 8911.0], [476.0, 7825.0], [475.0, 10652.0], [474.0, 13063.0], [473.0, 6310.0], [472.0, 5828.0], [471.0, 5137.0], [465.0, 5111.0], [464.0, 5864.0], [467.0, 6329.0], [466.0, 8797.0], [470.0, 5098.0], [469.0, 8990.0], [468.0, 5853.0], [493.0, 9198.0], [494.0, 5511.0], [492.0, 7832.0], [483.0, 6149.0], [482.0, 7997.0], [481.0, 6501.5], [491.0, 5536.0], [490.0, 4855.0], [489.0, 10410.0], [488.0, 10382.0], [487.0, 8709.0], [486.0, 7868.0], [485.0, 5591.0], [484.0, 10439.0], [499.0, 6994.0], [510.0, 7450.0], [511.0, 4681.0], [508.0, 8632.0], [506.0, 5708.5], [504.0, 4800.0], [502.0, 8482.0], [501.0, 5499.0], [500.0, 5506.0], [497.0, 9173.0], [496.0, 8495.0], [540.0, 5236.0], [542.0, 5155.0], [538.0, 8216.0], [536.0, 8403.0], [534.0, 5279.0], [532.0, 5292.0], [530.0, 5300.0], [528.0, 4675.0], [526.0, 9059.0], [514.0, 5462.0], [512.0, 8599.0], [518.0, 5448.0], [516.0, 8132.0], [524.0, 4709.0], [522.0, 5904.0], [520.0, 7708.0], [572.0, 5132.0], [574.0, 4422.0], [570.0, 9976.0], [568.0, 5140.0], [566.0, 5141.0], [564.0, 5158.0], [562.0, 5646.5], [560.0, 7356.0], [556.0, 7469.0], [546.0, 5203.0], [544.0, 8356.0], [550.0, 5192.0], [548.0, 8289.0], [554.0, 5187.0], [552.0, 8331.0], [602.0, 9865.0], [604.0, 5292.0], [600.0, 5567.0], [582.0, 5585.0], [580.0, 5059.0], [578.0, 5607.0], [576.0, 9915.0], [598.0, 6223.5], [596.0, 4387.0], [592.0, 8233.0], [590.0, 6912.5], [588.0, 8175.0], [586.0, 5043.0], [584.0, 5098.0], [636.0, 4941.0], [638.0, 5435.0], [634.0, 9790.0], [632.0, 4211.0], [630.0, 5458.0], [628.0, 8641.0], [626.0, 7205.0], [624.0, 4952.0], [622.0, 8664.0], [608.0, 5536.0], [614.0, 8192.0], [610.0, 4196.0], [620.0, 9860.0], [616.0, 4130.0], [668.0, 4178.0], [670.0, 5356.0], [666.0, 5381.0], [646.0, 8585.0], [644.0, 4226.0], [642.0, 6412.5], [640.0, 4927.0], [662.0, 4186.0], [660.0, 6918.5], [658.0, 4199.0], [654.0, 8576.0], [652.0, 8054.0], [650.0, 5393.0], [648.0, 8576.0], [700.0, 6856.0], [702.0, 7026.0], [698.0, 6072.5], [696.0, 4016.0], [694.0, 4810.0], [692.0, 7961.0], [690.0, 5314.0], [686.0, 5594.5], [672.0, 6925.5], [678.0, 8490.0], [674.0, 7886.0], [684.0, 5308.0], [682.0, 6654.0], [680.0, 5308.0], [732.0, 6798.0], [734.0, 4495.0], [730.0, 6763.0], [728.0, 5127.0], [726.0, 3998.0], [724.0, 4008.0], [722.0, 9520.0], [718.0, 10580.0], [706.0, 5937.0], [704.0, 7935.0], [710.0, 7024.0], [708.0, 4092.0], [716.0, 7748.0], [714.0, 5252.0], [712.0, 4673.5], [742.0, 9316.0], [766.0, 9252.0], [764.0, 3708.0], [738.0, 9268.0], [736.0, 4485.0], [758.0, 4423.0], [756.0, 4908.0], [752.0, 4679.0], [750.0, 9286.0], [748.0, 8114.0], [746.0, 9291.0], [744.0, 8123.0], [796.0, 6493.0], [798.0, 3485.0], [794.0, 6489.0], [792.0, 3430.0], [790.0, 4714.0], [788.0, 4731.0], [786.0, 3575.0], [784.0, 3566.0], [782.0, 6614.0], [770.0, 9244.0], [768.0, 8061.0], [774.0, 3673.0], [772.0, 6414.0], [780.0, 7034.5], [776.0, 3664.0], [828.0, 3399.0], [830.0, 6323.0], [826.0, 4036.0], [824.0, 4071.0], [822.0, 4902.5], [820.0, 3394.0], [818.0, 4363.0], [816.0, 6817.5], [814.0, 7790.0], [802.0, 6323.0], [800.0, 4171.0], [806.0, 3278.0], [804.0, 4151.0], [810.0, 3380.0], [808.0, 7664.5], [860.0, 4030.0], [862.0, 7702.0], [858.0, 8886.0], [856.0, 6307.0], [854.0, 6330.0], [852.0, 9952.0], [848.0, 8895.0], [846.0, 5624.5], [834.0, 9990.0], [832.0, 7752.0], [838.0, 7738.0], [836.0, 4568.0], [844.0, 8910.0], [842.0, 4559.0], [840.0, 10799.0], [892.0, 3986.0], [894.0, 7648.0], [890.0, 7128.0], [888.0, 7664.0], [886.0, 3998.0], [884.0, 5388.666666666667], [880.0, 7677.0], [878.0, 4010.0], [866.0, 9384.5], [864.0, 4512.0], [870.0, 4018.0], [868.0, 3963.0], [874.0, 6310.0], [872.0, 6304.0], [922.0, 6169.0], [920.0, 6168.0], [902.0, 4417.0], [900.0, 3955.0], [896.0, 3212.0], [918.0, 9791.0], [916.0, 3894.0], [914.0, 4401.0], [912.0, 5041.0], [910.0, 6206.0], [908.0, 11170.0], [906.0, 6591.5], [904.0, 8778.0], [954.0, 3053.0], [956.0, 3817.0], [952.0, 8669.0], [934.0, 7942.5], [932.0, 6804.5], [930.0, 8683.0], [928.0, 3006.0], [950.0, 6106.0], [948.0, 9727.0], [944.0, 3080.0], [942.0, 8685.0], [940.0, 4336.0], [938.0, 6260.0], [936.0, 4333.0], [986.0, 6907.0], [980.0, 3073.0], [976.0, 6079.0], [978.0, 3081.0], [964.0, 3810.0], [962.0, 9726.0], [960.0, 7488.0], [974.0, 2882.0], [972.0, 3756.0], [968.0, 3260.3333333333335], [982.0, 6060.0], [1018.0, 9636.0], [1008.0, 6668.0], [1010.0, 9121.0], [1020.0, 3731.0], [1016.0, 3038.0], [998.0, 6037.0], [992.0, 7426.0], [1006.0, 4869.0], [1002.0, 6042.0], [1000.0, 3720.0], [1080.0, 5690.0], [1084.0, 3407.0], [1056.0, 5873.0], [1060.0, 5743.0], [1072.0, 4942.0], [1036.0, 5984.0], [1032.0, 2979.0], [1028.0, 6863.0], [1024.0, 8569.0], [1052.0, 3637.0], [1048.0, 4144.0], [1044.0, 2955.0], [1040.0, 2885.0], [1064.0, 2746.0], [1144.0, 2552.0], [1148.0, 3697.0], [1124.0, 5628.0], [1128.0, 8177.0], [1140.0, 10399.0], [1136.0, 6431.0], [1100.0, 4163.0], [1096.0, 6331.0], [1092.0, 2690.0], [1088.0, 3360.0], [1116.0, 2449.0], [1112.0, 7929.5], [1108.0, 3367.0], [1132.0, 3295.0], [1204.0, 4726.5], [1212.0, 10124.0], [1184.0, 6200.0], [1188.0, 7850.0], [1192.0, 3047.0], [1200.0, 3510.0], [1164.0, 7960.0], [1160.0, 6809.0], [1156.0, 3663.0], [1152.0, 2488.0], [1180.0, 7905.0], [1176.0, 7921.0], [1172.0, 3567.0], [1196.0, 5331.0], [1264.0, 6033.0], [1276.0, 5213.0], [1252.0, 5237.0], [1272.0, 6590.0], [1244.0, 5240.0], [1216.0, 5218.0], [1220.0, 10107.0], [1224.0, 8893.0], [1228.0, 2284.0], [1240.0, 6107.0], [1236.0, 8870.0], [1232.0, 5261.0], [1260.0, 5233.0], [1256.0, 4386.333333333333], [1336.0, 1968.0], [1312.0, 6512.0], [1316.0, 2842.0], [1320.0, 2012.0], [1340.0, 9508.0], [1332.0, 8654.0], [1328.0, 4382.0], [1280.0, 7760.0], [1284.0, 6558.0], [1288.0, 9622.0], [1292.0, 2166.0], [1308.0, 2509.0], [1304.0, 1925.0], [1296.0, 7714.0], [1324.0, 2768.0], [1356.0, 6441.0], [1376.0, 2066.0], [1400.0, 2266.0], [1392.0, 7285.0], [1352.0, 2034.0], [1348.0, 2089.0], [1372.0, 2066.0], [1368.0, 1987.0], [1360.0, 5058.0], [1388.0, 1954.0], [1460.0, 1772.0], [1456.0, 2038.0], [1468.0, 3211.0], [1440.0, 2705.0], [1464.0, 2037.0], [1408.0, 2056.0], [1412.0, 2751.0], [1416.0, 6617.5], [1436.0, 2367.5], [1432.0, 3229.0], [1452.0, 2043.0], [1448.0, 2509.3333333333335], [1444.0, 3221.0], [1532.0, 1518.0], [1504.0, 2013.0], [1528.0, 2014.0], [1520.0, 2371.5], [1500.0, 1999.0], [1492.0, 3873.0], [1488.0, 2028.0], [1516.0, 1972.0], [1512.0, 2454.3333333333335], [1508.0, 2684.0], [1544.0, 4994.0], [1596.0, 6328.0], [1568.0, 3164.0], [1588.0, 3819.6666666666665], [1540.0, 7554.0], [1536.0, 3293.6666666666665], [1564.0, 9616.0], [1556.0, 4763.5], [1552.0, 2699.0], [1580.0, 2668.0], [1572.0, 9928.0], [1656.0, 4667.0], [1660.0, 9122.0], [1632.0, 1881.0], [1636.0, 5668.0], [1640.0, 8300.0], [1652.0, 2386.5], [1648.0, 2393.0], [1612.0, 5538.0], [1608.0, 5779.0], [1604.0, 4936.0], [1600.0, 2647.0], [1628.0, 2481.0], [1624.0, 4878.0], [1620.0, 9717.0], [1616.0, 1915.0], [1644.0, 1702.0], [1712.0, 9388.0], [1700.0, 1625.0], [1724.0, 1601.0], [1716.0, 5080.666666666667], [1684.0, 2817.0], [1664.0, 2339.0], [1672.0, 2596.0], [1676.0, 4429.5], [1680.0, 8247.0], [1708.0, 5454.0], [1696.0, 1548.0], [1784.0, 1820.0], [1760.0, 2234.0], [1764.0, 2229.0], [1788.0, 2115.0], [1780.0, 1478.0], [1776.0, 9432.0], [1732.0, 2799.0], [1736.0, 8158.0], [1740.0, 1590.0], [1756.0, 1554.0], [1752.0, 2267.0], [1748.0, 2758.0], [1744.0, 7130.0], [1772.0, 2699.0], [1848.0, 6791.0], [1852.0, 1983.0], [1824.0, 2068.0], [1828.0, 5713.0], [1832.0, 4211.0], [1844.0, 1995.0], [1840.0, 8946.0], [1804.0, 2098.0], [1800.0, 1453.5], [1796.0, 1460.0], [1820.0, 2557.0], [1816.0, 5194.0], [1812.0, 1410.0], [1808.0, 2603.0], [1836.0, 5693.0], [1916.0, 5558.0], [1896.0, 1924.0], [1900.0, 5571.0], [1888.0, 4857.0], [1904.0, 5574.0], [1856.0, 2461.0], [1860.0, 3108.0], [1864.0, 8902.0], [1868.0, 5618.0], [1884.0, 1818.0], [1880.0, 7812.0], [1876.0, 9000.0], [1872.0, 1943.0], [1892.0, 5587.0], [1976.0, 1119.5], [1952.0, 7767.0], [1956.0, 7754.0], [1960.0, 4114.0], [1964.0, 4969.0], [1972.0, 1119.5], [1968.0, 1124.0], [1920.0, 9134.0], [1924.0, 7742.0], [1928.0, 5542.0], [1948.0, 3348.5], [1944.0, 2373.0], [1936.0, 1866.0], [2016.0, 4710.0], [2024.0, 1106.6666666666667], [1988.0, 1112.6666666666667], [2004.0, 1112.0], [2000.0, 1403.25], [2152.0, 1681.0], [2120.0, 1734.0], [2112.0, 8870.0], [2128.0, 1725.0], [2136.0, 1653.0], [2144.0, 1712.5], [2072.0, 1101.0], [2064.0, 1100.0], [2048.0, 1102.0], [2096.0, 2250.0], [2088.0, 1775.0], [2296.0, 1644.0], [2240.0, 1691.0], [2248.0, 1689.0], [2256.0, 1690.0], [2264.0, 1699.0], [2288.0, 1676.6666666666667], [2280.0, 1848.3333333333333], [2200.0, 3482.5], [2176.0, 1664.0], [2232.0, 1853.3333333333333], [2208.0, 1700.0], [2408.0, 2140.0], [2376.0, 1826.0], [2400.0, 2165.0], [2312.0, 1686.25], [2304.0, 2171.0], [2360.0, 1834.3333333333333], [2336.0, 1676.0], [2392.0, 1665.0], [2544.0, 4433.0], [2552.0, 1379.0], [2496.0, 1617.0], [2504.0, 1608.0], [2512.0, 4739.0], [2520.0, 3873.0], [2536.0, 2009.0], [2528.0, 1554.0], [2456.0, 2131.0], [2440.0, 1774.75], [2488.0, 8743.0], [2480.0, 6472.0], [2472.0, 6471.666666666667], [2664.0, 4896.0], [2656.0, 1725.0], [2624.0, 3092.5], [2640.0, 5115.5], [2680.0, 4875.0], [2584.0, 3427.0], [2576.0, 2643.6666666666665], [2560.0, 7156.0], [2616.0, 10874.0], [2592.0, 1505.5], [2808.0, 1207.0], [2800.0, 1041.625], [2752.0, 4634.333333333333], [2760.0, 6875.0], [2768.0, 5696.666666666667], [2776.0, 6881.0], [2792.0, 2689.1818181818185], [2784.0, 2870.75], [2712.0, 1102.3333333333333], [2704.0, 1107.0], [2696.0, 1125.0], [2688.0, 4279.0], [2744.0, 2349.5], [2736.0, 1482.0], [2728.0, 10620.0], [2936.0, 6364.333333333333], [2880.0, 1114.5], [2888.0, 1109.0], [2896.0, 1110.0], [2928.0, 1102.0], [2912.0, 1103.8333333333335], [2832.0, 1126.0], [2824.0, 2324.777777777778], [2816.0, 2974.4], [2864.0, 1120.5], [2848.0, 1118.0], [2944.0, 5465.333333333333], [2952.0, 4462.0], [3000.0, 2656.582005504916], [2960.0, 4322.5], [2968.0, 6747.333333333334], [2992.0, 1205.5], [2984.0, 4140.0], [2976.0, 4411.4], [2145.0, 6563.0], [2113.0, 1745.0], [2169.0, 1707.3333333333333], [2121.0, 2213.0], [2129.0, 1725.0], [2057.0, 1101.0], [2105.0, 3585.0], [2097.0, 1760.0], [2089.0, 4060.0], [2081.0, 1327.3333333333333], [2137.0, 1716.0], [2241.0, 1694.0], [2297.0, 1691.0], [2257.0, 1693.25], [2265.0, 1697.0], [2185.0, 1856.0], [2225.0, 1696.0], [2217.0, 1707.0], [2385.0, 2889.6666666666665], [2417.0, 1659.0], [2393.0, 2145.0], [2425.0, 1903.5], [2321.0, 2164.0], [2329.0, 1918.0], [2353.0, 6431.5], [2545.0, 1968.0], [2505.0, 1613.0], [2513.0, 2090.0], [2521.0, 4627.0], [2553.0, 1374.0], [2537.0, 1524.0], [2529.0, 8674.0], [2433.0, 1850.2], [2449.0, 1817.0], [2457.0, 7551.0], [2489.0, 3904.0], [2473.0, 7544.0], [2465.0, 3718.5], [2657.0, 1721.0], [2681.0, 2457.0], [2625.0, 1748.0], [2649.0, 1728.6666666666667], [2673.0, 3023.5], [2585.0, 6103.0], [2577.0, 1802.0], [2561.0, 1820.0], [2617.0, 1749.0], [2609.0, 2958.3333333333335], [2601.0, 660.5], [2593.0, 8529.0], [2801.0, 1509.0], [2761.0, 4558.0], [2769.0, 5695.0], [2809.0, 2776.0], [2785.0, 6571.25], [2713.0, 1100.5], [2705.0, 1106.0], [2697.0, 1116.0], [2689.0, 4707.0], [2745.0, 3888.0], [2737.0, 39.0], [2729.0, 3295.0], [2721.0, 1098.25], [2937.0, 5414.0], [2881.0, 1401.6666666666665], [2889.0, 1110.0], [2897.0, 1108.6], [2929.0, 2188.75], [2841.0, 1125.0], [2833.0, 1563.25], [2825.0, 1929.2727272727268], [2817.0, 1159.5], [2873.0, 1460.8571428571427], [2865.0, 1121.6666666666667], [2857.0, 1120.888888888889], [2849.0, 1574.75], [2945.0, 10102.333333333334], [2953.0, 775.0], [2961.0, 9249.5], [2993.0, 40.5], [2985.0, 6627.333333333333], [2977.0, 4281.0], [1081.0, 2551.0], [1057.0, 9482.0], [1061.0, 2759.0], [1065.0, 2748.0], [1085.0, 8262.0], [1077.0, 3279.5], [1073.0, 2688.0], [1025.0, 6741.0], [1029.0, 3710.0], [1037.0, 7367.0], [1053.0, 3634.0], [1049.0, 3649.0], [1045.0, 3651.0], [1041.0, 2967.0], [1069.0, 3683.5], [1141.0, 2573.0], [1149.0, 6261.0], [1121.0, 3783.0], [1125.0, 3825.0], [1129.0, 2627.0], [1145.0, 5532.0], [1101.0, 5649.0], [1097.0, 10254.0], [1093.0, 10320.0], [1089.0, 2698.0], [1117.0, 5435.5], [1109.0, 5643.0], [1105.0, 4753.0], [1133.0, 2604.0], [1205.0, 3498.0], [1213.0, 5289.0], [1185.0, 8957.0], [1189.0, 8933.0], [1193.0, 3536.0], [1209.0, 3006.0], [1201.0, 7879.0], [1165.0, 5391.0], [1161.0, 3130.0], [1157.0, 2463.0], [1153.0, 2481.0], [1181.0, 2361.0], [1177.0, 2368.0], [1173.0, 6223.0], [1169.0, 6660.0], [1197.0, 3533.0], [1269.0, 2562.5], [1277.0, 15926.0], [1249.0, 7410.0], [1253.0, 5180.0], [1217.0, 8904.0], [1221.0, 6648.0], [1225.0, 8791.0], [1245.0, 8855.0], [1237.0, 2272.0], [1233.0, 8890.0], [1261.0, 8846.0], [1257.0, 6089.0], [1329.0, 2810.0], [1337.0, 8708.0], [1313.0, 3350.0], [1317.0, 2044.0], [1333.0, 2059.0], [1281.0, 5185.0], [1285.0, 5180.0], [1289.0, 2172.0], [1293.0, 1692.0], [1305.0, 1897.0], [1301.0, 2071.0], [1297.0, 2004.0], [1325.0, 5960.0], [1321.0, 5125.0], [1397.0, 5371.5], [1385.0, 3481.5], [1381.0, 1937.0], [1377.0, 2010.0], [1345.0, 6987.333333333333], [1349.0, 2084.0], [1353.0, 2084.0], [1365.0, 1937.5], [1413.0, 2710.0], [1457.0, 2684.0], [1445.0, 2041.0], [1461.0, 8640.0], [1409.0, 2061.0], [1417.0, 2755.0], [1437.0, 1791.0], [1433.0, 4994.0], [1429.0, 2280.6666666666665], [1425.0, 2051.0], [1453.0, 2044.0], [1449.0, 2739.0], [1521.0, 1961.0], [1529.0, 3201.0], [1505.0, 2023.0], [1525.0, 5745.0], [1485.0, 2179.25], [1481.0, 1973.0], [1477.0, 2233.6666666666665], [1473.0, 2204.6666666666665], [1489.0, 2027.0], [1517.0, 1975.0], [1513.0, 7574.0], [1509.0, 2029.0], [1545.0, 2645.0], [1593.0, 5336.0], [1585.0, 3462.0], [1549.0, 2946.0], [1537.0, 9779.0], [1565.0, 1946.0], [1561.0, 3590.6666666666665], [1557.0, 1995.0], [1553.0, 7546.0], [1581.0, 1509.0], [1577.0, 4160.5], [1653.0, 1691.0], [1661.0, 1613.0], [1637.0, 9631.0], [1641.0, 5626.0], [1657.0, 1675.0], [1649.0, 2386.0], [1613.0, 2612.0], [1609.0, 2623.0], [1605.0, 3135.0], [1601.0, 1908.0], [1621.0, 4891.0], [1617.0, 1907.0], [1645.0, 1710.0], [1717.0, 4592.0], [1725.0, 9559.0], [1697.0, 8233.0], [1701.0, 1630.0], [1705.0, 3887.5], [1721.0, 4977.0], [1713.0, 9437.0], [1677.0, 8259.0], [1669.0, 5321.5], [1665.0, 4614.0], [1693.0, 2215.0], [1689.0, 2147.5], [1685.0, 1639.0], [1681.0, 1645.0], [1709.0, 4607.0], [1785.0, 1473.0], [1789.0, 1465.0], [1761.0, 1541.0], [1765.0, 5380.0], [1769.0, 6216.5], [1781.0, 2176.0], [1777.0, 1099.0], [1741.0, 2218.0], [1737.0, 5431.0], [1733.0, 1599.0], [1729.0, 2268.0], [1757.0, 9377.0], [1753.0, 4559.0], [1749.0, 7090.0], [1745.0, 5374.0], [1849.0, 9110.0], [1825.0, 1361.0], [1829.0, 5702.0], [1833.0, 5690.0], [1853.0, 8775.0], [1845.0, 1952.0], [1841.0, 4191.0], [1797.0, 1459.5], [1793.0, 2133.5], [1801.0, 2115.0], [1805.0, 1147.0], [1821.0, 2067.0], [1817.0, 2088.0], [1813.0, 1414.0], [1809.0, 1424.0], [1917.0, 2373.0], [1909.0, 1901.5], [1889.0, 5593.0], [1893.0, 9164.0], [1897.0, 9043.0], [1901.0, 5055.0], [1913.0, 3972.5], [1905.0, 9148.0], [1857.0, 4224.0], [1865.0, 5615.0], [1869.0, 5090.0], [1885.0, 8986.0], [1881.0, 4214.0], [1877.0, 6740.0], [1873.0, 1942.0], [1981.0, 1113.5], [1953.0, 1162.0], [1957.0, 1139.0], [1961.0, 1134.0], [1965.0, 1126.0], [1977.0, 1120.0], [1969.0, 1115.0], [1921.0, 1189.0], [1925.0, 9005.0], [1933.0, 5469.333333333333], [1949.0, 2352.0], [1945.0, 5007.0], [1941.0, 3702.0], [2033.0, 1104.4], [2045.0, 1334.6666666666667], [2041.0, 4724.0], [2037.0, 1103.0], [1993.0, 1113.0], [1989.0, 1110.0], [1985.0, 1113.0], [2013.0, 3223.0], [2005.0, 1109.0], [2162.0, 1708.3333333333333], [2114.0, 1738.0], [2122.0, 8808.0], [2130.0, 1672.0], [2154.0, 1715.5], [2066.0, 3868.5], [2050.0, 1102.5], [2098.0, 8890.0], [2090.0, 2271.0], [2082.0, 1097.0], [2290.0, 1689.0], [2242.0, 1941.5], [2250.0, 1689.0], [2266.0, 1675.0], [2274.0, 1688.0], [2194.0, 2599.0], [2234.0, 1701.0], [2226.0, 1699.0], [2218.0, 1683.0], [2370.0, 1912.5], [2386.0, 1665.0], [2322.0, 1677.5], [2362.0, 1668.5], [2354.0, 1676.0], [2346.0, 1674.6666666666667], [2338.0, 1915.5], [2554.0, 1323.0], [2498.0, 4035.5], [2506.0, 8720.0], [2514.0, 3888.0], [2522.0, 4721.0], [2546.0, 1956.0], [2530.0, 3830.0], [2458.0, 2133.0], [2450.0, 2131.0], [2442.0, 2148.0], [2482.0, 1867.0], [2474.0, 4606.0], [2466.0, 4784.0], [2658.0, 3705.25], [2626.0, 1740.0], [2634.0, 5045.0], [2666.0, 1471.5], [2586.0, 1782.0], [2578.0, 7207.0], [2570.0, 2363.6666666666665], [2562.0, 1818.0], [2618.0, 10873.0], [2602.0, 1765.0], [2594.0, 8543.0], [2810.0, 5138.5], [2754.0, 4112.666666666666], [2762.0, 4242.0], [2770.0, 4519.0], [2778.0, 6867.0], [2802.0, 1401.2105263157891], [2794.0, 2563.6842105263163], [2786.0, 4015.0], [2714.0, 1102.0], [2698.0, 1114.0], [2690.0, 4315.0], [2738.0, 5827.0], [2730.0, 3211.0], [2722.0, 3115.5], [2930.0, 1100.75], [2938.0, 7818.0], [2890.0, 1111.0], [2882.0, 1117.2222222222222], [2898.0, 1107.8], [2906.0, 1107.0], [2922.0, 1100.6666666666667], [2914.0, 1104.0], [2826.0, 1140.1249999999998], [2818.0, 5450.666666666666], [2850.0, 1120.6], [2946.0, 5541.8], [2954.0, 4684.5], [2970.0, 5319.6], [2994.0, 41.5], [2986.0, 3185.0], [2075.0, 1099.0], [2115.0, 1729.0], [2123.0, 1729.0], [2131.0, 2202.0], [2051.0, 1103.0], [2107.0, 1753.0], [2099.0, 1760.0], [2091.0, 5434.0], [2083.0, 1096.0], [2139.0, 1722.0], [2291.0, 1929.0], [2283.0, 1937.5], [2251.0, 1695.0], [2267.0, 1661.6666666666667], [2299.0, 1687.75], [2203.0, 1697.0], [2187.0, 1662.0], [2179.0, 1692.0], [2227.0, 1691.0], [2211.0, 4123.0], [2411.0, 1663.0], [2427.0, 1658.5], [2379.0, 1671.0], [2395.0, 1667.0], [2403.0, 1822.0], [2363.0, 3960.0], [2307.0, 4062.0], [2315.0, 1928.5], [2331.0, 1835.6666666666667], [2347.0, 1673.0], [2339.0, 1676.0], [2547.0, 4585.0], [2555.0, 1833.0], [2499.0, 2103.0], [2515.0, 3885.0], [2523.0, 5243.0], [2539.0, 4467.5], [2531.0, 8779.0], [2443.0, 1897.0], [2435.0, 1902.5], [2451.0, 8898.0], [2459.0, 7504.0], [2491.0, 2668.5], [2475.0, 2128.0], [2467.0, 1642.0], [2675.0, 8393.5], [2627.0, 8499.0], [2635.0, 1745.0], [2643.0, 5456.25], [2651.0, 8353.0], [2683.0, 2574.6666666666665], [2659.0, 7140.0], [2587.0, 1784.0], [2571.0, 1317.0], [2563.0, 1817.0], [2619.0, 4182.0], [2611.0, 1755.0], [2603.0, 6121.0], [2595.0, 1776.0], [2803.0, 7517.0], [2795.0, 5622.0], [2755.0, 3166.0], [2763.0, 2430.0], [2771.0, 2376.25], [2779.0, 6212.5], [2811.0, 2835.8571428571427], [2787.0, 4055.428571428571], [2707.0, 1105.0], [2699.0, 1114.0], [2691.0, 1137.0], [2747.0, 3705.0], [2739.0, 2937.3333333333335], [2731.0, 4663.0], [2723.0, 1549.0], [2923.0, 1103.0], [2931.0, 1099.0], [2939.0, 5198.099999999999], [2883.0, 1111.8333333333335], [2899.0, 1108.6666666666667], [2907.0, 1106.6666666666667], [2915.0, 1102.818181818182], [2843.0, 1380.4285714285713], [2827.0, 2798.6], [2819.0, 1588.25], [2875.0, 1113.5454545454545], [2867.0, 2085.3999999999996], [2851.0, 1122.0], [2947.0, 5571.75], [2995.0, 53.0], [2971.0, 7449.0], [2987.0, 1022.6], [2979.0, 5285.5], [541.0, 4528.0], [543.0, 8358.0], [539.0, 8335.0], [537.0, 5252.0], [535.0, 5273.0], [533.0, 7584.0], [531.0, 5294.0], [529.0, 5274.0], [527.0, 7420.0], [513.0, 9141.0], [519.0, 5430.0], [517.0, 4755.0], [525.0, 5395.0], [523.0, 10256.0], [521.0, 4726.0], [573.0, 9962.0], [575.0, 4416.0], [571.0, 4208.0], [569.0, 7425.0], [567.0, 9996.0], [565.0, 9996.0], [563.0, 5639.0], [559.0, 5965.5], [547.0, 8861.0], [545.0, 4509.0], [551.0, 8281.0], [549.0, 8858.0], [557.0, 4419.0], [555.0, 5665.0], [553.0, 10029.0], [583.0, 8762.0], [607.0, 5805.0], [601.0, 7307.0], [599.0, 8740.0], [595.0, 4736.5], [593.0, 9936.0], [591.0, 8753.0], [587.0, 4241.0], [585.0, 5594.0], [581.0, 5109.0], [579.0, 8257.0], [577.0, 8090.0], [637.0, 9785.0], [639.0, 4932.0], [635.0, 8614.0], [633.0, 5433.0], [631.0, 4268.0], [629.0, 7221.0], [627.0, 5483.0], [625.0, 8655.0], [623.0, 4988.0], [611.0, 4357.0], [609.0, 4995.0], [615.0, 8691.0], [613.0, 6528.0], [621.0, 5000.0], [619.0, 6096.5], [617.0, 7314.0], [667.0, 8548.0], [669.0, 4175.0], [665.0, 9698.0], [647.0, 8584.0], [645.0, 4224.0], [643.0, 4872.0], [663.0, 5370.0], [661.0, 8035.0], [657.0, 6234.5], [655.0, 4194.0], [653.0, 4065.0], [651.0, 4209.0], [649.0, 8585.0], [703.0, 8467.0], [701.0, 8475.0], [695.0, 9659.0], [693.0, 9653.0], [691.0, 4817.0], [689.0, 5921.5], [687.0, 4825.0], [683.0, 7968.0], [679.0, 5325.0], [677.0, 7764.0], [675.0, 8502.0], [673.0, 7993.0], [733.0, 10359.0], [735.0, 3798.0], [731.0, 10424.0], [729.0, 7686.0], [727.0, 7623.0], [725.0, 5183.0], [721.0, 4016.5], [719.0, 4015.0], [709.0, 8456.0], [707.0, 4096.0], [717.0, 3895.0], [715.0, 7052.0], [713.0, 5256.0], [761.0, 5447.0], [765.0, 8078.0], [767.0, 4902.0], [763.0, 4387.0], [755.0, 6265.0], [753.0, 6470.0], [749.0, 6724.0], [739.0, 4474.0], [737.0, 4483.0], [743.0, 8125.0], [741.0, 4374.5], [747.0, 4934.0], [745.0, 9268.0], [797.0, 6373.0], [799.0, 7841.0], [795.0, 7878.0], [793.0, 3522.0], [791.0, 4710.0], [789.0, 6524.0], [787.0, 6557.0], [785.0, 4790.0], [783.0, 9162.0], [771.0, 5516.0], [775.0, 6590.0], [773.0, 4372.0], [781.0, 10110.0], [779.0, 6633.0], [777.0, 4366.0], [825.0, 13712.0], [829.0, 3397.0], [831.0, 6378.0], [827.0, 6321.0], [823.0, 6403.0], [819.0, 7779.0], [813.0, 5475.5], [801.0, 9014.0], [805.0, 7818.0], [803.0, 4157.0], [811.0, 4618.0], [809.0, 6365.0], [861.0, 8875.0], [863.0, 8874.0], [859.0, 4530.0], [857.0, 6324.0], [853.0, 9839.0], [851.0, 7618.0], [849.0, 4047.0], [847.0, 4543.0], [835.0, 7749.0], [833.0, 3383.0], [839.0, 9969.0], [837.0, 4078.0], [843.0, 4544.0], [841.0, 8882.0], [893.0, 7653.0], [895.0, 4443.0], [891.0, 4471.0], [889.0, 3995.0], [887.0, 3304.0], [885.0, 3308.0], [881.0, 4014.0], [879.0, 6289.0], [867.0, 6317.0], [871.0, 7689.0], [869.0, 7683.0], [877.0, 6905.0], [875.0, 4017.0], [873.0, 6298.0], [925.0, 3467.5], [927.0, 6542.5], [923.0, 6154.0], [921.0, 6169.0], [919.0, 9787.0], [917.0, 3031.0], [915.0, 3894.0], [913.0, 6200.0], [909.0, 6211.0], [903.0, 9843.0], [901.0, 4431.0], [899.0, 5104.5], [897.0, 7632.0], [907.0, 7032.0], [957.0, 2752.0], [959.0, 3430.0], [955.0, 3813.0], [935.0, 4331.0], [929.0, 4339.0], [951.0, 3820.0], [949.0, 6109.0], [947.0, 3364.0], [945.0, 3829.0], [943.0, 6756.0], [941.0, 3841.0], [939.0, 7511.0], [987.0, 3065.0], [989.0, 4916.5], [991.0, 5304.5], [977.0, 8628.0], [979.0, 8596.0], [985.0, 5847.5], [965.0, 6027.0], [963.0, 9722.0], [961.0, 2706.0], [975.0, 2900.0], [973.0, 3098.0], [971.0, 2904.0], [969.0, 3801.0], [983.0, 8621.0], [981.0, 8619.0], [1017.0, 9646.0], [1021.0, 3733.0], [1023.0, 4224.5], [1011.0, 6035.0], [1019.0, 6659.0], [999.0, 6037.0], [997.0, 4903.5], [995.0, 5834.5], [993.0, 6043.0], [1003.0, 3049.0], [1001.0, 3754.0], [1015.0, 8163.0], [1013.0, 3737.0], [1078.0, 3910.0], [1074.0, 2741.0], [1086.0, 2708.0], [1058.0, 6492.0], [1062.0, 2756.0], [1082.0, 5712.0], [1038.0, 2991.0], [1034.0, 5418.5], [1030.0, 4200.0], [1026.0, 2827.0], [1054.0, 5878.0], [1050.0, 9442.0], [1046.0, 4158.0], [1042.0, 9570.0], [1066.0, 2704.0], [1138.0, 6012.0], [1146.0, 6232.0], [1122.0, 7008.0], [1126.0, 6473.0], [1130.0, 6295.0], [1142.0, 3752.0], [1102.0, 2674.0], [1098.0, 9157.0], [1094.0, 5667.0], [1090.0, 8238.0], [1118.0, 2657.0], [1114.0, 3252.0], [1110.0, 3354.0], [1134.0, 3295.0], [1206.0, 7853.0], [1202.0, 5310.0], [1214.0, 7847.0], [1186.0, 5335.0], [1190.0, 2350.0], [1194.0, 3035.0], [1210.0, 2315.0], [1166.0, 2396.0], [1162.0, 5422.0], [1158.0, 6289.0], [1154.0, 2472.0], [1182.0, 2355.0], [1178.0, 3067.0], [1174.0, 2378.0], [1170.0, 6011.0], [1198.0, 7874.0], [1222.0, 5280.0], [1278.0, 7766.0], [1274.0, 2574.5], [1270.0, 3422.0], [1218.0, 3492.0], [1226.0, 6013.0], [1230.0, 5949.0], [1242.0, 3759.0], [1238.0, 8881.0], [1234.0, 8893.0], [1262.0, 2946.0], [1258.0, 2247.0], [1338.0, 2099.0], [1342.0, 7534.0], [1314.0, 2144.0], [1318.0, 2778.0], [1322.0, 8736.0], [1334.0, 2051.0], [1330.0, 2113.0], [1310.0, 4045.0], [1282.0, 3397.0], [1290.0, 2118.0], [1294.0, 2164.0], [1306.0, 1948.0], [1302.0, 5150.0], [1298.0, 2166.0], [1326.0, 2114.0], [1358.0, 3879.5], [1394.0, 2387.0], [1378.0, 1933.0], [1402.0, 2375.5], [1406.0, 2499.0], [1350.0, 8590.0], [1346.0, 2791.0], [1370.0, 2332.0], [1366.0, 2993.75], [1390.0, 2037.0], [1382.0, 2390.0], [1414.0, 2058.0], [1470.0, 2664.0], [1458.0, 2034.0], [1438.0, 1992.0], [1418.0, 2716.0], [1434.0, 2047.0], [1430.0, 1999.0], [1426.0, 2054.0], [1442.0, 2341.0], [1522.0, 2018.0], [1534.0, 2015.0], [1506.0, 2671.0], [1526.0, 2711.0], [1478.0, 2036.0], [1498.0, 1994.6666666666667], [1494.0, 2004.0], [1490.0, 1984.0], [1518.0, 2023.0], [1590.0, 2617.0], [1570.0, 7387.5], [1598.0, 6290.0], [1594.0, 3165.0], [1546.0, 8610.0], [1542.0, 4514.5], [1538.0, 4994.0], [1566.0, 1983.0], [1562.0, 2626.0], [1558.0, 6349.0], [1554.0, 2696.0], [1582.0, 8583.0], [1650.0, 2383.0], [1658.0, 1621.0], [1634.0, 2579.0], [1638.0, 5598.0], [1642.0, 2447.0], [1654.0, 1684.0], [1614.0, 1918.0], [1610.0, 4835.0], [1606.0, 6305.0], [1602.0, 2643.0], [1630.0, 2819.0], [1626.0, 5541.0], [1622.0, 2592.0], [1618.0, 2600.0], [1646.0, 1495.0], [1670.0, 2354.0], [1722.0, 5968.0], [1666.0, 2361.0], [1674.0, 2009.0], [1678.0, 2344.0], [1682.0, 2339.0], [1706.0, 2800.0], [1702.0, 2807.0], [1786.0, 5830.0], [1790.0, 2166.0], [1762.0, 2231.0], [1770.0, 11760.0], [1766.0, 5897.0], [1782.0, 2129.0], [1778.0, 1483.0], [1758.0, 4539.0], [1730.0, 5364.0], [1734.0, 2773.0], [1738.0, 2284.0], [1742.0, 1584.0], [1754.0, 5931.0], [1750.0, 2263.0], [1746.0, 5375.0], [1774.0, 1649.5], [1842.0, 7903.0], [1854.0, 4271.0], [1830.0, 5142.0], [1834.0, 2016.0], [1846.0, 5661.0], [1802.0, 5805.0], [1798.0, 5285.0], [1794.0, 1466.0], [1822.0, 5210.0], [1818.0, 5750.0], [1814.0, 2103.0], [1810.0, 4410.0], [1838.0, 4732.5], [1906.0, 1897.0], [1902.0, 9026.0], [1918.0, 6708.0], [1890.0, 9043.0], [1886.0, 9050.0], [1858.0, 6814.0], [1862.0, 6653.0], [1866.0, 9077.0], [1870.0, 5611.0], [1882.0, 6778.0], [1878.0, 5073.0], [1874.0, 1948.0], [1898.0, 8940.0], [1894.0, 8705.0], [1978.0, 1118.0], [1974.0, 1117.5], [1958.0, 5501.0], [1966.0, 1122.0], [1982.0, 1113.0], [1922.0, 2372.0], [1930.0, 5875.5], [1934.0, 4827.0], [1950.0, 5005.0], [1946.0, 1173.0], [1942.0, 1171.0], [1938.0, 6662.5], [2046.0, 1102.0], [2022.0, 1107.0], [2030.0, 1107.0], [1998.0, 1109.6666666666667], [1990.0, 1110.0], [2010.0, 5016.0], [2164.0, 1709.0], [2116.0, 8862.0], [2124.0, 6576.0], [2140.0, 1693.5], [2172.0, 3323.0], [2156.0, 1714.0], [2148.0, 1711.3333333333333], [2076.0, 3277.333333333333], [2068.0, 1099.5], [2108.0, 1741.0], [2100.0, 1757.0], [2092.0, 4056.0], [2084.0, 1780.0], [2276.0, 2176.0], [2284.0, 1687.0], [2292.0, 2167.0], [2252.0, 1693.0], [2260.0, 1857.6666666666667], [2204.0, 1697.0], [2180.0, 2184.0], [2228.0, 1695.0], [2220.0, 1648.0], [2372.0, 5445.0], [2404.0, 2141.0], [2388.0, 1667.3333333333333], [2420.0, 1669.0], [2324.0, 1891.5], [2308.0, 1687.0], [2396.0, 1668.0], [2540.0, 3696.0], [2548.0, 1923.0], [2556.0, 1343.0], [2524.0, 1573.0], [2508.0, 4805.5], [2516.0, 1588.0], [2532.0, 1533.0], [2452.0, 2143.0], [2444.0, 1648.0], [2492.0, 6463.0], [2484.0, 4288.0], [2476.0, 4684.0], [2468.0, 2120.0], [2668.0, 1708.0], [2628.0, 1252.0], [2636.0, 1243.0], [2644.0, 4902.0], [2660.0, 4330.0], [2588.0, 4434.0], [2580.0, 2689.0], [2572.0, 1807.0], [2564.0, 1320.0], [2620.0, 1748.0], [2612.0, 1267.0], [2604.0, 1768.0], [2804.0, 3266.0], [2812.0, 1170.5], [2756.0, 3535.25], [2764.0, 3765.454545454546], [2780.0, 2112.5], [2796.0, 2972.333333333333], [2788.0, 5652.0], [2716.0, 1099.0], [2700.0, 1114.0], [2692.0, 5687.0], [2740.0, 1460.0], [2732.0, 4149.0], [2724.0, 1532.0], [2932.0, 1098.25], [2892.0, 1107.9999999999998], [2900.0, 1106.0], [2908.0, 1106.3333333333333], [2940.0, 5840.25], [2924.0, 4135.666666666667], [2916.0, 1105.0], [2844.0, 1919.25], [2836.0, 1300.0], [2828.0, 1438.9090909090908], [2820.0, 3168.25], [2876.0, 2872.714285714286], [2868.0, 3327.333333333333], [2852.0, 2249.2], [2956.0, 3251.714285714286], [2948.0, 4869.333333333333], [2964.0, 7482.0], [2972.0, 3338.0], [2996.0, 38.0], [2988.0, 5492.0], [2980.0, 5661.500000000001], [2061.0, 1101.6666666666667], [2125.0, 4019.0], [2133.0, 1731.0], [2157.0, 1689.0], [2053.0, 1101.0], [2077.0, 1098.0], [2109.0, 7671.0], [2101.0, 5432.0], [2085.0, 5444.0], [2141.0, 3934.0], [2277.0, 1692.0], [2301.0, 1785.2], [2197.0, 1698.5], [2189.0, 2711.3333333333335], [2237.0, 1862.3333333333333], [2229.0, 1698.0], [2213.0, 1697.6666666666667], [2373.0, 1653.0], [2389.0, 1668.0], [2317.0, 1672.3333333333333], [2357.0, 1674.0], [2397.0, 1661.0], [2549.0, 1906.0], [2509.0, 8849.0], [2517.0, 2072.0], [2525.0, 8806.0], [2557.0, 1843.0], [2541.0, 3788.0], [2533.0, 5191.0], [2493.0, 4681.0], [2445.0, 1659.0], [2453.0, 1650.0], [2461.0, 3723.0], [2477.0, 5294.0], [2469.0, 6482.0], [2677.0, 3605.0], [2669.0, 7125.0], [2629.0, 1749.0], [2653.0, 6289.5], [2685.0, 5125.333333333333], [2589.0, 4960.0], [2581.0, 8421.0], [2573.0, 1791.0], [2565.0, 3606.0], [2621.0, 561.0], [2613.0, 8386.0], [2605.0, 4414.0], [2597.0, 1772.5], [2805.0, 3885.5], [2757.0, 3920.0], [2765.0, 4966.666666666667], [2773.0, 6851.666666666667], [2781.0, 2167.3333333333335], [2813.0, 5882.833333333334], [2797.0, 4432.0], [2789.0, 1283.0], [2717.0, 1101.0], [2709.0, 2315.25], [2701.0, 3156.0], [2749.0, 4610.5], [2741.0, 1460.0], [2733.0, 40.0], [2725.0, 4185.0], [2845.0, 1412.3333333333333], [2925.0, 1102.2222222222222], [2909.0, 1107.6666666666667], [2933.0, 2447.0], [2917.0, 1103.1666666666665], [2829.0, 1131.0], [2821.0, 1141.0], [2869.0, 1117.8], [2861.0, 1116.0], [2853.0, 1122.0], [2957.0, 3627.0], [2949.0, 3361.2222222222217], [2965.0, 3299.2], [2973.0, 4806.666666666667], [2997.0, 65.0], [2989.0, 41.0], [2981.0, 5727.333333333333], [1083.0, 9272.0], [1087.0, 2705.0], [1059.0, 2808.0], [1063.0, 3405.0], [1079.0, 2663.0], [1075.0, 2199.0], [1055.0, 7282.0], [1027.0, 8573.0], [1035.0, 5984.0], [1039.0, 8527.0], [1051.0, 3601.0], [1047.0, 2908.0], [1043.0, 2955.0], [1067.0, 9366.0], [1147.0, 2452.0], [1151.0, 4331.5], [1123.0, 15496.0], [1127.0, 10393.0], [1131.0, 3798.0], [1143.0, 9153.0], [1139.0, 6434.0], [1103.0, 8219.0], [1095.0, 8230.0], [1091.0, 9162.0], [1107.0, 4158.0], [1135.0, 5588.0], [1211.0, 9751.0], [1215.0, 3500.0], [1187.0, 6197.0], [1191.0, 2345.0], [1195.0, 3030.0], [1207.0, 6152.0], [1167.0, 3089.0], [1163.0, 3123.0], [1159.0, 6220.0], [1155.0, 5457.0], [1183.0, 6197.0], [1179.0, 5355.0], [1175.0, 3574.0], [1171.0, 7935.0], [1199.0, 2964.0], [1271.0, 5222.0], [1267.0, 6293.0], [1279.0, 7759.0], [1251.0, 6292.5], [1275.0, 5216.0], [1247.0, 5240.0], [1219.0, 8902.0], [1223.0, 8900.0], [1231.0, 7833.0], [1227.0, 6126.0], [1243.0, 7808.0], [1239.0, 2265.0], [1235.0, 5260.0], [1263.0, 5228.0], [1259.0, 5232.0], [1331.0, 1967.0], [1339.0, 8721.0], [1315.0, 2145.0], [1335.0, 5949.0], [1311.0, 5771.0], [1283.0, 2890.0], [1287.0, 6410.5], [1291.0, 7721.0], [1295.0, 8716.0], [1303.0, 6006.0], [1299.0, 2096.0], [1323.0, 5969.0], [1319.0, 2833.0], [1359.0, 2708.0], [1403.0, 1877.0], [1407.0, 7613.0], [1395.0, 8674.0], [1383.0, 2767.0], [1375.0, 2377.3333333333335], [1347.0, 2720.0], [1351.0, 2079.0], [1355.0, 2777.5], [1371.0, 2723.0], [1367.0, 1921.0], [1463.0, 1943.0], [1467.0, 2177.6666666666665], [1471.0, 2678.0], [1443.0, 2737.0], [1459.0, 1998.0], [1439.0, 2042.0], [1411.0, 2058.5], [1423.0, 2319.6], [1431.0, 2049.0], [1455.0, 2032.0], [1451.0, 1927.5], [1531.0, 1993.5], [1507.0, 2023.0], [1527.0, 5864.0], [1523.0, 2017.0], [1495.0, 2033.0], [1483.0, 5686.0], [1479.0, 5668.0], [1515.0, 2343.5], [1587.0, 5630.0], [1575.0, 5607.0], [1595.0, 1965.0], [1571.0, 3162.0], [1591.0, 3465.0], [1551.0, 3817.0], [1547.0, 5839.0], [1543.0, 2660.0], [1539.0, 1798.0], [1567.0, 9484.0], [1563.0, 3176.0], [1579.0, 6918.0], [1659.0, 9493.0], [1663.0, 6035.0], [1635.0, 3044.0], [1639.0, 1744.0], [1643.0, 2442.0], [1655.0, 2370.0], [1615.0, 9678.0], [1611.0, 2573.0], [1607.0, 5781.0], [1603.0, 1947.0], [1631.0, 5728.0], [1623.0, 2591.0], [1619.0, 1906.0], [1647.0, 2872.0], [1723.0, 4344.0], [1727.0, 3439.0], [1699.0, 5536.0], [1703.0, 2315.0], [1707.0, 8183.0], [1719.0, 3855.5], [1679.0, 2343.0], [1667.0, 2301.0], [1695.0, 5930.0], [1691.0, 1950.5], [1683.0, 1589.0], [1711.0, 1951.0], [1779.0, 1479.0], [1791.0, 2160.0], [1763.0, 2723.0], [1767.0, 5899.0], [1787.0, 1329.0], [1743.0, 2288.0], [1739.0, 2284.0], [1735.0, 2284.0], [1731.0, 1595.0], [1759.0, 1550.0], [1755.0, 2254.0], [1751.0, 2759.0], [1747.0, 1574.0], [1775.0, 1261.0], [1771.0, 1228.0], [1851.0, 3558.0], [1855.0, 1282.0], [1827.0, 2292.5], [1831.0, 2515.0], [1847.0, 2475.0], [1843.0, 5152.0], [1823.0, 5162.0], [1803.0, 1441.0], [1807.0, 6379.5], [1819.0, 8887.0], [1815.0, 5249.0], [1811.0, 2109.0], [1839.0, 1324.0], [1835.0, 1325.0], [1915.0, 7032.0], [1919.0, 5034.0], [1891.0, 1927.0], [1895.0, 5581.0], [1899.0, 5584.0], [1903.0, 1841.0], [1911.0, 7261.5], [1907.0, 5049.0], [1887.0, 8989.0], [1863.0, 4255.0], [1867.0, 4242.0], [1871.0, 2425.0], [1875.0, 9064.0], [1983.0, 1115.0], [1979.0, 1117.0], [1959.0, 4114.0], [1955.0, 7736.5], [1963.0, 1132.0], [1967.0, 1119.0], [1971.0, 1117.0], [1951.0, 1164.0], [1923.0, 1883.0], [1927.0, 7017.5], [1935.0, 8990.0], [1943.0, 5017.0], [1939.0, 5544.0], [2043.0, 1104.5], [2035.0, 1105.0], [2047.0, 1104.5], [2019.0, 1106.0], [2027.0, 1106.0], [2039.0, 1102.0], [1995.0, 1112.0], [2007.0, 5018.5], [2003.0, 1108.6666666666667], [2158.0, 1710.0], [2174.0, 1704.0], [2118.0, 3568.0], [2142.0, 1716.0], [2166.0, 1700.0], [2078.0, 1098.0], [2070.0, 1443.5], [2054.0, 1103.0], [2102.0, 1757.0], [2086.0, 1776.0], [2246.0, 1628.0], [2302.0, 3935.0], [2254.0, 1630.0], [2270.0, 1658.0], [2294.0, 1924.5], [2278.0, 1686.0], [2206.0, 1699.5], [2334.0, 1671.3333333333333], [2414.0, 1743.2], [2422.0, 1980.6666666666667], [2430.0, 7565.0], [2382.0, 2147.0], [2326.0, 2161.5], [2318.0, 1680.0], [2310.0, 1688.0], [2366.0, 1829.0], [2358.0, 1623.0], [2342.0, 1675.6666666666667], [2550.0, 3669.0], [2558.0, 1831.0], [2526.0, 4705.0], [2502.0, 1613.0], [2510.0, 2091.0], [2518.0, 2070.0], [2542.0, 3789.0], [2534.0, 3547.0], [2454.0, 3690.0], [2438.0, 2139.0], [2494.0, 8858.0], [2590.0, 3283.0], [2630.0, 4346.0], [2646.0, 2592.0], [2654.0, 4375.0], [2670.0, 6057.0], [2582.0, 3529.0], [2566.0, 3604.0], [2622.0, 1750.0], [2614.0, 1270.0], [2606.0, 3553.0], [2598.0, 1762.0], [2806.0, 3000.0], [2814.0, 4527.666666666667], [2758.0, 42.333333333333336], [2766.0, 5455.0], [2774.0, 42.25], [2782.0, 2217.5], [2798.0, 277.6818181818182], [2790.0, 3091.0], [2718.0, 1096.0], [2694.0, 887.6666666666666], [2750.0, 1427.0], [2742.0, 3257.0], [2734.0, 1475.0], [2726.0, 1525.0], [2934.0, 3205.5555555555557], [2886.0, 1112.1818181818182], [2894.0, 1408.8333333333335], [2902.0, 1486.2857142857142], [2910.0, 1344.8181818181818], [2942.0, 5258.0], [2846.0, 1125.0], [2830.0, 1130.5], [2822.0, 1942.875], [2870.0, 1123.0], [2862.0, 1127.0], [2950.0, 3461.0], [2958.0, 2536.0], [2966.0, 5401.333333333333], [2974.0, 6104.0], [2990.0, 999.0], [2982.0, 7370.666666666667], [2151.0, 5234.5], [2159.0, 5371.0], [2175.0, 1670.0], [2119.0, 11014.0], [2111.0, 5615.5], [2071.0, 1099.0], [2063.0, 1101.3333333333333], [2103.0, 6606.0], [2095.0, 3366.6666666666665], [2087.0, 4070.0], [2135.0, 3317.666666666667], [2287.0, 6428.5], [2295.0, 1684.0], [2303.0, 2167.0], [2247.0, 1840.3333333333333], [2207.0, 1663.5], [2191.0, 1704.0], [2183.0, 1683.0], [2239.0, 8939.0], [2223.0, 1857.3333333333333], [2423.0, 3494.5], [2391.0, 1825.0], [2415.0, 2140.0], [2407.0, 1821.3333333333333], [2319.0, 1677.0], [2351.0, 1796.75], [2343.0, 1678.0], [2399.0, 1665.5], [2551.0, 6233.0], [2559.0, 1831.0], [2503.0, 5956.666666666667], [2511.0, 6450.0], [2519.0, 1580.0], [2527.0, 1559.0], [2543.0, 3785.0], [2535.0, 2017.0], [2447.0, 1650.0], [2455.0, 2137.0], [2463.0, 3216.5], [2487.0, 8420.666666666666], [2479.0, 6824.0], [2671.0, 1706.0], [2679.0, 3489.0], [2687.0, 3095.0], [2631.0, 8367.0], [2639.0, 3322.5], [2655.0, 1726.0], [2663.0, 1712.0], [2583.0, 3428.0], [2567.0, 8567.0], [2615.0, 1757.0], [2599.0, 1767.0], [2815.0, 1154.0], [2791.0, 4188.0], [2759.0, 3171.6], [2767.0, 4011.0], [2775.0, 5099.0], [2783.0, 3968.0], [2807.0, 2644.3333333333335], [2799.0, 1763.7777777777778], [2703.0, 1111.0], [2695.0, 1126.0], [2751.0, 2435.5], [2743.0, 2076.5], [2735.0, 758.5], [2727.0, 2368.5], [2919.0, 1101.0], [2935.0, 4072.333333333333], [2943.0, 4695.8], [2895.0, 1107.0], [2903.0, 4460.0], [2847.0, 1122.3333333333333], [2839.0, 1125.8333333333335], [2831.0, 1124.5], [2863.0, 1419.3333333333335], [2855.0, 1122.0714285714284], [2951.0, 5052.4], [2991.0, 41.0], [2959.0, 2962.5], [2967.0, 4365.0], [2975.0, 7714.0], [2983.0, 4665.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2983.661446636465, 2678.6774448426754]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 27.15, "minX": 1.6842066E12, "maxY": 630528.75, "series": [{"data": [[1.68420672E12, 564909.45], [1.6842069E12, 495697.3], [1.6842066E12, 86244.68333333333], [1.68420678E12, 594063.75], [1.68420696E12, 37.93333333333333], [1.68420666E12, 517271.25], [1.68420684E12, 630528.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68420672E12, 501306.65], [1.6842069E12, 439323.2], [1.6842066E12, 74553.9], [1.68420678E12, 525696.4], [1.68420696E12, 27.15], [1.68420666E12, 448047.4], [1.68420684E12, 553561.35]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420696E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2164.4392253478422, "minX": 1.6842066E12, "maxY": 100180.0, "series": [{"data": [[1.68420672E12, 2676.857973107102], [1.6842069E12, 3009.061610398167], [1.6842066E12, 2841.5258557902375], [1.68420678E12, 2546.462988466201], [1.68420696E12, 100180.0], [1.68420666E12, 2164.4392253478422], [1.68420684E12, 2933.267317344329]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420696E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2164.2052949372633, "minX": 1.6842066E12, "maxY": 100180.0, "series": [{"data": [[1.68420672E12, 2676.5759047017686], [1.6842069E12, 3008.839928316886], [1.6842066E12, 2841.28052925467], [1.68420678E12, 2546.2431915992534], [1.68420696E12, 100180.0], [1.68420666E12, 2164.2052949372633], [1.68420684E12, 2933.045334902824]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420696E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6842066E12, "maxY": 454.8264141782, "series": [{"data": [[1.68420672E12, 39.58963992419471], [1.6842069E12, 4.167899149278036], [1.6842066E12, 454.8264141782], [1.68420678E12, 6.227973833706298], [1.68420696E12, 0.0], [1.68420666E12, 43.617459964862014], [1.68420684E12, 3.911553615511656]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420696E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 51.0, "minX": 1.6842066E12, "maxY": 100423.0, "series": [{"data": [[1.68420672E12, 14328.0], [1.6842069E12, 18041.0], [1.6842066E12, 13281.0], [1.68420678E12, 16075.0], [1.68420696E12, 100423.0], [1.68420666E12, 15964.0], [1.68420684E12, 19086.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68420672E12, 6916.700000000004], [1.6842069E12, 8592.900000000001], [1.6842066E12, 7261.0], [1.68420678E12, 7232.9000000000015], [1.68420696E12, 100423.0], [1.68420666E12, 4248.9000000000015], [1.68420684E12, 8495.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68420672E12, 10536.980000000003], [1.6842069E12, 10853.0], [1.6842066E12, 10357.199999999997], [1.68420678E12, 10565.950000000008], [1.68420696E12, 100423.0], [1.68420666E12, 7403.980000000003], [1.68420684E12, 10867.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68420672E12, 8484.0], [1.6842069E12, 9811.95], [1.6842066E12, 8209.0], [1.68420678E12, 8446.95], [1.68420696E12, 100423.0], [1.68420666E12, 5315.0], [1.68420684E12, 9859.900000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68420672E12, 52.0], [1.6842069E12, 51.0], [1.6842066E12, 1089.0], [1.68420678E12, 52.0], [1.68420696E12, 100055.0], [1.68420666E12, 56.0], [1.68420684E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68420672E12, 2123.0], [1.6842069E12, 1976.0], [1.6842066E12, 2226.0], [1.68420678E12, 1808.0], [1.68420696E12, 100062.0], [1.68420666E12, 1915.5], [1.68420684E12, 1484.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420696E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 100423.0, "series": [{"data": [[2.0, 100058.5], [18.0, 8179.5], [21.0, 5216.0], [44.0, 9032.5], [63.0, 6193.0], [78.0, 8537.5], [102.0, 5000.0], [111.0, 8045.0], [121.0, 2006.0], [139.0, 7477.0], [177.0, 6273.0], [189.0, 6117.0], [240.0, 4065.0], [272.0, 3178.0], [274.0, 2146.0], [301.0, 2437.0], [292.0, 2104.5], [333.0, 2625.0], [339.0, 4544.0], [357.0, 4177.0], [447.0, 5503.0], [456.0, 5383.5], [472.0, 2631.0], [510.0, 2961.0], [511.0, 4081.0], [497.0, 1143.0], [522.0, 3189.5], [568.0, 5162.0], [603.0, 1852.0], [590.0, 3128.5], [630.0, 2607.5], [616.0, 3414.0], [642.0, 1615.0], [667.0, 5612.0], [654.0, 4253.0], [665.0, 4852.0], [650.0, 2704.5], [698.0, 1988.0], [713.0, 1918.0], [728.0, 2044.0], [739.0, 2686.0], [736.0, 2585.5], [789.0, 1633.0], [784.0, 1561.0], [785.0, 3526.0], [826.0, 1152.0], [828.0, 1138.0], [812.0, 1134.0], [808.0, 1103.0], [829.0, 1896.5], [827.0, 1574.0], [819.0, 2189.0], [821.0, 1656.0], [837.0, 1128.0], [847.0, 1955.5], [835.0, 3308.0], [833.0, 1801.0], [838.0, 1506.5], [851.0, 1745.0], [870.0, 2153.0], [881.0, 2510.5], [867.0, 2780.0], [866.0, 1792.5], [869.0, 2534.0], [875.0, 1515.0], [877.0, 1736.0], [880.0, 1982.0], [885.0, 2568.0], [888.0, 1126.0], [893.0, 1602.0], [895.0, 2153.5], [883.0, 2034.5], [882.0, 2106.0], [865.0, 3042.0], [927.0, 1346.0], [905.0, 1387.5], [918.0, 2101.5], [913.0, 1695.0], [915.0, 1731.0], [917.0, 2471.0], [906.0, 2086.5], [897.0, 1553.0], [924.0, 1135.0], [926.0, 2557.0], [934.0, 2111.5], [947.0, 1859.0], [946.0, 1495.0], [933.0, 2101.0], [956.0, 1659.0], [937.0, 1141.0], [936.0, 1934.0], [928.0, 2091.0], [931.0, 1884.0], [945.0, 1425.5], [930.0, 1234.0], [986.0, 1767.0], [977.0, 3495.0], [979.0, 1916.0], [983.0, 1368.0], [982.0, 2066.0], [987.0, 2583.0], [978.0, 2193.0], [971.0, 1770.0], [968.0, 1406.0], [960.0, 1488.0], [973.0, 1484.0], [967.0, 2116.5], [985.0, 1417.0], [976.0, 1964.0], [991.0, 1349.5], [962.0, 1413.0], [1016.0, 1519.5], [1014.0, 2768.5], [1015.0, 1459.0], [1007.0, 2109.0], [1006.0, 1422.0], [1005.0, 1417.0], [1004.0, 1629.0], [1003.0, 1403.0], [1001.0, 2045.0], [1000.0, 1876.0], [1008.0, 1424.0], [1011.0, 2109.0], [1009.0, 1486.0], [1010.0, 1542.0], [1012.0, 1776.5], [997.0, 3132.5], [996.0, 1581.0], [995.0, 2031.5], [993.0, 2968.0], [994.0, 1372.5], [992.0, 1737.0], [1021.0, 1553.0], [1022.0, 1590.0], [1023.0, 1296.0], [1020.0, 1846.5], [1019.0, 2809.0], [1017.0, 1399.0], [999.0, 2723.5], [1032.0, 2750.0], [1084.0, 2030.0], [1042.0, 2753.0], [1041.0, 1435.5], [1043.0, 1748.0], [1047.0, 1562.0], [1048.0, 1494.0], [1044.0, 1445.0], [1049.0, 2301.0], [1055.0, 1840.0], [1026.0, 1143.0], [1024.0, 1554.0], [1025.0, 1404.5], [1052.0, 1649.5], [1050.0, 1642.0], [1054.0, 1434.0], [1053.0, 1620.0], [1064.0, 1122.0], [1063.0, 1648.5], [1065.0, 1171.0], [1070.0, 1613.0], [1069.0, 1496.5], [1066.0, 1428.5], [1067.0, 1533.0], [1060.0, 1773.0], [1087.0, 1697.0], [1058.0, 2043.0], [1056.0, 1892.0], [1028.0, 2774.0], [1078.0, 1597.0], [1080.0, 2996.0], [1081.0, 1583.0], [1039.0, 1908.0], [1076.0, 1562.0], [1038.0, 1994.0], [1033.0, 1468.5], [1035.0, 1485.0], [1034.0, 1497.0], [1077.0, 1873.0], [1027.0, 1395.0], [1029.0, 2146.0], [1030.0, 2023.0], [1114.0, 1914.5], [1089.0, 1359.5], [1104.0, 1629.5], [1105.0, 2145.0], [1121.0, 1139.0], [1120.0, 1890.5], [1096.0, 1343.5], [1095.0, 1585.5], [1091.0, 2068.0], [1092.0, 1627.5], [1090.0, 1640.0], [1094.0, 1746.0], [1118.0, 1169.0], [1117.0, 2114.0], [1115.0, 1531.0], [1110.0, 2702.0], [1108.0, 2176.5], [1107.0, 1586.0], [1133.0, 2462.5], [1124.0, 1373.0], [1123.0, 3012.0], [1106.0, 1866.0], [1197.0, 1146.0], [1198.0, 2239.0], [1171.0, 1141.0], [1155.0, 1133.0], [1209.0, 2761.0], [1166.0, 1416.5], [1258.0, 1187.0], [1234.0, 1740.5], [1222.0, 1229.0], [1226.0, 1135.0], [1233.0, 2046.5], [1241.0, 1193.0], [1304.0, 1127.0], [1782.0, 4642.0], [1.0, 100423.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[21.0, 43.0], [63.0, 10257.5], [102.0, 10228.0], [121.0, 41.5], [177.0, 10255.0], [189.0, 10382.0], [240.0, 59.0], [272.0, 70.0], [274.0, 50.0], [333.0, 10585.0], [357.0, 60.0], [447.0, 67.0], [456.0, 65.0], [472.0, 43.0], [510.0, 70.0], [511.0, 65.0], [497.0, 45.5], [568.0, 65.0], [603.0, 67.0], [590.0, 146.5], [616.0, 10426.0], [667.0, 43.0], [654.0, 54.0], [665.0, 50.0], [698.0, 60.0], [713.0, 46.0], [728.0, 58.0], [739.0, 10311.0], [736.0, 10321.5], [785.0, 60.0], [826.0, 64.0], [828.0, 62.0], [829.0, 126.0], [827.0, 10308.0], [821.0, 53.0], [837.0, 56.0], [847.0, 52.0], [835.0, 574.0], [833.0, 41.0], [838.0, 10162.0], [851.0, 10302.0], [880.0, 63.0], [870.0, 68.0], [881.0, 44.0], [883.0, 60.0], [865.0, 41.0], [869.0, 41.5], [895.0, 41.0], [893.0, 56.0], [877.0, 55.0], [882.0, 10089.0], [927.0, 55.0], [905.0, 42.0], [918.0, 58.0], [917.0, 42.0], [906.0, 10186.5], [897.0, 10413.0], [924.0, 10174.0], [926.0, 52.0], [915.0, 41.5], [934.0, 60.0], [947.0, 41.0], [933.0, 62.0], [956.0, 41.0], [937.0, 10233.0], [936.0, 53.0], [931.0, 43.0], [945.0, 42.0], [930.0, 42.0], [946.0, 42.0], [986.0, 41.0], [977.0, 56.0], [979.0, 42.0], [983.0, 42.0], [982.0, 44.0], [987.0, 48.0], [978.0, 41.0], [971.0, 41.0], [968.0, 41.0], [960.0, 41.0], [973.0, 41.0], [967.0, 43.0], [985.0, 41.0], [976.0, 41.0], [991.0, 43.0], [962.0, 41.0], [1016.0, 42.0], [1014.0, 41.0], [1015.0, 48.0], [1007.0, 41.0], [1006.0, 41.0], [1005.0, 41.0], [1004.0, 41.0], [1003.0, 41.0], [1001.0, 41.0], [1000.0, 41.0], [1008.0, 43.0], [1011.0, 41.0], [1009.0, 42.0], [1010.0, 41.0], [1012.0, 45.0], [997.0, 46.0], [996.0, 42.0], [995.0, 41.0], [993.0, 62.0], [994.0, 41.0], [992.0, 42.0], [1021.0, 42.0], [1022.0, 41.0], [1023.0, 41.0], [1020.0, 41.0], [1019.0, 40.0], [1017.0, 41.0], [999.0, 590.0], [1032.0, 54.0], [1084.0, 45.0], [1042.0, 41.0], [1041.0, 41.0], [1043.0, 43.0], [1047.0, 43.0], [1048.0, 42.0], [1044.0, 41.0], [1049.0, 41.0], [1055.0, 41.0], [1026.0, 42.0], [1024.0, 46.0], [1025.0, 41.0], [1052.0, 42.5], [1050.0, 41.0], [1054.0, 43.0], [1053.0, 41.0], [1064.0, 41.0], [1063.0, 41.0], [1065.0, 42.0], [1070.0, 41.0], [1069.0, 41.0], [1066.0, 41.0], [1067.0, 42.0], [1060.0, 42.0], [1087.0, 41.0], [1058.0, 41.0], [1056.0, 41.0], [1028.0, 43.0], [1078.0, 42.0], [1080.0, 42.0], [1081.0, 41.0], [1039.0, 41.0], [1076.0, 41.0], [1038.0, 41.0], [1033.0, 41.0], [1035.0, 41.0], [1034.0, 44.0], [1077.0, 41.0], [1027.0, 45.0], [1029.0, 43.0], [1030.0, 42.0], [1114.0, 42.0], [1089.0, 42.0], [1104.0, 42.0], [1105.0, 41.0], [1121.0, 41.0], [1120.0, 50.0], [1096.0, 41.0], [1095.0, 42.0], [1091.0, 42.0], [1092.0, 41.0], [1090.0, 41.0], [1094.0, 41.0], [1118.0, 41.0], [1117.0, 41.0], [1115.0, 41.0], [1110.0, 44.0], [1108.0, 41.0], [1107.0, 41.0], [1133.0, 100.0], [1124.0, 42.0], [1123.0, 45.0], [1106.0, 41.0], [1197.0, 52.0], [1198.0, 41.0], [1171.0, 56.0], [1155.0, 42.0], [1209.0, 51.0], [1166.0, 41.0], [1258.0, 43.0], [1234.0, 1246.5], [1222.0, 43.0], [1226.0, 47.0], [1233.0, 418.0], [1241.0, 41.0], [1304.0, 62.5], [1782.0, 42.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1782.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 100423.0, "series": [{"data": [[2.0, 100058.5], [18.0, 8179.0], [21.0, 5215.0], [44.0, 9032.5], [63.0, 6192.0], [78.0, 8537.5], [102.0, 5000.0], [111.0, 8045.0], [121.0, 2006.0], [139.0, 7477.0], [177.0, 6273.0], [189.0, 6116.5], [240.0, 4065.0], [272.0, 3178.0], [274.0, 2145.5], [301.0, 2437.0], [292.0, 2104.5], [333.0, 2625.0], [339.0, 4543.0], [357.0, 4176.0], [447.0, 5503.0], [456.0, 5383.5], [472.0, 2631.0], [510.0, 2961.0], [511.0, 4081.0], [497.0, 1143.0], [522.0, 3189.0], [568.0, 5162.0], [603.0, 1852.0], [590.0, 3128.5], [630.0, 2607.5], [616.0, 3414.0], [642.0, 1615.0], [667.0, 5612.0], [654.0, 4252.5], [665.0, 4852.0], [650.0, 2704.0], [698.0, 1988.0], [713.0, 1918.0], [728.0, 2044.0], [739.0, 2685.5], [736.0, 2585.0], [789.0, 1633.0], [784.0, 1560.5], [785.0, 3526.0], [826.0, 1152.0], [828.0, 1138.0], [812.0, 1134.0], [808.0, 1103.0], [829.0, 1896.5], [827.0, 1573.0], [819.0, 2188.0], [821.0, 1656.0], [837.0, 1127.0], [847.0, 1955.5], [835.0, 3308.0], [833.0, 1801.0], [838.0, 1506.0], [851.0, 1745.0], [870.0, 2152.0], [881.0, 2510.5], [867.0, 2780.0], [866.0, 1792.5], [869.0, 2534.0], [875.0, 1515.0], [877.0, 1735.0], [880.0, 1982.0], [885.0, 2568.0], [888.0, 1126.0], [893.0, 1602.0], [895.0, 2152.5], [883.0, 2034.5], [882.0, 2105.0], [865.0, 3041.0], [927.0, 1346.0], [905.0, 1387.0], [918.0, 2101.0], [913.0, 1695.0], [915.0, 1731.0], [917.0, 2471.0], [906.0, 2086.0], [897.0, 1553.0], [924.0, 1134.0], [926.0, 2557.0], [934.0, 2110.5], [947.0, 1859.0], [946.0, 1495.0], [933.0, 2101.0], [956.0, 1658.0], [937.0, 1141.0], [936.0, 1934.0], [928.0, 2090.5], [931.0, 1884.0], [945.0, 1425.5], [930.0, 1233.5], [986.0, 1767.0], [977.0, 3494.0], [979.0, 1916.0], [983.0, 1367.5], [982.0, 2065.0], [987.0, 2583.0], [978.0, 2193.0], [971.0, 1769.0], [968.0, 1406.0], [960.0, 1488.0], [973.0, 1484.0], [967.0, 2116.5], [985.0, 1417.0], [976.0, 1964.0], [991.0, 1349.0], [962.0, 1413.0], [1016.0, 1519.5], [1014.0, 2768.5], [1015.0, 1459.0], [1007.0, 2109.0], [1006.0, 1421.5], [1005.0, 1416.0], [1004.0, 1628.0], [1003.0, 1402.0], [1001.0, 2045.0], [1000.0, 1876.0], [1008.0, 1424.0], [1011.0, 2109.0], [1009.0, 1486.0], [1010.0, 1542.0], [1012.0, 1775.5], [997.0, 3132.5], [996.0, 1580.5], [995.0, 2031.5], [993.0, 2968.0], [994.0, 1372.0], [992.0, 1736.5], [1021.0, 1553.0], [1022.0, 1590.0], [1023.0, 1296.0], [1020.0, 1846.0], [1019.0, 2809.0], [1017.0, 1399.0], [999.0, 2723.5], [1032.0, 2750.0], [1084.0, 2030.0], [1042.0, 2752.0], [1041.0, 1434.5], [1043.0, 1748.0], [1047.0, 1562.0], [1048.0, 1494.0], [1044.0, 1444.0], [1049.0, 2301.0], [1055.0, 1840.0], [1026.0, 1143.0], [1024.0, 1554.0], [1025.0, 1404.0], [1052.0, 1649.0], [1050.0, 1641.5], [1054.0, 1433.0], [1053.0, 1619.0], [1064.0, 1122.0], [1063.0, 1648.5], [1065.0, 1171.0], [1070.0, 1612.5], [1069.0, 1496.5], [1066.0, 1428.0], [1067.0, 1533.0], [1060.0, 1772.0], [1087.0, 1697.0], [1058.0, 2042.0], [1056.0, 1891.0], [1028.0, 2774.0], [1078.0, 1597.0], [1080.0, 2996.0], [1081.0, 1583.0], [1039.0, 1907.5], [1076.0, 1562.0], [1038.0, 1994.0], [1033.0, 1468.5], [1035.0, 1485.0], [1034.0, 1497.0], [1077.0, 1873.0], [1027.0, 1394.0], [1029.0, 2146.0], [1030.0, 2023.0], [1114.0, 1914.0], [1089.0, 1359.5], [1104.0, 1629.5], [1105.0, 2145.0], [1121.0, 1139.0], [1120.0, 1890.5], [1096.0, 1343.0], [1095.0, 1585.5], [1091.0, 2068.0], [1092.0, 1627.5], [1090.0, 1640.0], [1094.0, 1746.0], [1118.0, 1169.0], [1117.0, 2113.0], [1115.0, 1530.0], [1110.0, 2701.5], [1108.0, 2176.0], [1107.0, 1586.0], [1133.0, 2462.5], [1124.0, 1373.0], [1123.0, 3012.0], [1106.0, 1866.0], [1197.0, 1145.0], [1198.0, 2239.0], [1171.0, 1141.0], [1155.0, 1133.0], [1209.0, 2761.0], [1166.0, 1416.0], [1258.0, 1187.0], [1234.0, 1740.0], [1222.0, 1228.0], [1226.0, 1135.0], [1233.0, 2046.5], [1241.0, 1192.0], [1304.0, 1127.0], [1782.0, 4642.0], [1.0, 100423.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[21.0, 43.0], [63.0, 10257.5], [102.0, 10228.0], [121.0, 41.5], [177.0, 10255.0], [189.0, 10382.0], [240.0, 59.0], [272.0, 70.0], [274.0, 50.0], [333.0, 10585.0], [357.0, 60.0], [447.0, 67.0], [456.0, 65.0], [472.0, 43.0], [510.0, 69.0], [511.0, 65.0], [497.0, 45.5], [568.0, 65.0], [603.0, 67.0], [590.0, 146.5], [616.0, 10426.0], [667.0, 43.0], [654.0, 54.0], [665.0, 50.0], [698.0, 60.0], [713.0, 46.0], [728.0, 58.0], [739.0, 10311.0], [736.0, 10321.5], [785.0, 60.0], [826.0, 64.0], [828.0, 62.0], [829.0, 126.0], [827.0, 10308.0], [821.0, 53.0], [837.0, 56.0], [847.0, 52.0], [835.0, 574.0], [833.0, 41.0], [838.0, 10162.0], [851.0, 10302.0], [880.0, 63.0], [870.0, 68.0], [881.0, 44.0], [883.0, 60.0], [865.0, 41.0], [869.0, 41.5], [895.0, 41.0], [893.0, 56.0], [877.0, 55.0], [882.0, 10089.0], [927.0, 55.0], [905.0, 42.0], [918.0, 58.0], [917.0, 42.0], [906.0, 10186.5], [897.0, 10413.0], [924.0, 10174.0], [926.0, 52.0], [915.0, 41.5], [934.0, 60.0], [947.0, 41.0], [933.0, 62.0], [956.0, 41.0], [937.0, 10233.0], [936.0, 53.0], [931.0, 43.0], [945.0, 42.0], [930.0, 42.0], [946.0, 42.0], [986.0, 41.0], [977.0, 56.0], [979.0, 42.0], [983.0, 42.0], [982.0, 44.0], [987.0, 48.0], [978.0, 41.0], [971.0, 41.0], [968.0, 41.0], [960.0, 41.0], [973.0, 41.0], [967.0, 43.0], [985.0, 41.0], [976.0, 41.0], [991.0, 43.0], [962.0, 41.0], [1016.0, 42.0], [1014.0, 41.0], [1015.0, 48.0], [1007.0, 41.0], [1006.0, 41.0], [1005.0, 41.0], [1004.0, 41.0], [1003.0, 41.0], [1001.0, 41.0], [1000.0, 41.0], [1008.0, 43.0], [1011.0, 41.0], [1009.0, 42.0], [1010.0, 41.0], [1012.0, 45.0], [997.0, 46.0], [996.0, 42.0], [995.0, 41.0], [993.0, 62.0], [994.0, 41.0], [992.0, 42.0], [1021.0, 42.0], [1022.0, 41.0], [1023.0, 41.0], [1020.0, 41.0], [1019.0, 40.0], [1017.0, 41.0], [999.0, 590.0], [1032.0, 54.0], [1084.0, 45.0], [1042.0, 41.0], [1041.0, 41.0], [1043.0, 43.0], [1047.0, 43.0], [1048.0, 42.0], [1044.0, 41.0], [1049.0, 41.0], [1055.0, 41.0], [1026.0, 42.0], [1024.0, 46.0], [1025.0, 41.0], [1052.0, 42.5], [1050.0, 41.0], [1054.0, 43.0], [1053.0, 41.0], [1064.0, 41.0], [1063.0, 41.0], [1065.0, 42.0], [1070.0, 41.0], [1069.0, 41.0], [1066.0, 41.0], [1067.0, 42.0], [1060.0, 42.0], [1087.0, 41.0], [1058.0, 41.0], [1056.0, 41.0], [1028.0, 43.0], [1078.0, 42.0], [1080.0, 42.0], [1081.0, 41.0], [1039.0, 41.0], [1076.0, 41.0], [1038.0, 41.0], [1033.0, 41.0], [1035.0, 41.0], [1034.0, 44.0], [1077.0, 41.0], [1027.0, 45.0], [1029.0, 43.0], [1030.0, 42.0], [1114.0, 42.0], [1089.0, 42.0], [1104.0, 42.0], [1105.0, 41.0], [1121.0, 41.0], [1120.0, 50.0], [1096.0, 41.0], [1095.0, 42.0], [1091.0, 42.0], [1092.0, 41.0], [1090.0, 41.0], [1094.0, 41.0], [1118.0, 41.0], [1117.0, 41.0], [1115.0, 41.0], [1110.0, 44.0], [1108.0, 41.0], [1107.0, 41.0], [1133.0, 100.0], [1124.0, 42.0], [1123.0, 45.0], [1106.0, 41.0], [1197.0, 52.0], [1198.0, 41.0], [1171.0, 56.0], [1155.0, 42.0], [1209.0, 51.0], [1166.0, 41.0], [1258.0, 43.0], [1234.0, 1246.5], [1222.0, 43.0], [1226.0, 47.0], [1233.0, 399.0], [1241.0, 41.0], [1304.0, 62.5], [1782.0, 42.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1782.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 186.8, "minX": 1.6842066E12, "maxY": 1019.3333333333334, "series": [{"data": [[1.68420672E12, 936.65], [1.6842069E12, 759.25], [1.6842066E12, 186.8], [1.68420678E12, 968.2], [1.68420666E12, 812.5833333333334], [1.68420684E12, 1019.3333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6842069E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6842066E12, "maxY": 891.1333333333333, "series": [{"data": [[1.6842069E12, 0.05], [1.68420666E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68420672E12, 790.85], [1.6842069E12, 695.0166666666667], [1.6842066E12, 123.48333333333333], [1.68420678E12, 834.3166666666667], [1.68420696E12, 0.05], [1.68420666E12, 738.2], [1.68420684E12, 891.1333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68420672E12, 0.2], [1.68420678E12, 0.03333333333333333], [1.68420666E12, 0.13333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68420672E12, 132.36666666666667], [1.6842069E12, 114.05], [1.6842066E12, 13.816666666666666], [1.68420678E12, 133.81666666666666], [1.68420666E12, 86.93333333333334], [1.68420684E12, 128.31666666666666]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420696E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.6842066E12, "maxY": 891.1333333333333, "series": [{"data": [[1.68420672E12, 790.85], [1.6842069E12, 695.0166666666667], [1.6842066E12, 123.48333333333333], [1.68420678E12, 834.3166666666667], [1.68420696E12, 0.05], [1.68420666E12, 738.2], [1.68420684E12, 891.1333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68420672E12, 132.56666666666666], [1.6842069E12, 114.1], [1.6842066E12, 13.816666666666666], [1.68420678E12, 133.85], [1.68420666E12, 87.11666666666666], [1.68420684E12, 128.31666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420696E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.6842066E12, "maxY": 891.1333333333333, "series": [{"data": [[1.68420672E12, 790.85], [1.6842069E12, 695.0166666666667], [1.6842066E12, 123.48333333333333], [1.68420678E12, 834.3166666666667], [1.68420696E12, 0.05], [1.68420666E12, 738.2], [1.68420684E12, 891.1333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68420672E12, 132.56666666666666], [1.6842069E12, 114.1], [1.6842066E12, 13.816666666666666], [1.68420678E12, 133.85], [1.68420666E12, 87.11666666666666], [1.68420684E12, 128.31666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420696E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

