/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 19635.0, "series": [{"data": [[0.0, 0.0], [0.1, 36.0], [0.2, 36.0], [0.3, 37.0], [0.4, 37.0], [0.5, 37.0], [0.6, 37.0], [0.7, 37.0], [0.8, 37.0], [0.9, 37.0], [1.0, 37.0], [1.1, 37.0], [1.2, 37.0], [1.3, 37.0], [1.4, 37.0], [1.5, 38.0], [1.6, 38.0], [1.7, 38.0], [1.8, 38.0], [1.9, 38.0], [2.0, 38.0], [2.1, 38.0], [2.2, 38.0], [2.3, 38.0], [2.4, 38.0], [2.5, 38.0], [2.6, 38.0], [2.7, 38.0], [2.8, 38.0], [2.9, 38.0], [3.0, 38.0], [3.1, 38.0], [3.2, 38.0], [3.3, 38.0], [3.4, 38.0], [3.5, 38.0], [3.6, 38.0], [3.7, 38.0], [3.8, 38.0], [3.9, 39.0], [4.0, 39.0], [4.1, 39.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 39.0], [4.7, 39.0], [4.8, 39.0], [4.9, 39.0], [5.0, 39.0], [5.1, 39.0], [5.2, 39.0], [5.3, 39.0], [5.4, 39.0], [5.5, 39.0], [5.6, 39.0], [5.7, 39.0], [5.8, 39.0], [5.9, 39.0], [6.0, 39.0], [6.1, 39.0], [6.2, 39.0], [6.3, 39.0], [6.4, 39.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 40.0], [6.9, 40.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 40.0], [7.6, 40.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 40.0], [8.6, 40.0], [8.7, 40.0], [8.8, 40.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 41.0], [10.6, 41.0], [10.7, 41.0], [10.8, 41.0], [10.9, 41.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 42.0], [11.9, 42.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 43.0], [12.4, 43.0], [12.5, 43.0], [12.6, 43.0], [12.7, 43.0], [12.8, 44.0], [12.9, 44.0], [13.0, 44.0], [13.1, 45.0], [13.2, 45.0], [13.3, 45.0], [13.4, 46.0], [13.5, 46.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 48.0], [14.0, 48.0], [14.1, 49.0], [14.2, 49.0], [14.3, 50.0], [14.4, 50.0], [14.5, 51.0], [14.6, 51.0], [14.7, 52.0], [14.8, 52.0], [14.9, 53.0], [15.0, 54.0], [15.1, 54.0], [15.2, 55.0], [15.3, 55.0], [15.4, 56.0], [15.5, 56.0], [15.6, 57.0], [15.7, 58.0], [15.8, 58.0], [15.9, 59.0], [16.0, 60.0], [16.1, 60.0], [16.2, 61.0], [16.3, 62.0], [16.4, 63.0], [16.5, 63.0], [16.6, 64.0], [16.7, 65.0], [16.8, 66.0], [16.9, 67.0], [17.0, 68.0], [17.1, 69.0], [17.2, 71.0], [17.3, 72.0], [17.4, 74.0], [17.5, 76.0], [17.6, 79.0], [17.7, 83.0], [17.8, 87.0], [17.9, 91.0], [18.0, 96.0], [18.1, 102.0], [18.2, 109.0], [18.3, 121.0], [18.4, 141.0], [18.5, 158.0], [18.6, 187.0], [18.7, 231.0], [18.8, 267.0], [18.9, 331.0], [19.0, 443.0], [19.1, 591.0], [19.2, 856.0], [19.3, 1088.0], [19.4, 1089.0], [19.5, 1090.0], [19.6, 1090.0], [19.7, 1091.0], [19.8, 1091.0], [19.9, 1091.0], [20.0, 1092.0], [20.1, 1092.0], [20.2, 1092.0], [20.3, 1092.0], [20.4, 1092.0], [20.5, 1093.0], [20.6, 1093.0], [20.7, 1093.0], [20.8, 1093.0], [20.9, 1093.0], [21.0, 1093.0], [21.1, 1093.0], [21.2, 1094.0], [21.3, 1094.0], [21.4, 1094.0], [21.5, 1094.0], [21.6, 1094.0], [21.7, 1094.0], [21.8, 1094.0], [21.9, 1094.0], [22.0, 1094.0], [22.1, 1095.0], [22.2, 1095.0], [22.3, 1095.0], [22.4, 1095.0], [22.5, 1095.0], [22.6, 1095.0], [22.7, 1095.0], [22.8, 1095.0], [22.9, 1095.0], [23.0, 1095.0], [23.1, 1096.0], [23.2, 1096.0], [23.3, 1096.0], [23.4, 1096.0], [23.5, 1096.0], [23.6, 1096.0], [23.7, 1096.0], [23.8, 1096.0], [23.9, 1096.0], [24.0, 1096.0], [24.1, 1096.0], [24.2, 1097.0], [24.3, 1097.0], [24.4, 1097.0], [24.5, 1097.0], [24.6, 1097.0], [24.7, 1097.0], [24.8, 1097.0], [24.9, 1097.0], [25.0, 1097.0], [25.1, 1097.0], [25.2, 1097.0], [25.3, 1098.0], [25.4, 1098.0], [25.5, 1098.0], [25.6, 1098.0], [25.7, 1098.0], [25.8, 1098.0], [25.9, 1098.0], [26.0, 1098.0], [26.1, 1098.0], [26.2, 1098.0], [26.3, 1099.0], [26.4, 1099.0], [26.5, 1099.0], [26.6, 1099.0], [26.7, 1099.0], [26.8, 1099.0], [26.9, 1099.0], [27.0, 1099.0], [27.1, 1099.0], [27.2, 1099.0], [27.3, 1099.0], [27.4, 1100.0], [27.5, 1100.0], [27.6, 1100.0], [27.7, 1100.0], [27.8, 1100.0], [27.9, 1100.0], [28.0, 1100.0], [28.1, 1100.0], [28.2, 1101.0], [28.3, 1101.0], [28.4, 1101.0], [28.5, 1101.0], [28.6, 1101.0], [28.7, 1101.0], [28.8, 1101.0], [28.9, 1101.0], [29.0, 1102.0], [29.1, 1102.0], [29.2, 1102.0], [29.3, 1102.0], [29.4, 1102.0], [29.5, 1102.0], [29.6, 1103.0], [29.7, 1103.0], [29.8, 1103.0], [29.9, 1103.0], [30.0, 1103.0], [30.1, 1103.0], [30.2, 1104.0], [30.3, 1104.0], [30.4, 1104.0], [30.5, 1104.0], [30.6, 1104.0], [30.7, 1105.0], [30.8, 1105.0], [30.9, 1105.0], [31.0, 1105.0], [31.1, 1106.0], [31.2, 1106.0], [31.3, 1106.0], [31.4, 1106.0], [31.5, 1107.0], [31.6, 1107.0], [31.7, 1107.0], [31.8, 1108.0], [31.9, 1108.0], [32.0, 1108.0], [32.1, 1108.0], [32.2, 1109.0], [32.3, 1109.0], [32.4, 1109.0], [32.5, 1110.0], [32.6, 1110.0], [32.7, 1111.0], [32.8, 1111.0], [32.9, 1111.0], [33.0, 1112.0], [33.1, 1112.0], [33.2, 1112.0], [33.3, 1113.0], [33.4, 1113.0], [33.5, 1114.0], [33.6, 1114.0], [33.7, 1115.0], [33.8, 1115.0], [33.9, 1116.0], [34.0, 1116.0], [34.1, 1117.0], [34.2, 1117.0], [34.3, 1118.0], [34.4, 1118.0], [34.5, 1119.0], [34.6, 1119.0], [34.7, 1120.0], [34.8, 1120.0], [34.9, 1121.0], [35.0, 1121.0], [35.1, 1122.0], [35.2, 1122.0], [35.3, 1123.0], [35.4, 1124.0], [35.5, 1124.0], [35.6, 1125.0], [35.7, 1126.0], [35.8, 1126.0], [35.9, 1127.0], [36.0, 1127.0], [36.1, 1128.0], [36.2, 1129.0], [36.3, 1130.0], [36.4, 1130.0], [36.5, 1131.0], [36.6, 1132.0], [36.7, 1132.0], [36.8, 1133.0], [36.9, 1134.0], [37.0, 1135.0], [37.1, 1136.0], [37.2, 1136.0], [37.3, 1137.0], [37.4, 1138.0], [37.5, 1139.0], [37.6, 1140.0], [37.7, 1141.0], [37.8, 1142.0], [37.9, 1143.0], [38.0, 1144.0], [38.1, 1145.0], [38.2, 1146.0], [38.3, 1147.0], [38.4, 1148.0], [38.5, 1149.0], [38.6, 1150.0], [38.7, 1152.0], [38.8, 1153.0], [38.9, 1153.0], [39.0, 1154.0], [39.1, 1155.0], [39.2, 1156.0], [39.3, 1157.0], [39.4, 1159.0], [39.5, 1160.0], [39.6, 1161.0], [39.7, 1162.0], [39.8, 1163.0], [39.9, 1164.0], [40.0, 1166.0], [40.1, 1167.0], [40.2, 1168.0], [40.3, 1170.0], [40.4, 1171.0], [40.5, 1172.0], [40.6, 1174.0], [40.7, 1176.0], [40.8, 1177.0], [40.9, 1179.0], [41.0, 1180.0], [41.1, 1182.0], [41.2, 1183.0], [41.3, 1185.0], [41.4, 1187.0], [41.5, 1189.0], [41.6, 1191.0], [41.7, 1193.0], [41.8, 1195.0], [41.9, 1197.0], [42.0, 1199.0], [42.1, 1202.0], [42.2, 1204.0], [42.3, 1206.0], [42.4, 1208.0], [42.5, 1211.0], [42.6, 1213.0], [42.7, 1216.0], [42.8, 1218.0], [42.9, 1221.0], [43.0, 1223.0], [43.1, 1226.0], [43.2, 1228.0], [43.3, 1231.0], [43.4, 1233.0], [43.5, 1236.0], [43.6, 1238.0], [43.7, 1241.0], [43.8, 1244.0], [43.9, 1247.0], [44.0, 1250.0], [44.1, 1253.0], [44.2, 1256.0], [44.3, 1259.0], [44.4, 1262.0], [44.5, 1265.0], [44.6, 1268.0], [44.7, 1271.0], [44.8, 1274.0], [44.9, 1277.0], [45.0, 1279.0], [45.1, 1282.0], [45.2, 1285.0], [45.3, 1288.0], [45.4, 1290.0], [45.5, 1293.0], [45.6, 1296.0], [45.7, 1299.0], [45.8, 1303.0], [45.9, 1306.0], [46.0, 1311.0], [46.1, 1314.0], [46.2, 1318.0], [46.3, 1321.0], [46.4, 1325.0], [46.5, 1328.0], [46.6, 1332.0], [46.7, 1336.0], [46.8, 1340.0], [46.9, 1344.0], [47.0, 1348.0], [47.1, 1352.0], [47.2, 1356.0], [47.3, 1361.0], [47.4, 1366.0], [47.5, 1370.0], [47.6, 1374.0], [47.7, 1379.0], [47.8, 1383.0], [47.9, 1388.0], [48.0, 1392.0], [48.1, 1396.0], [48.2, 1401.0], [48.3, 1405.0], [48.4, 1409.0], [48.5, 1413.0], [48.6, 1418.0], [48.7, 1422.0], [48.8, 1426.0], [48.9, 1431.0], [49.0, 1435.0], [49.1, 1439.0], [49.2, 1443.0], [49.3, 1448.0], [49.4, 1452.0], [49.5, 1457.0], [49.6, 1462.0], [49.7, 1467.0], [49.8, 1471.0], [49.9, 1476.0], [50.0, 1481.0], [50.1, 1486.0], [50.2, 1491.0], [50.3, 1495.0], [50.4, 1500.0], [50.5, 1504.0], [50.6, 1508.0], [50.7, 1512.0], [50.8, 1516.0], [50.9, 1520.0], [51.0, 1525.0], [51.1, 1529.0], [51.2, 1534.0], [51.3, 1538.0], [51.4, 1542.0], [51.5, 1546.0], [51.6, 1551.0], [51.7, 1556.0], [51.8, 1560.0], [51.9, 1565.0], [52.0, 1570.0], [52.1, 1574.0], [52.2, 1579.0], [52.3, 1585.0], [52.4, 1589.0], [52.5, 1594.0], [52.6, 1599.0], [52.7, 1605.0], [52.8, 1610.0], [52.9, 1615.0], [53.0, 1620.0], [53.1, 1625.0], [53.2, 1630.0], [53.3, 1634.0], [53.4, 1638.0], [53.5, 1642.0], [53.6, 1647.0], [53.7, 1651.0], [53.8, 1655.0], [53.9, 1660.0], [54.0, 1665.0], [54.1, 1669.0], [54.2, 1674.0], [54.3, 1679.0], [54.4, 1683.0], [54.5, 1687.0], [54.6, 1691.0], [54.7, 1695.0], [54.8, 1700.0], [54.9, 1704.0], [55.0, 1707.0], [55.1, 1711.0], [55.2, 1715.0], [55.3, 1718.0], [55.4, 1722.0], [55.5, 1725.0], [55.6, 1729.0], [55.7, 1733.0], [55.8, 1736.0], [55.9, 1740.0], [56.0, 1743.0], [56.1, 1747.0], [56.2, 1750.0], [56.3, 1754.0], [56.4, 1757.0], [56.5, 1761.0], [56.6, 1764.0], [56.7, 1767.0], [56.8, 1771.0], [56.9, 1775.0], [57.0, 1780.0], [57.1, 1784.0], [57.2, 1788.0], [57.3, 1793.0], [57.4, 1797.0], [57.5, 1802.0], [57.6, 1807.0], [57.7, 1812.0], [57.8, 1816.0], [57.9, 1821.0], [58.0, 1825.0], [58.1, 1829.0], [58.2, 1833.0], [58.3, 1837.0], [58.4, 1841.0], [58.5, 1845.0], [58.6, 1849.0], [58.7, 1853.0], [58.8, 1857.0], [58.9, 1861.0], [59.0, 1864.0], [59.1, 1868.0], [59.2, 1872.0], [59.3, 1877.0], [59.4, 1881.0], [59.5, 1884.0], [59.6, 1888.0], [59.7, 1892.0], [59.8, 1895.0], [59.9, 1899.0], [60.0, 1903.0], [60.1, 1907.0], [60.2, 1911.0], [60.3, 1915.0], [60.4, 1919.0], [60.5, 1923.0], [60.6, 1927.0], [60.7, 1931.0], [60.8, 1936.0], [60.9, 1940.0], [61.0, 1945.0], [61.1, 1950.0], [61.2, 1954.0], [61.3, 1959.0], [61.4, 1964.0], [61.5, 1969.0], [61.6, 1974.0], [61.7, 1979.0], [61.8, 1985.0], [61.9, 1990.0], [62.0, 1995.0], [62.1, 2001.0], [62.2, 2005.0], [62.3, 2010.0], [62.4, 2016.0], [62.5, 2021.0], [62.6, 2027.0], [62.7, 2032.0], [62.8, 2037.0], [62.9, 2042.0], [63.0, 2047.0], [63.1, 2051.0], [63.2, 2056.0], [63.3, 2060.0], [63.4, 2064.0], [63.5, 2069.0], [63.6, 2074.0], [63.7, 2077.0], [63.8, 2081.0], [63.9, 2085.0], [64.0, 2089.0], [64.1, 2093.0], [64.2, 2096.0], [64.3, 2099.0], [64.4, 2102.0], [64.5, 2106.0], [64.6, 2109.0], [64.7, 2112.0], [64.8, 2115.0], [64.9, 2118.0], [65.0, 2121.0], [65.1, 2125.0], [65.2, 2128.0], [65.3, 2131.0], [65.4, 2134.0], [65.5, 2137.0], [65.6, 2140.0], [65.7, 2142.0], [65.8, 2144.0], [65.9, 2146.0], [66.0, 2149.0], [66.1, 2151.0], [66.2, 2153.0], [66.3, 2155.0], [66.4, 2157.0], [66.5, 2159.0], [66.6, 2162.0], [66.7, 2164.0], [66.8, 2167.0], [66.9, 2170.0], [67.0, 2173.0], [67.1, 2176.0], [67.2, 2180.0], [67.3, 2185.0], [67.4, 2189.0], [67.5, 2194.0], [67.6, 2199.0], [67.7, 2204.0], [67.8, 2210.0], [67.9, 2216.0], [68.0, 2221.0], [68.1, 2229.0], [68.2, 2236.0], [68.3, 2243.0], [68.4, 2251.0], [68.5, 2258.0], [68.6, 2267.0], [68.7, 2276.0], [68.8, 2285.0], [68.9, 2294.0], [69.0, 2304.0], [69.1, 2314.0], [69.2, 2324.0], [69.3, 2335.0], [69.4, 2346.0], [69.5, 2358.0], [69.6, 2370.0], [69.7, 2384.0], [69.8, 2397.0], [69.9, 2408.0], [70.0, 2419.0], [70.1, 2431.0], [70.2, 2444.0], [70.3, 2455.0], [70.4, 2467.0], [70.5, 2478.0], [70.6, 2489.0], [70.7, 2502.0], [70.8, 2513.0], [70.9, 2525.0], [71.0, 2535.0], [71.1, 2545.0], [71.2, 2554.0], [71.3, 2566.0], [71.4, 2577.0], [71.5, 2589.0], [71.6, 2601.0], [71.7, 2615.0], [71.8, 2626.0], [71.9, 2640.0], [72.0, 2653.0], [72.1, 2666.0], [72.2, 2679.0], [72.3, 2690.0], [72.4, 2702.0], [72.5, 2712.0], [72.6, 2724.0], [72.7, 2734.0], [72.8, 2744.0], [72.9, 2754.0], [73.0, 2762.0], [73.1, 2772.0], [73.2, 2780.0], [73.3, 2790.0], [73.4, 2799.0], [73.5, 2808.0], [73.6, 2816.0], [73.7, 2827.0], [73.8, 2836.0], [73.9, 2846.0], [74.0, 2856.0], [74.1, 2866.0], [74.2, 2874.0], [74.3, 2884.0], [74.4, 2893.0], [74.5, 2903.0], [74.6, 2911.0], [74.7, 2922.0], [74.8, 2932.0], [74.9, 2941.0], [75.0, 2950.0], [75.1, 2959.0], [75.2, 2967.0], [75.3, 2976.0], [75.4, 2986.0], [75.5, 2995.0], [75.6, 3003.0], [75.7, 3013.0], [75.8, 3023.0], [75.9, 3033.0], [76.0, 3042.0], [76.1, 3052.0], [76.2, 3062.0], [76.3, 3072.0], [76.4, 3081.0], [76.5, 3091.0], [76.6, 3100.0], [76.7, 3109.0], [76.8, 3118.0], [76.9, 3126.0], [77.0, 3135.0], [77.1, 3143.0], [77.2, 3150.0], [77.3, 3157.0], [77.4, 3164.0], [77.5, 3171.0], [77.6, 3179.0], [77.7, 3186.0], [77.8, 3193.0], [77.9, 3201.0], [78.0, 3209.0], [78.1, 3217.0], [78.2, 3226.0], [78.3, 3236.0], [78.4, 3247.0], [78.5, 3258.0], [78.6, 3271.0], [78.7, 3284.0], [78.8, 3298.0], [78.9, 3313.0], [79.0, 3327.0], [79.1, 3344.0], [79.2, 3361.0], [79.3, 3381.0], [79.4, 3402.0], [79.5, 3424.0], [79.6, 3448.0], [79.7, 3470.0], [79.8, 3493.0], [79.9, 3516.0], [80.0, 3540.0], [80.1, 3565.0], [80.2, 3587.0], [80.3, 3607.0], [80.4, 3628.0], [80.5, 3651.0], [80.6, 3676.0], [80.7, 3698.0], [80.8, 3723.0], [80.9, 3746.0], [81.0, 3766.0], [81.1, 3789.0], [81.2, 3809.0], [81.3, 3830.0], [81.4, 3852.0], [81.5, 3870.0], [81.6, 3889.0], [81.7, 3908.0], [81.8, 3928.0], [81.9, 3946.0], [82.0, 3963.0], [82.1, 3980.0], [82.2, 3997.0], [82.3, 4015.0], [82.4, 4033.0], [82.5, 4049.0], [82.6, 4066.0], [82.7, 4082.0], [82.8, 4098.0], [82.9, 4112.0], [83.0, 4127.0], [83.1, 4140.0], [83.2, 4152.0], [83.3, 4165.0], [83.4, 4179.0], [83.5, 4191.0], [83.6, 4203.0], [83.7, 4214.0], [83.8, 4225.0], [83.9, 4237.0], [84.0, 4248.0], [84.1, 4262.0], [84.2, 4275.0], [84.3, 4289.0], [84.4, 4306.0], [84.5, 4326.0], [84.6, 4345.0], [84.7, 4368.0], [84.8, 4394.0], [84.9, 4419.0], [85.0, 4449.0], [85.1, 4478.0], [85.2, 4512.0], [85.3, 4546.0], [85.4, 4582.0], [85.5, 4619.0], [85.6, 4655.0], [85.7, 4688.0], [85.8, 4724.0], [85.9, 4765.0], [86.0, 4800.0], [86.1, 4835.0], [86.2, 4872.0], [86.3, 4902.0], [86.4, 4931.0], [86.5, 4957.0], [86.6, 4981.0], [86.7, 5010.0], [86.8, 5035.0], [86.9, 5061.0], [87.0, 5084.0], [87.1, 5107.0], [87.2, 5131.0], [87.3, 5150.0], [87.4, 5167.0], [87.5, 5185.0], [87.6, 5201.0], [87.7, 5217.0], [87.8, 5233.0], [87.9, 5247.0], [88.0, 5261.0], [88.1, 5277.0], [88.2, 5293.0], [88.3, 5306.0], [88.4, 5325.0], [88.5, 5345.0], [88.6, 5368.0], [88.7, 5397.0], [88.8, 5428.0], [88.9, 5461.0], [89.0, 5501.0], [89.1, 5546.0], [89.2, 5592.0], [89.3, 5646.0], [89.4, 5698.0], [89.5, 5747.0], [89.6, 5794.0], [89.7, 5847.0], [89.8, 5898.0], [89.9, 5945.0], [90.0, 5988.0], [90.1, 6028.0], [90.2, 6065.0], [90.3, 6097.0], [90.4, 6132.0], [90.5, 6162.0], [90.6, 6189.0], [90.7, 6212.0], [90.8, 6235.0], [90.9, 6258.0], [91.0, 6279.0], [91.1, 6300.0], [91.2, 6321.0], [91.3, 6342.0], [91.4, 6363.0], [91.5, 6390.0], [91.6, 6419.0], [91.7, 6459.0], [91.8, 6503.0], [91.9, 6549.0], [92.0, 6607.0], [92.1, 6676.0], [92.2, 6746.0], [92.3, 6815.0], [92.4, 6885.0], [92.5, 6952.0], [92.6, 7010.0], [92.7, 7065.0], [92.8, 7115.0], [92.9, 7161.0], [93.0, 7200.0], [93.1, 7240.0], [93.2, 7273.0], [93.3, 7300.0], [93.4, 7330.0], [93.5, 7359.0], [93.6, 7389.0], [93.7, 7419.0], [93.8, 7452.0], [93.9, 7486.0], [94.0, 7533.0], [94.1, 7585.0], [94.2, 7651.0], [94.3, 7731.0], [94.4, 7827.0], [94.5, 7930.0], [94.6, 8011.0], [94.7, 8093.0], [94.8, 8161.0], [94.9, 8223.0], [95.0, 8276.0], [95.1, 8327.0], [95.2, 8368.0], [95.3, 8404.0], [95.4, 8441.0], [95.5, 8480.0], [95.6, 8525.0], [95.7, 8579.0], [95.8, 8644.0], [95.9, 8714.0], [96.0, 8794.0], [96.1, 8883.0], [96.2, 8993.0], [96.3, 9081.0], [96.4, 9166.0], [96.5, 9230.0], [96.6, 9288.0], [96.7, 9343.0], [96.8, 9393.0], [96.9, 9439.0], [97.0, 9486.0], [97.1, 9529.0], [97.2, 9570.0], [97.3, 9631.0], [97.4, 9708.0], [97.5, 9790.0], [97.6, 9895.0], [97.7, 10017.0], [97.8, 10086.0], [97.9, 10141.0], [98.0, 10189.0], [98.1, 10239.0], [98.2, 10287.0], [98.3, 10332.0], [98.4, 10375.0], [98.5, 10413.0], [98.6, 10451.0], [98.7, 10487.0], [98.8, 10522.0], [98.9, 10566.0], [99.0, 10611.0], [99.1, 10664.0], [99.2, 10738.0], [99.3, 10828.0], [99.4, 10925.0], [99.5, 11040.0], [99.6, 11152.0], [99.7, 11287.0], [99.8, 11452.0], [99.9, 11760.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 53905.0, "series": [{"data": [[0.0, 53905.0], [100.0, 1694.0], [200.0, 668.0], [300.0, 310.0], [400.0, 256.0], [500.0, 179.0], [600.0, 124.0], [700.0, 139.0], [800.0, 76.0], [900.0, 84.0], [1000.0, 24048.0], [1100.0, 43885.0], [1200.0, 11086.0], [1300.0, 7324.0], [1400.0, 6618.0], [1500.0, 6603.0], [1600.0, 6555.0], [1700.0, 7898.0], [1800.0, 7359.0], [1900.0, 6463.0], [2000.0, 6680.0], [2100.0, 9872.0], [2200.0, 3973.0], [2300.0, 2604.0], [2400.0, 2559.0], [2500.0, 2697.0], [2600.0, 2369.0], [2800.0, 3156.0], [2700.0, 3070.0], [2900.0, 3253.0], [3000.0, 3108.0], [3100.0, 3841.0], [3200.0, 2771.0], [3300.0, 1712.0], [3400.0, 1308.0], [3500.0, 1308.0], [3600.0, 1318.0], [3700.0, 1324.0], [3800.0, 1526.0], [3900.0, 1643.0], [4000.0, 1791.0], [4100.0, 2276.0], [4200.0, 2357.0], [4300.0, 1367.0], [4400.0, 1028.0], [4600.0, 853.0], [4500.0, 853.0], [4700.0, 785.0], [4800.0, 877.0], [4900.0, 1095.0], [5000.0, 1220.0], [5100.0, 1566.0], [5200.0, 1977.0], [5300.0, 1354.0], [5400.0, 857.0], [5600.0, 568.0], [5500.0, 647.0], [5800.0, 592.0], [5700.0, 608.0], [6100.0, 1010.0], [6000.0, 826.0], [5900.0, 666.0], [6300.0, 1317.0], [6200.0, 1357.0], [6400.0, 752.0], [6500.0, 588.0], [6600.0, 434.0], [6700.0, 438.0], [6800.0, 423.0], [6900.0, 468.0], [7100.0, 678.0], [7000.0, 577.0], [7200.0, 888.0], [7300.0, 1022.0], [7400.0, 867.0], [7500.0, 561.0], [7600.0, 436.0], [7700.0, 321.0], [7900.0, 353.0], [7800.0, 288.0], [8000.0, 372.0], [8100.0, 447.0], [8200.0, 540.0], [8300.0, 736.0], [8400.0, 770.0], [8500.0, 550.0], [8600.0, 454.0], [8700.0, 375.0], [8800.0, 321.0], [8900.0, 274.0], [9000.0, 332.0], [9100.0, 387.0], [9200.0, 513.0], [9300.0, 577.0], [9400.0, 656.0], [9500.0, 649.0], [9600.0, 405.0], [9700.0, 362.0], [9800.0, 288.0], [9900.0, 234.0], [10000.0, 413.0], [10100.0, 589.0], [10200.0, 610.0], [10400.0, 787.0], [10300.0, 723.0], [10500.0, 723.0], [10600.0, 542.0], [10700.0, 359.0], [10800.0, 309.0], [10900.0, 275.0], [11000.0, 250.0], [11100.0, 268.0], [11200.0, 191.0], [11300.0, 179.0], [11600.0, 49.0], [11700.0, 53.0], [11400.0, 211.0], [11500.0, 105.0], [12000.0, 47.0], [11900.0, 41.0], [11800.0, 27.0], [12100.0, 38.0], [12200.0, 31.0], [12300.0, 19.0], [12400.0, 24.0], [12500.0, 6.0], [12600.0, 4.0], [12700.0, 3.0], [12900.0, 2.0], [12800.0, 3.0], [13200.0, 1.0], [13300.0, 3.0], [13000.0, 1.0], [13100.0, 2.0], [13400.0, 1.0], [13800.0, 3.0], [13600.0, 1.0], [13500.0, 1.0], [14300.0, 3.0], [14000.0, 1.0], [13900.0, 2.0], [14200.0, 1.0], [14800.0, 1.0], [15000.0, 2.0], [15300.0, 1.0], [16100.0, 2.0], [16200.0, 1.0], [16600.0, 1.0], [17400.0, 1.0], [18200.0, 1.0], [17800.0, 1.0], [18800.0, 1.0], [18500.0, 1.0], [19600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 856.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 146332.0, "series": [{"data": [[0.0, 856.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 93092.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 146332.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 58184.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2908.8973630191026, "minX": 1.68420792E12, "maxY": 3000.0, "series": [{"data": [[1.68420816E12, 3000.0], [1.68420822E12, 2908.8973630191026], [1.68420804E12, 3000.0], [1.6842081E12, 3000.0], [1.68420792E12, 3000.0], [1.68420798E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420822E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 39.0, "minX": 10.0, "maxY": 11464.0, "series": [{"data": [[10.0, 10184.0], [11.0, 10353.0], [12.0, 10798.0], [13.0, 10047.0], [14.0, 10624.0], [15.0, 10612.0], [16.0, 10684.0], [17.0, 10868.0], [18.0, 9900.0], [19.0, 10621.0], [20.0, 10419.0], [21.0, 10523.0], [22.0, 11464.0], [23.0, 10747.0], [24.0, 10510.0], [25.0, 9585.0], [26.0, 10480.0], [27.0, 10776.0], [28.0, 10241.0], [29.0, 10450.0], [30.0, 9639.0], [31.0, 10508.0], [33.0, 10601.5], [35.0, 10386.0], [36.0, 10596.5], [39.0, 10674.0], [40.0, 10759.0], [43.0, 10248.0], [42.0, 10031.5], [45.0, 10283.0], [44.0, 11267.0], [47.0, 10208.0], [46.0, 10268.0], [49.0, 9223.0], [48.0, 10205.0], [51.0, 10181.0], [50.0, 10488.0], [53.0, 10084.5], [55.0, 9704.0], [54.0, 10914.0], [57.0, 10046.0], [56.0, 10787.0], [59.0, 10617.0], [58.0, 10901.0], [61.0, 10661.0], [60.0, 10601.0], [63.0, 8711.0], [62.0, 9994.0], [67.0, 9660.0], [66.0, 10035.0], [65.0, 9746.0], [64.0, 10886.0], [71.0, 8791.0], [70.0, 10567.0], [69.0, 9426.0], [68.0, 9491.0], [75.0, 10515.0], [74.0, 10755.0], [73.0, 10775.0], [72.0, 8404.0], [79.0, 10633.0], [78.0, 9485.0], [77.0, 10665.0], [76.0, 8650.0], [83.0, 9285.0], [82.0, 10377.0], [81.0, 8830.0], [80.0, 9270.0], [87.0, 10486.0], [86.0, 10404.0], [85.0, 10606.0], [84.0, 10957.0], [91.0, 9412.0], [90.0, 8722.0], [89.0, 10403.0], [88.0, 10727.0], [95.0, 8515.0], [94.0, 9268.0], [93.0, 10470.0], [92.0, 10606.0], [99.0, 9402.0], [98.0, 9273.0], [97.0, 8436.0], [96.0, 9453.0], [103.0, 8279.0], [102.0, 11287.0], [101.0, 9516.0], [100.0, 9166.0], [107.0, 9528.0], [106.0, 10786.0], [105.0, 9165.0], [104.0, 10693.0], [111.0, 10816.0], [110.0, 9320.5], [108.0, 11280.0], [115.0, 9676.0], [114.0, 10396.0], [113.0, 9095.0], [112.0, 9408.0], [118.0, 10173.0], [117.0, 9956.5], [123.0, 9385.0], [122.0, 9492.0], [121.0, 10337.0], [120.0, 10380.0], [127.0, 10088.0], [126.0, 10401.0], [125.0, 9034.0], [124.0, 9280.0], [135.0, 10037.0], [134.0, 8764.0], [133.0, 10731.0], [132.0, 8690.0], [131.0, 8767.0], [130.0, 9149.0], [129.0, 9345.0], [128.0, 10103.0], [143.0, 8653.0], [142.0, 10495.0], [141.0, 10026.0], [140.0, 10768.0], [139.0, 8564.0], [138.0, 9882.0], [137.0, 7642.0], [136.0, 8883.0], [150.0, 8563.0], [149.0, 10732.0], [148.0, 10505.0], [147.0, 10527.0], [146.0, 9841.0], [145.0, 8360.0], [144.0, 8558.0], [158.0, 9443.0], [157.0, 10497.0], [156.0, 9038.5], [154.0, 8792.0], [153.0, 8785.0], [152.0, 9530.0], [167.0, 8735.0], [166.0, 10480.0], [165.0, 8734.0], [164.0, 9238.666666666666], [161.0, 10534.0], [160.0, 9077.0], [175.0, 10352.0], [174.0, 9514.0], [173.0, 9704.0], [172.0, 7672.0], [171.0, 9387.0], [170.0, 9688.0], [169.0, 8540.0], [168.0, 10515.0], [182.0, 10453.0], [181.0, 9478.0], [180.0, 10557.0], [179.0, 10535.5], [177.0, 9490.0], [176.0, 10465.0], [189.0, 9314.0], [188.0, 10387.0], [187.0, 9331.0], [186.0, 10530.0], [185.0, 8615.0], [184.0, 9935.0], [199.0, 9521.0], [197.0, 8707.0], [196.0, 9259.0], [194.0, 9748.5], [192.0, 8232.0], [207.0, 8418.0], [206.0, 10514.0], [205.0, 10597.0], [204.0, 10053.0], [201.0, 8076.333333333333], [215.0, 9540.0], [213.0, 10007.5], [211.0, 8799.666666666666], [209.0, 9186.0], [223.0, 9023.0], [222.0, 10410.0], [221.0, 10548.0], [220.0, 8398.0], [219.0, 9391.0], [218.0, 8624.0], [217.0, 8687.0], [231.0, 10208.0], [230.0, 8432.0], [229.0, 8351.0], [228.0, 8119.0], [227.0, 10459.0], [226.0, 8035.0], [225.0, 8413.0], [224.0, 9393.0], [239.0, 9146.0], [238.0, 10094.0], [237.0, 9287.0], [236.0, 11185.0], [235.0, 11029.0], [234.0, 9125.0], [233.0, 10199.0], [232.0, 10458.0], [247.0, 9790.0], [246.0, 8938.0], [245.0, 8908.0], [244.0, 10083.0], [243.0, 9389.0], [242.0, 10376.0], [241.0, 9719.0], [255.0, 10510.0], [254.0, 8616.0], [253.0, 7729.0], [252.0, 8796.0], [251.0, 9797.0], [250.0, 9550.0], [249.0, 7473.0], [248.0, 10502.0], [269.0, 8449.0], [271.0, 9340.5], [268.0, 7711.0], [259.0, 9607.0], [258.0, 9564.0], [257.0, 9828.0], [256.0, 7451.0], [267.0, 8801.0], [266.0, 10418.0], [265.0, 10685.0], [264.0, 8454.0], [263.0, 9552.0], [262.0, 9260.5], [260.0, 9749.0], [286.0, 8392.0], [287.0, 6567.0], [285.0, 9595.0], [284.0, 9328.5], [282.0, 9898.0], [281.0, 10478.0], [280.0, 10704.0], [279.0, 9708.0], [273.0, 9600.0], [275.0, 8712.0], [274.0, 8502.0], [278.0, 7553.5], [276.0, 9904.0], [290.0, 10526.0], [298.0, 9915.0], [296.0, 6506.0], [295.0, 8142.0], [293.0, 9689.0], [292.0, 9747.0], [291.0, 6507.0], [289.0, 7447.0], [288.0, 9732.0], [307.0, 8746.5], [318.0, 6889.0], [319.0, 9441.0], [316.0, 10153.5], [314.0, 8992.75], [311.0, 7969.5], [310.0, 10825.0], [309.0, 9542.5], [306.0, 10440.0], [305.0, 9454.0], [304.0, 10485.0], [332.0, 10681.0], [334.0, 8150.0], [335.0, 8516.0], [333.0, 8252.0], [331.0, 8481.0], [329.0, 8376.0], [327.0, 8497.5], [325.0, 9615.166666666668], [322.0, 9889.0], [320.0, 8104.0], [350.0, 8359.0], [351.0, 9232.0], [349.0, 6314.0], [348.0, 8324.0], [347.0, 9484.0], [346.0, 9066.0], [345.0, 10241.0], [344.0, 8217.0], [343.0, 9369.0], [337.0, 9695.0], [336.0, 8432.0], [339.0, 8276.0], [338.0, 9369.0], [342.0, 7167.0], [341.0, 8318.0], [366.0, 7152.0], [367.0, 7169.0], [365.0, 6373.0], [364.0, 6974.0], [363.0, 7368.0], [362.0, 7405.0], [361.0, 7263.0], [360.0, 8416.0], [359.0, 10244.0], [353.0, 9236.0], [355.0, 10286.0], [354.0, 8177.0], [358.0, 8256.0], [357.0, 9562.0], [356.0, 10271.0], [382.0, 9411.0], [383.0, 9348.0], [381.0, 6937.0], [380.0, 6220.0], [379.0, 9171.0], [377.0, 10403.0], [376.0, 10473.0], [375.0, 6206.0], [369.0, 5995.0], [368.0, 10129.0], [371.0, 8392.0], [370.0, 7253.0], [374.0, 8778.0], [373.0, 11214.0], [372.0, 10117.0], [398.0, 10813.0], [399.0, 8521.0], [397.0, 8883.0], [396.0, 6751.0], [395.0, 6418.0], [394.0, 5660.0], [393.0, 9857.0], [392.0, 8886.0], [391.0, 8188.0], [385.0, 9424.0], [384.0, 8377.0], [387.0, 9212.0], [386.0, 10265.0], [390.0, 8822.0], [389.0, 7910.0], [388.0, 9980.0], [414.0, 6801.0], [415.0, 8715.0], [413.0, 8383.0], [412.0, 9599.0], [411.0, 10414.0], [410.0, 9575.0], [409.0, 8386.0], [408.0, 5772.0], [407.0, 8660.0], [401.0, 8609.0], [400.0, 7763.0], [403.0, 7628.0], [402.0, 9676.0], [406.0, 9710.0], [405.0, 6643.0], [404.0, 8742.0], [428.0, 7723.0], [430.0, 6562.0], [431.0, 8513.0], [429.0, 5545.0], [426.0, 9745.0], [425.0, 9628.0], [423.0, 7684.0], [421.0, 7714.0], [419.0, 8390.0], [416.0, 7374.0], [446.0, 6347.0], [447.0, 7913.0], [445.0, 9771.0], [443.0, 8928.333333333334], [441.0, 8334.5], [440.0, 8754.0], [438.0, 8404.0], [436.0, 7494.0], [435.0, 6777.0], [432.0, 10590.0], [451.0, 7639.5], [463.0, 10757.0], [461.0, 8132.0], [459.0, 9317.666666666666], [457.0, 8518.0], [456.0, 6579.0], [454.0, 6393.0], [453.0, 6391.0], [449.0, 5446.0], [448.0, 9703.0], [467.0, 10011.5], [478.0, 9858.666666666666], [477.0, 10474.0], [475.0, 7182.5], [473.0, 10761.0], [472.0, 8836.0], [470.0, 8554.5], [469.0, 9579.0], [465.0, 9132.0], [464.0, 8637.0], [494.0, 9119.0], [495.0, 6527.0], [493.0, 7651.0], [492.0, 8721.0], [491.0, 11415.0], [490.0, 7448.0], [489.0, 6965.0], [488.0, 9937.0], [487.0, 9673.666666666666], [483.0, 8247.0], [481.0, 7090.0], [480.0, 9381.0], [485.0, 6553.5], [510.0, 6272.0], [511.0, 5177.0], [509.0, 10692.0], [508.0, 10308.0], [506.0, 9355.0], [505.0, 6531.0], [504.0, 7217.0], [503.0, 9230.0], [497.0, 8170.0], [496.0, 9438.0], [499.0, 9437.0], [498.0, 10534.0], [502.0, 5087.0], [501.0, 8321.0], [500.0, 5682.0], [540.0, 8098.0], [542.0, 6060.0], [538.0, 8075.0], [536.0, 7117.0], [534.0, 10155.0], [532.0, 6968.0], [530.0, 9256.0], [528.0, 6291.0], [526.0, 9446.0], [514.0, 8226.0], [512.0, 8174.0], [518.0, 10507.0], [516.0, 6549.0], [524.0, 8297.0], [522.0, 5664.0], [520.0, 5055.0], [572.0, 9190.0], [574.0, 11249.0], [570.0, 7139.0], [568.0, 7065.0], [566.0, 5956.0], [564.0, 7058.0], [560.0, 7953.0], [558.0, 10097.0], [546.0, 6021.0], [550.0, 10478.0], [548.0, 7082.0], [556.0, 6210.0], [554.0, 10527.0], [604.0, 4535.0], [606.0, 6518.0], [602.0, 6538.0], [600.0, 10872.0], [598.0, 7626.0], [596.0, 4793.0], [594.0, 7891.0], [592.0, 10022.0], [588.0, 10308.0], [578.0, 7181.0], [576.0, 5971.0], [582.0, 7003.0], [580.0, 10885.5], [586.0, 9026.0], [584.0, 9289.0], [614.0, 6419.0], [638.0, 7626.0], [634.0, 9513.0], [630.0, 10588.0], [618.0, 5580.0], [616.0, 9442.0], [612.0, 8487.0], [610.0, 4623.0], [608.0, 10659.0], [668.0, 8357.0], [670.0, 6569.5], [666.0, 10639.0], [658.0, 8761.0], [656.0, 6584.5], [654.0, 9113.0], [652.0, 7195.0], [648.0, 7194.0], [640.0, 7477.333333333333], [678.0, 7871.5], [700.0, 8268.0], [702.0, 8444.0], [696.0, 8441.5], [694.0, 6593.0], [688.0, 9025.0], [684.0, 8400.0], [680.0, 6407.0], [676.0, 6409.333333333333], [674.0, 7442.0], [672.0, 6262.0], [732.0, 9375.0], [734.0, 7342.0], [730.0, 7465.0], [728.0, 5168.0], [726.0, 10261.0], [724.0, 9356.0], [722.0, 7564.0], [720.0, 9397.0], [716.0, 7137.0], [710.0, 7500.0], [708.0, 11338.0], [704.0, 9410.0], [714.0, 7241.0], [760.0, 7615.5], [764.0, 5369.0], [766.0, 8255.0], [762.0, 5449.0], [756.0, 4411.0], [754.0, 5144.0], [750.0, 8425.0], [736.0, 10245.0], [742.0, 9310.0], [740.0, 5277.0], [748.0, 5481.0], [746.0, 7372.5], [744.0, 8549.0], [794.0, 8200.0], [798.0, 6018.0], [792.0, 10340.0], [774.0, 7474.0], [770.0, 6194.0], [768.0, 6273.0], [790.0, 6968.0], [788.0, 7341.0], [786.0, 8196.0], [782.0, 9287.0], [780.0, 8565.0], [778.0, 8764.5], [776.0, 7138.0], [828.0, 6283.0], [830.0, 11248.0], [826.0, 8090.0], [824.0, 10289.0], [822.0, 11275.0], [820.0, 7291.0], [818.0, 6070.0], [816.0, 10107.0], [814.0, 6288.0], [804.0, 7156.0], [800.0, 9318.5], [812.0, 7637.5], [810.0, 7489.0], [808.0, 7857.333333333333], [860.0, 4637.0], [862.0, 7774.0], [858.0, 10137.0], [856.0, 10051.0], [854.0, 7338.0], [852.0, 10160.0], [850.0, 5023.0], [848.0, 4871.0], [846.0, 8122.0], [834.0, 11131.0], [832.0, 7195.0], [838.0, 9956.0], [836.0, 5814.0], [844.0, 9107.0], [842.0, 10175.0], [840.0, 8954.0], [870.0, 7690.5], [890.0, 5357.0], [888.0, 8600.0], [884.0, 5361.0], [880.0, 4640.0], [878.0, 4324.0], [874.0, 9562.0], [872.0, 7669.0], [868.0, 6890.0], [866.0, 5368.0], [864.0, 6351.0], [924.0, 6737.666666666667], [926.0, 8712.5], [922.0, 8083.5], [920.0, 8695.5], [918.0, 5283.0], [916.0, 8718.0], [914.0, 6399.0], [912.0, 7930.0], [910.0, 6511.0], [898.0, 9479.0], [902.0, 8627.0], [900.0, 11424.0], [908.0, 5881.0], [906.0, 5458.0], [904.0, 8007.0], [958.0, 7673.0], [956.0, 10691.0], [950.0, 6503.0], [948.0, 5430.0], [946.0, 5428.0], [944.0, 6381.0], [942.0, 6304.0], [940.0, 7230.5], [934.0, 8327.0], [928.0, 6596.0], [988.0, 4144.0], [990.0, 3989.0], [986.0, 7337.0], [984.0, 6665.0], [982.0, 6138.0], [978.0, 10487.0], [976.0, 6325.0], [974.0, 6671.0], [962.0, 8645.0], [960.0, 4408.0], [966.0, 10751.0], [964.0, 4407.0], [972.0, 3062.0], [970.0, 5167.0], [968.0, 8401.0], [1018.0, 8175.0], [1020.0, 4861.5], [1016.0, 4104.0], [998.0, 9369.0], [996.0, 10571.0], [992.0, 8154.0], [1014.0, 6470.0], [1012.0, 7952.5], [1008.0, 9501.0], [1006.0, 11442.0], [1004.0, 10642.0], [1002.0, 6025.0], [1000.0, 8085.5], [1080.0, 5630.5], [1056.0, 6478.0], [1060.0, 3142.0], [1064.0, 8564.0], [1076.0, 4369.0], [1072.0, 7118.0], [1036.0, 5428.0], [1032.0, 5297.0], [1028.0, 8151.0], [1024.0, 5293.0], [1052.0, 5286.0], [1040.0, 6062.0], [1068.0, 6187.0], [1144.0, 10192.0], [1148.0, 7393.333333333333], [1120.0, 3058.0], [1124.0, 5263.0], [1128.0, 11225.0], [1140.0, 3709.0], [1136.0, 5834.0], [1100.0, 6228.0], [1096.0, 4149.0], [1088.0, 9108.0], [1116.0, 7121.0], [1112.0, 5367.0], [1108.0, 4471.0], [1104.0, 7268.0], [1132.0, 7052.0], [1208.0, 8936.5], [1212.0, 5383.0], [1188.0, 7707.0], [1184.0, 6608.0], [1192.0, 9540.0], [1204.0, 9460.0], [1200.0, 10030.0], [1164.0, 6999.0], [1160.0, 7873.0], [1156.0, 2931.0], [1152.0, 4764.0], [1180.0, 2380.0], [1176.0, 3231.0], [1172.0, 8677.0], [1168.0, 9946.0], [1196.0, 4408.0], [1264.0, 7737.0], [1272.0, 5317.0], [1252.0, 9592.0], [1256.0, 10493.0], [1276.0, 6415.0], [1268.0, 7042.5], [1216.0, 3450.0], [1228.0, 5263.0], [1244.0, 5569.0], [1240.0, 7626.0], [1236.0, 5561.0], [1232.0, 5349.5], [1336.0, 3022.0], [1312.0, 6785.0], [1316.0, 2949.0], [1320.0, 5583.0], [1340.0, 11347.0], [1332.0, 8532.0], [1328.0, 7390.0], [1284.0, 5742.0], [1280.0, 7580.0], [1288.0, 6415.0], [1292.0, 5532.0], [1308.0, 9730.0], [1300.0, 4234.0], [1296.0, 5045.0], [1324.0, 6669.0], [1392.0, 5367.0], [1404.0, 9400.0], [1376.0, 8368.0], [1380.0, 6381.0], [1400.0, 8544.0], [1356.0, 5657.5], [1372.0, 6213.0], [1368.0, 8169.0], [1360.0, 9523.0], [1388.0, 5139.0], [1464.0, 8239.0], [1440.0, 10465.0], [1444.0, 7606.0], [1448.0, 9241.0], [1468.0, 5149.0], [1460.0, 6504.0], [1456.0, 8396.0], [1408.0, 3970.0], [1412.0, 4039.0], [1416.0, 6291.0], [1420.0, 6607.0], [1436.0, 9106.0], [1432.0, 7257.0], [1428.0, 2761.0], [1424.0, 6533.0], [1452.0, 6134.0], [1528.0, 6812.0], [1508.0, 10164.0], [1512.0, 8276.0], [1532.0, 7895.0], [1524.0, 7334.0], [1520.0, 5856.0], [1476.0, 10236.0], [1480.0, 2027.0], [1484.0, 6293.0], [1500.0, 10112.0], [1496.0, 5035.0], [1492.0, 11070.0], [1488.0, 2953.0], [1516.0, 2986.0], [1592.0, 4375.5], [1596.0, 9766.0], [1568.0, 2269.0], [1572.0, 1100.0], [1576.0, 4428.0], [1588.0, 4333.0], [1584.0, 8742.0], [1544.0, 6488.0], [1540.0, 2310.0], [1536.0, 1096.0], [1564.0, 1095.0], [1556.0, 1094.0], [1552.0, 4863.5], [1652.0, 2912.3333333333335], [1660.0, 2371.0], [1636.0, 3663.0], [1640.0, 5316.0], [1656.0, 6183.0], [1648.0, 6025.0], [1612.0, 6078.0], [1608.0, 2125.0], [1600.0, 6297.0], [1628.0, 9177.0], [1624.0, 4891.5], [1620.0, 10616.0], [1616.0, 2310.0], [1644.0, 1103.0], [1720.0, 7730.0], [1696.0, 5282.0], [1704.0, 10555.0], [1724.0, 1180.5], [1716.0, 6296.0], [1712.0, 5237.0], [1664.0, 5386.0], [1668.0, 2318.0], [1672.0, 5066.5], [1692.0, 2363.0], [1688.0, 10430.0], [1708.0, 1093.0], [1784.0, 9491.0], [1760.0, 1146.3333333333333], [1764.0, 1102.0], [1768.0, 5276.0], [1788.0, 1170.0], [1780.0, 2164.5], [1776.0, 1105.0], [1756.0, 4172.0], [1728.0, 8342.0], [1740.0, 2304.0], [1752.0, 5352.0], [1748.0, 4717.5], [1772.0, 1093.0], [1792.0, 4250.0], [1852.0, 6243.5], [1848.0, 1500.3333333333333], [1844.0, 1094.0], [1820.0, 1099.0], [1816.0, 1092.0], [1812.0, 6359.0], [1808.0, 2268.0], [1828.0, 5199.0], [1824.0, 8625.0], [1868.0, 1979.0], [1892.0, 10244.0], [1916.0, 1096.0], [1908.0, 4130.0], [1864.0, 1689.0], [1860.0, 5174.0], [1856.0, 3174.5], [1884.0, 1749.5], [1876.0, 1095.0], [1900.0, 1903.0], [1896.0, 1095.0], [1888.0, 3190.25], [1968.0, 2407.0], [1956.0, 1761.0], [1980.0, 2749.0], [1952.0, 3070.5], [1932.0, 6725.0], [1928.0, 1097.0], [1924.0, 10359.0], [1920.0, 1095.0], [1940.0, 7055.0], [1936.0, 1594.5], [1964.0, 3558.5], [2040.0, 5136.0], [2024.0, 2519.5], [2028.0, 6756.0], [2044.0, 10394.0], [2036.0, 1748.0], [1984.0, 1860.0], [1988.0, 1097.0], [1996.0, 1100.0], [2004.0, 2752.5], [2000.0, 5243.0], [2072.0, 6226.666666666667], [2128.0, 2050.0], [2136.0, 1093.0], [2168.0, 5869.0], [2064.0, 1740.0], [2056.0, 3586.5], [2048.0, 1093.0], [2104.0, 1714.0], [2096.0, 6551.0], [2088.0, 1106.0], [2080.0, 1096.5], [2296.0, 1094.0], [2240.0, 2905.0], [2248.0, 1099.0], [2256.0, 1091.0], [2264.0, 3536.0], [2288.0, 1111.0], [2280.0, 1183.0], [2272.0, 1102.0], [2200.0, 10069.0], [2192.0, 1093.0], [2184.0, 1684.0], [2232.0, 1498.0], [2224.0, 1103.0], [2216.0, 1603.0], [2208.0, 5015.0], [2416.0, 2094.0], [2376.0, 1143.0], [2384.0, 5443.5], [2424.0, 1407.0], [2400.0, 8618.0], [2328.0, 1103.0], [2320.0, 3790.0], [2312.0, 1107.0], [2304.0, 1130.0], [2360.0, 3731.666666666667], [2352.0, 4127.333333333333], [2344.0, 1097.0], [2336.0, 7659.0], [2544.0, 1179.0], [2520.0, 1793.6666666666665], [2496.0, 8414.0], [2512.0, 3628.333333333333], [2552.0, 1551.0], [2528.0, 4939.0], [2456.0, 4718.0], [2448.0, 8047.0], [2432.0, 2878.0], [2488.0, 1091.0], [2472.0, 6210.5], [2680.0, 1102.3333333333333], [2624.0, 4059.0], [2632.0, 2012.3333333333333], [2640.0, 1371.3333333333333], [2648.0, 1919.0], [2672.0, 8329.0], [2656.0, 1752.3333333333335], [2584.0, 2049.0], [2576.0, 1144.0], [2568.0, 4346.333333333333], [2560.0, 5612.0], [2616.0, 8507.0], [2608.0, 7239.0], [2600.0, 3775.0], [2792.0, 1885.0], [2808.0, 3728.3333333333335], [2752.0, 4518.0], [2760.0, 1635.0], [2776.0, 1792.75], [2800.0, 947.6666666666667], [2784.0, 1093.0], [2712.0, 5987.666666666667], [2704.0, 4169.5], [2688.0, 6031.0], [2744.0, 3041.0], [2736.0, 2549.1666666666665], [2728.0, 1579.0], [2720.0, 3043.0], [2920.0, 4704.5], [2928.0, 1510.6666666666667], [2880.0, 1651.7142857142858], [2888.0, 3279.125], [2896.0, 6671.0], [2904.0, 611.0], [2912.0, 2059.0], [2816.0, 3316.333333333333], [2824.0, 2070.75], [2832.0, 3005.5], [2840.0, 4154.0], [2872.0, 2664.4], [2864.0, 1318.0], [2856.0, 1693.0], [2944.0, 2893.5714285714284], [2952.0, 746.3333333333334], [3000.0, 2309.568103808273], [2960.0, 2454.5], [2968.0, 1384.25], [2992.0, 2238.115384615385], [2984.0, 3253.066666666666], [2976.0, 1117.3333333333335], [2153.0, 6264.0], [2113.0, 3084.0], [2121.0, 2150.5], [2161.0, 4296.5], [2145.0, 4385.5], [2049.0, 2375.0], [2057.0, 1098.0], [2097.0, 1102.0], [2081.0, 5127.0], [2289.0, 1120.0], [2297.0, 1113.0], [2241.0, 9955.0], [2249.0, 1096.0], [2257.0, 1100.0], [2265.0, 1101.0], [2281.0, 5492.0], [2273.0, 1112.0], [2177.0, 5150.333333333334], [2185.0, 1538.0], [2193.0, 5920.0], [2233.0, 9781.0], [2217.0, 5825.0], [2209.0, 1605.0], [2417.0, 7617.0], [2409.0, 10460.0], [2369.0, 4330.5], [2377.0, 5360.0], [2393.0, 2838.5], [2425.0, 4694.5], [2305.0, 2616.333333333333], [2321.0, 1102.0], [2329.0, 1104.0], [2361.0, 1162.0], [2353.0, 1123.0], [2345.0, 2092.0], [2337.0, 1098.0], [2537.0, 3326.5], [2513.0, 1152.0], [2505.0, 1981.0], [2497.0, 2634.0], [2529.0, 5454.0], [2457.0, 9795.0], [2449.0, 2722.5], [2433.0, 9440.0], [2489.0, 6230.0], [2481.0, 6966.0], [2473.0, 5205.0], [2465.0, 1176.5], [2657.0, 1745.0], [2665.0, 1092.5], [2625.0, 1178.0], [2633.0, 1099.0], [2641.0, 1154.0], [2577.0, 9424.0], [2569.0, 1656.5], [2561.0, 5177.0], [2617.0, 1097.0], [2609.0, 2093.3333333333335], [2601.0, 1763.6666666666667], [2593.0, 1093.0], [2801.0, 6119.0], [2793.0, 3353.3333333333335], [2753.0, 2023.0], [2761.0, 5418.0], [2777.0, 3571.3333333333335], [2809.0, 1696.0], [2785.0, 3169.0], [2713.0, 3831.0], [2697.0, 2316.285714285714], [2689.0, 4270.0], [2745.0, 1489.5], [2737.0, 2904.0], [2729.0, 3073.0], [2937.0, 2957.0], [2929.0, 4427.0], [2881.0, 3508.75], [2889.0, 1097.0], [2897.0, 2749.0], [2905.0, 8182.5], [2921.0, 7660.0], [2913.0, 3232.833333333333], [2825.0, 4893.666666666667], [2841.0, 1675.0], [2873.0, 1237.0], [2865.0, 7069.0], [2857.0, 4102.5], [2849.0, 10157.0], [2993.0, 2271.0], [2945.0, 4089.6666666666665], [2961.0, 3125.5], [2969.0, 3446.307692307692], [2985.0, 2082.666666666667], [1077.0, 8110.0], [1085.0, 7177.0], [1065.0, 8515.0], [1057.0, 9681.0], [1061.0, 4277.0], [1037.0, 8622.0], [1029.0, 4116.0], [1025.0, 9217.0], [1053.0, 8769.0], [1049.0, 5421.0], [1045.0, 6880.0], [1069.0, 10413.0], [1145.0, 9025.0], [1149.0, 4809.0], [1121.0, 10243.0], [1125.0, 11256.0], [1129.0, 4847.0], [1141.0, 8950.0], [1137.0, 6924.0], [1101.0, 5369.0], [1097.0, 7036.0], [1093.0, 7198.0], [1089.0, 10401.0], [1117.0, 7069.0], [1113.0, 5222.0], [1109.0, 6519.0], [1105.0, 10399.0], [1133.0, 3111.0], [1205.0, 6317.0], [1201.0, 4707.0], [1185.0, 8403.0], [1189.0, 3228.0], [1209.0, 6256.0], [1153.0, 6174.0], [1157.0, 10246.0], [1161.0, 4627.0], [1165.0, 8147.0], [1181.0, 3655.0], [1177.0, 7490.0], [1173.0, 4481.0], [1169.0, 5675.0], [1197.0, 8349.0], [1193.0, 4276.0], [1269.0, 7700.0], [1277.0, 6328.0], [1249.0, 3053.0], [1253.0, 3444.0], [1273.0, 2426.0], [1217.0, 4270.0], [1225.0, 8079.5], [1229.0, 8488.0], [1241.0, 5408.0], [1237.0, 5565.0], [1233.0, 8376.0], [1261.0, 6628.0], [1257.0, 6264.0], [1333.0, 10691.0], [1341.0, 10664.0], [1313.0, 8502.0], [1337.0, 8369.0], [1329.0, 9409.0], [1293.0, 8409.0], [1281.0, 10328.0], [1309.0, 4130.0], [1305.0, 5742.0], [1301.0, 4004.0], [1297.0, 7784.0], [1325.0, 5103.0], [1401.0, 7036.0], [1405.0, 3174.0], [1377.0, 10427.0], [1381.0, 3002.0], [1397.0, 8375.0], [1393.0, 11357.0], [1357.0, 10138.0], [1353.0, 6862.0], [1349.0, 5274.0], [1345.0, 7115.666666666667], [1365.0, 8571.0], [1361.0, 5445.0], [1385.0, 6012.5], [1457.0, 6954.0], [1465.0, 10288.0], [1445.0, 2988.0], [1449.0, 4121.0], [1469.0, 2968.0], [1461.0, 3810.0], [1409.0, 4180.0], [1413.0, 5046.0], [1421.0, 4238.0], [1417.0, 6071.0], [1437.0, 7512.0], [1433.0, 7285.0], [1429.0, 7473.0], [1425.0, 6477.0], [1453.0, 3036.0], [1525.0, 10185.0], [1533.0, 7812.0], [1505.0, 10196.5], [1509.0, 10130.0], [1513.0, 9297.0], [1529.0, 7991.0], [1521.0, 6922.0], [1485.0, 11207.0], [1481.0, 10094.0], [1477.0, 1773.0], [1473.0, 8150.0], [1501.0, 2959.0], [1497.0, 3880.0], [1493.0, 5916.0], [1489.0, 4684.0], [1517.0, 2677.0], [1585.0, 7612.0], [1597.0, 1097.0], [1569.0, 6410.0], [1573.0, 1098.0], [1589.0, 6478.0], [1537.0, 1098.0], [1541.0, 1097.0], [1545.0, 10645.0], [1549.0, 8056.5], [1561.0, 7614.5], [1557.0, 1100.0], [1553.0, 1092.0], [1581.0, 2645.0], [1577.0, 7626.0], [1649.0, 2380.0], [1653.0, 8414.0], [1629.0, 2241.0], [1613.0, 1096.0], [1605.0, 4226.5], [1601.0, 1108.0], [1621.0, 2758.5], [1645.0, 3224.0], [1641.0, 1091.0], [1633.0, 4995.6], [1713.0, 8882.0], [1725.0, 1093.0], [1677.0, 8347.5], [1689.0, 1097.0], [1685.0, 3717.5], [1681.0, 5996.0], [1705.0, 2267.0], [1701.0, 2720.5], [1781.0, 1096.0], [1777.0, 2199.0], [1789.0, 11383.0], [1761.0, 7573.0], [1765.0, 3521.0], [1785.0, 7849.0], [1757.0, 4275.0], [1729.0, 1096.0], [1733.0, 3136.0], [1737.0, 4639.0], [1741.0, 8595.0], [1753.0, 8345.0], [1745.0, 5859.0], [1773.0, 10729.0], [1769.0, 6272.0], [1841.0, 4845.5], [1853.0, 4049.0], [1849.0, 5335.0], [1845.0, 5770.5], [1793.0, 2228.0], [1797.0, 1098.0], [1801.0, 2063.5], [1805.0, 4204.5], [1817.0, 4105.0], [1813.0, 8263.0], [1837.0, 2734.3333333333335], [1833.0, 3271.5], [1829.0, 1101.0], [1825.0, 1091.0], [1909.0, 8437.0], [1905.0, 6077.0], [1917.0, 1098.0], [1893.0, 1094.0], [1913.0, 1541.0], [1857.0, 7513.0], [1861.0, 1093.0], [1865.0, 1099.0], [1869.0, 9462.0], [1881.0, 3455.333333333333], [1877.0, 1098.0], [1897.0, 5383.0], [1925.0, 1095.0], [1969.0, 6887.0], [1953.0, 1091.0], [1977.0, 1092.0], [1921.0, 1095.0], [1945.0, 1098.0], [1941.0, 7705.0], [1937.0, 3230.0], [1961.0, 5131.5], [1957.0, 5522.0], [2037.0, 3312.0], [2017.0, 2953.0], [2021.0, 3339.0], [2025.0, 1098.0], [2029.0, 6163.0], [1985.0, 1970.0], [1993.0, 1095.5], [1997.0, 3935.0], [2013.0, 4087.5], [2009.0, 1973.5], [2005.0, 1854.0], [2001.0, 1098.0], [2170.0, 3238.0], [2114.0, 1760.0], [2122.0, 3828.0], [2130.0, 1094.0], [2138.0, 1625.0], [2162.0, 4107.0], [2074.0, 2928.0], [2066.0, 5051.0], [2058.0, 10483.0], [2050.0, 8413.0], [2106.0, 5404.0], [2090.0, 7758.0], [2290.0, 2801.0], [2298.0, 6388.0], [2242.0, 10172.0], [2250.0, 1095.0], [2258.0, 636.5], [2266.0, 2475.0], [2282.0, 1125.0], [2202.0, 10176.5], [2194.0, 2975.0], [2178.0, 4023.0], [2234.0, 3984.0], [2226.0, 10196.0], [2218.0, 1903.0], [2210.0, 1099.0], [2418.0, 1093.0], [2386.0, 3960.3333333333335], [2394.0, 1102.0], [2426.0, 1093.0], [2402.0, 2587.0], [2330.0, 1149.0], [2322.0, 10957.0], [2314.0, 1658.0], [2354.0, 5336.0], [2346.0, 9434.0], [2338.0, 5331.0], [2546.0, 7698.5], [2522.0, 1096.5], [2498.0, 4561.0], [2514.0, 1093.0], [2554.0, 1190.5], [2530.0, 1217.0], [2450.0, 1090.0], [2434.0, 3118.0], [2490.0, 2120.0], [2482.0, 1093.0], [2474.0, 4829.0], [2466.0, 8653.0], [2674.0, 3506.0], [2626.0, 8202.0], [2634.0, 1276.0], [2642.0, 4629.0], [2650.0, 4986.666666666667], [2682.0, 1238.5], [2666.0, 3509.5], [2586.0, 41.0], [2578.0, 4998.0], [2570.0, 2184.0], [2562.0, 5383.0], [2618.0, 1114.0], [2594.0, 1096.5], [2786.0, 4531.666666666667], [2794.0, 1372.5], [2810.0, 3626.5], [2754.0, 6504.0], [2770.0, 3736.2499999999995], [2706.0, 2676.5], [2698.0, 2738.8], [2746.0, 8338.0], [2738.0, 4132.857142857143], [2722.0, 3763.3333333333335], [2922.0, 3271.3333333333335], [2882.0, 1207.5], [2890.0, 2510.375], [2906.0, 1169.0], [2938.0, 5369.5], [2818.0, 1811.5], [2826.0, 1923.0], [2834.0, 8184.0], [2842.0, 3425.5000000000005], [2874.0, 896.75], [2866.0, 1824.25], [2858.0, 3819.0], [2850.0, 2829.0], [2954.0, 5022.0], [2946.0, 1249.6666666666665], [2962.0, 4376.0], [2970.0, 1096.5], [2994.0, 3002.909090909091], [2986.0, 6861.4], [2978.0, 3942.166666666667], [2147.0, 9647.0], [2123.0, 1100.0], [2131.0, 7198.0], [2163.0, 1096.0], [2051.0, 4063.0], [2067.0, 1896.0], [2107.0, 1145.0], [2099.0, 1586.0], [2083.0, 1096.0], [2299.0, 1102.5], [2291.0, 1090.0], [2243.0, 1565.0], [2251.0, 1243.0], [2259.0, 1145.0], [2267.0, 2264.0], [2283.0, 1101.5], [2275.0, 10032.0], [2179.0, 6160.0], [2187.0, 9140.0], [2195.0, 1541.0], [2203.0, 1876.0], [2227.0, 10061.0], [2219.0, 1095.0], [2211.0, 8264.0], [2427.0, 1147.0], [2371.0, 1213.0], [2387.0, 5430.0], [2395.0, 8976.5], [2403.0, 1096.0], [2307.0, 1818.0], [2315.0, 1271.0], [2331.0, 1096.0], [2363.0, 1170.0], [2347.0, 1244.0], [2339.0, 8936.0], [2547.0, 7249.0], [2515.0, 9533.0], [2507.0, 2153.0], [2523.0, 1102.0], [2555.0, 1098.0], [2539.0, 2643.5], [2531.0, 6432.5], [2459.0, 3430.0], [2451.0, 2157.0], [2435.0, 3302.0], [2491.0, 9647.0], [2483.0, 1092.0], [2675.0, 3850.666666666667], [2667.0, 2057.0], [2683.0, 5658.5], [2627.0, 1109.0], [2635.0, 1090.0], [2643.0, 1907.0], [2651.0, 6117.0], [2659.0, 3727.0], [2579.0, 3919.0], [2571.0, 1176.0], [2563.0, 4143.0], [2619.0, 1098.0], [2611.0, 3178.75], [2603.0, 1118.0], [2595.0, 3538.0], [2811.0, 1097.0], [2755.0, 1113.0], [2763.0, 1699.3333333333333], [2771.0, 2830.0], [2787.0, 1775.0], [2715.0, 2919.8333333333335], [2707.0, 2814.0], [2691.0, 2091.4], [2747.0, 2862.0], [2739.0, 4753.0], [2731.0, 1771.0], [2723.0, 2553.6666666666665], [2931.0, 2929.6363636363635], [2939.0, 3025.0], [2883.0, 1109.0], [2891.0, 1143.6666666666667], [2899.0, 1860.6666666666665], [2923.0, 821.3333333333334], [2915.0, 1123.6], [2819.0, 1187.3333333333333], [2827.0, 1604.6666666666667], [2835.0, 3545.0], [2843.0, 3711.25], [2875.0, 450.0], [2867.0, 1484.0], [2859.0, 1497.0], [2851.0, 5112.0], [2955.0, 1154.5], [2947.0, 2666.272727272727], [2963.0, 2666.0], [2971.0, 3142.166666666667], [2995.0, 4953.5], [2987.0, 1142.3333333333335], [2979.0, 8353.0], [541.0, 8127.0], [543.0, 10012.0], [539.0, 8302.0], [537.0, 8564.0], [535.0, 7343.0], [533.0, 9185.0], [531.0, 7156.0], [529.0, 6285.0], [527.0, 7097.0], [515.0, 6091.0], [513.0, 7518.0], [519.0, 9280.0], [517.0, 9226.0], [525.0, 8315.0], [523.0, 7656.0], [573.0, 10408.0], [575.0, 8244.0], [571.0, 6303.0], [569.0, 7337.0], [567.0, 6998.0], [565.0, 10157.0], [563.0, 7203.5], [561.0, 8051.0], [559.0, 6569.0], [547.0, 10246.0], [545.0, 8657.5], [551.0, 8331.0], [549.0, 10129.0], [557.0, 8065.0], [555.0, 6276.0], [553.0, 7253.0], [605.0, 9444.0], [607.0, 7771.0], [603.0, 7408.0], [601.0, 5651.0], [599.0, 5491.0], [597.0, 8717.0], [595.0, 8076.0], [593.0, 5781.0], [591.0, 5278.0], [577.0, 6393.0], [583.0, 7060.0], [581.0, 10418.0], [589.0, 9065.0], [587.0, 9228.0], [585.0, 6154.0], [633.0, 9459.0], [639.0, 8629.0], [637.0, 10404.0], [635.0, 7374.0], [621.0, 6864.0], [611.0, 9670.0], [609.0, 7448.0], [619.0, 7398.0], [617.0, 5347.0], [615.0, 9539.0], [613.0, 7528.0], [669.0, 5604.0], [665.0, 6569.5], [645.0, 9269.333333333334], [643.0, 7763.2], [663.0, 5550.0], [661.0, 8062.5], [659.0, 7203.0], [657.0, 8730.0], [653.0, 7631.0], [651.0, 5226.0], [649.0, 7342.666666666667], [703.0, 5409.0], [701.0, 5806.0], [699.0, 7615.333333333333], [691.0, 5004.0], [687.0, 6645.0], [685.0, 5254.0], [683.0, 8867.0], [673.0, 8054.0], [733.0, 9371.0], [735.0, 9359.0], [731.0, 6217.0], [711.0, 9859.0], [709.0, 9346.0], [707.0, 8816.0], [705.0, 5257.0], [727.0, 5189.0], [725.0, 11343.0], [723.0, 9638.0], [721.0, 7607.0], [719.0, 7920.0], [717.0, 10274.0], [715.0, 10578.0], [713.0, 7428.0], [761.0, 5265.0], [765.0, 5419.0], [767.0, 9316.0], [763.0, 5269.0], [755.0, 8117.0], [753.0, 6402.5], [751.0, 5411.0], [739.0, 7264.5], [737.0, 6251.0], [743.0, 7487.0], [741.0, 4277.0], [749.0, 10812.0], [747.0, 10882.0], [795.0, 8274.0], [797.0, 8007.0], [793.0, 6383.0], [775.0, 6000.0], [773.0, 5926.5], [771.0, 5062.0], [769.0, 8295.0], [791.0, 9750.0], [787.0, 7475.0], [785.0, 6206.0], [783.0, 7247.0], [781.0, 7343.0], [779.0, 8311.0], [829.0, 4801.0], [831.0, 6186.0], [827.0, 5940.0], [825.0, 9191.0], [823.0, 7227.0], [821.0, 6166.0], [819.0, 6935.0], [815.0, 7218.0], [805.0, 6059.0], [803.0, 8338.0], [801.0, 6347.0], [809.0, 6007.0], [861.0, 7705.0], [863.0, 7590.0], [859.0, 4863.0], [857.0, 10042.0], [855.0, 7868.0], [853.0, 5778.0], [851.0, 5992.0], [849.0, 5019.0], [847.0, 4013.0], [835.0, 6233.0], [833.0, 5990.0], [839.0, 5874.0], [837.0, 4914.0], [845.0, 10008.0], [843.0, 10276.0], [841.0, 10276.0], [871.0, 4548.0], [893.0, 10516.0], [895.0, 6489.0], [891.0, 6342.0], [867.0, 6604.0], [865.0, 10711.0], [885.0, 7409.0], [883.0, 8856.666666666666], [879.0, 6651.0], [877.0, 6953.5], [875.0, 6519.0], [873.0, 10051.0], [917.0, 7317.0], [915.0, 6585.0], [911.0, 5494.0], [909.0, 8700.0], [907.0, 6359.0], [899.0, 9900.0], [897.0, 6939.5], [955.0, 8459.0], [959.0, 6773.5], [953.0, 6798.5], [933.0, 10192.5], [931.0, 6865.333333333333], [929.0, 8661.0], [951.0, 5277.0], [949.0, 6489.0], [947.0, 8681.0], [945.0, 5343.0], [943.0, 7354.0], [941.0, 9356.0], [939.0, 6582.5], [937.0, 9726.0], [989.0, 5144.0], [991.0, 7148.0], [987.0, 5038.0], [985.0, 9265.0], [983.0, 10881.0], [981.0, 8084.333333333333], [977.0, 5556.0], [975.0, 5236.0], [963.0, 5489.0], [961.0, 5657.0], [967.0, 5265.0], [965.0, 8682.0], [973.0, 8490.0], [971.0, 8596.0], [969.0, 4536.0], [1021.0, 10455.0], [1023.0, 8741.0], [1017.0, 3997.0], [995.0, 7156.5], [993.0, 10371.0], [1015.0, 9639.0], [1013.0, 9384.0], [1011.0, 5043.0], [1009.0, 8392.0], [1007.0, 4147.0], [1005.0, 3261.0], [1003.0, 9230.0], [1078.0, 10312.0], [1082.0, 8958.5], [1086.0, 7744.5], [1058.0, 5893.0], [1062.0, 5218.0], [1074.0, 5539.5], [1038.0, 6463.0], [1054.0, 7650.0], [1034.0, 6739.0], [1050.0, 5068.0], [1046.0, 5377.0], [1042.0, 6908.5], [1070.0, 4920.0], [1138.0, 4834.0], [1150.0, 4709.0], [1122.0, 7971.0], [1126.0, 7014.0], [1142.0, 6038.0], [1102.0, 5304.0], [1098.0, 9394.0], [1094.0, 6550.0], [1090.0, 9187.0], [1118.0, 5137.0], [1114.0, 10472.0], [1110.0, 7308.0], [1106.0, 3768.0], [1134.0, 6000.0], [1202.0, 4235.0], [1214.0, 3409.0], [1190.0, 7336.0], [1206.0, 10699.0], [1166.0, 2645.0], [1162.0, 4865.0], [1158.0, 10225.0], [1178.0, 5343.0], [1174.0, 6577.0], [1170.0, 6430.0], [1194.0, 5612.0], [1274.0, 5205.0], [1278.0, 10761.0], [1250.0, 3780.5], [1254.0, 7205.0], [1270.0, 6477.0], [1266.0, 5375.5], [1246.0, 8556.5], [1222.0, 8812.5], [1218.0, 9547.0], [1230.0, 8499.0], [1242.0, 8345.0], [1238.0, 7486.0], [1234.0, 7408.0], [1262.0, 10712.0], [1258.0, 6471.0], [1338.0, 3945.0], [1342.0, 5382.0], [1314.0, 11337.0], [1318.0, 6419.0], [1322.0, 4186.0], [1334.0, 4436.0], [1330.0, 10475.0], [1310.0, 9082.0], [1286.0, 6511.5], [1290.0, 3738.5], [1306.0, 5393.0], [1302.0, 5232.0], [1298.0, 5073.0], [1326.0, 3101.0], [1398.0, 6081.0], [1406.0, 3224.0], [1378.0, 6073.0], [1402.0, 3978.0], [1374.0, 5896.0], [1346.0, 7441.0], [1354.0, 3120.0], [1350.0, 6294.0], [1358.0, 8314.0], [1370.0, 4730.0], [1366.0, 3267.0], [1362.0, 6035.0], [1390.0, 5665.0], [1386.0, 5142.0], [1382.0, 8081.0], [1466.0, 6012.0], [1470.0, 2759.0], [1442.0, 8720.0], [1446.0, 9277.0], [1462.0, 2793.0], [1458.0, 6479.0], [1438.0, 4220.0], [1410.0, 6114.0], [1418.0, 10332.0], [1422.0, 9552.0], [1430.0, 2865.0], [1426.0, 7122.0], [1450.0, 9234.0], [1530.0, 5743.0], [1534.0, 1096.0], [1506.0, 5955.0], [1510.0, 3875.0], [1514.0, 4821.0], [1526.0, 2624.0], [1522.0, 5912.0], [1502.0, 9135.0], [1474.0, 8142.0], [1482.0, 11229.0], [1486.0, 5901.0], [1498.0, 4902.0], [1494.0, 6995.0], [1490.0, 6465.0], [1518.0, 10115.0], [1586.0, 5412.0], [1594.0, 6518.0], [1570.0, 1098.0], [1574.0, 7817.0], [1590.0, 2303.0], [1550.0, 1097.0], [1546.0, 5524.0], [1542.0, 1093.0], [1538.0, 2424.0], [1566.0, 2250.5], [1562.0, 1094.0], [1558.0, 6553.0], [1554.0, 5470.0], [1582.0, 8694.0], [1578.0, 1094.0], [1658.0, 3689.6666666666665], [1662.0, 7348.0], [1638.0, 4412.5], [1642.0, 1090.0], [1654.0, 7739.0], [1610.0, 4897.0], [1606.0, 1098.0], [1602.0, 10370.0], [1626.0, 8096.5], [1618.0, 5365.0], [1646.0, 2315.0], [1718.0, 3555.0], [1726.0, 1104.0], [1698.0, 5862.5], [1722.0, 1099.0], [1714.0, 4459.0], [1694.0, 7029.0], [1666.0, 5385.0], [1674.0, 2817.0], [1682.0, 5448.0], [1706.0, 1105.0], [1786.0, 1098.0], [1790.0, 1962.0], [1762.0, 4355.0], [1770.0, 2287.0], [1782.0, 9468.0], [1778.0, 2044.0], [1730.0, 5330.0], [1738.0, 1089.0], [1754.0, 1756.0], [1750.0, 1195.5], [1746.0, 4311.0], [1774.0, 1277.0], [1798.0, 4482.0], [1854.0, 1099.0], [1850.0, 1092.0], [1802.0, 4769.0], [1794.0, 2297.0], [1822.0, 5845.5], [1818.0, 5048.0], [1814.0, 3136.0], [1810.0, 6038.0], [1834.0, 4121.0], [1826.0, 1098.0], [1870.0, 2349.0], [1906.0, 2154.0], [1862.0, 1098.0], [1858.0, 1097.0], [1878.0, 4482.0], [1874.0, 2894.0], [1902.0, 1314.0], [1890.0, 4110.5], [1970.0, 1289.0], [1978.0, 1984.5], [1954.0, 7016.0], [1974.0, 4445.666666666667], [1930.0, 6413.5], [1926.0, 1098.0], [1922.0, 1095.0], [1942.0, 1094.0], [1966.0, 1106.0], [1958.0, 1098.0], [2038.0, 1852.0], [2046.0, 5683.0], [2022.0, 3124.0], [2030.0, 2031.0], [2042.0, 7678.0], [2034.0, 6327.0], [2014.0, 1097.0], [1986.0, 1094.0], [1990.0, 8737.0], [1998.0, 1306.0], [2010.0, 5370.0], [2002.0, 2754.0], [2156.0, 2488.6666666666665], [2124.0, 1640.0], [2172.0, 4295.333333333333], [2116.0, 1095.0], [2140.0, 11178.0], [2164.0, 2960.0], [2148.0, 2150.0], [2068.0, 2005.0], [2060.0, 1757.0], [2100.0, 1753.0], [2092.0, 7411.0], [2284.0, 1332.0], [2292.0, 5397.0], [2244.0, 5792.0], [2252.0, 1159.5], [2260.0, 1099.0], [2276.0, 1097.0], [2204.0, 1777.0], [2188.0, 1580.0], [2180.0, 1647.0], [2236.0, 10084.0], [2228.0, 10349.0], [2220.0, 1647.0], [2212.0, 1952.0], [2404.0, 1099.0], [2412.0, 4798.0], [2420.0, 3209.0], [2380.0, 2536.2], [2388.0, 4844.0], [2396.0, 1214.0], [2332.0, 1213.0], [2324.0, 2809.0], [2308.0, 3191.0], [2364.0, 1164.0], [2356.0, 2405.5], [2348.0, 5626.0], [2340.0, 8927.0], [2556.0, 5371.0], [2508.0, 994.0], [2524.0, 6522.5], [2500.0, 2416.0], [2548.0, 9767.0], [2460.0, 5629.0], [2452.0, 1457.0], [2436.0, 4768.5], [2492.0, 1096.0], [2484.0, 4398.0], [2468.0, 3259.6666666666665], [2676.0, 7198.0], [2628.0, 10541.0], [2636.0, 8523.0], [2644.0, 2191.5], [2684.0, 2491.5], [2660.0, 3747.25], [2588.0, 1425.25], [2580.0, 3379.0], [2572.0, 1094.0], [2564.0, 979.0], [2612.0, 3135.5], [2604.0, 1113.0], [2804.0, 2444.1428571428573], [2756.0, 8310.0], [2772.0, 6962.0], [2780.0, 3632.25], [2788.0, 4524.0], [2716.0, 1288.0], [2708.0, 3352.6], [2700.0, 1366.3333333333333], [2924.0, 7724.0], [2916.0, 4923.818181818181], [2884.0, 1097.0], [2892.0, 3128.0], [2900.0, 1249.0], [2908.0, 1238.0], [2940.0, 1205.5], [2820.0, 1653.0], [2828.0, 2110.6666666666665], [2844.0, 1693.0], [2876.0, 1162.0], [2868.0, 3857.0], [2860.0, 5795.0], [2852.0, 795.5], [2956.0, 2626.846153846154], [2948.0, 5727.5], [2964.0, 2070.0], [2972.0, 1095.0], [2996.0, 785.2941176470589], [2988.0, 1104.5], [2980.0, 3526.0], [2165.0, 1101.0], [2157.0, 1095.0], [2117.0, 1096.0], [2125.0, 2324.0], [2133.0, 1458.0], [2141.0, 2877.0], [2173.0, 4878.0], [2053.0, 4514.0], [2069.0, 1826.0], [2077.0, 5218.0], [2109.0, 1091.0], [2093.0, 2219.5], [2085.0, 8794.0], [2293.0, 5012.0], [2245.0, 8549.0], [2253.0, 1099.0], [2261.0, 1227.0], [2269.0, 743.3333333333334], [2277.0, 745.6666666666667], [2181.0, 1597.0], [2189.0, 3716.0], [2197.0, 1666.5], [2237.0, 1497.0], [2229.0, 5859.0], [2221.0, 5709.0], [2405.0, 1095.0], [2381.0, 2189.0], [2429.0, 8468.0], [2373.0, 1099.0], [2389.0, 4220.0], [2309.0, 1099.0], [2317.0, 1255.0], [2333.0, 1104.5], [2365.0, 1104.0], [2357.0, 1201.5], [2349.0, 7728.0], [2341.0, 1104.0], [2557.0, 1756.6666666666665], [2517.0, 1096.5], [2501.0, 6269.5], [2525.0, 5994.5], [2541.0, 1145.0], [2461.0, 1618.0], [2445.0, 4963.428571428572], [2485.0, 1096.0], [2477.0, 3156.4], [2469.0, 3084.0], [2669.0, 5722.0], [2637.0, 2044.5], [2629.0, 1099.0], [2645.0, 3915.4], [2653.0, 3200.0], [2685.0, 8518.0], [2661.0, 8490.0], [2573.0, 1208.0], [2621.0, 1126.0], [2597.0, 3707.3333333333335], [2797.0, 2491.0], [2805.0, 3780.0], [2765.0, 8158.0], [2813.0, 1526.3333333333333], [2789.0, 3420.5], [2717.0, 2495.0], [2701.0, 3477.75], [2741.0, 6932.333333333333], [2725.0, 3005.25], [2941.0, 4843.88888888889], [2893.0, 740.3333333333333], [2885.0, 916.0], [2901.0, 1096.3333333333333], [2925.0, 4899.25], [2917.0, 4301.1875], [2821.0, 1602.0], [2837.0, 1403.3333333333333], [2845.0, 5509.5], [2877.0, 1198.0], [2869.0, 5083.0], [2861.0, 3017.2], [2853.0, 4787.0], [2949.0, 1166.5], [2997.0, 4153.2], [2957.0, 3326.0], [2965.0, 2883.0], [2973.0, 1917.0], [2989.0, 3090.0], [2981.0, 4326.5], [1075.0, 7089.0], [1087.0, 4960.0], [1063.0, 3299.0], [1083.0, 8206.0], [1039.0, 10789.0], [1035.0, 5303.0], [1055.0, 9162.0], [1031.0, 7784.5], [1027.0, 7905.5], [1051.0, 5227.0], [1047.0, 11315.0], [1071.0, 7266.0], [1067.0, 7076.0], [1139.0, 10035.0], [1151.0, 10046.0], [1123.0, 9057.0], [1127.0, 4042.0], [1131.0, 5994.0], [1143.0, 3764.0], [1103.0, 10158.0], [1099.0, 7263.0], [1095.0, 9340.0], [1091.0, 10635.0], [1119.0, 7412.0], [1115.0, 3848.0], [1111.0, 6996.0], [1107.0, 7831.0], [1135.0, 10462.0], [1203.0, 7574.0], [1211.0, 5026.0], [1215.0, 8425.0], [1187.0, 3901.0], [1191.0, 9574.0], [1183.0, 6623.5], [1155.0, 7423.5], [1159.0, 8001.0], [1163.0, 8004.0], [1167.0, 6517.0], [1179.0, 10974.0], [1175.0, 3537.0], [1171.0, 6503.0], [1199.0, 4454.5], [1195.0, 8840.0], [1275.0, 8327.0], [1279.0, 6539.0], [1251.0, 9267.0], [1255.0, 4227.0], [1271.0, 5534.0], [1247.0, 10587.0], [1223.0, 5227.0], [1227.0, 5730.0], [1243.0, 8634.0], [1239.0, 2283.0], [1235.0, 4376.0], [1263.0, 9345.0], [1259.0, 5369.0], [1331.0, 4903.0], [1339.0, 3202.0], [1323.0, 6962.5], [1315.0, 8529.0], [1335.0, 8450.0], [1291.0, 10688.0], [1287.0, 3084.0], [1283.0, 5827.0], [1311.0, 9515.0], [1307.0, 4008.0], [1303.0, 2611.0], [1299.0, 6305.0], [1327.0, 9593.0], [1395.0, 3614.5], [1403.0, 2240.0], [1379.0, 8086.0], [1383.0, 5075.0], [1399.0, 2854.0], [1359.0, 8083.0], [1351.0, 9346.0], [1347.0, 2042.0], [1375.0, 5076.0], [1367.0, 4970.0], [1363.0, 9527.0], [1391.0, 5402.5], [1463.0, 5963.0], [1471.0, 4876.0], [1447.0, 4291.0], [1467.0, 4034.0], [1459.0, 7077.0], [1439.0, 11096.0], [1411.0, 3169.0], [1415.0, 8029.0], [1435.0, 6677.5], [1431.0, 10637.0], [1427.0, 6355.0], [1455.0, 9404.0], [1531.0, 5523.0], [1535.0, 1096.0], [1511.0, 10310.0], [1515.0, 7999.0], [1527.0, 8855.0], [1487.0, 4941.0], [1483.0, 6978.0], [1479.0, 4967.5], [1475.0, 3123.0], [1503.0, 10100.0], [1499.0, 6932.0], [1495.0, 3855.0], [1491.0, 2803.0], [1519.0, 4872.0], [1595.0, 1099.0], [1599.0, 1093.5], [1571.0, 7953.0], [1575.0, 3524.0], [1587.0, 5227.0], [1563.0, 2121.0], [1539.0, 1091.0], [1543.0, 2425.0], [1547.0, 6154.0], [1559.0, 1094.0], [1555.0, 2450.0], [1583.0, 8982.0], [1579.0, 8633.0], [1663.0, 2154.0], [1639.0, 8269.0], [1659.0, 8497.0], [1615.0, 6495.5], [1611.0, 2362.0], [1607.0, 7468.0], [1603.0, 1097.0], [1643.0, 8476.0], [1635.0, 1091.5], [1675.0, 1102.0], [1703.0, 5790.0], [1727.0, 10417.0], [1715.0, 8328.0], [1695.0, 8418.0], [1679.0, 5459.0], [1691.0, 9432.5], [1687.0, 2156.0], [1683.0, 4368.0], [1711.0, 1853.3333333333333], [1707.0, 6269.0], [1699.0, 5220.0], [1791.0, 2286.0], [1763.0, 1103.0], [1787.0, 1092.0], [1731.0, 3356.0], [1735.0, 6185.5], [1739.0, 4021.0], [1743.0, 3090.0], [1755.0, 6281.0], [1775.0, 1213.0], [1771.0, 1094.0], [1795.0, 8386.0], [1831.0, 5278.5], [1823.0, 10549.0], [1799.0, 8466.0], [1803.0, 1093.0], [1807.0, 1092.0], [1819.0, 1886.0], [1815.0, 6222.0], [1839.0, 1093.0], [1919.0, 4630.5], [1891.0, 1089.0], [1915.0, 6236.0], [1883.0, 1095.0], [1859.0, 6156.0], [1867.0, 1094.0], [1871.0, 2075.0], [1875.0, 7630.666666666667], [1903.0, 6986.0], [1899.0, 1098.0], [1895.0, 5457.0], [1975.0, 9209.0], [1979.0, 1854.0], [1983.0, 4123.333333333333], [1955.0, 1139.0], [1971.0, 7670.0], [1951.0, 4816.4], [1923.0, 2056.0], [1935.0, 3064.5], [1927.0, 8013.0], [1947.0, 1843.0], [1943.0, 1204.0], [1939.0, 7469.0], [1967.0, 1844.0], [1959.0, 1096.0], [2043.0, 9193.0], [2039.0, 1092.0], [2019.0, 1102.0], [2047.0, 9119.0], [2027.0, 8363.0], [2031.0, 8429.0], [2035.0, 1106.0], [2015.0, 1088.0], [1991.0, 2967.3333333333335], [1995.0, 3062.0], [1999.0, 4946.0], [2011.0, 1098.0], [2007.0, 5281.0], [2150.0, 1094.0], [2166.0, 2790.0], [2118.0, 1706.0], [2126.0, 9205.0], [2142.0, 9402.0], [2062.0, 5572.333333333333], [2054.0, 1943.0], [2110.0, 3506.0], [2094.0, 2882.0], [2286.0, 6889.0], [2294.0, 2231.0], [2254.0, 1098.0], [2246.0, 7497.0], [2262.0, 2255.0], [2270.0, 5416.0], [2278.0, 1176.0], [2206.0, 5080.0], [2198.0, 10135.0], [2190.0, 1095.0], [2238.0, 2520.0], [2230.0, 6165.0], [2222.0, 1101.0], [2214.0, 1362.0], [2334.0, 4807.0], [2430.0, 2119.0], [2398.0, 1094.0], [2414.0, 1123.0], [2326.0, 4831.0], [2318.0, 1681.5], [2310.0, 1422.0], [2366.0, 1098.0], [2358.0, 5295.0], [2350.0, 1216.0], [2342.0, 1117.5], [2558.0, 3771.0], [2518.0, 1167.0], [2526.0, 1992.0], [2510.0, 5811.666666666667], [2550.0, 1241.0], [2534.0, 2417.0], [2454.0, 3742.0], [2446.0, 3539.714285714286], [2494.0, 3733.0], [2486.0, 1092.0], [2470.0, 1103.0], [2678.0, 1505.75], [2670.0, 1140.0], [2630.0, 1100.0], [2638.0, 1828.0], [2646.0, 1095.0], [2654.0, 2988.2], [2662.0, 1462.6666666666667], [2590.0, 4771.0], [2582.0, 4235.5], [2574.0, 1159.0], [2566.0, 1126.4], [2622.0, 866.25], [2614.0, 9486.0], [2606.0, 3004.0], [2598.0, 1094.0], [2710.0, 1321.0], [2758.0, 1430.25], [2766.0, 4755.333333333333], [2718.0, 4851.333333333333], [2702.0, 1902.0], [2694.0, 3611.4285714285716], [2750.0, 3597.5], [2742.0, 1102.0], [2734.0, 1706.8], [2926.0, 2251.3333333333335], [2934.0, 5416.666666666666], [2886.0, 3486.3333333333335], [2894.0, 1797.952380952381], [2902.0, 2594.0952380952376], [2910.0, 3274.4375], [2822.0, 1930.0], [2830.0, 6275.25], [2838.0, 2110.6666666666665], [2846.0, 3511.25], [2878.0, 1864.0], [2870.0, 1099.0], [2862.0, 1607.0], [2958.0, 2065.0], [2950.0, 1095.0], [2966.0, 4764.5], [2974.0, 569.0], [2998.0, 2525.697674418605], [2990.0, 3160.5], [2982.0, 3196.75], [2175.0, 1656.0], [2159.0, 1091.5], [2119.0, 7983.0], [2127.0, 1092.0], [2135.0, 1383.0], [2143.0, 2856.0], [2167.0, 1897.0], [2151.0, 1100.0], [2111.0, 10084.0], [2063.0, 10400.0], [2079.0, 3945.333333333333], [2103.0, 3082.0], [2087.0, 7324.5], [2279.0, 1092.0], [2287.0, 8611.0], [2255.0, 1095.0], [2247.0, 1097.0], [2271.0, 1179.0], [2239.0, 1489.0], [2183.0, 5816.0], [2191.0, 1095.0], [2199.0, 11098.0], [2207.0, 9140.0], [2231.0, 1765.0], [2223.0, 1100.0], [2215.0, 2753.0], [2423.0, 5617.0], [2407.0, 4881.333333333333], [2375.0, 6890.333333333333], [2383.0, 1135.5], [2391.0, 5576.5], [2399.0, 8440.5], [2415.0, 3795.5], [2367.0, 1170.0], [2311.0, 1189.0], [2327.0, 5259.0], [2335.0, 1100.0], [2351.0, 2365.0], [2343.0, 1096.0], [2535.0, 1108.0], [2559.0, 2168.0], [2551.0, 1096.0], [2503.0, 1149.5], [2527.0, 1198.0], [2543.0, 1250.5], [2463.0, 1127.0], [2495.0, 1094.0], [2479.0, 2767.0], [2471.0, 1257.0], [2679.0, 1179.0], [2687.0, 7571.0], [2631.0, 2805.3333333333335], [2639.0, 1488.5], [2647.0, 1093.0], [2671.0, 569.5], [2663.0, 1122.0], [2591.0, 1297.0], [2583.0, 9379.0], [2575.0, 39.0], [2623.0, 4047.333333333333], [2615.0, 2185.666666666667], [2807.0, 2456.2], [2791.0, 3716.0], [2815.0, 4380.5], [2759.0, 6008.5], [2767.0, 2183.0], [2775.0, 6197.6], [2783.0, 3178.666666666667], [2799.0, 4350.25], [2719.0, 1099.0], [2711.0, 2410.6666666666665], [2695.0, 5721.0], [2751.0, 8532.0], [2919.0, 2458.6666666666665], [2935.0, 3875.75], [2943.0, 4150.055555555555], [2895.0, 2689.4], [2903.0, 2235.0], [2911.0, 2751.142857142858], [2879.0, 1728.6], [2823.0, 6041.5], [2847.0, 6860.166666666667], [2871.0, 4503.0], [2863.0, 5710.0], [2855.0, 5126.0], [2951.0, 2735.444444444445], [2959.0, 2749.875], [2975.0, 5215.0], [2999.0, 2888.2333333333336], [2991.0, 2181.375], [2983.0, 2059.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2984.5354046049124, 2345.8912297630604]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 96445.85, "minX": 1.68420792E12, "maxY": 650644.9333333333, "series": [{"data": [[1.68420816E12, 623687.2166666667], [1.68420822E12, 505406.3333333333], [1.68420804E12, 650644.9333333333], [1.6842081E12, 563089.3833333333], [1.68420792E12, 150842.83333333334], [1.68420798E12, 485219.56666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68420816E12, 575263.25], [1.68420822E12, 458364.4], [1.68420804E12, 605381.65], [1.6842081E12, 513759.45], [1.68420792E12, 96445.85], [1.68420798E12, 444472.65]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420822E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1737.7746874618256, "minX": 1.68420792E12, "maxY": 2856.629500236862, "series": [{"data": [[1.68420816E12, 2243.7879808070575], [1.68420822E12, 2856.629500236862], [1.68420804E12, 2423.2056268966653], [1.6842081E12, 2370.202430861371], [1.68420792E12, 2688.8172455926074], [1.68420798E12, 1737.7746874618256]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420822E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1737.32986521155, "minX": 1.68420792E12, "maxY": 2856.4311147954727, "series": [{"data": [[1.68420816E12, 2243.5952174939207], [1.68420822E12, 2856.4311147954727], [1.68420804E12, 2423.011481021962], [1.6842081E12, 2370.0030649991104], [1.68420792E12, 1905.925728748465], [1.68420798E12, 1737.32986521155]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420822E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 4.923792041686344, "minX": 1.68420792E12, "maxY": 1476.4492057950804, "series": [{"data": [[1.68420816E12, 13.98914496971612], [1.68420822E12, 4.923792041686344], [1.68420804E12, 7.07951504641739], [1.6842081E12, 16.18252598203275], [1.68420792E12, 1476.4492057950804], [1.68420798E12, 36.1805798753915]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420822E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 49.0, "minX": 1.68420792E12, "maxY": 19635.0, "series": [{"data": [[1.68420816E12, 12640.0], [1.68420822E12, 14267.0], [1.68420804E12, 19635.0], [1.6842081E12, 18581.0], [1.68420792E12, 15057.0], [1.68420798E12, 16601.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68420816E12, 7363.0], [1.68420822E12, 9248.0], [1.68420804E12, 7708.0], [1.6842081E12, 5139.0], [1.68420792E12, 5786.0], [1.68420798E12, 2992.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68420816E12, 10583.990000000002], [1.68420822E12, 10881.0], [1.68420804E12, 10970.980000000003], [1.6842081E12, 10433.900000000016], [1.68420792E12, 11481.0], [1.68420798E12, 6328.680000000051]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68420816E12, 9132.800000000003], [1.68420822E12, 10159.95], [1.68420804E12, 9427.0], [1.6842081E12, 7212.750000000004], [1.68420792E12, 9382.350000000004], [1.68420798E12, 3569.9500000000007]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68420816E12, 49.0], [1.68420822E12, 50.0], [1.68420804E12, 50.0], [1.6842081E12, 51.0], [1.68420792E12, 52.0], [1.68420798E12, 50.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68420816E12, 1959.0], [1.68420822E12, 1854.0], [1.68420804E12, 1927.0], [1.6842081E12, 1534.0], [1.68420792E12, 1299.5], [1.68420798E12, 1561.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420822E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 39.0, "minX": 2.0, "maxY": 11709.0, "series": [{"data": [[2.0, 10268.5], [37.0, 5717.0], [42.0, 10542.0], [50.0, 3443.5], [59.0, 3911.0], [76.0, 7163.5], [115.0, 9406.5], [118.0, 4274.0], [143.0, 9066.0], [156.0, 2822.5], [178.0, 2811.5], [190.0, 3147.5], [197.0, 8235.0], [203.0, 3658.0], [223.0, 3006.0], [220.0, 4276.0], [236.0, 2411.0], [239.0, 7440.0], [265.0, 7152.0], [275.0, 1339.0], [308.0, 3870.0], [312.0, 6438.0], [322.0, 4820.0], [340.0, 1125.5], [371.0, 3412.0], [430.0, 1710.0], [436.0, 3806.0], [444.0, 1956.0], [460.0, 1102.0], [478.0, 1105.0], [470.0, 5002.0], [481.0, 2078.0], [483.0, 1967.0], [484.0, 4301.0], [506.0, 2903.0], [500.0, 4272.5], [543.0, 2784.0], [541.0, 2144.0], [554.0, 2630.5], [547.0, 1949.0], [607.0, 2136.5], [627.0, 2846.0], [638.0, 2059.0], [622.0, 3778.0], [612.0, 1407.0], [724.0, 2772.0], [708.0, 1564.5], [717.0, 1545.0], [718.0, 1814.0], [767.0, 1577.5], [754.0, 3222.5], [782.0, 1390.0], [790.0, 1358.0], [769.0, 2835.0], [775.0, 2161.0], [816.0, 1172.0], [821.0, 3308.0], [823.0, 3220.0], [831.0, 3282.0], [817.0, 2491.0], [805.0, 1796.0], [842.0, 2074.0], [845.0, 2383.0], [834.0, 1098.0], [833.0, 2136.0], [893.0, 3326.0], [880.0, 2600.0], [865.0, 1432.5], [889.0, 2163.5], [894.0, 1824.5], [882.0, 2295.0], [870.0, 1163.5], [875.0, 1103.0], [874.0, 1123.5], [905.0, 1975.0], [900.0, 1134.0], [916.0, 1325.0], [926.0, 1287.0], [911.0, 1127.0], [919.0, 1131.0], [909.0, 1811.0], [923.0, 1712.0], [959.0, 1592.0], [930.0, 2878.0], [943.0, 1668.0], [928.0, 1823.0], [940.0, 2101.0], [947.0, 1270.0], [951.0, 1102.0], [950.0, 2593.5], [948.0, 2743.5], [953.0, 2169.5], [956.0, 2002.0], [955.0, 1955.0], [944.0, 1123.0], [946.0, 1952.5], [982.0, 1607.5], [979.0, 1339.0], [969.0, 1893.5], [989.0, 1128.0], [983.0, 2242.5], [966.0, 2044.0], [1023.0, 2924.5], [1006.0, 3155.0], [997.0, 2822.0], [994.0, 1363.0], [1004.0, 1130.0], [1087.0, 1471.0], [1080.0, 1345.0], [1085.0, 1886.5], [1086.0, 1830.0], [1064.0, 1120.0], [1065.0, 1779.0], [1071.0, 1523.0], [1041.0, 2167.0], [1040.0, 1890.0], [1063.0, 1283.0], [1031.0, 2158.0], [1059.0, 1734.0], [1057.0, 1766.0], [1058.0, 1679.0], [1061.0, 1642.0], [1042.0, 2173.0], [1049.0, 2188.5], [1052.0, 1202.0], [1028.0, 1953.0], [1053.0, 1694.0], [1026.0, 1718.0], [1048.0, 1323.0], [1072.0, 1747.0], [1034.0, 1806.0], [1033.0, 1640.0], [1143.0, 2190.5], [1140.0, 1394.5], [1141.0, 1829.0], [1100.0, 1501.0], [1096.0, 1137.0], [1115.0, 1450.0], [1091.0, 1771.0], [1093.0, 1741.0], [1090.0, 1940.0], [1117.0, 1872.5], [1114.0, 1946.0], [1112.0, 1218.0], [1110.0, 1653.0], [1109.0, 1265.0], [1104.0, 1738.0], [1105.0, 1795.0], [1108.0, 1777.5], [1098.0, 2010.5], [1099.0, 1779.0], [1097.0, 1776.0], [1130.0, 1794.0], [1131.0, 2153.5], [1132.0, 1862.0], [1135.0, 1799.0], [1133.0, 2124.0], [1134.0, 1708.5], [1129.0, 1717.0], [1148.0, 1938.0], [1146.0, 1832.5], [1144.0, 3038.0], [1147.0, 1800.0], [1121.0, 1877.0], [1150.0, 2163.0], [1136.0, 2089.0], [1138.0, 1734.5], [1137.0, 1753.0], [1139.0, 1915.0], [1127.0, 1886.5], [1126.0, 2024.0], [1125.0, 1193.0], [1124.0, 1860.0], [1123.0, 1854.5], [1164.0, 1111.0], [1159.0, 1752.0], [1163.0, 1303.5], [1162.0, 1830.0], [1161.0, 1830.0], [1153.0, 2601.0], [1157.0, 1828.5], [1156.0, 1839.0], [1181.0, 2059.0], [1183.0, 1984.0], [1187.0, 1384.0], [1212.0, 2864.0], [1203.0, 1573.0], [1189.0, 2194.0], [1188.0, 1619.0], [1192.0, 2249.0], [1194.0, 1828.5], [1195.0, 2016.0], [1197.0, 2078.0], [1199.0, 1564.0], [1191.0, 2482.0], [1202.0, 2862.0], [1179.0, 2896.0], [1200.0, 1955.0], [1165.0, 1885.0], [1176.0, 2482.0], [1178.0, 2001.0], [1173.0, 2425.5], [1169.0, 2196.0], [1168.0, 1709.0], [1170.0, 2102.0], [1171.0, 3161.0], [1172.0, 2168.0], [1174.0, 2088.0], [1175.0, 1898.0], [1231.0, 1955.5], [1255.0, 2118.0], [1256.0, 1105.0], [1235.0, 1894.0], [1276.0, 3015.5], [1232.0, 1150.0], [1236.0, 2054.0], [1218.0, 2216.0], [1223.0, 2244.0], [1248.0, 2080.5], [1334.0, 1139.0], [1293.0, 1455.5], [1284.0, 1135.5], [1287.0, 2074.0], [1301.0, 1141.0], [1291.0, 1904.0], [1322.0, 1781.0], [1350.0, 2830.0], [1371.0, 1425.0], [1363.0, 1755.0], [1382.0, 1836.0], [1404.0, 2149.5], [1355.0, 1171.0], [1375.0, 1127.0], [1400.0, 1723.0], [1402.0, 2182.0], [1497.0, 1130.0], [1541.0, 2167.0], [1537.0, 1141.0], [1726.0, 1642.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[37.0, 39.0], [42.0, 10228.0], [76.0, 10160.5], [115.0, 10094.0], [118.0, 68.0], [190.0, 10331.0], [197.0, 10474.0], [220.0, 43.0], [239.0, 10402.0], [265.0, 10137.0], [275.0, 143.5], [308.0, 50.5], [312.0, 10191.5], [322.0, 39.0], [371.0, 10250.0], [430.0, 113.0], [436.0, 57.0], [444.0, 100.5], [460.0, 40.0], [478.0, 53.0], [470.0, 67.0], [481.0, 53.0], [483.0, 64.0], [484.0, 10145.0], [506.0, 53.0], [500.0, 10367.0], [543.0, 65.0], [541.0, 92.0], [607.0, 45.0], [622.0, 64.0], [612.0, 65.0], [724.0, 55.0], [708.0, 10205.5], [717.0, 417.0], [767.0, 1773.0], [754.0, 68.0], [782.0, 83.0], [769.0, 62.0], [816.0, 42.0], [821.0, 48.0], [823.0, 61.0], [831.0, 40.0], [817.0, 39.0], [805.0, 41.5], [893.0, 50.5], [865.0, 10283.0], [889.0, 10201.0], [882.0, 41.0], [875.0, 62.5], [900.0, 57.0], [916.0, 40.0], [926.0, 10381.0], [911.0, 41.0], [919.0, 10266.0], [909.0, 41.0], [923.0, 40.0], [959.0, 855.5], [930.0, 40.0], [928.0, 52.0], [951.0, 39.0], [950.0, 59.5], [948.0, 49.0], [953.0, 39.0], [944.0, 10155.0], [946.0, 43.0], [956.0, 410.5], [955.0, 39.0], [982.0, 42.5], [979.0, 295.0], [969.0, 48.0], [989.0, 65.0], [983.0, 39.0], [966.0, 39.0], [1023.0, 11709.0], [1006.0, 46.0], [997.0, 42.0], [994.0, 41.0], [1004.0, 344.5], [1087.0, 39.0], [1080.0, 40.0], [1085.0, 39.0], [1086.0, 40.0], [1064.0, 49.0], [1065.0, 40.0], [1071.0, 70.0], [1041.0, 1573.0], [1040.0, 40.0], [1063.0, 43.0], [1031.0, 40.0], [1059.0, 41.0], [1057.0, 39.0], [1058.0, 39.0], [1061.0, 44.0], [1042.0, 40.0], [1049.0, 39.0], [1052.0, 68.0], [1028.0, 39.0], [1053.0, 39.0], [1026.0, 40.0], [1048.0, 45.0], [1072.0, 41.0], [1034.0, 52.0], [1033.0, 40.0], [1143.0, 44.0], [1140.0, 40.0], [1141.0, 41.0], [1100.0, 40.0], [1096.0, 43.0], [1115.0, 40.0], [1091.0, 40.0], [1093.0, 40.0], [1090.0, 39.0], [1117.0, 42.0], [1114.0, 42.0], [1112.0, 46.0], [1110.0, 41.0], [1109.0, 39.0], [1104.0, 52.0], [1105.0, 39.0], [1108.0, 39.0], [1098.0, 40.0], [1099.0, 40.0], [1097.0, 40.0], [1130.0, 46.0], [1131.0, 40.0], [1132.0, 40.0], [1135.0, 40.0], [1133.0, 39.0], [1134.0, 40.0], [1129.0, 50.0], [1148.0, 40.0], [1146.0, 41.0], [1144.0, 40.0], [1147.0, 40.0], [1121.0, 41.0], [1150.0, 39.0], [1136.0, 40.0], [1138.0, 40.0], [1137.0, 39.0], [1139.0, 40.0], [1127.0, 40.0], [1126.0, 41.0], [1125.0, 41.0], [1124.0, 40.0], [1123.0, 40.0], [1164.0, 43.0], [1159.0, 42.0], [1163.0, 41.0], [1162.0, 40.0], [1161.0, 42.0], [1153.0, 41.0], [1157.0, 43.0], [1156.0, 40.0], [1181.0, 39.0], [1183.0, 43.0], [1187.0, 40.0], [1212.0, 39.0], [1203.0, 39.0], [1189.0, 40.0], [1188.0, 39.0], [1192.0, 40.0], [1194.0, 40.0], [1195.0, 39.0], [1197.0, 40.0], [1199.0, 39.0], [1191.0, 40.0], [1202.0, 39.0], [1179.0, 39.0], [1200.0, 39.0], [1165.0, 39.0], [1176.0, 40.0], [1178.0, 40.0], [1173.0, 40.0], [1169.0, 39.0], [1168.0, 39.0], [1170.0, 40.0], [1171.0, 39.0], [1172.0, 39.0], [1174.0, 40.0], [1175.0, 40.0], [1231.0, 40.0], [1255.0, 45.0], [1256.0, 46.0], [1235.0, 41.0], [1276.0, 40.0], [1232.0, 40.0], [1236.0, 50.0], [1218.0, 39.0], [1223.0, 39.0], [1248.0, 75.0], [1334.0, 53.0], [1293.0, 47.0], [1284.0, 39.0], [1287.0, 40.0], [1301.0, 63.5], [1291.0, 42.0], [1322.0, 52.0], [1350.0, 41.0], [1371.0, 10763.0], [1363.0, 45.0], [1382.0, 57.0], [1404.0, 45.0], [1355.0, 41.0], [1375.0, 51.0], [1400.0, 49.0], [1402.0, 40.0], [1497.0, 64.0], [1541.0, 47.0], [1537.0, 62.0], [1726.0, 84.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1726.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 10542.0, "series": [{"data": [[2.0, 10268.5], [37.0, 5717.0], [42.0, 10542.0], [50.0, 3443.5], [59.0, 3911.0], [76.0, 7163.5], [115.0, 9406.5], [118.0, 4273.0], [143.0, 9066.0], [156.0, 2822.5], [178.0, 2811.5], [190.0, 3147.5], [197.0, 8235.0], [203.0, 3657.0], [223.0, 3005.0], [220.0, 4276.0], [236.0, 2411.0], [239.0, 7440.0], [265.0, 7152.0], [275.0, 1339.0], [308.0, 3870.0], [312.0, 6438.0], [322.0, 4820.0], [340.0, 1123.5], [371.0, 3412.0], [430.0, 1710.0], [436.0, 3806.0], [444.0, 1956.0], [460.0, 1102.0], [478.0, 1105.0], [470.0, 5002.0], [481.0, 2078.0], [483.0, 1967.0], [484.0, 4300.5], [506.0, 2903.0], [500.0, 4272.0], [543.0, 2784.0], [541.0, 2144.0], [554.0, 2630.5], [547.0, 1949.0], [607.0, 2136.0], [627.0, 2846.0], [638.0, 2059.0], [622.0, 3778.0], [612.0, 1407.0], [724.0, 2771.5], [708.0, 1564.5], [717.0, 1545.0], [718.0, 1814.0], [767.0, 1576.5], [754.0, 3222.5], [782.0, 1390.0], [790.0, 1358.0], [769.0, 2835.0], [775.0, 2161.0], [816.0, 1171.5], [821.0, 3307.0], [823.0, 3220.0], [831.0, 3282.0], [817.0, 2491.0], [805.0, 1796.0], [842.0, 2073.5], [845.0, 2382.0], [834.0, 1098.0], [833.0, 2136.0], [893.0, 3326.0], [880.0, 2600.0], [865.0, 1432.0], [889.0, 2163.0], [894.0, 1824.5], [882.0, 2295.0], [870.0, 1163.0], [875.0, 1103.0], [874.0, 1123.0], [905.0, 1975.0], [900.0, 1134.0], [916.0, 1325.0], [926.0, 1287.0], [911.0, 1127.0], [919.0, 1130.0], [909.0, 1811.0], [923.0, 1712.0], [959.0, 1592.0], [930.0, 2877.0], [943.0, 1668.0], [928.0, 1823.0], [940.0, 2101.0], [947.0, 1269.0], [951.0, 1102.0], [950.0, 2593.0], [948.0, 2743.0], [953.0, 2168.5], [956.0, 2002.0], [955.0, 1955.0], [944.0, 1123.0], [946.0, 1952.5], [982.0, 1607.5], [979.0, 1339.0], [969.0, 1892.5], [989.0, 1127.0], [983.0, 2242.5], [966.0, 2044.0], [1023.0, 2924.5], [1006.0, 3155.0], [997.0, 2822.0], [994.0, 1363.0], [1004.0, 1130.0], [1087.0, 1471.0], [1080.0, 1345.0], [1085.0, 1886.0], [1086.0, 1830.0], [1064.0, 1119.0], [1065.0, 1778.0], [1071.0, 1523.0], [1041.0, 2167.0], [1040.0, 1890.0], [1063.0, 1283.0], [1031.0, 2157.0], [1059.0, 1734.0], [1057.0, 1766.0], [1058.0, 1679.0], [1061.0, 1642.0], [1042.0, 2172.5], [1049.0, 2188.0], [1052.0, 1202.0], [1028.0, 1952.0], [1053.0, 1694.0], [1026.0, 1717.0], [1048.0, 1323.0], [1072.0, 1747.0], [1034.0, 1806.0], [1033.0, 1639.5], [1143.0, 2190.5], [1140.0, 1394.0], [1141.0, 1829.0], [1100.0, 1501.0], [1096.0, 1137.0], [1115.0, 1450.0], [1091.0, 1770.5], [1093.0, 1740.0], [1090.0, 1940.0], [1117.0, 1872.5], [1114.0, 1946.0], [1112.0, 1218.0], [1110.0, 1653.0], [1109.0, 1265.0], [1104.0, 1738.0], [1105.0, 1795.0], [1108.0, 1777.5], [1098.0, 2010.5], [1099.0, 1778.0], [1097.0, 1776.0], [1130.0, 1794.0], [1131.0, 2153.5], [1132.0, 1861.0], [1135.0, 1798.0], [1133.0, 2123.5], [1134.0, 1708.0], [1129.0, 1717.0], [1148.0, 1937.5], [1146.0, 1832.5], [1144.0, 3038.0], [1147.0, 1800.0], [1121.0, 1876.5], [1150.0, 2162.0], [1136.0, 2089.0], [1138.0, 1734.0], [1137.0, 1752.0], [1139.0, 1914.0], [1127.0, 1886.5], [1126.0, 2024.0], [1125.0, 1193.0], [1124.0, 1859.5], [1123.0, 1854.5], [1164.0, 1111.0], [1159.0, 1752.0], [1163.0, 1303.5], [1162.0, 1830.0], [1161.0, 1830.0], [1153.0, 2601.0], [1157.0, 1828.5], [1156.0, 1838.5], [1181.0, 2059.0], [1183.0, 1984.0], [1187.0, 1384.0], [1212.0, 2864.0], [1203.0, 1573.0], [1189.0, 2194.0], [1188.0, 1619.0], [1192.0, 2249.0], [1194.0, 1828.5], [1195.0, 2016.0], [1197.0, 2078.0], [1199.0, 1564.0], [1191.0, 2482.0], [1202.0, 2862.0], [1179.0, 2896.0], [1200.0, 1955.0], [1165.0, 1884.5], [1176.0, 2482.0], [1178.0, 2000.0], [1173.0, 2425.5], [1169.0, 2195.0], [1168.0, 1709.0], [1170.0, 2102.0], [1171.0, 3161.0], [1172.0, 2168.0], [1174.0, 2087.0], [1175.0, 1897.5], [1231.0, 1955.5], [1255.0, 2118.0], [1256.0, 1105.0], [1235.0, 1894.0], [1276.0, 3015.0], [1232.0, 1150.0], [1236.0, 2054.0], [1218.0, 2216.0], [1223.0, 2244.0], [1248.0, 2080.0], [1334.0, 1139.0], [1293.0, 1455.0], [1284.0, 1135.0], [1287.0, 2074.0], [1301.0, 1141.0], [1291.0, 1904.0], [1322.0, 1781.0], [1350.0, 2829.5], [1371.0, 1425.0], [1363.0, 1754.0], [1382.0, 1836.0], [1404.0, 2149.0], [1355.0, 1171.0], [1375.0, 1127.0], [1400.0, 1722.0], [1402.0, 2182.0], [1497.0, 1129.0], [1541.0, 2167.0], [1537.0, 1141.0], [1726.0, 1642.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[37.0, 39.0], [42.0, 10228.0], [76.0, 10160.5], [115.0, 10094.0], [118.0, 68.0], [190.0, 10331.0], [197.0, 10474.0], [220.0, 43.0], [239.0, 10402.0], [265.0, 10137.0], [275.0, 143.5], [308.0, 50.5], [312.0, 10191.5], [322.0, 39.0], [371.0, 10250.0], [430.0, 113.0], [436.0, 57.0], [444.0, 100.5], [460.0, 40.0], [478.0, 53.0], [470.0, 67.0], [481.0, 53.0], [483.0, 64.0], [484.0, 10145.0], [506.0, 53.0], [500.0, 10367.0], [543.0, 65.0], [541.0, 92.0], [607.0, 45.0], [622.0, 64.0], [612.0, 65.0], [724.0, 55.0], [708.0, 10205.5], [717.0, 417.0], [767.0, 1773.0], [754.0, 68.0], [782.0, 83.0], [769.0, 62.0], [816.0, 42.0], [821.0, 48.0], [823.0, 61.0], [831.0, 40.0], [817.0, 39.0], [805.0, 41.5], [893.0, 50.5], [865.0, 10283.0], [889.0, 10201.0], [882.0, 41.0], [875.0, 62.5], [900.0, 57.0], [916.0, 40.0], [926.0, 10381.0], [911.0, 41.0], [919.0, 10266.0], [909.0, 41.0], [923.0, 40.0], [959.0, 855.5], [930.0, 40.0], [928.0, 52.0], [951.0, 39.0], [950.0, 59.5], [948.0, 49.0], [953.0, 39.0], [944.0, 10155.0], [946.0, 43.0], [956.0, 410.5], [955.0, 39.0], [982.0, 42.5], [979.0, 295.0], [969.0, 48.0], [989.0, 65.0], [983.0, 39.0], [966.0, 39.0], [1023.0, 0.0], [1006.0, 46.0], [997.0, 42.0], [994.0, 41.0], [1004.0, 344.5], [1087.0, 39.0], [1080.0, 40.0], [1085.0, 39.0], [1086.0, 40.0], [1064.0, 49.0], [1065.0, 40.0], [1071.0, 70.0], [1041.0, 1573.0], [1040.0, 40.0], [1063.0, 43.0], [1031.0, 40.0], [1059.0, 41.0], [1057.0, 39.0], [1058.0, 39.0], [1061.0, 44.0], [1042.0, 40.0], [1049.0, 39.0], [1052.0, 68.0], [1028.0, 39.0], [1053.0, 39.0], [1026.0, 40.0], [1048.0, 45.0], [1072.0, 41.0], [1034.0, 52.0], [1033.0, 40.0], [1143.0, 44.0], [1140.0, 40.0], [1141.0, 41.0], [1100.0, 40.0], [1096.0, 41.0], [1115.0, 40.0], [1091.0, 40.0], [1093.0, 40.0], [1090.0, 39.0], [1117.0, 42.0], [1114.0, 42.0], [1112.0, 46.0], [1110.0, 41.0], [1109.0, 39.0], [1104.0, 52.0], [1105.0, 39.0], [1108.0, 39.0], [1098.0, 40.0], [1099.0, 40.0], [1097.0, 40.0], [1130.0, 46.0], [1131.0, 40.0], [1132.0, 40.0], [1135.0, 40.0], [1133.0, 39.0], [1134.0, 40.0], [1129.0, 50.0], [1148.0, 40.0], [1146.0, 41.0], [1144.0, 40.0], [1147.0, 40.0], [1121.0, 41.0], [1150.0, 39.0], [1136.0, 40.0], [1138.0, 40.0], [1137.0, 39.0], [1139.0, 40.0], [1127.0, 40.0], [1126.0, 41.0], [1125.0, 41.0], [1124.0, 40.0], [1123.0, 40.0], [1164.0, 43.0], [1159.0, 42.0], [1163.0, 41.0], [1162.0, 40.0], [1161.0, 42.0], [1153.0, 41.0], [1157.0, 43.0], [1156.0, 40.0], [1181.0, 39.0], [1183.0, 43.0], [1187.0, 40.0], [1212.0, 39.0], [1203.0, 39.0], [1189.0, 40.0], [1188.0, 39.0], [1192.0, 40.0], [1194.0, 40.0], [1195.0, 39.0], [1197.0, 40.0], [1199.0, 39.0], [1191.0, 40.0], [1202.0, 39.0], [1179.0, 39.0], [1200.0, 39.0], [1165.0, 39.0], [1176.0, 40.0], [1178.0, 40.0], [1173.0, 40.0], [1169.0, 39.0], [1168.0, 39.0], [1170.0, 40.0], [1171.0, 39.0], [1172.0, 39.0], [1174.0, 40.0], [1175.0, 40.0], [1231.0, 40.0], [1255.0, 45.0], [1256.0, 46.0], [1235.0, 41.0], [1276.0, 40.0], [1232.0, 40.0], [1236.0, 50.0], [1218.0, 39.0], [1223.0, 39.0], [1248.0, 75.0], [1334.0, 53.0], [1293.0, 47.0], [1284.0, 39.0], [1287.0, 40.0], [1301.0, 63.5], [1291.0, 42.0], [1322.0, 52.0], [1350.0, 41.0], [1371.0, 0.0], [1363.0, 45.0], [1382.0, 57.0], [1404.0, 45.0], [1355.0, 41.0], [1375.0, 51.0], [1400.0, 49.0], [1402.0, 40.0], [1497.0, 64.0], [1541.0, 47.0], [1537.0, 62.0], [1726.0, 84.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1726.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 200.0, "minX": 1.68420792E12, "maxY": 1140.9333333333334, "series": [{"data": [[1.68420816E12, 1079.9666666666667], [1.68420822E12, 794.5833333333334], [1.68420804E12, 1140.9333333333334], [1.6842081E12, 925.5833333333334], [1.68420792E12, 200.0], [1.68420798E12, 833.3333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420822E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68420792E12, "maxY": 876.6166666666667, "series": [{"data": [[1.68420792E12, 0.13333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68420816E12, 846.5333333333333], [1.68420822E12, 694.2833333333333], [1.68420804E12, 876.6166666666667], [1.6842081E12, 771.2166666666667], [1.68420792E12, 153.36666666666667], [1.68420798E12, 662.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68420792E12, 12.583333333333334]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.68420822E12, 0.26666666666666666], [1.68420792E12, 0.6333333333333333], [1.68420798E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68420816E12, 212.88333333333333], [1.68420822E12, 149.85], [1.68420804E12, 238.26666666666668], [1.6842081E12, 174.93333333333334], [1.68420792E12, 24.25], [1.68420798E12, 155.9]], "isOverall": false, "label": "429", "isController": false}, {"data": [[1.6842081E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420822E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 37.6, "minX": 1.68420792E12, "maxY": 876.6166666666667, "series": [{"data": [[1.68420816E12, 846.5333333333333], [1.68420822E12, 694.2833333333333], [1.68420804E12, 876.6166666666667], [1.6842081E12, 771.2166666666667], [1.68420792E12, 153.36666666666667], [1.68420798E12, 662.65]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68420816E12, 212.88333333333333], [1.68420822E12, 150.11666666666667], [1.68420804E12, 238.26666666666668], [1.6842081E12, 174.95], [1.68420792E12, 37.6], [1.68420798E12, 155.91666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420822E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 37.6, "minX": 1.68420792E12, "maxY": 876.6166666666667, "series": [{"data": [[1.68420816E12, 846.5333333333333], [1.68420822E12, 694.2833333333333], [1.68420804E12, 876.6166666666667], [1.6842081E12, 771.2166666666667], [1.68420792E12, 153.36666666666667], [1.68420798E12, 662.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68420816E12, 212.88333333333333], [1.68420822E12, 150.11666666666667], [1.68420804E12, 238.26666666666668], [1.6842081E12, 174.95], [1.68420792E12, 37.6], [1.68420798E12, 155.91666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420822E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

