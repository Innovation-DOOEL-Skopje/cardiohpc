/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 21447.0, "series": [{"data": [[0.0, 0.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 39.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 40.0], [1.8, 40.0], [1.9, 40.0], [2.0, 40.0], [2.1, 40.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 41.0], [2.7, 41.0], [2.8, 41.0], [2.9, 41.0], [3.0, 41.0], [3.1, 41.0], [3.2, 41.0], [3.3, 41.0], [3.4, 41.0], [3.5, 41.0], [3.6, 41.0], [3.7, 42.0], [3.8, 42.0], [3.9, 42.0], [4.0, 42.0], [4.1, 42.0], [4.2, 42.0], [4.3, 42.0], [4.4, 42.0], [4.5, 42.0], [4.6, 42.0], [4.7, 42.0], [4.8, 43.0], [4.9, 43.0], [5.0, 43.0], [5.1, 43.0], [5.2, 43.0], [5.3, 43.0], [5.4, 43.0], [5.5, 43.0], [5.6, 44.0], [5.7, 44.0], [5.8, 44.0], [5.9, 44.0], [6.0, 45.0], [6.1, 45.0], [6.2, 46.0], [6.3, 46.0], [6.4, 47.0], [6.5, 48.0], [6.6, 48.0], [6.7, 49.0], [6.8, 50.0], [6.9, 51.0], [7.0, 52.0], [7.1, 52.0], [7.2, 53.0], [7.3, 54.0], [7.4, 55.0], [7.5, 56.0], [7.6, 56.0], [7.7, 57.0], [7.8, 58.0], [7.9, 59.0], [8.0, 60.0], [8.1, 61.0], [8.2, 62.0], [8.3, 63.0], [8.4, 64.0], [8.5, 65.0], [8.6, 67.0], [8.7, 69.0], [8.8, 74.0], [8.9, 79.0], [9.0, 84.0], [9.1, 92.0], [9.2, 106.0], [9.3, 125.0], [9.4, 163.0], [9.5, 218.0], [9.6, 290.0], [9.7, 432.0], [9.8, 620.0], [9.9, 952.0], [10.0, 1090.0], [10.1, 1091.0], [10.2, 1091.0], [10.3, 1092.0], [10.4, 1092.0], [10.5, 1093.0], [10.6, 1093.0], [10.7, 1093.0], [10.8, 1093.0], [10.9, 1093.0], [11.0, 1094.0], [11.1, 1094.0], [11.2, 1094.0], [11.3, 1094.0], [11.4, 1094.0], [11.5, 1094.0], [11.6, 1094.0], [11.7, 1094.0], [11.8, 1095.0], [11.9, 1095.0], [12.0, 1095.0], [12.1, 1095.0], [12.2, 1095.0], [12.3, 1095.0], [12.4, 1095.0], [12.5, 1095.0], [12.6, 1095.0], [12.7, 1096.0], [12.8, 1096.0], [12.9, 1096.0], [13.0, 1096.0], [13.1, 1096.0], [13.2, 1096.0], [13.3, 1096.0], [13.4, 1096.0], [13.5, 1096.0], [13.6, 1096.0], [13.7, 1096.0], [13.8, 1096.0], [13.9, 1097.0], [14.0, 1097.0], [14.1, 1097.0], [14.2, 1097.0], [14.3, 1097.0], [14.4, 1097.0], [14.5, 1097.0], [14.6, 1097.0], [14.7, 1097.0], [14.8, 1097.0], [14.9, 1097.0], [15.0, 1097.0], [15.1, 1097.0], [15.2, 1097.0], [15.3, 1098.0], [15.4, 1098.0], [15.5, 1098.0], [15.6, 1098.0], [15.7, 1098.0], [15.8, 1098.0], [15.9, 1098.0], [16.0, 1098.0], [16.1, 1098.0], [16.2, 1098.0], [16.3, 1098.0], [16.4, 1098.0], [16.5, 1098.0], [16.6, 1098.0], [16.7, 1098.0], [16.8, 1099.0], [16.9, 1099.0], [17.0, 1099.0], [17.1, 1099.0], [17.2, 1099.0], [17.3, 1099.0], [17.4, 1099.0], [17.5, 1099.0], [17.6, 1099.0], [17.7, 1099.0], [17.8, 1099.0], [17.9, 1099.0], [18.0, 1099.0], [18.1, 1099.0], [18.2, 1099.0], [18.3, 1099.0], [18.4, 1100.0], [18.5, 1100.0], [18.6, 1100.0], [18.7, 1100.0], [18.8, 1100.0], [18.9, 1100.0], [19.0, 1100.0], [19.1, 1100.0], [19.2, 1100.0], [19.3, 1100.0], [19.4, 1100.0], [19.5, 1100.0], [19.6, 1100.0], [19.7, 1100.0], [19.8, 1100.0], [19.9, 1101.0], [20.0, 1101.0], [20.1, 1101.0], [20.2, 1101.0], [20.3, 1101.0], [20.4, 1101.0], [20.5, 1101.0], [20.6, 1101.0], [20.7, 1101.0], [20.8, 1101.0], [20.9, 1101.0], [21.0, 1101.0], [21.1, 1101.0], [21.2, 1101.0], [21.3, 1101.0], [21.4, 1102.0], [21.5, 1102.0], [21.6, 1102.0], [21.7, 1102.0], [21.8, 1102.0], [21.9, 1102.0], [22.0, 1102.0], [22.1, 1102.0], [22.2, 1102.0], [22.3, 1102.0], [22.4, 1102.0], [22.5, 1102.0], [22.6, 1102.0], [22.7, 1103.0], [22.8, 1103.0], [22.9, 1103.0], [23.0, 1103.0], [23.1, 1103.0], [23.2, 1103.0], [23.3, 1103.0], [23.4, 1103.0], [23.5, 1103.0], [23.6, 1103.0], [23.7, 1103.0], [23.8, 1103.0], [23.9, 1104.0], [24.0, 1104.0], [24.1, 1104.0], [24.2, 1104.0], [24.3, 1104.0], [24.4, 1104.0], [24.5, 1104.0], [24.6, 1104.0], [24.7, 1104.0], [24.8, 1104.0], [24.9, 1104.0], [25.0, 1105.0], [25.1, 1105.0], [25.2, 1105.0], [25.3, 1105.0], [25.4, 1105.0], [25.5, 1105.0], [25.6, 1105.0], [25.7, 1105.0], [25.8, 1105.0], [25.9, 1105.0], [26.0, 1106.0], [26.1, 1106.0], [26.2, 1106.0], [26.3, 1106.0], [26.4, 1106.0], [26.5, 1106.0], [26.6, 1106.0], [26.7, 1106.0], [26.8, 1107.0], [26.9, 1107.0], [27.0, 1107.0], [27.1, 1107.0], [27.2, 1107.0], [27.3, 1107.0], [27.4, 1107.0], [27.5, 1108.0], [27.6, 1108.0], [27.7, 1108.0], [27.8, 1108.0], [27.9, 1108.0], [28.0, 1108.0], [28.1, 1108.0], [28.2, 1109.0], [28.3, 1109.0], [28.4, 1109.0], [28.5, 1109.0], [28.6, 1109.0], [28.7, 1109.0], [28.8, 1110.0], [28.9, 1110.0], [29.0, 1110.0], [29.1, 1110.0], [29.2, 1110.0], [29.3, 1110.0], [29.4, 1111.0], [29.5, 1111.0], [29.6, 1111.0], [29.7, 1111.0], [29.8, 1112.0], [29.9, 1112.0], [30.0, 1112.0], [30.1, 1112.0], [30.2, 1112.0], [30.3, 1113.0], [30.4, 1113.0], [30.5, 1113.0], [30.6, 1113.0], [30.7, 1114.0], [30.8, 1114.0], [30.9, 1114.0], [31.0, 1114.0], [31.1, 1114.0], [31.2, 1115.0], [31.3, 1115.0], [31.4, 1115.0], [31.5, 1116.0], [31.6, 1116.0], [31.7, 1116.0], [31.8, 1116.0], [31.9, 1117.0], [32.0, 1117.0], [32.1, 1117.0], [32.2, 1118.0], [32.3, 1118.0], [32.4, 1118.0], [32.5, 1119.0], [32.6, 1119.0], [32.7, 1119.0], [32.8, 1120.0], [32.9, 1120.0], [33.0, 1120.0], [33.1, 1121.0], [33.2, 1121.0], [33.3, 1122.0], [33.4, 1122.0], [33.5, 1122.0], [33.6, 1123.0], [33.7, 1123.0], [33.8, 1124.0], [33.9, 1124.0], [34.0, 1124.0], [34.1, 1125.0], [34.2, 1125.0], [34.3, 1126.0], [34.4, 1126.0], [34.5, 1126.0], [34.6, 1127.0], [34.7, 1127.0], [34.8, 1128.0], [34.9, 1128.0], [35.0, 1129.0], [35.1, 1129.0], [35.2, 1130.0], [35.3, 1130.0], [35.4, 1131.0], [35.5, 1131.0], [35.6, 1132.0], [35.7, 1132.0], [35.8, 1133.0], [35.9, 1134.0], [36.0, 1134.0], [36.1, 1135.0], [36.2, 1136.0], [36.3, 1136.0], [36.4, 1137.0], [36.5, 1138.0], [36.6, 1139.0], [36.7, 1140.0], [36.8, 1140.0], [36.9, 1141.0], [37.0, 1142.0], [37.1, 1143.0], [37.2, 1144.0], [37.3, 1145.0], [37.4, 1145.0], [37.5, 1146.0], [37.6, 1147.0], [37.7, 1148.0], [37.8, 1149.0], [37.9, 1150.0], [38.0, 1151.0], [38.1, 1152.0], [38.2, 1153.0], [38.3, 1154.0], [38.4, 1155.0], [38.5, 1156.0], [38.6, 1157.0], [38.7, 1158.0], [38.8, 1159.0], [38.9, 1161.0], [39.0, 1162.0], [39.1, 1163.0], [39.2, 1165.0], [39.3, 1166.0], [39.4, 1168.0], [39.5, 1169.0], [39.6, 1171.0], [39.7, 1173.0], [39.8, 1175.0], [39.9, 1177.0], [40.0, 1179.0], [40.1, 1181.0], [40.2, 1183.0], [40.3, 1184.0], [40.4, 1186.0], [40.5, 1188.0], [40.6, 1190.0], [40.7, 1192.0], [40.8, 1194.0], [40.9, 1196.0], [41.0, 1198.0], [41.1, 1200.0], [41.2, 1201.0], [41.3, 1203.0], [41.4, 1205.0], [41.5, 1207.0], [41.6, 1209.0], [41.7, 1212.0], [41.8, 1214.0], [41.9, 1217.0], [42.0, 1219.0], [42.1, 1222.0], [42.2, 1225.0], [42.3, 1228.0], [42.4, 1231.0], [42.5, 1234.0], [42.6, 1237.0], [42.7, 1240.0], [42.8, 1243.0], [42.9, 1245.0], [43.0, 1249.0], [43.1, 1252.0], [43.2, 1256.0], [43.3, 1259.0], [43.4, 1263.0], [43.5, 1266.0], [43.6, 1269.0], [43.7, 1272.0], [43.8, 1275.0], [43.9, 1278.0], [44.0, 1281.0], [44.1, 1283.0], [44.2, 1286.0], [44.3, 1289.0], [44.4, 1292.0], [44.5, 1295.0], [44.6, 1298.0], [44.7, 1301.0], [44.8, 1305.0], [44.9, 1308.0], [45.0, 1311.0], [45.1, 1314.0], [45.2, 1317.0], [45.3, 1320.0], [45.4, 1324.0], [45.5, 1327.0], [45.6, 1331.0], [45.7, 1334.0], [45.8, 1337.0], [45.9, 1340.0], [46.0, 1344.0], [46.1, 1347.0], [46.2, 1351.0], [46.3, 1354.0], [46.4, 1356.0], [46.5, 1359.0], [46.6, 1363.0], [46.7, 1366.0], [46.8, 1369.0], [46.9, 1372.0], [47.0, 1376.0], [47.1, 1380.0], [47.2, 1384.0], [47.3, 1389.0], [47.4, 1393.0], [47.5, 1399.0], [47.6, 1404.0], [47.7, 1409.0], [47.8, 1414.0], [47.9, 1418.0], [48.0, 1423.0], [48.1, 1428.0], [48.2, 1432.0], [48.3, 1437.0], [48.4, 1441.0], [48.5, 1445.0], [48.6, 1450.0], [48.7, 1454.0], [48.8, 1457.0], [48.9, 1461.0], [49.0, 1465.0], [49.1, 1469.0], [49.2, 1472.0], [49.3, 1475.0], [49.4, 1479.0], [49.5, 1482.0], [49.6, 1485.0], [49.7, 1488.0], [49.8, 1491.0], [49.9, 1494.0], [50.0, 1497.0], [50.1, 1500.0], [50.2, 1503.0], [50.3, 1506.0], [50.4, 1510.0], [50.5, 1512.0], [50.6, 1515.0], [50.7, 1518.0], [50.8, 1521.0], [50.9, 1524.0], [51.0, 1528.0], [51.1, 1531.0], [51.2, 1535.0], [51.3, 1538.0], [51.4, 1541.0], [51.5, 1545.0], [51.6, 1548.0], [51.7, 1551.0], [51.8, 1555.0], [51.9, 1559.0], [52.0, 1562.0], [52.1, 1565.0], [52.2, 1569.0], [52.3, 1572.0], [52.4, 1576.0], [52.5, 1580.0], [52.6, 1585.0], [52.7, 1589.0], [52.8, 1592.0], [52.9, 1596.0], [53.0, 1600.0], [53.1, 1604.0], [53.2, 1608.0], [53.3, 1612.0], [53.4, 1615.0], [53.5, 1620.0], [53.6, 1624.0], [53.7, 1628.0], [53.8, 1632.0], [53.9, 1636.0], [54.0, 1640.0], [54.1, 1645.0], [54.2, 1648.0], [54.3, 1652.0], [54.4, 1655.0], [54.5, 1658.0], [54.6, 1661.0], [54.7, 1664.0], [54.8, 1667.0], [54.9, 1670.0], [55.0, 1674.0], [55.1, 1677.0], [55.2, 1680.0], [55.3, 1684.0], [55.4, 1687.0], [55.5, 1691.0], [55.6, 1695.0], [55.7, 1699.0], [55.8, 1702.0], [55.9, 1706.0], [56.0, 1710.0], [56.1, 1713.0], [56.2, 1716.0], [56.3, 1720.0], [56.4, 1723.0], [56.5, 1727.0], [56.6, 1731.0], [56.7, 1734.0], [56.8, 1737.0], [56.9, 1740.0], [57.0, 1744.0], [57.1, 1747.0], [57.2, 1750.0], [57.3, 1753.0], [57.4, 1756.0], [57.5, 1758.0], [57.6, 1761.0], [57.7, 1764.0], [57.8, 1766.0], [57.9, 1769.0], [58.0, 1772.0], [58.1, 1775.0], [58.2, 1779.0], [58.3, 1782.0], [58.4, 1786.0], [58.5, 1790.0], [58.6, 1793.0], [58.7, 1798.0], [58.8, 1802.0], [58.9, 1805.0], [59.0, 1810.0], [59.1, 1815.0], [59.2, 1819.0], [59.3, 1824.0], [59.4, 1828.0], [59.5, 1833.0], [59.6, 1837.0], [59.7, 1841.0], [59.8, 1845.0], [59.9, 1849.0], [60.0, 1853.0], [60.1, 1857.0], [60.2, 1861.0], [60.3, 1865.0], [60.4, 1869.0], [60.5, 1873.0], [60.6, 1877.0], [60.7, 1881.0], [60.8, 1885.0], [60.9, 1889.0], [61.0, 1893.0], [61.1, 1897.0], [61.2, 1901.0], [61.3, 1905.0], [61.4, 1909.0], [61.5, 1914.0], [61.6, 1918.0], [61.7, 1922.0], [61.8, 1927.0], [61.9, 1931.0], [62.0, 1935.0], [62.1, 1940.0], [62.2, 1945.0], [62.3, 1950.0], [62.4, 1954.0], [62.5, 1958.0], [62.6, 1963.0], [62.7, 1968.0], [62.8, 1973.0], [62.9, 1978.0], [63.0, 1984.0], [63.1, 1990.0], [63.2, 1996.0], [63.3, 2002.0], [63.4, 2007.0], [63.5, 2012.0], [63.6, 2018.0], [63.7, 2024.0], [63.8, 2028.0], [63.9, 2034.0], [64.0, 2038.0], [64.1, 2044.0], [64.2, 2049.0], [64.3, 2054.0], [64.4, 2058.0], [64.5, 2062.0], [64.6, 2065.0], [64.7, 2069.0], [64.8, 2072.0], [64.9, 2075.0], [65.0, 2078.0], [65.1, 2081.0], [65.2, 2084.0], [65.3, 2086.0], [65.4, 2089.0], [65.5, 2092.0], [65.6, 2095.0], [65.7, 2098.0], [65.8, 2101.0], [65.9, 2104.0], [66.0, 2107.0], [66.1, 2111.0], [66.2, 2114.0], [66.3, 2118.0], [66.4, 2121.0], [66.5, 2124.0], [66.6, 2128.0], [66.7, 2131.0], [66.8, 2134.0], [66.9, 2138.0], [67.0, 2141.0], [67.1, 2144.0], [67.2, 2146.0], [67.3, 2149.0], [67.4, 2151.0], [67.5, 2153.0], [67.6, 2156.0], [67.7, 2158.0], [67.8, 2161.0], [67.9, 2163.0], [68.0, 2166.0], [68.1, 2169.0], [68.2, 2173.0], [68.3, 2177.0], [68.4, 2182.0], [68.5, 2187.0], [68.6, 2193.0], [68.7, 2200.0], [68.8, 2207.0], [68.9, 2215.0], [69.0, 2222.0], [69.1, 2230.0], [69.2, 2238.0], [69.3, 2245.0], [69.4, 2254.0], [69.5, 2260.0], [69.6, 2267.0], [69.7, 2275.0], [69.8, 2282.0], [69.9, 2289.0], [70.0, 2296.0], [70.1, 2303.0], [70.2, 2309.0], [70.3, 2317.0], [70.4, 2325.0], [70.5, 2333.0], [70.6, 2342.0], [70.7, 2350.0], [70.8, 2360.0], [70.9, 2368.0], [71.0, 2376.0], [71.1, 2384.0], [71.2, 2393.0], [71.3, 2402.0], [71.4, 2410.0], [71.5, 2418.0], [71.6, 2425.0], [71.7, 2432.0], [71.8, 2440.0], [71.9, 2449.0], [72.0, 2458.0], [72.1, 2467.0], [72.2, 2477.0], [72.3, 2486.0], [72.4, 2497.0], [72.5, 2507.0], [72.6, 2516.0], [72.7, 2525.0], [72.8, 2535.0], [72.9, 2543.0], [73.0, 2554.0], [73.1, 2564.0], [73.2, 2574.0], [73.3, 2584.0], [73.4, 2594.0], [73.5, 2606.0], [73.6, 2617.0], [73.7, 2629.0], [73.8, 2642.0], [73.9, 2652.0], [74.0, 2663.0], [74.1, 2673.0], [74.2, 2684.0], [74.3, 2695.0], [74.4, 2706.0], [74.5, 2717.0], [74.6, 2728.0], [74.7, 2739.0], [74.8, 2752.0], [74.9, 2763.0], [75.0, 2773.0], [75.1, 2783.0], [75.2, 2793.0], [75.3, 2805.0], [75.4, 2814.0], [75.5, 2826.0], [75.6, 2838.0], [75.7, 2851.0], [75.8, 2864.0], [75.9, 2876.0], [76.0, 2886.0], [76.1, 2899.0], [76.2, 2912.0], [76.3, 2924.0], [76.4, 2935.0], [76.5, 2948.0], [76.6, 2962.0], [76.7, 2976.0], [76.8, 2988.0], [76.9, 3000.0], [77.0, 3011.0], [77.1, 3024.0], [77.2, 3036.0], [77.3, 3049.0], [77.4, 3062.0], [77.5, 3074.0], [77.6, 3084.0], [77.7, 3094.0], [77.8, 3104.0], [77.9, 3114.0], [78.0, 3123.0], [78.1, 3133.0], [78.2, 3141.0], [78.3, 3150.0], [78.4, 3160.0], [78.5, 3170.0], [78.6, 3180.0], [78.7, 3190.0], [78.8, 3201.0], [78.9, 3211.0], [79.0, 3221.0], [79.1, 3234.0], [79.2, 3246.0], [79.3, 3258.0], [79.4, 3271.0], [79.5, 3285.0], [79.6, 3299.0], [79.7, 3315.0], [79.8, 3328.0], [79.9, 3343.0], [80.0, 3356.0], [80.1, 3372.0], [80.2, 3386.0], [80.3, 3401.0], [80.4, 3418.0], [80.5, 3433.0], [80.6, 3449.0], [80.7, 3464.0], [80.8, 3482.0], [80.9, 3498.0], [81.0, 3516.0], [81.1, 3536.0], [81.2, 3551.0], [81.3, 3568.0], [81.4, 3590.0], [81.5, 3610.0], [81.6, 3631.0], [81.7, 3651.0], [81.8, 3674.0], [81.9, 3697.0], [82.0, 3721.0], [82.1, 3742.0], [82.2, 3766.0], [82.3, 3792.0], [82.4, 3817.0], [82.5, 3840.0], [82.6, 3866.0], [82.7, 3886.0], [82.8, 3904.0], [82.9, 3926.0], [83.0, 3945.0], [83.1, 3966.0], [83.2, 3986.0], [83.3, 4006.0], [83.4, 4026.0], [83.5, 4049.0], [83.6, 4071.0], [83.7, 4092.0], [83.8, 4109.0], [83.9, 4126.0], [84.0, 4142.0], [84.1, 4156.0], [84.2, 4169.0], [84.3, 4180.0], [84.4, 4193.0], [84.5, 4204.0], [84.6, 4216.0], [84.7, 4230.0], [84.8, 4243.0], [84.9, 4256.0], [85.0, 4270.0], [85.1, 4286.0], [85.2, 4304.0], [85.3, 4321.0], [85.4, 4339.0], [85.5, 4363.0], [85.6, 4385.0], [85.7, 4408.0], [85.8, 4432.0], [85.9, 4458.0], [86.0, 4486.0], [86.1, 4513.0], [86.2, 4543.0], [86.3, 4574.0], [86.4, 4608.0], [86.5, 4643.0], [86.6, 4681.0], [86.7, 4721.0], [86.8, 4764.0], [86.9, 4806.0], [87.0, 4848.0], [87.1, 4887.0], [87.2, 4922.0], [87.3, 4953.0], [87.4, 4982.0], [87.5, 5010.0], [87.6, 5038.0], [87.7, 5063.0], [87.8, 5090.0], [87.9, 5117.0], [88.0, 5140.0], [88.1, 5163.0], [88.2, 5183.0], [88.3, 5202.0], [88.4, 5218.0], [88.5, 5234.0], [88.6, 5251.0], [88.7, 5268.0], [88.8, 5286.0], [88.9, 5301.0], [89.0, 5318.0], [89.1, 5338.0], [89.2, 5359.0], [89.3, 5384.0], [89.4, 5410.0], [89.5, 5437.0], [89.6, 5468.0], [89.7, 5499.0], [89.8, 5532.0], [89.9, 5572.0], [90.0, 5614.0], [90.1, 5663.0], [90.2, 5712.0], [90.3, 5765.0], [90.4, 5819.0], [90.5, 5878.0], [90.6, 5924.0], [90.7, 5971.0], [90.8, 6009.0], [90.9, 6047.0], [91.0, 6086.0], [91.1, 6126.0], [91.2, 6156.0], [91.3, 6185.0], [91.4, 6214.0], [91.5, 6236.0], [91.6, 6259.0], [91.7, 6281.0], [91.8, 6302.0], [91.9, 6322.0], [92.0, 6345.0], [92.1, 6367.0], [92.2, 6391.0], [92.3, 6420.0], [92.4, 6449.0], [92.5, 6485.0], [92.6, 6525.0], [92.7, 6569.0], [92.8, 6624.0], [92.9, 6681.0], [93.0, 6746.0], [93.1, 6833.0], [93.2, 6912.0], [93.3, 6980.0], [93.4, 7038.0], [93.5, 7092.0], [93.6, 7140.0], [93.7, 7185.0], [93.8, 7230.0], [93.9, 7271.0], [94.0, 7306.0], [94.1, 7337.0], [94.2, 7368.0], [94.3, 7402.0], [94.4, 7436.0], [94.5, 7478.0], [94.6, 7527.0], [94.7, 7582.0], [94.8, 7644.0], [94.9, 7710.0], [95.0, 7786.0], [95.1, 7866.0], [95.2, 7979.0], [95.3, 8068.0], [95.4, 8143.0], [95.5, 8216.0], [95.6, 8277.0], [95.7, 8337.0], [95.8, 8379.0], [95.9, 8423.0], [96.0, 8466.0], [96.1, 8514.0], [96.2, 8583.0], [96.3, 8665.0], [96.4, 8768.0], [96.5, 8908.0], [96.6, 9042.0], [96.7, 9171.0], [96.8, 9269.0], [96.9, 9349.0], [97.0, 9412.0], [97.1, 9466.0], [97.2, 9519.0], [97.3, 9581.0], [97.4, 9657.0], [97.5, 9760.0], [97.6, 9886.0], [97.7, 10005.0], [97.8, 10094.0], [97.9, 10158.0], [98.0, 10217.0], [98.1, 10265.0], [98.2, 10310.0], [98.3, 10353.0], [98.4, 10393.0], [98.5, 10433.0], [98.6, 10473.0], [98.7, 10512.0], [98.8, 10559.0], [98.9, 10600.0], [99.0, 10659.0], [99.1, 10721.0], [99.2, 10791.0], [99.3, 10906.0], [99.4, 11034.0], [99.5, 11164.0], [99.6, 11300.0], [99.7, 11456.0], [99.8, 11712.0], [99.9, 12002.0], [100.0, 21447.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 54694.0, "series": [{"data": [[0.0, 21985.0], [100.0, 799.0], [200.0, 325.0], [300.0, 155.0], [400.0, 125.0], [500.0, 127.0], [600.0, 121.0], [700.0, 41.0], [800.0, 71.0], [900.0, 70.0], [1000.0, 20238.0], [1100.0, 54694.0], [1200.0, 8576.0], [1300.0, 6877.0], [1400.0, 6182.0], [1500.0, 6962.0], [1600.0, 6581.0], [1700.0, 7280.0], [1800.0, 5779.0], [1900.0, 5068.0], [2000.0, 6006.0], [2100.0, 7057.0], [2200.0, 3255.0], [2300.0, 2930.0], [2400.0, 2781.0], [2500.0, 2439.0], [2600.0, 2168.0], [2800.0, 2032.0], [2700.0, 2195.0], [2900.0, 1912.0], [3000.0, 2053.0], [3100.0, 2502.0], [3300.0, 1654.0], [3200.0, 1954.0], [3400.0, 1482.0], [3500.0, 1285.0], [3600.0, 1128.0], [3700.0, 1004.0], [3800.0, 1067.0], [3900.0, 1194.0], [4000.0, 1127.0], [4100.0, 1712.0], [4300.0, 1182.0], [4200.0, 1737.0], [4400.0, 903.0], [4500.0, 808.0], [4600.0, 658.0], [4700.0, 557.0], [4800.0, 606.0], [4900.0, 774.0], [5000.0, 905.0], [5100.0, 1087.0], [5200.0, 1453.0], [5300.0, 1125.0], [5400.0, 828.0], [5500.0, 631.0], [5600.0, 504.0], [5700.0, 458.0], [5800.0, 429.0], [5900.0, 549.0], [6000.0, 620.0], [6100.0, 766.0], [6200.0, 1053.0], [6300.0, 1052.0], [6400.0, 751.0], [6500.0, 527.0], [6600.0, 415.0], [6700.0, 324.0], [6800.0, 295.0], [6900.0, 349.0], [7000.0, 440.0], [7100.0, 528.0], [7400.0, 585.0], [7200.0, 588.0], [7300.0, 761.0], [7600.0, 372.0], [7500.0, 458.0], [7700.0, 313.0], [7800.0, 278.0], [7900.0, 212.0], [8100.0, 323.0], [8000.0, 305.0], [8200.0, 371.0], [8300.0, 516.0], [8400.0, 532.0], [8500.0, 368.0], [8700.0, 185.0], [8600.0, 292.0], [8800.0, 172.0], [9100.0, 216.0], [9000.0, 167.0], [9200.0, 255.0], [8900.0, 177.0], [9300.0, 342.0], [9400.0, 446.0], [9600.0, 305.0], [9500.0, 388.0], [9700.0, 192.0], [10000.0, 274.0], [10200.0, 489.0], [9900.0, 197.0], [10100.0, 388.0], [9800.0, 207.0], [10400.0, 594.0], [10300.0, 577.0], [10500.0, 562.0], [10600.0, 408.0], [10700.0, 345.0], [10800.0, 203.0], [11000.0, 201.0], [11200.0, 191.0], [11100.0, 152.0], [10900.0, 190.0], [11300.0, 158.0], [11400.0, 140.0], [11500.0, 105.0], [11600.0, 71.0], [11700.0, 70.0], [11800.0, 96.0], [11900.0, 80.0], [12000.0, 44.0], [12100.0, 28.0], [12200.0, 54.0], [12300.0, 27.0], [12400.0, 12.0], [12500.0, 5.0], [12600.0, 8.0], [12700.0, 5.0], [12800.0, 4.0], [13000.0, 4.0], [13200.0, 4.0], [13100.0, 4.0], [13300.0, 4.0], [13400.0, 1.0], [13500.0, 2.0], [13600.0, 1.0], [13800.0, 1.0], [14100.0, 2.0], [14000.0, 3.0], [13900.0, 1.0], [14200.0, 2.0], [14800.0, 1.0], [14600.0, 1.0], [14400.0, 1.0], [14500.0, 2.0], [14900.0, 1.0], [15100.0, 1.0], [15800.0, 1.0], [15400.0, 1.0], [17000.0, 1.0], [16800.0, 1.0], [16400.0, 1.0], [17700.0, 2.0], [17800.0, 1.0], [17900.0, 1.0], [18100.0, 1.0], [18300.0, 1.0], [18400.0, 1.0], [18500.0, 1.0], [19000.0, 1.0], [20300.0, 1.0], [20200.0, 1.0], [20100.0, 1.0], [21200.0, 1.0], [21400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 234.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 117736.0, "series": [{"data": [[0.0, 234.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 96641.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 117736.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 25755.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 105.22488038277518, "minX": 1.68420462E12, "maxY": 3000.0, "series": [{"data": [[1.68420462E12, 3000.0], [1.68420492E12, 105.22488038277518], [1.68420474E12, 3000.0], [1.68420486E12, 2898.345711177993], [1.68420468E12, 3000.0], [1.6842048E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420492E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.0, "maxY": 14972.0, "series": [{"data": [[2.0, 11391.0], [3.0, 11221.0], [4.0, 11281.0], [5.0, 10861.0], [6.0, 11265.0], [7.0, 11131.0], [8.0, 10860.0], [9.0, 11110.0], [10.0, 11092.0], [11.0, 10917.0], [12.0, 10443.0], [13.0, 10747.0], [15.0, 10553.0], [16.0, 10709.0], [18.0, 10706.5], [19.0, 10428.0], [21.0, 10919.0], [23.0, 10282.0], [25.0, 10595.5], [26.0, 10131.0], [27.0, 10571.0], [28.0, 10195.0], [29.0, 10566.0], [30.0, 10385.0], [31.0, 11436.0], [33.0, 9914.0], [32.0, 10343.0], [35.0, 10290.0], [37.0, 11233.0], [36.0, 10760.0], [39.0, 10634.0], [38.0, 10802.0], [40.0, 11093.0], [43.0, 9928.0], [42.0, 11917.5], [45.0, 10514.0], [44.0, 11053.0], [47.0, 10226.0], [46.0, 10317.0], [49.0, 9632.0], [48.0, 11227.0], [51.0, 10205.0], [50.0, 10672.0], [53.0, 11173.0], [52.0, 10095.0], [55.0, 9778.5], [57.0, 10452.0], [56.0, 9432.0], [59.0, 10859.0], [58.0, 10984.0], [60.0, 10762.0], [63.0, 9129.0], [62.0, 10515.0], [67.0, 10724.0], [66.0, 10669.0], [65.0, 10649.0], [64.0, 9101.0], [71.0, 10533.0], [70.0, 10507.0], [69.0, 8982.0], [68.0, 8993.0], [75.0, 11287.0], [74.0, 10555.333333333334], [76.0, 10555.0], [83.0, 10550.0], [82.0, 9456.0], [81.0, 10638.0], [80.0, 10510.0], [87.0, 10818.0], [85.0, 10485.0], [84.0, 6903.0], [90.0, 10298.5], [88.0, 10256.0], [95.0, 10285.0], [94.0, 10274.0], [93.0, 10271.666666666666], [99.0, 8582.0], [98.0, 11224.0], [97.0, 10237.5], [103.0, 11050.0], [102.0, 8532.0], [101.0, 10197.0], [100.0, 9244.0], [107.0, 10097.0], [106.0, 10806.0], [105.0, 10158.0], [104.0, 11203.0], [111.0, 11010.0], [110.0, 10050.0], [109.0, 13085.0], [108.0, 8934.0], [115.0, 10766.0], [114.0, 7603.0], [113.0, 9147.0], [112.0, 8680.0], [119.0, 7964.0], [118.0, 11336.0], [117.0, 10471.0], [116.0, 11510.0], [123.0, 7938.0], [122.0, 7573.0], [121.0, 7510.0], [120.0, 8514.0], [127.0, 10318.666666666666], [124.0, 10589.0], [135.0, 10643.0], [134.0, 10762.0], [133.0, 10476.0], [132.0, 8275.5], [130.0, 8219.5], [128.0, 9028.0], [142.0, 10475.0], [141.0, 10477.0], [138.0, 10635.0], [137.0, 7892.0], [136.0, 10501.0], [151.0, 10433.5], [149.0, 11557.0], [148.0, 8380.0], [147.0, 5918.0], [146.0, 7813.0], [145.0, 9981.666666666666], [158.0, 5662.0], [157.0, 7330.0], [156.0, 11508.0], [155.0, 7773.0], [154.0, 8403.0], [153.0, 9343.0], [152.0, 10586.0], [165.0, 10219.5], [163.0, 10141.5], [161.0, 12275.0], [160.0, 10332.0], [175.0, 13365.0], [174.0, 10070.0], [172.0, 9034.0], [171.0, 13682.5], [169.0, 13255.0], [168.0, 10121.0], [183.0, 13183.0], [182.0, 14972.0], [181.0, 11075.0], [180.0, 10580.0], [179.0, 10972.0], [177.0, 11728.0], [176.0, 8477.0], [191.0, 10581.0], [190.0, 8323.0], [189.0, 7269.0], [188.0, 6974.0], [187.0, 6846.0], [186.0, 8934.0], [185.0, 7269.0], [184.0, 14257.0], [199.0, 6980.0], [198.0, 6982.0], [197.0, 8676.0], [196.0, 5126.0], [195.0, 7060.0], [194.0, 10904.0], [193.0, 10594.0], [192.0, 7154.0], [207.0, 12375.0], [206.0, 10615.0], [205.0, 5005.0], [204.0, 6565.0], [203.0, 10748.0], [202.0, 10576.0], [201.0, 8569.0], [200.0, 8070.0], [215.0, 6889.0], [214.0, 8441.0], [213.0, 7982.0], [212.0, 10613.0], [211.0, 10467.0], [210.0, 7569.0], [209.0, 8004.0], [208.0, 6511.0], [223.0, 8458.0], [222.0, 6871.0], [221.0, 8499.0], [220.0, 7574.0], [219.0, 4958.0], [218.0, 7974.0], [217.0, 7447.0], [216.0, 4868.0], [231.0, 4837.0], [230.0, 7472.5], [228.0, 6860.0], [227.0, 6860.0], [226.0, 4950.0], [225.0, 6869.0], [224.0, 10670.0], [238.0, 10680.0], [237.0, 6462.0], [236.0, 7940.0], [235.0, 10199.0], [234.0, 6851.0], [233.0, 10495.0], [232.0, 6852.0], [246.0, 10582.0], [245.0, 10569.285714285716], [255.0, 9793.5], [253.0, 7919.0], [252.0, 10691.0], [251.0, 11157.0], [250.0, 7931.0], [249.0, 10513.0], [270.0, 6308.0], [271.0, 7456.0], [269.0, 6762.0], [268.0, 11469.0], [267.0, 10800.0], [265.0, 7308.0], [264.0, 8313.0], [263.0, 7873.0], [259.0, 10314.666666666666], [256.0, 7365.0], [262.0, 6355.0], [261.0, 4773.0], [260.0, 4867.0], [286.0, 6642.0], [287.0, 6626.0], [285.0, 10358.0], [275.0, 6444.0], [274.0, 6727.0], [273.0, 8456.0], [272.0, 6308.0], [283.0, 10302.0], [282.0, 10347.0], [281.0, 11064.0], [280.0, 7783.0], [279.0, 6372.0], [278.0, 8322.0], [277.0, 7819.0], [276.0, 11098.0], [291.0, 10273.5], [303.0, 10105.5], [301.0, 10156.5], [299.0, 6081.0], [298.0, 10172.25], [294.0, 7103.0], [293.0, 10254.0], [292.0, 10385.0], [289.0, 4673.0], [288.0, 6205.0], [318.0, 7755.0], [319.0, 7774.0], [317.0, 5915.0], [316.0, 7752.0], [315.0, 10522.5], [313.0, 7776.0], [312.0, 10590.0], [311.0, 6227.0], [305.0, 8080.0], [304.0, 7525.0], [307.0, 10054.0], [306.0, 12801.0], [310.0, 8603.0], [309.0, 6807.0], [308.0, 9918.0], [334.0, 7990.5], [335.0, 5517.0], [332.0, 5922.0], [323.0, 7694.0], [322.0, 10810.0], [321.0, 5738.0], [320.0, 10508.0], [331.0, 6542.0], [330.0, 5929.0], [329.0, 8513.0], [328.0, 10292.0], [327.0, 10326.0], [326.0, 6780.0], [325.0, 4118.0], [324.0, 10388.0], [350.0, 5503.0], [351.0, 6908.0], [349.0, 5469.0], [348.0, 6439.0], [347.0, 5580.0], [346.0, 5870.0], [345.0, 5870.0], [344.0, 5479.0], [343.0, 5880.0], [336.0, 10627.0], [339.0, 8064.0], [337.0, 6441.0], [342.0, 5875.0], [341.0, 5875.0], [340.0, 5433.0], [366.0, 3908.0], [367.0, 7436.0], [365.0, 6410.0], [364.0, 7415.0], [362.0, 3917.0], [361.0, 8125.0], [360.0, 5410.0], [359.0, 10550.0], [353.0, 10565.0], [355.0, 7447.0], [354.0, 10569.0], [358.0, 8422.0], [357.0, 7470.0], [356.0, 3824.0], [381.0, 5805.0], [382.0, 6395.0], [380.0, 5801.0], [371.0, 8414.0], [370.0, 5817.0], [369.0, 6911.0], [368.0, 5499.0], [379.0, 7522.0], [378.0, 5806.0], [377.0, 6399.0], [376.0, 6904.0], [375.0, 10526.0], [374.0, 5814.0], [373.0, 7462.0], [372.0, 6458.0], [398.0, 5730.0], [399.0, 5785.0], [397.0, 7396.0], [396.0, 7389.0], [395.0, 6174.5], [393.0, 5499.0], [392.0, 5793.0], [391.0, 6846.0], [385.0, 10148.0], [384.0, 5799.0], [390.0, 3882.0], [389.0, 6398.0], [388.0, 8002.333333333333], [414.0, 7356.0], [415.0, 6410.0], [413.0, 8374.0], [412.0, 7679.0], [410.0, 6324.0], [409.0, 10469.0], [408.0, 6310.0], [407.0, 10448.0], [401.0, 6346.0], [400.0, 10496.0], [403.0, 5414.0], [402.0, 10104.0], [406.0, 6375.0], [405.0, 3855.0], [404.0, 7405.0], [429.0, 5709.0], [431.0, 6373.0], [428.0, 5319.0], [427.0, 5820.5], [425.0, 7364.0], [424.0, 6379.0], [422.0, 10219.333333333334], [419.0, 8238.5], [417.0, 6842.0], [416.0, 5510.0], [434.0, 10422.0], [446.0, 5229.0], [445.0, 5913.0], [442.0, 6340.0], [441.0, 6777.0], [440.0, 8596.5], [438.0, 5697.0], [437.0, 6366.0], [436.0, 6576.0], [433.0, 5706.0], [432.0, 8953.0], [462.0, 10333.0], [463.0, 6304.0], [460.0, 7291.0], [451.0, 8683.5], [450.0, 8698.333333333334], [459.0, 10347.0], [458.0, 10354.5], [456.0, 6261.0], [455.0, 7373.0], [454.0, 8299.0], [453.0, 11500.0], [452.0, 10354.0], [478.0, 5184.0], [479.0, 7739.0], [477.0, 5979.0], [476.0, 5915.0], [475.0, 3276.0], [474.0, 8963.0], [473.0, 10056.0], [472.0, 8035.0], [471.0, 7820.0], [465.0, 13159.0], [464.0, 6664.0], [467.0, 5490.0], [466.0, 5536.0], [470.0, 5424.0], [469.0, 5054.0], [468.0, 9104.0], [494.0, 5025.0], [495.0, 10804.0], [493.0, 7658.0], [492.0, 6734.0], [491.0, 5058.0], [490.0, 4676.0], [489.0, 3186.0], [488.0, 12007.0], [487.0, 3103.0], [481.0, 6792.0], [480.0, 5154.0], [483.0, 3234.0], [482.0, 9858.0], [486.0, 11932.0], [485.0, 5676.0], [484.0, 5684.0], [510.0, 4574.0], [511.0, 5631.0], [509.0, 5028.0], [499.0, 11833.0], [498.0, 9671.0], [497.0, 4578.0], [496.0, 4980.0], [507.0, 10640.0], [506.0, 8511.0], [505.0, 6531.0], [504.0, 5913.0], [503.0, 6587.0], [502.0, 7532.0], [501.0, 5496.0], [500.0, 6580.0], [540.0, 4416.0], [542.0, 8418.0], [538.0, 4687.0], [518.0, 5473.0], [516.0, 6430.0], [514.0, 10675.0], [512.0, 5443.0], [534.0, 2876.0], [532.0, 4406.0], [530.0, 5357.0], [528.0, 2888.0], [526.0, 4586.0], [524.0, 2885.0], [522.0, 4810.0], [520.0, 6347.0], [572.0, 4365.0], [574.0, 4611.0], [570.0, 8259.5], [568.0, 5336.0], [566.0, 6471.0], [564.0, 7586.0], [562.0, 5086.0], [560.0, 2845.0], [558.0, 5500.333333333333], [546.0, 7783.0], [550.0, 7261.0], [548.0, 5871.0], [556.0, 5336.0], [554.0, 2750.0], [604.0, 4715.0], [606.0, 3527.5], [602.0, 4728.0], [600.0, 5583.5], [598.0, 6412.5], [596.0, 4731.0], [594.0, 5312.0], [592.0, 5805.5], [590.0, 6670.5], [582.0, 4594.0], [578.0, 5839.0], [588.0, 5309.0], [586.0, 6440.0], [584.0, 4699.0], [636.0, 7333.0], [638.0, 4252.0], [634.0, 4239.0], [632.0, 4630.0], [630.0, 6255.0], [628.0, 6280.0], [626.0, 11215.0], [624.0, 5255.0], [620.0, 10560.0], [614.0, 4713.0], [612.0, 5817.0], [618.0, 6251.0], [616.0, 6270.0], [664.0, 7243.0], [668.0, 5236.0], [670.0, 10448.0], [666.0, 8072.5], [662.0, 6305.666666666667], [658.0, 4394.0], [652.0, 6338.0], [642.0, 7308.0], [640.0, 5234.0], [646.0, 5742.0], [644.0, 5252.0], [650.0, 4195.0], [648.0, 6280.0], [700.0, 4129.0], [702.0, 4175.0], [698.0, 6249.0], [696.0, 2573.0], [692.0, 10403.0], [690.0, 10687.5], [688.0, 10413.0], [676.0, 7266.0], [674.0, 8536.0], [732.0, 3839.0], [734.0, 5216.0], [730.0, 4225.0], [728.0, 5863.0], [726.0, 10170.0], [724.0, 11032.0], [722.0, 10187.5], [720.0, 5461.0], [718.0, 4971.0], [706.0, 8199.0], [704.0, 9997.0], [710.0, 6151.0], [708.0, 10381.5], [716.0, 5529.0], [714.0, 2561.0], [712.0, 10280.0], [764.0, 3824.0], [766.0, 6488.0], [762.0, 4494.0], [760.0, 4528.0], [758.0, 4510.0], [756.0, 7298.0], [754.0, 3995.0], [752.0, 2074.0], [750.0, 4560.0], [738.0, 6665.0], [736.0, 4937.0], [742.0, 2148.0], [740.0, 5659.0], [748.0, 3606.0], [746.0, 4058.0], [744.0, 2050.0], [796.0, 3314.0], [798.0, 3531.0], [784.0, 4355.0], [786.0, 10929.0], [794.0, 6468.0], [768.0, 6396.0], [770.0, 6341.0], [772.0, 4365.0], [774.0, 7518.0], [782.0, 3765.0], [780.0, 3771.0], [778.0, 5489.0], [776.0, 4165.0], [790.0, 4810.0], [788.0, 3594.0], [824.0, 3721.5], [818.0, 3729.0], [816.0, 3736.0], [826.0, 1808.0], [806.0, 3744.0], [804.0, 3691.0], [802.0, 4813.0], [800.0, 5468.0], [812.0, 4833.0], [822.0, 3721.0], [820.0, 5350.5], [860.0, 4324.0], [862.0, 4374.0], [848.0, 5562.5], [852.0, 5446.333333333333], [850.0, 4802.0], [858.0, 7500.0], [856.0, 8027.0], [838.0, 3384.0], [834.0, 4821.5], [832.0, 4486.0], [840.0, 4803.0], [854.0, 4328.5], [888.0, 3681.0], [884.0, 6524.0], [882.0, 3258.0], [890.0, 1756.0], [870.0, 7264.0], [868.0, 7265.0], [866.0, 5059.0], [864.0, 4800.0], [876.0, 4310.0], [874.0, 4813.0], [872.0, 4254.0], [886.0, 1759.0], [922.0, 6948.0], [924.0, 4719.0], [912.0, 5294.0], [926.0, 3659.0], [920.0, 3624.0], [900.0, 3226.0], [910.0, 5060.666666666667], [906.0, 4928.666666666667], [904.0, 5564.0], [918.0, 5078.5], [954.0, 2456.0], [958.0, 6292.0], [944.0, 3258.0], [946.0, 11260.0], [948.0, 6315.0], [956.0, 1614.0], [952.0, 3221.0], [932.0, 6559.0], [930.0, 5045.0], [942.0, 5362.0], [940.0, 10532.0], [938.0, 3649.0], [936.0, 10454.0], [950.0, 4209.0], [988.0, 3599.0], [990.0, 4698.0], [976.0, 4701.0], [978.0, 5160.0], [980.0, 5878.0], [984.0, 3601.0], [966.0, 4199.0], [964.0, 6183.0], [962.0, 6195.0], [974.0, 3615.0], [972.0, 4192.0], [970.0, 5223.0], [982.0, 4218.0], [1018.0, 3905.0], [1016.0, 6247.0], [1022.0, 4649.0], [1008.0, 11200.0], [1010.0, 4130.0], [1020.0, 4167.5], [992.0, 4258.0], [996.0, 5304.0], [998.0, 6902.0], [1006.0, 3577.0], [1004.0, 4674.0], [1002.0, 4147.0], [1000.0, 6920.0], [1014.0, 7272.0], [1012.0, 8282.0], [1032.0, 7246.0], [1084.0, 5021.0], [1076.0, 3439.0], [1036.0, 3530.0], [1028.0, 5264.0], [1024.0, 4653.0], [1068.0, 10297.0], [1052.0, 3499.0], [1048.0, 6896.0], [1040.0, 1601.0], [1144.0, 1099.0], [1148.0, 1098.0], [1092.0, 7157.0], [1088.0, 10274.5], [1112.0, 1110.0], [1108.0, 4835.0], [1104.0, 7955.0], [1124.0, 2398.0], [1120.0, 1104.0], [1172.0, 6674.0], [1196.0, 1112.0], [1168.0, 1117.0], [1164.0, 3067.0], [1160.0, 1092.0], [1156.0, 1094.0], [1152.0, 1096.0], [1248.0, 1117.0], [1252.0, 1105.0], [1268.0, 1108.3333333333333], [1264.0, 1105.0], [1224.0, 1107.5], [1244.0, 1104.5], [1240.0, 1102.0], [1260.0, 1103.5], [1284.0, 1105.0], [1316.0, 1098.0], [1340.0, 1097.0], [1332.0, 1098.0], [1280.0, 1106.0], [1292.0, 1096.3333333333333], [1308.0, 1097.0], [1300.0, 1098.0], [1296.0, 1101.0], [1324.0, 1097.0], [1356.0, 1098.0], [1392.0, 1097.3333333333333], [1352.0, 1096.0], [1348.0, 1099.0], [1388.0, 1099.0], [1384.0, 1096.25], [1380.0, 1098.0], [1368.0, 1094.0], [1364.0, 1099.8461538461538], [1360.0, 1096.0], [1464.0, 2330.0], [1440.0, 4364.0], [1444.0, 6315.0], [1448.0, 6891.5], [1468.0, 4540.5], [1460.0, 2725.0], [1456.0, 3311.0], [1408.0, 1095.2857142857142], [1412.0, 4599.0], [1416.0, 2971.0], [1420.0, 4066.0], [1436.0, 6509.0], [1432.0, 4569.0], [1428.0, 3492.0], [1424.0, 5488.0], [1452.0, 3554.0], [1520.0, 2672.0], [1528.0, 2663.0], [1532.0, 5322.0], [1508.0, 4394.0], [1484.0, 6143.0], [1480.0, 3524.0], [1476.0, 3275.0], [1472.0, 3258.0], [1500.0, 2681.5], [1496.0, 2688.0], [1492.0, 4281.0], [1488.0, 4409.0], [1512.0, 5235.0], [1540.0, 7017.0], [1592.0, 4227.0], [1588.0, 5236.0], [1584.0, 5666.0], [1564.0, 6273.0], [1536.0, 5783.5], [1544.0, 5181.0], [1548.0, 4324.0], [1560.0, 5926.333333333333], [1556.0, 4475.333333333333], [1580.0, 4426.5], [1576.0, 5875.0], [1652.0, 6224.0], [1648.0, 5173.0], [1660.0, 3911.0], [1632.0, 2922.0], [1636.0, 5242.0], [1656.0, 3172.0], [1628.0, 3894.5], [1600.0, 5744.5], [1604.0, 4718.5], [1608.0, 3752.0], [1612.0, 3174.0], [1620.0, 3944.0], [1616.0, 6358.0], [1644.0, 6294.0], [1720.0, 3255.0], [1696.0, 3680.5], [1700.0, 5154.0], [1704.0, 3332.3333333333335], [1724.0, 3966.0], [1716.0, 4183.0], [1712.0, 6215.0], [1664.0, 5238.0], [1668.0, 2601.0], [1692.0, 3236.0], [1688.0, 10588.75], [1684.0, 8825.0], [1708.0, 2180.0], [1760.0, 6289.0], [1788.0, 6204.0], [1764.0, 3630.0], [1768.0, 6239.0], [1784.0, 4105.0], [1780.0, 2087.0], [1736.0, 4647.0], [1744.0, 5125.0], [1772.0, 4857.0], [1848.0, 3956.0], [1852.0, 2119.0], [1828.0, 6182.0], [1824.0, 2096.0], [1844.0, 4050.0], [1792.0, 8243.0], [1796.0, 6873.0], [1800.0, 4122.0], [1804.0, 10564.0], [1820.0, 6146.0], [1816.0, 4791.666666666667], [1812.0, 6824.0], [1808.0, 4075.5], [1836.0, 2451.0], [1832.0, 5131.0], [1912.0, 1590.0], [1892.0, 8782.833333333332], [1888.0, 1799.0], [1896.0, 4720.0], [1900.0, 4707.0], [1916.0, 3098.5], [1908.0, 5694.0], [1856.0, 2215.0], [1860.0, 4018.0], [1864.0, 4980.5], [1868.0, 2308.0], [1884.0, 1770.5], [1880.0, 1988.0], [1876.0, 3297.0], [1872.0, 4987.0], [1972.0, 6393.0], [1980.0, 2786.0], [1960.0, 7587.0], [1952.0, 2400.0], [1964.0, 1280.0], [1968.0, 2361.0], [1920.0, 4543.0], [1928.0, 2917.3333333333335], [1932.0, 3543.0], [1948.0, 4488.0], [1940.0, 2459.5], [2040.0, 3599.5], [2036.0, 1719.5], [2016.0, 2729.0], [2024.0, 1582.0], [2044.0, 3222.5], [1984.0, 5447.0], [1988.0, 7073.0], [1992.0, 4807.5], [1996.0, 2271.0], [2004.0, 5246.5], [2000.0, 1253.0], [2168.0, 1569.0], [2144.0, 4090.5], [2112.0, 3566.6666666666665], [2056.0, 2295.3333333333335], [2048.0, 1180.0], [2104.0, 4790.5], [2088.0, 3423.5], [2136.0, 2284.5], [2200.0, 2694.5], [2280.0, 2091.0], [2240.0, 3934.75], [2256.0, 3151.0], [2192.0, 4258.0], [2176.0, 3273.25], [2232.0, 2355.5], [2224.0, 1559.0], [2216.0, 1558.0], [2408.0, 1491.0], [2376.0, 1510.0], [2424.0, 1486.0], [2368.0, 1509.0], [2384.0, 1504.0], [2400.0, 3128.0], [2328.0, 2625.0], [2320.0, 3883.0], [2312.0, 1097.0], [2544.0, 1956.0], [2552.0, 5028.0], [2504.0, 2228.0], [2520.0, 5125.0], [2536.0, 2558.0], [2440.0, 1434.0], [2432.0, 1433.0], [2456.0, 4010.0], [2488.0, 4748.5], [2480.0, 2234.0], [2472.0, 4098.0], [2664.0, 3291.5], [2680.0, 3330.6666666666665], [2640.0, 3370.0], [2624.0, 4592.0], [2632.0, 3521.0], [2648.0, 2483.0], [2656.0, 3183.5], [2584.0, 1100.0], [2568.0, 1105.6666666666667], [2560.0, 1123.0], [2616.0, 3016.5], [2608.0, 2569.0], [2600.0, 1094.4], [2592.0, 1097.0], [2712.0, 2764.0], [2784.0, 2783.0], [2760.0, 2074.0], [2768.0, 2141.5], [2776.0, 2704.0], [2696.0, 3271.0], [2688.0, 5886.0], [2744.0, 2645.0], [2736.0, 1895.5], [2720.0, 1153.0], [2928.0, 2053.0], [2936.0, 2020.25], [2880.0, 4219.0], [2888.0, 2640.571428571429], [2904.0, 5243.0], [2912.0, 4064.0], [2824.0, 2998.0], [2832.0, 3522.6666666666665], [2872.0, 1570.0], [2856.0, 1617.5], [2848.0, 1265.0], [2944.0, 2086.0], [3000.0, 2352.7910001898326], [2952.0, 1090.0], [2960.0, 949.75], [2992.0, 1096.0], [2984.0, 4313.0], [2145.0, 4194.0], [2121.0, 4623.0], [2137.0, 7320.0], [2153.0, 3192.5], [2073.0, 1555.0], [2057.0, 3233.0], [2049.0, 5263.0], [2105.0, 2411.0], [2097.0, 3917.3333333333335], [2089.0, 1601.0], [2249.0, 2693.5], [2297.0, 2811.0], [2265.0, 1546.0], [2289.0, 5257.666666666667], [2233.0, 5387.5], [2217.0, 4904.25], [2209.0, 3523.75], [2425.0, 2040.0], [2369.0, 1786.0], [2377.0, 2088.0], [2385.0, 1091.0], [2417.0, 3823.5], [2329.0, 2321.5], [2321.0, 5306.0], [2305.0, 1532.0], [2361.0, 3673.0], [2345.0, 2856.0], [2337.0, 3163.0], [2537.0, 1929.0], [2545.0, 4025.0], [2521.0, 2086.0], [2553.0, 5006.0], [2529.0, 5565.0], [2433.0, 1480.0], [2441.0, 1285.5], [2449.0, 4368.0], [2457.0, 3138.0], [2473.0, 3734.0], [2681.0, 2805.0], [2633.0, 2400.0], [2641.0, 2432.0], [2649.0, 4054.0], [2657.0, 4229.0], [2577.0, 1102.0], [2561.0, 6969.0], [2617.0, 3071.0], [2609.0, 4110.5], [2593.0, 1099.0], [2793.0, 2135.0], [2753.0, 1096.0], [2761.0, 2963.5], [2769.0, 2571.0], [2809.0, 4849.333333333333], [2713.0, 1098.0], [2705.0, 1796.0], [2689.0, 5008.5], [2729.0, 1684.0], [2921.0, 5746.5], [2929.0, 3993.0], [2937.0, 3139.0], [2881.0, 3464.25], [2889.0, 2430.4], [2897.0, 2181.5], [2913.0, 1097.3333333333333], [2841.0, 1099.0], [2865.0, 1097.0], [2857.0, 1261.0], [2849.0, 2460.3333333333335], [2945.0, 2947.0], [2953.0, 3793.333333333333], [2993.0, 3713.5], [2961.0, 1307.5], [2969.0, 2030.0], [2985.0, 2918.0], [2977.0, 8089.0], [1073.0, 3152.3333333333335], [1085.0, 4023.0], [1033.0, 4545.0], [1029.0, 5086.0], [1025.0, 7265.0], [1053.0, 3241.0], [1049.0, 10417.0], [1069.0, 1544.0], [1065.0, 2453.0], [1057.0, 10451.0], [1093.0, 4438.0], [1137.0, 1099.5], [1121.0, 1103.0], [1141.0, 1099.0], [1089.0, 3124.0], [1097.0, 10111.0], [1101.0, 10109.666666666666], [1113.0, 1110.0], [1109.0, 4771.0], [1105.0, 4762.0], [1133.0, 1100.0], [1129.0, 1102.3333333333333], [1181.0, 1119.0], [1169.0, 3041.0], [1165.0, 3669.0], [1161.0, 1089.0], [1157.0, 1092.0], [1153.0, 1096.0], [1273.0, 1102.3333333333333], [1277.0, 1107.0], [1265.0, 1104.0], [1257.0, 1106.0], [1249.0, 1979.0000000000002], [1229.0, 3720.0], [1233.0, 2864.5], [1329.0, 1097.4], [1321.0, 1094.0], [1313.0, 1103.0], [1285.0, 1099.3333333333333], [1309.0, 1103.0], [1297.0, 1096.0], [1405.0, 1097.5], [1377.0, 1096.5], [1397.0, 1096.0], [1369.0, 1101.0], [1365.0, 1094.0], [1361.0, 1093.0], [1389.0, 1099.0], [1385.0, 1097.0], [1381.0, 1100.0], [1465.0, 5306.0], [1469.0, 3808.0], [1449.0, 2294.0], [1441.0, 2668.0], [1445.0, 10361.0], [1457.0, 8909.0], [1421.0, 4541.0], [1417.0, 3583.0], [1413.0, 1091.0], [1409.0, 1096.0], [1437.0, 2808.0], [1433.0, 2598.0], [1429.0, 4485.0], [1425.0, 4035.0], [1453.0, 5384.0], [1529.0, 3215.0], [1533.0, 2664.0], [1505.0, 3930.5], [1509.0, 2244.0], [1525.0, 3833.5], [1473.0, 6422.0], [1477.0, 4307.0], [1501.0, 2682.0], [1497.0, 4402.0], [1489.0, 10757.0], [1513.0, 3775.0], [1541.0, 10273.0], [1597.0, 3719.0], [1589.0, 6662.5], [1581.0, 4201.0], [1573.0, 5548.0], [1537.0, 4915.0], [1545.0, 4323.0], [1549.0, 10943.0], [1561.0, 2652.0], [1557.0, 3273.0], [1553.0, 2658.0], [1613.0, 6148.0], [1657.0, 2602.0], [1653.0, 2172.0], [1649.0, 5779.0], [1601.0, 6321.0], [1625.0, 5243.333333333333], [1621.0, 6234.0], [1617.0, 6452.0], [1645.0, 2612.0], [1641.0, 2283.0], [1717.0, 3128.0], [1725.0, 2570.0], [1705.0, 2498.0], [1697.0, 9517.0], [1701.0, 3165.0], [1713.0, 6316.0], [1677.0, 10209.0], [1673.0, 10221.0], [1669.0, 8407.0], [1693.0, 5300.0], [1689.0, 6314.0], [1709.0, 2136.0], [1785.0, 4104.0], [1789.0, 5149.0], [1765.0, 6261.0], [1769.0, 4072.0], [1781.0, 6253.0], [1777.0, 2869.3333333333335], [1737.0, 3162.0], [1733.0, 3009.0], [1729.0, 8338.5], [1749.0, 3249.5], [1745.0, 6251.0], [1773.0, 2533.0], [1841.0, 4365.5], [1853.0, 3509.0], [1829.0, 2463.0], [1849.0, 3072.0], [1801.0, 7048.0], [1797.0, 2106.0], [1821.0, 4369.0], [1817.0, 5131.0], [1813.0, 4102.0], [1809.0, 3595.0], [1909.0, 4730.0], [1893.0, 2672.0], [1917.0, 3498.0], [1913.0, 5728.0], [1905.0, 39.5], [1857.0, 5732.0], [1861.0, 2365.0], [1865.0, 3440.0], [1869.0, 9147.0], [1881.0, 1716.0], [1877.0, 3741.0], [1873.0, 1772.0], [1977.0, 4897.5], [1981.0, 2147.5], [1953.0, 1838.0], [1957.0, 2453.0], [1961.0, 3420.0], [1965.0, 2273.0], [1973.0, 2213.0], [1969.0, 3270.0], [1921.0, 4489.0], [1929.0, 4622.0], [1933.0, 3028.0], [1949.0, 1458.0], [1945.0, 5123.0], [1937.0, 2466.0], [2041.0, 3232.0], [2017.0, 4316.0], [2025.0, 3685.5], [2029.0, 3190.0], [2033.0, 4039.0], [1985.0, 5286.0], [1989.0, 4354.0], [1993.0, 5368.0], [1997.0, 4251.0], [2005.0, 5380.0], [2001.0, 2670.0], [2066.0, 4073.0], [2114.0, 2752.5], [2130.0, 2819.5], [2146.0, 1135.0], [2058.0, 2267.0], [2050.0, 1164.0], [2106.0, 1548.0], [2098.0, 2145.0], [2290.0, 2113.0], [2282.0, 2651.5], [2250.0, 1550.0], [2258.0, 2231.0], [2274.0, 1789.6666666666667], [2194.0, 1568.5], [2218.0, 2170.0], [2266.0, 2639.0], [2426.0, 1287.5], [2370.0, 3127.0], [2378.0, 1303.5], [2386.0, 1502.0], [2394.0, 2043.6666666666667], [2418.0, 3038.5], [2402.0, 1818.0], [2314.0, 5362.0], [2306.0, 3720.5], [2354.0, 3121.0], [2338.0, 3983.0], [2554.0, 4931.0], [2498.0, 3543.5], [2506.0, 1988.0], [2514.0, 1743.5], [2522.0, 3577.0], [2546.0, 1308.0], [2530.0, 5760.0], [2450.0, 1427.0], [2434.0, 1479.0], [2490.0, 5676.5], [2466.0, 2552.5], [2674.0, 2235.2], [2626.0, 3076.3333333333335], [2642.0, 2610.0], [2650.0, 3744.0], [2682.0, 4177.0], [2666.0, 2561.0], [2658.0, 3169.0], [2578.0, 1101.6666666666667], [2562.0, 1118.0], [2618.0, 3529.0], [2610.0, 5663.0], [2602.0, 1984.3333333333333], [2594.0, 1101.0], [2802.0, 2931.3333333333335], [2754.0, 1346.2], [2770.0, 1947.0], [2810.0, 2851.6666666666665], [2714.0, 4290.0], [2706.0, 4609.5], [2698.0, 4017.0], [2690.0, 1218.0], [2738.0, 2454.75], [2730.0, 1101.0], [2722.0, 1576.4], [2938.0, 2002.25], [2882.0, 2143.0], [2898.0, 2454.0], [2906.0, 3153.0], [2922.0, 1262.0], [2866.0, 4186.0], [2946.0, 1097.0], [2962.0, 2071.0], [2970.0, 1097.0], [2147.0, 1576.0], [2163.0, 2869.25], [2131.0, 1558.6666666666667], [2139.0, 3692.5], [2075.0, 2695.5], [2067.0, 2977.25], [2107.0, 6308.0], [2099.0, 1212.0], [2091.0, 3435.25], [2083.0, 2186.0], [2299.0, 1539.0], [2251.0, 4273.0], [2243.0, 2208.2], [2259.0, 1655.0], [2275.0, 2173.0], [2179.0, 3298.0], [2235.0, 4676.0], [2227.0, 3689.6666666666665], [2211.0, 2372.5], [2371.0, 1090.0], [2379.0, 3089.0], [2315.0, 1883.5], [2355.0, 5884.0], [2347.0, 1594.0], [2547.0, 2249.0], [2555.0, 1256.0], [2499.0, 2994.0], [2515.0, 4093.666666666667], [2523.0, 2716.5], [2539.0, 2811.3333333333335], [2531.0, 2681.5], [2435.0, 3193.0], [2443.0, 2886.0], [2451.0, 1096.0], [2459.0, 2787.3333333333335], [2491.0, 4076.75], [2483.0, 5071.0], [2475.0, 5193.0], [2467.0, 2105.0], [2667.0, 2811.6666666666665], [2683.0, 5872.5], [2627.0, 2479.0], [2635.0, 2960.5], [2643.0, 4201.0], [2651.0, 1824.5], [2587.0, 1100.3333333333333], [2579.0, 1101.0], [2571.0, 1103.0], [2563.0, 1108.5], [2611.0, 4642.0], [2603.0, 3698.0], [2595.0, 1100.0], [2803.0, 1100.0], [2811.0, 1957.0], [2771.0, 1111.0], [2779.0, 3463.75], [2795.0, 1761.6666666666665], [2787.0, 1364.5], [2715.0, 2618.0], [2699.0, 1183.5], [2747.0, 2839.3333333333335], [2723.0, 1108.5], [2899.0, 3053.0], [2939.0, 2134.5], [2907.0, 5104.571428571428], [2931.0, 4523.5], [2827.0, 3735.0], [2835.0, 2856.3333333333335], [2875.0, 3738.666666666667], [2955.0, 4121.0], [2947.0, 4855.333333333333], [2963.0, 39.0], [2971.0, 2141.0], [2995.0, 1843.0], [2979.0, 1922.0], [541.0, 5386.0], [543.0, 7429.0], [539.0, 4781.0], [537.0, 6775.5], [535.0, 7106.0], [533.0, 6475.0], [531.0, 4794.0], [529.0, 5369.0], [527.0, 5378.0], [513.0, 2904.0], [519.0, 5423.0], [517.0, 5373.0], [525.0, 5378.0], [523.0, 6344.0], [521.0, 5914.0], [551.0, 7395.0], [575.0, 7439.0], [571.0, 4361.0], [567.0, 4350.0], [565.0, 5852.0], [563.0, 7335.0], [559.0, 4763.0], [553.0, 5882.5], [549.0, 6330.0], [547.0, 5867.0], [545.0, 4777.0], [603.0, 5816.0], [601.0, 6993.0], [595.0, 4732.5], [587.0, 4736.0], [585.0, 7379.0], [583.0, 5413.0], [579.0, 6318.0], [577.0, 4115.0], [637.0, 7309.0], [639.0, 4334.0], [635.0, 5238.0], [633.0, 4635.0], [631.0, 4679.0], [629.0, 6402.0], [627.0, 6326.0], [625.0, 7031.0], [623.0, 5843.5], [611.0, 10447.0], [609.0, 7393.666666666667], [615.0, 5255.0], [613.0, 9427.0], [621.0, 9418.0], [619.0, 4698.0], [617.0, 7283.0], [647.0, 5204.0], [671.0, 10339.0], [669.0, 2597.0], [645.0, 4651.0], [643.0, 5263.0], [641.0, 2738.0], [663.0, 7157.0], [659.0, 10044.0], [657.0, 6186.5], [655.0, 7211.5], [653.0, 4640.0], [651.0, 4223.0], [649.0, 6275.0], [701.0, 2552.0], [703.0, 2639.0], [699.0, 7259.0], [697.0, 4214.0], [695.0, 6971.0], [693.0, 7368.0], [691.0, 5227.0], [687.0, 7825.0], [675.0, 4613.0], [679.0, 7790.0], [677.0, 7216.0], [685.0, 8579.0], [683.0, 9711.333333333334], [733.0, 2197.0], [735.0, 6833.0], [731.0, 6704.0], [729.0, 4225.0], [727.0, 10067.0], [725.0, 8005.0], [723.0, 4316.0], [719.0, 4368.0], [705.0, 4552.0], [711.0, 10291.0], [709.0, 6230.0], [717.0, 8146.0], [715.0, 5200.0], [713.0, 5017.0], [765.0, 7159.0], [767.0, 3757.0], [763.0, 3835.0], [761.0, 6548.0], [759.0, 5486.0], [757.0, 4614.0], [755.0, 2058.0], [753.0, 6665.0], [751.0, 4654.0], [739.0, 4038.0], [737.0, 4091.0], [743.0, 4015.0], [741.0, 4685.0], [749.0, 4029.0], [747.0, 5140.0], [745.0, 2049.0], [793.0, 5375.0], [799.0, 4311.0], [785.0, 6483.0], [795.0, 6095.0], [783.0, 3716.0], [769.0, 4352.0], [771.0, 9605.0], [773.0, 5343.0], [781.0, 4866.0], [779.0, 3772.0], [777.0, 3774.0], [791.0, 6514.0], [789.0, 5433.0], [807.0, 3741.0], [825.0, 1703.0], [827.0, 4316.0], [829.0, 2501.0], [817.0, 6123.0], [805.0, 10506.0], [803.0, 4306.0], [815.0, 4040.0], [813.0, 4827.0], [811.0, 4658.25], [821.0, 4303.0], [839.0, 3716.0], [857.0, 4338.0], [863.0, 5641.0], [859.0, 4326.0], [837.0, 8633.5], [835.0, 7510.0], [847.0, 7360.0], [845.0, 4274.5], [843.0, 8631.0], [841.0, 3673.0], [855.0, 1775.0], [889.0, 4778.0], [893.0, 5935.0], [895.0, 4517.0], [881.0, 2557.5], [883.0, 4786.0], [871.0, 4275.0], [869.0, 5413.0], [867.0, 6328.0], [879.0, 4350.0], [877.0, 4793.0], [875.0, 11305.0], [887.0, 7026.0], [885.0, 1756.0], [925.0, 3660.0], [927.0, 4200.0], [917.0, 6068.0], [915.0, 5638.666666666667], [923.0, 3660.0], [921.0, 6315.0], [911.0, 6304.0], [899.0, 6313.5], [897.0, 7895.5], [901.0, 5306.0], [907.0, 5256.0], [919.0, 5254.0], [957.0, 11242.0], [959.0, 3195.0], [945.0, 10501.0], [947.0, 4739.0], [949.0, 1711.0], [955.0, 6285.0], [935.0, 5623.5], [933.0, 3270.0], [929.0, 5353.0], [943.0, 7273.0], [941.0, 4293.0], [939.0, 3949.0], [951.0, 4733.0], [987.0, 5860.0], [985.0, 4242.0], [991.0, 6326.0], [977.0, 10535.0], [979.0, 7301.0], [981.0, 3204.0], [989.0, 4222.0], [967.0, 3617.0], [965.0, 4713.0], [963.0, 4352.0], [961.0, 4933.5], [975.0, 10119.0], [973.0, 3191.0], [971.0, 6845.0], [969.0, 3810.5], [983.0, 10070.0], [1021.0, 6205.0], [1023.0, 7324.0], [1009.0, 1657.0], [1011.0, 6304.0], [1007.0, 4638.0], [995.0, 4479.5], [993.0, 3589.0], [997.0, 3584.0], [999.0, 3536.0], [1005.0, 5858.0], [1003.0, 7081.0], [1001.0, 1564.0], [1015.0, 11186.0], [1013.0, 7219.0], [1038.0, 5575.5], [1086.0, 3362.0], [1082.0, 10263.666666666666], [1074.0, 6094.0], [1034.0, 10403.0], [1030.0, 8256.0], [1070.0, 1555.0], [1062.0, 10404.8], [1050.0, 3509.0], [1046.0, 10386.0], [1042.0, 3346.0], [1102.0, 3865.0], [1150.0, 1097.0], [1146.0, 1099.0], [1142.0, 1911.0], [1098.0, 8646.0], [1094.0, 10097.0], [1090.0, 1464.0], [1118.0, 1102.0], [1114.0, 1108.0], [1110.0, 1120.0], [1106.0, 4789.0], [1126.0, 1102.0], [1122.0, 1103.0], [1214.0, 1105.0], [1166.0, 5664.0], [1194.0, 3038.0], [1170.0, 1132.0], [1162.0, 5769.0], [1158.0, 1095.0], [1154.0, 1097.0], [1266.0, 1102.0], [1254.0, 1104.0], [1270.0, 1099.5], [1278.0, 1107.0], [1230.0, 1105.0], [1218.0, 1107.0], [1246.0, 1107.5], [1238.0, 1108.5], [1234.0, 1102.5], [1262.0, 1108.5], [1258.0, 1101.0], [1334.0, 1093.0], [1338.0, 1097.0], [1310.0, 1101.5], [1282.0, 1102.0], [1290.0, 3446.0], [1294.0, 1099.0], [1306.0, 1100.5], [1326.0, 1098.0], [1322.0, 1098.0], [1314.0, 1096.0], [1350.0, 1103.0], [1402.0, 4548.0], [1358.0, 1092.0], [1354.0, 1101.0], [1346.0, 1103.0], [1386.0, 1097.0], [1374.0, 1101.0], [1370.0, 1094.0], [1366.0, 1105.0], [1466.0, 4275.0], [1470.0, 2279.0], [1442.0, 4354.0], [1446.0, 6373.0], [1450.0, 2739.0], [1462.0, 6241.5], [1458.0, 4351.0], [1438.0, 5463.0], [1410.0, 1093.0], [1418.0, 10137.0], [1422.0, 2529.0], [1434.0, 3967.0], [1430.0, 6606.0], [1426.0, 6506.0], [1454.0, 2733.0], [1522.0, 3219.0], [1510.0, 5230.0], [1506.0, 2678.0], [1526.0, 3309.0], [1486.0, 3783.0], [1482.0, 6169.0], [1478.0, 4416.0], [1502.0, 5002.0], [1498.0, 3783.0], [1494.0, 3542.5], [1490.0, 2690.0], [1518.0, 2299.0], [1514.0, 3293.0], [1590.0, 6373.0], [1594.0, 4706.5], [1586.0, 2633.5], [1542.0, 5019.0], [1550.0, 7018.0], [1562.0, 2652.0], [1554.0, 3788.5], [1574.0, 5239.0], [1570.0, 5204.0], [1662.0, 3695.0], [1634.0, 5704.5], [1654.0, 4162.0], [1602.0, 2229.0], [1606.0, 2899.0], [1610.0, 4232.0], [1614.0, 5332.0], [1622.0, 5163.0], [1618.0, 5924.0], [1646.0, 5157.0], [1642.0, 5152.0], [1638.0, 4555.333333333333], [1722.0, 3302.6666666666665], [1726.0, 6513.0], [1698.0, 6347.0], [1706.0, 4296.0], [1718.0, 2145.0], [1714.0, 10628.0], [1694.0, 5156.0], [1666.0, 4227.0], [1674.0, 10217.0], [1690.0, 2593.0], [1686.0, 10214.0], [1710.0, 6288.0], [1786.0, 4135.0], [1790.0, 2517.0], [1766.0, 4256.0], [1770.0, 5117.0], [1782.0, 2524.0], [1778.0, 6268.0], [1742.0, 2920.3333333333335], [1738.0, 2520.0], [1730.0, 6255.0], [1758.0, 3689.6666666666665], [1774.0, 4195.0], [1802.0, 2504.0], [1842.0, 3132.0], [1850.0, 3511.0], [1846.0, 4630.5], [1822.0, 2480.0], [1794.0, 4123.0], [1798.0, 2128.0], [1806.0, 3358.0], [1818.0, 6762.0], [1810.0, 2108.0], [1834.0, 2603.0], [1830.0, 5066.0], [1910.0, 3719.0], [1894.0, 4739.0], [1902.0, 2354.0], [1914.0, 3061.0], [1906.0, 4647.0], [1858.0, 5155.0], [1862.0, 4871.0], [1866.0, 3868.0], [1870.0, 4941.0], [1878.0, 10196.0], [1874.0, 10250.0], [1982.0, 3266.0], [1954.0, 4504.0], [1958.0, 2426.0], [1962.0, 4511.0], [1966.0, 6071.0], [1978.0, 2917.5], [1922.0, 2276.5], [1926.0, 1206.3333333333335], [1930.0, 4733.0], [1934.0, 2538.0], [1950.0, 5598.0], [1942.0, 3481.0], [1938.0, 4494.0], [2038.0, 1903.5], [2042.0, 2716.0], [2018.0, 9920.0], [2026.0, 2227.0], [2030.0, 3222.5], [1986.0, 2283.0], [1990.0, 4048.0], [1994.0, 6019.0], [1998.0, 6016.0], [2014.0, 3545.3333333333335], [2010.0, 3780.75], [2006.0, 2499.0], [2002.0, 3251.0], [2076.0, 3241.0], [2132.0, 5962.0], [2068.0, 1702.0], [2060.0, 3936.5], [2052.0, 1401.0], [2108.0, 1255.0], [2084.0, 2875.0], [2140.0, 1580.0], [2292.0, 2139.5], [2260.0, 1099.0], [2204.0, 4689.75], [2188.0, 2545.6], [2180.0, 4182.0], [2228.0, 1158.0], [2220.0, 3695.0], [2412.0, 3735.0], [2404.0, 3463.0], [2380.0, 1511.0], [2396.0, 4466.0], [2428.0, 4175.0], [2420.0, 6032.0], [2332.0, 5308.0], [2324.0, 8697.0], [2308.0, 2718.0], [2364.0, 2051.6], [2348.0, 1517.0], [2340.0, 3603.0], [2556.0, 3874.0], [2548.0, 1874.0], [2500.0, 1093.0], [2508.0, 2889.0], [2516.0, 2513.0], [2524.0, 5027.0], [2540.0, 3306.0], [2532.0, 3565.0], [2444.0, 4073.0], [2452.0, 5219.0], [2460.0, 5484.0], [2492.0, 3006.0], [2484.0, 1100.0], [2676.0, 2956.4], [2628.0, 5595.0], [2636.0, 3516.0], [2644.0, 4283.5], [2652.0, 1324.0], [2684.0, 1131.0], [2668.0, 1176.0], [2660.0, 3098.0], [2588.0, 1100.0], [2572.0, 1106.0], [2620.0, 4263.0], [2612.0, 5308.0], [2604.0, 2623.0], [2596.0, 1096.0], [2716.0, 4182.0], [2756.0, 2238.5], [2764.0, 1814.6666666666667], [2772.0, 2006.0], [2780.0, 1364.0], [2804.0, 1666.5], [2700.0, 1679.0], [2692.0, 1184.0], [2748.0, 2690.0], [2724.0, 3187.5], [2892.0, 4073.5000000000005], [2908.0, 3113.0], [2916.0, 2440.3333333333335], [2820.0, 4039.7142857142853], [2868.0, 2868.0], [2860.0, 1120.5], [2852.0, 2643.6], [2948.0, 4049.0], [2964.0, 2609.0], [2972.0, 808.6666666666666], [2996.0, 6296.0], [2988.0, 1927.0], [2980.0, 2659.5], [2165.0, 1569.0], [2117.0, 2258.0], [2125.0, 3434.6666666666665], [2141.0, 4154.0], [2157.0, 3819.5], [2149.0, 1657.0], [2069.0, 1226.0], [2061.0, 1555.0], [2109.0, 3948.5], [2085.0, 4208.5], [2285.0, 3381.333333333333], [2261.0, 1097.0], [2269.0, 3773.75], [2293.0, 8237.0], [2277.0, 2869.5], [2189.0, 1130.0], [2197.0, 5133.0], [2229.0, 3271.0], [2373.0, 4411.75], [2429.0, 4127.0], [2389.0, 6006.333333333333], [2325.0, 6245.0], [2317.0, 1310.0], [2349.0, 1131.0], [2397.0, 4523.5], [2549.0, 5150.5], [2557.0, 4227.6], [2501.0, 8283.0], [2509.0, 4115.0], [2517.0, 2194.0], [2525.0, 3239.5], [2541.0, 2694.5], [2533.0, 3688.5], [2445.0, 1474.0], [2453.0, 2859.0], [2461.0, 3984.0], [2469.0, 5859.333333333333], [2669.0, 3288.0], [2677.0, 2521.0], [2629.0, 2483.0], [2637.0, 2476.0], [2645.0, 5482.0], [2653.0, 7202.0], [2589.0, 1098.5], [2573.0, 1104.0], [2565.0, 1107.0], [2621.0, 5625.0], [2613.0, 2023.0], [2605.0, 2615.0], [2813.0, 3826.0], [2757.0, 2142.0], [2765.0, 3094.0], [2781.0, 4184.5], [2717.0, 4756.0], [2709.0, 3803.5], [2693.0, 1644.0], [2749.0, 1227.0], [2741.0, 2715.5], [2733.0, 2228.6666666666665], [2725.0, 2397.0], [2917.0, 2410.2], [2925.0, 2792.0], [2885.0, 3157.0], [2893.0, 2147.0], [2901.0, 3672.6666666666665], [2909.0, 3053.0], [2829.0, 1670.3333333333333], [2837.0, 3237.5], [2845.0, 2208.5], [2877.0, 4425.5], [2853.0, 3159.5], [2957.0, 2432.6666666666665], [2989.0, 6228.0], [2981.0, 2621.0], [1039.0, 3517.0], [1083.0, 5088.0], [1079.0, 7336.0], [1075.0, 6041.0], [1035.0, 10393.0], [1031.0, 5090.0], [1027.0, 3817.0], [1055.0, 10423.0], [1051.0, 4101.0], [1047.0, 4338.0], [1043.0, 3519.0], [1063.0, 4592.0], [1139.0, 1100.0], [1147.0, 1098.0], [1151.0, 1095.0], [1143.0, 1096.0], [1119.0, 1102.0], [1091.0, 6989.0], [1095.0, 10208.0], [1103.0, 10381.0], [1115.0, 1106.0], [1111.0, 1111.0], [1107.0, 3112.0], [1135.0, 1100.0], [1131.0, 1099.5], [1163.0, 1140.0], [1191.0, 1115.0], [1171.0, 1118.0], [1167.0, 3052.0], [1159.0, 1093.0], [1155.0, 1096.0], [1275.0, 1103.0], [1279.0, 1103.0], [1267.0, 1110.0], [1247.0, 1103.0], [1227.0, 1750.0], [1243.0, 1547.9999999999998], [1235.0, 1106.0], [1295.0, 4657.0], [1335.0, 1102.0], [1343.0, 1101.5], [1331.0, 1101.0], [1319.0, 1099.5], [1311.0, 1101.0], [1287.0, 1098.5], [1307.0, 1105.0], [1303.0, 1097.0], [1299.0, 1102.0], [1355.0, 1613.6], [1383.0, 1099.0], [1403.0, 1097.0], [1395.0, 1097.5], [1375.0, 1096.5], [1351.0, 1096.5], [1371.0, 1094.0], [1367.0, 1100.0], [1391.0, 1098.0], [1379.0, 1096.0], [1423.0, 2525.0], [1471.0, 5303.0], [1443.0, 6506.0], [1463.0, 6062.0], [1419.0, 10060.0], [1415.0, 4170.5], [1411.0, 1093.0], [1439.0, 7537.0], [1435.0, 2445.0], [1431.0, 2911.0], [1427.0, 5632.0], [1455.0, 5095.0], [1451.0, 4330.0], [1523.0, 6450.0], [1531.0, 3006.5], [1507.0, 4248.0], [1527.0, 4968.0], [1503.0, 4337.0], [1475.0, 4837.0], [1487.0, 3878.5], [1483.0, 6431.0], [1495.0, 4323.0], [1491.0, 2308.0], [1519.0, 2672.0], [1515.0, 5259.0], [1511.0, 3255.0], [1599.0, 4236.0], [1591.0, 2235.0], [1575.0, 3215.0], [1571.0, 5210.0], [1567.0, 3986.0], [1539.0, 10276.5], [1543.0, 6367.0], [1547.0, 4072.5], [1563.0, 7363.0], [1655.0, 2296.0], [1663.0, 5004.5], [1651.0, 8147.0], [1631.0, 4355.666666666667], [1611.0, 5317.0], [1615.0, 5174.0], [1643.0, 4834.666666666667], [1675.0, 2146.0], [1727.0, 2188.0], [1699.0, 2585.0], [1715.0, 2577.0], [1671.0, 4143.0], [1667.0, 3202.0], [1691.0, 5292.0], [1683.0, 3686.5], [1711.0, 2536.0], [1707.0, 9457.0], [1779.0, 6305.0], [1791.0, 10560.0], [1763.0, 4157.666666666667], [1767.0, 9406.0], [1783.0, 3612.0], [1743.0, 3325.0], [1739.0, 4194.0], [1735.0, 4129.0], [1759.0, 5235.0], [1755.0, 4352.833333333334], [1747.0, 3676.0], [1771.0, 6155.0], [1847.0, 9603.0], [1855.0, 7624.0], [1827.0, 6110.666666666667], [1851.0, 9587.0], [1843.0, 3978.0], [1803.0, 2500.0], [1795.0, 6876.0], [1823.0, 6217.0], [1811.0, 7207.0], [1839.0, 3982.0], [1835.0, 2461.0], [1915.0, 2592.0], [1907.0, 2735.0], [1919.0, 3325.333333333333], [1895.0, 10159.0], [1899.0, 10221.666666666666], [1903.0, 40.0], [1911.0, 2669.0], [1887.0, 5947.5], [1859.0, 2382.0], [1867.0, 10345.0], [1871.0, 1862.0], [1879.0, 1727.0], [1875.0, 4655.0], [1975.0, 2001.0], [1983.0, 8542.0], [1955.0, 4422.0], [1959.0, 4390.0], [1963.0, 4927.0], [1967.0, 3374.0], [1971.0, 3593.5], [1951.0, 3492.0], [1923.0, 4598.0], [1931.0, 1935.0], [1935.0, 1919.0], [1947.0, 1483.0], [1943.0, 4388.0], [2035.0, 3232.5], [2019.0, 2721.0], [2047.0, 2363.0], [2023.0, 3598.2], [2031.0, 3472.0], [2043.0, 1615.0], [2015.0, 6002.0], [1987.0, 2257.0], [1991.0, 4308.0], [1995.0, 4304.0], [1999.0, 3197.0], [2011.0, 1595.0], [2007.0, 5255.0], [2078.0, 3430.5], [2134.0, 3422.5], [2174.0, 4181.0], [2166.0, 7502.0], [2070.0, 3193.0], [2062.0, 4137.0], [2054.0, 3821.0], [2110.0, 5275.0], [2102.0, 6839.666666666667], [2094.0, 4292.666666666667], [2086.0, 5350.0], [2142.0, 2345.5], [2246.0, 3872.0], [2254.0, 1521.5], [2206.0, 3643.0], [2182.0, 3752.0], [2230.0, 7413.0], [2270.0, 1101.0], [2262.0, 4824.0], [2406.0, 1898.3333333333333], [2414.0, 1489.5], [2430.0, 6042.5], [2374.0, 9563.0], [2382.0, 1794.3333333333333], [2334.0, 2338.0], [2318.0, 2081.5], [2310.0, 3206.0], [2358.0, 2699.75], [2350.0, 1100.0], [2342.0, 2097.5], [2550.0, 5027.0], [2558.0, 1182.0], [2502.0, 3221.5], [2510.0, 7118.0], [2518.0, 1699.0], [2526.0, 1959.0], [2542.0, 2715.0], [2534.0, 1744.5], [2446.0, 2008.0], [2438.0, 3826.3333333333335], [2494.0, 2029.0], [2486.0, 2568.0], [2478.0, 2550.0], [2470.0, 1118.0], [2686.0, 3323.5], [2630.0, 4489.0], [2638.0, 2860.0], [2646.0, 2880.5], [2654.0, 2310.0], [2670.0, 2731.6666666666665], [2662.0, 6035.333333333333], [2590.0, 1099.25], [2582.0, 1100.0], [2574.0, 1103.0], [2622.0, 5616.0], [2614.0, 3536.0], [2606.0, 5043.0], [2598.0, 1097.0], [2806.0, 1107.0], [2790.0, 2855.142857142857], [2758.0, 1106.0], [2766.0, 2134.0], [2774.0, 3242.3333333333335], [2814.0, 4147.0], [2718.0, 2181.0], [2710.0, 2167.75], [2702.0, 3401.4], [2694.0, 4266.0], [2750.0, 1718.6], [2742.0, 3524.5], [2838.0, 3310.0], [2934.0, 3157.5], [2942.0, 3151.0], [2918.0, 5204.0], [2878.0, 4172.0], [2822.0, 3093.0], [2830.0, 3117.0], [2846.0, 3445.8571428571427], [2870.0, 3880.6666666666665], [2862.0, 3677.0000000000005], [2950.0, 2350.0], [2958.0, 2021.0], [2974.0, 2564.333333333333], [2982.0, 3084.0], [2159.0, 2091.5], [2151.0, 6813.5], [2175.0, 1397.5], [2119.0, 3001.333333333333], [2127.0, 4728.5], [2167.0, 3753.5], [2079.0, 2714.0], [2071.0, 2659.0], [2087.0, 4245.0], [2303.0, 1277.0], [2295.0, 3119.0], [2247.0, 2653.0], [2255.0, 4780.5], [2263.0, 4221.0], [2271.0, 5710.0], [2279.0, 1544.0], [2239.0, 1554.0], [2183.0, 1123.0], [2191.0, 1563.0], [2207.0, 1455.0], [2223.0, 4035.3333333333335], [2215.0, 1561.0], [2423.0, 2905.0], [2431.0, 2086.0], [2375.0, 1099.0], [2383.0, 5231.0], [2391.0, 2348.5], [2415.0, 1496.0], [2407.0, 7258.0], [2327.0, 2697.0], [2367.0, 3613.5], [2351.0, 5200.0], [2399.0, 1300.0], [2551.0, 2009.3333333333333], [2559.0, 5306.0], [2503.0, 1434.0], [2511.0, 1435.0], [2519.0, 6133.0], [2527.0, 1369.0], [2543.0, 3653.5], [2535.0, 1393.0], [2495.0, 1422.5], [2439.0, 1145.0], [2447.0, 2641.5], [2455.0, 5170.5], [2471.0, 5261.0], [2687.0, 6344.0], [2671.0, 3898.0], [2631.0, 3526.5], [2639.0, 5530.0], [2647.0, 1890.0], [2655.0, 2928.0], [2663.0, 5002.0], [2591.0, 1097.5], [2575.0, 1101.0], [2623.0, 4193.0], [2615.0, 2562.5], [2607.0, 2051.0], [2599.0, 1097.0], [2799.0, 2627.4], [2815.0, 1098.3333333333333], [2767.0, 3698.0], [2775.0, 2636.6], [2783.0, 1944.0], [2807.0, 3751.0], [2711.0, 5279.0], [2695.0, 3628.0], [2751.0, 4201.0], [2743.0, 1099.0], [2727.0, 3508.6666666666665], [2927.0, 4257.4], [2895.0, 4357.0], [2903.0, 4750.5], [2911.0, 2263.0], [2823.0, 3354.0], [2839.0, 3228.0], [2871.0, 4244.0], [2863.0, 2078.0], [2855.0, 3569.0], [2959.0, 1914.4], [2967.0, 2339.6666666666665], [2975.0, 7642.0], [2991.0, 3695.6], [1.0, 14089.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2980.763860113325, 2382.5849662597557]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1840.6166666666666, "minX": 1.68420462E12, "maxY": 596477.4666666667, "series": [{"data": [[1.68420462E12, 467178.93333333335], [1.68420492E12, 1840.6166666666666], [1.68420474E12, 578067.1333333333], [1.68420486E12, 417997.5], [1.68420468E12, 596477.4666666667], [1.6842048E12, 493063.9166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68420462E12, 348316.4], [1.68420492E12, 1891.45], [1.68420474E12, 506157.45], [1.68420486E12, 357755.55], [1.68420468E12, 518157.75], [1.6842048E12, 434481.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420492E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1934.5288591722472, "minX": 1.68420462E12, "maxY": 10075.693779904299, "series": [{"data": [[1.68420462E12, 2191.4795972711713], [1.68420492E12, 10075.693779904299], [1.68420474E12, 2955.4958250639133], [1.68420486E12, 1960.7599726810577], [1.68420468E12, 2593.4314906995296], [1.6842048E12, 1934.5288591722472]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420492E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1920.7296289721453, "minX": 1.68420462E12, "maxY": 10075.502392344493, "series": [{"data": [[1.68420462E12, 1920.7296289721453], [1.68420492E12, 10075.502392344493], [1.68420474E12, 2955.276386132401], [1.68420486E12, 1960.511623200859], [1.68420468E12, 2593.1999650685875], [1.6842048E12, 1934.3101710096073]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420492E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68420462E12, "maxY": 501.8793842408281, "series": [{"data": [[1.68420462E12, 501.8793842408281], [1.68420492E12, 0.0], [1.68420474E12, 8.148867313915824], [1.68420486E12, 30.235676523411048], [1.68420468E12, 24.012103746397656], [1.6842048E12, 25.949988543814744]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420492E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 52.0, "minX": 1.68420462E12, "maxY": 21447.0, "series": [{"data": [[1.68420462E12, 21447.0], [1.68420492E12, 15127.0], [1.68420474E12, 16446.0], [1.68420486E12, 15464.0], [1.68420468E12, 14560.0], [1.6842048E12, 17728.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68420462E12, 2706.0], [1.68420492E12, 11625.400000000001], [1.68420474E12, 7370.9000000000015], [1.68420486E12, 4521.9000000000015], [1.68420468E12, 8057.500000000007], [1.6842048E12, 4135.700000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68420462E12, 8967.820000000029], [1.68420492E12, 15071.199999999997], [1.68420474E12, 10559.0], [1.68420486E12, 8865.0], [1.68420468E12, 10757.0], [1.6842048E12, 8729.920000000013]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68420462E12, 3718.9000000000015], [1.68420492E12, 13197.4], [1.68420474E12, 8763.95], [1.68420486E12, 5850.9000000000015], [1.68420468E12, 9586.95], [1.6842048E12, 5331.950000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68420462E12, 70.0], [1.68420492E12, 5005.0], [1.68420474E12, 53.0], [1.68420486E12, 58.0], [1.68420468E12, 52.0], [1.6842048E12, 52.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68420462E12, 1282.0], [1.68420492E12, 10555.0], [1.68420474E12, 2031.0], [1.68420486E12, 1683.0], [1.68420468E12, 1643.5], [1.6842048E12, 1773.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420492E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 14089.0, "series": [{"data": [[7.0, 2110.0], [10.0, 11120.5], [11.0, 2151.0], [14.0, 8347.0], [23.0, 7305.0], [28.0, 7755.5], [32.0, 4914.0], [33.0, 10781.0], [38.0, 10226.0], [42.0, 2099.0], [54.0, 7556.0], [63.0, 2119.0], [73.0, 8569.0], [99.0, 2378.5], [117.0, 3132.0], [126.0, 2386.0], [127.0, 7525.0], [135.0, 2112.0], [138.0, 6167.0], [165.0, 6368.0], [183.0, 1804.0], [182.0, 7033.0], [205.0, 4442.0], [213.0, 1785.0], [211.0, 5597.0], [226.0, 3533.5], [238.0, 1794.5], [239.0, 2072.0], [247.0, 3887.0], [249.0, 2769.0], [258.0, 3016.5], [269.0, 4063.5], [267.0, 1654.0], [259.0, 5335.0], [276.0, 1109.0], [316.0, 1978.5], [312.0, 3014.0], [329.0, 6443.0], [344.0, 3419.0], [357.0, 4024.0], [366.0, 1713.5], [376.0, 5481.0], [380.0, 4111.5], [408.0, 6730.5], [422.0, 4476.0], [430.0, 3022.0], [429.0, 1101.0], [436.0, 6227.5], [440.0, 5276.0], [444.0, 1787.0], [433.0, 2964.5], [451.0, 2000.0], [459.0, 2703.0], [463.0, 1886.0], [474.0, 2600.0], [484.0, 3244.5], [496.0, 3888.5], [505.0, 3416.0], [542.0, 1680.0], [534.0, 2153.0], [541.0, 1149.0], [535.0, 3101.0], [512.0, 2153.0], [551.0, 2261.0], [567.0, 3344.0], [544.0, 1121.0], [556.0, 1306.0], [545.0, 1101.0], [600.0, 2071.0], [620.0, 1110.0], [653.0, 1149.0], [661.0, 1107.0], [657.0, 2818.0], [701.0, 1170.5], [703.0, 1409.0], [694.0, 1265.0], [697.0, 1380.5], [672.0, 3041.0], [706.0, 1251.0], [708.0, 2124.5], [707.0, 1693.0], [731.0, 2093.0], [756.0, 2656.0], [765.0, 1119.0], [737.0, 1738.0], [750.0, 2066.0], [751.0, 1195.0], [762.0, 3444.0], [764.0, 1906.0], [793.0, 1115.0], [779.0, 1145.0], [792.0, 1334.0], [771.0, 1114.0], [798.0, 1102.0], [790.0, 1110.0], [788.0, 1864.0], [789.0, 1102.0], [795.0, 2104.0], [794.0, 1159.0], [791.0, 1739.5], [780.0, 2178.0], [829.0, 1125.5], [823.0, 1673.0], [821.0, 1688.0], [816.0, 1736.0], [822.0, 1313.0], [800.0, 1140.0], [801.0, 1448.0], [802.0, 1134.0], [826.0, 2619.5], [856.0, 1124.0], [862.0, 1966.5], [843.0, 1119.0], [834.0, 2587.5], [871.0, 1126.0], [874.0, 1374.0], [872.0, 2096.0], [870.0, 1546.0], [886.0, 1273.0], [887.0, 1474.5], [869.0, 1849.0], [866.0, 1774.0], [868.0, 1755.0], [876.0, 2761.0], [880.0, 1960.0], [881.0, 1696.0], [888.0, 2381.0], [883.0, 1618.0], [885.0, 1846.0], [897.0, 1154.0], [927.0, 2078.0], [909.0, 1169.0], [911.0, 1523.5], [896.0, 1121.5], [916.0, 2252.5], [918.0, 1226.0], [914.0, 1244.5], [913.0, 1124.0], [923.0, 1474.0], [921.0, 1873.0], [901.0, 2027.0], [902.0, 1868.0], [920.0, 1617.0], [906.0, 1103.0], [907.0, 1172.0], [908.0, 1620.5], [915.0, 1750.0], [957.0, 1458.5], [944.0, 1385.0], [938.0, 1127.0], [949.0, 1130.0], [950.0, 1684.0], [936.0, 2011.5], [956.0, 1789.0], [954.0, 2483.0], [952.0, 1566.0], [932.0, 1393.0], [946.0, 1716.0], [940.0, 1646.5], [942.0, 1715.0], [929.0, 1141.0], [939.0, 2000.0], [931.0, 1589.0], [987.0, 1512.0], [967.0, 1115.0], [968.0, 1315.0], [973.0, 1498.5], [971.0, 1954.0], [978.0, 1123.0], [976.0, 2414.0], [988.0, 1341.0], [990.0, 1956.0], [974.0, 2258.5], [966.0, 1904.0], [965.0, 1502.0], [982.0, 1995.0], [979.0, 1526.0], [981.0, 1817.0], [986.0, 1801.5], [984.0, 1637.0], [1021.0, 1789.0], [1003.0, 1168.0], [1012.0, 1125.0], [1011.0, 1855.5], [1007.0, 1767.0], [999.0, 2241.0], [996.0, 1135.0], [1018.0, 1820.0], [1022.0, 1688.0], [1023.0, 1130.0], [1008.0, 1675.0], [1009.0, 1354.0], [1020.0, 1687.0], [1019.0, 1642.0], [1005.0, 1700.5], [1076.0, 2249.0], [1049.0, 1298.0], [1060.0, 2062.0], [1056.0, 1392.0], [1087.0, 1315.0], [1086.0, 2154.0], [1085.0, 1649.0], [1084.0, 1949.0], [1083.0, 2074.0], [1081.0, 2443.5], [1066.0, 1674.0], [1069.0, 2159.0], [1068.0, 1739.0], [1067.0, 1698.0], [1071.0, 1988.5], [1064.0, 2047.0], [1040.0, 2046.0], [1038.0, 1743.0], [1039.0, 1266.0], [1030.0, 1550.0], [1028.0, 1967.0], [1031.0, 1192.0], [1032.0, 3035.0], [1053.0, 1563.5], [1054.0, 2456.5], [1052.0, 1748.5], [1050.0, 2129.0], [1055.0, 2222.5], [1044.0, 1676.0], [1048.0, 1756.0], [1047.0, 1312.0], [1035.0, 1173.0], [1119.0, 3098.5], [1105.0, 2866.0], [1104.0, 2717.0], [1098.0, 1878.5], [1091.0, 2495.5], [1088.0, 3079.0], [1096.0, 2080.0], [1099.0, 2011.5], [1138.0, 1661.0], [1127.0, 1133.0], [1111.0, 1520.5], [1108.0, 1733.5], [1157.0, 1245.0], [1180.0, 2052.5], [1190.0, 1135.0], [1201.0, 1409.0], [1186.0, 1125.0], [1176.0, 1920.0], [1203.0, 1099.0], [1228.0, 1123.0], [1261.0, 1127.0], [1313.0, 1571.0], [1284.0, 1107.0], [1360.0, 1125.0], [1.0, 14089.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[11.0, 306.5], [23.0, 40.0], [33.0, 10399.0], [38.0, 10510.0], [54.0, 10306.0], [63.0, 10402.5], [73.0, 10407.0], [99.0, 10635.0], [117.0, 10250.0], [127.0, 10354.5], [135.0, 556.5], [165.0, 10244.5], [182.0, 42.0], [205.0, 61.5], [211.0, 10412.5], [238.0, 10158.5], [239.0, 40.0], [247.0, 67.0], [249.0, 41.0], [258.0, 48.0], [269.0, 62.0], [267.0, 260.0], [259.0, 10363.5], [276.0, 54.0], [316.0, 102.0], [312.0, 59.0], [329.0, 10392.0], [357.0, 10349.5], [366.0, 55.5], [376.0, 61.0], [380.0, 53.0], [408.0, 55.0], [429.0, 42.0], [436.0, 45.5], [440.0, 10303.0], [444.0, 10164.0], [433.0, 10675.0], [459.0, 52.5], [463.0, 11247.5], [474.0, 79.0], [484.0, 131.0], [505.0, 56.0], [542.0, 40.0], [541.0, 40.0], [512.0, 10211.5], [567.0, 52.0], [556.0, 10083.0], [545.0, 497.5], [620.0, 51.0], [653.0, 595.0], [657.0, 10301.0], [701.0, 75.0], [694.0, 158.0], [697.0, 49.0], [672.0, 10287.0], [708.0, 56.0], [707.0, 52.0], [731.0, 57.0], [756.0, 10114.0], [737.0, 10530.0], [750.0, 54.5], [751.0, 891.0], [762.0, 69.0], [764.0, 60.0], [779.0, 43.0], [792.0, 62.0], [771.0, 59.0], [793.0, 10812.5], [795.0, 44.5], [791.0, 41.0], [780.0, 10225.0], [798.0, 5165.5], [829.0, 64.0], [823.0, 51.0], [821.0, 10345.0], [816.0, 60.0], [822.0, 10502.0], [801.0, 66.5], [802.0, 10591.0], [856.0, 43.0], [843.0, 10900.0], [870.0, 10372.0], [874.0, 48.0], [876.0, 48.0], [871.0, 10316.0], [869.0, 41.0], [883.0, 61.0], [888.0, 83.0], [887.0, 50.0], [866.0, 62.0], [880.0, 40.5], [897.0, 46.0], [909.0, 43.0], [911.0, 42.0], [927.0, 54.0], [914.0, 40.5], [913.0, 177.0], [923.0, 45.5], [921.0, 55.0], [901.0, 42.0], [902.0, 45.0], [920.0, 42.0], [906.0, 51.0], [907.0, 43.0], [908.0, 44.5], [916.0, 41.0], [918.0, 43.0], [915.0, 42.0], [931.0, 42.0], [957.0, 40.0], [944.0, 43.0], [938.0, 40.0], [936.0, 42.0], [956.0, 42.0], [954.0, 43.0], [952.0, 43.0], [932.0, 52.0], [946.0, 41.0], [940.0, 41.0], [942.0, 41.0], [929.0, 72.0], [939.0, 42.0], [950.0, 41.0], [949.0, 58.5], [987.0, 42.0], [967.0, 41.0], [968.0, 47.5], [973.0, 42.0], [971.0, 41.0], [978.0, 84.0], [976.0, 44.0], [988.0, 45.0], [990.0, 54.0], [974.0, 42.0], [966.0, 41.0], [965.0, 43.0], [982.0, 41.0], [979.0, 43.0], [981.0, 44.0], [986.0, 41.0], [984.0, 41.0], [1021.0, 41.0], [1003.0, 42.0], [1012.0, 43.0], [1011.0, 59.0], [1007.0, 41.0], [999.0, 41.0], [996.0, 567.0], [1018.0, 41.0], [1022.0, 42.0], [1023.0, 40.0], [1008.0, 40.0], [1009.0, 42.0], [1020.0, 41.0], [1019.0, 41.0], [1005.0, 41.0], [1076.0, 41.0], [1049.0, 10111.0], [1060.0, 49.0], [1056.0, 42.0], [1087.0, 53.0], [1086.0, 40.0], [1085.0, 41.0], [1084.0, 44.5], [1083.0, 42.0], [1081.0, 41.0], [1066.0, 41.0], [1069.0, 41.0], [1068.0, 54.0], [1067.0, 41.0], [1071.0, 41.0], [1064.0, 45.0], [1040.0, 41.0], [1038.0, 42.0], [1039.0, 41.0], [1030.0, 41.0], [1028.0, 56.0], [1031.0, 51.0], [1032.0, 41.0], [1053.0, 41.0], [1054.0, 41.0], [1052.0, 41.0], [1050.0, 44.0], [1055.0, 41.0], [1044.0, 41.0], [1048.0, 42.0], [1047.0, 43.0], [1035.0, 42.0], [1119.0, 11849.0], [1105.0, 42.0], [1104.0, 53.0], [1098.0, 41.0], [1091.0, 41.0], [1088.0, 41.0], [1096.0, 41.0], [1099.0, 41.0], [1138.0, 41.0], [1127.0, 41.0], [1111.0, 41.0], [1108.0, 41.0], [1157.0, 48.0], [1180.0, 42.0], [1190.0, 46.0], [1201.0, 43.0], [1186.0, 74.0], [1176.0, 65.0], [1203.0, 42.0], [1228.0, 61.0], [1261.0, 59.0], [1313.0, 11322.0], [1284.0, 64.0], [1360.0, 67.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1360.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 14087.0, "series": [{"data": [[7.0, 2110.0], [10.0, 11119.5], [11.0, 2151.0], [14.0, 8346.5], [23.0, 7305.0], [28.0, 7755.0], [32.0, 4913.5], [33.0, 10780.5], [38.0, 10226.0], [42.0, 2097.5], [54.0, 7556.0], [63.0, 2119.0], [73.0, 8569.0], [99.0, 2378.5], [117.0, 3132.0], [126.0, 2386.0], [127.0, 7525.0], [135.0, 2112.0], [138.0, 6167.0], [165.0, 6368.0], [183.0, 1804.0], [182.0, 7033.0], [205.0, 4442.0], [213.0, 1785.0], [211.0, 5597.0], [226.0, 3533.5], [238.0, 1794.5], [239.0, 2072.0], [247.0, 3886.0], [249.0, 2769.0], [258.0, 3016.5], [269.0, 4063.5], [267.0, 1654.0], [259.0, 5335.0], [276.0, 1109.0], [316.0, 1978.5], [312.0, 3014.0], [329.0, 6442.5], [344.0, 3419.0], [357.0, 4024.0], [366.0, 1713.0], [376.0, 5481.0], [380.0, 4111.0], [408.0, 6730.0], [422.0, 4475.5], [430.0, 3005.5], [429.0, 1101.0], [436.0, 6227.5], [440.0, 5276.0], [444.0, 1787.0], [433.0, 2964.5], [451.0, 2000.0], [459.0, 2702.0], [463.0, 1885.0], [474.0, 2599.0], [484.0, 3244.0], [496.0, 3888.5], [505.0, 3416.0], [542.0, 1680.0], [534.0, 2152.5], [541.0, 1149.0], [535.0, 3101.0], [512.0, 2153.0], [551.0, 2261.0], [567.0, 3344.0], [544.0, 1120.0], [556.0, 1306.0], [545.0, 1101.0], [600.0, 2071.0], [620.0, 1110.0], [653.0, 1148.5], [661.0, 1106.0], [657.0, 2817.0], [701.0, 1170.5], [703.0, 1409.0], [694.0, 1265.0], [697.0, 1380.0], [672.0, 3041.0], [706.0, 1247.0], [708.0, 2124.0], [707.0, 1693.0], [731.0, 2092.5], [756.0, 2655.0], [765.0, 1119.0], [737.0, 1737.5], [750.0, 2066.0], [751.0, 1195.0], [762.0, 3444.0], [764.0, 1906.0], [793.0, 1114.0], [779.0, 1145.0], [792.0, 1334.0], [771.0, 1113.0], [798.0, 1102.0], [790.0, 1109.0], [788.0, 1864.0], [789.0, 1101.0], [795.0, 2104.0], [794.0, 1159.0], [791.0, 1739.5], [780.0, 2178.0], [829.0, 1125.0], [823.0, 1673.0], [821.0, 1688.0], [816.0, 1735.0], [822.0, 1313.0], [800.0, 1140.0], [801.0, 1448.0], [802.0, 1134.0], [826.0, 2619.5], [856.0, 1124.0], [862.0, 1966.0], [843.0, 1118.0], [834.0, 2587.0], [871.0, 1125.5], [874.0, 1373.0], [872.0, 2095.5], [870.0, 1546.0], [886.0, 1273.0], [887.0, 1474.5], [869.0, 1849.0], [866.0, 1774.0], [868.0, 1754.5], [876.0, 2760.0], [880.0, 1959.0], [881.0, 1696.0], [888.0, 2381.0], [883.0, 1618.0], [885.0, 1845.0], [897.0, 1154.0], [927.0, 2077.0], [909.0, 1169.0], [911.0, 1523.5], [896.0, 1121.0], [916.0, 2252.5], [918.0, 1226.0], [914.0, 1244.5], [913.0, 1124.0], [923.0, 1474.0], [921.0, 1872.5], [901.0, 2027.0], [902.0, 1868.0], [920.0, 1617.0], [906.0, 1103.0], [907.0, 1172.0], [908.0, 1620.5], [915.0, 1749.5], [957.0, 1458.5], [944.0, 1385.0], [938.0, 1126.0], [949.0, 1130.0], [950.0, 1684.0], [936.0, 2011.0], [956.0, 1789.0], [954.0, 2483.0], [952.0, 1566.0], [932.0, 1392.5], [946.0, 1716.0], [940.0, 1646.5], [942.0, 1715.0], [929.0, 1140.0], [939.0, 2000.0], [931.0, 1589.0], [987.0, 1512.0], [967.0, 1115.0], [968.0, 1315.0], [973.0, 1497.5], [971.0, 1953.0], [978.0, 1123.0], [976.0, 2414.0], [988.0, 1341.0], [990.0, 1956.0], [974.0, 2258.5], [966.0, 1904.0], [965.0, 1501.0], [982.0, 1995.0], [979.0, 1526.0], [981.0, 1817.0], [986.0, 1801.5], [984.0, 1637.0], [1021.0, 1789.0], [1003.0, 1168.0], [1012.0, 1125.0], [1011.0, 1855.0], [1007.0, 1767.0], [999.0, 2241.0], [996.0, 1135.0], [1018.0, 1820.0], [1022.0, 1687.5], [1023.0, 1130.0], [1008.0, 1675.0], [1009.0, 1353.0], [1020.0, 1687.0], [1019.0, 1642.0], [1005.0, 1700.0], [1076.0, 2249.0], [1049.0, 1294.0], [1060.0, 2062.0], [1056.0, 1392.0], [1087.0, 1315.0], [1086.0, 2154.0], [1085.0, 1648.0], [1084.0, 1949.0], [1083.0, 2074.0], [1081.0, 2443.5], [1066.0, 1673.5], [1069.0, 2158.5], [1068.0, 1739.0], [1067.0, 1698.0], [1071.0, 1988.0], [1064.0, 2046.0], [1040.0, 2046.0], [1038.0, 1743.0], [1039.0, 1266.0], [1030.0, 1550.0], [1028.0, 1967.0], [1031.0, 1192.0], [1032.0, 3035.0], [1053.0, 1563.5], [1054.0, 2456.5], [1052.0, 1748.0], [1050.0, 2128.0], [1055.0, 2222.5], [1044.0, 1675.0], [1048.0, 1755.0], [1047.0, 1312.0], [1035.0, 1173.0], [1119.0, 3098.5], [1105.0, 2866.0], [1104.0, 2716.0], [1098.0, 1878.5], [1091.0, 2495.5], [1088.0, 3079.0], [1096.0, 2079.0], [1099.0, 2011.5], [1138.0, 1660.0], [1127.0, 1133.0], [1111.0, 1520.0], [1108.0, 1733.0], [1157.0, 1245.0], [1180.0, 2052.0], [1190.0, 1134.0], [1201.0, 1409.0], [1186.0, 1125.0], [1176.0, 1920.0], [1203.0, 1099.0], [1228.0, 1123.0], [1261.0, 1126.5], [1313.0, 1571.0], [1284.0, 1107.0], [1360.0, 1125.0], [1.0, 14087.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[11.0, 306.5], [23.0, 40.0], [33.0, 10399.0], [38.0, 10510.0], [54.0, 10306.0], [63.0, 10402.5], [73.0, 10407.0], [99.0, 10635.0], [117.0, 10250.0], [127.0, 10354.5], [135.0, 556.5], [165.0, 10244.5], [182.0, 42.0], [205.0, 61.5], [211.0, 10412.5], [238.0, 10158.5], [239.0, 40.0], [247.0, 67.0], [249.0, 41.0], [258.0, 48.0], [269.0, 62.0], [267.0, 260.0], [259.0, 10363.5], [276.0, 54.0], [316.0, 102.0], [312.0, 59.0], [329.0, 10392.0], [357.0, 10349.5], [366.0, 55.5], [376.0, 61.0], [380.0, 53.0], [408.0, 55.0], [429.0, 42.0], [436.0, 45.5], [440.0, 10303.0], [444.0, 10164.0], [433.0, 10675.0], [459.0, 52.5], [463.0, 11247.5], [474.0, 79.0], [484.0, 131.0], [505.0, 56.0], [542.0, 40.0], [541.0, 40.0], [512.0, 10211.5], [567.0, 52.0], [556.0, 10083.0], [545.0, 497.5], [620.0, 51.0], [653.0, 595.0], [657.0, 10301.0], [701.0, 75.0], [694.0, 158.0], [697.0, 49.0], [672.0, 10287.0], [708.0, 56.0], [707.0, 52.0], [731.0, 57.0], [756.0, 10114.0], [737.0, 10530.0], [750.0, 54.5], [751.0, 891.0], [762.0, 69.0], [764.0, 60.0], [779.0, 43.0], [792.0, 62.0], [771.0, 59.0], [793.0, 10812.5], [795.0, 44.5], [791.0, 41.0], [780.0, 10225.0], [798.0, 5165.5], [829.0, 64.0], [823.0, 51.0], [821.0, 10345.0], [816.0, 60.0], [822.0, 10502.0], [801.0, 66.5], [802.0, 10591.0], [856.0, 43.0], [843.0, 10900.0], [870.0, 10372.0], [874.0, 48.0], [876.0, 48.0], [871.0, 10316.0], [869.0, 41.0], [883.0, 61.0], [888.0, 83.0], [887.0, 50.0], [866.0, 62.0], [880.0, 40.5], [897.0, 46.0], [909.0, 43.0], [911.0, 42.0], [927.0, 54.0], [914.0, 40.5], [913.0, 177.0], [923.0, 45.5], [921.0, 55.0], [901.0, 42.0], [902.0, 45.0], [920.0, 42.0], [906.0, 51.0], [907.0, 43.0], [908.0, 44.5], [916.0, 41.0], [918.0, 43.0], [915.0, 42.0], [931.0, 42.0], [957.0, 40.0], [944.0, 43.0], [938.0, 40.0], [936.0, 42.0], [956.0, 42.0], [954.0, 43.0], [952.0, 43.0], [932.0, 52.0], [946.0, 41.0], [940.0, 41.0], [942.0, 41.0], [929.0, 72.0], [939.0, 42.0], [950.0, 41.0], [949.0, 58.5], [987.0, 42.0], [967.0, 41.0], [968.0, 47.5], [973.0, 42.0], [971.0, 41.0], [978.0, 84.0], [976.0, 44.0], [988.0, 45.0], [990.0, 54.0], [974.0, 42.0], [966.0, 41.0], [965.0, 43.0], [982.0, 41.0], [979.0, 43.0], [981.0, 44.0], [986.0, 41.0], [984.0, 41.0], [1021.0, 41.0], [1003.0, 42.0], [1012.0, 43.0], [1011.0, 59.0], [1007.0, 41.0], [999.0, 41.0], [996.0, 567.0], [1018.0, 41.0], [1022.0, 42.0], [1023.0, 40.0], [1008.0, 40.0], [1009.0, 42.0], [1020.0, 41.0], [1019.0, 41.0], [1005.0, 41.0], [1076.0, 41.0], [1049.0, 0.0], [1060.0, 49.0], [1056.0, 42.0], [1087.0, 53.0], [1086.0, 40.0], [1085.0, 41.0], [1084.0, 44.5], [1083.0, 42.0], [1081.0, 41.0], [1066.0, 41.0], [1069.0, 41.0], [1068.0, 54.0], [1067.0, 41.0], [1071.0, 41.0], [1064.0, 45.0], [1040.0, 41.0], [1038.0, 42.0], [1039.0, 41.0], [1030.0, 41.0], [1028.0, 56.0], [1031.0, 51.0], [1032.0, 41.0], [1053.0, 41.0], [1054.0, 41.0], [1052.0, 41.0], [1050.0, 44.0], [1055.0, 41.0], [1044.0, 41.0], [1048.0, 42.0], [1047.0, 43.0], [1035.0, 42.0], [1119.0, 0.0], [1105.0, 42.0], [1104.0, 53.0], [1098.0, 41.0], [1091.0, 41.0], [1088.0, 41.0], [1096.0, 41.0], [1099.0, 41.0], [1138.0, 41.0], [1127.0, 41.0], [1111.0, 41.0], [1108.0, 41.0], [1157.0, 48.0], [1180.0, 42.0], [1190.0, 46.0], [1201.0, 43.0], [1186.0, 74.0], [1176.0, 65.0], [1203.0, 42.0], [1228.0, 61.0], [1261.0, 59.0], [1313.0, 0.0], [1284.0, 64.0], [1360.0, 67.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1360.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.46666666666667, "minX": 1.68420456E12, "maxY": 981.4333333333333, "series": [{"data": [[1.68420462E12, 639.5333333333333], [1.68420474E12, 898.5666666666667], [1.68420456E12, 40.46666666666667], [1.68420486E12, 619.4333333333333], [1.68420468E12, 981.4333333333333], [1.6842048E12, 826.6666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420486E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68420462E12, "maxY": 850.5666666666667, "series": [{"data": [[1.68420462E12, 0.3333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68420462E12, 607.4], [1.68420492E12, 2.25], [1.68420474E12, 818.75], [1.68420486E12, 602.7], [1.68420468E12, 850.5666666666667], [1.6842048E12, 695.1833333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68420462E12, 14.266666666666667]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.68420462E12, 1.1166666666666667], [1.68420486E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68420462E12, 34.06666666666667], [1.68420492E12, 1.2333333333333334], [1.68420474E12, 113.4], [1.68420486E12, 56.15], [1.68420468E12, 103.68333333333334], [1.6842048E12, 104.96666666666667]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420492E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.2333333333333334, "minX": 1.68420462E12, "maxY": 850.5666666666667, "series": [{"data": [[1.68420462E12, 607.4], [1.68420492E12, 2.25], [1.68420474E12, 818.75], [1.68420486E12, 602.7], [1.68420468E12, 850.5666666666667], [1.6842048E12, 695.1833333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68420462E12, 49.78333333333333], [1.68420492E12, 1.2333333333333334], [1.68420474E12, 113.4], [1.68420486E12, 56.18333333333333], [1.68420468E12, 103.68333333333334], [1.6842048E12, 104.96666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420492E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.2333333333333334, "minX": 1.68420462E12, "maxY": 850.5666666666667, "series": [{"data": [[1.68420462E12, 607.4], [1.68420492E12, 2.25], [1.68420474E12, 818.75], [1.68420486E12, 602.7], [1.68420468E12, 850.5666666666667], [1.6842048E12, 695.1833333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68420462E12, 49.78333333333333], [1.68420492E12, 1.2333333333333334], [1.68420474E12, 113.4], [1.68420486E12, 56.18333333333333], [1.68420468E12, 103.68333333333334], [1.6842048E12, 104.96666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420492E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

