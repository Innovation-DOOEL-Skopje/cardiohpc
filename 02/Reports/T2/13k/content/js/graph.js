/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 18509.0, "series": [{"data": [[0.0, 0.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 39.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 40.0], [1.6, 40.0], [1.7, 40.0], [1.8, 40.0], [1.9, 40.0], [2.0, 40.0], [2.1, 40.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 41.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 41.0], [4.6, 41.0], [4.7, 41.0], [4.8, 41.0], [4.9, 41.0], [5.0, 41.0], [5.1, 41.0], [5.2, 42.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 42.0], [6.3, 42.0], [6.4, 42.0], [6.5, 42.0], [6.6, 42.0], [6.7, 42.0], [6.8, 42.0], [6.9, 43.0], [7.0, 43.0], [7.1, 43.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 43.0], [7.7, 43.0], [7.8, 43.0], [7.9, 43.0], [8.0, 43.0], [8.1, 43.0], [8.2, 43.0], [8.3, 44.0], [8.4, 44.0], [8.5, 44.0], [8.6, 44.0], [8.7, 44.0], [8.8, 44.0], [8.9, 45.0], [9.0, 45.0], [9.1, 45.0], [9.2, 46.0], [9.3, 46.0], [9.4, 47.0], [9.5, 47.0], [9.6, 48.0], [9.7, 49.0], [9.8, 49.0], [9.9, 50.0], [10.0, 51.0], [10.1, 52.0], [10.2, 53.0], [10.3, 53.0], [10.4, 55.0], [10.5, 56.0], [10.6, 57.0], [10.7, 59.0], [10.8, 61.0], [10.9, 63.0], [11.0, 68.0], [11.1, 76.0], [11.2, 91.0], [11.3, 101.0], [11.4, 124.0], [11.5, 182.0], [11.6, 248.0], [11.7, 412.0], [11.8, 824.0], [11.9, 1090.0], [12.0, 1091.0], [12.1, 1092.0], [12.2, 1092.0], [12.3, 1092.0], [12.4, 1093.0], [12.5, 1093.0], [12.6, 1093.0], [12.7, 1093.0], [12.8, 1094.0], [12.9, 1094.0], [13.0, 1094.0], [13.1, 1094.0], [13.2, 1094.0], [13.3, 1094.0], [13.4, 1095.0], [13.5, 1095.0], [13.6, 1095.0], [13.7, 1095.0], [13.8, 1095.0], [13.9, 1095.0], [14.0, 1095.0], [14.1, 1095.0], [14.2, 1095.0], [14.3, 1096.0], [14.4, 1096.0], [14.5, 1096.0], [14.6, 1096.0], [14.7, 1096.0], [14.8, 1096.0], [14.9, 1096.0], [15.0, 1096.0], [15.1, 1096.0], [15.2, 1096.0], [15.3, 1097.0], [15.4, 1097.0], [15.5, 1097.0], [15.6, 1097.0], [15.7, 1097.0], [15.8, 1097.0], [15.9, 1097.0], [16.0, 1097.0], [16.1, 1097.0], [16.2, 1097.0], [16.3, 1097.0], [16.4, 1097.0], [16.5, 1098.0], [16.6, 1098.0], [16.7, 1098.0], [16.8, 1098.0], [16.9, 1098.0], [17.0, 1098.0], [17.1, 1098.0], [17.2, 1098.0], [17.3, 1098.0], [17.4, 1098.0], [17.5, 1098.0], [17.6, 1098.0], [17.7, 1098.0], [17.8, 1099.0], [17.9, 1099.0], [18.0, 1099.0], [18.1, 1099.0], [18.2, 1099.0], [18.3, 1099.0], [18.4, 1099.0], [18.5, 1099.0], [18.6, 1099.0], [18.7, 1099.0], [18.8, 1099.0], [18.9, 1099.0], [19.0, 1099.0], [19.1, 1100.0], [19.2, 1100.0], [19.3, 1100.0], [19.4, 1100.0], [19.5, 1100.0], [19.6, 1100.0], [19.7, 1100.0], [19.8, 1100.0], [19.9, 1100.0], [20.0, 1100.0], [20.1, 1100.0], [20.2, 1101.0], [20.3, 1101.0], [20.4, 1101.0], [20.5, 1101.0], [20.6, 1101.0], [20.7, 1101.0], [20.8, 1101.0], [20.9, 1101.0], [21.0, 1101.0], [21.1, 1101.0], [21.2, 1101.0], [21.3, 1101.0], [21.4, 1102.0], [21.5, 1102.0], [21.6, 1102.0], [21.7, 1102.0], [21.8, 1102.0], [21.9, 1102.0], [22.0, 1102.0], [22.1, 1102.0], [22.2, 1102.0], [22.3, 1102.0], [22.4, 1103.0], [22.5, 1103.0], [22.6, 1103.0], [22.7, 1103.0], [22.8, 1103.0], [22.9, 1103.0], [23.0, 1103.0], [23.1, 1103.0], [23.2, 1103.0], [23.3, 1104.0], [23.4, 1104.0], [23.5, 1104.0], [23.6, 1104.0], [23.7, 1104.0], [23.8, 1104.0], [23.9, 1104.0], [24.0, 1104.0], [24.1, 1105.0], [24.2, 1105.0], [24.3, 1105.0], [24.4, 1105.0], [24.5, 1105.0], [24.6, 1105.0], [24.7, 1106.0], [24.8, 1106.0], [24.9, 1106.0], [25.0, 1106.0], [25.1, 1106.0], [25.2, 1107.0], [25.3, 1107.0], [25.4, 1107.0], [25.5, 1107.0], [25.6, 1107.0], [25.7, 1108.0], [25.8, 1108.0], [25.9, 1108.0], [26.0, 1108.0], [26.1, 1108.0], [26.2, 1109.0], [26.3, 1109.0], [26.4, 1109.0], [26.5, 1109.0], [26.6, 1110.0], [26.7, 1110.0], [26.8, 1110.0], [26.9, 1111.0], [27.0, 1111.0], [27.1, 1111.0], [27.2, 1111.0], [27.3, 1112.0], [27.4, 1112.0], [27.5, 1113.0], [27.6, 1113.0], [27.7, 1113.0], [27.8, 1114.0], [27.9, 1114.0], [28.0, 1115.0], [28.1, 1115.0], [28.2, 1116.0], [28.3, 1116.0], [28.4, 1116.0], [28.5, 1117.0], [28.6, 1117.0], [28.7, 1118.0], [28.8, 1118.0], [28.9, 1119.0], [29.0, 1120.0], [29.1, 1120.0], [29.2, 1121.0], [29.3, 1121.0], [29.4, 1122.0], [29.5, 1122.0], [29.6, 1123.0], [29.7, 1124.0], [29.8, 1124.0], [29.9, 1125.0], [30.0, 1126.0], [30.1, 1126.0], [30.2, 1127.0], [30.3, 1128.0], [30.4, 1129.0], [30.5, 1130.0], [30.6, 1131.0], [30.7, 1131.0], [30.8, 1132.0], [30.9, 1133.0], [31.0, 1134.0], [31.1, 1135.0], [31.2, 1136.0], [31.3, 1137.0], [31.4, 1138.0], [31.5, 1139.0], [31.6, 1140.0], [31.7, 1141.0], [31.8, 1142.0], [31.9, 1143.0], [32.0, 1144.0], [32.1, 1145.0], [32.2, 1146.0], [32.3, 1147.0], [32.4, 1148.0], [32.5, 1150.0], [32.6, 1151.0], [32.7, 1152.0], [32.8, 1153.0], [32.9, 1154.0], [33.0, 1156.0], [33.1, 1157.0], [33.2, 1159.0], [33.3, 1160.0], [33.4, 1161.0], [33.5, 1163.0], [33.6, 1165.0], [33.7, 1166.0], [33.8, 1168.0], [33.9, 1170.0], [34.0, 1172.0], [34.1, 1174.0], [34.2, 1176.0], [34.3, 1177.0], [34.4, 1179.0], [34.5, 1182.0], [34.6, 1184.0], [34.7, 1186.0], [34.8, 1188.0], [34.9, 1191.0], [35.0, 1193.0], [35.1, 1195.0], [35.2, 1198.0], [35.3, 1200.0], [35.4, 1203.0], [35.5, 1205.0], [35.6, 1208.0], [35.7, 1210.0], [35.8, 1213.0], [35.9, 1215.0], [36.0, 1217.0], [36.1, 1220.0], [36.2, 1223.0], [36.3, 1226.0], [36.4, 1228.0], [36.5, 1231.0], [36.6, 1234.0], [36.7, 1237.0], [36.8, 1239.0], [36.9, 1242.0], [37.0, 1245.0], [37.1, 1248.0], [37.2, 1251.0], [37.3, 1254.0], [37.4, 1258.0], [37.5, 1261.0], [37.6, 1264.0], [37.7, 1267.0], [37.8, 1270.0], [37.9, 1274.0], [38.0, 1277.0], [38.1, 1281.0], [38.2, 1284.0], [38.3, 1288.0], [38.4, 1291.0], [38.5, 1295.0], [38.6, 1298.0], [38.7, 1301.0], [38.8, 1305.0], [38.9, 1308.0], [39.0, 1311.0], [39.1, 1314.0], [39.2, 1317.0], [39.3, 1320.0], [39.4, 1322.0], [39.5, 1325.0], [39.6, 1327.0], [39.7, 1330.0], [39.8, 1333.0], [39.9, 1337.0], [40.0, 1341.0], [40.1, 1344.0], [40.2, 1348.0], [40.3, 1352.0], [40.4, 1355.0], [40.5, 1359.0], [40.6, 1363.0], [40.7, 1367.0], [40.8, 1371.0], [40.9, 1375.0], [41.0, 1379.0], [41.1, 1383.0], [41.2, 1387.0], [41.3, 1391.0], [41.4, 1396.0], [41.5, 1400.0], [41.6, 1404.0], [41.7, 1408.0], [41.8, 1412.0], [41.9, 1416.0], [42.0, 1420.0], [42.1, 1424.0], [42.2, 1428.0], [42.3, 1432.0], [42.4, 1437.0], [42.5, 1441.0], [42.6, 1445.0], [42.7, 1449.0], [42.8, 1453.0], [42.9, 1458.0], [43.0, 1462.0], [43.1, 1466.0], [43.2, 1470.0], [43.3, 1474.0], [43.4, 1479.0], [43.5, 1484.0], [43.6, 1489.0], [43.7, 1494.0], [43.8, 1498.0], [43.9, 1503.0], [44.0, 1509.0], [44.1, 1514.0], [44.2, 1519.0], [44.3, 1523.0], [44.4, 1528.0], [44.5, 1533.0], [44.6, 1538.0], [44.7, 1542.0], [44.8, 1547.0], [44.9, 1551.0], [45.0, 1556.0], [45.1, 1559.0], [45.2, 1563.0], [45.3, 1567.0], [45.4, 1571.0], [45.5, 1575.0], [45.6, 1579.0], [45.7, 1583.0], [45.8, 1588.0], [45.9, 1592.0], [46.0, 1596.0], [46.1, 1600.0], [46.2, 1604.0], [46.3, 1609.0], [46.4, 1613.0], [46.5, 1618.0], [46.6, 1622.0], [46.7, 1627.0], [46.8, 1631.0], [46.9, 1635.0], [47.0, 1640.0], [47.1, 1645.0], [47.2, 1650.0], [47.3, 1654.0], [47.4, 1659.0], [47.5, 1663.0], [47.6, 1668.0], [47.7, 1673.0], [47.8, 1679.0], [47.9, 1684.0], [48.0, 1689.0], [48.1, 1694.0], [48.2, 1698.0], [48.3, 1703.0], [48.4, 1708.0], [48.5, 1713.0], [48.6, 1717.0], [48.7, 1722.0], [48.8, 1726.0], [48.9, 1731.0], [49.0, 1736.0], [49.1, 1740.0], [49.2, 1745.0], [49.3, 1750.0], [49.4, 1755.0], [49.5, 1760.0], [49.6, 1766.0], [49.7, 1771.0], [49.8, 1776.0], [49.9, 1781.0], [50.0, 1785.0], [50.1, 1789.0], [50.2, 1794.0], [50.3, 1799.0], [50.4, 1803.0], [50.5, 1808.0], [50.6, 1812.0], [50.7, 1817.0], [50.8, 1821.0], [50.9, 1826.0], [51.0, 1830.0], [51.1, 1834.0], [51.2, 1838.0], [51.3, 1842.0], [51.4, 1847.0], [51.5, 1851.0], [51.6, 1856.0], [51.7, 1860.0], [51.8, 1865.0], [51.9, 1869.0], [52.0, 1873.0], [52.1, 1878.0], [52.2, 1883.0], [52.3, 1888.0], [52.4, 1892.0], [52.5, 1897.0], [52.6, 1901.0], [52.7, 1906.0], [52.8, 1910.0], [52.9, 1915.0], [53.0, 1920.0], [53.1, 1925.0], [53.2, 1929.0], [53.3, 1933.0], [53.4, 1938.0], [53.5, 1943.0], [53.6, 1949.0], [53.7, 1954.0], [53.8, 1959.0], [53.9, 1964.0], [54.0, 1969.0], [54.1, 1974.0], [54.2, 1979.0], [54.3, 1984.0], [54.4, 1989.0], [54.5, 1994.0], [54.6, 1998.0], [54.7, 2004.0], [54.8, 2009.0], [54.9, 2014.0], [55.0, 2020.0], [55.1, 2024.0], [55.2, 2029.0], [55.3, 2034.0], [55.4, 2038.0], [55.5, 2043.0], [55.6, 2048.0], [55.7, 2052.0], [55.8, 2058.0], [55.9, 2063.0], [56.0, 2069.0], [56.1, 2075.0], [56.2, 2080.0], [56.3, 2084.0], [56.4, 2089.0], [56.5, 2095.0], [56.6, 2100.0], [56.7, 2104.0], [56.8, 2109.0], [56.9, 2114.0], [57.0, 2118.0], [57.1, 2123.0], [57.2, 2127.0], [57.3, 2131.0], [57.4, 2135.0], [57.5, 2139.0], [57.6, 2143.0], [57.7, 2147.0], [57.8, 2150.0], [57.9, 2154.0], [58.0, 2158.0], [58.1, 2163.0], [58.2, 2167.0], [58.3, 2172.0], [58.4, 2177.0], [58.5, 2182.0], [58.6, 2188.0], [58.7, 2194.0], [58.8, 2200.0], [58.9, 2206.0], [59.0, 2213.0], [59.1, 2219.0], [59.2, 2226.0], [59.3, 2232.0], [59.4, 2238.0], [59.5, 2244.0], [59.6, 2250.0], [59.7, 2257.0], [59.8, 2263.0], [59.9, 2270.0], [60.0, 2277.0], [60.1, 2284.0], [60.2, 2292.0], [60.3, 2299.0], [60.4, 2307.0], [60.5, 2314.0], [60.6, 2322.0], [60.7, 2330.0], [60.8, 2338.0], [60.9, 2345.0], [61.0, 2353.0], [61.1, 2360.0], [61.2, 2368.0], [61.3, 2375.0], [61.4, 2382.0], [61.5, 2389.0], [61.6, 2398.0], [61.7, 2406.0], [61.8, 2414.0], [61.9, 2423.0], [62.0, 2433.0], [62.1, 2442.0], [62.2, 2451.0], [62.3, 2461.0], [62.4, 2470.0], [62.5, 2479.0], [62.6, 2488.0], [62.7, 2497.0], [62.8, 2506.0], [62.9, 2516.0], [63.0, 2525.0], [63.1, 2535.0], [63.2, 2544.0], [63.3, 2553.0], [63.4, 2563.0], [63.5, 2574.0], [63.6, 2585.0], [63.7, 2594.0], [63.8, 2605.0], [63.9, 2614.0], [64.0, 2625.0], [64.1, 2633.0], [64.2, 2643.0], [64.3, 2651.0], [64.4, 2662.0], [64.5, 2672.0], [64.6, 2684.0], [64.7, 2694.0], [64.8, 2703.0], [64.9, 2714.0], [65.0, 2723.0], [65.1, 2733.0], [65.2, 2742.0], [65.3, 2752.0], [65.4, 2762.0], [65.5, 2770.0], [65.6, 2780.0], [65.7, 2789.0], [65.8, 2799.0], [65.9, 2808.0], [66.0, 2817.0], [66.1, 2826.0], [66.2, 2836.0], [66.3, 2844.0], [66.4, 2853.0], [66.5, 2862.0], [66.6, 2870.0], [66.7, 2879.0], [66.8, 2888.0], [66.9, 2897.0], [67.0, 2907.0], [67.1, 2914.0], [67.2, 2923.0], [67.3, 2932.0], [67.4, 2941.0], [67.5, 2949.0], [67.6, 2958.0], [67.7, 2966.0], [67.8, 2974.0], [67.9, 2983.0], [68.0, 2991.0], [68.1, 3000.0], [68.2, 3008.0], [68.3, 3016.0], [68.4, 3025.0], [68.5, 3034.0], [68.6, 3042.0], [68.7, 3051.0], [68.8, 3059.0], [68.9, 3068.0], [69.0, 3077.0], [69.1, 3085.0], [69.2, 3094.0], [69.3, 3102.0], [69.4, 3110.0], [69.5, 3118.0], [69.6, 3126.0], [69.7, 3133.0], [69.8, 3140.0], [69.9, 3148.0], [70.0, 3155.0], [70.1, 3163.0], [70.2, 3170.0], [70.3, 3178.0], [70.4, 3185.0], [70.5, 3193.0], [70.6, 3200.0], [70.7, 3208.0], [70.8, 3217.0], [70.9, 3225.0], [71.0, 3234.0], [71.1, 3243.0], [71.2, 3252.0], [71.3, 3261.0], [71.4, 3269.0], [71.5, 3279.0], [71.6, 3290.0], [71.7, 3300.0], [71.8, 3309.0], [71.9, 3319.0], [72.0, 3329.0], [72.1, 3339.0], [72.2, 3349.0], [72.3, 3359.0], [72.4, 3369.0], [72.5, 3379.0], [72.6, 3389.0], [72.7, 3402.0], [72.8, 3413.0], [72.9, 3424.0], [73.0, 3436.0], [73.1, 3448.0], [73.2, 3458.0], [73.3, 3471.0], [73.4, 3485.0], [73.5, 3497.0], [73.6, 3509.0], [73.7, 3521.0], [73.8, 3535.0], [73.9, 3549.0], [74.0, 3563.0], [74.1, 3577.0], [74.2, 3589.0], [74.3, 3603.0], [74.4, 3617.0], [74.5, 3630.0], [74.6, 3645.0], [74.7, 3660.0], [74.8, 3673.0], [74.9, 3688.0], [75.0, 3702.0], [75.1, 3716.0], [75.2, 3729.0], [75.3, 3744.0], [75.4, 3758.0], [75.5, 3772.0], [75.6, 3787.0], [75.7, 3803.0], [75.8, 3819.0], [75.9, 3833.0], [76.0, 3849.0], [76.1, 3862.0], [76.2, 3875.0], [76.3, 3888.0], [76.4, 3900.0], [76.5, 3914.0], [76.6, 3926.0], [76.7, 3940.0], [76.8, 3953.0], [76.9, 3965.0], [77.0, 3977.0], [77.1, 3989.0], [77.2, 4001.0], [77.3, 4012.0], [77.4, 4023.0], [77.5, 4033.0], [77.6, 4045.0], [77.7, 4057.0], [77.8, 4068.0], [77.9, 4079.0], [78.0, 4091.0], [78.1, 4100.0], [78.2, 4111.0], [78.3, 4122.0], [78.4, 4133.0], [78.5, 4143.0], [78.6, 4152.0], [78.7, 4162.0], [78.8, 4172.0], [78.9, 4182.0], [79.0, 4191.0], [79.1, 4201.0], [79.2, 4211.0], [79.3, 4221.0], [79.4, 4230.0], [79.5, 4240.0], [79.6, 4250.0], [79.7, 4260.0], [79.8, 4271.0], [79.9, 4283.0], [80.0, 4293.0], [80.1, 4304.0], [80.2, 4316.0], [80.3, 4327.0], [80.4, 4339.0], [80.5, 4353.0], [80.6, 4366.0], [80.7, 4379.0], [80.8, 4393.0], [80.9, 4407.0], [81.0, 4420.0], [81.1, 4433.0], [81.2, 4451.0], [81.3, 4470.0], [81.4, 4486.0], [81.5, 4502.0], [81.6, 4519.0], [81.7, 4536.0], [81.8, 4557.0], [81.9, 4578.0], [82.0, 4599.0], [82.1, 4619.0], [82.2, 4641.0], [82.3, 4664.0], [82.4, 4686.0], [82.5, 4710.0], [82.6, 4731.0], [82.7, 4756.0], [82.8, 4776.0], [82.9, 4798.0], [83.0, 4818.0], [83.1, 4839.0], [83.2, 4858.0], [83.3, 4880.0], [83.4, 4902.0], [83.5, 4924.0], [83.6, 4946.0], [83.7, 4965.0], [83.8, 4983.0], [83.9, 5002.0], [84.0, 5020.0], [84.1, 5036.0], [84.2, 5053.0], [84.3, 5068.0], [84.4, 5083.0], [84.5, 5097.0], [84.6, 5113.0], [84.7, 5127.0], [84.8, 5141.0], [84.9, 5154.0], [85.0, 5168.0], [85.1, 5183.0], [85.2, 5197.0], [85.3, 5209.0], [85.4, 5222.0], [85.5, 5237.0], [85.6, 5252.0], [85.7, 5265.0], [85.8, 5280.0], [85.9, 5292.0], [86.0, 5305.0], [86.1, 5319.0], [86.2, 5333.0], [86.3, 5349.0], [86.4, 5365.0], [86.5, 5382.0], [86.6, 5400.0], [86.7, 5420.0], [86.8, 5440.0], [86.9, 5462.0], [87.0, 5483.0], [87.1, 5504.0], [87.2, 5529.0], [87.3, 5554.0], [87.4, 5582.0], [87.5, 5606.0], [87.6, 5637.0], [87.7, 5669.0], [87.8, 5706.0], [87.9, 5736.0], [88.0, 5767.0], [88.1, 5798.0], [88.2, 5831.0], [88.3, 5861.0], [88.4, 5892.0], [88.5, 5922.0], [88.6, 5957.0], [88.7, 5990.0], [88.8, 6022.0], [88.9, 6052.0], [89.0, 6078.0], [89.1, 6105.0], [89.2, 6132.0], [89.3, 6156.0], [89.4, 6183.0], [89.5, 6204.0], [89.6, 6225.0], [89.7, 6245.0], [89.8, 6263.0], [89.9, 6283.0], [90.0, 6304.0], [90.1, 6325.0], [90.2, 6344.0], [90.3, 6365.0], [90.4, 6389.0], [90.5, 6412.0], [90.6, 6437.0], [90.7, 6463.0], [90.8, 6490.0], [90.9, 6524.0], [91.0, 6561.0], [91.1, 6600.0], [91.2, 6646.0], [91.3, 6693.0], [91.4, 6740.0], [91.5, 6792.0], [91.6, 6839.0], [91.7, 6886.0], [91.8, 6944.0], [91.9, 6997.0], [92.0, 7042.0], [92.1, 7084.0], [92.2, 7118.0], [92.3, 7151.0], [92.4, 7183.0], [92.5, 7214.0], [92.6, 7239.0], [92.7, 7268.0], [92.8, 7294.0], [92.9, 7325.0], [93.0, 7357.0], [93.1, 7380.0], [93.2, 7408.0], [93.3, 7439.0], [93.4, 7466.0], [93.5, 7498.0], [93.6, 7531.0], [93.7, 7558.0], [93.8, 7593.0], [93.9, 7626.0], [94.0, 7676.0], [94.1, 7732.0], [94.2, 7782.0], [94.3, 7850.0], [94.4, 7912.0], [94.5, 7974.0], [94.6, 8040.0], [94.7, 8102.0], [94.8, 8160.0], [94.9, 8215.0], [95.0, 8260.0], [95.1, 8301.0], [95.2, 8339.0], [95.3, 8377.0], [95.4, 8411.0], [95.5, 8445.0], [95.6, 8485.0], [95.7, 8522.0], [95.8, 8561.0], [95.9, 8611.0], [96.0, 8661.0], [96.1, 8709.0], [96.2, 8766.0], [96.3, 8841.0], [96.4, 8912.0], [96.5, 8998.0], [96.6, 9070.0], [96.7, 9147.0], [96.8, 9215.0], [96.9, 9277.0], [97.0, 9324.0], [97.1, 9374.0], [97.2, 9418.0], [97.3, 9461.0], [97.4, 9502.0], [97.5, 9545.0], [97.6, 9591.0], [97.7, 9649.0], [97.8, 9709.0], [97.9, 9778.0], [98.0, 9878.0], [98.1, 9989.0], [98.2, 10069.0], [98.3, 10119.0], [98.4, 10178.0], [98.5, 10229.0], [98.6, 10285.0], [98.7, 10337.0], [98.8, 10387.0], [98.9, 10433.0], [99.0, 10479.0], [99.1, 10528.0], [99.2, 10571.0], [99.3, 10624.0], [99.4, 10691.0], [99.5, 10772.0], [99.6, 10883.0], [99.7, 11031.0], [99.8, 11209.0], [99.9, 11449.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 42264.0, "series": [{"data": [[0.0, 29330.0], [100.0, 706.0], [200.0, 224.0], [300.0, 128.0], [400.0, 89.0], [500.0, 87.0], [600.0, 68.0], [700.0, 27.0], [800.0, 45.0], [900.0, 34.0], [1000.0, 18663.0], [1100.0, 42264.0], [1200.0, 8796.0], [1300.0, 7367.0], [1400.0, 6090.0], [1500.0, 5871.0], [1600.0, 5554.0], [1700.0, 5448.0], [1800.0, 5845.0], [1900.0, 5346.0], [2000.0, 5140.0], [2100.0, 5693.0], [2300.0, 3416.0], [2200.0, 3937.0], [2400.0, 2885.0], [2500.0, 2645.0], [2600.0, 2647.0], [2800.0, 2883.0], [2700.0, 2722.0], [2900.0, 3064.0], [3000.0, 3037.0], [3100.0, 3443.0], [3200.0, 2879.0], [3300.0, 2543.0], [3400.0, 2186.0], [3500.0, 1964.0], [3600.0, 1849.0], [3700.0, 1793.0], [3800.0, 1863.0], [3900.0, 2062.0], [4000.0, 2363.0], [4100.0, 2560.0], [4200.0, 2552.0], [4300.0, 2058.0], [4400.0, 1639.0], [4500.0, 1348.0], [4600.0, 1191.0], [4700.0, 1160.0], [4800.0, 1250.0], [5100.0, 1834.0], [5000.0, 1637.0], [4900.0, 1289.0], [5300.0, 1666.0], [5200.0, 1918.0], [5400.0, 1255.0], [5600.0, 790.0], [5500.0, 1023.0], [5700.0, 844.0], [5800.0, 834.0], [5900.0, 790.0], [6000.0, 903.0], [6100.0, 1059.0], [6200.0, 1294.0], [6300.0, 1220.0], [6500.0, 695.0], [6400.0, 992.0], [6600.0, 555.0], [6800.0, 555.0], [6900.0, 458.0], [6700.0, 523.0], [7100.0, 789.0], [7000.0, 633.0], [7300.0, 917.0], [7200.0, 959.0], [7400.0, 864.0], [7600.0, 583.0], [7500.0, 824.0], [7700.0, 478.0], [7800.0, 397.0], [7900.0, 413.0], [8000.0, 403.0], [8100.0, 446.0], [8200.0, 596.0], [8300.0, 701.0], [8400.0, 704.0], [8500.0, 628.0], [8600.0, 525.0], [8700.0, 424.0], [8800.0, 358.0], [8900.0, 316.0], [9000.0, 333.0], [9100.0, 386.0], [9200.0, 432.0], [9300.0, 563.0], [9500.0, 572.0], [9400.0, 603.0], [9600.0, 448.0], [9700.0, 361.0], [9900.0, 223.0], [10000.0, 396.0], [10100.0, 469.0], [10200.0, 492.0], [9800.0, 257.0], [10400.0, 569.0], [10600.0, 405.0], [10500.0, 553.0], [10300.0, 496.0], [10700.0, 295.0], [11100.0, 130.0], [10800.0, 227.0], [10900.0, 184.0], [11000.0, 161.0], [11200.0, 137.0], [11600.0, 11.0], [11700.0, 9.0], [11300.0, 99.0], [11400.0, 78.0], [11500.0, 40.0], [11800.0, 14.0], [11900.0, 10.0], [12000.0, 8.0], [12200.0, 3.0], [12100.0, 5.0], [12600.0, 5.0], [12400.0, 6.0], [12500.0, 6.0], [12300.0, 5.0], [12700.0, 2.0], [12900.0, 4.0], [13300.0, 3.0], [13000.0, 4.0], [12800.0, 6.0], [13100.0, 6.0], [13200.0, 1.0], [13400.0, 3.0], [13500.0, 4.0], [13700.0, 3.0], [13600.0, 5.0], [13800.0, 5.0], [14200.0, 2.0], [14000.0, 4.0], [13900.0, 2.0], [14300.0, 2.0], [14500.0, 3.0], [14400.0, 5.0], [14800.0, 2.0], [14700.0, 3.0], [15000.0, 1.0], [15100.0, 3.0], [15200.0, 2.0], [14900.0, 1.0], [15600.0, 3.0], [15700.0, 2.0], [15500.0, 1.0], [16200.0, 2.0], [16100.0, 1.0], [16000.0, 3.0], [15900.0, 1.0], [17300.0, 3.0], [16700.0, 1.0], [16500.0, 1.0], [16400.0, 2.0], [17700.0, 1.0], [17500.0, 1.0], [18500.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 18500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 223.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 144442.0, "series": [{"data": [[0.0, 223.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 83129.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 144442.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 32142.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2881.232773701678, "minX": 1.68420618E12, "maxY": 3000.0, "series": [{"data": [[1.68420624E12, 3000.0], [1.68420642E12, 3000.0], [1.6842063E12, 3000.0], [1.68420648E12, 2881.232773701678], [1.68420618E12, 3000.0], [1.68420636E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420648E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 565.5, "minX": 1.0, "maxY": 17578.0, "series": [{"data": [[5.0, 10943.5], [6.0, 11098.0], [7.0, 10303.0], [8.0, 10974.0], [9.0, 11098.0], [10.0, 10933.0], [11.0, 10486.0], [12.0, 10462.0], [13.0, 10884.0], [14.0, 11128.0], [15.0, 10065.0], [16.0, 10738.0], [17.0, 9874.0], [18.0, 10876.0], [19.0, 10546.0], [20.0, 10051.0], [21.0, 9594.0], [22.0, 11073.0], [23.0, 10524.0], [24.0, 10528.0], [25.0, 9901.0], [26.0, 9410.0], [27.0, 9730.0], [28.0, 11022.0], [29.0, 10810.0], [30.0, 10694.0], [31.0, 10438.0], [33.0, 10256.0], [32.0, 9985.0], [35.0, 10500.0], [34.0, 9788.0], [37.0, 10250.0], [36.0, 10934.0], [39.0, 10219.0], [38.0, 10842.0], [41.0, 10256.0], [43.0, 10132.0], [42.0, 11348.0], [45.0, 10573.0], [44.0, 10135.0], [47.0, 10413.0], [46.0, 10110.0], [49.0, 10238.0], [50.0, 10305.0], [53.0, 10181.0], [52.0, 10827.0], [55.0, 10665.0], [54.0, 9953.0], [57.0, 9989.0], [56.0, 10122.0], [59.0, 9552.0], [58.0, 9439.0], [61.0, 10815.0], [60.0, 9865.0], [63.0, 9202.0], [62.0, 10971.0], [65.0, 9114.0], [64.0, 10057.0], [75.0, 10408.0], [78.0, 9792.0], [77.0, 9959.0], [76.0, 9872.0], [83.0, 9705.666666666666], [82.0, 10628.0], [81.0, 10040.4], [86.0, 9434.666666666666], [84.0, 10429.0], [90.0, 9720.0], [89.0, 9613.0], [88.0, 10807.0], [95.0, 10515.0], [94.0, 11052.5], [93.0, 11319.0], [92.0, 10905.0], [99.0, 10409.0], [98.0, 10564.0], [97.0, 10873.0], [96.0, 9964.0], [103.0, 10834.0], [102.0, 10871.0], [101.0, 7877.0], [100.0, 10420.0], [107.0, 9321.0], [106.0, 8885.0], [105.0, 9304.0], [104.0, 9500.0], [111.0, 10344.5], [109.0, 11039.0], [108.0, 10600.0], [115.0, 8503.0], [114.0, 8349.0], [113.0, 10283.0], [118.0, 9715.0], [117.0, 10883.0], [116.0, 8203.0], [123.0, 8509.0], [122.0, 10096.0], [121.0, 10400.0], [120.0, 9194.0], [127.0, 11093.0], [126.0, 10528.0], [125.0, 9912.5], [135.0, 10099.0], [133.0, 8970.0], [132.0, 7910.0], [131.0, 10448.0], [130.0, 10215.0], [129.0, 9069.0], [128.0, 10381.0], [143.0, 11393.0], [142.0, 10964.0], [141.0, 10264.0], [140.0, 10092.0], [139.0, 11100.0], [138.0, 9064.0], [137.0, 8866.0], [136.0, 8419.0], [150.0, 8167.0], [148.0, 10663.0], [147.0, 8865.0], [146.0, 10081.0], [145.0, 8846.0], [144.0, 11093.0], [159.0, 9046.0], [167.0, 9860.25], [166.0, 7865.0], [162.0, 7869.0], [161.0, 9266.666666666666], [175.0, 10460.333333333334], [173.0, 9981.333333333334], [172.0, 10123.5], [170.0, 9522.5], [169.0, 9578.0], [183.0, 9089.0], [182.0, 10448.0], [181.0, 10205.0], [180.0, 9777.5], [179.0, 9677.666666666666], [178.0, 9569.0], [176.0, 8799.0], [191.0, 8339.0], [190.0, 7997.0], [189.0, 11044.0], [188.0, 8889.0], [187.0, 8306.0], [186.0, 10539.0], [185.0, 10477.0], [184.0, 10598.0], [199.0, 10405.0], [197.0, 10601.0], [196.0, 8501.0], [195.0, 8111.0], [194.0, 8316.0], [193.0, 10310.0], [192.0, 10475.0], [207.0, 10883.0], [206.0, 10948.0], [205.0, 8737.0], [204.0, 7716.0], [203.0, 7977.0], [202.0, 10359.0], [201.0, 10671.0], [200.0, 10349.0], [215.0, 8268.0], [214.0, 8327.0], [213.0, 8887.0], [212.0, 7208.0], [211.0, 7810.0], [210.0, 8800.0], [209.0, 8495.0], [208.0, 10458.0], [223.0, 8150.0], [222.0, 8715.0], [221.0, 8133.0], [220.0, 8148.0], [219.0, 10309.0], [218.0, 10446.0], [217.0, 8471.0], [231.0, 8647.5], [229.0, 8656.0], [228.0, 10092.0], [227.0, 8985.0], [226.0, 7466.0], [225.0, 10752.0], [224.0, 9154.0], [239.0, 10248.0], [238.0, 9135.0], [237.0, 9054.0], [236.0, 10396.0], [235.0, 9097.0], [234.0, 10242.0], [233.0, 10045.0], [232.0, 10147.0], [247.0, 9851.0], [246.0, 9024.0], [245.0, 7910.0], [244.0, 10104.0], [243.0, 7863.0], [242.0, 10634.0], [241.0, 10415.0], [240.0, 10307.0], [255.0, 10386.0], [254.0, 9860.0], [253.0, 10900.0], [252.0, 8510.0], [251.0, 8767.0], [249.0, 9302.0], [248.0, 10148.0], [270.0, 8051.0], [271.0, 7260.0], [269.0, 7611.0], [268.0, 7209.0], [267.0, 10004.0], [266.0, 8040.0], [265.0, 7092.0], [264.0, 10897.0], [263.0, 6891.0], [256.0, 17578.0], [259.0, 12513.0], [258.0, 13815.0], [262.0, 7254.0], [261.0, 11061.0], [260.0, 6356.0], [286.0, 10563.0], [287.0, 6825.0], [285.0, 8660.0], [284.0, 11094.0], [283.0, 10045.0], [282.0, 10509.0], [281.0, 7929.0], [280.0, 9757.0], [279.0, 7377.0], [273.0, 7096.0], [272.0, 8136.0], [275.0, 7421.0], [274.0, 6008.0], [278.0, 8709.0], [277.0, 7448.0], [276.0, 10573.0], [301.0, 9984.0], [302.0, 10557.0], [300.0, 7632.0], [291.0, 7551.0], [290.0, 7993.0], [289.0, 8941.0], [288.0, 7409.0], [299.0, 8883.0], [297.0, 10681.0], [296.0, 8709.0], [294.0, 10603.0], [293.0, 10035.0], [292.0, 8561.0], [318.0, 10515.0], [319.0, 10052.0], [317.0, 7295.0], [316.0, 6849.0], [315.0, 8456.5], [313.0, 7405.0], [312.0, 10743.0], [311.0, 8063.0], [305.0, 10034.0], [304.0, 8984.5], [307.0, 8883.0], [306.0, 6883.0], [310.0, 9536.0], [309.0, 8347.0], [308.0, 10723.0], [333.0, 7494.0], [334.0, 6233.0], [332.0, 8744.5], [322.0, 10883.0], [321.0, 10546.0], [320.0, 7398.0], [331.0, 7120.0], [330.0, 7824.0], [328.0, 7211.0], [326.0, 8390.0], [325.0, 10133.0], [324.0, 10409.0], [350.0, 7180.0], [351.0, 10969.0], [349.0, 7781.0], [348.0, 9412.0], [347.0, 9944.0], [346.0, 10892.0], [345.0, 6418.0], [344.0, 10431.0], [343.0, 7384.0], [336.0, 8912.5], [339.0, 9836.0], [337.0, 8362.0], [342.0, 8300.0], [341.0, 8444.0], [340.0, 10365.0], [366.0, 8827.0], [367.0, 10506.0], [365.0, 9261.0], [364.0, 7883.0], [363.0, 7652.0], [362.0, 8786.0], [361.0, 7338.0], [360.0, 9259.0], [359.0, 8178.0], [352.0, 8756.0], [355.0, 8400.0], [353.0, 10450.0], [358.0, 7744.0], [357.0, 10489.0], [356.0, 8078.0], [381.0, 8658.0], [382.0, 10305.0], [380.0, 6947.0], [370.0, 7448.0], [369.0, 6488.0], [368.0, 7081.0], [379.0, 10274.0], [378.0, 8351.0], [377.0, 7127.0], [376.0, 8512.0], [375.0, 8696.0], [374.0, 9259.0], [373.0, 10386.0], [372.0, 8356.0], [398.0, 8763.5], [399.0, 11094.0], [396.0, 7340.0], [387.0, 10425.0], [386.0, 9409.0], [385.0, 10269.0], [384.0, 7807.0], [395.0, 10779.0], [394.0, 6367.0], [393.0, 8873.0], [392.0, 10606.0], [391.0, 9036.0], [390.0, 10278.0], [389.0, 8897.0], [388.0, 7439.0], [414.0, 11175.0], [415.0, 6737.0], [413.0, 6426.0], [412.0, 10536.0], [411.0, 8319.0], [410.0, 6466.0], [409.0, 6355.0], [408.0, 8957.0], [406.0, 8970.0], [403.0, 8292.0], [402.0, 6644.5], [400.0, 10036.0], [405.0, 9878.0], [429.0, 7913.0], [430.0, 7148.0], [428.0, 10797.0], [419.0, 7717.0], [418.0, 6030.0], [417.0, 9587.0], [416.0, 9006.0], [427.0, 6024.0], [426.0, 6990.0], [425.0, 7084.0], [424.0, 7700.0], [423.0, 11083.0], [422.0, 10413.0], [421.0, 7401.0], [420.0, 6738.0], [446.0, 8349.5], [447.0, 5685.0], [444.0, 8553.0], [435.0, 7004.0], [434.0, 7623.5], [432.0, 6146.0], [443.0, 7385.0], [442.0, 7493.0], [441.0, 7046.0], [439.0, 8338.0], [437.0, 5389.0], [436.0, 8728.0], [462.0, 8593.0], [463.0, 8778.0], [461.0, 10880.0], [460.0, 6421.0], [459.0, 7026.5], [457.0, 9441.0], [456.0, 6485.0], [455.0, 9478.0], [449.0, 7967.0], [448.0, 10073.0], [451.0, 5890.0], [450.0, 8154.0], [454.0, 6809.0], [453.0, 7501.0], [452.0, 10290.0], [478.0, 6358.0], [479.0, 10984.0], [477.0, 7874.0], [476.0, 10449.0], [475.0, 6016.0], [474.0, 10956.0], [473.0, 5817.0], [472.0, 10496.0], [471.0, 7847.0], [465.0, 5933.0], [464.0, 8729.0], [467.0, 10039.0], [466.0, 7429.0], [470.0, 10512.0], [469.0, 10932.0], [468.0, 10045.0], [493.0, 6712.0], [494.0, 6821.0], [492.0, 6694.0], [483.0, 8925.0], [482.0, 8003.0], [481.0, 7006.0], [480.0, 10482.0], [491.0, 6221.0], [490.0, 9713.0], [489.0, 8574.0], [488.0, 5745.0], [487.0, 6702.0], [486.0, 10452.0], [485.0, 7663.0], [484.0, 6835.0], [510.0, 7357.0], [511.0, 5596.0], [509.0, 8568.0], [508.0, 9485.0], [507.0, 6234.0], [506.0, 9402.0], [504.0, 8245.0], [503.0, 8165.5], [496.0, 10734.5], [499.0, 10222.0], [497.0, 10927.0], [501.0, 7307.0], [500.0, 6507.0], [540.0, 10500.0], [542.0, 8521.0], [538.0, 6119.0], [536.0, 7777.0], [534.0, 10455.0], [532.0, 11378.0], [530.0, 9342.0], [528.0, 10980.0], [520.0, 5773.0], [512.0, 10415.0], [518.0, 6181.0], [516.0, 9722.333333333334], [572.0, 5088.0], [574.0, 10281.0], [570.0, 10071.0], [568.0, 7005.0], [566.0, 7351.0], [564.0, 6977.0], [562.0, 8277.0], [560.0, 5997.0], [558.0, 7672.5], [546.0, 5492.0], [544.0, 8260.0], [550.0, 5473.0], [548.0, 8422.0], [556.0, 7995.0], [552.0, 6488.0], [604.0, 10196.0], [606.0, 5029.0], [600.0, 11097.0], [580.0, 10776.5], [578.0, 7027.0], [576.0, 10317.0], [598.0, 7018.0], [594.0, 4953.0], [592.0, 10160.0], [590.0, 4588.0], [588.0, 10737.0], [586.0, 8579.0], [584.0, 6571.0], [634.0, 5980.0], [636.0, 5450.0], [632.0, 8993.0], [610.0, 6523.5], [608.0, 5914.0], [630.0, 8137.0], [628.0, 6816.0], [624.0, 6461.0], [622.0, 8707.5], [620.0, 5782.0], [618.0, 6928.0], [616.0, 8157.0], [668.0, 6427.0], [670.0, 8533.0], [666.0, 6763.0], [646.0, 9889.0], [644.0, 5254.0], [642.0, 6332.0], [640.0, 10998.0], [662.0, 6937.0], [660.0, 4965.0], [658.0, 5300.0], [656.0, 5527.0], [654.0, 5978.0], [652.0, 7676.0], [650.0, 5489.0], [648.0, 7063.0], [698.0, 9638.0], [700.0, 9861.0], [696.0, 8409.0], [678.0, 6813.0], [676.0, 5666.0], [694.0, 7099.0], [692.0, 10694.0], [690.0, 8561.0], [686.0, 7026.5], [684.0, 6432.0], [680.0, 8437.5], [710.0, 7893.0], [732.0, 5130.0], [728.0, 6420.0], [726.0, 6075.5], [722.0, 5745.0], [720.0, 6559.0], [718.0, 8183.5], [716.0, 8818.0], [712.0, 10239.0], [706.0, 7844.0], [704.0, 5947.0], [764.0, 5639.0], [766.0, 9907.0], [762.0, 9379.0], [760.0, 6737.0], [758.0, 4601.0], [756.0, 9949.0], [754.0, 8350.0], [752.0, 6298.0], [750.0, 4852.0], [736.0, 4524.0], [742.0, 7647.0], [738.0, 7852.0], [748.0, 8721.0], [746.0, 5179.0], [744.0, 6295.0], [796.0, 8184.0], [798.0, 10207.0], [794.0, 7018.0], [792.0, 8366.0], [790.0, 9864.0], [788.0, 4974.0], [784.0, 5685.0], [782.0, 10550.0], [770.0, 8332.0], [768.0, 7664.0], [774.0, 8738.5], [772.0, 6105.5], [780.0, 8834.0], [778.0, 6347.0], [828.0, 4875.0], [830.0, 5485.0], [824.0, 4310.0], [806.0, 6547.0], [804.0, 4533.0], [802.0, 6000.0], [822.0, 6613.0], [820.0, 4923.0], [816.0, 8770.0], [814.0, 8247.0], [812.0, 8016.0], [810.0, 6449.0], [808.0, 7122.0], [860.0, 10738.0], [862.0, 4198.0], [858.0, 6435.0], [856.0, 4179.0], [852.0, 7473.0], [850.0, 10037.0], [848.0, 8557.0], [846.0, 10492.0], [834.0, 4957.0], [832.0, 6179.0], [838.0, 10742.0], [836.0, 10048.0], [844.0, 10055.0], [840.0, 16408.0], [892.0, 8941.0], [894.0, 6550.0], [890.0, 4805.0], [888.0, 6117.0], [886.0, 9948.0], [884.0, 5894.0], [882.0, 5478.0], [878.0, 8950.0], [866.0, 11065.0], [864.0, 7592.5], [870.0, 5413.0], [868.0, 10354.0], [876.0, 8287.0], [874.0, 8884.0], [872.0, 6044.0], [922.0, 4724.0], [926.0, 5505.0], [920.0, 5572.0], [902.0, 4760.0], [900.0, 5098.0], [898.0, 6150.0], [896.0, 4740.0], [918.0, 6126.0], [916.0, 5529.0], [914.0, 6592.0], [912.0, 4188.0], [910.0, 7688.0], [908.0, 5635.0], [906.0, 4727.5], [904.0, 5840.0], [956.0, 3682.0], [958.0, 4219.0], [954.0, 5521.0], [934.0, 9652.0], [932.0, 7599.0], [928.0, 7251.0], [950.0, 6292.0], [948.0, 4409.0], [946.0, 10585.0], [944.0, 4391.0], [942.0, 4305.0], [938.0, 6381.5], [936.0, 6040.0], [988.0, 6162.0], [990.0, 8246.0], [986.0, 5951.0], [984.0, 10926.0], [982.0, 6555.5], [980.0, 7542.0], [978.0, 3735.0], [976.0, 6242.0], [974.0, 5846.0], [960.0, 4506.0], [966.0, 9736.0], [964.0, 7425.0], [970.0, 6293.0], [968.0, 6831.0], [1018.0, 8775.0], [1022.0, 10054.0], [1016.0, 5144.0], [998.0, 6998.0], [996.0, 6328.0], [994.0, 4493.0], [992.0, 8059.0], [1012.0, 6911.0], [1010.0, 5308.0], [1008.0, 6262.0], [1006.0, 8389.0], [1004.0, 10429.0], [1002.0, 8322.0], [1000.0, 9718.0], [1084.0, 3136.0], [1080.0, 10406.0], [1068.0, 9820.0], [1064.0, 7734.0], [1056.0, 3677.0], [1048.0, 6225.0], [1044.0, 10119.0], [1036.0, 6587.0], [1032.0, 6405.0], [1136.0, 5084.0], [1148.0, 7473.0], [1120.0, 6486.0], [1140.0, 8394.0], [1096.0, 3483.0], [1100.0, 7221.0], [1116.0, 8928.5], [1092.0, 5589.0], [1088.0, 8587.0], [1112.0, 5092.0], [1104.0, 4140.0], [1132.0, 4146.0], [1128.0, 8372.0], [1200.0, 11125.0], [1208.0, 6119.0], [1212.0, 9192.0], [1184.0, 7406.0], [1188.0, 5770.666666666666], [1204.0, 4956.0], [1180.0, 10502.0], [1152.0, 2865.0], [1156.0, 4267.0], [1160.0, 6039.0], [1164.0, 5374.0], [1176.0, 9679.0], [1172.0, 4259.0], [1168.0, 11103.0], [1196.0, 10182.0], [1192.0, 4234.0], [1264.0, 4891.0], [1276.0, 8043.0], [1248.0, 10360.0], [1252.0, 3539.0], [1268.0, 3400.0], [1216.0, 9057.0], [1224.0, 4604.0], [1228.0, 6805.0], [1244.0, 3987.0], [1240.0, 6907.0], [1236.0, 4535.5], [1232.0, 5615.0], [1260.0, 7033.0], [1332.0, 3818.0], [1340.0, 3452.0], [1312.0, 6485.0], [1316.0, 2708.0], [1320.0, 3469.0], [1336.0, 3295.0], [1328.0, 3247.0], [1292.0, 4378.0], [1288.0, 6386.0], [1284.0, 4989.0], [1280.0, 5889.0], [1308.0, 6907.0], [1304.0, 3221.0], [1300.0, 6589.0], [1296.0, 3883.0], [1324.0, 7625.0], [1348.0, 8244.0], [1396.0, 6740.333333333333], [1404.0, 3734.0], [1400.0, 3148.0], [1344.0, 7824.0], [1356.0, 9168.0], [1352.0, 10155.0], [1372.0, 3126.0], [1364.0, 8613.0], [1360.0, 3055.0], [1380.0, 4005.0], [1376.0, 10031.0], [1464.0, 2900.0], [1440.0, 4732.0], [1444.0, 2451.0], [1448.0, 8534.0], [1468.0, 7241.0], [1460.0, 5747.0], [1456.0, 6709.0], [1436.0, 7820.0], [1412.0, 4829.333333333333], [1408.0, 4360.0], [1420.0, 5950.0], [1428.0, 5875.0], [1424.0, 3782.0], [1452.0, 3823.0], [1524.0, 6652.0], [1532.0, 7634.0], [1504.0, 3825.0], [1508.0, 4962.5], [1512.0, 6017.0], [1528.0, 7280.0], [1484.0, 7251.0], [1480.0, 11007.0], [1476.0, 6258.0], [1472.0, 9180.0], [1496.0, 5939.0], [1492.0, 2907.0], [1488.0, 2966.0], [1516.0, 9135.0], [1592.0, 4030.0], [1596.0, 4847.0], [1568.0, 3250.0], [1572.0, 7896.0], [1576.0, 4848.0], [1588.0, 3197.0], [1584.0, 3147.0], [1548.0, 6464.0], [1544.0, 2409.0], [1540.0, 3561.0], [1536.0, 8292.0], [1560.0, 11143.0], [1556.0, 5938.0], [1552.0, 9068.0], [1580.0, 7512.0], [1648.0, 4662.0], [1660.0, 6217.0], [1640.0, 5768.0], [1632.0, 1097.0], [1636.0, 6092.0], [1612.0, 7516.5], [1608.0, 7830.0], [1604.0, 5050.0], [1600.0, 10016.0], [1628.0, 5223.0], [1624.0, 7925.0], [1620.0, 4237.0], [1616.0, 5233.0], [1644.0, 6877.0], [1720.0, 5502.0], [1724.0, 2917.0], [1696.0, 7833.0], [1700.0, 5998.0], [1712.0, 4916.0], [1676.0, 4535.0], [1672.0, 5266.0], [1668.0, 3887.0], [1664.0, 2675.0], [1692.0, 3950.0], [1688.0, 4707.0], [1684.0, 3568.0], [1680.0, 4637.0], [1708.0, 1099.0], [1736.0, 4872.5], [1776.0, 2855.0], [1788.0, 5930.5], [1760.0, 5090.0], [1728.0, 7362.0], [1732.0, 5265.0], [1740.0, 6274.25], [1756.0, 6172.5], [1748.0, 2017.5], [1744.0, 6080.0], [1772.0, 6482.0], [1768.0, 1741.0], [1840.0, 7472.0], [1844.0, 7169.0], [1828.0, 6334.0], [1852.0, 4407.5], [1824.0, 1094.0], [1804.0, 9008.5], [1800.0, 8959.0], [1796.0, 2674.0], [1792.0, 2917.0], [1816.0, 5267.0], [1812.0, 3168.0], [1808.0, 9558.0], [1836.0, 2033.0], [1832.0, 4723.0], [1904.0, 2499.0], [1888.0, 6318.0], [1912.0, 1973.0], [1908.0, 2619.3333333333335], [1860.0, 6396.0], [1868.0, 6663.0], [1884.0, 1260.0], [1880.0, 6281.0], [1876.0, 5585.0], [1872.0, 4826.0], [1968.0, 1093.0], [1976.0, 3257.0], [1952.0, 8150.0], [1956.0, 1098.0], [1980.0, 10401.0], [1972.0, 6577.0], [1924.0, 7933.0], [1928.0, 9000.0], [1932.0, 1133.0], [1948.0, 1110.0], [1940.0, 6270.0], [1936.0, 10379.0], [1964.0, 5157.0], [2036.0, 1103.0], [2032.0, 5120.0], [2028.0, 7833.0], [2016.0, 6846.5], [2020.0, 1109.0], [2040.0, 5395.0], [1984.0, 11317.0], [1992.0, 4070.0], [1996.0, 3113.0], [2012.0, 2296.0], [2008.0, 6618.0], [2004.0, 1430.0], [2000.0, 1094.0], [2168.0, 1099.5], [2160.0, 1095.0], [2112.0, 5973.0], [2120.0, 9054.0], [2128.0, 1093.0], [2136.0, 1094.5], [2152.0, 3683.0], [2048.0, 1095.0], [2056.0, 8191.0], [2064.0, 4138.0], [2072.0, 6182.5], [2104.0, 1102.0], [2096.0, 1673.0], [2088.0, 1095.0], [2288.0, 5694.0], [2296.0, 1646.0], [2240.0, 5762.0], [2248.0, 3901.0], [2256.0, 3694.5], [2264.0, 1110.0], [2280.0, 4784.0], [2272.0, 3193.0], [2176.0, 1127.0], [2184.0, 1435.0], [2192.0, 10632.0], [2200.0, 1099.0], [2232.0, 1103.0], [2224.0, 1732.0], [2216.0, 1843.0], [2416.0, 4531.0], [2424.0, 1241.0], [2384.0, 1345.0], [2368.0, 2475.0], [2376.0, 1555.0], [2392.0, 7351.0], [2408.0, 3739.5], [2400.0, 5559.0], [2328.0, 4861.0], [2320.0, 1293.0], [2360.0, 1099.0], [2352.0, 3571.0], [2544.0, 1127.0], [2528.0, 1098.0], [2520.0, 4280.666666666667], [2496.0, 1145.0], [2504.0, 2437.0], [2552.0, 2276.5], [2448.0, 3061.5], [2456.0, 1961.5], [2488.0, 1125.0], [2480.0, 1103.0], [2472.0, 4269.0], [2464.0, 1186.3333333333333], [2672.0, 4295.0], [2680.0, 8411.0], [2624.0, 4255.0], [2632.0, 5483.0], [2640.0, 1095.0], [2648.0, 5796.0], [2656.0, 6250.0], [2560.0, 1737.0], [2568.0, 1136.0], [2576.0, 4765.0], [2584.0, 1115.0], [2608.0, 8698.0], [2600.0, 5705.333333333333], [2592.0, 1109.0], [2792.0, 1093.0], [2760.0, 1280.0], [2768.0, 8437.0], [2776.0, 1212.0], [2800.0, 8052.5], [2784.0, 5422.666666666667], [2688.0, 6050.0], [2696.0, 3440.5], [2704.0, 1292.0], [2712.0, 2704.0], [2736.0, 1176.0], [2728.0, 3531.0], [2928.0, 1484.5], [2888.0, 4804.5], [2896.0, 1125.0], [2904.0, 2340.333333333333], [2936.0, 2192.714285714286], [2920.0, 1722.0], [2912.0, 2114.6666666666665], [2840.0, 5487.0], [2832.0, 2685.3333333333335], [2824.0, 7235.0], [2816.0, 7769.0], [2872.0, 2514.75], [2864.0, 3140.0], [2856.0, 1295.0], [2848.0, 2079.0], [2944.0, 1059.5555555555557], [2960.0, 1027.0], [3000.0, 2651.502584573686], [2968.0, 5417.0], [2992.0, 7255.5], [2984.0, 4420.666666666667], [2976.0, 2180.2], [2153.0, 1096.0], [2113.0, 1091.0], [2121.0, 1402.0], [2129.0, 2984.0], [2137.0, 1511.0], [2169.0, 11091.0], [2145.0, 2222.0], [2057.0, 5519.0], [2065.0, 6163.0], [2073.0, 4970.0], [2105.0, 5439.0], [2097.0, 9700.0], [2281.0, 1097.0], [2289.0, 6873.0], [2297.0, 3759.0], [2241.0, 4657.0], [2257.0, 1096.0], [2273.0, 9863.0], [2193.0, 1101.0], [2185.0, 6249.0], [2177.0, 1657.0], [2209.0, 5336.0], [2417.0, 1964.0], [2425.0, 3367.3333333333335], [2377.0, 1670.0], [2385.0, 2883.5], [2393.0, 7032.0], [2409.0, 1427.0], [2401.0, 3226.0], [2305.0, 5594.0], [2313.0, 1466.5], [2321.0, 1488.0], [2361.0, 1438.0], [2345.0, 1097.0], [2337.0, 4542.666666666667], [2553.0, 2077.0], [2545.0, 1143.5], [2513.0, 1102.0], [2505.0, 1226.5], [2497.0, 1102.0], [2537.0, 1098.5], [2529.0, 1096.25], [2457.0, 1098.0], [2449.0, 1394.0], [2441.0, 8528.5], [2433.0, 1236.0], [2489.0, 3444.0], [2481.0, 1096.0], [2473.0, 1095.0], [2465.0, 1155.0], [2681.0, 1095.0], [2625.0, 8414.0], [2633.0, 1203.0], [2641.0, 10588.0], [2649.0, 1473.0], [2673.0, 4637.0], [2665.0, 4037.0], [2561.0, 5284.0], [2617.0, 4208.0], [2609.0, 1835.0], [2601.0, 4238.0], [2801.0, 3660.0], [2809.0, 5868.0], [2753.0, 5436.0], [2761.0, 1781.5], [2769.0, 3732.0], [2777.0, 1092.0], [2689.0, 1471.0], [2697.0, 8853.0], [2705.0, 6554.0], [2713.0, 6663.0], [2737.0, 4245.0], [2729.0, 5867.5], [2937.0, 5166.0], [2881.0, 4077.5], [2889.0, 1184.5], [2897.0, 7183.0], [2905.0, 3060.0], [2929.0, 592.5], [2921.0, 565.5], [2913.0, 1677.0], [2841.0, 1910.0], [2833.0, 1926.3333333333335], [2865.0, 1555.5], [2849.0, 4810.0], [2945.0, 1097.0], [2993.0, 2189.5555555555557], [2953.0, 1995.5714285714287], [2961.0, 1399.0], [2969.0, 5433.428571428572], [2985.0, 2255.0], [2977.0, 2071.6666666666665], [1081.0, 6696.0], [1085.0, 10960.0], [1077.0, 6944.0], [1073.0, 8861.5], [1069.0, 8369.0], [1065.0, 4345.0], [1061.0, 7122.333333333333], [1053.0, 6635.0], [1037.0, 6410.0], [1025.0, 8158.0], [1049.0, 10498.0], [1045.0, 4046.0], [1041.0, 10818.0], [1145.0, 4548.0], [1121.0, 8428.0], [1125.0, 6209.0], [1129.0, 5017.0], [1149.0, 7221.0], [1141.0, 7774.0], [1137.0, 3417.0], [1117.0, 3454.0], [1093.0, 3469.0], [1097.0, 8663.0], [1101.0, 4120.0], [1113.0, 3988.0], [1109.0, 8394.0], [1105.0, 10856.0], [1209.0, 5746.0], [1213.0, 8285.0], [1189.0, 5980.0], [1185.0, 3367.0], [1205.0, 5785.0], [1153.0, 6032.0], [1157.0, 6351.0], [1161.0, 9615.0], [1165.0, 3940.0], [1181.0, 5025.0], [1177.0, 6895.0], [1173.0, 4135.0], [1169.0, 10678.0], [1193.0, 10200.0], [1265.0, 5849.0], [1273.0, 6271.0], [1253.0, 4713.0], [1257.0, 3738.0], [1277.0, 2707.0], [1269.0, 6562.0], [1217.0, 4856.0], [1221.0, 7632.5], [1225.0, 5258.0], [1229.0, 6145.0], [1245.0, 8783.0], [1261.0, 3187.0], [1337.0, 6364.0], [1313.0, 5692.0], [1317.0, 3454.0], [1321.0, 11016.0], [1341.0, 3453.0], [1333.0, 3640.0], [1329.0, 5733.0], [1281.0, 7721.0], [1285.0, 9294.0], [1289.0, 6057.0], [1293.0, 3379.0], [1309.0, 6583.0], [1297.0, 2432.0], [1325.0, 4310.0], [1393.0, 5811.0], [1377.0, 11104.0], [1401.0, 5486.0], [1397.0, 5421.0], [1345.0, 5489.0], [1349.0, 4142.0], [1353.0, 3296.0], [1373.0, 5873.0], [1369.0, 4465.5], [1365.0, 10586.0], [1361.0, 4571.0], [1389.0, 7510.0], [1465.0, 9234.5], [1449.0, 10249.0], [1469.0, 2596.0], [1441.0, 4499.0], [1445.0, 5157.0], [1461.0, 3112.0], [1457.0, 4255.0], [1421.0, 6056.0], [1417.0, 10619.0], [1413.0, 5328.0], [1409.0, 6578.0], [1437.0, 5305.0], [1429.0, 3746.0], [1425.0, 7869.0], [1453.0, 10313.0], [1529.0, 5401.0], [1521.0, 7441.5], [1509.0, 8333.0], [1505.0, 9225.0], [1513.0, 7667.0], [1533.0, 5416.0], [1525.0, 3032.0], [1473.0, 3542.0], [1477.0, 10939.0], [1485.0, 3861.0], [1497.0, 10234.0], [1493.0, 4701.0], [1489.0, 3988.0], [1517.0, 6277.0], [1593.0, 6868.0], [1597.0, 4961.0], [1569.0, 9096.0], [1573.0, 5305.0], [1577.0, 2854.0], [1585.0, 2730.0], [1549.0, 6965.0], [1545.0, 2774.0], [1541.0, 10622.0], [1537.0, 5640.0], [1565.0, 7890.5], [1561.0, 4383.0], [1557.0, 7563.0], [1553.0, 4242.0], [1649.0, 2553.0], [1657.0, 3108.5], [1633.0, 2692.0], [1637.0, 7931.0], [1661.0, 2440.0], [1653.0, 3456.0], [1601.0, 6334.0], [1605.0, 6722.0], [1609.0, 5999.0], [1613.0, 2619.0], [1625.0, 5247.0], [1621.0, 4686.0], [1617.0, 10241.0], [1645.0, 5152.0], [1721.0, 1103.0], [1705.0, 7761.5], [1697.0, 1114.0], [1701.0, 3849.0], [1717.0, 2240.6666666666665], [1677.0, 1093.0], [1673.0, 3534.0], [1665.0, 1927.0], [1693.0, 1103.0], [1689.0, 4133.0], [1685.0, 6190.0], [1681.0, 3710.0], [1709.0, 9678.0], [1781.0, 5384.666666666667], [1765.0, 1095.0], [1785.0, 6051.0], [1789.0, 1788.0], [1761.0, 5856.0], [1777.0, 7016.0], [1733.0, 3282.0], [1729.0, 4357.0], [1757.0, 6524.0], [1749.0, 2321.0], [1745.0, 4593.5], [1773.0, 3475.0], [1841.0, 9422.0], [1829.0, 1096.0], [1853.0, 4390.0], [1849.0, 7611.5], [1805.0, 4223.0], [1801.0, 4863.0], [1797.0, 1098.0], [1817.0, 10588.0], [1809.0, 8546.0], [1837.0, 1104.0], [1833.0, 1099.0], [1857.0, 7687.0], [1905.0, 6324.0], [1913.0, 11036.0], [1885.0, 6727.0], [1861.0, 2190.0], [1865.0, 3727.0], [1869.0, 6208.0], [1881.0, 7277.0], [1877.0, 5471.0], [1873.0, 2959.0], [1901.0, 3156.5], [1897.0, 3204.5], [1889.0, 10711.0], [1973.0, 9527.0], [1969.0, 3437.0], [1953.0, 1899.0], [1957.0, 1100.0], [1977.0, 8136.0], [1921.0, 3305.0], [1925.0, 2901.0], [1933.0, 2067.0], [1929.0, 1417.0], [1949.0, 10636.0], [1945.0, 5295.0], [1941.0, 1094.0], [1937.0, 4503.5], [1961.0, 5807.0], [2041.0, 1098.0], [2045.0, 3633.0], [2017.0, 2848.0], [2021.0, 1312.0], [2025.0, 5693.0], [2029.0, 1301.0], [2037.0, 1098.0], [2013.0, 10591.0], [1985.0, 3577.0], [1993.0, 3421.0], [1997.0, 3174.0], [2009.0, 5115.0], [2005.0, 2265.0], [2001.0, 5512.0], [2162.0, 1100.0], [2122.0, 1733.0], [2130.0, 1094.0], [2138.0, 1202.0], [2170.0, 3829.0], [2146.0, 1102.0], [2050.0, 1272.0], [2058.0, 1101.0], [2066.0, 9474.0], [2074.0, 2822.0], [2106.0, 9338.0], [2098.0, 1104.0], [2090.0, 1349.0], [2082.0, 1230.0], [2298.0, 2050.0], [2242.0, 6121.0], [2250.0, 2786.5], [2258.0, 5445.0], [2266.0, 1097.5], [2290.0, 1101.0], [2282.0, 7951.0], [2178.0, 1121.0], [2186.0, 1105.0], [2202.0, 3771.333333333333], [2234.0, 1105.0], [2226.0, 1555.0], [2218.0, 4332.0], [2210.0, 2185.0], [2426.0, 6243.0], [2370.0, 1264.0], [2386.0, 1107.0], [2394.0, 3130.0], [2402.0, 6214.0], [2330.0, 1105.0], [2314.0, 1106.0], [2306.0, 5480.0], [2362.0, 1107.0], [2354.0, 3565.5], [2346.0, 5019.666666666667], [2442.0, 5695.5], [2546.0, 1095.0], [2554.0, 3138.5], [2514.0, 1102.0], [2522.0, 1097.0], [2506.0, 1094.0], [2434.0, 2126.0], [2450.0, 1278.0], [2458.0, 1367.0], [2490.0, 5636.0], [2482.0, 1193.0], [2474.0, 1100.0], [2466.0, 1108.0], [2682.0, 1285.0], [2674.0, 1092.0], [2626.0, 2267.0], [2634.0, 4769.0], [2642.0, 1537.0], [2650.0, 10045.0], [2666.0, 4366.0], [2562.0, 2813.0], [2578.0, 1159.5], [2618.0, 1101.0], [2610.0, 9000.0], [2602.0, 4229.0], [2594.0, 3456.5], [2802.0, 2809.6666666666665], [2762.0, 1106.0], [2770.0, 1100.0], [2778.0, 1196.0], [2810.0, 1202.0], [2794.0, 4070.0], [2786.0, 5708.5], [2690.0, 1098.0], [2698.0, 1099.0], [2706.0, 1098.0], [2746.0, 1320.3333333333333], [2738.0, 6937.0], [2722.0, 2875.75], [2938.0, 3581.1666666666665], [2930.0, 1094.0], [2882.0, 1188.0], [2890.0, 4790.333333333333], [2898.0, 3151.25], [2906.0, 3626.6], [2922.0, 2520.75], [2914.0, 2069.5], [2842.0, 2825.6666666666665], [2834.0, 3050.0], [2826.0, 1434.6666666666667], [2818.0, 6944.5], [2874.0, 3112.5], [2866.0, 10847.0], [2858.0, 3297.25], [2850.0, 9882.0], [2954.0, 4731.75], [2946.0, 6427.0], [2962.0, 9022.0], [2970.0, 3072.5], [2994.0, 1822.4], [2986.0, 4736.0], [2978.0, 3238.0], [2155.0, 1153.0], [2115.0, 6003.5], [2131.0, 1099.0], [2139.0, 6347.0], [2171.0, 1627.0], [2147.0, 4855.0], [2051.0, 1100.5], [2059.0, 6918.0], [2067.0, 1094.0], [2075.0, 5045.0], [2107.0, 10173.0], [2099.0, 1093.0], [2091.0, 2859.0], [2083.0, 8106.0], [2291.0, 4797.0], [2283.0, 2745.0], [2251.0, 1128.0], [2267.0, 1093.0], [2299.0, 5719.0], [2195.0, 3913.0], [2187.0, 9088.0], [2179.0, 9812.0], [2235.0, 1939.0], [2219.0, 5261.0], [2211.0, 2653.0], [2419.0, 8517.0], [2427.0, 1316.0], [2379.0, 1102.5], [2387.0, 3163.0], [2395.0, 9975.0], [2411.0, 2872.5], [2403.0, 5237.0], [2307.0, 3155.0], [2331.0, 6226.5], [2363.0, 1094.0], [2347.0, 1096.0], [2339.0, 1159.0], [2555.0, 1877.0], [2547.0, 9820.0], [2507.0, 1187.0], [2515.0, 2181.0], [2499.0, 4276.5], [2523.0, 5039.0], [2539.0, 1099.0], [2451.0, 1149.0], [2443.0, 8559.0], [2491.0, 2837.5], [2483.0, 1093.0], [2475.0, 5240.0], [2467.0, 1098.0], [2667.0, 1105.0], [2683.0, 10668.0], [2627.0, 3472.5], [2635.0, 3206.0], [2659.0, 4901.666666666667], [2563.0, 3224.0], [2571.0, 3315.6666666666665], [2579.0, 2204.0], [2595.0, 1182.0], [2811.0, 2155.5], [2795.0, 2124.5], [2755.0, 3307.0], [2763.0, 1109.0], [2771.0, 1926.0], [2779.0, 1094.0], [2691.0, 5288.0], [2699.0, 1363.0], [2715.0, 4424.0], [2747.0, 5650.0], [2739.0, 2401.5], [2731.0, 5861.666666666667], [2723.0, 4335.0], [2931.0, 2067.875], [2891.0, 6878.0], [2883.0, 3393.5], [2899.0, 2564.5], [2907.0, 6995.0], [2939.0, 7087.0], [2923.0, 1092.0], [2915.0, 1287.5], [2843.0, 1333.0], [2835.0, 1963.0], [2827.0, 1286.0], [2819.0, 9584.5], [2867.0, 1102.0], [2859.0, 2895.0], [2851.0, 1106.0], [2955.0, 5850.5], [2947.0, 3374.3749999999995], [2963.0, 5003.0], [2971.0, 1108.0], [2995.0, 2256.9999999999995], [2987.0, 3159.3333333333335], [2979.0, 4495.0], [541.0, 8215.0], [543.0, 7739.0], [539.0, 8425.0], [537.0, 6552.0], [535.0, 10427.0], [533.0, 8409.0], [531.0, 7089.0], [529.0, 7766.0], [527.0, 8420.0], [519.0, 8336.0], [513.0, 8735.0], [525.0, 7489.0], [523.0, 6735.0], [521.0, 10297.0], [573.0, 10200.0], [575.0, 5966.0], [571.0, 10143.0], [569.0, 8598.0], [567.0, 5884.0], [565.0, 6116.0], [563.0, 9116.0], [561.0, 8639.0], [559.0, 10826.0], [547.0, 8266.0], [545.0, 7221.0], [551.0, 9469.0], [549.0, 7202.0], [555.0, 8396.5], [553.0, 5219.0], [605.0, 5653.0], [607.0, 10806.0], [603.0, 10858.0], [601.0, 10116.0], [599.0, 6257.0], [597.0, 8852.5], [595.0, 6862.0], [593.0, 5014.0], [591.0, 9098.0], [583.0, 10263.333333333334], [577.0, 9169.0], [589.0, 4906.0], [587.0, 8411.0], [585.0, 10385.0], [637.0, 6852.0], [639.0, 8866.0], [635.0, 6350.0], [633.0, 11023.0], [631.0, 5283.0], [629.0, 5153.0], [627.0, 7934.0], [625.0, 6814.0], [623.0, 6077.0], [613.0, 9072.5], [611.0, 8209.0], [619.0, 6154.0], [669.0, 9791.0], [671.0, 10221.0], [667.0, 5450.0], [665.0, 8834.5], [663.0, 6657.0], [661.0, 7125.0], [659.0, 6770.0], [657.0, 6523.0], [655.0, 9084.0], [643.0, 5952.0], [641.0, 6875.0], [647.0, 7431.0], [645.0, 6794.0], [653.0, 6488.0], [651.0, 7752.0], [649.0, 6051.0], [701.0, 9674.0], [703.0, 10244.5], [699.0, 7586.0], [697.0, 5705.0], [695.0, 5913.0], [693.0, 8339.0], [691.0, 8988.0], [689.0, 5704.666666666667], [683.0, 4624.0], [677.0, 7449.0], [675.0, 7437.5], [673.0, 8288.0], [681.0, 5530.0], [731.0, 10765.5], [735.0, 9318.666666666666], [729.0, 7322.0], [711.0, 5684.0], [709.0, 6476.0], [707.0, 10715.0], [705.0, 10636.0], [727.0, 6398.0], [725.0, 9989.0], [723.0, 5744.0], [721.0, 8137.0], [719.0, 5361.0], [715.0, 7693.5], [713.0, 6310.0], [765.0, 4674.0], [767.0, 5114.0], [763.0, 6271.0], [743.0, 6304.0], [741.0, 8625.0], [737.0, 7106.0], [759.0, 9543.0], [757.0, 8334.0], [755.0, 9325.0], [753.0, 4949.0], [751.0, 7426.0], [747.0, 8924.0], [745.0, 6454.0], [797.0, 6048.0], [799.0, 5232.0], [795.0, 6721.0], [793.0, 7810.0], [791.0, 7780.0], [789.0, 7718.0], [787.0, 8355.0], [783.0, 4096.0], [775.0, 10957.0], [769.0, 10929.0], [781.0, 5074.0], [779.0, 11061.0], [777.0, 8065.0], [829.0, 8907.0], [831.0, 4914.0], [827.0, 6927.5], [825.0, 4877.0], [823.0, 4393.0], [821.0, 6294.0], [819.0, 7306.5], [817.0, 8144.0], [815.0, 3888.0], [801.0, 6591.5], [807.0, 4932.0], [805.0, 7807.5], [811.0, 5458.0], [809.0, 7537.0], [859.0, 6490.0], [861.0, 4759.0], [857.0, 6853.0], [839.0, 6852.0], [837.0, 11208.0], [835.0, 6550.0], [833.0, 11186.0], [855.0, 9522.5], [853.0, 5526.0], [851.0, 6588.0], [849.0, 5035.0], [847.0, 4621.0], [845.0, 8692.0], [843.0, 6986.5], [841.0, 11097.0], [893.0, 4928.0], [895.0, 6802.0], [891.0, 6760.0], [889.0, 6327.0], [887.0, 6852.0], [885.0, 4775.0], [883.0, 6153.0], [881.0, 5250.0], [879.0, 10134.0], [867.0, 5876.0], [865.0, 10141.0], [871.0, 5552.0], [869.0, 11036.0], [877.0, 9564.0], [875.0, 8615.0], [873.0, 4887.0], [925.0, 7192.5], [927.0, 3508.0], [923.0, 9489.0], [921.0, 6169.0], [919.0, 6647.0], [917.0, 3074.0], [915.0, 11838.0], [913.0, 10579.0], [911.0, 10985.0], [899.0, 8450.0], [897.0, 5719.0], [903.0, 10968.0], [901.0, 9154.0], [909.0, 4568.0], [907.0, 10046.0], [955.0, 8542.0], [957.0, 10507.0], [953.0, 8244.5], [935.0, 5471.0], [933.0, 5170.0], [929.0, 5711.0], [951.0, 6852.0], [949.0, 6480.0], [947.0, 6525.0], [945.0, 6386.0], [943.0, 6726.0], [941.0, 4839.666666666667], [967.0, 6841.0], [989.0, 9478.0], [985.0, 6390.0], [965.0, 7547.0], [963.0, 5262.5], [961.0, 4284.0], [983.0, 6214.0], [979.0, 3636.0], [977.0, 9711.0], [975.0, 4448.0], [973.0, 3445.0], [971.0, 6412.0], [969.0, 4465.0], [1021.0, 4441.0], [1023.0, 3589.0], [1019.0, 6373.0], [1017.0, 8280.0], [1015.0, 8184.0], [1011.0, 6320.0], [1009.0, 9989.0], [1007.0, 6278.0], [995.0, 4265.0], [993.0, 9506.0], [999.0, 4455.0], [997.0, 10752.0], [1005.0, 7443.0], [1003.0, 10513.0], [1001.0, 6348.0], [1082.0, 10865.0], [1086.0, 4633.0], [1078.0, 4512.0], [1074.0, 4034.0], [1070.0, 3798.0], [1066.0, 6527.0], [1062.0, 8441.0], [1058.0, 4750.0], [1054.0, 4212.0], [1026.0, 4625.0], [1034.0, 7045.5], [1030.0, 5043.5], [1050.0, 8365.0], [1046.0, 5101.0], [1138.0, 5094.0], [1150.0, 3905.0], [1126.0, 6339.0], [1146.0, 7904.5], [1118.0, 8242.0], [1090.0, 8383.0], [1094.0, 6164.0], [1098.0, 6432.0], [1102.0, 11428.0], [1114.0, 9777.0], [1110.0, 5585.0], [1106.0, 5114.0], [1134.0, 7291.5], [1130.0, 6337.0], [1206.0, 10155.0], [1190.0, 6019.0], [1202.0, 7832.5], [1154.0, 6396.0], [1158.0, 3278.0], [1162.0, 4952.0], [1166.0, 5017.0], [1178.0, 8196.0], [1174.0, 10582.0], [1198.0, 7367.0], [1194.0, 8653.0], [1266.0, 3658.0], [1274.0, 7891.0], [1250.0, 7526.5], [1270.0, 5701.0], [1246.0, 6198.0], [1222.0, 8260.0], [1230.0, 7353.0], [1242.0, 4678.0], [1238.0, 4674.5], [1234.0, 8183.0], [1262.0, 3045.0], [1258.0, 9867.0], [1254.0, 7803.0], [1338.0, 6213.0], [1342.0, 6520.0], [1314.0, 2553.0], [1318.0, 2603.0], [1322.0, 5940.0], [1334.0, 3552.0], [1294.0, 4739.0], [1290.0, 3509.0], [1286.0, 2869.0], [1282.0, 8118.0], [1306.0, 3753.0], [1302.0, 6343.5], [1298.0, 6376.0], [1326.0, 5758.0], [1406.0, 8003.5], [1378.0, 9378.0], [1374.0, 10218.0], [1346.0, 5253.0], [1350.0, 5918.0], [1370.0, 9430.0], [1362.0, 5573.0], [1386.0, 8369.0], [1382.0, 4468.5], [1466.0, 4821.0], [1470.0, 10999.0], [1442.0, 5538.0], [1446.0, 6706.0], [1450.0, 3031.0], [1462.0, 9749.0], [1458.0, 6737.0], [1418.0, 6688.0], [1414.0, 9949.0], [1422.0, 8337.0], [1430.0, 5880.0], [1454.0, 7536.0], [1530.0, 3845.0], [1534.0, 7004.0], [1506.0, 2919.0], [1510.0, 7627.0], [1514.0, 7585.0], [1526.0, 2861.0], [1522.0, 2766.0], [1486.0, 8053.0], [1474.0, 5044.0], [1502.0, 5628.5], [1498.0, 5322.0], [1494.0, 6679.0], [1490.0, 11351.0], [1518.0, 6276.0], [1586.0, 5727.0], [1598.0, 4743.0], [1570.0, 8417.0], [1578.0, 3068.0], [1594.0, 11147.0], [1550.0, 2717.0], [1546.0, 3606.0], [1542.0, 8284.0], [1538.0, 9615.0], [1566.0, 9397.0], [1554.0, 5328.0], [1582.0, 2982.0], [1658.0, 8779.0], [1662.0, 3478.0], [1634.0, 2835.0], [1638.0, 1103.0], [1650.0, 2742.0], [1614.0, 8149.0], [1606.0, 10051.0], [1630.0, 2230.5], [1626.0, 3366.0], [1622.0, 3621.0], [1618.0, 10373.0], [1646.0, 4078.0], [1642.0, 8387.0], [1718.0, 3904.0], [1714.0, 3753.0], [1726.0, 1101.0], [1698.0, 2548.0], [1706.0, 1094.0], [1702.0, 5941.0], [1722.0, 5589.0], [1678.0, 10356.0], [1674.0, 3152.0], [1670.0, 7542.0], [1666.0, 3834.0], [1694.0, 8124.0], [1690.0, 6211.0], [1686.0, 6076.0], [1682.0, 5520.0], [1710.0, 3209.0], [1786.0, 1098.0], [1790.0, 7650.0], [1766.0, 2698.0], [1762.0, 1519.0], [1782.0, 4395.0], [1778.0, 4068.0], [1758.0, 10701.0], [1730.0, 6361.0], [1742.0, 2837.0], [1754.0, 4172.0], [1750.0, 2286.0], [1746.0, 5746.0], [1774.0, 1094.0], [1770.0, 4454.0], [1806.0, 4730.0], [1850.0, 1104.0], [1826.0, 3701.5], [1846.0, 2353.5], [1802.0, 7116.0], [1798.0, 6813.5], [1794.0, 3693.5], [1822.0, 6895.333333333333], [1818.0, 7931.0], [1814.0, 5997.5], [1810.0, 3197.0], [1830.0, 4794.0], [1858.0, 1094.0], [1914.0, 7465.0], [1918.0, 4863.5], [1910.0, 2800.0], [1886.0, 7817.0], [1862.0, 5842.0], [1866.0, 1098.0], [1882.0, 10551.0], [1878.0, 4877.0], [1874.0, 2030.0], [1902.0, 8559.0], [1898.0, 9480.0], [1894.0, 5894.666666666667], [1890.0, 4176.0], [1978.0, 6433.0], [1982.0, 10458.0], [1954.0, 5817.0], [1962.0, 4439.0], [1974.0, 11017.0], [1970.0, 1561.0], [1950.0, 6661.0], [1922.0, 10041.0], [1926.0, 1097.0], [1930.0, 1099.0], [1934.0, 4475.0], [1946.0, 4640.0], [1942.0, 3538.0], [1938.0, 1099.0], [1966.0, 8916.5], [2046.0, 7194.0], [2042.0, 8105.0], [2026.0, 1093.0], [2030.0, 2055.0], [2018.0, 1094.0], [2022.0, 1216.0], [2038.0, 1979.0], [2014.0, 1398.0], [1986.0, 6988.0], [1994.0, 1094.0], [1998.0, 10625.0], [2010.0, 1102.0], [2006.0, 1094.0], [2002.0, 1484.0], [2164.0, 1364.0], [2116.0, 3763.0], [2132.0, 1928.0], [2172.0, 5348.0], [2148.0, 1096.0], [2052.0, 1366.0], [2060.0, 2992.0], [2068.0, 2696.0], [2076.0, 1247.0], [2100.0, 4992.0], [2300.0, 3812.0], [2252.0, 4808.0], [2260.0, 1179.5], [2268.0, 5507.0], [2292.0, 1294.0], [2276.0, 7552.333333333333], [2236.0, 6875.0], [2180.0, 1097.0], [2188.0, 9288.0], [2196.0, 1479.5], [2204.0, 4768.5], [2228.0, 2238.0], [2220.0, 3735.0], [2212.0, 5203.0], [2404.0, 1388.0], [2428.0, 1283.0], [2372.0, 4456.0], [2380.0, 1096.0], [2388.0, 1105.0], [2396.0, 1429.0], [2324.0, 1787.0], [2316.0, 1314.5], [2308.0, 4554.0], [2364.0, 3708.5], [2356.0, 7939.0], [2340.0, 5994.5], [2444.0, 1196.0], [2500.0, 1111.0], [2508.0, 1098.0], [2532.0, 1100.3333333333333], [2436.0, 3282.5], [2460.0, 1178.5], [2492.0, 1404.0], [2476.0, 1339.0], [2468.0, 1100.0], [2668.0, 4240.0], [2628.0, 1920.0], [2636.0, 1096.0], [2644.0, 5158.0], [2652.0, 5241.5], [2684.0, 2705.0], [2660.0, 10015.0], [2564.0, 3792.5], [2572.0, 1381.5], [2588.0, 2788.4], [2620.0, 7185.5], [2612.0, 8327.0], [2604.0, 1098.0], [2804.0, 1826.0], [2764.0, 7442.0], [2756.0, 1468.0], [2772.0, 4984.0], [2796.0, 3180.0], [2788.0, 7212.0], [2692.0, 1890.0], [2700.0, 5885.5], [2708.0, 4963.5], [2716.0, 1100.0], [2740.0, 4868.333333333333], [2732.0, 1153.5], [2724.0, 1128.0], [2940.0, 4699.5625], [2884.0, 1877.0], [2892.0, 2971.4], [2900.0, 746.3333333333334], [2932.0, 1532.3333333333333], [2924.0, 1048.5], [2916.0, 2458.0], [2844.0, 744.5], [2836.0, 11072.0], [2828.0, 4021.0], [2820.0, 1399.0], [2876.0, 5845.5], [2868.0, 1428.0], [2860.0, 3361.0], [2852.0, 1367.0], [2956.0, 3433.0], [2948.0, 1630.0], [2964.0, 1108.0], [2972.0, 2772.0], [2996.0, 4626.4], [2988.0, 4624.833333333333], [2980.0, 2997.666666666667], [2157.0, 1828.0], [2125.0, 2352.0], [2165.0, 7009.0], [2117.0, 1099.0], [2141.0, 1678.5], [2149.0, 5002.0], [2053.0, 5108.0], [2061.0, 1241.0], [2069.0, 1105.0], [2077.0, 1098.0], [2109.0, 5309.0], [2101.0, 7549.0], [2093.0, 2536.0], [2085.0, 4183.5], [2301.0, 1107.0], [2245.0, 10988.0], [2253.0, 1097.0], [2261.0, 1454.0], [2269.0, 1148.0], [2293.0, 3284.0], [2197.0, 1110.0], [2189.0, 3652.0], [2181.0, 1095.0], [2237.0, 1393.0], [2229.0, 1599.0], [2213.0, 7343.0], [2413.0, 1130.0], [2381.0, 1095.0], [2389.0, 3750.0], [2429.0, 1380.0], [2405.0, 1380.0], [2309.0, 1419.0], [2317.0, 1531.0], [2365.0, 1468.0], [2357.0, 5832.0], [2341.0, 1274.0], [2557.0, 4722.0], [2509.0, 5488.0], [2517.0, 1099.0], [2525.0, 1099.6666666666667], [2549.0, 5087.0], [2541.0, 3036.0], [2461.0, 1160.0], [2453.0, 5408.0], [2445.0, 1100.0], [2437.0, 1117.0], [2493.0, 2741.0], [2477.0, 1131.0], [2469.0, 6117.0], [2685.0, 4926.0], [2677.0, 1421.25], [2629.0, 4425.0], [2637.0, 3106.0], [2645.0, 9846.0], [2653.0, 1098.5], [2669.0, 7204.0], [2661.0, 1100.0], [2573.0, 1212.0], [2581.0, 5301.5], [2589.0, 5328.0], [2805.0, 4234.75], [2757.0, 1164.0], [2765.0, 1120.5], [2781.0, 5111.0], [2813.0, 5854.5], [2789.0, 1246.5], [2709.0, 3768.0], [2717.0, 9593.0], [2749.0, 2362.0], [2741.0, 2030.0], [2733.0, 5634.0], [2725.0, 1372.0], [2917.0, 2661.0], [2925.0, 2490.4000000000005], [2933.0, 2470.5], [2885.0, 1106.0], [2901.0, 1363.5], [2845.0, 8178.0], [2837.0, 1099.0], [2877.0, 5300.0], [2869.0, 8022.5], [2949.0, 3619.666666666667], [2997.0, 8481.0], [2957.0, 2644.0], [2965.0, 2173.5], [2973.0, 4043.5], [2989.0, 1260.0], [1079.0, 6107.0], [1083.0, 6742.0], [1075.0, 7101.0], [1039.0, 6936.5], [1031.0, 7959.0], [1027.0, 5503.0], [1071.0, 9436.0], [1067.0, 4900.0], [1063.0, 4020.0], [1055.0, 7829.0], [1051.0, 5063.0], [1047.0, 6573.0], [1043.0, 7216.0], [1147.0, 5515.0], [1151.0, 6449.0], [1123.0, 7256.0], [1127.0, 9774.0], [1143.0, 8242.0], [1139.0, 7293.0], [1095.0, 11190.0], [1091.0, 7428.5], [1099.0, 3708.0], [1103.0, 8401.0], [1111.0, 7697.0], [1107.0, 4657.0], [1135.0, 7288.0], [1131.0, 6760.0], [1163.0, 3982.0], [1203.0, 6222.0], [1215.0, 6389.5], [1211.0, 5894.0], [1183.0, 5976.5], [1155.0, 4329.0], [1159.0, 4346.0], [1167.0, 6490.0], [1179.0, 6016.0], [1175.0, 10099.0], [1171.0, 5924.0], [1199.0, 4337.0], [1195.0, 7392.0], [1191.0, 6048.0], [1275.0, 6059.0], [1279.0, 5104.5], [1251.0, 5427.0], [1255.0, 3554.0], [1271.0, 4058.0], [1267.0, 6498.0], [1247.0, 4088.0], [1219.0, 4265.5], [1223.0, 5847.0], [1227.0, 4724.0], [1243.0, 9184.0], [1239.0, 10245.0], [1263.0, 6731.0], [1339.0, 2650.0], [1343.0, 4278.0], [1315.0, 2800.0], [1319.0, 7853.0], [1323.0, 3799.0], [1335.0, 5890.0], [1331.0, 9099.0], [1311.0, 3069.5], [1283.0, 7523.0], [1287.0, 5562.0], [1291.0, 5900.0], [1295.0, 4603.0], [1307.0, 9469.0], [1303.0, 6444.0], [1299.0, 6018.0], [1327.0, 3852.0], [1399.0, 3783.5], [1403.0, 4519.0], [1407.0, 6667.0], [1379.0, 9788.0], [1375.0, 7506.0], [1347.0, 3376.0], [1351.0, 2858.0], [1359.0, 7612.0], [1355.0, 7959.0], [1371.0, 4706.0], [1367.0, 5751.5], [1363.0, 4715.0], [1391.0, 6593.5], [1387.0, 2966.0], [1383.0, 6836.0], [1443.0, 8288.0], [1467.0, 9944.0], [1447.0, 8431.0], [1415.0, 9911.0], [1439.0, 7902.0], [1435.0, 7908.25], [1431.0, 4034.0], [1455.0, 9728.0], [1451.0, 3943.0], [1527.0, 5224.0], [1535.0, 4759.0], [1511.0, 6286.0], [1531.0, 8322.0], [1523.0, 4206.0], [1503.0, 6000.0], [1475.0, 8946.0], [1483.0, 3956.0], [1479.0, 3253.0], [1487.0, 3593.0], [1499.0, 8240.0], [1495.0, 3145.0], [1491.0, 4664.0], [1519.0, 3520.0], [1591.0, 7838.0], [1587.0, 2877.0], [1599.0, 2054.0], [1571.0, 1855.0], [1575.0, 9247.5], [1595.0, 9051.0], [1551.0, 3857.0], [1547.0, 3852.0], [1543.0, 8026.0], [1539.0, 7582.0], [1567.0, 3792.0], [1563.0, 8271.5], [1559.0, 4222.0], [1555.0, 3760.0], [1583.0, 9553.0], [1579.0, 3945.0], [1655.0, 3393.5], [1663.0, 1508.0], [1643.0, 6322.0], [1659.0, 1098.0], [1651.0, 10176.0], [1631.0, 2512.0], [1603.0, 6684.5], [1611.0, 6928.0], [1615.0, 4481.0], [1627.0, 4229.0], [1623.0, 3816.0], [1619.0, 2608.0], [1647.0, 6992.0], [1719.0, 1096.0], [1723.0, 2599.0], [1727.0, 2621.0], [1699.0, 6017.0], [1703.0, 8663.0], [1679.0, 10936.0], [1675.0, 3691.0], [1671.0, 4109.0], [1667.0, 8373.0], [1695.0, 6902.0], [1691.0, 8100.0], [1687.0, 1647.0], [1683.0, 5657.0], [1711.0, 1099.0], [1707.0, 4962.0], [1783.0, 5902.0], [1763.0, 4169.0], [1735.0, 9558.0], [1731.0, 2239.0], [1759.0, 1094.0], [1751.0, 3508.0], [1771.0, 8868.0], [1767.0, 4859.0], [1807.0, 6485.0], [1847.0, 6351.0], [1855.0, 4568.0], [1827.0, 1096.0], [1799.0, 3164.0], [1823.0, 1099.0], [1819.0, 1135.0], [1815.0, 1097.0], [1811.0, 1097.0], [1835.0, 6748.0], [1871.0, 4483.5], [1895.0, 6244.0], [1919.0, 5485.0], [1911.0, 4579.0], [1867.0, 3035.0], [1883.0, 4299.0], [1879.0, 3147.0], [1875.0, 10511.0], [1899.0, 5210.0], [1891.0, 7293.0], [1971.0, 2318.0], [1979.0, 8330.0], [1983.0, 1099.0], [1955.0, 7414.0], [1951.0, 1100.0], [1927.0, 1132.0], [1947.0, 7076.0], [1943.0, 4017.0], [1939.0, 1095.0], [1967.0, 9388.0], [1963.0, 2044.0], [1959.0, 5310.0], [2035.0, 4699.0], [2047.0, 5022.0], [2019.0, 4239.0], [2023.0, 1779.0], [2027.0, 1335.0], [2039.0, 1319.0], [1991.0, 3255.25], [1987.0, 2953.0], [1995.0, 7946.0], [1999.0, 1999.0], [2011.0, 3252.0], [2007.0, 1360.0], [2166.0, 1114.0], [2174.0, 1097.5], [2118.0, 1097.0], [2134.0, 1100.5], [2142.0, 7263.0], [2150.0, 1111.0], [2110.0, 1207.0], [2054.0, 10321.0], [2062.0, 1094.0], [2070.0, 1098.0], [2078.0, 2797.0], [2102.0, 1095.0], [2094.0, 1727.0], [2086.0, 1345.0], [2286.0, 6258.0], [2278.0, 5560.0], [2302.0, 5003.0], [2254.0, 1497.0], [2294.0, 10640.0], [2182.0, 1124.0], [2190.0, 5620.0], [2198.0, 1101.0], [2206.0, 6092.5], [2222.0, 1494.0], [2214.0, 3103.0], [2414.0, 4648.0], [2422.0, 3455.0], [2374.0, 1614.5], [2382.0, 5567.0], [2390.0, 2782.0], [2398.0, 4074.666666666667], [2406.0, 5555.0], [2334.0, 3648.75], [2318.0, 1101.0], [2310.0, 4192.0], [2366.0, 569.5], [2358.0, 1316.5], [2350.0, 4871.666666666666], [2542.0, 2743.0], [2550.0, 1406.0], [2558.0, 3219.0], [2502.0, 1775.5], [2510.0, 1103.0], [2534.0, 2704.0], [2494.0, 4734.0], [2438.0, 1344.0], [2446.0, 1189.0], [2486.0, 1201.0], [2478.0, 1131.0], [2470.0, 5828.0], [2574.0, 1146.0], [2638.0, 1097.0], [2630.0, 1096.0], [2646.0, 1109.5], [2654.0, 1170.0], [2566.0, 4898.5], [2582.0, 3873.0], [2590.0, 4251.0], [2614.0, 2268.3333333333335], [2606.0, 4766.0], [2598.0, 5505.0], [2814.0, 3024.0], [2758.0, 7962.0], [2766.0, 1102.0], [2774.0, 1975.0], [2798.0, 1213.0], [2790.0, 1099.0], [2694.0, 6755.5], [2702.0, 4143.5], [2710.0, 3407.0], [2718.0, 1095.0], [2750.0, 6164.0], [2734.0, 2760.0], [2726.0, 5242.0], [2926.0, 1786.5], [2942.0, 4730.5], [2894.0, 2671.0], [2910.0, 3257.6], [2918.0, 9403.0], [2846.0, 2255.5], [2878.0, 1109.0], [2870.0, 2547.333333333333], [2862.0, 1570.5], [2854.0, 1223.0], [2958.0, 2496.0], [2950.0, 1825.5], [2966.0, 1097.0], [2974.0, 4257.0], [2998.0, 3321.285714285714], [2990.0, 2858.0], [2982.0, 2768.4], [2159.0, 5467.333333333334], [2175.0, 4328.0], [2119.0, 1104.0], [2127.0, 1099.0], [2143.0, 3844.0], [2151.0, 1103.0], [2111.0, 1142.0], [2055.0, 2163.0], [2063.0, 1753.0], [2079.0, 6997.0], [2103.0, 1308.0], [2095.0, 1294.0], [2087.0, 1165.0], [2295.0, 3728.0], [2303.0, 1643.0], [2263.0, 1372.0], [2271.0, 1116.0], [2287.0, 1098.0], [2279.0, 5812.0], [2207.0, 1096.0], [2191.0, 4530.0], [2183.0, 1351.0], [2231.0, 2205.5], [2223.0, 2730.0], [2215.0, 10406.0], [2423.0, 1458.0], [2431.0, 3515.0], [2375.0, 1094.0], [2383.0, 5314.333333333333], [2391.0, 1508.0], [2399.0, 1095.0], [2415.0, 3802.5], [2367.0, 1103.0], [2311.0, 1127.0], [2319.0, 2523.0], [2327.0, 5221.0], [2359.0, 2025.0], [2351.0, 1196.6666666666667], [2343.0, 4672.0], [2535.0, 1098.0], [2559.0, 1453.0], [2511.0, 1102.0], [2503.0, 1096.0], [2519.0, 1101.0], [2455.0, 1149.0], [2439.0, 1102.0], [2479.0, 1098.0], [2471.0, 1136.0], [2679.0, 2562.6666666666665], [2639.0, 4039.8], [2647.0, 1130.5], [2655.0, 1099.0], [2671.0, 9337.0], [2663.0, 1394.5], [2623.0, 2012.0], [2567.0, 10307.0], [2575.0, 1331.0], [2583.0, 1098.0], [2591.0, 7920.0], [2607.0, 1095.0], [2799.0, 6526.0], [2815.0, 10812.0], [2759.0, 1110.0], [2767.0, 1122.0], [2775.0, 6824.0], [2807.0, 5597.5], [2791.0, 1101.0], [2751.0, 1188.0], [2703.0, 5510.0], [2711.0, 10438.0], [2719.0, 1097.0], [2743.0, 3150.5], [2727.0, 8934.0], [2935.0, 4346.333333333334], [2887.0, 1191.0], [2903.0, 1098.0], [2911.0, 3233.5], [2927.0, 1097.0], [2919.0, 1535.0], [2847.0, 3986.0], [2839.0, 2165.0], [2831.0, 4904.75], [2823.0, 1226.0], [2879.0, 3741.0], [2855.0, 4424.2], [2959.0, 1097.0], [2951.0, 2485.25], [2967.0, 4264.0], [2975.0, 2102.0], [2999.0, 2571.6666666666665], [2991.0, 1412.0], [2983.0, 3777.1428571428573], [1.0, 10921.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2982.5008194324682, 2688.5605841438273]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 156637.4, "minX": 1.68420618E12, "maxY": 629009.9666666667, "series": [{"data": [[1.68420624E12, 589839.9], [1.68420642E12, 459410.13333333336], [1.6842063E12, 629009.9666666667], [1.68420648E12, 395564.2166666667], [1.68420618E12, 181130.6], [1.68420636E12, 428156.7833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68420624E12, 519135.15], [1.68420642E12, 405204.7], [1.6842063E12, 549633.65], [1.68420648E12, 346605.95], [1.68420618E12, 156637.4], [1.68420636E12, 374995.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420648E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2239.1886371246865, "minX": 1.68420618E12, "maxY": 3275.686519230275, "series": [{"data": [[1.68420624E12, 2752.7654760037262], [1.68420642E12, 2239.1886371246865], [1.6842063E12, 2926.248275294288], [1.68420648E12, 3275.686519230275], [1.68420618E12, 2512.4323434250027], [1.68420636E12, 2267.978496959142]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420648E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2238.9697510883075, "minX": 1.68420618E12, "maxY": 3275.38831301078, "series": [{"data": [[1.68420624E12, 2752.5364259191665], [1.68420642E12, 2238.9697510883075], [1.6842063E12, 2926.0068494278426], [1.68420648E12, 3275.38831301078], [1.68420618E12, 2512.0931938987737], [1.68420636E12, 2267.744183801496]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420648E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 6.7159463241952935, "minX": 1.68420618E12, "maxY": 506.83591402819707, "series": [{"data": [[1.68420624E12, 55.582274288304205], [1.68420642E12, 42.48813483647714], [1.6842063E12, 6.7159463241952935], [1.68420648E12, 81.60528995535104], [1.68420618E12, 506.83591402819707], [1.68420636E12, 47.66502558161976]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420648E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 51.0, "minX": 1.68420618E12, "maxY": 18509.0, "series": [{"data": [[1.68420624E12, 13823.0], [1.68420642E12, 18509.0], [1.6842063E12, 17308.0], [1.68420648E12, 17720.0], [1.68420618E12, 15281.0], [1.68420636E12, 17377.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68420624E12, 6633.9000000000015], [1.68420642E12, 4995.0], [1.6842063E12, 8468.0], [1.68420648E12, 7997.0], [1.68420618E12, 5382.0], [1.68420636E12, 4295.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68420624E12, 10370.94000000001], [1.68420642E12, 8721.860000000022], [1.6842063E12, 10776.990000000002], [1.68420648E12, 10939.0], [1.68420618E12, 9485.870000000003], [1.68420636E12, 8445.970000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68420624E12, 7964.700000000004], [1.68420642E12, 6013.800000000003], [1.6842063E12, 9632.95], [1.68420648E12, 9480.95], [1.68420618E12, 7042.5999999999985], [1.68420636E12, 5502.850000000002]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68420624E12, 54.0], [1.68420642E12, 1089.0], [1.6842063E12, 53.0], [1.68420648E12, 53.0], [1.68420618E12, 1088.0], [1.68420636E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68420624E12, 2272.0], [1.68420642E12, 2051.0], [1.6842063E12, 1639.0], [1.68420648E12, 2144.0], [1.68420618E12, 2115.0], [1.68420636E12, 1610.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420648E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 39.0, "minX": 8.0, "maxY": 10920.0, "series": [{"data": [[8.0, 6614.5], [11.0, 9865.0], [17.0, 7298.0], [32.0, 6560.5], [36.0, 10500.0], [41.0, 6227.5], [42.0, 6022.0], [72.0, 10074.0], [77.0, 5909.5], [90.0, 5151.0], [96.0, 7419.0], [105.0, 9727.0], [132.0, 8637.5], [129.0, 2366.0], [139.0, 3557.0], [143.0, 8883.0], [160.0, 4617.0], [162.0, 7260.0], [174.0, 2021.0], [170.0, 8314.0], [177.0, 2833.0], [181.0, 4137.0], [199.0, 2957.0], [195.0, 7408.0], [222.0, 4631.0], [228.0, 7063.0], [265.0, 5366.0], [281.0, 3694.0], [286.0, 6411.0], [335.0, 4267.0], [320.0, 6396.0], [321.0, 6032.0], [342.0, 3045.0], [378.0, 2189.0], [369.0, 4440.0], [387.0, 6325.5], [388.0, 5401.0], [413.0, 1811.0], [412.0, 2653.5], [423.0, 5108.0], [430.0, 3105.5], [460.0, 4079.0], [455.0, 4378.5], [469.0, 4067.0], [479.0, 5308.0], [487.0, 5065.0], [488.0, 4865.0], [507.0, 4551.5], [500.0, 1404.0], [519.0, 3609.0], [543.0, 2125.5], [529.0, 4235.0], [542.0, 2994.0], [535.0, 7111.0], [593.0, 1874.5], [612.0, 1362.5], [609.0, 2663.5], [651.0, 1180.0], [667.0, 4053.0], [653.0, 4216.0], [646.0, 1967.5], [684.0, 5121.0], [676.0, 2164.0], [693.0, 1148.0], [699.0, 1117.0], [685.0, 2038.0], [697.0, 1326.0], [726.0, 1219.0], [712.0, 3131.0], [718.0, 1101.0], [708.0, 2298.5], [753.0, 1643.0], [743.0, 1594.0], [749.0, 2973.0], [763.0, 1596.0], [766.0, 1913.5], [741.0, 2522.0], [773.0, 3316.0], [796.0, 2668.0], [804.0, 2024.0], [824.0, 1140.0], [801.0, 2828.0], [813.0, 3828.0], [849.0, 2009.0], [854.0, 2521.0], [850.0, 1102.0], [858.0, 1134.5], [862.0, 2251.5], [890.0, 2434.0], [895.0, 3118.5], [880.0, 2315.0], [882.0, 1155.0], [881.0, 1469.0], [891.0, 1630.0], [867.0, 1613.5], [888.0, 1100.0], [870.0, 1400.0], [886.0, 1146.0], [884.0, 1144.0], [874.0, 2211.0], [892.0, 1683.5], [864.0, 2106.0], [925.0, 2376.0], [905.0, 2469.0], [912.0, 1455.0], [927.0, 3119.5], [913.0, 1973.0], [921.0, 2966.5], [919.0, 2087.0], [918.0, 1858.0], [920.0, 1939.5], [901.0, 1711.0], [898.0, 2789.0], [908.0, 1672.5], [924.0, 1507.0], [954.0, 1413.0], [940.0, 2014.5], [956.0, 2677.5], [941.0, 1832.5], [942.0, 2437.0], [958.0, 2972.0], [951.0, 1736.0], [947.0, 2837.0], [944.0, 2970.0], [946.0, 1129.0], [936.0, 1424.0], [955.0, 1576.5], [966.0, 3058.0], [978.0, 2044.5], [980.0, 1527.0], [979.0, 1576.0], [970.0, 1792.0], [968.0, 1610.0], [981.0, 2527.5], [986.0, 2742.0], [984.0, 1263.5], [973.0, 3053.0], [975.0, 2355.0], [962.0, 2665.0], [965.0, 1659.0], [961.0, 2526.0], [977.0, 1917.0], [990.0, 1178.5], [998.0, 1868.5], [1014.0, 2148.5], [1013.0, 1678.5], [994.0, 2226.5], [996.0, 1287.0], [995.0, 2356.0], [1007.0, 3142.0], [1011.0, 2050.0], [1020.0, 2918.5], [1017.0, 1652.0], [1016.0, 1501.0], [1019.0, 2934.0], [1022.0, 1656.0], [1008.0, 1101.0], [1021.0, 1727.5], [1001.0, 2105.5], [1002.0, 2697.5], [1003.0, 1869.0], [1005.0, 1650.0], [1006.0, 1601.0], [1009.0, 2584.0], [1010.0, 2028.5], [1036.0, 2754.0], [1078.0, 2350.0], [1080.0, 3030.5], [1082.0, 2055.0], [1029.0, 1976.5], [1056.0, 2544.0], [1087.0, 2092.0], [1085.0, 1938.0], [1071.0, 2139.0], [1070.0, 1967.5], [1069.0, 1572.0], [1063.0, 1718.0], [1057.0, 1636.0], [1061.0, 2922.0], [1066.0, 1648.0], [1064.0, 2942.0], [1065.0, 3109.0], [1068.0, 1608.0], [1084.0, 1929.5], [1024.0, 1523.0], [1025.0, 1600.0], [1054.0, 1686.0], [1027.0, 1423.0], [1028.0, 1656.0], [1026.0, 2050.0], [1044.0, 1723.5], [1042.0, 1614.5], [1052.0, 1336.0], [1051.0, 1798.0], [1049.0, 1638.0], [1047.0, 2373.5], [1045.0, 1865.0], [1053.0, 2023.0], [1038.0, 2039.0], [1037.0, 1749.0], [1076.0, 2398.0], [1077.0, 1539.5], [1074.0, 2548.0], [1073.0, 1657.0], [1072.0, 1498.0], [1040.0, 2496.5], [1041.0, 3072.0], [1035.0, 3041.5], [1034.0, 1867.0], [1032.0, 1722.0], [1033.0, 2270.0], [1088.0, 1989.0], [1130.0, 1137.5], [1122.0, 2583.0], [1119.0, 2436.0], [1121.0, 1907.5], [1118.0, 2153.0], [1089.0, 2516.5], [1092.0, 2317.0], [1093.0, 1768.0], [1099.0, 3113.0], [1098.0, 2980.0], [1102.0, 1155.0], [1144.0, 2008.0], [1137.0, 2253.5], [1135.0, 1860.0], [1116.0, 2659.5], [1115.0, 2633.0], [1112.0, 1334.0], [1107.0, 2220.0], [1195.0, 1102.0], [1152.0, 1519.0], [1207.0, 1579.0], [1212.0, 1138.0], [1185.0, 1701.0], [1264.0, 2552.0], [1269.0, 2452.0], [1234.0, 1176.0], [1221.0, 1459.5], [1271.0, 1292.0], [1293.0, 1145.0], [1323.0, 1130.0], [1397.0, 1293.0], [1725.0, 7620.0], [1747.0, 1392.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[11.0, 5130.0], [17.0, 10920.0], [36.0, 10220.0], [41.0, 10073.0], [42.0, 542.0], [72.0, 10315.0], [90.0, 10256.0], [96.0, 41.0], [105.0, 10337.5], [132.0, 42.0], [129.0, 10460.0], [143.0, 10045.0], [162.0, 42.0], [160.0, 951.0], [174.0, 10223.0], [181.0, 10245.0], [195.0, 5640.0], [222.0, 46.5], [228.0, 10196.0], [265.0, 10092.5], [286.0, 10089.5], [335.0, 61.0], [320.0, 41.0], [321.0, 10213.5], [342.0, 48.0], [378.0, 10187.0], [387.0, 58.0], [388.0, 10241.0], [423.0, 10363.0], [455.0, 10270.0], [479.0, 51.0], [487.0, 41.0], [488.0, 39.0], [507.0, 10246.0], [519.0, 41.0], [543.0, 40.0], [529.0, 51.0], [542.0, 48.0], [535.0, 42.0], [593.0, 60.0], [612.0, 40.5], [609.0, 79.0], [667.0, 10095.0], [653.0, 42.0], [684.0, 53.0], [676.0, 10252.5], [699.0, 208.0], [685.0, 10158.0], [697.0, 10278.0], [726.0, 43.0], [712.0, 42.0], [718.0, 890.0], [753.0, 43.0], [743.0, 10206.0], [763.0, 187.5], [766.0, 10301.5], [741.0, 10138.0], [773.0, 48.0], [796.0, 40.0], [804.0, 43.0], [824.0, 10146.0], [813.0, 66.0], [849.0, 59.0], [854.0, 42.0], [850.0, 43.0], [858.0, 10048.5], [890.0, 100.0], [895.0, 10225.0], [880.0, 6288.0], [882.0, 10805.0], [881.0, 288.5], [867.0, 10264.0], [886.0, 44.0], [888.0, 10348.0], [870.0, 64.0], [874.0, 10311.0], [892.0, 41.5], [891.0, 55.0], [864.0, 42.0], [884.0, 58.0], [925.0, 46.0], [905.0, 4059.0], [912.0, 55.0], [927.0, 42.0], [921.0, 42.0], [919.0, 41.0], [918.0, 42.0], [920.0, 42.0], [901.0, 42.0], [898.0, 45.0], [908.0, 41.0], [924.0, 41.0], [954.0, 47.0], [940.0, 43.0], [956.0, 42.0], [941.0, 41.0], [942.0, 43.0], [958.0, 41.0], [951.0, 41.0], [947.0, 41.0], [944.0, 41.0], [946.0, 55.5], [936.0, 41.0], [955.0, 53.0], [966.0, 42.0], [978.0, 44.0], [980.0, 51.0], [979.0, 42.0], [970.0, 46.0], [968.0, 49.5], [981.0, 41.0], [986.0, 42.0], [984.0, 41.0], [973.0, 41.0], [975.0, 41.0], [962.0, 56.0], [965.0, 493.5], [961.0, 511.0], [977.0, 42.0], [990.0, 53.0], [998.0, 43.0], [1014.0, 50.5], [1013.0, 44.0], [994.0, 49.0], [996.0, 41.0], [995.0, 41.0], [1007.0, 41.0], [1011.0, 43.0], [1020.0, 41.0], [1017.0, 41.0], [1016.0, 41.0], [1019.0, 41.0], [1022.0, 42.0], [1008.0, 41.0], [1021.0, 43.0], [1001.0, 42.0], [1002.0, 41.0], [1003.0, 42.0], [1005.0, 41.0], [1006.0, 41.0], [1009.0, 41.0], [1010.0, 41.0], [1036.0, 41.0], [1078.0, 42.0], [1080.0, 44.0], [1082.0, 42.0], [1029.0, 41.0], [1056.0, 49.5], [1087.0, 42.0], [1085.0, 44.0], [1071.0, 41.0], [1070.0, 41.0], [1069.0, 41.0], [1063.0, 41.0], [1057.0, 44.0], [1061.0, 41.0], [1066.0, 42.0], [1064.0, 41.0], [1065.0, 41.0], [1068.0, 41.0], [1084.0, 41.0], [1024.0, 42.0], [1025.0, 42.0], [1054.0, 41.5], [1027.0, 41.0], [1028.0, 41.0], [1026.0, 41.0], [1044.0, 42.0], [1042.0, 42.0], [1052.0, 41.0], [1051.0, 41.0], [1049.0, 42.0], [1047.0, 41.0], [1045.0, 40.0], [1053.0, 42.0], [1038.0, 41.0], [1037.0, 41.0], [1076.0, 44.0], [1077.0, 42.0], [1074.0, 41.0], [1073.0, 42.0], [1072.0, 41.0], [1040.0, 41.0], [1041.0, 42.0], [1035.0, 41.0], [1034.0, 41.0], [1032.0, 41.0], [1033.0, 41.0], [1088.0, 51.0], [1130.0, 41.0], [1122.0, 41.0], [1119.0, 42.0], [1121.0, 41.0], [1118.0, 42.0], [1089.0, 42.0], [1092.0, 41.0], [1093.0, 42.0], [1099.0, 42.0], [1098.0, 41.0], [1102.0, 41.0], [1144.0, 42.0], [1137.0, 41.0], [1135.0, 41.0], [1116.0, 41.0], [1115.0, 41.0], [1112.0, 140.0], [1107.0, 10529.0], [1195.0, 42.0], [1152.0, 45.0], [1207.0, 48.0], [1212.0, 47.0], [1185.0, 45.0], [1264.0, 43.0], [1269.0, 43.0], [1234.0, 48.0], [1221.0, 46.0], [1271.0, 47.0], [1293.0, 48.0], [1323.0, 41.0], [1397.0, 320.5], [1725.0, 64.0], [1747.0, 45.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1747.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 39.0, "minX": 8.0, "maxY": 10920.0, "series": [{"data": [[8.0, 6614.0], [11.0, 9865.0], [17.0, 7297.0], [32.0, 6560.5], [36.0, 10499.0], [41.0, 6227.5], [42.0, 6022.0], [72.0, 10074.0], [77.0, 5909.5], [90.0, 5151.0], [96.0, 7418.0], [105.0, 9727.0], [132.0, 8637.0], [129.0, 2365.5], [139.0, 3557.0], [143.0, 8883.0], [160.0, 4616.5], [162.0, 7259.0], [174.0, 2021.0], [170.0, 8313.5], [177.0, 2833.0], [181.0, 4137.0], [199.0, 2957.0], [195.0, 7408.0], [222.0, 4631.0], [228.0, 7063.0], [265.0, 5366.0], [281.0, 3694.0], [286.0, 6411.0], [335.0, 4267.0], [320.0, 6396.0], [321.0, 6032.0], [342.0, 3044.0], [378.0, 2189.0], [369.0, 4440.0], [387.0, 6325.0], [388.0, 5401.0], [413.0, 1811.0], [412.0, 2653.5], [423.0, 5108.0], [430.0, 3105.0], [460.0, 4078.5], [455.0, 4378.5], [469.0, 4067.0], [479.0, 5308.0], [487.0, 5064.5], [488.0, 4864.5], [507.0, 4551.5], [500.0, 1404.0], [519.0, 3604.0], [543.0, 2125.5], [529.0, 4235.0], [542.0, 2994.0], [535.0, 7111.0], [593.0, 1874.5], [612.0, 1362.5], [609.0, 2663.0], [651.0, 1180.0], [667.0, 4053.0], [653.0, 4215.0], [646.0, 1967.5], [684.0, 5121.0], [676.0, 2163.5], [693.0, 1148.0], [699.0, 1116.0], [685.0, 2038.0], [697.0, 1326.0], [726.0, 1219.0], [712.0, 3130.0], [718.0, 1101.0], [708.0, 2298.5], [753.0, 1643.0], [743.0, 1593.0], [749.0, 2973.0], [763.0, 1596.0], [766.0, 1913.5], [741.0, 2522.0], [773.0, 3316.0], [796.0, 2668.0], [804.0, 2023.0], [824.0, 1140.0], [801.0, 2828.0], [813.0, 3828.0], [849.0, 2008.0], [854.0, 2521.0], [850.0, 1102.0], [858.0, 1134.0], [862.0, 2251.0], [890.0, 2434.0], [895.0, 3118.0], [880.0, 2315.0], [882.0, 1154.0], [881.0, 1469.0], [891.0, 1630.0], [867.0, 1613.0], [888.0, 1100.0], [870.0, 1400.0], [886.0, 1145.5], [884.0, 1144.0], [874.0, 2211.0], [892.0, 1683.0], [864.0, 2106.0], [925.0, 2375.0], [905.0, 2469.0], [912.0, 1454.0], [927.0, 3119.5], [913.0, 1972.0], [921.0, 2966.0], [919.0, 2086.0], [918.0, 1858.0], [920.0, 1939.0], [901.0, 1711.0], [898.0, 2789.0], [908.0, 1672.0], [924.0, 1506.0], [954.0, 1412.0], [940.0, 2014.5], [956.0, 2677.0], [941.0, 1832.5], [942.0, 2437.0], [958.0, 2971.0], [951.0, 1736.0], [947.0, 2837.0], [944.0, 2970.0], [946.0, 1129.0], [936.0, 1424.0], [955.0, 1576.5], [966.0, 3058.0], [978.0, 2044.0], [980.0, 1527.0], [979.0, 1575.0], [970.0, 1791.0], [968.0, 1610.0], [981.0, 2527.5], [986.0, 2742.0], [984.0, 1263.5], [973.0, 3052.0], [975.0, 2355.0], [962.0, 2665.0], [965.0, 1659.0], [961.0, 2526.0], [977.0, 1917.0], [990.0, 1178.0], [998.0, 1865.0], [1014.0, 2148.5], [1013.0, 1678.0], [994.0, 2226.0], [996.0, 1286.5], [995.0, 2355.5], [1007.0, 3142.0], [1011.0, 2049.5], [1020.0, 2918.5], [1017.0, 1652.0], [1016.0, 1500.5], [1019.0, 2934.0], [1022.0, 1656.0], [1008.0, 1100.0], [1021.0, 1727.0], [1001.0, 2105.5], [1002.0, 2697.5], [1003.0, 1869.0], [1005.0, 1650.0], [1006.0, 1601.0], [1009.0, 2584.0], [1010.0, 2028.5], [1036.0, 2753.0], [1078.0, 2349.0], [1080.0, 3030.5], [1082.0, 2055.0], [1029.0, 1976.5], [1056.0, 2544.0], [1087.0, 2092.0], [1085.0, 1937.5], [1071.0, 2138.5], [1070.0, 1967.5], [1069.0, 1572.0], [1063.0, 1718.0], [1057.0, 1636.0], [1061.0, 2922.0], [1066.0, 1648.0], [1064.0, 2942.0], [1065.0, 3108.5], [1068.0, 1607.0], [1084.0, 1929.0], [1024.0, 1522.5], [1025.0, 1599.5], [1054.0, 1685.5], [1027.0, 1423.0], [1028.0, 1655.0], [1026.0, 2050.0], [1044.0, 1723.5], [1042.0, 1613.5], [1052.0, 1336.0], [1051.0, 1798.0], [1049.0, 1637.0], [1047.0, 2373.5], [1045.0, 1865.0], [1053.0, 2023.0], [1038.0, 2039.0], [1037.0, 1749.0], [1076.0, 2398.0], [1077.0, 1539.5], [1074.0, 2548.0], [1073.0, 1657.0], [1072.0, 1498.0], [1040.0, 2496.5], [1041.0, 3072.0], [1035.0, 3041.0], [1034.0, 1867.0], [1032.0, 1721.0], [1033.0, 2269.5], [1088.0, 1989.0], [1130.0, 1137.5], [1122.0, 2582.0], [1119.0, 2435.5], [1121.0, 1907.5], [1118.0, 2153.0], [1089.0, 2516.5], [1092.0, 2317.0], [1093.0, 1768.0], [1099.0, 3113.0], [1098.0, 2979.0], [1102.0, 1155.0], [1144.0, 2008.0], [1137.0, 2253.5], [1135.0, 1860.0], [1116.0, 2659.5], [1115.0, 2633.0], [1112.0, 1334.0], [1107.0, 2220.0], [1195.0, 1102.0], [1152.0, 1519.0], [1207.0, 1579.0], [1212.0, 1138.0], [1185.0, 1701.0], [1264.0, 2551.0], [1269.0, 2452.0], [1234.0, 1176.0], [1221.0, 1458.5], [1271.0, 1292.0], [1293.0, 1145.0], [1323.0, 1130.0], [1397.0, 1292.0], [1725.0, 7620.0], [1747.0, 1390.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[11.0, 5130.0], [17.0, 10920.0], [36.0, 10220.0], [41.0, 10073.0], [42.0, 542.0], [72.0, 10315.0], [90.0, 10256.0], [96.0, 41.0], [105.0, 10337.5], [132.0, 42.0], [129.0, 10460.0], [143.0, 10045.0], [162.0, 42.0], [160.0, 951.0], [174.0, 10223.0], [181.0, 10245.0], [195.0, 5640.0], [222.0, 46.5], [228.0, 10196.0], [265.0, 10092.5], [286.0, 10089.5], [335.0, 61.0], [320.0, 41.0], [321.0, 10213.5], [342.0, 48.0], [378.0, 10187.0], [387.0, 58.0], [388.0, 10241.0], [423.0, 10363.0], [455.0, 10270.0], [479.0, 51.0], [487.0, 41.0], [488.0, 39.0], [507.0, 10246.0], [519.0, 41.0], [543.0, 40.0], [529.0, 51.0], [542.0, 48.0], [535.0, 42.0], [593.0, 60.0], [612.0, 40.5], [609.0, 79.0], [667.0, 10095.0], [653.0, 42.0], [684.0, 53.0], [676.0, 10252.5], [699.0, 208.0], [685.0, 10158.0], [697.0, 10278.0], [726.0, 43.0], [712.0, 42.0], [718.0, 890.0], [753.0, 43.0], [743.0, 10206.0], [763.0, 187.5], [766.0, 10301.5], [741.0, 10138.0], [773.0, 48.0], [796.0, 40.0], [804.0, 43.0], [824.0, 10146.0], [813.0, 66.0], [849.0, 59.0], [854.0, 42.0], [850.0, 43.0], [858.0, 10048.5], [890.0, 100.0], [895.0, 10225.0], [880.0, 6288.0], [882.0, 10805.0], [881.0, 288.5], [867.0, 10264.0], [886.0, 44.0], [888.0, 10348.0], [870.0, 64.0], [874.0, 10311.0], [892.0, 41.5], [891.0, 55.0], [864.0, 42.0], [884.0, 58.0], [925.0, 46.0], [905.0, 4059.0], [912.0, 55.0], [927.0, 42.0], [921.0, 42.0], [919.0, 41.0], [918.0, 42.0], [920.0, 42.0], [901.0, 42.0], [898.0, 45.0], [908.0, 41.0], [924.0, 41.0], [954.0, 47.0], [940.0, 43.0], [956.0, 42.0], [941.0, 41.0], [942.0, 43.0], [958.0, 41.0], [951.0, 41.0], [947.0, 41.0], [944.0, 41.0], [946.0, 55.5], [936.0, 41.0], [955.0, 53.0], [966.0, 42.0], [978.0, 44.0], [980.0, 51.0], [979.0, 42.0], [970.0, 46.0], [968.0, 49.5], [981.0, 41.0], [986.0, 42.0], [984.0, 41.0], [973.0, 41.0], [975.0, 41.0], [962.0, 56.0], [965.0, 493.5], [961.0, 511.0], [977.0, 42.0], [990.0, 53.0], [998.0, 43.0], [1014.0, 50.5], [1013.0, 44.0], [994.0, 49.0], [996.0, 41.0], [995.0, 41.0], [1007.0, 41.0], [1011.0, 43.0], [1020.0, 41.0], [1017.0, 41.0], [1016.0, 41.0], [1019.0, 41.0], [1022.0, 42.0], [1008.0, 41.0], [1021.0, 43.0], [1001.0, 42.0], [1002.0, 41.0], [1003.0, 42.0], [1005.0, 41.0], [1006.0, 41.0], [1009.0, 41.0], [1010.0, 41.0], [1036.0, 41.0], [1078.0, 42.0], [1080.0, 44.0], [1082.0, 42.0], [1029.0, 41.0], [1056.0, 49.5], [1087.0, 42.0], [1085.0, 44.0], [1071.0, 41.0], [1070.0, 41.0], [1069.0, 41.0], [1063.0, 41.0], [1057.0, 44.0], [1061.0, 41.0], [1066.0, 42.0], [1064.0, 41.0], [1065.0, 41.0], [1068.0, 41.0], [1084.0, 41.0], [1024.0, 42.0], [1025.0, 42.0], [1054.0, 41.5], [1027.0, 41.0], [1028.0, 41.0], [1026.0, 41.0], [1044.0, 42.0], [1042.0, 42.0], [1052.0, 41.0], [1051.0, 41.0], [1049.0, 42.0], [1047.0, 41.0], [1045.0, 40.0], [1053.0, 42.0], [1038.0, 41.0], [1037.0, 41.0], [1076.0, 44.0], [1077.0, 42.0], [1074.0, 41.0], [1073.0, 42.0], [1072.0, 41.0], [1040.0, 41.0], [1041.0, 42.0], [1035.0, 41.0], [1034.0, 41.0], [1032.0, 41.0], [1033.0, 41.0], [1088.0, 51.0], [1130.0, 41.0], [1122.0, 41.0], [1119.0, 42.0], [1121.0, 41.0], [1118.0, 42.0], [1089.0, 42.0], [1092.0, 41.0], [1093.0, 42.0], [1099.0, 42.0], [1098.0, 41.0], [1102.0, 41.0], [1144.0, 42.0], [1137.0, 41.0], [1135.0, 41.0], [1116.0, 41.0], [1115.0, 41.0], [1112.0, 140.0], [1107.0, 10529.0], [1195.0, 42.0], [1152.0, 45.0], [1207.0, 48.0], [1212.0, 47.0], [1185.0, 45.0], [1264.0, 43.0], [1269.0, 43.0], [1234.0, 48.0], [1221.0, 46.0], [1271.0, 47.0], [1293.0, 48.0], [1323.0, 41.0], [1397.0, 320.5], [1725.0, 64.0], [1747.0, 45.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1747.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 317.9, "minX": 1.68420618E12, "maxY": 1012.25, "series": [{"data": [[1.68420624E12, 976.6166666666667], [1.68420642E12, 765.1666666666666], [1.6842063E12, 1012.25], [1.68420648E12, 588.3166666666667], [1.68420618E12, 317.9], [1.68420636E12, 672.0166666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420648E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68420618E12, "maxY": 892.0, "series": [{"data": [[1.6842063E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68420624E12, 832.65], [1.68420642E12, 645.8666666666667], [1.6842063E12, 892.0], [1.68420648E12, 560.35], [1.68420618E12, 259.26666666666665], [1.68420636E12, 606.4333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68420642E12, 0.35]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68420624E12, 123.4], [1.68420642E12, 100.36666666666666], [1.6842063E12, 120.21666666666667], [1.68420648E12, 77.96666666666667], [1.68420618E12, 29.2], [1.68420636E12, 84.16666666666667]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420648E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 29.2, "minX": 1.68420618E12, "maxY": 892.0, "series": [{"data": [[1.68420624E12, 832.65], [1.68420642E12, 645.8666666666667], [1.6842063E12, 892.0], [1.68420648E12, 560.35], [1.68420618E12, 259.26666666666665], [1.68420636E12, 606.4333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68420624E12, 123.4], [1.68420642E12, 100.71666666666667], [1.6842063E12, 120.25], [1.68420648E12, 77.96666666666667], [1.68420618E12, 29.2], [1.68420636E12, 84.16666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420648E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 29.2, "minX": 1.68420618E12, "maxY": 892.0, "series": [{"data": [[1.68420624E12, 832.65], [1.68420642E12, 645.8666666666667], [1.6842063E12, 892.0], [1.68420648E12, 560.35], [1.68420618E12, 259.26666666666665], [1.68420636E12, 606.4333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68420624E12, 123.4], [1.68420642E12, 100.71666666666667], [1.6842063E12, 120.25], [1.68420648E12, 77.96666666666667], [1.68420618E12, 29.2], [1.68420636E12, 84.16666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420648E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

