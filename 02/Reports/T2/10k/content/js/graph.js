/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 780881.0, "series": [{"data": [[0.0, 0.0], [0.1, 40.0], [0.2, 42.0], [0.3, 45.0], [0.4, 59.0], [0.5, 1092.0], [0.6, 1093.0], [0.7, 1094.0], [0.8, 1095.0], [0.9, 1095.0], [1.0, 1095.0], [1.1, 1096.0], [1.2, 1096.0], [1.3, 1096.0], [1.4, 1096.0], [1.5, 1096.0], [1.6, 1097.0], [1.7, 1097.0], [1.8, 1097.0], [1.9, 1097.0], [2.0, 1097.0], [2.1, 1098.0], [2.2, 1098.0], [2.3, 1098.0], [2.4, 1098.0], [2.5, 1098.0], [2.6, 1098.0], [2.7, 1098.0], [2.8, 1099.0], [2.9, 1099.0], [3.0, 1099.0], [3.1, 1099.0], [3.2, 1099.0], [3.3, 1099.0], [3.4, 1099.0], [3.5, 1099.0], [3.6, 1099.0], [3.7, 1100.0], [3.8, 1100.0], [3.9, 1100.0], [4.0, 1100.0], [4.1, 1100.0], [4.2, 1100.0], [4.3, 1100.0], [4.4, 1100.0], [4.5, 1100.0], [4.6, 1100.0], [4.7, 1101.0], [4.8, 1101.0], [4.9, 1101.0], [5.0, 1101.0], [5.1, 1101.0], [5.2, 1101.0], [5.3, 1101.0], [5.4, 1101.0], [5.5, 1101.0], [5.6, 1101.0], [5.7, 1101.0], [5.8, 1102.0], [5.9, 1102.0], [6.0, 1102.0], [6.1, 1102.0], [6.2, 1102.0], [6.3, 1102.0], [6.4, 1102.0], [6.5, 1102.0], [6.6, 1102.0], [6.7, 1102.0], [6.8, 1102.0], [6.9, 1103.0], [7.0, 1103.0], [7.1, 1103.0], [7.2, 1103.0], [7.3, 1103.0], [7.4, 1103.0], [7.5, 1103.0], [7.6, 1103.0], [7.7, 1103.0], [7.8, 1103.0], [7.9, 1103.0], [8.0, 1103.0], [8.1, 1104.0], [8.2, 1104.0], [8.3, 1104.0], [8.4, 1104.0], [8.5, 1104.0], [8.6, 1104.0], [8.7, 1104.0], [8.8, 1104.0], [8.9, 1104.0], [9.0, 1104.0], [9.1, 1104.0], [9.2, 1104.0], [9.3, 1105.0], [9.4, 1105.0], [9.5, 1105.0], [9.6, 1105.0], [9.7, 1105.0], [9.8, 1105.0], [9.9, 1105.0], [10.0, 1105.0], [10.1, 1105.0], [10.2, 1105.0], [10.3, 1105.0], [10.4, 1106.0], [10.5, 1106.0], [10.6, 1106.0], [10.7, 1106.0], [10.8, 1106.0], [10.9, 1106.0], [11.0, 1106.0], [11.1, 1106.0], [11.2, 1106.0], [11.3, 1106.0], [11.4, 1106.0], [11.5, 1107.0], [11.6, 1107.0], [11.7, 1107.0], [11.8, 1107.0], [11.9, 1107.0], [12.0, 1107.0], [12.1, 1107.0], [12.2, 1107.0], [12.3, 1107.0], [12.4, 1107.0], [12.5, 1108.0], [12.6, 1108.0], [12.7, 1108.0], [12.8, 1108.0], [12.9, 1108.0], [13.0, 1108.0], [13.1, 1108.0], [13.2, 1108.0], [13.3, 1108.0], [13.4, 1109.0], [13.5, 1109.0], [13.6, 1109.0], [13.7, 1109.0], [13.8, 1109.0], [13.9, 1109.0], [14.0, 1109.0], [14.1, 1109.0], [14.2, 1109.0], [14.3, 1110.0], [14.4, 1110.0], [14.5, 1110.0], [14.6, 1110.0], [14.7, 1110.0], [14.8, 1110.0], [14.9, 1110.0], [15.0, 1110.0], [15.1, 1111.0], [15.2, 1111.0], [15.3, 1111.0], [15.4, 1111.0], [15.5, 1111.0], [15.6, 1111.0], [15.7, 1111.0], [15.8, 1112.0], [15.9, 1112.0], [16.0, 1112.0], [16.1, 1112.0], [16.2, 1112.0], [16.3, 1112.0], [16.4, 1112.0], [16.5, 1113.0], [16.6, 1113.0], [16.7, 1113.0], [16.8, 1113.0], [16.9, 1113.0], [17.0, 1113.0], [17.1, 1113.0], [17.2, 1114.0], [17.3, 1114.0], [17.4, 1114.0], [17.5, 1114.0], [17.6, 1114.0], [17.7, 1114.0], [17.8, 1115.0], [17.9, 1115.0], [18.0, 1115.0], [18.1, 1115.0], [18.2, 1115.0], [18.3, 1115.0], [18.4, 1116.0], [18.5, 1116.0], [18.6, 1116.0], [18.7, 1116.0], [18.8, 1116.0], [18.9, 1117.0], [19.0, 1117.0], [19.1, 1117.0], [19.2, 1117.0], [19.3, 1117.0], [19.4, 1118.0], [19.5, 1118.0], [19.6, 1118.0], [19.7, 1118.0], [19.8, 1119.0], [19.9, 1119.0], [20.0, 1119.0], [20.1, 1119.0], [20.2, 1120.0], [20.3, 1120.0], [20.4, 1120.0], [20.5, 1120.0], [20.6, 1120.0], [20.7, 1121.0], [20.8, 1121.0], [20.9, 1121.0], [21.0, 1121.0], [21.1, 1122.0], [21.2, 1122.0], [21.3, 1122.0], [21.4, 1123.0], [21.5, 1123.0], [21.6, 1123.0], [21.7, 1123.0], [21.8, 1124.0], [21.9, 1124.0], [22.0, 1124.0], [22.1, 1125.0], [22.2, 1125.0], [22.3, 1125.0], [22.4, 1125.0], [22.5, 1126.0], [22.6, 1126.0], [22.7, 1126.0], [22.8, 1127.0], [22.9, 1127.0], [23.0, 1127.0], [23.1, 1127.0], [23.2, 1128.0], [23.3, 1128.0], [23.4, 1128.0], [23.5, 1129.0], [23.6, 1129.0], [23.7, 1130.0], [23.8, 1130.0], [23.9, 1130.0], [24.0, 1131.0], [24.1, 1131.0], [24.2, 1132.0], [24.3, 1132.0], [24.4, 1133.0], [24.5, 1133.0], [24.6, 1133.0], [24.7, 1134.0], [24.8, 1134.0], [24.9, 1135.0], [25.0, 1135.0], [25.1, 1136.0], [25.2, 1136.0], [25.3, 1137.0], [25.4, 1138.0], [25.5, 1139.0], [25.6, 1139.0], [25.7, 1140.0], [25.8, 1141.0], [25.9, 1142.0], [26.0, 1143.0], [26.1, 1144.0], [26.2, 1145.0], [26.3, 1146.0], [26.4, 1147.0], [26.5, 1148.0], [26.6, 1149.0], [26.7, 1150.0], [26.8, 1151.0], [26.9, 1153.0], [27.0, 1155.0], [27.1, 1156.0], [27.2, 1157.0], [27.3, 1159.0], [27.4, 1161.0], [27.5, 1162.0], [27.6, 1164.0], [27.7, 1167.0], [27.8, 1169.0], [27.9, 1170.0], [28.0, 1172.0], [28.1, 1174.0], [28.2, 1177.0], [28.3, 1179.0], [28.4, 1181.0], [28.5, 1183.0], [28.6, 1184.0], [28.7, 1186.0], [28.8, 1189.0], [28.9, 1192.0], [29.0, 1194.0], [29.1, 1197.0], [29.2, 1200.0], [29.3, 1204.0], [29.4, 1206.0], [29.5, 1209.0], [29.6, 1212.0], [29.7, 1215.0], [29.8, 1219.0], [29.9, 1222.0], [30.0, 1225.0], [30.1, 1229.0], [30.2, 1231.0], [30.3, 1234.0], [30.4, 1237.0], [30.5, 1240.0], [30.6, 1244.0], [30.7, 1247.0], [30.8, 1250.0], [30.9, 1253.0], [31.0, 1257.0], [31.1, 1261.0], [31.2, 1265.0], [31.3, 1268.0], [31.4, 1272.0], [31.5, 1276.0], [31.6, 1281.0], [31.7, 1285.0], [31.8, 1289.0], [31.9, 1293.0], [32.0, 1297.0], [32.1, 1300.0], [32.2, 1304.0], [32.3, 1307.0], [32.4, 1310.0], [32.5, 1313.0], [32.6, 1317.0], [32.7, 1320.0], [32.8, 1323.0], [32.9, 1326.0], [33.0, 1329.0], [33.1, 1333.0], [33.2, 1336.0], [33.3, 1340.0], [33.4, 1343.0], [33.5, 1347.0], [33.6, 1350.0], [33.7, 1353.0], [33.8, 1357.0], [33.9, 1360.0], [34.0, 1363.0], [34.1, 1365.0], [34.2, 1369.0], [34.3, 1372.0], [34.4, 1375.0], [34.5, 1378.0], [34.6, 1381.0], [34.7, 1384.0], [34.8, 1387.0], [34.9, 1390.0], [35.0, 1393.0], [35.1, 1395.0], [35.2, 1399.0], [35.3, 1402.0], [35.4, 1406.0], [35.5, 1409.0], [35.6, 1412.0], [35.7, 1415.0], [35.8, 1418.0], [35.9, 1420.0], [36.0, 1423.0], [36.1, 1426.0], [36.2, 1429.0], [36.3, 1432.0], [36.4, 1435.0], [36.5, 1437.0], [36.6, 1440.0], [36.7, 1442.0], [36.8, 1445.0], [36.9, 1448.0], [37.0, 1450.0], [37.1, 1454.0], [37.2, 1457.0], [37.3, 1461.0], [37.4, 1464.0], [37.5, 1468.0], [37.6, 1471.0], [37.7, 1475.0], [37.8, 1478.0], [37.9, 1482.0], [38.0, 1486.0], [38.1, 1490.0], [38.2, 1494.0], [38.3, 1497.0], [38.4, 1502.0], [38.5, 1505.0], [38.6, 1510.0], [38.7, 1514.0], [38.8, 1517.0], [38.9, 1522.0], [39.0, 1526.0], [39.1, 1530.0], [39.2, 1533.0], [39.3, 1537.0], [39.4, 1541.0], [39.5, 1545.0], [39.6, 1549.0], [39.7, 1552.0], [39.8, 1556.0], [39.9, 1560.0], [40.0, 1565.0], [40.1, 1569.0], [40.2, 1574.0], [40.3, 1578.0], [40.4, 1582.0], [40.5, 1586.0], [40.6, 1591.0], [40.7, 1595.0], [40.8, 1600.0], [40.9, 1604.0], [41.0, 1609.0], [41.1, 1613.0], [41.2, 1618.0], [41.3, 1621.0], [41.4, 1625.0], [41.5, 1629.0], [41.6, 1633.0], [41.7, 1637.0], [41.8, 1641.0], [41.9, 1645.0], [42.0, 1650.0], [42.1, 1654.0], [42.2, 1659.0], [42.3, 1663.0], [42.4, 1668.0], [42.5, 1672.0], [42.6, 1676.0], [42.7, 1680.0], [42.8, 1684.0], [42.9, 1688.0], [43.0, 1692.0], [43.1, 1695.0], [43.2, 1698.0], [43.3, 1702.0], [43.4, 1705.0], [43.5, 1708.0], [43.6, 1711.0], [43.7, 1714.0], [43.8, 1717.0], [43.9, 1720.0], [44.0, 1722.0], [44.1, 1725.0], [44.2, 1729.0], [44.3, 1732.0], [44.4, 1734.0], [44.5, 1737.0], [44.6, 1740.0], [44.7, 1742.0], [44.8, 1746.0], [44.9, 1748.0], [45.0, 1752.0], [45.1, 1755.0], [45.2, 1758.0], [45.3, 1761.0], [45.4, 1764.0], [45.5, 1767.0], [45.6, 1769.0], [45.7, 1772.0], [45.8, 1775.0], [45.9, 1778.0], [46.0, 1781.0], [46.1, 1784.0], [46.2, 1787.0], [46.3, 1790.0], [46.4, 1793.0], [46.5, 1796.0], [46.6, 1799.0], [46.7, 1802.0], [46.8, 1805.0], [46.9, 1807.0], [47.0, 1810.0], [47.1, 1812.0], [47.2, 1815.0], [47.3, 1818.0], [47.4, 1820.0], [47.5, 1823.0], [47.6, 1825.0], [47.7, 1828.0], [47.8, 1830.0], [47.9, 1833.0], [48.0, 1836.0], [48.1, 1840.0], [48.2, 1843.0], [48.3, 1846.0], [48.4, 1850.0], [48.5, 1853.0], [48.6, 1856.0], [48.7, 1859.0], [48.8, 1863.0], [48.9, 1867.0], [49.0, 1870.0], [49.1, 1874.0], [49.2, 1877.0], [49.3, 1880.0], [49.4, 1884.0], [49.5, 1887.0], [49.6, 1891.0], [49.7, 1894.0], [49.8, 1898.0], [49.9, 1901.0], [50.0, 1905.0], [50.1, 1909.0], [50.2, 1913.0], [50.3, 1916.0], [50.4, 1919.0], [50.5, 1922.0], [50.6, 1925.0], [50.7, 1928.0], [50.8, 1931.0], [50.9, 1935.0], [51.0, 1938.0], [51.1, 1940.0], [51.2, 1944.0], [51.3, 1948.0], [51.4, 1951.0], [51.5, 1954.0], [51.6, 1958.0], [51.7, 1962.0], [51.8, 1965.0], [51.9, 1969.0], [52.0, 1972.0], [52.1, 1976.0], [52.2, 1980.0], [52.3, 1983.0], [52.4, 1986.0], [52.5, 1990.0], [52.6, 1994.0], [52.7, 1998.0], [52.8, 2001.0], [52.9, 2004.0], [53.0, 2008.0], [53.1, 2011.0], [53.2, 2015.0], [53.3, 2018.0], [53.4, 2021.0], [53.5, 2024.0], [53.6, 2027.0], [53.7, 2030.0], [53.8, 2032.0], [53.9, 2035.0], [54.0, 2038.0], [54.1, 2041.0], [54.2, 2043.0], [54.3, 2046.0], [54.4, 2048.0], [54.5, 2051.0], [54.6, 2054.0], [54.7, 2057.0], [54.8, 2060.0], [54.9, 2063.0], [55.0, 2066.0], [55.1, 2069.0], [55.2, 2071.0], [55.3, 2073.0], [55.4, 2076.0], [55.5, 2078.0], [55.6, 2081.0], [55.7, 2083.0], [55.8, 2086.0], [55.9, 2088.0], [56.0, 2091.0], [56.1, 2093.0], [56.2, 2095.0], [56.3, 2097.0], [56.4, 2100.0], [56.5, 2101.0], [56.6, 2104.0], [56.7, 2105.0], [56.8, 2107.0], [56.9, 2109.0], [57.0, 2111.0], [57.1, 2113.0], [57.2, 2115.0], [57.3, 2117.0], [57.4, 2119.0], [57.5, 2121.0], [57.6, 2123.0], [57.7, 2125.0], [57.8, 2127.0], [57.9, 2129.0], [58.0, 2131.0], [58.1, 2133.0], [58.2, 2136.0], [58.3, 2138.0], [58.4, 2140.0], [58.5, 2142.0], [58.6, 2144.0], [58.7, 2146.0], [58.8, 2148.0], [58.9, 2150.0], [59.0, 2152.0], [59.1, 2153.0], [59.2, 2155.0], [59.3, 2157.0], [59.4, 2158.0], [59.5, 2160.0], [59.6, 2162.0], [59.7, 2164.0], [59.8, 2166.0], [59.9, 2168.0], [60.0, 2170.0], [60.1, 2172.0], [60.2, 2175.0], [60.3, 2178.0], [60.4, 2181.0], [60.5, 2184.0], [60.6, 2187.0], [60.7, 2191.0], [60.8, 2195.0], [60.9, 2198.0], [61.0, 2201.0], [61.1, 2204.0], [61.2, 2208.0], [61.3, 2212.0], [61.4, 2217.0], [61.5, 2222.0], [61.6, 2228.0], [61.7, 2233.0], [61.8, 2238.0], [61.9, 2243.0], [62.0, 2248.0], [62.1, 2253.0], [62.2, 2258.0], [62.3, 2264.0], [62.4, 2268.0], [62.5, 2273.0], [62.6, 2277.0], [62.7, 2282.0], [62.8, 2288.0], [62.9, 2293.0], [63.0, 2298.0], [63.1, 2303.0], [63.2, 2308.0], [63.3, 2313.0], [63.4, 2319.0], [63.5, 2325.0], [63.6, 2331.0], [63.7, 2336.0], [63.8, 2341.0], [63.9, 2346.0], [64.0, 2352.0], [64.1, 2358.0], [64.2, 2363.0], [64.3, 2369.0], [64.4, 2374.0], [64.5, 2380.0], [64.6, 2385.0], [64.7, 2390.0], [64.8, 2396.0], [64.9, 2401.0], [65.0, 2406.0], [65.1, 2412.0], [65.2, 2418.0], [65.3, 2423.0], [65.4, 2428.0], [65.5, 2433.0], [65.6, 2439.0], [65.7, 2443.0], [65.8, 2448.0], [65.9, 2455.0], [66.0, 2460.0], [66.1, 2465.0], [66.2, 2472.0], [66.3, 2477.0], [66.4, 2484.0], [66.5, 2489.0], [66.6, 2495.0], [66.7, 2501.0], [66.8, 2508.0], [66.9, 2514.0], [67.0, 2520.0], [67.1, 2527.0], [67.2, 2534.0], [67.3, 2541.0], [67.4, 2547.0], [67.5, 2553.0], [67.6, 2560.0], [67.7, 2566.0], [67.8, 2572.0], [67.9, 2578.0], [68.0, 2585.0], [68.1, 2591.0], [68.2, 2597.0], [68.3, 2602.0], [68.4, 2608.0], [68.5, 2613.0], [68.6, 2619.0], [68.7, 2624.0], [68.8, 2630.0], [68.9, 2637.0], [69.0, 2643.0], [69.1, 2650.0], [69.2, 2657.0], [69.3, 2664.0], [69.4, 2671.0], [69.5, 2677.0], [69.6, 2684.0], [69.7, 2691.0], [69.8, 2697.0], [69.9, 2705.0], [70.0, 2711.0], [70.1, 2718.0], [70.2, 2725.0], [70.3, 2732.0], [70.4, 2739.0], [70.5, 2744.0], [70.6, 2750.0], [70.7, 2755.0], [70.8, 2759.0], [70.9, 2765.0], [71.0, 2771.0], [71.1, 2777.0], [71.2, 2784.0], [71.3, 2790.0], [71.4, 2797.0], [71.5, 2804.0], [71.6, 2812.0], [71.7, 2819.0], [71.8, 2826.0], [71.9, 2832.0], [72.0, 2839.0], [72.1, 2845.0], [72.2, 2852.0], [72.3, 2859.0], [72.4, 2867.0], [72.5, 2875.0], [72.6, 2881.0], [72.7, 2889.0], [72.8, 2896.0], [72.9, 2903.0], [73.0, 2911.0], [73.1, 2918.0], [73.2, 2927.0], [73.3, 2935.0], [73.4, 2942.0], [73.5, 2950.0], [73.6, 2958.0], [73.7, 2964.0], [73.8, 2972.0], [73.9, 2978.0], [74.0, 2986.0], [74.1, 2993.0], [74.2, 3001.0], [74.3, 3008.0], [74.4, 3015.0], [74.5, 3020.0], [74.6, 3027.0], [74.7, 3032.0], [74.8, 3038.0], [74.9, 3044.0], [75.0, 3050.0], [75.1, 3056.0], [75.2, 3061.0], [75.3, 3067.0], [75.4, 3072.0], [75.5, 3077.0], [75.6, 3082.0], [75.7, 3087.0], [75.8, 3092.0], [75.9, 3097.0], [76.0, 3102.0], [76.1, 3107.0], [76.2, 3112.0], [76.3, 3117.0], [76.4, 3123.0], [76.5, 3128.0], [76.6, 3133.0], [76.7, 3139.0], [76.8, 3144.0], [76.9, 3150.0], [77.0, 3155.0], [77.1, 3160.0], [77.2, 3164.0], [77.3, 3169.0], [77.4, 3173.0], [77.5, 3178.0], [77.6, 3183.0], [77.7, 3188.0], [77.8, 3193.0], [77.9, 3198.0], [78.0, 3203.0], [78.1, 3208.0], [78.2, 3213.0], [78.3, 3220.0], [78.4, 3226.0], [78.5, 3232.0], [78.6, 3239.0], [78.7, 3246.0], [78.8, 3254.0], [78.9, 3263.0], [79.0, 3273.0], [79.1, 3284.0], [79.2, 3293.0], [79.3, 3302.0], [79.4, 3313.0], [79.5, 3323.0], [79.6, 3333.0], [79.7, 3344.0], [79.8, 3354.0], [79.9, 3366.0], [80.0, 3376.0], [80.1, 3384.0], [80.2, 3395.0], [80.3, 3407.0], [80.4, 3419.0], [80.5, 3431.0], [80.6, 3442.0], [80.7, 3455.0], [80.8, 3467.0], [80.9, 3478.0], [81.0, 3488.0], [81.1, 3501.0], [81.2, 3515.0], [81.3, 3528.0], [81.4, 3539.0], [81.5, 3551.0], [81.6, 3564.0], [81.7, 3575.0], [81.8, 3588.0], [81.9, 3599.0], [82.0, 3610.0], [82.1, 3621.0], [82.2, 3631.0], [82.3, 3642.0], [82.4, 3654.0], [82.5, 3666.0], [82.6, 3678.0], [82.7, 3690.0], [82.8, 3701.0], [82.9, 3713.0], [83.0, 3727.0], [83.1, 3739.0], [83.2, 3751.0], [83.3, 3766.0], [83.4, 3778.0], [83.5, 3792.0], [83.6, 3806.0], [83.7, 3820.0], [83.8, 3833.0], [83.9, 3845.0], [84.0, 3859.0], [84.1, 3874.0], [84.2, 3892.0], [84.3, 3907.0], [84.4, 3923.0], [84.5, 3936.0], [84.6, 3951.0], [84.7, 3965.0], [84.8, 3980.0], [84.9, 3996.0], [85.0, 4010.0], [85.1, 4024.0], [85.2, 4039.0], [85.3, 4053.0], [85.4, 4069.0], [85.5, 4083.0], [85.6, 4097.0], [85.7, 4109.0], [85.8, 4121.0], [85.9, 4134.0], [86.0, 4147.0], [86.1, 4160.0], [86.2, 4171.0], [86.3, 4182.0], [86.4, 4193.0], [86.5, 4204.0], [86.6, 4216.0], [86.7, 4226.0], [86.8, 4237.0], [86.9, 4248.0], [87.0, 4259.0], [87.1, 4271.0], [87.2, 4284.0], [87.3, 4298.0], [87.4, 4314.0], [87.5, 4330.0], [87.6, 4349.0], [87.7, 4370.0], [87.8, 4391.0], [87.9, 4412.0], [88.0, 4436.0], [88.1, 4459.0], [88.2, 4482.0], [88.3, 4506.0], [88.4, 4529.0], [88.5, 4552.0], [88.6, 4574.0], [88.7, 4600.0], [88.8, 4622.0], [88.9, 4645.0], [89.0, 4670.0], [89.1, 4696.0], [89.2, 4720.0], [89.3, 4747.0], [89.4, 4774.0], [89.5, 4803.0], [89.6, 4834.0], [89.7, 4864.0], [89.8, 4896.0], [89.9, 4920.0], [90.0, 4946.0], [90.1, 4971.0], [90.2, 4997.0], [90.3, 5023.0], [90.4, 5048.0], [90.5, 5073.0], [90.6, 5098.0], [90.7, 5120.0], [90.8, 5144.0], [90.9, 5165.0], [91.0, 5188.0], [91.1, 5211.0], [91.2, 5232.0], [91.3, 5253.0], [91.4, 5277.0], [91.5, 5297.0], [91.6, 5319.0], [91.7, 5342.0], [91.8, 5366.0], [91.9, 5398.0], [92.0, 5432.0], [92.1, 5474.0], [92.2, 5519.0], [92.3, 5558.0], [92.4, 5596.0], [92.5, 5639.0], [92.6, 5680.0], [92.7, 5720.0], [92.8, 5760.0], [92.9, 5803.0], [93.0, 5839.0], [93.1, 5885.0], [93.2, 5939.0], [93.3, 5984.0], [93.4, 6033.0], [93.5, 6087.0], [93.6, 6135.0], [93.7, 6189.0], [93.8, 6233.0], [93.9, 6272.0], [94.0, 6317.0], [94.1, 6353.0], [94.2, 6389.0], [94.3, 6436.0], [94.4, 6492.0], [94.5, 6551.0], [94.6, 6611.0], [94.7, 6671.0], [94.8, 6735.0], [94.9, 6797.0], [95.0, 6869.0], [95.1, 6948.0], [95.2, 7021.0], [95.3, 7093.0], [95.4, 7157.0], [95.5, 7231.0], [95.6, 7298.0], [95.7, 7360.0], [95.8, 7425.0], [95.9, 7510.0], [96.0, 7605.0], [96.1, 7691.0], [96.2, 7774.0], [96.3, 7861.0], [96.4, 7949.0], [96.5, 8050.0], [96.6, 8152.0], [96.7, 8251.0], [96.8, 8342.0], [96.9, 8428.0], [97.0, 8510.0], [97.1, 8612.0], [97.2, 8742.0], [97.3, 8867.0], [97.4, 9004.0], [97.5, 9158.0], [97.6, 9336.0], [97.7, 9488.0], [97.8, 9654.0], [97.9, 9857.0], [98.0, 10058.0], [98.1, 10099.0], [98.2, 10150.0], [98.3, 10186.0], [98.4, 10228.0], [98.5, 10270.0], [98.6, 10306.0], [98.7, 10349.0], [98.8, 10397.0], [98.9, 10438.0], [99.0, 10483.0], [99.1, 10537.0], [99.2, 10603.0], [99.3, 10711.0], [99.4, 10827.0], [99.5, 10940.0], [99.6, 11051.0], [99.7, 11170.0], [99.8, 11433.0], [99.9, 12651.0], [100.0, 780881.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 51165.0, "series": [{"data": [[0.0, 870.0], [780800.0, 1.0], [102300.0, 1.0], [101100.0, 2.0], [100700.0, 3.0], [100.0, 19.0], [200.0, 3.0], [300.0, 3.0], [101000.0, 1.0], [400.0, 2.0], [500.0, 4.0], [600.0, 5.0], [700.0, 2.0], [800.0, 2.0], [900.0, 1.0], [1000.0, 6437.0], [1100.0, 51165.0], [1200.0, 5814.0], [1300.0, 6300.0], [1400.0, 6282.0], [1500.0, 4905.0], [1600.0, 4880.0], [1700.0, 6783.0], [1800.0, 6504.0], [1900.0, 5831.0], [2000.0, 7289.0], [2100.0, 9152.0], [2300.0, 3682.0], [2200.0, 4149.0], [2400.0, 3615.0], [2500.0, 3175.0], [2600.0, 3182.0], [2700.0, 3196.0], [2800.0, 2834.0], [2900.0, 2680.0], [3000.0, 3543.0], [3100.0, 3976.0], [3300.0, 1947.0], [3200.0, 2689.0], [3400.0, 1694.0], [3500.0, 1639.0], [3700.0, 1540.0], [3600.0, 1780.0], [3800.0, 1391.0], [3900.0, 1352.0], [4000.0, 1393.0], [4200.0, 1706.0], [4100.0, 1677.0], [4300.0, 1068.0], [4400.0, 872.0], [4500.0, 849.0], [4600.0, 841.0], [4700.0, 743.0], [4800.0, 664.0], [5100.0, 891.0], [5000.0, 795.0], [4900.0, 782.0], [5300.0, 791.0], [5200.0, 926.0], [5400.0, 494.0], [5500.0, 514.0], [5600.0, 487.0], [5700.0, 483.0], [5800.0, 483.0], [5900.0, 406.0], [6000.0, 395.0], [6100.0, 384.0], [6300.0, 533.0], [6200.0, 479.0], [100900.0, 1.0], [6400.0, 370.0], [6500.0, 341.0], [6600.0, 330.0], [6700.0, 311.0], [6900.0, 247.0], [6800.0, 273.0], [7000.0, 298.0], [7100.0, 295.0], [7400.0, 246.0], [7200.0, 289.0], [7300.0, 324.0], [7500.0, 214.0], [7600.0, 234.0], [7800.0, 230.0], [7900.0, 217.0], [7700.0, 247.0], [8000.0, 198.0], [8100.0, 189.0], [8600.0, 150.0], [8700.0, 154.0], [8400.0, 253.0], [8200.0, 201.0], [8300.0, 230.0], [8500.0, 211.0], [8800.0, 153.0], [9000.0, 131.0], [8900.0, 152.0], [9100.0, 121.0], [9200.0, 111.0], [9700.0, 95.0], [9500.0, 135.0], [9300.0, 122.0], [9600.0, 99.0], [9400.0, 136.0], [9800.0, 87.0], [10000.0, 282.0], [9900.0, 91.0], [10100.0, 459.0], [10200.0, 503.0], [10700.0, 170.0], [10300.0, 461.0], [10500.0, 328.0], [10600.0, 189.0], [10400.0, 446.0], [10900.0, 170.0], [10800.0, 186.0], [11000.0, 178.0], [11100.0, 151.0], [11200.0, 80.0], [11300.0, 63.0], [11400.0, 55.0], [11500.0, 34.0], [11600.0, 17.0], [11700.0, 10.0], [12100.0, 5.0], [12200.0, 16.0], [11800.0, 13.0], [12000.0, 9.0], [11900.0, 11.0], [12300.0, 17.0], [12500.0, 15.0], [12700.0, 12.0], [12600.0, 14.0], [12400.0, 11.0], [12800.0, 8.0], [13000.0, 10.0], [13100.0, 8.0], [13300.0, 9.0], [12900.0, 8.0], [13200.0, 12.0], [13400.0, 10.0], [13600.0, 8.0], [13700.0, 3.0], [13800.0, 4.0], [13500.0, 2.0], [14100.0, 11.0], [14300.0, 11.0], [14000.0, 6.0], [13900.0, 5.0], [14200.0, 4.0], [14400.0, 3.0], [14800.0, 7.0], [14500.0, 3.0], [14600.0, 5.0], [14700.0, 4.0], [15000.0, 3.0], [15300.0, 1.0], [14900.0, 3.0], [15500.0, 5.0], [15700.0, 2.0], [15400.0, 2.0], [15600.0, 1.0], [15800.0, 1.0], [15900.0, 3.0], [16300.0, 1.0], [16000.0, 1.0], [16600.0, 1.0], [17400.0, 1.0], [16400.0, 1.0], [17600.0, 1.0], [17800.0, 1.0], [17900.0, 1.0], [18500.0, 1.0], [101200.0, 2.0], [100800.0, 2.0], [104800.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 780800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 121270.0, "series": [{"data": [[0.0, 9.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 76054.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 121270.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3215.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.68420312E12, "maxY": 3000.0, "series": [{"data": [[1.68420348E12, 16.5], [1.68420396E12, 13.0], [1.68420318E12, 3000.0], [1.68420312E12, 3000.0], [1.6842033E12, 3000.0], [1.68420324E12, 3000.0], [1.68420342E12, 2105.7823458282955], [1.68420336E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420396E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 39.0, "minX": 13.0, "maxY": 780881.0, "series": [{"data": [[13.0, 780881.0], [14.0, 100784.0], [15.0, 100765.0], [16.0, 100748.0], [17.0, 101031.0], [18.0, 100834.0], [19.0, 100811.0], [20.0, 14986.0], [21.0, 10690.0], [22.0, 10615.0], [23.0, 10339.0], [24.0, 11552.0], [25.0, 11320.0], [26.0, 11213.0], [27.0, 11203.0], [28.0, 11245.0], [29.0, 10988.0], [30.0, 10972.0], [31.0, 10866.0], [33.0, 10843.0], [32.0, 10985.0], [34.0, 10817.0], [37.0, 10790.0], [36.0, 10841.0], [39.0, 11107.0], [38.0, 11018.0], [41.0, 9368.0], [40.0, 10689.0], [43.0, 10685.0], [42.0, 10681.0], [45.0, 10723.0], [44.0, 10637.0], [47.0, 11022.0], [49.0, 9288.0], [48.0, 10651.0], [51.0, 10591.0], [50.0, 11232.0], [53.0, 10603.0], [52.0, 10585.0], [55.0, 11085.0], [54.0, 10597.0], [57.0, 10696.0], [56.0, 11383.0], [58.0, 11303.0], [61.0, 10534.0], [60.0, 10582.5], [63.0, 10547.0], [62.0, 10549.0], [67.0, 10473.0], [66.0, 11435.0], [65.0, 9234.0], [64.0, 11266.0], [71.0, 10428.0], [69.0, 10419.0], [68.0, 11060.0], [75.0, 10363.5], [73.0, 11155.0], [72.0, 10427.0], [79.0, 10295.0], [77.0, 10254.0], [83.0, 10170.5], [82.0, 10173.0], [80.0, 11102.0], [86.0, 10091.0], [85.0, 10114.0], [84.0, 11003.0], [91.0, 8794.0], [90.0, 10793.0], [89.0, 10087.0], [88.0, 10087.0], [94.0, 9910.0], [93.0, 11337.0], [92.0, 11074.0], [99.0, 10063.0], [98.0, 11187.0], [97.0, 10962.0], [96.0, 10295.5], [103.0, 10828.0], [102.0, 10863.0], [101.0, 10320.5], [107.0, 10823.0], [105.0, 10520.0], [104.0, 10806.0], [115.0, 10768.0], [113.0, 10688.0], [119.0, 10416.0], [117.0, 10607.0], [116.0, 11109.0], [123.0, 10671.0], [121.0, 9627.0], [120.0, 11063.0], [127.0, 10950.0], [126.0, 10948.0], [125.0, 10967.0], [124.0, 10252.0], [134.0, 10744.5], [132.0, 10639.0], [131.0, 10912.0], [130.0, 10923.0], [129.0, 10636.0], [128.0, 10942.0], [143.0, 10179.0], [142.0, 10449.0], [141.0, 10494.0], [140.0, 10868.0], [139.0, 11548.5], [137.0, 10792.333333333334], [151.0, 10272.0], [150.0, 10534.0], [149.0, 10846.5], [147.0, 10337.0], [146.0, 10412.0], [145.0, 10448.0], [144.0, 10856.0], [158.0, 11387.0], [157.0, 10446.0], [155.0, 10721.0], [154.0, 11454.0], [153.0, 10804.0], [152.0, 9442.0], [167.0, 11196.0], [166.0, 10211.0], [165.0, 10250.0], [163.0, 10307.0], [162.0, 10382.0], [161.0, 10345.333333333334], [175.0, 10185.5], [173.0, 10187.25], [169.0, 10189.5], [182.0, 10042.0], [181.0, 10140.0], [180.0, 10162.0], [179.0, 10165.0], [178.0, 9154.0], [177.0, 10109.5], [190.0, 10319.0], [189.0, 10156.0], [188.0, 10237.333333333334], [185.0, 10145.0], [199.0, 10181.0], [198.0, 10062.0], [197.0, 10267.0], [195.0, 10144.0], [194.0, 10104.0], [193.0, 10775.5], [192.0, 10133.0], [207.0, 8874.0], [206.0, 10275.0], [205.0, 10327.0], [204.0, 10997.0], [203.0, 10325.0], [202.0, 11031.0], [201.0, 9543.5], [213.0, 10739.0], [212.0, 10773.0], [211.0, 10799.0], [210.0, 10810.0], [209.0, 10204.0], [208.0, 10205.0], [223.0, 10600.0], [222.0, 8586.0], [221.0, 15472.0], [220.0, 10717.0], [219.0, 10054.333333333334], [216.0, 10055.333333333334], [229.0, 10546.0], [228.0, 10536.0], [227.0, 9827.0], [226.0, 10543.0], [225.0, 10561.0], [224.0, 9906.0], [239.0, 10930.0], [238.0, 10497.0], [237.0, 7208.0], [236.0, 10526.0], [235.0, 10532.0], [233.0, 10534.666666666666], [232.0, 10534.0], [247.0, 10446.0], [246.0, 10448.0], [245.0, 11230.0], [244.0, 10457.0], [243.0, 10466.0], [242.0, 10465.0], [241.0, 9802.0], [240.0, 11261.0], [255.0, 8385.0], [254.0, 10428.0], [253.0, 10427.333333333334], [250.0, 9764.0], [249.0, 8391.0], [248.0, 10442.0], [259.0, 11043.0], [269.0, 10801.0], [271.0, 10799.0], [268.0, 10798.0], [265.0, 10065.0], [263.0, 10066.0], [262.0, 8106.0], [261.0, 10932.0], [260.0, 10217.0], [258.0, 10379.0], [257.0, 10394.0], [256.0, 8379.0], [287.0, 10446.0], [284.0, 6390.0], [275.0, 8008.0], [274.0, 10768.5], [272.0, 9034.0], [283.0, 10480.0], [282.0, 10847.0], [281.0, 10938.0], [280.0, 7770.0], [279.0, 8612.0], [278.0, 9885.0], [277.0, 10711.0], [276.0, 11095.0], [303.0, 10314.0], [300.0, 10337.0], [299.0, 10739.0], [298.0, 9654.0], [297.0, 10563.8], [292.0, 10439.666666666666], [290.0, 10555.333333333334], [288.0, 10446.0], [307.0, 10080.0], [319.0, 10225.5], [317.0, 10423.5], [315.0, 10427.75], [311.0, 10373.0], [308.0, 10260.0], [306.0, 10616.0], [305.0, 10292.0], [304.0, 8440.0], [334.0, 8744.0], [335.0, 6103.0], [333.0, 10210.0], [332.0, 10210.0], [330.0, 10554.0], [329.0, 10383.5], [327.0, 7523.0], [326.0, 10122.25], [322.0, 10241.666666666666], [350.0, 10098.5], [348.0, 10142.0], [339.0, 10518.0], [338.0, 9401.0], [337.0, 9409.0], [336.0, 10532.0], [347.0, 8399.0], [346.0, 10151.0], [345.0, 7330.0], [344.0, 10157.5], [343.0, 10159.0], [341.0, 10106.0], [340.0, 9833.0], [365.0, 10097.0], [367.0, 10094.0], [364.0, 7018.0], [355.0, 9325.0], [354.0, 8366.0], [353.0, 8394.0], [352.0, 10131.0], [363.0, 9849.0], [362.0, 5797.0], [361.0, 9939.0], [360.0, 8568.0], [359.0, 10024.0], [358.0, 5938.0], [357.0, 5954.0], [356.0, 9322.0], [382.0, 6661.0], [383.0, 9785.0], [381.0, 11038.0], [380.0, 6663.0], [379.0, 7780.0], [378.0, 5428.0], [377.0, 9538.0], [376.0, 7831.0], [375.0, 9652.0], [369.0, 9708.0], [368.0, 8041.0], [371.0, 10028.0], [370.0, 7961.0], [374.0, 5572.0], [373.0, 6928.0], [372.0, 5589.0], [398.0, 9529.0], [399.0, 9181.0], [397.0, 9193.0], [396.0, 9081.0], [395.0, 6389.0], [394.0, 6461.0], [393.0, 9554.0], [392.0, 7806.0], [391.0, 9604.0], [385.0, 7551.0], [384.0, 6595.0], [387.0, 7510.0], [386.0, 9413.0], [390.0, 8530.0], [389.0, 6611.0], [388.0, 6703.0], [414.0, 6302.0], [415.0, 7435.0], [413.0, 5036.0], [412.0, 7681.0], [411.0, 9125.0], [410.0, 6328.0], [409.0, 9471.0], [408.0, 5043.0], [407.0, 6381.5], [401.0, 9164.0], [400.0, 9169.0], [403.0, 6482.0], [402.0, 12371.0], [405.0, 5051.0], [404.0, 9143.0], [430.0, 8966.0], [431.0, 9306.0], [429.0, 6219.0], [428.0, 8198.0], [427.0, 6161.0], [426.0, 4855.0], [425.0, 6608.5], [423.0, 7614.0], [417.0, 6791.0], [416.0, 9452.0], [419.0, 9087.0], [418.0, 7474.0], [422.0, 7598.0], [421.0, 9082.0], [420.0, 9425.0], [446.0, 8926.0], [447.0, 8923.0], [445.0, 6723.0], [444.0, 6664.0], [443.0, 5858.0], [442.0, 8965.0], [441.0, 6073.0], [440.0, 7182.0], [439.0, 6884.0], [433.0, 6732.0], [432.0, 12890.0], [435.0, 10360.0], [434.0, 9218.0], [438.0, 7202.0], [437.0, 6990.0], [436.0, 5940.0], [462.0, 6649.0], [463.0, 8714.0], [461.0, 9968.0], [460.0, 6630.0], [459.0, 5614.0], [458.0, 5598.0], [457.0, 4333.0], [456.0, 4360.0], [455.0, 7003.0], [449.0, 4447.0], [448.0, 5860.0], [451.0, 5676.0], [450.0, 7706.0], [454.0, 6358.0], [453.0, 4369.0], [452.0, 8814.0], [478.0, 4144.0], [479.0, 9776.0], [477.0, 8585.0], [476.0, 5452.0], [475.0, 5459.0], [474.0, 6829.0], [473.0, 4214.0], [472.0, 5486.0], [471.0, 4242.0], [465.0, 7679.5], [467.0, 6590.0], [466.0, 4266.0], [470.0, 6586.0], [469.0, 6587.0], [468.0, 5529.0], [494.0, 6040.0], [495.0, 5289.0], [493.0, 6274.0], [492.0, 4011.0], [491.0, 8443.0], [490.0, 8447.0], [489.0, 8446.0], [488.0, 4021.0], [487.0, 11294.0], [481.0, 9727.0], [480.0, 8500.0], [483.0, 8474.0], [482.0, 6686.0], [486.0, 4030.0], [485.0, 5362.0], [484.0, 8128.0], [511.0, 5977.5], [508.0, 5248.0], [507.0, 5279.0], [506.0, 8411.0], [505.0, 6844.0], [503.0, 8414.0], [502.0, 3992.0], [501.0, 6326.0], [500.0, 5758.0], [538.0, 6154.0], [540.0, 6468.0], [536.0, 5124.0], [518.0, 8394.0], [516.0, 6630.333333333333], [514.0, 6374.0], [534.0, 3870.0], [532.0, 6278.0], [530.0, 7780.5], [528.0, 8342.0], [526.0, 6183.0], [524.0, 6791.5], [522.0, 8039.0], [520.0, 6304.0], [572.0, 5203.0], [574.0, 5392.0], [570.0, 5993.0], [568.0, 5182.5], [566.0, 4664.0], [564.0, 10894.0], [562.0, 6085.0], [560.0, 5868.5], [558.0, 6786.0], [546.0, 8164.0], [544.0, 5699.0], [550.0, 5219.0], [548.0, 6364.0], [556.0, 6118.0], [552.0, 4797.0], [604.0, 5106.0], [592.0, 4651.0], [594.0, 4559.0], [596.0, 4702.0], [606.0, 5513.0], [602.0, 6497.0], [600.0, 7051.0], [576.0, 7728.0], [578.0, 6593.0], [580.0, 5326.0], [582.0, 5906.0], [588.0, 5491.0], [586.0, 6556.0], [584.0, 4599.0], [598.0, 4483.0], [634.0, 4669.0], [638.0, 4223.0], [628.0, 4801.0], [626.0, 2998.0], [632.0, 5288.0], [614.0, 10456.0], [612.0, 10446.5], [610.0, 5474.0], [608.0, 5582.0], [622.0, 11407.0], [618.0, 10447.0], [630.0, 2980.0], [664.0, 7326.666666666667], [670.0, 6221.0], [656.0, 5900.5], [666.0, 5133.5], [642.0, 6665.666666666667], [644.0, 4760.0], [646.0, 5230.0], [648.0, 4238.0], [660.0, 6946.0], [658.0, 5247.0], [698.0, 11170.0], [700.0, 7282.0], [702.0, 4800.333333333333], [688.0, 10304.0], [690.0, 5218.0], [696.0, 2867.0], [678.0, 10274.0], [676.0, 7333.0], [674.0, 5574.0], [686.0, 10194.0], [684.0, 11243.0], [680.0, 8124.0], [694.0, 10192.5], [732.0, 3951.0], [720.0, 5366.0], [722.0, 6766.0], [724.0, 11251.0], [734.0, 7089.0], [730.0, 3934.0], [728.0, 2622.0], [704.0, 4136.5], [706.0, 6513.5], [708.0, 4091.0], [710.0, 6104.0], [718.0, 2750.0], [716.0, 6071.0], [714.0, 5425.0], [712.0, 7311.0], [762.0, 2222.0], [760.0, 4710.0], [766.0, 4618.0], [752.0, 11355.0], [754.0, 10894.0], [764.0, 2282.5], [736.0, 6614.0], [738.0, 4775.0], [740.0, 4767.0], [742.0, 4765.0], [750.0, 4036.5], [748.0, 2402.0], [746.0, 4618.0], [744.0, 6493.0], [758.0, 3573.0], [756.0, 4222.0], [792.0, 3463.0], [798.0, 2188.0], [784.0, 2233.0], [786.0, 3475.0], [796.0, 4462.0], [768.0, 4605.0], [770.0, 4476.0], [774.0, 5562.0], [780.0, 3520.0], [778.0, 6678.0], [790.0, 4556.0], [788.0, 5911.5], [826.0, 3404.0], [830.0, 10421.25], [824.0, 3285.0], [822.0, 4454.0], [818.0, 4755.2], [806.0, 6272.0], [812.0, 2165.0], [856.0, 3319.0], [860.0, 2047.0], [850.0, 3344.0], [862.0, 7703.0], [858.0, 2047.0], [834.0, 8608.5], [836.0, 4474.0], [846.0, 4268.0], [844.0, 4490.75], [840.0, 5271.5], [888.0, 3214.5], [894.0, 2737.5], [880.0, 1952.0], [892.0, 1935.0], [864.0, 3306.0], [866.0, 5310.0], [868.0, 10228.0], [870.0, 10346.0], [878.0, 3221.0], [876.0, 3222.0], [874.0, 10952.0], [872.0, 4139.0], [886.0, 1942.0], [884.0, 1939.0], [922.0, 3083.5], [920.0, 3943.0], [926.0, 3179.0], [912.0, 4032.0], [924.0, 3198.0], [910.0, 3273.0], [896.0, 3199.0], [900.0, 3209.0], [908.0, 1925.0], [906.0, 3971.0], [914.0, 10605.0], [954.0, 3162.0], [944.0, 2574.5], [946.0, 1900.0], [956.0, 3159.0], [952.0, 4202.0], [934.0, 3183.0], [932.0, 4248.0], [930.0, 4249.0], [928.0, 1910.0], [940.0, 3744.0], [950.0, 8217.0], [986.0, 1866.0], [988.0, 4190.0], [990.0, 3117.0], [976.0, 5957.0], [984.0, 3273.0], [966.0, 4008.0], [964.0, 1821.0], [962.0, 3146.0], [960.0, 4051.0], [974.0, 4219.0], [972.0, 1810.0], [968.0, 3158.5], [982.0, 4166.75], [1022.0, 2981.0], [1016.0, 10090.0], [998.0, 4823.5], [996.0, 11140.0], [1002.0, 3123.0], [1000.0, 3027.5], [1076.0, 9159.0], [1060.0, 4112.333333333333], [1056.0, 3076.0], [1080.0, 5086.0], [1072.0, 3771.0], [1032.0, 8074.666666666667], [1028.0, 6440.166666666666], [1044.0, 3174.0], [1040.0, 2940.0], [1064.0, 5108.0], [1144.0, 5769.0], [1148.0, 3939.0], [1120.0, 4135.0], [1128.0, 3503.0], [1136.0, 7986.333333333333], [1100.0, 11105.0], [1096.0, 3749.5], [1092.0, 6152.0], [1116.0, 1533.0], [1112.0, 4016.0], [1108.0, 5698.0], [1104.0, 10213.5], [1132.0, 4030.0], [1204.0, 1103.0], [1200.0, 4474.0], [1212.0, 2487.0], [1184.0, 2469.0], [1208.0, 1161.0], [1152.0, 3526.0], [1156.0, 6995.5], [1160.0, 3135.5], [1164.0, 3101.0], [1180.0, 4581.5], [1176.0, 1218.0], [1172.0, 2504.0], [1196.0, 5297.666666666666], [1192.0, 6856.0], [1276.0, 5655.0], [1236.0, 2515.0], [1308.0, 1132.0], [1304.0, 1134.0], [1300.0, 3759.6666666666665], [1396.0, 1120.0], [1404.0, 1119.0], [1380.0, 1124.0], [1400.0, 1121.0], [1392.0, 1119.6666666666667], [1368.0, 1124.0], [1344.0, 1134.0], [1360.0, 1125.0], [1388.0, 1766.421052631579], [1384.0, 1121.5], [1468.0, 1113.0], [1444.0, 1120.0], [1464.0, 1110.0], [1432.0, 1119.0], [1408.0, 1118.4], [1416.0, 1433.0], [1424.0, 1117.0], [1452.0, 1120.0], [1448.0, 1119.0], [1440.0, 1117.75], [1524.0, 1102.0], [1528.0, 1103.0], [1520.0, 1105.0], [1476.0, 1110.75], [1484.0, 1113.0], [1492.0, 1113.3333333333333], [1488.0, 1114.0], [1512.0, 1108.0], [1540.0, 1102.0], [1596.0, 4742.0], [1584.0, 10368.0], [1544.0, 1098.0], [1536.0, 1101.6666666666667], [1564.0, 2480.0], [1560.0, 2198.0], [1556.0, 1096.5], [1552.0, 1097.0], [1652.0, 3128.0], [1648.0, 2554.0], [1660.0, 2147.0], [1632.0, 2290.0], [1636.0, 2249.0], [1656.0, 2857.0], [1600.0, 5059.0], [1604.0, 2973.0], [1608.0, 6281.0], [1628.0, 3069.0], [1624.0, 2738.0], [1620.0, 2728.5], [1644.0, 2796.0], [1640.0, 10435.0], [1712.0, 2421.0], [1724.0, 10089.0], [1696.0, 2619.0], [1720.0, 3184.0], [1692.0, 2786.0], [1668.0, 2162.0], [1664.0, 3195.5], [1672.0, 3194.5], [1688.0, 3198.0], [1684.0, 3141.0], [1708.0, 2377.5], [1704.0, 2810.5], [1740.0, 3179.0], [1784.0, 2124.0], [1780.0, 2341.3333333333335], [1776.0, 2815.5555555555557], [1732.0, 3497.0], [1760.0, 2692.6666666666665], [1756.0, 2807.5], [1752.0, 2966.0], [1748.0, 6398.5], [1744.0, 10143.0], [1832.0, 3474.0], [1836.0, 2092.5], [1804.0, 2613.8], [1820.0, 2089.0], [1812.0, 2839.0], [1908.0, 5801.333333333333], [1912.0, 4173.5], [1888.0, 3066.0], [1892.0, 3481.6666666666665], [1896.0, 2201.0], [1868.0, 2780.0], [1884.0, 2924.5], [1880.0, 4116.0], [1872.0, 3153.0], [1968.0, 6927.333333333333], [1980.0, 4833.0], [1960.0, 8386.0], [1972.0, 2970.0], [1928.0, 3301.0], [1948.0, 4082.0], [1944.0, 4451.25], [1940.0, 2128.0], [1936.0, 8087.5], [2044.0, 4560.0], [2016.0, 3989.0], [2020.0, 5091.0], [2024.0, 2856.0], [2040.0, 10517.0], [2036.0, 4969.0], [2032.0, 11085.0], [1988.0, 2803.5], [1996.0, 10794.0], [2012.0, 2409.0], [2008.0, 3130.0], [2004.0, 1990.0], [2000.0, 11199.0], [2160.0, 3224.6666666666665], [2168.0, 3397.0], [2128.0, 10192.0], [2112.0, 2809.0], [2120.0, 2419.0], [2136.0, 2600.0], [2152.0, 4088.0], [2144.0, 4970.5], [2072.0, 4719.0], [2056.0, 5273.0], [2048.0, 1771.0], [2104.0, 4620.0], [2096.0, 1513.0], [2088.0, 3546.0], [2288.0, 1270.5], [2248.0, 1661.0], [2296.0, 1207.0], [2240.0, 11131.0], [2256.0, 10461.0], [2264.0, 1401.0], [2280.0, 1193.0], [2272.0, 2310.0], [2176.0, 2478.0], [2224.0, 8252.0], [2216.0, 2696.5], [2400.0, 2500.0], [2392.0, 1826.3333333333333], [2328.0, 1149.0], [2320.0, 1185.0], [2312.0, 2184.5], [2304.0, 2256.0], [2552.0, 1791.0], [2504.0, 2246.0], [2512.0, 1694.0], [2520.0, 1732.5], [2536.0, 1511.5], [2528.0, 1879.0], [2432.0, 1999.0], [2480.0, 2673.5], [2464.0, 2203.0], [2664.0, 2450.0], [2624.0, 1778.0], [2632.0, 1447.6666666666667], [2640.0, 2624.0], [2648.0, 1206.0], [2672.0, 2010.0], [2656.0, 5731.0], [2560.0, 1918.0], [2584.0, 2160.0], [2616.0, 1130.0], [2608.0, 2374.25], [2600.0, 6209.5], [2808.0, 2779.8], [2776.0, 2420.0], [2800.0, 4782.2], [2784.0, 2030.0], [2736.0, 2274.0], [2936.0, 1334.857142857143], [2896.0, 2701.0], [2880.0, 3635.375], [2888.0, 3196.0], [2904.0, 1256.0], [2920.0, 2088.0], [2912.0, 4943.333333333333], [2840.0, 2332.0], [2832.0, 2492.5], [2824.0, 1801.0], [2872.0, 4027.5555555555557], [2864.0, 5072.5], [2856.0, 1528.0], [2848.0, 7185.777777777777], [2944.0, 1185.5], [3000.0, 2514.302887639763], [2952.0, 1198.0], [2960.0, 10320.5], [2968.0, 2113.0], [2992.0, 2456.5], [2984.0, 2086.5], [2976.0, 2098.0], [2153.0, 4155.0], [2169.0, 3397.0], [2113.0, 2372.0], [2121.0, 2142.0], [2161.0, 2740.0], [2145.0, 3429.0], [2049.0, 3072.0], [2057.0, 3035.0], [2065.0, 3687.5], [2073.0, 4376.0], [2105.0, 2277.0], [2097.0, 2569.0], [2089.0, 2622.0], [2081.0, 5853.0], [2297.0, 2051.0], [2249.0, 2340.0], [2241.0, 2335.0], [2257.0, 3287.0], [2265.0, 2169.0], [2289.0, 2158.0], [2281.0, 2276.0], [2273.0, 2582.0], [2201.0, 1403.0], [2185.0, 1728.0], [2177.0, 3390.0], [2233.0, 3351.0], [2209.0, 2387.5], [2409.0, 1163.0], [2305.0, 2062.0], [2313.0, 2216.0], [2329.0, 2209.0], [2337.0, 2174.0], [2545.0, 1743.6], [2497.0, 2546.6], [2505.0, 2230.3333333333335], [2553.0, 1709.0], [2537.0, 1985.0], [2529.0, 1121.0], [2457.0, 2878.3333333333335], [2489.0, 11170.0], [2481.0, 3934.0], [2473.0, 1831.6666666666667], [2465.0, 2847.25], [2681.0, 1585.3333333333333], [2625.0, 1104.0], [2633.0, 1103.0], [2641.0, 1709.5], [2649.0, 1719.5], [2665.0, 2145.0], [2569.0, 1496.4], [2577.0, 2121.0], [2593.0, 1535.5], [2801.0, 2993.0], [2809.0, 3225.166666666667], [2753.0, 1633.0], [2769.0, 2111.5], [2777.0, 1990.0], [2785.0, 2100.0], [2689.0, 1093.0], [2705.0, 1606.0], [2713.0, 2289.0], [2745.0, 2110.5], [2729.0, 2198.8333333333335], [2721.0, 2147.75], [2929.0, 2452.0], [2881.0, 3203.6666666666665], [2889.0, 3919.666666666667], [2897.0, 2326.0], [2905.0, 3881.0], [2937.0, 4256.0], [2921.0, 1583.0], [2913.0, 4801.5], [2841.0, 4418.333333333333], [2833.0, 4177.0], [2825.0, 3745.3333333333335], [2817.0, 3248.0], [2873.0, 2445.0], [2865.0, 3296.0], [2857.0, 2311.0], [2849.0, 2066.5], [2953.0, 1784.2], [2945.0, 1855.2], [2961.0, 2370.0], [2969.0, 1931.2], [2993.0, 1591.0], [2985.0, 42.0], [2977.0, 1105.0], [1081.0, 3041.0], [1057.0, 6665.5], [1061.0, 3094.0], [1065.0, 3766.0], [1085.0, 2374.5], [1077.0, 3054.0], [1073.0, 10080.0], [1053.0, 10620.0], [1025.0, 3648.0], [1037.0, 5778.0], [1049.0, 7608.0], [1045.0, 3082.0], [1069.0, 8118.5], [1145.0, 3495.0], [1137.0, 3274.0], [1125.0, 4547.0], [1121.0, 2749.0], [1129.0, 1423.0], [1149.0, 5762.0], [1141.0, 4117.0], [1089.0, 8016.5], [1097.0, 11332.0], [1093.0, 3758.0], [1101.0, 1684.0], [1117.0, 4171.0], [1113.0, 3022.0], [1109.0, 5574.0], [1133.0, 1386.0], [1201.0, 3806.0], [1209.0, 3052.0], [1185.0, 3180.5], [1205.0, 1167.0], [1181.0, 1210.0], [1157.0, 3548.0], [1153.0, 3291.0], [1161.0, 2542.0], [1165.0, 5677.0], [1169.0, 10428.0], [1197.0, 1115.0], [1341.0, 1128.0], [1329.0, 1129.0], [1405.0, 1121.6666666666667], [1377.0, 1126.0], [1373.0, 1773.3333333333333], [1369.0, 1126.0], [1461.0, 1114.0], [1469.0, 1111.0], [1445.0, 1114.0], [1465.0, 1118.0], [1421.0, 1117.0], [1437.0, 1114.0], [1433.0, 1117.0], [1429.0, 1117.0], [1425.0, 1120.0], [1453.0, 1114.0], [1525.0, 1103.0], [1533.0, 1102.0], [1521.0, 1103.5], [1509.0, 1110.25], [1501.0, 1112.0], [1485.0, 1111.0], [1489.0, 1111.0], [1597.0, 3684.0], [1577.0, 10427.0], [1585.0, 10062.0], [1537.0, 1102.0], [1541.0, 1100.3333333333333], [1561.0, 1095.0], [1553.0, 1097.0], [1581.0, 3739.5], [1573.0, 3411.0], [1657.0, 2148.0], [1633.0, 3349.0], [1637.0, 3210.0], [1641.0, 2251.0], [1661.0, 3206.0], [1653.0, 2159.0], [1649.0, 3106.0], [1601.0, 2345.0], [1605.0, 2294.0], [1613.0, 3294.0], [1629.0, 3099.0], [1625.0, 3285.0], [1621.0, 2296.0], [1617.0, 4356.0], [1645.0, 3244.0], [1717.0, 3167.0], [1677.0, 2163.0], [1709.0, 2223.0], [1701.0, 2644.25], [1681.0, 2478.0], [1737.0, 8975.0], [1789.0, 2453.25], [1781.0, 2859.0], [1753.0, 3024.0], [1745.0, 10315.5], [1729.0, 5773.2], [1797.0, 2195.0], [1853.0, 2974.5], [1829.0, 2115.25], [1845.0, 2087.0], [1793.0, 2762.0], [1821.0, 2639.0], [1817.0, 10174.0], [1813.0, 3255.5], [1809.0, 2858.6666666666665], [1861.0, 2449.0], [1913.0, 11149.0], [1889.0, 2520.0], [1893.0, 2989.0], [1857.0, 6820.5], [1865.0, 3462.0], [1885.0, 3441.0], [1881.0, 2130.0], [1877.0, 2903.0], [1873.0, 2739.0], [1901.0, 4490.0], [1981.0, 3329.0], [1973.0, 2028.0], [1957.0, 4062.0], [1977.0, 2917.0], [1969.0, 10328.0], [1921.0, 3385.0], [1949.0, 3632.5], [2037.0, 11154.0], [2017.0, 5183.0], [2021.0, 1917.0], [2025.0, 2982.0], [2029.0, 6992.0], [2033.0, 1880.0], [1985.0, 5495.666666666666], [1993.0, 2744.0], [1997.0, 10900.0], [2013.0, 5122.0], [2009.0, 4803.0], [2005.0, 7819.666666666667], [2162.0, 10378.0], [2170.0, 2721.0], [2114.0, 1442.0], [2122.0, 2354.0], [2130.0, 3118.0], [2138.0, 4043.5], [2154.0, 1425.0], [2074.0, 2924.0], [2066.0, 2653.0], [2058.0, 2564.0], [2050.0, 3740.0], [2106.0, 2825.0], [2098.0, 3519.0], [2090.0, 10856.0], [2082.0, 1548.0], [2282.0, 1190.0], [2298.0, 2142.0], [2250.0, 1242.0], [2258.0, 1307.0], [2266.0, 1366.0], [2274.0, 2269.0], [2178.0, 2493.0], [2234.0, 4366.625], [2226.0, 11161.0], [2210.0, 2394.0], [2322.0, 2628.6666666666665], [2330.0, 1158.0], [2314.0, 1505.0], [2306.0, 1254.0], [2538.0, 2174.0], [2498.0, 2364.0], [2554.0, 1627.0], [2514.0, 1561.0], [2522.0, 2324.5], [2442.0, 1128.0], [2482.0, 2923.0], [2474.0, 1936.0], [2466.0, 2671.0], [2666.0, 1764.5], [2674.0, 2144.5], [2682.0, 1860.0], [2634.0, 2132.0], [2642.0, 1776.0], [2562.0, 1830.6666666666667], [2586.0, 2134.6666666666665], [2618.0, 4580.333333333333], [2610.0, 3124.0], [2602.0, 1105.0], [2810.0, 8299.0], [2754.0, 2424.5], [2762.0, 1642.0], [2778.0, 2100.0], [2802.0, 3087.0], [2794.0, 1573.5], [2786.0, 2417.0], [2690.0, 4141.8], [2698.0, 1216.0], [2706.0, 1656.5], [2714.0, 1649.0], [2738.0, 2432.0], [2722.0, 2176.75], [2938.0, 2573.0], [2930.0, 2224.0], [2882.0, 3585.0], [2890.0, 6390.0], [2898.0, 3071.5], [2906.0, 1623.0], [2922.0, 5600.0], [2914.0, 1629.5], [2842.0, 3716.6666666666665], [2834.0, 2972.0], [2826.0, 2518.0], [2818.0, 3019.0], [2874.0, 2437.0], [2866.0, 3296.0], [2858.0, 1953.0], [2850.0, 10745.0], [2954.0, 1137.0], [2962.0, 3242.0], [2970.0, 1146.0], [2986.0, 1763.75], [2978.0, 1426.0], [2163.0, 3400.0], [2171.0, 1340.0], [2115.0, 2056.0], [2123.0, 2792.0], [2131.0, 5818.0], [2139.0, 2077.0], [2147.0, 6559.5], [2051.0, 2341.0], [2059.0, 1706.0], [2067.0, 3613.0], [2075.0, 10805.0], [2107.0, 3488.0], [2099.0, 10266.0], [2083.0, 1909.0], [2299.0, 1907.0], [2243.0, 2781.4], [2251.0, 4414.0], [2259.0, 2311.0], [2291.0, 2189.5], [2283.0, 1950.0], [2275.0, 13670.0], [2203.0, 2844.0], [2187.0, 2925.0], [2179.0, 2398.0], [2235.0, 2325.0], [2227.0, 2323.0], [2219.0, 3124.8], [2315.0, 1862.0], [2387.0, 1931.0], [2307.0, 1957.0], [2347.0, 3170.0], [2555.0, 1643.0], [2515.0, 1662.5], [2547.0, 2148.75], [2531.0, 6067.333333333334], [2483.0, 2200.0], [2475.0, 3156.0], [2683.0, 1804.0], [2675.0, 2402.0], [2627.0, 1642.5], [2635.0, 1843.0], [2563.0, 1919.0], [2611.0, 1937.0], [2603.0, 2092.0], [2595.0, 2379.0], [2811.0, 8646.0], [2755.0, 2152.0], [2771.0, 2102.5], [2779.0, 2422.0], [2803.0, 1736.0], [2795.0, 1701.0], [2787.0, 2261.5], [2715.0, 2045.0], [2747.0, 2282.0], [2739.0, 2760.5], [2731.0, 10297.0], [2931.0, 2273.8], [2883.0, 4893.5], [2891.0, 3086.0], [2899.0, 2310.0], [2907.0, 2230.0], [2923.0, 5413.0], [2915.0, 1715.75], [2835.0, 2300.0], [2827.0, 1813.0], [2819.0, 3795.0], [2875.0, 3615.0], [2867.0, 1785.0], [2859.0, 10430.0], [2851.0, 5015.75], [2947.0, 1501.3333333333335], [2955.0, 1167.0], [2963.0, 1618.25], [2971.0, 1610.1666666666665], [2995.0, 2984.375], [2987.0, 1597.0], [541.0, 8255.0], [543.0, 8076.5], [539.0, 7142.0], [537.0, 5179.0], [535.0, 5146.0], [533.0, 7970.0], [531.0, 6308.0], [527.0, 9593.0], [519.0, 6248.5], [513.0, 5292.5], [525.0, 8357.0], [521.0, 3956.0], [573.0, 5528.0], [575.0, 11258.0], [571.0, 6648.0], [569.0, 4667.0], [565.0, 6046.0], [563.0, 7867.0], [561.0, 7897.0], [557.0, 4748.0], [545.0, 6373.0], [551.0, 6915.0], [549.0, 3663.0], [555.0, 5811.0], [553.0, 3498.0], [605.0, 6483.0], [607.0, 3180.0], [593.0, 6987.0], [595.0, 6868.5], [597.0, 10949.0], [603.0, 11129.0], [601.0, 5526.0], [591.0, 4908.0], [577.0, 5338.0], [579.0, 3289.0], [581.0, 5912.0], [583.0, 5458.0], [589.0, 4567.0], [587.0, 10742.0], [585.0, 5566.0], [599.0, 11353.0], [637.0, 3390.0], [639.0, 4240.0], [625.0, 5211.5], [627.0, 2993.0], [615.0, 7218.0], [613.0, 10552.0], [609.0, 4456.0], [623.0, 3011.0], [621.0, 4364.5], [619.0, 5694.0], [617.0, 5768.5], [631.0, 2979.0], [629.0, 10936.0], [643.0, 10429.0], [671.0, 6212.0], [669.0, 9142.0], [667.0, 5236.0], [655.0, 6229.0], [645.0, 2937.0], [647.0, 5131.0], [653.0, 6057.0], [651.0, 5503.0], [649.0, 10875.0], [661.0, 2915.0], [657.0, 4182.0], [677.0, 2904.5], [691.0, 5515.0], [689.0, 7309.0], [697.0, 5507.0], [673.0, 6208.0], [687.0, 10487.0], [683.0, 5721.0], [681.0, 5533.0], [695.0, 4894.0], [693.0, 11123.0], [733.0, 2593.0], [735.0, 4903.0], [721.0, 5031.0], [723.0, 5316.0], [731.0, 4854.0], [729.0, 4557.0], [719.0, 11266.0], [707.0, 5490.0], [709.0, 4062.0], [711.0, 7223.0], [717.0, 11268.0], [715.0, 10221.0], [713.0, 4987.0], [727.0, 7928.0], [725.0, 10553.0], [761.0, 3591.0], [765.0, 6367.0], [753.0, 2366.0], [755.0, 2340.0], [751.0, 2379.0], [737.0, 7034.0], [739.0, 3738.0], [741.0, 5064.0], [743.0, 6463.0], [747.0, 10955.0], [745.0, 6493.0], [759.0, 5622.0], [757.0, 5619.0], [793.0, 4401.0], [797.0, 2192.0], [785.0, 2227.0], [795.0, 4685.5], [783.0, 4173.0], [769.0, 3549.0], [773.0, 4474.0], [771.0, 3557.0], [775.0, 10196.0], [781.0, 3536.0], [779.0, 11254.0], [777.0, 10420.0], [791.0, 5513.0], [789.0, 4248.0], [803.0, 6371.0], [825.0, 4353.0], [821.0, 3474.5], [819.0, 6588.0], [813.0, 4478.0], [801.0, 10393.333333333334], [805.0, 10327.0], [811.0, 2170.5], [809.0, 3696.0], [859.0, 2042.0], [863.0, 6115.0], [849.0, 4040.5], [861.0, 14150.0], [857.0, 4411.0], [847.0, 4465.0], [833.0, 10458.0], [835.0, 6560.0], [837.0, 11129.0], [845.0, 2111.0], [843.0, 11264.0], [855.0, 10237.5], [853.0, 9525.333333333334], [889.0, 1937.0], [895.0, 1937.0], [881.0, 1944.0], [891.0, 2602.5], [879.0, 3293.0], [865.0, 3277.0], [867.0, 3273.0], [869.0, 10369.0], [871.0, 3229.0], [877.0, 3216.0], [875.0, 1907.0], [873.0, 3249.0], [885.0, 3233.0], [883.0, 3210.0], [899.0, 7753.5], [927.0, 3219.0], [923.0, 3308.0], [897.0, 10072.0], [901.0, 4261.0], [909.0, 3202.0], [907.0, 3211.0], [905.0, 4849.5], [919.0, 2551.5], [917.0, 3030.0], [915.0, 10300.0], [953.0, 3170.0], [957.0, 4220.0], [959.0, 6598.5], [945.0, 4217.0], [947.0, 4200.0], [955.0, 3182.0], [935.0, 3252.0], [933.0, 4011.0], [931.0, 1914.0], [929.0, 3193.0], [943.0, 1906.0], [941.0, 3258.0], [939.0, 2532.5], [937.0, 2804.0], [951.0, 3153.0], [963.0, 3225.0], [985.0, 5747.0], [977.0, 4508.0], [965.0, 10885.0], [961.0, 3950.0], [975.0, 5960.0], [973.0, 1877.0], [971.0, 3192.5], [969.0, 4211.0], [983.0, 5952.0], [979.0, 3290.0], [1019.0, 8205.333333333334], [1017.0, 7226.75], [1023.0, 4058.0], [999.0, 5166.0], [993.0, 8526.75], [1011.0, 7182.666666666667], [1003.0, 1857.0], [1038.0, 5141.0], [1062.0, 3154.0], [1082.0, 4100.0], [1086.0, 4063.0], [1030.0, 10152.0], [1026.0, 10239.0], [1046.0, 6251.0], [1042.0, 6594.0], [1070.0, 5876.0], [1066.0, 3060.0], [1142.0, 5443.0], [1138.0, 10461.0], [1150.0, 3331.0], [1122.0, 10061.0], [1126.0, 2714.0], [1146.0, 1341.0], [1102.0, 3628.0], [1098.0, 5003.0], [1094.0, 4050.0], [1090.0, 3993.0], [1118.0, 3796.0], [1114.0, 3882.0], [1110.0, 11024.0], [1106.0, 7259.5], [1130.0, 2712.0], [1210.0, 5671.0], [1186.0, 4511.0], [1202.0, 3411.0], [1182.0, 3850.0], [1154.0, 10747.0], [1158.0, 3674.0], [1162.0, 2521.0], [1178.0, 3181.5], [1170.0, 3607.0], [1198.0, 3160.0], [1190.0, 4269.333333333333], [1338.0, 1130.0], [1322.0, 1131.0], [1402.0, 1119.0], [1378.0, 1122.0], [1398.0, 1437.75], [1346.0, 3125.5], [1366.0, 1127.0], [1390.0, 1122.25], [1382.0, 2302.0], [1458.0, 1114.0], [1466.0, 1113.0], [1414.0, 1118.5], [1422.0, 1117.0], [1430.0, 1119.0], [1426.0, 1116.0], [1446.0, 1114.5], [1530.0, 1102.0], [1534.0, 1103.0], [1526.0, 1103.0], [1502.0, 1108.0], [1474.0, 1112.0], [1486.0, 1109.5], [1498.0, 1115.0], [1490.0, 1115.0], [1518.0, 1275.3561643835621], [1514.0, 1358.2], [1506.0, 1107.0], [1594.0, 3310.6666666666665], [1590.0, 9111.5], [1598.0, 4343.0], [1550.0, 4758.0], [1542.0, 1100.0], [1582.0, 2362.0], [1578.0, 9202.42857142857], [1558.0, 1095.0], [1654.0, 3102.0], [1658.0, 2780.0], [1634.0, 3250.0], [1638.0, 3317.0], [1630.0, 2189.0], [1602.0, 11394.0], [1606.0, 2263.0], [1614.0, 2326.0], [1610.0, 5331.5], [1626.0, 2996.0], [1618.0, 3308.0], [1646.0, 2183.0], [1642.0, 2164.0], [1722.0, 3163.0], [1726.0, 5650.0], [1714.0, 2147.0], [1670.0, 3168.5], [1678.0, 5243.666666666667], [1674.0, 2140.0], [1686.0, 3130.0], [1706.0, 2126.0], [1702.0, 3031.0], [1778.0, 2791.3333333333335], [1786.0, 2160.5], [1738.0, 2143.0], [1734.0, 10334.5], [1770.0, 3071.3333333333335], [1758.0, 2749.0], [1754.0, 2647.0], [1750.0, 2839.0], [1850.0, 2806.6666666666665], [1830.0, 3117.0], [1826.0, 3162.5], [1834.0, 2921.5], [1822.0, 3113.0], [1798.0, 3037.0], [1818.0, 3481.0], [1814.0, 2124.0], [1838.0, 3078.0], [1866.0, 10117.5], [1894.0, 4892.0], [1858.0, 2092.0], [1870.0, 3495.0], [1886.0, 4890.0], [1882.0, 3107.0], [1878.0, 2074.0], [1874.0, 2499.0], [1902.0, 4878.0], [1898.0, 3156.5], [1982.0, 3380.0], [1954.0, 10550.666666666666], [1966.0, 9092.5], [1978.0, 5265.0], [1926.0, 5834.333333333333], [1946.0, 3875.0], [2042.0, 3247.5], [2018.0, 3969.0], [2022.0, 1940.0], [2030.0, 1905.0], [2046.0, 2745.5], [2038.0, 2546.0], [2034.0, 2918.0], [1986.0, 2910.0], [2014.0, 1970.0], [2010.0, 1992.0], [2006.0, 2008.0], [2002.0, 10734.333333333334], [2172.0, 5762.0], [2116.0, 2804.0], [2124.0, 3458.0], [2132.0, 2319.0], [2140.0, 2773.0], [2164.0, 4614.0], [2156.0, 6656.5], [2148.0, 2456.0], [2060.0, 2682.0], [2052.0, 1677.0], [2108.0, 4268.0], [2100.0, 1469.0], [2300.0, 2047.0], [2244.0, 2314.0], [2252.0, 1267.0], [2260.0, 4398.0], [2268.0, 2311.0], [2292.0, 3237.0], [2276.0, 2264.0], [2236.0, 3308.0], [2180.0, 1329.0], [2324.0, 2311.5], [2356.0, 3169.0], [2340.0, 1831.5], [2316.0, 4335.0], [2308.0, 1196.0], [2460.0, 1104.0], [2500.0, 1924.0], [2548.0, 2469.0], [2508.0, 2168.5], [2524.0, 2289.6666666666665], [2452.0, 1114.0], [2492.0, 7040.4], [2476.0, 2176.0], [2468.0, 2333.0], [2668.0, 1545.5], [2628.0, 2143.0], [2644.0, 2218.75], [2652.0, 2408.714285714286], [2660.0, 1595.5], [2572.0, 1102.0], [2580.0, 5034.333333333333], [2588.0, 1799.0], [2612.0, 2147.0], [2604.0, 5721.0], [2804.0, 5286.75], [2812.0, 3070.0], [2756.0, 2130.0], [2764.0, 2349.0], [2780.0, 2752.0], [2796.0, 3540.6666666666665], [2708.0, 2142.0], [2716.0, 2436.0], [2732.0, 2608.0], [2932.0, 2168.6666666666665], [2940.0, 1521.2105263157898], [2884.0, 2651.3333333333335], [2892.0, 2931.0], [2900.0, 2681.0], [2908.0, 1423.5], [2924.0, 1569.0], [2916.0, 2205.0], [2844.0, 8731.5], [2836.0, 4651.0], [2828.0, 11082.0], [2820.0, 3040.0], [2876.0, 8410.714285714286], [2868.0, 3059.0], [2860.0, 6254.111111111111], [2852.0, 3535.0], [2948.0, 1487.0], [2996.0, 1728.5], [2956.0, 5763.5], [2964.0, 2115.0], [2972.0, 1877.3333333333333], [2988.0, 4399.833333333334], [2980.0, 1590.1666666666667], [2165.0, 2101.0], [2149.0, 2022.0], [2117.0, 2172.0], [2133.0, 2064.0], [2141.0, 1997.0], [2173.0, 2486.0], [2157.0, 10208.0], [2053.0, 4917.0], [2061.0, 2543.0], [2069.0, 2791.0], [2077.0, 7561.0], [2109.0, 4692.0], [2101.0, 1594.0], [2093.0, 10546.666666666666], [2085.0, 3075.0], [2253.0, 3289.0], [2261.0, 1252.0], [2285.0, 1763.5], [2277.0, 1912.0], [2181.0, 5749.0], [2325.0, 2525.0], [2429.0, 2112.0], [2413.0, 2177.0], [2309.0, 1164.0], [2317.0, 2055.0], [2357.0, 2500.0], [2557.0, 2467.0], [2541.0, 10185.0], [2501.0, 2189.0], [2509.0, 1254.0], [2517.0, 3142.0], [2453.0, 2182.0], [2485.0, 6688.0], [2477.0, 2341.0], [2469.0, 2485.0], [2677.0, 3112.0], [2629.0, 1369.3333333333333], [2637.0, 1448.0], [2653.0, 2129.0], [2565.0, 2114.5], [2573.0, 1108.5], [2581.0, 2149.0], [2621.0, 4308.5], [2613.0, 3123.0], [2597.0, 2457.0], [2813.0, 4342.115384615385], [2773.0, 1648.5], [2805.0, 2415.0], [2693.0, 3092.90625], [2701.0, 2295.0], [2717.0, 1426.0], [2741.0, 1958.0], [2925.0, 1179.5], [2933.0, 2198.0], [2885.0, 3460.3333333333335], [2893.0, 3539.0], [2901.0, 1907.3333333333333], [2909.0, 7376.333333333333], [2917.0, 1588.0], [2845.0, 11084.0], [2837.0, 1969.0], [2829.0, 2988.75], [2821.0, 5978.0], [2877.0, 6416.0], [2869.0, 7750.666666666667], [2853.0, 2982.875], [2949.0, 1821.5], [2973.0, 1111.0], [2997.0, 2264.6666666666665], [2989.0, 8175.0], [2981.0, 1755.0], [1083.0, 3425.0], [1087.0, 1737.0], [1059.0, 10852.0], [1063.0, 11131.0], [1067.0, 1790.0], [1079.0, 5309.5], [1075.0, 10551.0], [1031.0, 10286.0], [1035.0, 3959.333333333333], [1051.0, 10222.0], [1047.0, 7497.0], [1043.0, 5142.0], [1071.0, 3856.0], [1143.0, 5430.0], [1151.0, 5404.0], [1127.0, 2721.0], [1147.0, 10872.0], [1139.0, 4006.0], [1119.0, 7179.0], [1091.0, 6158.0], [1099.0, 2988.0], [1115.0, 3891.0], [1111.0, 4222.0], [1107.0, 10192.0], [1131.0, 2674.0], [1203.0, 1105.0], [1211.0, 3508.0], [1187.0, 3838.0], [1207.0, 3850.5], [1163.0, 5689.0], [1167.0, 3582.5], [1175.0, 1865.3333333333333], [1171.0, 2758.0], [1199.0, 3492.0], [1195.0, 1177.0], [1191.0, 3465.0], [1267.0, 1138.0], [1231.0, 3470.0], [1223.0, 5156.0], [1299.0, 2474.0], [1283.0, 1136.0], [1403.0, 1120.0], [1395.0, 1120.0], [1367.0, 1125.0], [1355.0, 1129.0], [1467.0, 1117.0], [1471.0, 1566.0], [1443.0, 1117.0], [1451.0, 1116.25], [1447.0, 1115.0], [1463.0, 1117.5], [1459.0, 1121.0], [1423.0, 1116.0], [1419.0, 1120.0], [1411.0, 1122.0], [1435.0, 2110.75], [1455.0, 1114.25], [1527.0, 1103.5], [1531.0, 1101.0], [1523.0, 1104.0], [1519.0, 1405.4999999999995], [1483.0, 1110.5], [1479.0, 1112.0], [1487.0, 1111.0], [1499.0, 1110.25], [1495.0, 1111.3333333333333], [1591.0, 10727.0], [1599.0, 3383.0], [1563.0, 2254.5], [1539.0, 1100.5], [1547.0, 2768.0], [1543.0, 1099.0], [1555.0, 1096.0], [1583.0, 3269.0], [1579.0, 3263.0], [1575.0, 8487.6], [1659.0, 2234.0], [1663.0, 2302.0], [1635.0, 2886.0], [1639.0, 2623.0], [1655.0, 3235.0], [1651.0, 2707.0], [1631.0, 3110.0], [1603.0, 3366.0], [1611.0, 2825.0], [1615.0, 2323.0], [1627.0, 2264.0], [1623.0, 5220.5], [1643.0, 2172.0], [1667.0, 3461.6666666666665], [1719.0, 3194.0], [1715.0, 2515.5], [1679.0, 3184.0], [1699.0, 3185.0], [1695.0, 2803.0], [1691.0, 2984.0], [1687.0, 3168.0], [1683.0, 3066.0], [1791.0, 2635.0], [1775.0, 2116.0], [1763.0, 2163.3333333333335], [1751.0, 2944.0], [1731.0, 2917.0], [1847.0, 3184.3333333333335], [1851.0, 2220.0], [1855.0, 3086.5], [1831.0, 2914.0], [1843.0, 2540.25], [1807.0, 2795.0], [1795.0, 3278.0], [1823.0, 2097.0], [1819.0, 2110.0], [1815.0, 2639.0], [1839.0, 2629.0], [1907.0, 2872.3333333333335], [1915.0, 4207.0], [1919.0, 5808.333333333334], [1895.0, 5230.0], [1887.0, 5231.0], [1863.0, 2643.0], [1871.0, 3025.0], [1879.0, 3071.0], [1875.0, 3458.0], [1899.0, 4881.0], [1975.0, 2895.0], [1979.0, 2968.0], [1955.0, 2081.0], [1963.0, 2916.0], [1971.0, 2032.0], [1951.0, 10153.666666666666], [1923.0, 3606.5], [1935.0, 6675.5], [1943.0, 2206.0], [1939.0, 3149.0], [2043.0, 3794.0], [2039.0, 3826.0], [2047.0, 3090.0], [2019.0, 5178.0], [2023.0, 2750.0], [2027.0, 3812.5], [2031.0, 2708.0], [2035.0, 4636.0], [2015.0, 3025.0], [1999.0, 5213.0], [2011.0, 4013.0], [2007.0, 3052.0], [2003.0, 10151.5], [2150.0, 2144.0], [2174.0, 2725.0], [2118.0, 3469.0], [2126.0, 2963.0], [2134.0, 1443.0], [2142.0, 3429.0], [2070.0, 4724.0], [2062.0, 10486.0], [2054.0, 2747.0], [2110.0, 3479.0], [2102.0, 2303.0], [2094.0, 3531.0], [2086.0, 4684.0], [2294.0, 2217.0], [2302.0, 1165.0], [2246.0, 1944.0], [2254.0, 3285.0], [2262.0, 2418.0], [2270.0, 1684.0], [2286.0, 1195.0], [2278.0, 1196.0], [2190.0, 1347.0], [2182.0, 1341.0], [2230.0, 2519.0], [2222.0, 2791.0], [2422.0, 1688.0], [2374.0, 2498.0], [2358.0, 2459.0], [2318.0, 2297.0], [2550.0, 1106.0], [2510.0, 2110.0], [2518.0, 2130.0], [2526.0, 2167.25], [2542.0, 5003.666666666666], [2534.0, 2472.0], [2494.0, 5719.0], [2462.0, 4360.0], [2646.0, 2097.0], [2670.0, 1100.0], [2574.0, 3126.0], [2590.0, 1914.0], [2606.0, 5724.5], [2598.0, 1955.0], [2806.0, 2114.75], [2766.0, 1614.0], [2774.0, 2436.3333333333335], [2782.0, 1481.0], [2814.0, 4631.25], [2798.0, 1940.1666666666667], [2790.0, 2607.5], [2694.0, 1756.0], [2702.0, 4931.666666666667], [2718.0, 2153.0], [2750.0, 2071.5], [2734.0, 2547.3333333333335], [2726.0, 1841.0], [2934.0, 1376.5], [2886.0, 2485.0], [2894.0, 3019.0], [2902.0, 5509.5], [2910.0, 2679.0], [2942.0, 1291.3333333333333], [2926.0, 1419.5], [2918.0, 1310.0], [2846.0, 11002.857142857143], [2838.0, 10687.2], [2830.0, 11245.0], [2822.0, 5970.0], [2878.0, 3272.4615384615386], [2870.0, 4691.25], [2862.0, 2556.3333333333335], [2958.0, 10376.0], [2950.0, 1487.6666666666667], [2966.0, 1795.0], [2974.0, 2095.5], [2998.0, 1821.75], [2990.0, 2070.5], [2982.0, 39.0], [2167.0, 3481.0], [2175.0, 4515.0], [2119.0, 2477.0], [2127.0, 4172.0], [2135.0, 4655.0], [2151.0, 4076.0], [2111.0, 1435.0], [2063.0, 10473.0], [2071.0, 2509.0], [2079.0, 10350.5], [2103.0, 2832.0], [2095.0, 10790.0], [2087.0, 2888.0], [2303.0, 1728.5], [2295.0, 1179.0], [2247.0, 4078.0], [2255.0, 10392.0], [2263.0, 2225.0], [2271.0, 2159.0], [2279.0, 8293.0], [2199.0, 1327.0], [2183.0, 2221.0], [2231.0, 2681.0], [2223.0, 2445.8], [2423.0, 1135.0], [2383.0, 1126.0], [2359.0, 2206.0], [2311.0, 2254.0], [2327.0, 1835.0], [2463.0, 2329.5], [2559.0, 1674.0], [2503.0, 2315.6666666666665], [2535.0, 2126.5], [2455.0, 1145.0], [2487.0, 3151.5], [2479.0, 2156.0], [2471.0, 1115.0], [2679.0, 2175.6666666666665], [2647.0, 2152.0], [2671.0, 1654.5], [2623.0, 1111.0], [2567.0, 2118.5], [2583.0, 1107.5], [2591.0, 1110.0], [2615.0, 2635.5], [2599.0, 2117.0], [2791.0, 2106.5], [2815.0, 2642.083333333333], [2759.0, 1885.6666666666667], [2807.0, 2577.833333333333], [2751.0, 3095.0], [2695.0, 7421.5], [2703.0, 2088.0], [2711.0, 1395.5], [2719.0, 1933.0], [2743.0, 2170.3333333333335], [2727.0, 2071.0], [2927.0, 2241.8], [2935.0, 1104.0], [2943.0, 1348.0], [2887.0, 4043.0], [2903.0, 1313.0], [2911.0, 3067.0], [2919.0, 4680.5], [2839.0, 8484.2], [2831.0, 2299.0], [2823.0, 2899.5], [2879.0, 2230.0], [2871.0, 2980.0], [2863.0, 4332.8], [2855.0, 2588.0], [2959.0, 1179.0], [2951.0, 6258.0], [2991.0, 2397.0], [2967.0, 1778.5], [2975.0, 1452.6666666666667], [2983.0, 5611.857142857142]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2977.7709176855465, 2555.0491603007795]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9.05, "minX": 1.68420312E12, "maxY": 546721.1333333333, "series": [{"data": [[1.68420348E12, 75.95], [1.68420396E12, 9.083333333333334], [1.68420318E12, 448759.55], [1.68420312E12, 432271.25], [1.6842033E12, 368313.56666666665], [1.68420324E12, 365131.2166666667], [1.68420342E12, 51893.5], [1.68420336E12, 546721.1333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68420348E12, 54.3], [1.68420396E12, 9.05], [1.68420318E12, 368986.6], [1.68420312E12, 351429.6], [1.6842033E12, 300450.95], [1.68420324E12, 298740.5], [1.68420342E12, 44906.1], [1.68420336E12, 450201.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420396E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2103.1741016295655, "minX": 1.68420312E12, "maxY": 780881.0, "series": [{"data": [[1.68420348E12, 100828.83333333334], [1.68420396E12, 780881.0], [1.68420318E12, 2452.0158196801744], [1.68420312E12, 3163.2605773440127], [1.6842033E12, 2103.1741016295655], [1.68420324E12, 2251.0116934262446], [1.68420342E12, 3968.9820636839963], [1.68420336E12, 2499.515643524593]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420396E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2102.8964727853236, "minX": 1.68420312E12, "maxY": 780881.0, "series": [{"data": [[1.68420348E12, 100828.83333333334], [1.68420396E12, 780881.0], [1.68420318E12, 2451.7540959482058], [1.68420312E12, 3162.8715267942434], [1.6842033E12, 2102.8964727853236], [1.68420324E12, 2250.7165707361332], [1.68420342E12, 3968.6926642482813], [1.68420336E12, 2499.1688134230885]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420396E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68420312E12, "maxY": 326.18206164859737, "series": [{"data": [[1.68420348E12, 108.66666666666667], [1.68420396E12, 0.0], [1.68420318E12, 121.47108309624232], [1.68420312E12, 326.18206164859737], [1.6842033E12, 74.79119853007697], [1.68420324E12, 230.66004241138918], [1.68420342E12, 0.0], [1.68420336E12, 37.6318295991157]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420396E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 56.0, "minX": 1.68420312E12, "maxY": 104888.0, "series": [{"data": [[1.68420348E12, 101031.0], [1.68420318E12, 17473.0], [1.68420312E12, 17917.0], [1.6842033E12, 104888.0], [1.68420324E12, 15621.0], [1.68420342E12, 15472.0], [1.68420336E12, 18554.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68420348E12, 101031.0], [1.68420318E12, 4149.0], [1.68420312E12, 6194.600000000006], [1.6842033E12, 4599.9000000000015], [1.68420324E12, 3205.0], [1.68420342E12, 7026.0], [1.68420336E12, 4193.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68420348E12, 101031.0], [1.68420318E12, 10505.69000000005], [1.68420312E12, 9157.910000000014], [1.6842033E12, 8443.980000000003], [1.68420324E12, 10142.990000000002], [1.68420342E12, 11279.699999999999], [1.68420336E12, 10488.960000000006]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68420348E12, 101031.0], [1.68420318E12, 6037.0], [1.68420312E12, 7506.9000000000015], [1.6842033E12, 5418.0], [1.68420324E12, 5180.850000000002], [1.68420342E12, 10494.5], [1.68420336E12, 5761.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68420348E12, 100748.0], [1.68420318E12, 1089.0], [1.68420312E12, 1090.0], [1.6842033E12, 1089.0], [1.68420324E12, 1089.0], [1.68420342E12, 133.0], [1.68420336E12, 56.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68420348E12, 100797.5], [1.68420318E12, 1454.5], [1.68420312E12, 2512.0], [1.6842033E12, 1920.0], [1.68420324E12, 1147.0], [1.68420342E12, 2208.5], [1.68420336E12, 1990.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420348E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 1.0, "maxY": 780881.0, "series": [{"data": [[2.0, 6157.0], [3.0, 4986.0], [5.0, 4833.0], [6.0, 8092.0], [7.0, 8194.0], [8.0, 3868.5], [9.0, 7770.5], [13.0, 2093.0], [14.0, 11095.5], [20.0, 8331.5], [22.0, 5721.0], [23.0, 2170.0], [27.0, 2847.0], [29.0, 9166.5], [30.0, 4787.5], [35.0, 2157.0], [37.0, 2027.0], [39.0, 7136.0], [38.0, 5991.5], [41.0, 6990.0], [42.0, 3205.0], [46.0, 6887.0], [47.0, 2159.0], [49.0, 6741.0], [51.0, 2061.0], [60.0, 6573.5], [61.0, 2273.5], [63.0, 7681.0], [66.0, 2583.0], [67.0, 4423.0], [69.0, 10496.0], [80.0, 1565.0], [92.0, 2399.5], [97.0, 9409.0], [114.0, 7343.5], [113.0, 4030.0], [112.0, 10868.0], [131.0, 2150.0], [132.0, 7438.0], [144.0, 3573.0], [157.0, 2848.0], [161.0, 3030.0], [175.0, 2248.0], [180.0, 1104.0], [184.0, 5458.0], [192.0, 5822.0], [193.0, 1410.0], [197.0, 5388.0], [212.0, 4222.0], [219.0, 4014.0], [236.0, 2345.0], [233.0, 3900.0], [249.0, 1104.0], [252.0, 1466.0], [254.0, 5159.5], [286.0, 3616.0], [273.0, 1108.0], [294.0, 1709.5], [313.0, 4887.0], [307.0, 3656.0], [337.0, 3158.0], [355.0, 2630.0], [373.0, 2615.5], [374.0, 2031.0], [378.0, 2022.5], [377.0, 3950.0], [390.0, 1882.0], [400.0, 1789.0], [402.0, 1741.0], [417.0, 2752.0], [425.0, 2900.0], [443.0, 2366.0], [447.0, 1124.0], [436.0, 2189.0], [477.0, 3881.0], [478.0, 3902.0], [538.0, 2078.0], [542.0, 2888.0], [562.0, 2335.0], [547.0, 2800.0], [553.0, 3962.0], [588.0, 3556.5], [594.0, 3374.0], [612.0, 3172.0], [610.0, 1430.0], [627.0, 1170.0], [614.0, 1698.0], [621.0, 1142.0], [639.0, 1123.0], [671.0, 1134.0], [643.0, 1885.0], [652.0, 2959.0], [642.0, 1803.5], [663.0, 1129.0], [648.0, 1569.5], [669.0, 1119.0], [667.0, 1104.0], [656.0, 1129.0], [661.0, 1109.0], [662.0, 1105.0], [644.0, 1104.0], [689.0, 1358.0], [685.0, 2432.5], [675.0, 1111.0], [691.0, 1104.0], [679.0, 1959.0], [680.0, 1104.0], [677.0, 1110.0], [704.0, 1103.0], [734.0, 1902.0], [731.0, 1110.0], [729.0, 1636.0], [708.0, 1104.0], [706.0, 3129.5], [717.0, 1133.0], [713.0, 1112.0], [719.0, 1124.0], [725.0, 2070.0], [723.0, 2481.0], [710.0, 1117.0], [760.0, 2127.5], [741.0, 1107.0], [761.0, 1126.0], [752.0, 1622.0], [750.0, 1131.0], [737.0, 1512.0], [739.0, 1123.0], [770.0, 1346.0], [769.0, 1889.0], [799.0, 2340.0], [781.0, 1105.0], [787.0, 3029.5], [783.0, 1113.0], [794.0, 1975.5], [773.0, 1387.5], [782.0, 1612.0], [801.0, 2430.0], [818.0, 1610.5], [815.0, 1121.0], [809.0, 1105.0], [814.0, 1372.5], [830.0, 2119.0], [819.0, 2795.5], [821.0, 2093.0], [817.0, 1124.0], [837.0, 2010.0], [834.0, 2160.0], [860.0, 2508.0], [850.0, 2302.5], [835.0, 1344.0], [844.0, 1879.5], [848.0, 2180.0], [855.0, 1250.0], [840.0, 2137.0], [870.0, 2285.5], [893.0, 2913.0], [871.0, 2992.5], [892.0, 1707.0], [888.0, 2176.0], [886.0, 2769.5], [887.0, 2960.0], [883.0, 2445.0], [895.0, 2123.0], [872.0, 2836.0], [873.0, 3256.0], [876.0, 2704.0], [869.0, 1118.0], [868.0, 3073.0], [874.0, 2624.0], [884.0, 2631.0], [925.0, 2854.0], [914.0, 2981.0], [907.0, 1135.0], [906.0, 2448.5], [904.0, 2255.0], [900.0, 2910.0], [908.0, 3052.0], [909.0, 1179.0], [898.0, 2137.0], [897.0, 3022.0], [911.0, 1260.0], [918.0, 1911.0], [919.0, 1131.0], [917.0, 2317.0], [915.0, 1915.0], [921.0, 1938.0], [926.0, 2925.0], [913.0, 2649.0], [912.0, 1713.0], [927.0, 1117.0], [922.0, 2737.0], [923.0, 2124.0], [903.0, 3024.0], [920.0, 1124.0], [931.0, 1845.0], [940.0, 1118.5], [939.0, 1565.5], [935.0, 1147.0], [952.0, 1748.0], [934.0, 1120.0], [933.0, 2088.5], [953.0, 1757.0], [955.0, 2098.0], [959.0, 1842.0], [945.0, 1134.0], [958.0, 2598.0], [949.0, 1123.0], [951.0, 2061.5], [941.0, 1436.5], [929.0, 1941.5], [938.0, 2276.0], [937.0, 2091.0], [948.0, 2519.0], [973.0, 2239.0], [988.0, 1121.0], [966.0, 1115.0], [971.0, 2030.0], [960.0, 2778.0], [979.0, 2977.5], [972.0, 1799.0], [963.0, 1121.0], [999.0, 1179.0], [992.0, 2122.0], [1006.0, 1299.0], [997.0, 2076.5], [995.0, 2042.5], [1060.0, 1543.0], [1035.0, 1663.0], [1039.0, 1126.0], [1.0, 8462.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 10615.0], [14.0, 10835.0], [22.0, 10183.0], [29.0, 41.0], [49.0, 11006.0], [51.0, 51.0], [61.0, 10390.0], [69.0, 10446.0], [80.0, 10115.0], [92.0, 10496.0], [97.0, 10258.0], [114.0, 10119.5], [113.0, 10169.0], [112.0, 10319.0], [131.0, 10808.0], [132.0, 10318.0], [180.0, 40.0], [184.0, 10421.0], [192.0, 10366.5], [197.0, 43.0], [212.0, 13069.0], [219.0, 10283.5], [236.0, 10305.0], [249.0, 45.0], [313.0, 10320.5], [355.0, 49.0], [377.0, 10246.5], [390.0, 55.0], [400.0, 45.5], [425.0, 10124.0], [436.0, 10549.5], [478.0, 10182.5], [542.0, 59.0], [594.0, 41.5], [612.0, 3.0], [610.0, 44.0], [652.0, 10427.0], [648.0, 10231.5], [669.0, 45.5], [656.0, 49.0], [689.0, 1864.5], [685.0, 10311.0], [675.0, 10303.0], [691.0, 10302.0], [679.0, 10302.5], [680.0, 41.5], [677.0, 47.0], [734.0, 45.0], [729.0, 10437.5], [708.0, 5093.5], [717.0, 81.5], [719.0, 10364.0], [725.0, 10399.0], [731.0, 35.0], [723.0, 39.5], [760.0, 10139.5], [761.0, 10264.0], [739.0, 42.0], [799.0, 10207.5], [781.0, 44.5], [787.0, 47.0], [783.0, 10138.0], [773.0, 60.0], [782.0, 10746.5], [809.0, 41.0], [814.0, 10312.0], [830.0, 10162.0], [819.0, 56.0], [834.0, 10108.0], [844.0, 5237.0], [855.0, 10216.0], [840.0, 10303.0], [871.0, 42.0], [874.0, 5078.0], [884.0, 42.0], [873.0, 42.0], [892.0, 10336.0], [888.0, 42.0], [887.0, 42.0], [868.0, 47.0], [895.0, 47.0], [883.0, 10288.0], [870.0, 10451.0], [921.0, 40.0], [908.0, 45.0], [907.0, 54.0], [900.0, 42.0], [918.0, 43.5], [919.0, 38.5], [917.0, 62.0], [915.0, 42.0], [922.0, 10264.5], [923.0, 10786.5], [925.0, 41.5], [913.0, 41.0], [912.0, 10313.5], [903.0, 43.0], [920.0, 10830.0], [914.0, 41.0], [906.0, 42.5], [898.0, 39.0], [911.0, 10325.0], [909.0, 48.0], [897.0, 41.0], [931.0, 10384.5], [940.0, 3245.0], [939.0, 2164.0], [953.0, 43.0], [952.0, 42.0], [941.0, 10087.0], [929.0, 44.0], [938.0, 10258.5], [937.0, 10414.5], [955.0, 10280.0], [948.0, 43.0], [959.0, 40.0], [958.0, 44.0], [951.0, 10099.0], [935.0, 10328.0], [934.0, 41.0], [933.0, 10094.0], [973.0, 10436.0], [988.0, 10198.0], [966.0, 10356.5], [971.0, 10270.0], [960.0, 40.0], [979.0, 42.0], [972.0, 41.0], [963.0, 10434.0], [999.0, 42.0], [992.0, 10333.5], [1006.0, 10347.0], [997.0, 10194.0], [995.0, 10267.0], [1060.0, 951.0], [1035.0, 438.0], [1039.0, 10303.0], [1.0, 780881.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1060.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 780881.0, "series": [{"data": [[2.0, 6150.0], [3.0, 4985.0], [5.0, 4833.0], [6.0, 8090.5], [7.0, 8194.0], [8.0, 3868.0], [9.0, 7770.5], [13.0, 2093.0], [14.0, 11095.5], [20.0, 8331.5], [22.0, 5721.0], [23.0, 2170.0], [27.0, 2847.0], [29.0, 9166.5], [30.0, 4787.5], [35.0, 2157.0], [37.0, 2027.0], [39.0, 7136.0], [38.0, 5991.5], [41.0, 6990.0], [42.0, 3204.5], [46.0, 6887.0], [47.0, 2158.0], [49.0, 6741.0], [51.0, 2060.0], [60.0, 6573.0], [61.0, 2273.5], [63.0, 7681.0], [66.0, 2583.0], [67.0, 4423.0], [69.0, 10496.0], [80.0, 1565.0], [92.0, 2399.5], [97.0, 9409.0], [114.0, 7343.5], [113.0, 4030.0], [112.0, 10868.0], [131.0, 2150.0], [132.0, 7438.0], [144.0, 3573.0], [157.0, 2848.0], [161.0, 3030.0], [175.0, 2248.0], [180.0, 1104.0], [184.0, 5457.0], [192.0, 5821.5], [193.0, 1410.0], [197.0, 5388.0], [212.0, 4222.0], [219.0, 4014.0], [236.0, 2344.0], [233.0, 3900.0], [249.0, 1104.0], [252.0, 1466.0], [254.0, 5159.5], [286.0, 3616.0], [273.0, 1108.0], [294.0, 1709.5], [313.0, 4887.0], [307.0, 3656.0], [337.0, 3158.0], [355.0, 2630.0], [373.0, 2615.0], [374.0, 2031.0], [378.0, 2022.5], [377.0, 3950.0], [390.0, 1882.0], [400.0, 1789.0], [402.0, 1741.0], [417.0, 2752.0], [425.0, 2900.0], [443.0, 2366.0], [447.0, 1123.0], [436.0, 2189.0], [477.0, 3881.0], [478.0, 3901.5], [538.0, 2077.5], [542.0, 2888.0], [562.0, 2335.0], [547.0, 2800.0], [553.0, 3962.0], [588.0, 3556.5], [594.0, 3374.0], [612.0, 3172.0], [610.0, 1430.0], [627.0, 1170.0], [614.0, 1698.0], [621.0, 1142.0], [639.0, 1123.0], [671.0, 1134.0], [643.0, 1885.0], [652.0, 2959.0], [642.0, 1803.5], [663.0, 1129.0], [648.0, 1569.5], [669.0, 1119.0], [667.0, 1104.0], [656.0, 1128.0], [661.0, 1108.0], [662.0, 1105.0], [644.0, 1103.0], [689.0, 1357.0], [685.0, 2432.5], [675.0, 1111.0], [691.0, 1104.0], [679.0, 1958.0], [680.0, 1104.0], [677.0, 1110.0], [704.0, 1103.0], [734.0, 1902.0], [731.0, 1110.0], [729.0, 1636.0], [708.0, 1103.0], [706.0, 3129.0], [717.0, 1132.0], [713.0, 1112.0], [719.0, 1123.0], [725.0, 2070.0], [723.0, 2481.0], [710.0, 1116.0], [760.0, 2127.0], [741.0, 1107.0], [761.0, 1126.0], [752.0, 1622.0], [750.0, 1131.0], [737.0, 1511.0], [739.0, 1123.0], [770.0, 1346.0], [769.0, 1888.0], [799.0, 2340.0], [781.0, 1105.0], [787.0, 3029.0], [783.0, 1113.0], [794.0, 1975.5], [773.0, 1387.5], [782.0, 1612.0], [801.0, 2430.0], [818.0, 1610.0], [815.0, 1121.0], [809.0, 1104.0], [814.0, 1372.0], [830.0, 2118.0], [819.0, 2795.0], [821.0, 2093.0], [817.0, 1124.0], [837.0, 2010.0], [834.0, 2160.0], [860.0, 2508.0], [850.0, 2302.0], [835.0, 1343.0], [844.0, 1879.5], [848.0, 2180.0], [855.0, 1250.0], [840.0, 2137.0], [870.0, 2285.5], [893.0, 2913.0], [871.0, 2992.5], [892.0, 1707.0], [888.0, 2176.0], [886.0, 2769.0], [887.0, 2960.0], [883.0, 2445.0], [895.0, 2123.0], [872.0, 2836.0], [873.0, 3255.0], [876.0, 2703.5], [869.0, 1118.0], [868.0, 3072.0], [874.0, 2624.0], [884.0, 2631.0], [925.0, 2854.0], [914.0, 2980.5], [907.0, 1135.0], [906.0, 2448.5], [904.0, 2255.0], [900.0, 2909.0], [908.0, 3052.0], [909.0, 1178.5], [898.0, 2137.0], [897.0, 3022.0], [911.0, 1260.0], [918.0, 1910.0], [919.0, 1131.0], [917.0, 2317.0], [915.0, 1915.0], [921.0, 1937.0], [926.0, 2925.0], [913.0, 2649.0], [912.0, 1713.0], [927.0, 1116.0], [922.0, 2737.0], [923.0, 2123.5], [903.0, 3023.5], [920.0, 1124.0], [931.0, 1845.0], [940.0, 1118.0], [939.0, 1565.0], [935.0, 1147.0], [952.0, 1747.0], [934.0, 1119.0], [933.0, 2088.5], [953.0, 1757.0], [955.0, 2097.5], [959.0, 1842.0], [945.0, 1134.0], [958.0, 2598.0], [949.0, 1122.0], [951.0, 2061.0], [941.0, 1436.5], [929.0, 1941.5], [938.0, 2275.5], [937.0, 2090.0], [948.0, 2518.0], [973.0, 2239.0], [988.0, 1121.0], [966.0, 1115.0], [971.0, 2030.0], [960.0, 2778.0], [979.0, 2977.5], [972.0, 1798.0], [963.0, 1120.5], [999.0, 1179.0], [992.0, 2121.5], [1006.0, 1299.0], [997.0, 2076.0], [995.0, 2042.5], [1060.0, 1542.0], [1035.0, 1663.0], [1039.0, 1126.0], [1.0, 8459.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 10615.0], [14.0, 10835.0], [22.0, 10183.0], [29.0, 41.0], [49.0, 11006.0], [51.0, 51.0], [61.0, 10390.0], [69.0, 10446.0], [80.0, 10115.0], [92.0, 10496.0], [97.0, 10258.0], [114.0, 10119.5], [113.0, 10169.0], [112.0, 10319.0], [131.0, 10807.0], [132.0, 10318.0], [180.0, 40.0], [184.0, 10421.0], [192.0, 10366.5], [197.0, 43.0], [212.0, 13069.0], [219.0, 10283.5], [236.0, 10305.0], [249.0, 45.0], [313.0, 10320.5], [355.0, 49.0], [377.0, 10246.5], [390.0, 55.0], [400.0, 45.5], [425.0, 10124.0], [436.0, 10549.5], [478.0, 10182.5], [542.0, 59.0], [594.0, 41.5], [612.0, 0.0], [610.0, 44.0], [652.0, 10427.0], [648.0, 10231.5], [669.0, 45.5], [656.0, 49.0], [689.0, 1864.5], [685.0, 10311.0], [675.0, 10303.0], [691.0, 10302.0], [679.0, 10302.5], [680.0, 41.5], [677.0, 47.0], [734.0, 45.0], [729.0, 10437.5], [708.0, 5093.5], [717.0, 81.5], [719.0, 10364.0], [725.0, 10399.0], [731.0, 0.0], [723.0, 39.5], [760.0, 10139.5], [761.0, 10264.0], [739.0, 42.0], [799.0, 10207.5], [781.0, 44.5], [787.0, 47.0], [783.0, 10138.0], [773.0, 60.0], [782.0, 10746.5], [809.0, 41.0], [814.0, 10312.0], [830.0, 10162.0], [819.0, 56.0], [834.0, 10108.0], [844.0, 5236.0], [855.0, 10216.0], [840.0, 10303.0], [871.0, 42.0], [874.0, 5078.0], [884.0, 42.0], [873.0, 42.0], [892.0, 10336.0], [888.0, 42.0], [887.0, 42.0], [868.0, 47.0], [895.0, 47.0], [883.0, 10288.0], [870.0, 10451.0], [921.0, 40.0], [908.0, 45.0], [907.0, 54.0], [900.0, 42.0], [918.0, 43.5], [919.0, 38.5], [917.0, 62.0], [915.0, 42.0], [922.0, 10264.5], [923.0, 10786.5], [925.0, 41.5], [913.0, 41.0], [912.0, 10313.5], [903.0, 43.0], [920.0, 10830.0], [914.0, 41.0], [906.0, 42.5], [898.0, 39.0], [911.0, 10325.0], [909.0, 48.0], [897.0, 41.0], [931.0, 10384.5], [940.0, 3245.0], [939.0, 2164.0], [953.0, 43.0], [952.0, 42.0], [941.0, 10087.0], [929.0, 44.0], [938.0, 10258.5], [937.0, 10414.5], [955.0, 10280.0], [948.0, 43.0], [959.0, 40.0], [958.0, 44.0], [951.0, 10099.0], [935.0, 10328.0], [934.0, 41.0], [933.0, 10094.0], [973.0, 10436.0], [988.0, 10198.0], [966.0, 10356.5], [971.0, 10269.0], [960.0, 40.0], [979.0, 42.0], [972.0, 41.0], [963.0, 10434.0], [999.0, 42.0], [992.0, 10333.5], [1006.0, 10347.0], [997.0, 10194.0], [995.0, 10267.0], [1060.0, 804.0], [1035.0, 42.0], [1039.0, 10303.0], [1.0, 780881.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1060.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.68420312E12, "maxY": 831.1666666666666, "series": [{"data": [[1.68420318E12, 655.7666666666667], [1.68420312E12, 678.1166666666667], [1.6842033E12, 599.7], [1.68420324E12, 544.7166666666667], [1.68420342E12, 33.0], [1.68420336E12, 831.1666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420342E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68420312E12, "maxY": 808.8, "series": [{"data": [[1.68420348E12, 0.1], [1.68420318E12, 666.0166666666667], [1.68420312E12, 646.4166666666666], [1.6842033E12, 549.5666666666667], [1.68420324E12, 543.75], [1.68420342E12, 74.23333333333333], [1.68420336E12, 808.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68420396E12, 0.016666666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.68420312E12, 0.016666666666666666], [1.68420336E12, 0.31666666666666665]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68420318E12, 13.516666666666667], [1.68420312E12, 0.7833333333333333], [1.6842033E12, 3.75], [1.68420324E12, 6.416666666666667], [1.68420342E12, 8.466666666666667], [1.68420336E12, 20.3]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68420396E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68420312E12, "maxY": 808.8, "series": [{"data": [[1.68420348E12, 0.1], [1.68420318E12, 666.0166666666667], [1.68420312E12, 646.4166666666666], [1.6842033E12, 549.5666666666667], [1.68420324E12, 543.75], [1.68420342E12, 74.23333333333333], [1.68420336E12, 808.8]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68420396E12, 0.016666666666666666], [1.68420318E12, 13.516666666666667], [1.68420312E12, 0.8], [1.6842033E12, 3.75], [1.68420324E12, 6.416666666666667], [1.68420342E12, 8.466666666666667], [1.68420336E12, 20.616666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420396E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68420312E12, "maxY": 808.8, "series": [{"data": [[1.68420348E12, 0.1], [1.68420318E12, 666.0166666666667], [1.68420312E12, 646.4166666666666], [1.6842033E12, 549.5666666666667], [1.68420324E12, 543.75], [1.68420342E12, 74.23333333333333], [1.68420336E12, 808.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68420396E12, 0.016666666666666666], [1.68420318E12, 13.516666666666667], [1.68420312E12, 0.8], [1.6842033E12, 3.75], [1.68420324E12, 6.416666666666667], [1.68420342E12, 8.466666666666667], [1.68420336E12, 20.616666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68420396E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

