/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 27007.0, "series": [{"data": [[0.0, 10.0], [0.1, 41.0], [0.2, 46.0], [0.3, 66.0], [0.4, 1092.0], [0.5, 1093.0], [0.6, 1093.0], [0.7, 1094.0], [0.8, 1094.0], [0.9, 1094.0], [1.0, 1095.0], [1.1, 1095.0], [1.2, 1095.0], [1.3, 1095.0], [1.4, 1095.0], [1.5, 1096.0], [1.6, 1096.0], [1.7, 1096.0], [1.8, 1096.0], [1.9, 1096.0], [2.0, 1096.0], [2.1, 1096.0], [2.2, 1096.0], [2.3, 1097.0], [2.4, 1097.0], [2.5, 1097.0], [2.6, 1097.0], [2.7, 1097.0], [2.8, 1097.0], [2.9, 1097.0], [3.0, 1097.0], [3.1, 1097.0], [3.2, 1097.0], [3.3, 1098.0], [3.4, 1098.0], [3.5, 1098.0], [3.6, 1098.0], [3.7, 1098.0], [3.8, 1098.0], [3.9, 1098.0], [4.0, 1098.0], [4.1, 1098.0], [4.2, 1098.0], [4.3, 1098.0], [4.4, 1098.0], [4.5, 1099.0], [4.6, 1099.0], [4.7, 1099.0], [4.8, 1099.0], [4.9, 1099.0], [5.0, 1099.0], [5.1, 1099.0], [5.2, 1099.0], [5.3, 1099.0], [5.4, 1099.0], [5.5, 1099.0], [5.6, 1099.0], [5.7, 1099.0], [5.8, 1099.0], [5.9, 1099.0], [6.0, 1100.0], [6.1, 1100.0], [6.2, 1100.0], [6.3, 1100.0], [6.4, 1100.0], [6.5, 1100.0], [6.6, 1100.0], [6.7, 1100.0], [6.8, 1100.0], [6.9, 1100.0], [7.0, 1100.0], [7.1, 1100.0], [7.2, 1100.0], [7.3, 1100.0], [7.4, 1100.0], [7.5, 1100.0], [7.6, 1101.0], [7.7, 1101.0], [7.8, 1101.0], [7.9, 1101.0], [8.0, 1101.0], [8.1, 1101.0], [8.2, 1101.0], [8.3, 1101.0], [8.4, 1101.0], [8.5, 1101.0], [8.6, 1101.0], [8.7, 1101.0], [8.8, 1101.0], [8.9, 1101.0], [9.0, 1101.0], [9.1, 1101.0], [9.2, 1102.0], [9.3, 1102.0], [9.4, 1102.0], [9.5, 1102.0], [9.6, 1102.0], [9.7, 1102.0], [9.8, 1102.0], [9.9, 1102.0], [10.0, 1102.0], [10.1, 1102.0], [10.2, 1102.0], [10.3, 1102.0], [10.4, 1102.0], [10.5, 1102.0], [10.6, 1102.0], [10.7, 1102.0], [10.8, 1102.0], [10.9, 1103.0], [11.0, 1103.0], [11.1, 1103.0], [11.2, 1103.0], [11.3, 1103.0], [11.4, 1103.0], [11.5, 1103.0], [11.6, 1103.0], [11.7, 1103.0], [11.8, 1103.0], [11.9, 1103.0], [12.0, 1103.0], [12.1, 1103.0], [12.2, 1103.0], [12.3, 1103.0], [12.4, 1103.0], [12.5, 1103.0], [12.6, 1104.0], [12.7, 1104.0], [12.8, 1104.0], [12.9, 1104.0], [13.0, 1104.0], [13.1, 1104.0], [13.2, 1104.0], [13.3, 1104.0], [13.4, 1104.0], [13.5, 1104.0], [13.6, 1104.0], [13.7, 1104.0], [13.8, 1104.0], [13.9, 1104.0], [14.0, 1104.0], [14.1, 1105.0], [14.2, 1105.0], [14.3, 1105.0], [14.4, 1105.0], [14.5, 1105.0], [14.6, 1105.0], [14.7, 1105.0], [14.8, 1105.0], [14.9, 1105.0], [15.0, 1105.0], [15.1, 1105.0], [15.2, 1105.0], [15.3, 1105.0], [15.4, 1105.0], [15.5, 1105.0], [15.6, 1106.0], [15.7, 1106.0], [15.8, 1106.0], [15.9, 1106.0], [16.0, 1106.0], [16.1, 1106.0], [16.2, 1106.0], [16.3, 1106.0], [16.4, 1106.0], [16.5, 1106.0], [16.6, 1106.0], [16.7, 1106.0], [16.8, 1107.0], [16.9, 1107.0], [17.0, 1107.0], [17.1, 1107.0], [17.2, 1107.0], [17.3, 1107.0], [17.4, 1107.0], [17.5, 1107.0], [17.6, 1107.0], [17.7, 1107.0], [17.8, 1107.0], [17.9, 1107.0], [18.0, 1108.0], [18.1, 1108.0], [18.2, 1108.0], [18.3, 1108.0], [18.4, 1108.0], [18.5, 1108.0], [18.6, 1108.0], [18.7, 1108.0], [18.8, 1108.0], [18.9, 1108.0], [19.0, 1108.0], [19.1, 1109.0], [19.2, 1109.0], [19.3, 1109.0], [19.4, 1109.0], [19.5, 1109.0], [19.6, 1109.0], [19.7, 1109.0], [19.8, 1109.0], [19.9, 1109.0], [20.0, 1109.0], [20.1, 1110.0], [20.2, 1110.0], [20.3, 1110.0], [20.4, 1110.0], [20.5, 1110.0], [20.6, 1110.0], [20.7, 1110.0], [20.8, 1110.0], [20.9, 1110.0], [21.0, 1111.0], [21.1, 1111.0], [21.2, 1111.0], [21.3, 1111.0], [21.4, 1111.0], [21.5, 1111.0], [21.6, 1111.0], [21.7, 1111.0], [21.8, 1111.0], [21.9, 1112.0], [22.0, 1112.0], [22.1, 1112.0], [22.2, 1112.0], [22.3, 1112.0], [22.4, 1112.0], [22.5, 1112.0], [22.6, 1113.0], [22.7, 1113.0], [22.8, 1113.0], [22.9, 1113.0], [23.0, 1113.0], [23.1, 1113.0], [23.2, 1113.0], [23.3, 1113.0], [23.4, 1114.0], [23.5, 1114.0], [23.6, 1114.0], [23.7, 1114.0], [23.8, 1114.0], [23.9, 1114.0], [24.0, 1115.0], [24.1, 1115.0], [24.2, 1115.0], [24.3, 1115.0], [24.4, 1115.0], [24.5, 1115.0], [24.6, 1116.0], [24.7, 1116.0], [24.8, 1116.0], [24.9, 1116.0], [25.0, 1116.0], [25.1, 1116.0], [25.2, 1117.0], [25.3, 1117.0], [25.4, 1117.0], [25.5, 1117.0], [25.6, 1117.0], [25.7, 1118.0], [25.8, 1118.0], [25.9, 1118.0], [26.0, 1118.0], [26.1, 1119.0], [26.2, 1119.0], [26.3, 1119.0], [26.4, 1119.0], [26.5, 1119.0], [26.6, 1120.0], [26.7, 1120.0], [26.8, 1120.0], [26.9, 1120.0], [27.0, 1121.0], [27.1, 1121.0], [27.2, 1121.0], [27.3, 1121.0], [27.4, 1122.0], [27.5, 1122.0], [27.6, 1122.0], [27.7, 1122.0], [27.8, 1123.0], [27.9, 1123.0], [28.0, 1123.0], [28.1, 1124.0], [28.2, 1124.0], [28.3, 1124.0], [28.4, 1124.0], [28.5, 1125.0], [28.6, 1125.0], [28.7, 1125.0], [28.8, 1126.0], [28.9, 1126.0], [29.0, 1126.0], [29.1, 1127.0], [29.2, 1127.0], [29.3, 1127.0], [29.4, 1127.0], [29.5, 1128.0], [29.6, 1128.0], [29.7, 1129.0], [29.8, 1129.0], [29.9, 1129.0], [30.0, 1130.0], [30.1, 1130.0], [30.2, 1131.0], [30.3, 1131.0], [30.4, 1131.0], [30.5, 1132.0], [30.6, 1132.0], [30.7, 1133.0], [30.8, 1133.0], [30.9, 1134.0], [31.0, 1134.0], [31.1, 1135.0], [31.2, 1135.0], [31.3, 1136.0], [31.4, 1136.0], [31.5, 1137.0], [31.6, 1137.0], [31.7, 1138.0], [31.8, 1139.0], [31.9, 1139.0], [32.0, 1140.0], [32.1, 1140.0], [32.2, 1141.0], [32.3, 1142.0], [32.4, 1143.0], [32.5, 1144.0], [32.6, 1145.0], [32.7, 1146.0], [32.8, 1147.0], [32.9, 1148.0], [33.0, 1149.0], [33.1, 1151.0], [33.2, 1152.0], [33.3, 1154.0], [33.4, 1155.0], [33.5, 1157.0], [33.6, 1158.0], [33.7, 1161.0], [33.8, 1163.0], [33.9, 1165.0], [34.0, 1168.0], [34.1, 1170.0], [34.2, 1172.0], [34.3, 1174.0], [34.4, 1177.0], [34.5, 1178.0], [34.6, 1180.0], [34.7, 1182.0], [34.8, 1184.0], [34.9, 1186.0], [35.0, 1188.0], [35.1, 1191.0], [35.2, 1193.0], [35.3, 1196.0], [35.4, 1199.0], [35.5, 1202.0], [35.6, 1204.0], [35.7, 1207.0], [35.8, 1211.0], [35.9, 1214.0], [36.0, 1218.0], [36.1, 1221.0], [36.2, 1225.0], [36.3, 1229.0], [36.4, 1232.0], [36.5, 1236.0], [36.6, 1239.0], [36.7, 1243.0], [36.8, 1247.0], [36.9, 1250.0], [37.0, 1254.0], [37.1, 1257.0], [37.2, 1260.0], [37.3, 1263.0], [37.4, 1266.0], [37.5, 1269.0], [37.6, 1273.0], [37.7, 1278.0], [37.8, 1282.0], [37.9, 1286.0], [38.0, 1290.0], [38.1, 1294.0], [38.2, 1296.0], [38.3, 1299.0], [38.4, 1302.0], [38.5, 1306.0], [38.6, 1309.0], [38.7, 1312.0], [38.8, 1315.0], [38.9, 1319.0], [39.0, 1322.0], [39.1, 1326.0], [39.2, 1330.0], [39.3, 1334.0], [39.4, 1339.0], [39.5, 1344.0], [39.6, 1349.0], [39.7, 1354.0], [39.8, 1360.0], [39.9, 1366.0], [40.0, 1371.0], [40.1, 1376.0], [40.2, 1380.0], [40.3, 1384.0], [40.4, 1389.0], [40.5, 1393.0], [40.6, 1396.0], [40.7, 1400.0], [40.8, 1404.0], [40.9, 1407.0], [41.0, 1411.0], [41.1, 1414.0], [41.2, 1417.0], [41.3, 1420.0], [41.4, 1423.0], [41.5, 1426.0], [41.6, 1429.0], [41.7, 1431.0], [41.8, 1434.0], [41.9, 1437.0], [42.0, 1440.0], [42.1, 1443.0], [42.2, 1446.0], [42.3, 1449.0], [42.4, 1452.0], [42.5, 1456.0], [42.6, 1459.0], [42.7, 1462.0], [42.8, 1465.0], [42.9, 1468.0], [43.0, 1471.0], [43.1, 1475.0], [43.2, 1477.0], [43.3, 1480.0], [43.4, 1483.0], [43.5, 1486.0], [43.6, 1489.0], [43.7, 1491.0], [43.8, 1494.0], [43.9, 1497.0], [44.0, 1500.0], [44.1, 1504.0], [44.2, 1507.0], [44.3, 1510.0], [44.4, 1514.0], [44.5, 1517.0], [44.6, 1521.0], [44.7, 1524.0], [44.8, 1527.0], [44.9, 1530.0], [45.0, 1534.0], [45.1, 1536.0], [45.2, 1539.0], [45.3, 1543.0], [45.4, 1546.0], [45.5, 1549.0], [45.6, 1553.0], [45.7, 1556.0], [45.8, 1560.0], [45.9, 1563.0], [46.0, 1567.0], [46.1, 1570.0], [46.2, 1574.0], [46.3, 1577.0], [46.4, 1581.0], [46.5, 1585.0], [46.6, 1589.0], [46.7, 1592.0], [46.8, 1596.0], [46.9, 1599.0], [47.0, 1602.0], [47.1, 1605.0], [47.2, 1608.0], [47.3, 1611.0], [47.4, 1613.0], [47.5, 1616.0], [47.6, 1619.0], [47.7, 1622.0], [47.8, 1624.0], [47.9, 1627.0], [48.0, 1630.0], [48.1, 1633.0], [48.2, 1636.0], [48.3, 1639.0], [48.4, 1642.0], [48.5, 1645.0], [48.6, 1648.0], [48.7, 1651.0], [48.8, 1654.0], [48.9, 1657.0], [49.0, 1660.0], [49.1, 1663.0], [49.2, 1666.0], [49.3, 1669.0], [49.4, 1672.0], [49.5, 1674.0], [49.6, 1677.0], [49.7, 1680.0], [49.8, 1683.0], [49.9, 1685.0], [50.0, 1687.0], [50.1, 1689.0], [50.2, 1691.0], [50.3, 1693.0], [50.4, 1696.0], [50.5, 1698.0], [50.6, 1700.0], [50.7, 1702.0], [50.8, 1705.0], [50.9, 1707.0], [51.0, 1710.0], [51.1, 1713.0], [51.2, 1716.0], [51.3, 1719.0], [51.4, 1722.0], [51.5, 1725.0], [51.6, 1729.0], [51.7, 1732.0], [51.8, 1734.0], [51.9, 1737.0], [52.0, 1740.0], [52.1, 1743.0], [52.2, 1746.0], [52.3, 1748.0], [52.4, 1751.0], [52.5, 1754.0], [52.6, 1757.0], [52.7, 1761.0], [52.8, 1765.0], [52.9, 1768.0], [53.0, 1772.0], [53.1, 1776.0], [53.2, 1780.0], [53.3, 1784.0], [53.4, 1787.0], [53.5, 1791.0], [53.6, 1795.0], [53.7, 1800.0], [53.8, 1804.0], [53.9, 1808.0], [54.0, 1812.0], [54.1, 1816.0], [54.2, 1820.0], [54.3, 1824.0], [54.4, 1828.0], [54.5, 1831.0], [54.6, 1835.0], [54.7, 1839.0], [54.8, 1843.0], [54.9, 1847.0], [55.0, 1851.0], [55.1, 1854.0], [55.2, 1858.0], [55.3, 1861.0], [55.4, 1864.0], [55.5, 1868.0], [55.6, 1871.0], [55.7, 1874.0], [55.8, 1877.0], [55.9, 1880.0], [56.0, 1883.0], [56.1, 1886.0], [56.2, 1889.0], [56.3, 1892.0], [56.4, 1895.0], [56.5, 1898.0], [56.6, 1901.0], [56.7, 1904.0], [56.8, 1906.0], [56.9, 1910.0], [57.0, 1913.0], [57.1, 1916.0], [57.2, 1918.0], [57.3, 1921.0], [57.4, 1924.0], [57.5, 1927.0], [57.6, 1930.0], [57.7, 1933.0], [57.8, 1936.0], [57.9, 1939.0], [58.0, 1943.0], [58.1, 1946.0], [58.2, 1949.0], [58.3, 1952.0], [58.4, 1955.0], [58.5, 1958.0], [58.6, 1961.0], [58.7, 1964.0], [58.8, 1967.0], [58.9, 1970.0], [59.0, 1973.0], [59.1, 1976.0], [59.2, 1979.0], [59.3, 1982.0], [59.4, 1985.0], [59.5, 1987.0], [59.6, 1990.0], [59.7, 1993.0], [59.8, 1996.0], [59.9, 1999.0], [60.0, 2002.0], [60.1, 2005.0], [60.2, 2008.0], [60.3, 2012.0], [60.4, 2015.0], [60.5, 2018.0], [60.6, 2021.0], [60.7, 2024.0], [60.8, 2027.0], [60.9, 2030.0], [61.0, 2033.0], [61.1, 2036.0], [61.2, 2039.0], [61.3, 2042.0], [61.4, 2045.0], [61.5, 2047.0], [61.6, 2050.0], [61.7, 2053.0], [61.8, 2056.0], [61.9, 2059.0], [62.0, 2062.0], [62.1, 2064.0], [62.2, 2068.0], [62.3, 2071.0], [62.4, 2074.0], [62.5, 2077.0], [62.6, 2080.0], [62.7, 2083.0], [62.8, 2086.0], [62.9, 2089.0], [63.0, 2091.0], [63.1, 2094.0], [63.2, 2096.0], [63.3, 2099.0], [63.4, 2102.0], [63.5, 2104.0], [63.6, 2107.0], [63.7, 2109.0], [63.8, 2112.0], [63.9, 2115.0], [64.0, 2117.0], [64.1, 2120.0], [64.2, 2123.0], [64.3, 2126.0], [64.4, 2129.0], [64.5, 2132.0], [64.6, 2135.0], [64.7, 2138.0], [64.8, 2141.0], [64.9, 2144.0], [65.0, 2147.0], [65.1, 2150.0], [65.2, 2153.0], [65.3, 2155.0], [65.4, 2157.0], [65.5, 2160.0], [65.6, 2162.0], [65.7, 2165.0], [65.8, 2167.0], [65.9, 2171.0], [66.0, 2173.0], [66.1, 2176.0], [66.2, 2179.0], [66.3, 2182.0], [66.4, 2185.0], [66.5, 2188.0], [66.6, 2191.0], [66.7, 2195.0], [66.8, 2198.0], [66.9, 2203.0], [67.0, 2206.0], [67.1, 2209.0], [67.2, 2213.0], [67.3, 2217.0], [67.4, 2220.0], [67.5, 2225.0], [67.6, 2229.0], [67.7, 2233.0], [67.8, 2237.0], [67.9, 2241.0], [68.0, 2245.0], [68.1, 2249.0], [68.2, 2253.0], [68.3, 2257.0], [68.4, 2261.0], [68.5, 2265.0], [68.6, 2269.0], [68.7, 2273.0], [68.8, 2277.0], [68.9, 2282.0], [69.0, 2287.0], [69.1, 2291.0], [69.2, 2295.0], [69.3, 2299.0], [69.4, 2304.0], [69.5, 2309.0], [69.6, 2313.0], [69.7, 2317.0], [69.8, 2322.0], [69.9, 2328.0], [70.0, 2333.0], [70.1, 2339.0], [70.2, 2345.0], [70.3, 2352.0], [70.4, 2359.0], [70.5, 2365.0], [70.6, 2371.0], [70.7, 2378.0], [70.8, 2383.0], [70.9, 2389.0], [71.0, 2397.0], [71.1, 2405.0], [71.2, 2412.0], [71.3, 2418.0], [71.4, 2424.0], [71.5, 2430.0], [71.6, 2435.0], [71.7, 2441.0], [71.8, 2446.0], [71.9, 2452.0], [72.0, 2456.0], [72.1, 2462.0], [72.2, 2468.0], [72.3, 2473.0], [72.4, 2479.0], [72.5, 2483.0], [72.6, 2488.0], [72.7, 2492.0], [72.8, 2497.0], [72.9, 2501.0], [73.0, 2506.0], [73.1, 2511.0], [73.2, 2517.0], [73.3, 2523.0], [73.4, 2528.0], [73.5, 2534.0], [73.6, 2539.0], [73.7, 2545.0], [73.8, 2551.0], [73.9, 2557.0], [74.0, 2565.0], [74.1, 2571.0], [74.2, 2579.0], [74.3, 2587.0], [74.4, 2594.0], [74.5, 2601.0], [74.6, 2609.0], [74.7, 2616.0], [74.8, 2623.0], [74.9, 2631.0], [75.0, 2639.0], [75.1, 2646.0], [75.2, 2652.0], [75.3, 2659.0], [75.4, 2666.0], [75.5, 2673.0], [75.6, 2680.0], [75.7, 2686.0], [75.8, 2693.0], [75.9, 2698.0], [76.0, 2705.0], [76.1, 2711.0], [76.2, 2718.0], [76.3, 2724.0], [76.4, 2731.0], [76.5, 2737.0], [76.6, 2743.0], [76.7, 2748.0], [76.8, 2753.0], [76.9, 2759.0], [77.0, 2764.0], [77.1, 2770.0], [77.2, 2776.0], [77.3, 2782.0], [77.4, 2787.0], [77.5, 2794.0], [77.6, 2801.0], [77.7, 2806.0], [77.8, 2812.0], [77.9, 2819.0], [78.0, 2826.0], [78.1, 2832.0], [78.2, 2837.0], [78.3, 2842.0], [78.4, 2847.0], [78.5, 2852.0], [78.6, 2857.0], [78.7, 2862.0], [78.8, 2868.0], [78.9, 2873.0], [79.0, 2879.0], [79.1, 2884.0], [79.2, 2890.0], [79.3, 2896.0], [79.4, 2903.0], [79.5, 2908.0], [79.6, 2913.0], [79.7, 2918.0], [79.8, 2923.0], [79.9, 2928.0], [80.0, 2934.0], [80.1, 2939.0], [80.2, 2944.0], [80.3, 2950.0], [80.4, 2956.0], [80.5, 2963.0], [80.6, 2969.0], [80.7, 2975.0], [80.8, 2980.0], [80.9, 2987.0], [81.0, 2994.0], [81.1, 3000.0], [81.2, 3008.0], [81.3, 3015.0], [81.4, 3023.0], [81.5, 3033.0], [81.6, 3040.0], [81.7, 3050.0], [81.8, 3058.0], [81.9, 3065.0], [82.0, 3072.0], [82.1, 3079.0], [82.2, 3087.0], [82.3, 3096.0], [82.4, 3103.0], [82.5, 3111.0], [82.6, 3119.0], [82.7, 3127.0], [82.8, 3134.0], [82.9, 3140.0], [83.0, 3147.0], [83.1, 3154.0], [83.2, 3160.0], [83.3, 3166.0], [83.4, 3173.0], [83.5, 3180.0], [83.6, 3186.0], [83.7, 3193.0], [83.8, 3201.0], [83.9, 3208.0], [84.0, 3216.0], [84.1, 3223.0], [84.2, 3230.0], [84.3, 3236.0], [84.4, 3244.0], [84.5, 3252.0], [84.6, 3261.0], [84.7, 3270.0], [84.8, 3280.0], [84.9, 3288.0], [85.0, 3297.0], [85.1, 3307.0], [85.2, 3317.0], [85.3, 3325.0], [85.4, 3335.0], [85.5, 3344.0], [85.6, 3354.0], [85.7, 3363.0], [85.8, 3374.0], [85.9, 3383.0], [86.0, 3391.0], [86.1, 3404.0], [86.2, 3418.0], [86.3, 3431.0], [86.4, 3442.0], [86.5, 3454.0], [86.6, 3467.0], [86.7, 3478.0], [86.8, 3490.0], [86.9, 3503.0], [87.0, 3515.0], [87.1, 3527.0], [87.2, 3538.0], [87.3, 3551.0], [87.4, 3561.0], [87.5, 3573.0], [87.6, 3585.0], [87.7, 3598.0], [87.8, 3613.0], [87.9, 3627.0], [88.0, 3643.0], [88.1, 3659.0], [88.2, 3675.0], [88.3, 3691.0], [88.4, 3708.0], [88.5, 3726.0], [88.6, 3742.0], [88.7, 3757.0], [88.8, 3773.0], [88.9, 3787.0], [89.0, 3801.0], [89.1, 3813.0], [89.2, 3824.0], [89.3, 3838.0], [89.4, 3851.0], [89.5, 3865.0], [89.6, 3881.0], [89.7, 3897.0], [89.8, 3913.0], [89.9, 3928.0], [90.0, 3945.0], [90.1, 3963.0], [90.2, 3982.0], [90.3, 4002.0], [90.4, 4018.0], [90.5, 4037.0], [90.6, 4056.0], [90.7, 4078.0], [90.8, 4099.0], [90.9, 4119.0], [91.0, 4138.0], [91.1, 4156.0], [91.2, 4173.0], [91.3, 4188.0], [91.4, 4204.0], [91.5, 4221.0], [91.6, 4239.0], [91.7, 4255.0], [91.8, 4273.0], [91.9, 4291.0], [92.0, 4313.0], [92.1, 4333.0], [92.2, 4354.0], [92.3, 4377.0], [92.4, 4399.0], [92.5, 4423.0], [92.6, 4454.0], [92.7, 4484.0], [92.8, 4511.0], [92.9, 4547.0], [93.0, 4585.0], [93.1, 4618.0], [93.2, 4657.0], [93.3, 4696.0], [93.4, 4739.0], [93.5, 4780.0], [93.6, 4817.0], [93.7, 4860.0], [93.8, 4903.0], [93.9, 4948.0], [94.0, 4994.0], [94.1, 5040.0], [94.2, 5083.0], [94.3, 5131.0], [94.4, 5177.0], [94.5, 5228.0], [94.6, 5282.0], [94.7, 5335.0], [94.8, 5400.0], [94.9, 5467.0], [95.0, 5543.0], [95.1, 5619.0], [95.2, 5692.0], [95.3, 5755.0], [95.4, 5810.0], [95.5, 5872.0], [95.6, 5940.0], [95.7, 6031.0], [95.8, 6110.0], [95.9, 6183.0], [96.0, 6261.0], [96.1, 6349.0], [96.2, 6437.0], [96.3, 6534.0], [96.4, 6626.0], [96.5, 6713.0], [96.6, 6814.0], [96.7, 6899.0], [96.8, 6997.0], [96.9, 7086.0], [97.0, 7190.0], [97.1, 7288.0], [97.2, 7390.0], [97.3, 7480.0], [97.4, 7571.0], [97.5, 7668.0], [97.6, 7776.0], [97.7, 7885.0], [97.8, 7992.0], [97.9, 8098.0], [98.0, 8212.0], [98.1, 8342.0], [98.2, 8472.0], [98.3, 8603.0], [98.4, 8748.0], [98.5, 8922.0], [98.6, 9057.0], [98.7, 9199.0], [98.8, 9329.0], [98.9, 9472.0], [99.0, 9659.0], [99.1, 9823.0], [99.2, 10039.0], [99.3, 10229.0], [99.4, 10469.0], [99.5, 10704.0], [99.6, 11135.0], [99.7, 11925.0], [99.8, 12926.0], [99.9, 14237.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 53181.0, "series": [{"data": [[0.0, 559.0], [100.0, 20.0], [200.0, 17.0], [300.0, 1.0], [400.0, 11.0], [500.0, 4.0], [600.0, 7.0], [700.0, 2.0], [800.0, 1.0], [1000.0, 10078.0], [1100.0, 53181.0], [1200.0, 5211.0], [1300.0, 4274.0], [1400.0, 5966.0], [1500.0, 5297.0], [1600.0, 6591.0], [1700.0, 5635.0], [1800.0, 5163.0], [1900.0, 6074.0], [2000.0, 6100.0], [2100.0, 6334.0], [2200.0, 4476.0], [2300.0, 3110.0], [2400.0, 3296.0], [2500.0, 2913.0], [2600.0, 2618.0], [2700.0, 2987.0], [2800.0, 3209.0], [2900.0, 3128.0], [3000.0, 2266.0], [3100.0, 2586.0], [3300.0, 1889.0], [3200.0, 2235.0], [3400.0, 1444.0], [3500.0, 1515.0], [3600.0, 1159.0], [3700.0, 1148.0], [3800.0, 1309.0], [3900.0, 1032.0], [4000.0, 934.0], [4100.0, 1032.0], [4200.0, 1012.0], [4300.0, 836.0], [4500.0, 515.0], [4400.0, 642.0], [4600.0, 478.0], [4700.0, 441.0], [4800.0, 426.0], [4900.0, 408.0], [5100.0, 375.0], [5000.0, 401.0], [5200.0, 339.0], [5300.0, 301.0], [5400.0, 261.0], [5600.0, 255.0], [5500.0, 239.0], [5700.0, 291.0], [5800.0, 296.0], [5900.0, 212.0], [6100.0, 252.0], [6000.0, 220.0], [6200.0, 220.0], [6300.0, 198.0], [6400.0, 206.0], [6600.0, 200.0], [6500.0, 196.0], [6700.0, 175.0], [6800.0, 207.0], [6900.0, 188.0], [7000.0, 193.0], [7100.0, 176.0], [7300.0, 173.0], [7200.0, 191.0], [7400.0, 198.0], [7600.0, 201.0], [7500.0, 186.0], [7700.0, 150.0], [7900.0, 175.0], [7800.0, 164.0], [8000.0, 173.0], [8100.0, 165.0], [8300.0, 147.0], [8200.0, 120.0], [8500.0, 133.0], [8400.0, 148.0], [8600.0, 120.0], [8700.0, 122.0], [8900.0, 127.0], [9000.0, 147.0], [9100.0, 111.0], [9200.0, 142.0], [8800.0, 100.0], [9400.0, 125.0], [9300.0, 124.0], [9500.0, 94.0], [9600.0, 92.0], [9700.0, 117.0], [10000.0, 96.0], [9800.0, 87.0], [9900.0, 84.0], [10200.0, 83.0], [10100.0, 90.0], [10400.0, 79.0], [10300.0, 75.0], [10700.0, 40.0], [10600.0, 67.0], [10500.0, 83.0], [10800.0, 50.0], [10900.0, 44.0], [11200.0, 32.0], [11100.0, 36.0], [11000.0, 36.0], [11300.0, 15.0], [11400.0, 24.0], [11500.0, 20.0], [11600.0, 22.0], [11700.0, 22.0], [11800.0, 19.0], [11900.0, 20.0], [12000.0, 22.0], [12100.0, 18.0], [12200.0, 20.0], [12400.0, 20.0], [12500.0, 15.0], [12300.0, 19.0], [12700.0, 15.0], [12600.0, 9.0], [12800.0, 23.0], [12900.0, 16.0], [13000.0, 12.0], [13200.0, 24.0], [13300.0, 23.0], [13100.0, 16.0], [13600.0, 9.0], [13500.0, 18.0], [13800.0, 12.0], [13400.0, 4.0], [13700.0, 8.0], [14100.0, 13.0], [14000.0, 13.0], [14200.0, 6.0], [14300.0, 9.0], [13900.0, 13.0], [14400.0, 8.0], [14500.0, 5.0], [14600.0, 11.0], [14800.0, 4.0], [14700.0, 6.0], [14900.0, 6.0], [15000.0, 4.0], [15100.0, 5.0], [15200.0, 5.0], [15300.0, 7.0], [15400.0, 4.0], [15500.0, 6.0], [15800.0, 8.0], [15700.0, 2.0], [15600.0, 3.0], [15900.0, 5.0], [16200.0, 4.0], [16300.0, 5.0], [16000.0, 2.0], [16100.0, 3.0], [16600.0, 5.0], [17200.0, 3.0], [16800.0, 3.0], [16400.0, 3.0], [17000.0, 1.0], [17400.0, 1.0], [18400.0, 3.0], [18200.0, 3.0], [17600.0, 1.0], [18600.0, 2.0], [18800.0, 1.0], [19200.0, 1.0], [19400.0, 1.0], [19800.0, 1.0], [20200.0, 2.0], [20600.0, 1.0], [21000.0, 2.0], [21200.0, 1.0], [21800.0, 1.0], [27000.0, 1.0], [16500.0, 2.0], [17100.0, 1.0], [16900.0, 1.0], [17500.0, 4.0], [18100.0, 2.0], [18900.0, 1.0], [18700.0, 1.0], [19500.0, 2.0], [19700.0, 2.0], [19900.0, 1.0], [20500.0, 3.0], [20700.0, 1.0], [21700.0, 1.0], [21900.0, 1.0], [22500.0, 1.0], [23500.0, 1.0], [25500.0, 1.0], [25300.0, 1.0], [25700.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 27000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 100927.0, "series": [{"data": [[0.0, 3.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 78761.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 100927.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 674.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2834.9481334654793, "minX": 1.6842027E12, "maxY": 3000.0, "series": [{"data": [[1.684203E12, 2834.9481334654793], [1.6842027E12, 3000.0], [1.68420282E12, 3000.0], [1.68420276E12, 3000.0], [1.68420294E12, 3000.0], [1.68420288E12, 3000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684203E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 13338.0, "series": [{"data": [[2.0, 10581.0], [3.0, 7309.0], [4.0, 7121.0], [5.0, 7441.0], [6.0, 6993.0], [7.0, 6892.0], [8.0, 6799.0], [9.0, 6600.0], [10.0, 9925.0], [11.0, 6352.0], [12.0, 6194.0], [13.0, 6030.0], [14.0, 6015.0], [15.0, 8906.0], [16.0, 7757.0], [17.0, 7587.0], [18.0, 9302.0], [19.0, 5532.0], [21.0, 8087.5], [22.0, 6983.0], [23.0, 5391.0], [24.0, 7828.0], [25.0, 7819.0], [26.0, 7641.0], [27.0, 6218.0], [28.0, 4237.0], [29.0, 7214.0], [30.0, 7035.0], [31.0, 6843.0], [33.0, 7284.0], [32.0, 7321.0], [35.0, 2715.0], [34.0, 2777.0], [37.0, 2628.0], [36.0, 7114.0], [39.0, 7913.0], [38.0, 2609.0], [41.0, 2486.0], [40.0, 2502.0], [43.0, 2493.0], [42.0, 2484.0], [45.0, 2467.0], [44.0, 2467.0], [47.0, 7787.0], [46.0, 13338.0], [49.0, 3200.0], [48.0, 6290.0], [51.0, 7630.0], [50.0, 2250.0], [53.0, 6637.0], [52.0, 2237.0], [55.0, 6484.0], [54.0, 2082.0], [57.0, 7390.0], [56.0, 2947.0], [59.0, 4716.0], [58.0, 1976.0], [61.0, 2866.0], [60.0, 3303.0], [63.0, 1902.0], [62.0, 7287.0], [67.0, 1847.0], [66.0, 1851.0], [65.0, 6317.0], [64.0, 1893.0], [71.0, 1835.0], [70.0, 3211.0], [68.0, 1836.0], [75.0, 3926.0], [74.0, 1827.0], [79.0, 2727.0], [78.0, 6240.0], [77.0, 2284.0], [83.0, 1798.0], [82.0, 1805.0], [81.0, 6224.0], [80.0, 3153.0], [87.0, 2696.5], [85.0, 1792.0], [84.0, 1796.0], [91.0, 3119.0], [90.0, 3110.0], [89.0, 2672.0], [88.0, 1758.0], [95.0, 1653.0], [94.0, 1651.0], [93.0, 2642.0], [92.0, 1750.0], [99.0, 2519.0], [98.0, 2512.0], [97.0, 6040.0], [96.0, 1654.0], [103.0, 2672.0], [102.0, 1475.0], [101.0, 1512.0], [100.0, 1574.0], [107.0, 2208.0], [106.0, 1315.0], [105.0, 2246.0], [104.0, 5754.0], [111.0, 1239.0], [110.0, 2181.0], [109.0, 2201.0], [108.0, 8895.0], [115.0, 1696.5], [113.0, 1708.0], [118.0, 2156.0], [116.0, 1237.0], [122.0, 1695.0], [120.0, 1685.5], [127.0, 2141.0], [125.0, 1234.0], [124.0, 1226.5], [134.0, 2140.0], [133.0, 1530.6666666666667], [130.0, 1223.0], [129.0, 1220.0], [128.0, 2144.5], [140.0, 1223.0], [139.0, 1221.5], [137.0, 1535.3333333333333], [151.0, 1214.0], [150.0, 2136.5], [149.0, 1217.0], [147.0, 1215.5], [145.0, 1215.0], [144.0, 1448.5], [159.0, 2142.0], [158.0, 1202.0], [157.0, 1205.0], [156.0, 1208.0], [155.0, 2136.0], [154.0, 1214.0], [153.0, 1218.5], [166.0, 1166.0], [165.0, 1185.0], [164.0, 1163.0], [163.0, 1178.0], [162.0, 1186.0], [161.0, 1194.0], [160.0, 1223.0], [170.0, 1150.0], [169.0, 1163.0], [168.0, 1166.5], [183.0, 1171.0], [239.0, 5598.0], [236.0, 1149.0], [234.0, 1141.0], [233.0, 1142.0], [232.0, 1596.5], [247.0, 1130.0], [245.0, 1134.0], [243.0, 1129.0], [242.0, 1127.0], [240.0, 1135.0], [254.0, 1126.0], [253.0, 1130.5], [251.0, 1127.6666666666667], [250.0, 1126.0], [249.0, 1136.0], [248.0, 1138.25], [270.0, 1128.857142857143], [271.0, 2043.0], [269.0, 1135.5], [259.0, 1138.6666666666667], [257.0, 1132.6666666666667], [256.0, 1128.0], [267.0, 1127.0], [266.0, 1127.0], [265.0, 1142.0], [263.0, 1133.5], [261.0, 1126.5], [260.0, 1129.5], [286.0, 1128.6666666666667], [285.0, 1139.0], [283.0, 1129.6666666666667], [281.0, 1129.0], [280.0, 1129.5], [278.0, 1144.0], [277.0, 1135.25], [276.0, 1136.0], [275.0, 1129.75], [274.0, 1130.0], [302.0, 1130.0], [303.0, 1124.0], [301.0, 1131.6666666666667], [299.0, 1135.25], [298.0, 1131.5], [297.0, 1130.0], [295.0, 1131.0], [293.0, 1128.5], [290.0, 1127.6666666666665], [289.0, 1135.0], [288.0, 1148.0], [307.0, 1137.5], [318.0, 1132.0], [319.0, 1127.5], [316.0, 1135.0], [314.0, 1126.5], [312.0, 1130.0], [311.0, 1129.5], [309.0, 1130.5], [305.0, 1142.0], [304.0, 1141.0], [335.0, 1132.6], [332.0, 1132.5], [331.0, 1135.0], [330.0, 1131.0], [326.0, 1132.0], [323.0, 1125.0], [322.0, 1134.0], [321.0, 1135.0], [350.0, 1131.0], [351.0, 1134.0], [348.0, 1131.5], [339.0, 1125.0], [338.0, 1133.5], [347.0, 1134.5], [346.0, 1132.0], [344.0, 1124.0], [343.0, 1133.0], [342.0, 1133.0], [340.0, 1127.0], [365.0, 1132.5], [367.0, 1126.0], [364.0, 1129.0], [363.0, 1132.6666666666667], [359.0, 1129.4], [357.0, 1134.0], [356.0, 1127.5], [354.0, 1130.0], [353.0, 1132.5], [381.0, 1131.0], [382.0, 1125.0], [380.0, 1124.0], [379.0, 1129.0], [376.0, 1128.0], [373.0, 1130.6666666666667], [372.0, 1133.0], [371.0, 1123.0], [369.0, 1130.2], [399.0, 1126.0], [397.0, 1126.5], [394.0, 1130.0], [392.0, 1128.3333333333333], [390.0, 1132.0], [389.0, 1124.0], [388.0, 1127.5], [385.0, 1130.5], [384.0, 1133.0], [403.0, 1127.5], [415.0, 1122.0], [412.0, 1122.25], [410.0, 1123.0], [409.0, 1127.0], [407.0, 1122.0], [406.0, 1126.0], [405.0, 1127.0], [402.0, 1130.0], [401.0, 1126.0], [400.0, 1126.0], [429.0, 1114.0], [430.0, 1111.0], [428.0, 1118.0], [427.0, 1121.0], [426.0, 1115.0], [425.0, 1121.0], [423.0, 1119.5], [421.0, 1122.5], [419.0, 1120.0], [418.0, 1124.0], [417.0, 1121.0], [446.0, 1099.3333333333333], [447.0, 1103.0], [445.0, 1102.0], [443.0, 1104.0], [442.0, 1104.0], [439.0, 1106.6666666666667], [437.0, 1107.6], [435.0, 1113.0], [432.0, 1113.5], [462.0, 1966.0], [463.0, 2376.0], [461.0, 1950.0], [460.0, 2407.0], [459.0, 8673.0], [458.0, 1095.0], [457.0, 1093.0], [456.0, 1096.0], [455.0, 1096.25], [451.0, 1100.0], [450.0, 1099.6666666666667], [448.0, 1100.0], [454.0, 1097.5], [477.0, 1793.0], [478.0, 1790.0], [476.0, 1797.0], [467.0, 1913.0], [466.0, 1923.0], [465.0, 1920.0], [464.0, 1940.0], [475.0, 1799.0], [474.0, 1802.0], [473.0, 1812.0], [472.0, 1854.0], [471.0, 3892.5], [469.0, 1894.0], [468.0, 2341.0], [494.0, 5300.0], [495.0, 1753.0], [493.0, 1766.0], [492.0, 1754.0], [491.0, 1754.0], [490.0, 1780.0], [489.0, 1766.0], [488.0, 1769.0], [487.0, 1763.0], [480.0, 1790.0], [483.0, 3537.5], [481.0, 1786.0], [486.0, 5276.0], [485.0, 1780.0], [484.0, 1769.0], [511.0, 1749.5], [510.0, 1749.0], [508.0, 1757.5], [506.0, 1751.0], [504.0, 1754.4], [499.0, 1755.0], [498.0, 1754.0], [496.0, 1751.0], [518.0, 5333.0], [536.0, 1748.5], [534.0, 1751.0], [526.0, 1749.0], [560.0, 1740.0], [570.0, 1738.0], [562.0, 1752.0], [558.0, 1736.0], [544.0, 1748.0], [548.0, 1739.0], [552.0, 1742.2], [582.0, 1736.0], [604.0, 1752.0], [594.0, 1737.0], [606.0, 1751.0], [592.0, 2178.0], [580.0, 1743.6666666666667], [578.0, 1737.5], [576.0, 1742.5], [590.0, 1751.5], [586.0, 1736.0], [584.0, 1741.0], [596.0, 1733.0], [638.0, 1739.0], [614.0, 1733.0], [630.0, 1737.0], [628.0, 1734.5], [620.0, 1731.5], [618.0, 1739.0], [616.0, 1740.75], [612.0, 1733.0], [664.0, 1724.6666666666667], [670.0, 2161.0], [668.0, 1723.25], [666.0, 1730.0], [646.0, 1732.0], [644.0, 1730.625], [654.0, 1738.5], [652.0, 1736.0], [662.0, 1724.5], [656.0, 1723.0], [698.0, 1726.0], [696.0, 1720.0], [702.0, 1725.0], [676.0, 1730.0], [684.0, 1727.5], [682.0, 2154.0], [680.0, 1728.0], [690.0, 1942.0], [688.0, 1732.0], [728.0, 1899.0], [734.0, 2108.0], [720.0, 1700.0], [730.0, 1678.0], [708.0, 1714.5], [706.0, 1723.5], [718.0, 1711.0], [714.0, 2143.0], [712.0, 2147.0], [726.0, 2909.6666666666665], [722.0, 1693.0], [764.0, 1501.0], [752.0, 1667.0], [754.0, 2083.0], [756.0, 1608.0], [766.0, 8150.0], [762.0, 1497.0], [760.0, 1555.0], [736.0, 1680.0], [738.0, 1683.0], [742.0, 1681.5], [740.0, 1678.5], [750.0, 1675.0], [748.0, 1672.0], [758.0, 1578.0], [774.0, 1374.0], [784.0, 1781.0], [786.0, 1775.0], [796.0, 1741.5], [772.0, 1372.0], [770.0, 1410.0], [768.0, 1425.0], [782.0, 1366.6666666666667], [778.0, 1374.5], [790.0, 1763.5], [788.0, 1338.0], [804.0, 1236.0], [800.0, 1694.0], [810.0, 9440.0], [808.0, 1190.0], [806.0, 1231.0], [802.0, 1269.0], [844.0, 1606.0], [890.0, 1158.3333333333333], [892.0, 1161.0], [888.0, 1157.0], [876.0, 1151.0], [872.0, 1164.0], [886.0, 1155.3333333333333], [882.0, 1166.0], [880.0, 1148.0], [920.0, 1145.5], [924.0, 1150.0], [926.0, 1151.6666666666667], [922.0, 1155.5], [898.0, 1148.0], [896.0, 1152.5], [910.0, 1151.75], [906.0, 1158.0], [912.0, 1156.5], [954.0, 1150.0], [958.0, 1150.75], [932.0, 1163.0], [934.0, 1147.0], [942.0, 1153.0], [940.0, 1148.0], [936.0, 1147.0], [950.0, 1155.0], [948.0, 1144.0], [946.0, 1152.0], [978.0, 1144.0], [984.0, 1141.6666666666667], [964.0, 1142.5], [970.0, 1146.0], [980.0, 1136.3333333333333], [976.0, 1143.0], [1018.0, 1127.0], [1010.0, 1127.0], [1008.0, 1127.5], [1020.0, 1119.5], [1016.0, 1125.0], [992.0, 1134.0], [994.0, 1131.0], [1004.0, 1132.0], [1014.0, 1125.0], [1036.0, 1113.0], [1064.0, 1097.0], [1084.0, 1362.5], [1076.0, 1442.0], [1032.0, 1120.0], [1028.0, 1119.0], [1052.0, 1108.3333333333333], [1048.0, 1107.5], [1068.0, 1097.0], [1116.0, 1213.0], [1088.0, 4437.5], [1092.0, 2705.0], [1108.0, 1216.0], [1104.0, 1239.0], [1100.0, 1264.0], [1264.0, 1181.25], [1248.0, 1461.6], [1272.0, 1177.0], [1268.0, 1181.0], [1228.0, 1191.0], [1224.0, 2589.0], [1244.0, 2583.0], [1240.0, 1188.0], [1232.0, 1653.0], [1328.0, 1176.0], [1332.0, 1170.0], [1316.0, 1176.0], [1340.0, 1175.0], [1312.0, 1174.0], [1292.0, 1176.0], [1284.0, 1179.0], [1280.0, 2123.6666666666665], [1308.0, 1175.0], [1304.0, 1174.0], [1300.0, 1178.0], [1324.0, 1175.0], [1376.0, 1177.0], [1384.0, 1171.0], [1404.0, 1169.25], [1388.0, 1166.0], [1380.0, 1167.0], [1372.0, 1168.5], [1344.0, 1173.0], [1356.0, 1170.0], [1360.0, 1172.6666666666667], [1416.0, 1167.0], [1468.0, 5928.5], [1464.0, 1158.0], [1420.0, 1164.6666666666667], [1412.0, 1166.0], [1408.0, 1167.0], [1432.0, 2564.0], [1428.0, 1166.0], [1452.0, 1166.0], [1448.0, 5076.5], [1440.0, 1164.0], [1520.0, 1153.5], [1532.0, 1148.0], [1504.0, 1157.5], [1524.0, 1152.3333333333333], [1484.0, 1157.0], [1476.0, 1158.0], [1472.0, 1161.0], [1500.0, 1157.5], [1488.0, 1155.0], [1512.0, 1153.4], [1588.0, 1134.5], [1576.0, 1139.0], [1596.0, 1132.0], [1568.0, 1141.0], [1536.0, 1147.0], [1540.0, 1149.0], [1544.0, 1147.0], [1548.0, 1147.0], [1580.0, 1138.0], [1660.0, 1094.5], [1652.0, 1100.0], [1612.0, 1124.0], [1600.0, 1131.5], [1720.0, 1754.0], [1704.0, 2105.0], [1696.0, 2114.0], [1700.0, 2117.0], [1676.0, 2188.0], [1672.0, 2252.0], [1668.0, 3449.0], [1664.0, 8843.0], [1692.0, 8567.0], [1684.0, 2135.0], [1680.0, 2143.0], [1708.0, 3660.0], [1780.0, 1683.0], [1788.0, 2421.0], [1760.0, 1696.5], [1768.0, 1720.0], [1776.0, 1700.0], [1740.0, 2072.0], [1732.0, 1716.0], [1728.0, 2860.0], [1756.0, 1704.0], [1752.0, 2251.5], [1772.0, 1708.0], [1844.0, 1626.0], [1848.0, 2745.5], [1832.0, 1651.0], [1828.0, 1669.0], [1836.0, 1640.0], [1840.0, 1639.0], [1804.0, 1681.0], [1800.0, 1682.0], [1792.0, 1690.0], [1820.0, 1661.0], [1812.0, 1688.0], [1904.0, 1551.0], [1888.0, 1572.5], [1896.0, 1582.6666666666667], [1908.0, 1520.0], [1864.0, 1613.0], [1860.0, 1615.0], [1856.0, 1629.0], [1884.0, 2699.0], [1880.0, 1573.0], [1876.0, 2711.0], [1872.0, 1599.0], [1976.0, 1485.0], [1952.0, 1521.5], [1960.0, 2055.0], [1980.0, 1870.6666666666667], [1972.0, 1492.0], [1968.0, 1496.0], [1928.0, 1516.0], [1924.0, 1515.5], [1920.0, 1536.0], [1948.0, 1498.0], [1940.0, 2068.5], [1936.0, 1507.0], [1996.0, 1867.6666666666667], [2040.0, 1480.0], [2020.0, 1484.0], [2028.0, 1476.5], [1992.0, 2324.5], [1988.0, 2611.0], [2004.0, 1485.0], [2000.0, 2048.0], [2168.0, 1393.0], [2152.0, 1418.0], [2112.0, 2567.0], [2120.0, 2844.5], [2128.0, 9570.0], [2136.0, 2548.0], [2160.0, 1407.0], [2144.0, 1428.0], [2048.0, 1498.0], [2056.0, 2593.0], [2072.0, 1481.0], [2104.0, 1497.0], [2096.0, 1463.0], [2088.0, 4680.5], [2080.0, 2028.5], [2280.0, 1124.0], [2256.0, 1122.0], [2296.0, 1681.0], [2288.0, 1129.0], [2272.0, 1128.4], [2200.0, 2939.0], [2192.0, 2950.0], [2184.0, 3001.0], [2176.0, 3070.0], [2208.0, 1139.0], [2424.0, 2454.0], [2368.0, 1106.6666666666667], [2384.0, 1105.0], [2392.0, 1100.0], [2416.0, 2644.0], [2408.0, 2150.0], [2400.0, 2159.0], [2328.0, 1130.0], [2312.0, 1133.0], [2360.0, 1118.0], [2352.0, 1125.0], [2528.0, 2036.5], [2552.0, 1756.0], [2432.0, 1827.0], [2440.0, 2334.0], [2448.0, 1958.6666666666667], [2472.0, 1778.5], [2672.0, 1732.0], [2632.0, 1750.0], [2648.0, 1750.0], [2680.0, 1731.0], [2664.0, 7041.0], [2656.0, 1742.6666666666667], [2560.0, 1758.0], [2568.0, 1759.5], [2584.0, 1758.0], [2784.0, 1851.5], [2808.0, 1949.2857142857144], [2768.0, 5925.0], [2752.0, 1680.0], [2776.0, 1794.6666666666667], [2712.0, 2260.0], [2704.0, 1726.0], [2696.0, 2004.0], [2736.0, 2233.0], [2728.0, 1688.0], [2720.0, 1706.0], [2920.0, 1558.3333333333333], [2880.0, 2844.1250000000005], [2888.0, 1744.4444444444443], [2896.0, 1748.0], [2928.0, 1295.6666666666667], [2912.0, 1109.6666666666667], [2824.0, 2101.0], [2840.0, 2086.0], [2872.0, 8529.0], [2864.0, 2071.0], [2848.0, 1976.8], [2952.0, 1280.1666666666665], [3000.0, 2245.1462239370035], [2960.0, 1269.0], [2968.0, 1275.8333333333333], [2992.0, 1261.0], [2984.0, 1257.0], [2976.0, 1263.5], [2153.0, 1417.0], [2169.0, 1408.0], [2129.0, 1441.0], [2161.0, 1418.0], [2145.0, 1437.0], [2057.0, 2025.5], [2065.0, 2030.5], [2081.0, 1458.0], [2297.0, 1131.0], [2289.0, 1133.0], [2201.0, 2285.0], [2193.0, 2965.0], [2185.0, 2983.0], [2177.0, 2479.0], [2409.0, 2151.5], [2417.0, 2095.0], [2425.0, 1905.0], [2369.0, 1103.0], [2377.0, 1106.0], [2393.0, 1098.0], [2401.0, 2153.0], [2329.0, 1129.0], [2321.0, 1133.0], [2313.0, 1123.0], [2305.0, 1133.5], [2345.0, 1128.0000000000002], [2337.0, 1132.6666666666667], [2537.0, 1775.0], [2545.0, 1940.0], [2553.0, 1896.5], [2505.0, 1762.0], [2433.0, 1808.0], [2441.0, 1804.0], [2449.0, 1790.0], [2457.0, 1783.0], [2481.0, 2041.5], [2473.0, 1762.0], [2465.0, 2053.0], [2665.0, 2009.0], [2681.0, 1736.0], [2625.0, 1851.6], [2641.0, 1922.6666666666667], [2561.0, 1749.0], [2577.0, 1766.0], [2617.0, 1744.5], [2601.0, 1747.5], [2809.0, 2107.0], [2801.0, 1977.0], [2753.0, 1697.0], [2761.0, 1682.5], [2769.0, 2137.5], [2777.0, 2139.6666666666665], [2793.0, 1981.25], [2785.0, 1939.0], [2713.0, 1711.0], [2705.0, 1716.0], [2697.0, 1741.0], [2745.0, 2229.0], [2729.0, 2236.0], [2721.0, 1706.0], [2921.0, 4026.0], [2881.0, 1883.5714285714284], [2889.0, 1359.0], [2897.0, 1774.0], [2905.0, 1396.0], [2929.0, 1299.3333333333333], [2913.0, 1105.0], [2817.0, 1758.0], [2825.0, 1992.2], [2833.0, 1982.0], [2841.0, 2090.0], [2873.0, 1702.3333333333333], [2865.0, 1888.8333333333335], [2857.0, 1805.0], [2849.0, 1718.3333333333333], [2985.0, 1275.0], [2977.0, 1270.5], [1077.0, 9241.0], [1085.0, 1348.0], [1065.0, 1100.0], [1081.0, 1391.5], [1073.0, 1095.3333333333333], [1037.0, 1114.0], [1033.0, 1115.0], [1029.0, 1119.0], [1025.0, 1117.6666666666667], [1053.0, 1104.6666666666667], [1049.0, 1106.5], [1045.0, 1108.0], [1097.0, 1993.0], [1109.0, 1213.0], [1105.0, 1234.0], [1101.0, 9096.0], [1093.0, 7547.0], [1089.0, 1315.0], [1265.0, 1537.0], [1253.0, 1181.0], [1229.0, 3259.0], [1225.0, 2596.0], [1245.0, 1189.5], [1261.0, 1184.0], [1257.0, 1182.0], [1329.0, 1174.0], [1341.0, 1171.0], [1313.0, 1184.0], [1317.0, 1174.25], [1337.0, 1173.5], [1281.0, 1177.3333333333333], [1285.0, 9010.0], [1289.0, 1179.6666666666667], [1293.0, 1180.0], [1309.0, 1176.0], [1325.0, 1171.0], [1321.0, 1174.5], [1397.0, 1165.0], [1381.0, 1169.0], [1401.0, 1171.0], [1377.0, 1172.0], [1393.0, 1168.3333333333333], [1357.0, 1174.0], [1353.0, 1171.75], [1349.0, 1347.0000000000002], [1345.0, 1177.0], [1373.0, 1171.0], [1369.0, 1867.5], [1365.0, 1175.0], [1465.0, 1164.0], [1469.0, 1162.0], [1441.0, 1164.0], [1449.0, 1164.0], [1445.0, 1160.0], [1461.0, 1160.0], [1457.0, 1161.0], [1413.0, 1164.0], [1409.0, 1165.5], [1437.0, 1166.0], [1433.0, 1161.0], [1425.0, 1165.0], [1473.0, 1162.0], [1533.0, 1152.0], [1529.0, 1149.5], [1521.0, 1150.0], [1509.0, 1156.5], [1505.0, 1156.0], [1501.0, 1154.5], [1485.0, 1159.5], [1481.0, 1159.5], [1497.0, 1157.3333333333333], [1493.0, 1155.0], [1489.0, 1158.0], [1589.0, 1135.0], [1593.0, 1135.0], [1597.0, 1133.5], [1569.0, 1140.0], [1585.0, 1138.0], [1545.0, 1145.0], [1541.0, 2561.0], [1537.0, 1150.0], [1561.0, 1145.0], [1557.0, 1144.0], [1577.0, 1138.0], [1573.0, 1139.4], [1613.0, 1124.0], [1653.0, 1098.6666666666667], [1609.0, 1127.0], [1605.0, 1126.5], [1633.0, 1109.0], [1629.0, 1111.5], [1625.0, 1113.0], [1617.0, 1119.0], [1713.0, 40.0], [1725.0, 5229.333333333333], [1701.0, 2095.0], [1717.0, 2340.0], [1665.0, 2401.0], [1669.0, 3452.0], [1673.0, 8652.0], [1677.0, 2156.0], [1689.0, 2131.0], [1681.0, 2140.0], [1709.0, 1971.0], [1705.0, 2040.0], [1777.0, 1687.0], [1781.0, 1687.0], [1741.0, 1702.0], [1737.0, 1701.5], [1733.0, 1738.0], [1729.0, 1714.0], [1745.0, 1694.0], [1773.0, 1687.5], [1769.0, 2805.0], [1845.0, 1635.0], [1853.0, 1641.5], [1829.0, 1662.0], [1825.0, 2232.5], [1833.0, 1656.0], [1837.0, 1642.0], [1841.0, 1638.0], [1801.0, 1670.3333333333333], [1797.0, 1679.5], [1793.0, 1670.0], [1821.0, 1658.0], [1817.0, 1665.0], [1813.0, 1665.0], [1809.0, 2229.5], [1917.0, 1528.5], [1893.0, 2114.5], [1897.0, 1559.0], [1901.0, 1542.5], [1913.0, 2640.0], [1905.0, 2647.0], [1869.0, 1600.0], [1865.0, 1632.0], [1861.0, 2730.0], [1857.0, 1614.0], [1885.0, 1575.5], [1881.0, 1583.0], [1877.0, 2711.0], [1873.0, 1607.0], [1973.0, 1516.5], [1953.0, 2639.0], [1957.0, 1881.6666666666667], [1965.0, 2051.0], [1969.0, 1498.0], [1933.0, 2074.5], [1929.0, 1501.0], [1921.0, 1519.0], [1949.0, 1511.0], [1941.0, 1503.0], [2033.0, 1493.5], [2045.0, 2305.0], [2017.0, 2599.0], [2025.0, 1478.25], [1997.0, 2617.0], [1989.0, 2631.0], [1985.0, 2045.5], [2009.0, 1853.3333333333333], [2162.0, 1414.0], [2170.0, 1402.0], [2122.0, 2570.0], [2130.0, 1437.0], [2138.0, 1435.0], [2058.0, 2587.0], [2074.0, 2028.0], [2106.0, 2573.5], [2098.0, 1477.0], [2090.0, 1463.6666666666667], [2202.0, 9289.0], [2258.0, 1129.0], [2266.0, 1132.6666666666667], [2282.0, 1132.0], [2210.0, 1132.0], [2194.0, 1221.0], [2186.0, 2427.0], [2178.0, 1359.0], [2426.0, 1889.0], [2378.0, 1107.0], [2386.0, 1103.5], [2394.0, 1097.0], [2418.0, 2099.0], [2410.0, 2138.0], [2306.0, 1134.0], [2362.0, 1121.0], [2354.0, 1125.6666666666667], [2346.0, 1127.0], [2338.0, 1126.0], [2546.0, 1752.0], [2514.0, 1771.5], [2434.0, 1815.0], [2442.0, 1788.0], [2458.0, 1779.5], [2666.0, 1726.0], [2674.0, 1734.0], [2642.0, 1752.0], [2650.0, 1733.0], [2658.0, 1736.0], [2562.0, 2030.0], [2586.0, 1752.5], [2618.0, 1926.3333333333333], [2610.0, 1930.6666666666667], [2594.0, 2293.5], [2714.0, 2265.0], [2786.0, 1881.5714285714284], [2794.0, 1838.5], [2762.0, 1664.0], [2770.0, 2170.0], [2778.0, 1598.0], [2698.0, 1713.0], [2746.0, 1690.5], [2738.0, 1700.0], [2730.0, 2234.0], [2722.0, 1719.0], [2938.0, 1274.0], [2922.0, 1934.5], [2882.0, 5748.0], [2890.0, 1870.0], [2898.0, 9201.0], [2906.0, 1104.0], [2930.0, 1313.0], [2914.0, 1104.0], [2818.0, 1926.6666666666667], [2826.0, 1568.0], [2834.0, 2089.0], [2842.0, 2083.0], [2866.0, 1887.1666666666665], [2858.0, 1894.6666666666667], [2850.0, 1549.0], [2994.0, 1254.5], [2962.0, 1282.6666666666667], [2970.0, 1269.857142857143], [2978.0, 1263.0], [2163.0, 1408.0], [2171.0, 2522.0], [2115.0, 2210.6666666666665], [2123.0, 4663.5], [2131.0, 1426.0], [2139.0, 1432.0], [2155.0, 1410.0], [2147.0, 1981.0], [2059.0, 1478.0], [2099.0, 1456.0], [2091.0, 1469.0], [2083.0, 1470.5], [2275.0, 1133.0], [2291.0, 1130.8], [2203.0, 9294.0], [2195.0, 2341.0], [2187.0, 1305.0], [2179.0, 1366.0], [2419.0, 2609.0], [2427.0, 12394.0], [2371.0, 1111.0], [2387.0, 1103.0], [2395.0, 1097.6666666666667], [2411.0, 2154.0], [2403.0, 2155.0], [2331.0, 1130.6666666666667], [2315.0, 1125.0], [2363.0, 1111.0], [2355.0, 1119.0], [2339.0, 1129.0], [2539.0, 1754.0], [2555.0, 1761.0], [2507.0, 1898.5], [2515.0, 1763.0], [2531.0, 1758.0], [2491.0, 1757.0], [2435.0, 1794.0], [2443.0, 2335.0], [2451.0, 2047.5], [2475.0, 1767.0], [2675.0, 1723.0], [2635.0, 1744.0], [2651.0, 1735.0], [2683.0, 2271.5], [2667.0, 1726.0], [2659.0, 1739.0], [2571.0, 1773.0], [2579.0, 2034.5], [2619.0, 2017.5], [2603.0, 2291.0], [2595.0, 1749.5], [2803.0, 1785.4], [2811.0, 2108.5], [2755.0, 1686.0], [2763.0, 2215.0], [2771.0, 2166.0], [2779.0, 1582.0], [2795.0, 2004.2], [2787.0, 1798.0], [2707.0, 2004.5], [2691.0, 2002.3333333333333], [2747.0, 1683.0], [2731.0, 2233.0], [2723.0, 1717.0], [2923.0, 2450.0], [2931.0, 1281.0], [2883.0, 1841.6666666666667], [2891.0, 1844.3333333333333], [2899.0, 1737.0], [2907.0, 1105.0], [2915.0, 1188.8333333333335], [2827.0, 1687.5], [2835.0, 2091.0], [2843.0, 1721.5], [2875.0, 2063.0], [2867.0, 1883.6666666666667], [2859.0, 2073.5], [2955.0, 1269.6666666666667], [2963.0, 1278.2], [2971.0, 1265.5], [2987.0, 1301.5], [2979.0, 1281.25], [541.0, 1742.5], [539.0, 1749.0], [531.0, 1753.5], [527.0, 1745.0], [523.0, 1743.0], [515.0, 1746.0], [513.0, 1748.0], [571.0, 1734.0], [573.0, 1744.3333333333333], [569.0, 1739.0], [565.0, 1743.0], [563.0, 1738.5], [545.0, 1746.0], [549.0, 1738.0], [557.0, 1740.0], [555.0, 1749.5], [601.0, 1955.0], [607.0, 1734.6666666666667], [593.0, 1730.0], [605.0, 1741.0], [583.0, 1741.2], [577.0, 1737.0], [587.0, 1747.0], [585.0, 1744.0], [599.0, 1736.0], [597.0, 1738.25], [639.0, 1738.0], [631.0, 1740.0], [611.0, 1754.0], [647.0, 1730.0], [671.0, 1728.0], [645.0, 1726.0], [643.0, 1840.5], [641.0, 1731.0], [649.0, 1876.0], [659.0, 1871.6666666666667], [657.0, 1748.0], [679.0, 1737.0], [701.0, 1932.5], [699.0, 1717.0], [697.0, 1720.0], [687.0, 1942.5], [673.0, 1870.6666666666667], [675.0, 1739.0], [677.0, 1737.0], [685.0, 1725.0], [681.0, 1734.0], [693.0, 1733.5], [691.0, 1734.0], [711.0, 1719.5], [729.0, 2111.0], [721.0, 2122.0], [733.0, 1682.0], [709.0, 1716.0], [707.0, 1726.0], [705.0, 1720.0], [719.0, 1700.0], [717.0, 2828.0], [715.0, 2132.0], [713.0, 1721.0], [723.0, 1685.0], [765.0, 1467.0], [767.0, 1412.0], [753.0, 8334.0], [755.0, 1605.0], [757.0, 1601.0], [763.0, 3324.0], [761.0, 3339.0], [751.0, 1660.0], [737.0, 1684.0], [749.0, 1670.0], [747.0, 2580.0], [745.0, 6219.0], [759.0, 1993.0], [795.0, 1745.0], [797.0, 1740.0], [787.0, 1768.0], [799.0, 1516.0], [785.0, 1350.0], [793.0, 1541.0], [775.0, 1365.0], [773.0, 1364.0], [771.0, 1396.0], [769.0, 1842.0], [783.0, 1353.0], [779.0, 1374.0], [777.0, 1371.0], [791.0, 1751.0], [811.0, 1172.0], [801.0, 1269.0], [809.0, 1625.0], [807.0, 1638.0], [805.0, 1669.0], [803.0, 1683.0], [871.0, 12108.0], [893.0, 1159.5], [891.0, 1148.0], [889.0, 1151.0], [879.0, 1154.0], [869.0, 1166.0], [877.0, 1157.0], [875.0, 3000.0], [873.0, 1167.0], [883.0, 1155.0], [903.0, 1150.8], [923.0, 1160.0], [901.0, 1150.0], [899.0, 1147.3333333333333], [907.0, 1153.75], [919.0, 1147.0], [917.0, 1156.5], [915.0, 1153.0], [931.0, 1158.0], [947.0, 1153.0], [959.0, 1149.0], [955.0, 1144.0], [943.0, 1145.5], [929.0, 1155.25], [933.0, 1150.0], [935.0, 1145.0], [941.0, 1155.0], [939.0, 1153.0], [937.0, 1149.0], [951.0, 1149.0], [945.0, 1148.6666666666667], [963.0, 1144.75], [991.0, 1141.0], [987.0, 1139.25], [967.0, 1145.0], [961.0, 1152.0], [975.0, 1143.25], [973.0, 1148.0], [971.0, 1143.0], [969.0, 1137.5], [983.0, 1141.0], [981.0, 1145.0], [977.0, 1138.0], [999.0, 1134.3333333333333], [1021.0, 1120.0], [1023.0, 1116.6666666666667], [1017.0, 1128.0], [1007.0, 1127.0], [993.0, 1136.0], [995.0, 1133.0], [997.0, 1139.5], [1005.0, 1130.5], [1001.0, 1133.1666666666665], [1015.0, 1125.5], [1013.0, 1125.0], [1011.0, 1120.0], [1078.0, 2805.0], [1082.0, 2772.0], [1062.0, 1102.0], [1058.0, 1103.4], [1074.0, 4641.0], [1030.0, 1117.5], [1026.0, 1116.0], [1046.0, 1103.5], [1042.0, 1113.0], [1070.0, 1096.25], [1066.0, 1100.5], [1094.0, 1290.0], [1110.0, 1213.0], [1090.0, 1313.0], [1106.0, 1222.0], [1102.0, 1249.0], [1098.0, 1273.0], [1270.0, 1182.0], [1274.0, 1180.0], [1278.0, 1185.5], [1254.0, 1673.375], [1250.0, 1182.0], [1266.0, 2585.0], [1226.0, 1188.0], [1222.0, 1190.5], [1242.0, 1185.0], [1262.0, 1186.0], [1258.0, 1181.5], [1286.0, 1177.5], [1338.0, 1171.5], [1314.0, 1175.0], [1334.0, 1176.5], [1282.0, 1178.5], [1310.0, 1174.0], [1306.0, 1174.5], [1302.0, 1176.0], [1298.0, 1177.0], [1326.0, 1175.0], [1322.0, 1174.0], [1386.0, 1169.0], [1390.0, 5085.0], [1382.0, 1174.0], [1354.0, 1172.6666666666667], [1346.0, 1170.0], [1358.0, 1173.0], [1366.0, 1174.5], [1462.0, 1162.0], [1446.0, 1164.6666666666667], [1418.0, 1170.0], [1410.0, 1165.0], [1438.0, 1162.5], [1434.0, 1164.0], [1426.0, 1168.0], [1454.0, 1162.0], [1442.0, 1162.0], [1522.0, 1151.0], [1534.0, 1150.0], [1530.0, 1146.0], [1526.0, 1150.6666666666667], [1486.0, 1157.0], [1482.0, 1157.5], [1478.0, 1159.25], [1474.0, 1162.0], [1494.0, 1157.6666666666667], [1490.0, 1158.5], [1518.0, 1151.5], [1586.0, 1138.0], [1594.0, 1132.0], [1566.0, 1142.5], [1538.0, 1146.0], [1542.0, 1148.0], [1546.0, 1148.0], [1558.0, 1140.0], [1554.0, 1144.6], [1582.0, 1135.5], [1578.0, 1140.0], [1574.0, 1139.0], [1570.0, 1138.0], [1662.0, 1093.4], [1650.0, 1099.5], [1646.0, 1102.6666666666667], [1642.0, 1104.3333333333333], [1638.0, 1106.5], [1634.0, 1108.0], [1630.0, 1111.0], [1614.0, 1122.5], [1610.0, 1124.6666666666667], [1606.0, 1128.3333333333333], [1602.0, 1130.0], [1618.0, 1118.0], [1718.0, 2870.0], [1722.0, 1735.0], [1726.0, 1726.0], [1698.0, 2114.5], [1702.0, 2079.0], [1714.0, 1870.0], [1678.0, 2148.0], [1674.0, 8654.0], [1670.0, 2313.0], [1694.0, 2119.5], [1682.0, 2133.0], [1710.0, 3613.0], [1706.0, 2018.0], [1782.0, 1688.0], [1778.0, 1698.0], [1790.0, 1679.3333333333333], [1766.0, 1687.0], [1762.0, 1701.0], [1770.0, 1702.0], [1786.0, 1676.0], [1742.0, 1697.0], [1734.0, 1702.0], [1730.0, 1719.0], [1758.0, 2807.0], [1750.0, 1695.0], [1746.0, 2252.0], [1774.0, 2801.0], [1842.0, 1626.0], [1830.0, 2771.0], [1850.0, 2187.5], [1826.0, 1668.0], [1834.0, 2770.0], [1838.0, 1639.0], [1802.0, 1672.0], [1794.0, 2796.0], [1822.0, 1658.0], [1818.0, 2782.0], [1810.0, 1664.0], [1914.0, 1523.5], [1906.0, 1527.0], [1890.0, 2143.5], [1902.0, 1545.0], [1918.0, 2633.0], [1910.0, 1526.5], [1870.0, 2720.0], [1858.0, 1630.0], [1886.0, 2135.5], [1878.0, 1612.0], [1974.0, 1498.0], [1954.0, 1508.0], [1958.0, 2617.0], [1966.0, 1513.0], [1982.0, 2603.0], [1970.0, 1496.0], [1934.0, 2084.5], [1930.0, 2631.0], [1926.0, 2070.5], [1922.0, 2627.0], [1950.0, 2621.0], [1938.0, 1524.0], [2018.0, 1482.0], [2038.0, 2597.0], [2022.0, 2068.0], [2034.0, 1484.0], [1994.0, 1494.0], [2006.0, 2046.0], [2002.0, 2042.5], [2076.0, 2866.5], [2132.0, 1444.0], [2172.0, 1393.0], [2148.0, 1442.0], [2052.0, 2599.5], [2100.0, 2593.0], [2092.0, 1476.0], [2084.0, 2584.0], [2292.0, 1133.0], [2252.0, 1126.0], [2260.0, 1128.5], [2300.0, 1132.0], [2276.0, 1136.0], [2204.0, 10248.0], [2188.0, 1271.0], [2180.0, 1385.0], [2412.0, 2150.0], [2420.0, 2036.0], [2380.0, 1105.6666666666667], [2428.0, 2403.0], [2372.0, 1109.0], [2388.0, 1098.0], [2332.0, 1130.0], [2324.0, 1124.0], [2316.0, 1128.6], [2308.0, 1136.5], [2364.0, 1114.0], [2348.0, 1128.5], [2340.0, 1128.3333333333333], [2540.0, 1757.0], [2532.0, 1892.25], [2500.0, 1759.0], [2524.0, 1758.6666666666667], [2436.0, 1810.0], [2452.0, 1794.0], [2484.0, 2041.0], [2676.0, 1722.0], [2684.0, 1725.0], [2628.0, 1927.3333333333333], [2636.0, 2011.0], [2644.0, 1919.0], [2652.0, 1738.0], [2668.0, 1743.0], [2660.0, 1724.0], [2564.0, 1760.0], [2580.0, 1746.0], [2588.0, 1768.0], [2612.0, 1751.0], [2596.0, 1738.0], [2804.0, 2108.0], [2756.0, 2226.0], [2764.0, 1658.0], [2772.0, 2029.5], [2780.0, 2128.0], [2812.0, 1632.375], [2796.0, 2114.0], [2788.0, 2112.5], [2716.0, 1988.0], [2700.0, 2272.0], [2732.0, 1682.0], [2724.0, 1694.0], [2924.0, 2956.75], [2884.0, 1834.3333333333333], [2892.0, 1814.0], [2900.0, 1729.0], [2908.0, 1116.0], [2916.0, 1102.0], [2820.0, 2042.666666666667], [2828.0, 1945.7142857142858], [2836.0, 1781.2857142857142], [2844.0, 2086.0], [2876.0, 3784.0000000000005], [2852.0, 1925.2857142857142], [2948.0, 1273.0], [2988.0, 1257.5], [2956.0, 1270.0], [2964.0, 1280.6], [2972.0, 1268.5], [2996.0, 1259.0], [2980.0, 1279.0], [2173.0, 3054.0], [2117.0, 1457.5], [2125.0, 2005.5], [2133.0, 2556.0], [2141.0, 2260.0], [2157.0, 2530.5], [2053.0, 2600.0], [2061.0, 2029.5], [2109.0, 1830.8333333333333], [2093.0, 1465.0], [2085.0, 1466.0], [2277.0, 1130.0], [2293.0, 1124.0], [2301.0, 1129.0], [2245.0, 1132.0], [2237.0, 1131.0], [2205.0, 2269.0], [2197.0, 1769.0], [2189.0, 2381.0], [2181.0, 9486.0], [2221.0, 1140.0], [2269.0, 1137.0], [2421.0, 9993.0], [2381.0, 1104.0], [2389.0, 1100.3333333333333], [2429.0, 2392.0], [2413.0, 2653.0], [2405.0, 2151.5], [2325.0, 1124.0], [2317.0, 1132.0], [2309.0, 1123.0], [2453.0, 2321.0], [2525.0, 2305.0], [2549.0, 1758.6666666666667], [2541.0, 2038.5], [2445.0, 2051.5], [2485.0, 2309.0], [2477.0, 2046.5], [2469.0, 1775.0], [2677.0, 1732.0], [2661.0, 2007.0], [2573.0, 1928.0], [2589.0, 2111.6666666666665], [2621.0, 1756.5], [2605.0, 2076.6], [2797.0, 1980.0], [2757.0, 2220.0], [2765.0, 1773.4], [2773.0, 1619.0], [2781.0, 1596.0], [2717.0, 1720.0], [2709.0, 1994.0], [2701.0, 1727.0], [2693.0, 1726.0], [2749.0, 1689.0], [2741.0, 2020.4], [2733.0, 1695.0], [2725.0, 1720.0], [2917.0, 1098.75], [2925.0, 1295.0], [2885.0, 2004.0], [2893.0, 1799.5], [2901.0, 5449.0], [2909.0, 1180.2222222222222], [2829.0, 2091.0], [2845.0, 1824.5], [2877.0, 2056.0], [2869.0, 1960.0], [2861.0, 2068.0], [2965.0, 1287.0], [2957.0, 1306.0], [2973.0, 1262.0], [2997.0, 1257.6666666666667], [2981.0, 1274.0], [1087.0, 1334.0], [1075.0, 1490.0], [1059.0, 1102.3333333333333], [1079.0, 1408.0], [1039.0, 1114.6666666666667], [1055.0, 1103.5], [1043.0, 1108.0], [1071.0, 1094.6], [1067.0, 1097.0], [1103.0, 1240.0], [1099.0, 2666.0], [1095.0, 1288.0], [1091.0, 1309.0], [1271.0, 1179.5], [1275.0, 1178.0], [1279.0, 1178.0], [1251.0, 2591.0], [1267.0, 1180.0], [1231.0, 2445.0], [1243.0, 1189.0], [1239.0, 1535.25], [1235.0, 2118.3333333333335], [1259.0, 1179.5], [1331.0, 1176.5], [1343.0, 1172.0], [1315.0, 1177.0], [1335.0, 1169.0], [1311.0, 1178.0], [1287.0, 1183.0], [1291.0, 1176.0], [1295.0, 3789.333333333333], [1307.0, 1179.0], [1299.0, 1879.75], [1327.0, 1172.6666666666667], [1319.0, 1171.0], [1359.0, 1171.4], [1395.0, 1168.5], [1399.0, 1868.0], [1379.0, 1170.0], [1375.0, 1171.0], [1371.0, 1171.0], [1367.0, 1170.0], [1363.0, 1170.5], [1391.0, 1170.0], [1387.0, 1168.0], [1383.0, 1167.0], [1459.0, 1161.0], [1471.0, 1160.0], [1443.0, 1163.5], [1467.0, 1163.0], [1423.0, 1168.5], [1419.0, 1166.5], [1415.0, 1869.5], [1439.0, 1164.0], [1435.0, 1160.0], [1431.0, 1165.3333333333333], [1427.0, 1164.3333333333333], [1455.0, 1163.0], [1451.0, 1164.0], [1535.0, 1151.0], [1515.0, 1153.3333333333333], [1507.0, 1155.6666666666667], [1491.0, 1156.3333333333333], [1571.0, 1141.0], [1591.0, 1134.0], [1551.0, 1146.6], [1563.0, 1142.3333333333333], [1559.0, 1145.0], [1575.0, 1139.0], [1663.0, 2463.0], [1635.0, 1107.6666666666667], [1655.0, 1098.0], [1615.0, 1119.0], [1647.0, 1102.0], [1643.0, 1104.0], [1639.0, 1105.0], [1627.0, 1113.0], [1623.0, 1114.8], [1619.0, 1117.0], [1715.0, 2927.0], [1727.0, 1736.0], [1703.0, 2076.0], [1719.0, 2860.0], [1695.0, 2120.0], [1667.0, 2378.0], [1671.0, 2257.0], [1675.0, 10348.0], [1679.0, 2143.0], [1691.0, 2123.5], [1687.0, 2130.0], [1711.0, 8370.0], [1707.0, 3132.0], [1779.0, 1686.0], [1767.0, 1695.6666666666667], [1783.0, 2803.0], [1791.0, 1678.0], [1763.0, 1685.0], [1735.0, 1700.0], [1731.0, 1715.0], [1759.0, 1687.0], [1755.0, 1693.3333333333333], [1747.0, 1693.5], [1775.0, 1690.0], [1851.0, 1619.0], [1855.0, 1618.0], [1827.0, 1663.0], [1831.0, 1667.0], [1835.0, 1643.0], [1839.0, 2750.0], [1847.0, 1644.0], [1843.0, 2755.0], [1807.0, 2049.0], [1803.0, 1682.0], [1823.0, 1664.0], [1819.0, 1671.0], [1815.0, 2785.0], [1911.0, 1551.0], [1915.0, 1542.0], [1919.0, 2647.0], [1891.0, 2686.0], [1899.0, 1561.5], [1903.0, 1540.0], [1907.0, 1536.0], [1871.0, 1628.5], [1867.0, 2164.0], [1863.0, 1613.0], [1859.0, 1610.0], [1879.0, 2698.0], [1875.0, 5676.0], [1935.0, 1539.0], [1975.0, 2607.0], [1983.0, 1859.0], [1963.0, 2622.0], [1927.0, 1512.0], [1951.0, 1501.0], [1947.0, 2442.0], [1943.0, 2072.0], [2039.0, 2030.5], [2047.0, 1474.5], [2031.0, 2033.5], [2043.0, 2044.25], [2035.0, 2600.0], [1999.0, 2599.0], [1987.0, 2629.0], [2015.0, 2328.75], [2011.0, 2047.5], [2166.0, 1412.6666666666667], [2126.0, 1450.0], [2174.0, 2492.0], [2118.0, 2563.0], [2134.0, 1464.0], [2142.0, 1439.0], [2158.0, 1415.0], [2150.0, 1979.5], [2110.0, 1459.0], [2094.0, 1463.0], [2286.0, 1135.5], [2302.0, 1130.3333333333333], [2294.0, 1138.5], [2254.0, 1136.0], [2270.0, 1135.5], [2278.0, 1133.5], [2198.0, 2317.0], [2190.0, 2355.0], [2182.0, 1356.0], [2406.0, 2146.0], [2414.0, 2104.0], [2422.0, 1963.0], [2374.0, 1107.0], [2390.0, 1101.0], [2398.0, 1450.6666666666667], [2334.0, 1128.0], [2326.0, 1127.0], [2310.0, 1138.0], [2366.0, 1474.0], [2358.0, 1121.3333333333333], [2350.0, 1127.3333333333333], [2342.0, 1126.2], [2550.0, 2300.0], [2518.0, 1768.0], [2526.0, 1752.0], [2558.0, 1758.0], [2542.0, 1765.0], [2438.0, 1803.0], [2462.0, 1774.3333333333333], [2486.0, 2034.5], [2470.0, 1766.0], [2646.0, 1913.6666666666667], [2654.0, 1740.0], [2662.0, 2009.0], [2566.0, 2027.0], [2582.0, 2020.0], [2606.0, 2109.3333333333335], [2598.0, 2018.5], [2798.0, 1841.5], [2790.0, 1578.0], [2758.0, 1681.0], [2766.0, 4319.5], [2774.0, 2195.0], [2782.0, 1717.25], [2806.0, 1841.0], [2718.0, 2256.0], [2710.0, 2261.0], [2702.0, 1727.0], [2742.0, 2231.0], [2734.0, 1697.0], [2726.0, 2244.0], [2926.0, 1287.0], [2918.0, 1417.5], [2894.0, 1800.0], [2886.0, 4973.0], [2902.0, 1240.7142857142856], [2934.0, 1274.0], [2822.0, 1829.0], [2846.0, 1716.5], [2870.0, 1895.3333333333333], [2862.0, 2171.0], [2854.0, 1924.7142857142858], [2958.0, 1271.0], [2966.0, 1268.5], [2990.0, 1259.0], [2982.0, 1265.0], [2167.0, 1413.0], [2175.0, 1394.0], [2127.0, 1473.0], [2135.0, 1439.0], [2143.0, 1431.0], [2159.0, 1404.0], [2151.0, 1404.0], [2111.0, 2582.0], [2055.0, 1479.5], [2063.0, 1474.5], [2071.0, 3005.5], [2095.0, 2577.0], [2255.0, 1150.0], [2263.0, 1129.0], [2287.0, 1131.0], [2207.0, 1143.5], [2199.0, 1201.0], [2191.0, 9370.0], [2183.0, 2456.0], [2271.0, 1127.0], [2415.0, 2114.0], [2431.0, 1832.5], [2375.0, 1107.0], [2383.0, 1105.0], [2423.0, 2472.0], [2335.0, 1130.0], [2327.0, 1132.0], [2319.0, 1134.0], [2359.0, 1113.0], [2559.0, 2303.0], [2503.0, 2040.0], [2535.0, 1775.0], [2439.0, 2337.0], [2455.0, 1776.0], [2463.0, 1764.0], [2479.0, 1770.0], [2671.0, 1725.0], [2687.0, 1723.0], [2631.0, 1739.0], [2639.0, 1916.6666666666667], [2623.0, 1741.0], [2575.0, 1753.0], [2583.0, 2301.0], [2591.0, 1860.4], [2615.0, 1740.0], [2807.0, 2112.0], [2815.0, 1831.0], [2759.0, 2222.0], [2767.0, 1664.0], [2775.0, 1612.0], [2783.0, 1845.0], [2799.0, 1933.0], [2719.0, 1725.0], [2711.0, 2266.0], [2703.0, 2268.0], [2695.0, 1728.0], [2751.0, 2222.5], [2743.0, 1683.0], [2727.0, 1708.0], [2935.0, 1310.0], [2895.0, 6551.333333333333], [2903.0, 1125.0], [2911.0, 1113.25], [2919.0, 1642.0], [2879.0, 1811.3636363636365], [2823.0, 1735.3333333333333], [2831.0, 2095.0], [2839.0, 1967.4444444444443], [2847.0, 1673.25], [2863.0, 2067.0], [2959.0, 1279.6], [2951.0, 1280.5], [2967.0, 1267.5], [2975.0, 1268.5], [2991.0, 1258.0], [2983.0, 1264.5], [1.0, 11825.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2975.0699082416295, 2236.378959332472]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 66779.95, "minX": 1.6842027E12, "maxY": 434985.15, "series": [{"data": [[1.684203E12, 303075.4166666667], [1.6842027E12, 82193.38333333333], [1.68420282E12, 407039.63333333336], [1.68420276E12, 434985.15], [1.68420294E12, 374467.3], [1.68420288E12, 403102.65]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.684203E12, 246549.15], [1.6842027E12, 66779.95], [1.68420282E12, 331664.4], [1.68420276E12, 354588.05], [1.68420294E12, 304550.6], [1.68420288E12, 328162.05]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684203E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1735.5024543599316, "minX": 1.6842027E12, "maxY": 4840.205989971545, "series": [{"data": [[1.684203E12, 2301.0548397753378], [1.6842027E12, 4840.205989971545], [1.68420282E12, 1820.6929982536556], [1.68420276E12, 2695.896021030582], [1.68420294E12, 2070.472037323187], [1.68420288E12, 1735.5024543599316]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684203E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1735.2291379405551, "minX": 1.6842027E12, "maxY": 4839.585174142829, "series": [{"data": [[1.684203E12, 2300.791909848418], [1.6842027E12, 4839.585174142829], [1.68420282E12, 1820.423051735416], [1.68420276E12, 2695.578622291384], [1.68420294E12, 2070.236330678696], [1.68420288E12, 1735.2291379405551]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684203E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 18.32044928972588, "minX": 1.6842027E12, "maxY": 1440.739260062335, "series": [{"data": [[1.684203E12, 18.32044928972588], [1.6842027E12, 1440.739260062335], [1.68420282E12, 35.977161100196504], [1.68420276E12, 41.19690666394436], [1.68420294E12, 18.866070367288465], [1.68420288E12, 24.27742540400419]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684203E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 61.0, "minX": 1.6842027E12, "maxY": 27007.0, "series": [{"data": [[1.684203E12, 19904.0], [1.6842027E12, 16638.0], [1.68420282E12, 17043.0], [1.68420276E12, 27007.0], [1.68420294E12, 11653.0], [1.68420288E12, 17223.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.684203E12, 4107.9000000000015], [1.6842027E12, 9567.0], [1.68420282E12, 3330.0], [1.68420276E12, 3547.0], [1.68420294E12, 4349.0], [1.68420288E12, 2905.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.684203E12, 8738.980000000003], [1.6842027E12, 13610.199999999992], [1.68420282E12, 4862.980000000003], [1.68420276E12, 4653.0], [1.68420294E12, 7528.780000000035], [1.68420288E12, 5832.75000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.684203E12, 5692.0], [1.6842027E12, 11207.0], [1.68420282E12, 3916.9500000000007], [1.68420276E12, 3986.0], [1.68420294E12, 5134.950000000001], [1.68420288E12, 3332.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.684203E12, 1090.0], [1.6842027E12, 1094.0], [1.68420282E12, 1089.0], [1.68420276E12, 1090.0], [1.68420294E12, 61.0], [1.68420288E12, 1088.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.684203E12, 1850.0], [1.6842027E12, 3962.0], [1.68420282E12, 1534.0], [1.68420276E12, 1571.0], [1.68420294E12, 2242.0], [1.68420288E12, 1304.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684203E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 1.0, "maxY": 10904.0, "series": [{"data": [[2.0, 2043.5], [4.0, 2270.0], [5.0, 7309.0], [7.0, 2122.0], [8.0, 5058.0], [9.0, 6799.0], [11.0, 8328.5], [12.0, 2153.0], [14.0, 5561.0], [17.0, 2824.0], [21.0, 2111.0], [23.0, 5176.5], [26.0, 5053.5], [27.0, 2947.0], [31.0, 2748.0], [34.0, 4581.5], [35.0, 2944.0], [60.0, 1778.0], [67.0, 3122.0], [66.0, 1839.5], [68.0, 2799.5], [83.0, 1103.0], [82.0, 2180.5], [84.0, 3767.5], [90.0, 1113.5], [89.0, 3856.0], [92.0, 3867.0], [106.0, 1107.0], [115.0, 2154.0], [135.0, 6904.0], [147.0, 3758.0], [160.0, 1108.0], [178.0, 4365.0], [186.0, 3192.5], [184.0, 6125.0], [215.0, 6703.0], [218.0, 1642.5], [237.0, 1573.0], [238.0, 1916.0], [236.0, 1102.0], [243.0, 1615.0], [250.0, 1806.0], [253.0, 1103.0], [273.0, 3621.0], [283.0, 1534.0], [300.0, 4010.5], [318.0, 1693.0], [315.0, 2214.0], [304.0, 3204.5], [322.0, 2501.5], [331.0, 1785.0], [341.0, 5750.0], [343.0, 1426.0], [344.0, 3028.5], [337.0, 1405.0], [361.0, 3525.0], [374.0, 1691.0], [379.0, 1102.0], [399.0, 3037.5], [409.0, 2516.0], [407.0, 1132.0], [423.0, 5421.0], [424.0, 2936.0], [428.0, 3131.5], [436.0, 1444.0], [446.0, 1621.0], [432.0, 1160.5], [448.0, 2141.5], [453.0, 1404.5], [450.0, 2929.0], [466.0, 1938.5], [468.0, 1104.0], [476.0, 1128.0], [486.0, 1783.0], [488.0, 1117.0], [502.0, 7197.5], [497.0, 1734.0], [498.0, 2112.5], [519.0, 1846.0], [534.0, 1102.0], [517.0, 3516.5], [547.0, 4261.0], [551.0, 2151.5], [571.0, 1112.0], [554.0, 1161.0], [572.0, 1103.0], [575.0, 1108.0], [562.0, 1127.0], [546.0, 1119.0], [607.0, 1122.0], [577.0, 4402.0], [589.0, 1107.0], [590.0, 1105.0], [576.0, 1106.0], [600.0, 1102.0], [602.0, 1107.0], [603.0, 1103.0], [601.0, 1110.0], [595.0, 1106.0], [605.0, 1148.0], [606.0, 1102.0], [599.0, 1105.0], [594.0, 1128.5], [592.0, 1105.5], [597.0, 1108.0], [596.0, 1102.0], [598.0, 1107.0], [632.0, 6404.5], [639.0, 1107.0], [637.0, 1129.0], [629.0, 1119.0], [635.0, 1171.0], [608.0, 1103.0], [610.0, 1102.0], [622.0, 1651.0], [618.0, 1135.5], [671.0, 3267.0], [643.0, 3371.0], [644.0, 3154.0], [664.0, 1142.0], [649.0, 2421.0], [665.0, 1134.0], [677.0, 2559.5], [691.0, 2809.0], [701.0, 1490.0], [675.0, 1105.0], [713.0, 1396.0], [706.0, 3182.5], [704.0, 1132.0], [735.0, 1113.0], [707.0, 1633.5], [718.0, 1110.0], [734.0, 2302.5], [762.0, 1955.0], [742.0, 4706.0], [754.0, 3207.0], [748.0, 1699.5], [761.0, 2065.0], [751.0, 1437.0], [756.0, 1222.0], [764.0, 2055.0], [743.0, 1130.0], [787.0, 1647.0], [776.0, 3442.5], [768.0, 1766.0], [788.0, 2253.0], [790.0, 1392.0], [791.0, 1160.0], [799.0, 3291.0], [772.0, 2466.5], [775.0, 1957.0], [786.0, 2104.5], [827.0, 3514.0], [808.0, 2169.5], [831.0, 3251.5], [825.0, 2992.0], [819.0, 1748.0], [802.0, 2175.0], [811.0, 2921.0], [828.0, 1995.5], [863.0, 1912.5], [853.0, 2612.5], [857.0, 2576.5], [837.0, 2491.0], [850.0, 1180.0], [851.0, 1979.0], [860.0, 1262.0], [862.0, 2327.0], [854.0, 2873.0], [855.0, 2490.5], [833.0, 1126.0], [835.0, 3156.0], [836.0, 1480.0], [895.0, 1947.0], [877.0, 2608.0], [869.0, 2503.5], [886.0, 1268.0], [884.0, 3182.0], [875.0, 1734.5], [883.0, 1486.0], [881.0, 1127.0], [871.0, 1608.5], [889.0, 1699.0], [894.0, 3074.0], [891.0, 3052.0], [892.0, 1417.0], [893.0, 3103.0], [899.0, 1109.0], [927.0, 1128.0], [919.0, 1334.0], [905.0, 1125.0], [904.0, 3126.0], [906.0, 3338.0], [920.0, 2315.0], [902.0, 1103.0], [903.0, 1743.0], [896.0, 2905.0], [911.0, 1320.0], [908.0, 2253.0], [924.0, 1743.5], [926.0, 1900.0], [922.0, 2236.0], [916.0, 1907.0], [959.0, 2166.0], [945.0, 2251.0], [948.0, 1433.0], [954.0, 1120.0], [957.0, 2032.0], [953.0, 3035.5], [933.0, 1871.0], [930.0, 1104.0], [956.0, 1117.0], [955.0, 2988.0], [942.0, 1122.0], [941.0, 1102.0], [936.0, 2267.5], [949.0, 1154.5], [950.0, 2256.0], [951.0, 1512.0], [958.0, 2040.0], [961.0, 2755.5], [960.0, 1107.0], [986.0, 1315.5], [964.0, 1933.0], [990.0, 1104.0], [965.0, 2026.5], [963.0, 2218.5], [975.0, 1691.0], [972.0, 2742.5], [973.0, 1102.0], [1.0, 4517.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 10.0], [11.0, 43.0], [14.0, 10904.0], [16.0, 43.5], [23.0, 10482.0], [60.0, 45.0], [82.0, 60.5], [135.0, 40.5], [160.0, 39.0], [250.0, 42.0], [315.0, 46.0], [304.0, 50.5], [399.0, 10426.0], [446.0, 60.0], [432.0, 49.5], [448.0, 162.0], [453.0, 45.0], [450.0, 5099.5], [466.0, 46.0], [468.0, 41.0], [476.0, 56.0], [488.0, 40.5], [497.0, 49.0], [517.0, 10110.0], [551.0, 58.0], [554.0, 581.0], [602.0, 44.0], [601.0, 57.5], [595.0, 53.0], [607.0, 46.0], [594.0, 52.0], [589.0, 10513.5], [600.0, 45.0], [599.0, 42.0], [639.0, 44.0], [629.0, 43.0], [608.0, 10568.0], [622.0, 50.0], [618.0, 47.0], [635.0, 40.0], [649.0, 54.5], [691.0, 10165.5], [701.0, 483.0], [735.0, 51.0], [718.0, 41.0], [754.0, 47.0], [761.0, 41.0], [762.0, 46.0], [743.0, 54.0], [790.0, 44.0], [772.0, 10316.5], [775.0, 66.5], [787.0, 40.0], [768.0, 40.0], [831.0, 51.0], [825.0, 47.0], [819.0, 49.0], [857.0, 10084.0], [863.0, 53.0], [853.0, 10170.0], [851.0, 59.0], [862.0, 43.0], [854.0, 247.0], [855.0, 52.0], [833.0, 10058.0], [835.0, 10376.0], [836.0, 10904.0], [837.0, 60.0], [894.0, 43.0], [869.0, 48.0], [886.0, 41.5], [883.0, 41.0], [881.0, 58.0], [889.0, 40.0], [884.0, 40.0], [891.0, 46.0], [893.0, 80.0], [892.0, 443.0], [899.0, 41.0], [896.0, 40.0], [908.0, 53.5], [916.0, 49.0], [922.0, 72.0], [906.0, 41.0], [904.0, 44.5], [954.0, 58.5], [959.0, 41.0], [945.0, 42.0], [957.0, 272.0], [953.0, 659.0], [930.0, 42.5], [956.0, 42.0], [942.0, 60.0], [936.0, 44.5], [958.0, 56.5], [948.0, 42.0], [950.0, 41.0], [961.0, 80.0], [964.0, 204.5], [986.0, 42.0], [990.0, 42.0], [963.0, 39.5], [975.0, 44.0], [960.0, 47.5], [973.0, 44.0], [965.0, 41.0], [972.0, 40.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 990.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 10904.0, "series": [{"data": [[2.0, 2043.5], [4.0, 2270.0], [5.0, 7309.0], [7.0, 2122.0], [8.0, 5057.5], [9.0, 6799.0], [11.0, 8328.5], [12.0, 2153.0], [14.0, 5558.0], [17.0, 2824.0], [21.0, 2111.0], [23.0, 5176.5], [26.0, 5053.5], [27.0, 2947.0], [31.0, 2747.0], [34.0, 4581.5], [35.0, 2944.0], [60.0, 1778.0], [67.0, 3122.0], [66.0, 1839.5], [68.0, 2799.5], [83.0, 1103.0], [82.0, 2180.5], [84.0, 3767.5], [90.0, 1113.5], [89.0, 3856.0], [92.0, 3867.0], [106.0, 1107.0], [115.0, 2153.0], [135.0, 6903.0], [147.0, 3758.0], [160.0, 1108.0], [178.0, 4365.0], [186.0, 3192.5], [184.0, 6125.0], [215.0, 6703.0], [218.0, 1612.0], [237.0, 1573.0], [238.0, 1915.5], [236.0, 1102.0], [243.0, 1615.0], [250.0, 1806.0], [253.0, 1102.0], [273.0, 3621.0], [283.0, 1534.0], [300.0, 4010.5], [318.0, 1693.0], [315.0, 2214.0], [304.0, 3204.0], [322.0, 2501.5], [331.0, 1785.0], [341.0, 5750.0], [343.0, 1425.0], [344.0, 3028.0], [337.0, 1405.0], [361.0, 3525.0], [374.0, 1691.0], [379.0, 1102.0], [399.0, 3037.5], [409.0, 2516.0], [407.0, 1132.0], [423.0, 5421.0], [424.0, 2936.0], [428.0, 3131.5], [436.0, 1444.0], [446.0, 1621.0], [432.0, 1160.5], [448.0, 2141.5], [453.0, 1404.0], [450.0, 2929.0], [466.0, 1938.0], [468.0, 1104.0], [476.0, 1128.0], [486.0, 1782.5], [488.0, 1117.0], [502.0, 7197.0], [497.0, 1734.0], [498.0, 2112.5], [519.0, 1846.0], [534.0, 1101.0], [517.0, 3516.0], [547.0, 4261.0], [551.0, 2151.5], [571.0, 1112.0], [554.0, 1157.0], [572.0, 1102.0], [575.0, 1108.0], [562.0, 1126.5], [546.0, 1119.0], [607.0, 1121.0], [577.0, 4402.0], [589.0, 1107.0], [590.0, 1104.0], [576.0, 1106.0], [600.0, 1101.0], [602.0, 1106.0], [603.0, 1102.0], [601.0, 1109.0], [595.0, 1106.0], [605.0, 1148.0], [606.0, 1102.0], [599.0, 1105.0], [594.0, 1128.0], [592.0, 1105.0], [597.0, 1107.0], [596.0, 1102.0], [598.0, 1107.0], [632.0, 6403.0], [639.0, 1107.0], [637.0, 1128.0], [629.0, 1119.0], [635.0, 1171.0], [608.0, 1103.0], [610.0, 1102.0], [622.0, 1651.0], [618.0, 1135.0], [671.0, 3267.0], [643.0, 3371.0], [644.0, 3154.0], [664.0, 1142.0], [649.0, 2421.0], [665.0, 1134.0], [677.0, 2559.5], [691.0, 2809.0], [701.0, 1490.0], [675.0, 1105.0], [713.0, 1396.0], [706.0, 3182.0], [704.0, 1132.0], [735.0, 1113.0], [707.0, 1633.0], [718.0, 1109.0], [734.0, 2302.0], [762.0, 1955.0], [742.0, 4706.0], [754.0, 3207.0], [748.0, 1699.5], [761.0, 2064.0], [751.0, 1437.0], [756.0, 1221.0], [764.0, 2055.0], [743.0, 1130.0], [787.0, 1647.0], [776.0, 3441.5], [768.0, 1766.0], [788.0, 2253.0], [790.0, 1392.0], [791.0, 1159.0], [799.0, 3291.0], [772.0, 2466.5], [775.0, 1957.0], [786.0, 2104.5], [827.0, 3513.0], [808.0, 2169.0], [831.0, 3251.0], [825.0, 2991.5], [819.0, 1747.5], [802.0, 2175.0], [811.0, 2921.0], [828.0, 1995.0], [863.0, 1912.5], [853.0, 2612.5], [857.0, 2576.5], [837.0, 2491.0], [850.0, 1180.0], [851.0, 1979.0], [860.0, 1262.0], [862.0, 2327.0], [854.0, 2873.0], [855.0, 2490.5], [833.0, 1126.0], [835.0, 3156.0], [836.0, 1480.0], [895.0, 1947.0], [877.0, 2607.0], [869.0, 2503.0], [886.0, 1268.0], [884.0, 3181.0], [875.0, 1734.5], [883.0, 1486.0], [881.0, 1127.0], [871.0, 1608.0], [889.0, 1699.0], [894.0, 3073.0], [891.0, 3052.0], [892.0, 1416.0], [893.0, 3103.0], [899.0, 1109.0], [927.0, 1128.0], [919.0, 1333.0], [905.0, 1124.0], [904.0, 3126.0], [906.0, 3338.0], [920.0, 2315.0], [902.0, 1103.0], [903.0, 1743.0], [896.0, 2905.0], [911.0, 1320.0], [908.0, 2252.5], [924.0, 1743.5], [926.0, 1899.5], [922.0, 2235.0], [916.0, 1907.0], [959.0, 2166.0], [945.0, 2249.0], [948.0, 1433.0], [954.0, 1119.0], [957.0, 2032.0], [953.0, 3035.5], [933.0, 1870.0], [930.0, 1103.0], [956.0, 1117.0], [955.0, 2988.0], [942.0, 1121.0], [941.0, 1102.0], [936.0, 2267.0], [949.0, 1153.0], [950.0, 2255.0], [951.0, 1512.0], [958.0, 2039.5], [961.0, 2755.0], [960.0, 1107.0], [986.0, 1315.0], [964.0, 1933.0], [990.0, 1104.0], [965.0, 2026.5], [963.0, 2218.0], [975.0, 1691.0], [972.0, 2742.0], [973.0, 1101.0], [1.0, 4517.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 0.0], [11.0, 43.0], [14.0, 10904.0], [16.0, 43.5], [23.0, 10482.0], [60.0, 45.0], [82.0, 60.5], [135.0, 40.5], [160.0, 39.0], [250.0, 42.0], [315.0, 46.0], [304.0, 50.5], [399.0, 10426.0], [446.0, 60.0], [432.0, 49.5], [448.0, 162.0], [453.0, 45.0], [450.0, 5099.5], [466.0, 46.0], [468.0, 41.0], [476.0, 56.0], [488.0, 40.5], [497.0, 49.0], [517.0, 10110.0], [551.0, 58.0], [554.0, 581.0], [602.0, 44.0], [601.0, 57.5], [595.0, 53.0], [607.0, 46.0], [594.0, 52.0], [589.0, 10513.5], [600.0, 45.0], [599.0, 42.0], [639.0, 44.0], [629.0, 43.0], [608.0, 10568.0], [622.0, 50.0], [618.0, 47.0], [635.0, 40.0], [649.0, 54.5], [691.0, 10165.5], [701.0, 483.0], [735.0, 51.0], [718.0, 41.0], [754.0, 47.0], [761.0, 41.0], [762.0, 46.0], [743.0, 54.0], [790.0, 44.0], [772.0, 10316.5], [775.0, 66.5], [787.0, 40.0], [768.0, 40.0], [831.0, 51.0], [825.0, 47.0], [819.0, 49.0], [857.0, 10084.0], [863.0, 53.0], [853.0, 10170.0], [851.0, 59.0], [862.0, 43.0], [854.0, 247.0], [855.0, 52.0], [833.0, 10058.0], [835.0, 10376.0], [836.0, 10904.0], [837.0, 60.0], [894.0, 43.0], [869.0, 48.0], [886.0, 41.5], [883.0, 41.0], [881.0, 58.0], [889.0, 40.0], [884.0, 40.0], [891.0, 46.0], [893.0, 80.0], [892.0, 443.0], [899.0, 41.0], [896.0, 40.0], [908.0, 53.5], [916.0, 49.0], [922.0, 72.0], [906.0, 41.0], [904.0, 44.5], [954.0, 58.5], [959.0, 41.0], [945.0, 42.0], [957.0, 272.0], [953.0, 659.0], [930.0, 42.5], [956.0, 42.0], [942.0, 60.0], [936.0, 44.5], [958.0, 56.5], [948.0, 42.0], [950.0, 41.0], [961.0, 80.0], [964.0, 204.5], [986.0, 42.0], [990.0, 42.0], [963.0, 39.5], [975.0, 44.0], [960.0, 47.5], [973.0, 44.0], [965.0, 41.0], [972.0, 40.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 990.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 160.0, "minX": 1.6842027E12, "maxY": 640.0, "series": [{"data": [[1.684203E12, 426.0833333333333], [1.6842027E12, 160.0], [1.68420282E12, 620.0], [1.68420276E12, 640.0], [1.68420294E12, 580.0], [1.68420288E12, 580.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684203E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6842027E12, "maxY": 648.9333333333333, "series": [{"data": [[1.68420288E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.684203E12, 453.03333333333336], [1.6842027E12, 122.98333333333333], [1.68420282E12, 607.85], [1.68420276E12, 648.9333333333333], [1.68420294E12, 559.9], [1.68420288E12, 602.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.684203E12, 0.06666666666666667], [1.68420276E12, 0.5]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.684203E12, 0.95], [1.68420282E12, 2.95], [1.68420276E12, 3.5833333333333335], [1.68420294E12, 0.9666666666666667], [1.68420288E12, 2.2]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.684203E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.9666666666666667, "minX": 1.6842027E12, "maxY": 648.9333333333333, "series": [{"data": [[1.684203E12, 453.03333333333336], [1.6842027E12, 122.98333333333333], [1.68420282E12, 607.85], [1.68420276E12, 648.9333333333333], [1.68420294E12, 559.9], [1.68420288E12, 602.15]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.684203E12, 1.0166666666666666], [1.68420282E12, 2.95], [1.68420276E12, 4.083333333333333], [1.68420294E12, 0.9666666666666667], [1.68420288E12, 2.216666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684203E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9666666666666667, "minX": 1.6842027E12, "maxY": 648.9333333333333, "series": [{"data": [[1.684203E12, 453.03333333333336], [1.6842027E12, 122.98333333333333], [1.68420282E12, 607.85], [1.68420276E12, 648.9333333333333], [1.68420294E12, 559.9], [1.68420288E12, 602.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.684203E12, 1.0166666666666666], [1.68420282E12, 2.95], [1.68420276E12, 4.083333333333333], [1.68420294E12, 0.9666666666666667], [1.68420288E12, 2.216666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.684203E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

